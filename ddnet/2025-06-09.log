00:05 < bridge> <Ewan> you'll have to send your full commands
00:05 < bridge> <Ewan> i just pulled and tried again and it worked
00:06 < bridge> <12944qwerty> literally just using this
00:07 < bridge> <12944qwerty> copied and pasted those commands
00:07 < bridge> <12944qwerty> ok i found the dlls in the build dir but they're not in the release dir where the exe is
00:10 < bridge> <Solly (bun bun)> using pipewire is about 500ms ):
00:11 < bridge> <Solly (bun bun)> better than cpp pulse
00:11 < bridge> <Solly (bun bun)> worse than js pulse
00:22 < bridge> <kebscs> https://github.com/ddnet/ddnet/pull/9733
00:22 < bridge> <kebscs> bump
00:22 < bridge> <kebscs> ready, and approved for a long time
00:22 < bridge> <kebscs> and just a client side, mod related change
00:24 < bridge> <12944qwerty> can't read cmakelists very well but it looks like it's copying the dlls? Might be looking at the wrong area though
00:24 < bridge> <12944qwerty> https://cdn.discordapp.com/attachments/293493549758939136/1381398388276461728/image.png?ex=68475f00&is=68460d80&hm=9a46eb746dfa88e3495b8c2a0fe2e3bd445adb4f498b61d13f295727b471ea63&
00:27 < bridge> <12944qwerty> lmaooo I moved the dlls from build to release manually and got this
00:27 < bridge> <12944qwerty> https://cdn.discordapp.com/attachments/293493549758939136/1381399377632952401/image.png?ex=68475fec&is=68460e6c&hm=db4b579979993e5fe3049466bacd73121b39579b601edddb083dd16390522ca5&
00:28 < bridge> <12944qwerty> https://cdn.discordapp.com/attachments/293493549758939136/1381399422503485501/image.png?ex=68475ff7&is=68460e77&hm=481be9bca665b9ae9073b00a8886f31df1396d768a483fd6474638f3b69f989d&
00:28 < bridge> <12944qwerty> lmaooo I moved the dlls from build to release manually and got this
00:28 < bridge> <12944qwerty> https://cdn.discordapp.com/attachments/293493549758939136/1381399454782984313/image.png?ex=68475fff&is=68460e7f&hm=44643eed3b9d345a7262babe2558e3431e840e5995ed0be16203d0e1f3a73797&
00:28 < bridge> <12944qwerty> https://cdn.discordapp.com/attachments/293493549758939136/1381399455525372075/image.png?ex=68475fff&is=68460e7f&hm=a6c1b4f10a5405479e9c08a3f93584703c647acd7ec3c0786c39132bf38a42b5&
00:35 < bridge> <Ewan> it can't find data dir
00:41 < bridge> <Ewan> you're right, it does
00:41 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1381402869038710915/image.png?ex=6847632d&is=684611ad&hm=ab0946282c8b235b20754b469c3fd4d56b56a69a3c59e987561a04ce768de873&
00:42 < bridge> <12944qwerty> Yup that's what i have
00:42 < bridge> <Ewan> i do not build with that flag however
00:42 < bridge> <12944qwerty> What flag
00:42 < bridge> <Ewan> PREFER_BUNDLED_LIBS
00:43 < bridge> <12944qwerty> I didn't use that flag though?
00:43 < bridge> <Ewan> this is what usually happens (i typically don't even have ddnet-libs checked out)
00:43 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1381403271628853278/image.png?ex=6847638d&is=6846120d&hm=bc43f3a0c545206e86208b06ef85e98863cf24316ea8787b078b090805befdfb&
00:43 < bridge> <Ewan> it's being set automatically because ddnet-libs is checked out
00:54 < bridge> <12944qwerty> So remove the submodules then install the ones i don't have and try again?
00:55 < bridge> <Ewan> or set the flag to false
00:55 < bridge> <Ewan> if not specifies it detects whether or not to use the bundled libs by whether they are present
00:55 < bridge> <Ewan> hence `PREFER_`
00:55 < bridge> <Ewan> but i don't know
00:55 < bridge> <Ewan> let me see why it might not be copyin
00:58 < bridge> <12944qwerty> Yeah some of them say using bundled and some saythey dont
00:58 < bridge> <12944qwerty> Sqlite3 being one of the use bundled ones
00:59 < bridge> <Ewan> i mean
01:01 < bridge> <Ewan> whether to use system or vendored libs is its own choice and there are obviously tradeoffs
01:01 < bridge> <Ewan> but it's pretty agreeably bad to mix the two
01:01 < bridge> <Ewan> so you can either set prefer bundled to true, and if the system versions are present they'll be used
01:01 < bridge> <Ewan> so you can either set prefer bundled to true, and if the system versions are not present the bundled ones will be used
01:02 < bridge> <Ewan> or you can set it to false/delete the folder, and then it should prefer the system version
01:03 < bridge> <12944qwerty> Thats whats currently happening though isn't it?
01:03 < bridge> <Ewan> yea and you're mixing the two
01:03 < bridge> <Ewan> thought it shouldnt be related to your issue
01:03 < bridge> <Ewan> it's probably better to make sure you have all the dependencies in either
01:04 < bridge> <Ewan> i obviously just install them thru msys2 and use system libs
01:04 < bridge> <Ewan> i think i can see why it's not copying over lol
01:04 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1381408686232309820/image.png?ex=68476898&is=68461718&hm=afe4021eff96c4a13be367fe5fbbe25dfe19534e1b5022e6836810ff870d1bb1&
01:05 < bridge> <Ewan> that var is not being set anywhere
01:10 < bridge> <Ewan> it should be getting set on this line
01:10 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1381410030661668946/image.png?ex=684769d8&is=68461858&hm=01a3568a8c45ca3c00fc734fcfe7224ddb56a1de6473a67bf51a289bb84ac471&
01:10 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1381410034734469121/image.png?ex=684769d9&is=68461859&hm=c36edd477c52a9df042a561168df6bb94ec9c6d30797b11ff5e981315be93f9c&
01:12 < bridge> <Ewan> only thing i can think is lib_dir is fucked up but if your others are working fine im not sure
01:12 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1381410484422447235/image.png?ex=68476a44&is=684618c4&hm=13b219aeed91143ac67095a3356d0712f38ee1ed83b1ebd46ecb1e3ec32504ff&
01:13 < bridge> <Ewan> that's the case you should be running into. `LIB_DIR` in the project root should be `windows/lib64`, so `DIR` in `set_extra_dirs_lib` should end up as `ddnet-libs/sqlite3/windows/lib64`
01:14 < bridge> <Ewan> i guess i'm not sure why it's doing this. i can't really reproduce bcs it's being copied for me
01:14 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1381411126658465823/image.png?ex=68476add&is=6846195d&hm=e540bbfe43055471b59b6d62ab99e7a36f6e09b34248918dbc4e1a7d4058a1a6&
01:14 < bridge> <Ewan> i'd say maybe it's architecture related, but i don't see how that's possible considering you do get the rest of the dlls in there
01:15 < bridge> <Ewan> gamma rays
01:15 < bridge> <Ewan> that var is not being set anywhere (false, i did not see the fn call above)
01:17 < bridge> <12944qwerty> Are you getting the dlls in the release dir?
01:19 < bridge> <Ewan> i don’t have a release dir
01:19 < bridge> <Ewan> thats a screenshot of the build dir with prefer bundled on
01:19 < bridge> <Ewan> after generate, pre build
01:19 < bridge> <12944qwerty> Right, and i get thw dlls in there too
01:19 < bridge> <12944qwerty> I think the problem is during build or post build when its not in release
01:20 < bridge> <kebscs> should cl_antiping by on by default?
01:20 < bridge> <kebscs> when it came out it was glitched, from what im reading in discord logs, but now everyone uses it
01:22 < bridge> <12944qwerty> It wasn't for me when i started
01:23 < bridge> <kebscs> yes its off by default
01:24 < bridge> <kebscs> i mean that it should be on, but it isnt and why
01:27 < bridge> <Ewan> not sqlite, i thought
01:27 < bridge> <Ewan> here it’s highlighted after presumably the same steps you’re taking
01:28 < bridge> <12944qwerty> It is there along with the other dlls in your sc
01:28 < bridge> <Ewan> what’s the issue ?
01:28 < bridge> <12944qwerty> Idk
01:28 < bridge> <Ewan> my `build` folder corresponds to CMAKE_BINARY_DIR which for you might be called release if you’re using a multi config generator or just called it that
01:28 < bridge> <12944qwerty> It wont run ddnet.exe in the release dir after build because it cant find sqlite3.dll even though the dll is in the build dir
01:29 < bridge> <Ewan> so sqlite3.dll is in build, not build/release?
01:29 < bridge> <12944qwerty> Yes
01:29 < bridge> <Ewan> mmm
01:29 < bridge> <Ewan> i was using single config so that didn’t happen
01:29 < bridge> <Ewan> not in order to avoid it, just coincidence
01:29 < bridge> <12944qwerty> Yeah the commands  you had sent had used  ninja multiconfig
01:37 < bridge> <12944qwerty> I'll try single config to see if that works
01:37 < bridge> <12944qwerty> Was there a reason for multiconfig for deving
01:38 < bridge> <12944qwerty> Was there a reason for multiconfig for devving
01:40 < bridge> <Ewan> You can generate once and build both release and debug
01:40 < bridge> <Ewan> I don’t typically use it
01:41 < bridge> <12944qwerty> Oh
02:37 < bridge> <12944qwerty> single config worked
02:39 < bridge> <Ewan> that’s worth looking into
02:39 < bridge> <Ewan> it’s funny because the dir it goes in before the target is typically none of your business/there’s nothing you can do to adjust it by normal means iirc
02:42 < bridge> <Ewan> it’s funny because you typically can’t control where in the binary dir your files are placed, unless you use a generator expression in your string literal, where the generator’s “prependage”  is overridden
02:43 < bridge> <Ewan> that may be what’s
02:45 < bridge> <Ewan> but actually i dont think that applies in this case for a few reasons
03:10 < bridge> <kebscs> what changed 19.1 to 19.2, i seem to have way less fps when 50 debug dummies connected, on same server ofc
03:10 < bridge> <kebscs> could someone test that?
03:26 < bridge> <12944qwerty> debug dummies?
03:31 < bridge> <kebscs> dbg_dummies command, basically fake players
03:32 < bridge> <12944qwerty> where do i call that, i don't see it in rcon or cmdlist
03:32 < bridge> <Ewan> it’d be f1
03:33 < bridge> <12944qwerty> i dont' see it there either
03:33 < bridge> <kebscs> rcon
03:33 < bridge> <12944qwerty> yeah it says no such command
03:35 < bridge> <kebscs> debug build only
03:35 < bridge> <12944qwerty> ah
03:36 < bridge> <Ewan> dorp
03:36 < bridge> <kebscs> ♥ twinbop ddrace testing
03:36 < bridge> <kebscs> Address: ddnet://64.225.97.84:8304
03:36 < bridge> <DDNet> 64.225.97.84:8304 is not a DDraceNetwork or Community server.
03:36 < bridge> <kebscs> you can test here
03:36 < bridge> <kebscs> it has dbg_dummies enabled
03:44 < bridge> <12944qwerty> my ears help
06:00 < bridge> <12944qwerty> how do i run the debug version in the single config? ig it runs release only
06:03 < bridge> <Ewan> read comment
06:03 < bridge> <Ewan> in original cmds
06:04 < bridge> <12944qwerty> ninja: error: 'debug/libddnet_engine_shared.a', needed by 'DDNet.exe', missing and no known rule to make it
06:04 < bridge> <Ewan> rust error
06:05 < bridge> <Ewan> check output
06:05 < bridge> <12944qwerty> isn't --fresh supposed to reset the build and target dirs
06:06 < bridge> <Ewan> probably
06:06 < bridge> <Ewan> i usually delete build
06:06 < bridge> <Ewan> if im in doubt
06:06 < bridge> <12944qwerty> it said i was using a different generator even with that so
06:06 < bridge> <12944qwerty> deleteded build lets se
06:06 < bridge> <12944qwerty> ignore my spelling
06:09 < bridge> <12944qwerty> ok how do i actually debug with this build lol
06:09 < bridge> <Ewan> it's been build with debug symbols
06:10 < bridge> <Ewan> whatever debugger you wanna use should be able to make sense of it
06:10 < bridge> <Ewan> do u know how to use gcc or lldb
06:10 < bridge> <Ewan> code-lldb plugin in vscode is good
06:10 < bridge> <Ewan> why god made me so sleepy
06:12 < bridge> <12944qwerty> thanks
06:14 < bridge> <12944qwerty> it won't stop at breakpoints-
06:14 < bridge> <12944qwerty> i'm trying to debug the server
07:16 < bridge> <qwozye> @everyone @here Бесплатный кряк фаталити чит на кс2 DLL + CFG бесплатно!!! - https://abotus.cfd 
07:16 < bridge> <qwozye> @everyone @here Free crack FATALITY cheat cs2 DLL + CFG free!!! - https://abotus.cfd
11:59 < bridge> <Solly (bun bun)> i love "remove duplicate code" then the diff makes the code bigger
11:59 < bridge> <Solly (bun bun)> the price we pay
12:00 < bridge> <Jupstar ✪> where did that happen^^
12:03 < bridge> <robyt3> It adds more code overall because of more error handling and added commands and features
12:23 < bridge> <Solly (bun bun)> always, just merge my cmakelists pr and -3000 easy
12:27 < bridge> <robyt3> Working great in my Windows 7 32 bit VM :kek:
12:27 < bridge> <robyt3> https://cdn.discordapp.com/attachments/293493549758939136/1381580520466546768/image.png?ex=684808a0&is=6846b720&hm=5fbf54cbb08b6cea2b93881f9b900eb09138b967745179f1d3a0572f7d0e350d&
12:29 < bridge> <aegisub> is that this chroma subsampling that I keep hearing about
12:29 < bridge> <aegisub> is this that chroma subsampling that I keep hearing about
12:29 < bridge> <robyt3> Somehow it can't load some string functions but then it launches anyway after this error :monkaS:
12:29 < bridge> <robyt3> https://cdn.discordapp.com/attachments/293493549758939136/1381581081345523782/image.png?ex=68480926&is=6846b7a6&hm=6efa6b741bfcfa9a50d9cdb989dd40c964d9f5675cc27e78d07cfffddd47c0e8&
12:40 < bridge> <robyt3> Fixed by install CRT, but that seems unrelated to the graphics being broken
12:44 < bridge> <patiga> It might be possible to use a Rust webassemblied Python interpreter and join it with twmap-py, sounds fun actually
12:44 < bridge> <patiga> though how would it get access to the maps?
12:45 < bridge> <robyt3> Pull from ddnet-maps periodically?
12:46 < bridge> <patiga> hm, I'd prefer to build it as a static site, however that might be unfit in this case
12:47 < bridge> <patiga> I guess it could just let the user drag-and-drop stuff in it again, a zip with all maps or simply many many files
12:47 < bridge> <patiga> not sure how much browers like ~3000 drag-and-dropped files
12:47 < bridge> <patiga> (or >2GB dropped zips)
12:48 < bridge> <patiga> I'm impressed you got it running at all, did it take a lot of debugging?
12:50 < bridge> <robyt3> The latest version "worked" immediately like this, I only want to briefly try if I could reproduce #6897
12:50 < bridge> <DDNet> https://github.com/ddnet/ddnet/issues/6897
12:51 < bridge> <robyt3> Somehow previous versions work worse though, they just don't render at all. The current version doesn't render when the console is open. Maybe we render too much in one frame for OpenGL 1.1 within the virtual machine.
12:52 < bridge> <patiga> does it output anything helpful to the console?
12:54 < bridge> <Solly (bun bun)> /ddps
12:55 < bridge> <Assa> mine were always smaller 😦
12:59 < bridge> <robyt3> Only lots of performance warnings
12:59 < bridge> <robyt3> https://cdn.discordapp.com/attachments/293493549758939136/1381588499081330741/image.png?ex=6848100e&is=6846be8e&hm=7ae752e7d33b74cb6ef49ebb799ec89754a0231462de96a13f35d3cc563e4a33&
13:00 < bridge> <Assa> is this latest master?
13:01 < bridge> <robyt3> yeah, but in a Windows 7 32 bit VM
13:02 < bridge> <Assa> I guess this breaking is not related to the Pipeline
13:03 < bridge> <robyt3> No, it breaks immediately on launch
13:08 < bridge> <Jupstar ✪> I personally would do it
13:08 < bridge> <Jupstar ✪> I dislike having to mention every file in there
13:09 < bridge> <Assa> What's the benefit of calling swap before rendering?
13:10 < bridge> <Jupstar ✪> Generally yes, you can do http queries in js.
13:10 < bridge> <Jupstar ✪> 
13:10 < bridge> <Jupstar ✪> But anyway, in worst case update the map pack on a vps or smth ^^
13:11 < bridge> <Jupstar ✪> So you are using mesa drivers for windows?
13:11 < bridge> <Jupstar ✪> It's to flush the commands
13:11 < bridge> <Jupstar ✪> to the backend
13:11 < bridge> <robyt3> It's the default of the VirtualBox guest extensions for Windows
13:11 < bridge> <Jupstar ✪> e.g. deleting the buffers
13:12 < bridge> <Jupstar ✪> Maybe try ones from the mesa github repo.. maybe the shipped ones are broken or smth
13:12 < bridge> <Assa> but shouldn't anything rendered before already be flushed? :justatest:
13:13 < bridge> <Jupstar ✪> Well in mapload you delete the previous map. Deleting this means you add commands to the command buffer
13:13 < bridge> <Jupstar ✪> and to flush this command buffer we call swap
13:14 < bridge> <Jupstar ✪> As robyte said correctly it's kinda luck dependent tho
13:14 < bridge> <Jupstar ✪> Maybe we should force swap here
13:14 < bridge> <Jupstar ✪> To make sure we free memory
13:14 < bridge> <Jupstar ✪> Well often memory is not cleared after a few frames anyway
13:14 < bridge> <Jupstar ✪> So probs not really worth it xd
13:15 < bridge> <Jupstar ✪> We actually handle out of memory. But I know from at least teero on linux that the drvier is buggy and crashes on OOM instead of cleanly handling it :/
13:16 < bridge> <Assa> Thank you, I guess it makes sense then
13:19 < bridge> <robyt3> Unfortunately Linux is buggy itself is buggy by implementing overcommit by default
13:19 < bridge> <robyt3> Unfortunately Linux is buggy itself by implementing overcommit by default
13:25 < bridge> <robyt3> Latest from GitHub seem less broken. Console and screen aspect work again. But now I have only 6 FPS.
13:25 < bridge> <robyt3> https://cdn.discordapp.com/attachments/293493549758939136/1381594981973627020/image.png?ex=68481618&is=6846c498&hm=84432a1b1b360131aaac9c4af2c8235078287b04973b538b15bb8c3d79cb0b57&
13:25 < bridge> <melon> furo: ddstats.tw is down :owo:
13:29 < bridge> <patiga> so every time you load the site, you also download the entire mappack? 😅
13:30 < bridge> <Jupstar ✪> Ah the other is hardware accelerated?
13:30 < bridge> <Jupstar ✪> Neat
13:30 < bridge> <Jupstar ✪> I think you can tell to cache it or use the local storage
13:31 < bridge> <Jupstar ✪> or indexeddb
13:35 < bridge> <patiga> interesting, had never heard of indexddb, would still be kinda wild to store 1.3GB in there, no?
13:36 < bridge> <Jupstar ✪> I dunno, it's designed for that
13:36 < bridge> <Jupstar ✪> The ppl that would use that tool probably _want_ that? xd
13:37 < bridge> <patiga> I suppose
13:37 < bridge> <patiga> very interesting
13:37 < bridge> <Jupstar ✪> Besides that the wasm thing should also have a filestorage
13:39 < bridge> <Jupstar ✪> Ok dunno, but indexeddb is defs a way
13:40 < bridge> <patiga> hm, yea that sounds like its worth a shot
13:41 < bridge> <patiga> I should probably store each map independently, to not stress the ram usage
13:41 < bridge> <Jupstar ✪> I'm ok either way
13:41 < bridge> <Jupstar ✪> I dunno who even wants to use that tool anyway xd
13:41 < bridge> <Jupstar ✪> 
13:41 < bridge> <Jupstar ✪> I sometimes wonder about certain stuff in maps
13:42 < bridge> <Jupstar ✪> But haven't heard that from others
13:42 < bridge> <patiga> is there some place where I can download the ddnet maps one-by-one (and not abusing resources?)
13:42 < bridge> <Jupstar ✪> You can download raw files in github
13:42 < bridge> <patiga> not cross-origin though, right?
13:42 < bridge> <Jupstar ✪> I dunno xd
13:42 < bridge> <Jupstar ✪> Maybe you need an extra layer yeah
13:43 < bridge> <patiga> in the end I could host the maps in gitlab actions ig, they won't hate me for 1.3GB I think
13:43 < bridge> <Jupstar ✪> Probs not
13:43 < bridge> <Jupstar ✪> I abuse the github cache more on ddnet-rs xd
13:44 < bridge> <patiga> xd how much you using?
13:44 < bridge> <Jupstar ✪> 15gb per OS
13:44 < bridge> <Jupstar ✪> 
13:44 < bridge> <Jupstar ✪> and actually it's more like 30gb, 15 is just their official limit
13:44 < bridge> <patiga> :o
13:44 < bridge> <Jupstar ✪> It's actually only 10. but I am basically always over it
13:44 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1381599893956722728/image.png?ex=68481aab&is=6846c92b&hm=29e1b41cf91008e6fc44c97d865f36a8970e5e71955821f88b50f4c7321b4469&
13:45 < bridge> <Jupstar ✪> Depends on how active I develop
13:45 < bridge> <Jupstar ✪> I've seen it over 30GB already
13:45 < bridge> <patiga> but wait don't you hate python?
13:45 < bridge> <Jupstar ✪> Yes, why?
13:46 < bridge> <Jupstar ✪> You want to provide a rust api too?
13:46 < bridge> <Jupstar ✪> Thanks
13:46 < bridge> <Jupstar ✪> :deen_star:
13:49 < bridge> <Jupstar ✪> actually 10gb across all caches :/
13:49 < bridge> <Jupstar ✪> 
13:49 < bridge> <Jupstar ✪> it's so small xD
13:49 < bridge> <Jupstar ✪> rust builds are just so giantic 😬
13:53 < bridge> <patiga> no, I'm just wondering if the python interface is actually something you would want to use
13:54 < bridge> <Jupstar ✪> want is a broad term xD
13:55 < bridge> <Jupstar ✪> If I can easily run small checks on quads on all maps somehow that would defs help.
13:55 < bridge> <Jupstar ✪> I dunno how easily that is in whatever language
14:21 < bridge> <Solly (bun bun)> shouldnt this be packed/?
14:22 < bridge> <totar> packed how?
14:22 < bridge> <Solly (bun bun)> int jump: 1
14:22 < bridge> <totar> you mean bit packing?
14:22 < bridge> <Solly (bun bun)> yeah
14:22 < bridge> <totar> yeah it can be
14:22 < bridge> <zhn> on net its getting compressed anyway
14:22 < bridge> <totar> it's not the same
14:23 < bridge> <totar> it uses varint compression
14:23 < bridge> <Solly (bun bun)> not good right now, and packing wont negativly effect compression
14:23 < bridge> <totar> each 4 byte int becomes 1 byte, but they could be even smaller
14:23 < bridge> <Solly (bun bun)> bit*?
14:23 < bridge> <totar> no
14:23 < bridge> <totar> byte
14:23 < bridge> <Solly (bun bun)> yeah
14:23 < bridge> <learath2> Wow, that's an old msg you reacted to
14:23 < bridge> <Solly (bun bun)> yeah
14:23 < bridge> <totar> we were talking about it elsewhere
14:23 < bridge> <Solly (bun bun)> im waiting for heinrich to say "packet loss" doesnt exist
14:23 < bridge> <Solly (bun bun)> im waiting for heinrich to say "packet loss doesnt exist"
14:24 < bridge> <Solly (bun bun)> which is wrong
14:24 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1381609794716307557/image.png?ex=684823e4&is=6846d264&hm=7f96b35e782ad01ded423234e06bfc59c9004d561dca7b24bd2f62008fd77cb3&
14:24 < bridge> <Solly (bun bun)> i got better internet in october
14:24 < bridge> <Solly (bun bun)> i got better internet in september when i moved to uni
14:24 < bridge> <Solly (bun bun)> i went back home for chrimstas
14:24 < bridge> <inv41idu53rn4m3> two red days 👀
14:24 < bridge> <Solly (bun bun)> i left my computer on
14:25 < bridge> <Solly (bun bun)> afk time really shouldnt be counted
14:25 < bridge> <inv41idu53rn4m3> I'm at 3 hours uptime on my machine
14:25 < bridge> <inv41idu53rn4m3> because I got home 3 days ago
14:25 < bridge> <Dreamless> https://ddstats.tw/
14:25 < bridge> <Dreamless> anyone know who is hosting this?
14:25 < bridge> <Dreamless> or why it is down
14:25 < bridge> <inv41idu53rn4m3> I'm at 3 days uptime on my machine
14:25 < bridge> <inv41idu53rn4m3> because I got home 3 days ago
14:25 < bridge> <zhn> furo left us again
14:26 < bridge> <zhn> :troll:
14:26 < bridge> <totar> heinrich hasn't spoken in the discord in 8 months fwiw
14:26 < bridge> <totar> https://cdn.discordapp.com/attachments/293493549758939136/1381610348930666567/image.png?ex=68482468&is=6846d2e8&hm=026887a004c6379b02946f6bf3459449ebfd80b8104822a80c659cfc7eb67e5b&
14:26 < bridge> <Solly (bun bun)> if using zstd or any other zip-like thing, then we shouldnt need to optimize for 0s or anything
14:26 < bridge> <inv41idu53rn4m3> matrix or irc?
14:26 < bridge> <totar> does he speak over matrix?
14:26 < bridge> <inv41idu53rn4m3> idk
14:26 < bridge> <zhn> probably irc
14:27 < bridge> <totar> I guess I didn't notice
14:27 < bridge> <inv41idu53rn4m3> yeah he seems the IRC type :P
14:27 < bridge> <Jupstar ✪> Send him a pm if you want a response
14:27 < bridge> <Jupstar ✪> He's just not active here
14:27 < bridge> <totar> yeah ik
14:27 < bridge> <Solly (bun bun)> maybe like bit counting the compiler would understand this
14:27 < bridge> <totar> I don't need a response I was just saying he isn't active
14:28 < bridge> <Solly (bun bun)> YES YES IT IS
14:28 < bridge> <Solly (bun bun)> I COULDNT PLAY
14:28 < bridge> <Solly (bun bun)> I COULDNT PLAY BECAUSE OF PACKET LOSSS!!!
14:28 < bridge> <Jupstar ✪> on koggers i sometimes have packet loss like lags on fr servers
14:29 < bridge> <Jupstar ✪> It's not the ping bcs that is rather stable xd
14:29 < bridge> <Solly (bun bun)> i used to have 13% constant packet loss, my home internet has been changed, but i want others to not feel my pain
14:29 < bridge> <zelamusinc> is there an api of official ddnet that i can use,i want real time data,the sql file is not real time nor a thing that i can run on github
14:29 < bridge> <zhn> 13% packet loss is awful anywhere lol how did you manage to play any other game
14:30 < bridge> <Solly (bun bun)> because other games send tons of inputs every tick
14:30 < bridge> <Solly (bun bun)> or tater shall explain it better or see the video which i learnt baout this
14:31 < bridge> <zhn> anytime i hear about N% constant packet loss first thing i want to do is to check my cables and my isp's engineer's hands who connected me to isp box xd
14:31 < bridge> <totar> https://github.com/ddnet/ddnet/pull/8432
14:31 < bridge> <totar> 
14:31 < bridge> <totar> any reviewers in the chat perhaps? I made this explanation which I will copy paste
14:31 < bridge> <totar> 
14:31 < bridge> <totar> Current behavior:
14:31 < bridge> <totar> - DirectInput -> FireWeapon (spawn projectiles)
14:32 < bridge> <totar> - GameTick++
14:32 < bridge> <totar> - Character Tick -> HandleWeapons -> FireWeapon (also possibly spawn projectiles)
14:32 < bridge> <totar> 
14:32 < bridge> <totar> 8432 behavior:
14:32 < bridge> <totar> - GameTick++
14:32 < bridge> <totar> - WeaponTick -> FireWeapon (spawn projectiles) (with shorter lifespan to account for tick difference)
14:32 < bridge> <totar> - Character Tick -> HandleWeapons -> FireWeapon (also possibly spawn projectiles)
14:32 < bridge> <Solly (bun bun)> most people arent able or capable of fixing basic things
14:32 < bridge> <Solly (bun bun)> my internet used to go over overhead phone lines
14:32 < bridge> <totar> you can get N% packet loss very easily by standing 100ft away from your wifi router or behind a thick wall. nothing needs to be wrong with your cables or ISP
14:32 < bridge> <zhn> damn where it is like this
14:33 < bridge> <Solly (bun bun)> just a random place, and im sure many other places like this exist
14:33 < bridge> <zhn> wifi is never about reliability, i was talking about cables straightforward xd
14:33 < bridge> <totar> but wifi exists and we should allow people to use it xd
14:33 < bridge> <Jupstar ✪> That is quite a massive physics change or not?
14:33 < bridge> <Jupstar ✪> E.g. hammer does not spawn projectiles
14:34 < bridge> <totar> wdym? if it's implemented correct there is no physics change at all.
14:34 < bridge> <zhn> i know there are 5-7 cities in russia that have isps offering ADSL still but not in europe lol
14:34 < bridge> <totar> both produce the same behavior just in different ways
14:34 < bridge> <Solly (bun bun)> all im saying is that people exist who rely on packet loss resistance, and its really sad that after all this time ddnet doesnt have it
14:35 < bridge> <Jupstar ✪> Then what is the reason you want to remove directinput.
14:35 < bridge> <Jupstar ✪> 
14:35 < bridge> <Jupstar ✪> btw it's not direct input
14:35 < bridge> <Solly (bun bun)> i didnt even know it was possible, i didnt know hwy brawlhalla played normally for me but ddnet didnt xd
14:35 < bridge> <Jupstar ✪> it's early input
14:35 < bridge> <Jupstar ✪> the character class just calls it wrong
14:36 < bridge> <totar> because it's confusing and a huge mess, unless you understand the tick lifecycle extremely well
14:36 < bridge> <totar> the confusion caused this bug https://github.com/ddnet/ddnet/pull/10071
14:37 < bridge> <Jupstar ✪> @totar b4 i have to look in code, where does `OnPredictedInput` come in play here?
14:38 < bridge> <zhn> something is off for me there, but anyway this discussion is about ddnet inabilty to help with packet loss rather than brawlhalla (had couple of friends who didn't really want to play brawl cuz they couldn't play it good on wifi xd)
14:39 < bridge> <totar> do you mean ``OnClientPredictedInput``?
14:39 < bridge> <Jupstar ✪> I assume that is one level higher up
14:39 < bridge> <Jupstar ✪> But yeah probs
14:40 < bridge> <totar> ah wait you're right that one also exists
14:40 < bridge> <totar> tbh this should just be called OnInput
14:40 < bridge> <totar> it's the same as before
14:41 < bridge> <totar> the direct input loop that happens outside the gameworld tick gets replaced by WeaponTick() which does the same function but as part of the gametick
14:41 < bridge> <Jupstar ✪> I mean how is the execution order
14:41 < bridge> <Jupstar ✪> Before it was:
14:41 < bridge> <Jupstar ✪> 
14:41 < bridge> <Jupstar ✪> DirectInput
14:41 < bridge> <Jupstar ✪> PredictedInput
14:41 < bridge> <Jupstar ✪> Tick
14:41 < bridge> <totar> no
14:41 < bridge> <totar> before it was
14:41 < bridge> <totar> DirectInput
14:41 < bridge> <totar> Tick
14:41 < bridge> <totar> PredictedInput
14:41 < bridge> <totar> now it's
14:42 < bridge> <totar> Tick
14:42 < bridge> <totar> WeaponTick (rename/refactor)
14:42 < bridge> <totar> PredictedInput
14:42 < bridge> <Jupstar ✪> ```cpp
14:42 < bridge> <Jupstar ✪> for(int c = 0; c < MAX_CLIENTS; c++)
14:42 < bridge> <Jupstar ✪>                 {
14:42 < bridge> <Jupstar ✪>                     if(m_aClients[c].m_State != CClient::STATE_INGAME)
14:42 < bridge> <Jupstar ✪>                         continue;
14:42 < bridge> <Jupstar ✪>                     bool ClientHadInput = false;
14:42 < bridge> <Jupstar ✪>                     for(auto &Input : m_aClients[c].m_aInputs)
14:42 < bridge> <Jupstar ✪>                     {
14:42 < bridge> <Jupstar ✪>                         if(Input.m_GameTick == Tick() + 1)
14:42 < bridge> <Jupstar ✪>                         {
14:42 < bridge> <Jupstar ✪>                             GameServer()->OnClientPredictedEarlyInput(c, Input.m_aData);
14:42 < bridge> <Jupstar ✪>                             ClientHadInput = true;
14:42 < bridge> <Jupstar ✪>                         }
14:42 < bridge> <Jupstar ✪>                     }
14:42 < bridge> <Jupstar ✪>                     if(!ClientHadInput)
14:42 < bridge> <Jupstar ✪>                         GameServer()->OnClientPredictedEarlyInput(c, nullptr);
14:42 < bridge> <Jupstar ✪>                 }
14:43 < bridge> <Jupstar ✪> 
14:43 < bridge> <Jupstar ✪>                 m_CurrentGameTick++;
14:43 < bridge> <Jupstar ✪>                 NewTicks++;
14:43 < bridge> <Jupstar ✪> 
14:43 < bridge> <Jupstar ✪>                 // apply new input
14:43 < bridge> <Jupstar ✪>                 for(int c = 0; c < MAX_CLIENTS; c++)
14:43 < bridge> <Jupstar ✪>                 {
14:43 < bridge> <Jupstar ✪>                     if(m_aClients[c].m_State != CClient::STATE_INGAME)
14:43 < bridge> <Jupstar ✪>                         continue;
14:43 < bridge> <Jupstar ✪>                     bool ClientHadInput = false;
14:43 < bridge> <Jupstar ✪>                     for(auto &Input : m_aClients[c].m_aInputs)
14:43 < bridge> <Jupstar ✪>                     {
14:43 < bridge> <Jupstar ✪>                         if(Input.m_GameTick == Tick())
14:43 < bridge> <Jupstar ✪>                         {
14:43 < bridge> <Jupstar ✪> The early input already uses `Tick() + 1`
14:43 < bridge> <Jupstar ✪> So it's for the same tick
14:43 < bridge> <totar> wdym?
14:43 < bridge> <totar> it's not
14:43 < bridge> <totar> it uses m_CurrentGameTick internally during WeaponFire() to set the spawning tick of the projectiles that get created during directinput
14:43 < bridge> <Jupstar ✪> It is
14:43 < bridge> <Jupstar ✪> Yes
14:44 < bridge> <Jupstar ✪> But there is m_LatestInput and m_Input in character
14:44 < bridge> <totar> ok I should clarify
14:44 < bridge> <totar> the Tick++ and GameTick() are not the same thing
14:45 < bridge> <totar> what is your question again?
14:45 < bridge> <zhn> are brownies that good
14:46 < bridge> <filoqcus> We need the same thing with IQ test.
14:46 < bridge> <Jupstar ✪> I actually just want to understand if the order of execution for DirectInput & PredictedInput in the character class is still the same
14:47 < bridge> <Jupstar ✪> Regardless of if the projectiles skip one tick bcs of directinput
14:47 < bridge> <totar> the *order* is the same, yes. The difference is that """DirectInput""" happens after the Tick++ so it has to compensate for that
14:48 < bridge> <totar> it does directinput then predictedinput or whatever they're called
14:49 < bridge> <totar> predicted input btw doesn't do any inputs really it just sets the m_Input and other random stuff
14:50 < bridge> <totar> directinput is very different
14:51 < bridge> <Jupstar ✪> Yep, but that is essential bcs of a bug in the server code:
14:51 < bridge> <Jupstar ✪> ```cpp
14:51 < bridge> <Jupstar ✪> // Direct Weapon selection
14:51 < bridge> <Jupstar ✪>     if(m_LatestInput.m_WantedWeapon)
14:51 < bridge> <Jupstar ✪>         WantedWeapon = m_Input.m_WantedWeapon - 1;
14:51 < bridge> <Jupstar ✪> ```
14:51 < bridge> <Jupstar ✪> Actually a rather annoying bug
14:51 < bridge> <Jupstar ✪> The reason why the dummy shots before changing weapon
14:51 < bridge> <totar> idk if I'm aware of this bug, it's on purpose?
14:52 < bridge> <Jupstar ✪> I don't think it is, but dummy players abuse it ig
14:52 < bridge> <totar> isn't it a client bug if it only affects dummy?
14:52 < bridge> <Jupstar ✪> If you activate hammer fly, but the dummy has a gun, then it first shoots the gun
14:52 < bridge> <Jupstar ✪> Well the client sets the weapon and shots in the same tick
14:52 < bridge> <totar> oh
14:52 < bridge> <Jupstar ✪> but m_Tick is only set after the early input
14:52 < bridge> <totar> like the gores bind
14:53 < bridge> <totar> like the gores bind?
14:53 < bridge> <totar> same thing afaik
14:53 < bridge> <Jupstar ✪> ig, i never used that bind
14:54 < bridge> <totar> I had to make a version that would switch the weapon twice after each fire to get it to correct activate after respawning
14:54 < bridge> <totar> I had to make a version that would switch the weapon twice after each fire to get it to correctly activate after respawning
14:54 < bridge> <Solly (bun bun)> me, i exist
14:55 < bridge> <totar> if it does work the same as the gores bind then I definitely tested it with that patch.
14:55 < bridge> <totar> also kog has been running this patch for over a year afaik
14:56 < bridge> <totar> not many dummy players on kog tho
14:57 < bridge> <Jupstar ✪> Well your patch has one more important patch imo:
14:57 < bridge> <Jupstar ✪> 
14:57 < bridge> <Jupstar ✪> https://github.com/ddnet/ddnet/pull/8432/files#diff-65908fcaf323f624c0a8e584e92664d0d49640bb139729c6e22a14a5b2170c3fR1834
14:57 < bridge> <totar> ?
14:57 < bridge> <Jupstar ✪> This is something I'd call a bug actually
14:58 < bridge> <Jupstar ✪> Right now if e.g. you have have lags and the packets arrive out of order over 20ms, then you might end up overwriting new input with old input
14:58 < bridge> <totar> I'm aware
14:58 < bridge> <Jupstar ✪> Yes
14:58 < bridge> <totar> it's a decision
14:58 < bridge> <Jupstar ✪> Don't get me wrong
14:58 < bridge> <Jupstar ✪> I think that this has higher prio
14:58 < bridge> <Jupstar ✪> than your refactor
14:59 < bridge> <totar> I'm open to letting the client change the inputs in their buffer but it opens up potential exploits
14:59 < bridge> <Solly (bun bun)> you could restrict it to old clients only
14:59 < bridge> <Assa> as far as I can tell this must come from the skins Update
14:59 < bridge> <totar> that's not who the exploit is for, it's for cheat clients
15:01 < bridge> <Jupstar ✪> Everything about the input queue is just wrong
15:02 < bridge> <totar> what?
15:02 < bridge> <totar> how
15:11 < ws-client> <ChillerDragon> @totar i always play with dummy on kog xd
15:12 < bridge> <totar> but you are probably not using cheatly dummy rocket binds
15:12 < bridge> <totar> but you are probably not using cheaty dummy rocket binds
15:12 < bridge> <dazzling_fox_61443> how to enable show others in solo
15:12 < bridge> <Solly (bun bun)> cl_show_others 1?
15:12 < bridge> <dazzling_fox_61443> for server i mean
15:12 < bridge> <Solly (bun bun)> the server cant control the setting
15:12 < bridge> <Solly (bun bun)> without faking solo
15:12 < bridge> <Jupstar ✪> Ahh can't remember all the stuff I had, but
15:12 < bridge> <Jupstar ✪> 
15:12 < bridge> <Jupstar ✪> ```cpp
15:12 < bridge> <Jupstar ✪> for(auto &Input : m_aClients[c].m_aInputs)
15:13 < bridge> <Jupstar ✪> ```
15:13 < bridge> <Jupstar ✪> 
15:13 < bridge> <Jupstar ✪> Since this is in order, it will use the first input that matches. On a lag newer input is potentially ignored bcs of the
15:13 < bridge> <Jupstar ✪> ```cpp
15:13 < bridge> <Jupstar ✪> if(IntendedTick <= Tick())
15:13 < bridge> <Jupstar ✪>  IntendedTick = Tick() + 1;
15:13 < bridge> <Jupstar ✪> ```
15:13 < bridge> <Jupstar ✪> thing.
15:13 < bridge> <Jupstar ✪> 
15:13 < bridge> <Jupstar ✪> Then old input can reset 
15:13 < bridge> <Jupstar ✪> `m_aClients[ClientId].m_LastInputTick = IntendedTick;`
15:13 < bridge> <Jupstar ✪> and cause a `NETMSG_INPUTTIMING` to be sent again, but only for the next input to arrive.
15:13 < bridge> <Jupstar ✪> IMO it should either ack all non-acked inputs or have a better strict monotonic counter
15:13 < bridge> <Jupstar ✪> But there was something more, can't remember
15:14 < bridge> <Jupstar ✪> Also I'd prefer `NETMSG_INPUTTIMING` is flushed so the client can more accurately calculate its ping without needing pingpong packets
15:14 < bridge> <totar> which part of this is related to 8432
15:15 < bridge> <Jupstar ✪> I have told you that patches to the input queue are imo more important
15:15 < bridge> <Jupstar ✪> And your pr has at least one
15:15 < ws-client> <ChillerDragon> @totar nah only swap and hammerfly xd
15:15 < bridge> <Jupstar ✪> ^
15:15 < bridge> <totar> this confused me
15:15 < bridge> <totar> I thought you meant that was a bug
15:16 < bridge> <totar> you mean the input queue is more important that the direct input thing?
15:16 < bridge> <Jupstar ✪> than the refactoring yes
15:16 < bridge> <totar> they're both refactoring in a way
15:16 < bridge> <totar> the variables that direct input uses are deleted by creating the input buffer
15:17 < bridge> <totar> there is no more m_LatestInput
15:17 < bridge> <Jupstar ✪> But your patch is important for a simple reason:
15:17 < bridge> <Jupstar ✪> 
15:17 < bridge> <Jupstar ✪> You are not using a counter
15:17 < bridge> <Jupstar ✪> The counter really causes stupid behavior with out of order packets
15:17 < bridge> <totar> that's the whole point yes
15:18 < bridge> <totar> the counter was needed because direct input existed
15:18 < bridge> <Jupstar ✪> That is why I think that part of the patch is more interesting xd
15:18 < bridge> <Jupstar ✪> How so?
15:18 < bridge> <totar> direct input can have multiple inputs per tick
15:18 < bridge> <totar> so you can't have this strict ring buffer if you had that behavior
15:18 < bridge> <Jupstar ✪> Do we talk about early input?
15:19 < bridge> <Jupstar ✪> direct input is just to check if someone is afk or not xd
15:19 < bridge> <totar> the reason this is possible is because directinput was discovered to not exist on the client
15:19 < bridge> <totar> it used to have a different purpose in 0.5
15:19 < bridge> <Jupstar ✪> Yeah
15:20 < bridge> <Jupstar ✪> This actually doesn't even sound that bad, but IMO the counter is still wrong here then
15:20 < bridge> <Jupstar ✪> Well not IMO, it is
15:20 < bridge> <Jupstar ✪> Bcs of the first part of this msg
15:20 < bridge> <Jupstar ✪> It would often use the outdated input instead of the newest
15:21 < bridge> <totar> it's the reason why #10071 bug ruins teehistorian data, because it was assumed that direct input only handled the first input it recieved but actually it handles all
15:21 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/10071
15:21 < bridge> <Jupstar ✪> IF we want multiple inputs, then multiple inputs per tick should overwrite the existing input
15:21 < bridge> <Jupstar ✪> Not add a new queue entry
15:21 < bridge> <totar> ok but we don't want multiple inputs so we don't need to discuss that xd
15:22 < bridge> <totar> either the client should overwrite the past inputs or we drop duplicates
15:22 < bridge> <totar> both options are valid
15:22 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1381624549921132675/image.png?ex=684831a2&is=6846e022&hm=7186efa450fd98e9862f1d7e15d9a77b13d9eb2069b93c41a61b653a3083e685&
15:22 < bridge> <Solly (bun bun)> thanks kebs
15:23 < bridge> <Jupstar ✪> But just to be clear, this bug happens because a old input is far back in the queue and a new input of the same tick is then added to the front of the queue, right?
15:24 < bridge> <Jupstar ✪> If not, that is my problem with the queue as of now
15:25 < bridge> <Jupstar ✪> It's buggy
15:25 < bridge> <totar> I don't think the position in the queue matters at all. It happens anytime the client sends 2 different inputs for the same gametick where one of them has a fire and one of them doesn't. 
15:25 < bridge> <totar> 
15:25 < bridge> <totar> That happens due to the prediction time shenanigans that the client does which I'm sure you're aware of
15:25 < bridge> <Jupstar ✪> Mh yeah ok
15:25 < bridge> <Jupstar ✪> Then that is an additional problem
15:26 < bridge> <totar> to be fair it's not the client's fault really.
15:26 < bridge> <totar> it's trying its best
15:26 < bridge> <Jupstar ✪> Yeah
15:31 < bridge> <robyt3> @totar Would it be possible to split #8432 into more separate PRs? Some commits would be easier to merge then others. And some commits look like fixup commits that shouldn't be in the final merge but squashed into parent commits.
15:31 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/8432
15:33 < bridge> <totar> the commits were intended to make it easier to verify correctness and then be squashed later but the order ended up being not helpful. I can split it into 2 PRs but it might be easier to just rewrite the history into fewer commits
15:33 < bridge> <robyt3> Commits that only change names or documentation can definitely be split
15:35 < bridge> <totar> Do you think having the whole thing in 1 commit would be bad?
15:35 < bridge> <robyt3> I think multiple commit do make it easier to review, but in this case some of those commits might already require a discussion individually, so it doesn't make the PR much easier to merge
15:36 < bridge> <totar> hmm
15:36 < bridge> <totar> ok I will try to make it like 2 or 3 commits
15:36 < bridge> <robyt3> For example, would the commits changing `m_LastAckedSnapshot` handling be standalone?
15:37 < bridge> <totar> ah
15:37 < bridge> <robyt3> (they should be squashed)
15:37 < bridge> <totar> sorry I was remembering why I did that in the first place
15:43 < bridge> <totar> ok actually I forgot, it's been literally over a year. but I think the reason was because if an input arrive late after being delayed it messed up the state of ``m_LastAckedSnapshot``, but we now support correctly handling out of order inputs so it's not acceptable to just let the ``m_LastAckedSnapshot`` use the wrong value for snapshot calculation. 
15:43 < bridge> <totar> 
15:43 < bridge> <totar> to be fair ``m_LastAckedSnapshot`` is not very critical in the first place, if it was wrong by +-5 ticks nothing really changes. The NETMSG_INPUTTIMING uses the ``IntendedTick`` value instead.
15:44 < bridge> <totar> ok actually I forgot, it's been literally over a year. but I think the reason was because if an input arrive late after being delayed it messed up the state of ``m_LastAckedSnapshot``, but we now support correctly handling out of order inputs so it's not acceptable to just let the ``m_LastAckedSnapshot`` use the wrong value for snapshot calculation. 
15:44 < bridge> <totar> 
15:44 < bridge> <totar> to be fair ``m_LastAckedSnapshot`` is not very critical in the first place, if it was wrong by +-5 ticks nothing really changes except the snapshot diff being less efficient . The NETMSG_INPUTTIMING uses the ``IntendedTick`` value instead.
15:44 < bridge> <totar> ok actually I forgot, it's been literally over a year. but I think the reason was because if an input arrive late after being delayed it messed up the state of ``m_LastAckedSnapshot``, but we now support correctly handling out of order inputs so it's not acceptable to just let the ``m_LastAckedSnapshot`` use the wrong value for snapshot calculation. 
15:44 < bridge> <totar> 
15:44 < bridge> <totar> to be fair ``m_LastAckedSnapshot`` is not very critical in the first place, if it was wrong by +-5 ticks nothing really changes except the snapshot diff being less efficient. The NETMSG_INPUTTIMING uses the ``IntendedTick`` value instead.
15:46 < bridge> <totar> I'll go over the commits and make them fewer
15:48 < bridge> <robyt3> Also separate PRs are better if the commit work independently. If we merge one change at a time it's easier to pinpoint if something breaks.
15:48 < bridge> <robyt3> Also separate PRs are better if the commits work independently. If we merge one change at a time it's easier to pinpoint if something breaks.
15:49 < bridge> <totar> mmm it's messier to make it work as seperate PRs but also not that much code if you prefer it that way
15:49 < bridge> <totar> are you going to merge one of them and then wait weeks before the other one?
15:50 < bridge> <totar> idk if I feel comfortable verifying the correctness as 2 PRs
15:51 < bridge> <totar> it's possible I'd just need to do it with new things
15:51 < bridge> <robyt3> I guess it's fine if it doesn't work in multiple PRs
15:51 < bridge> <robyt3> But the documentation should definitely be separate
15:52 < bridge> <robyt3> But the documentation and naming changes should definitely be separate
15:53 < bridge> <totar> I think the things that look like naming changes might be a git diff artifact and are infact new functions but I will double check
15:54 < bridge> <totar> also the PR description is a rambling mess I will fix that
15:55 < bridge> <totar> nvm there are some naming changes that can be seperate
16:16 < bridge> <kebscs> @robyt3 https://github.com/ddnet/ddnet/issues/10337
16:16 < bridge> <kebscs> skin loading?
18:01 < bridge> <robyt3> yeah, seems likely if related to number of players. Also happens when nameplates are disabled
18:07 < bridge> <kebscs> i think this also happened when the dummies had default skin
18:08 < bridge> <kebscs> so not sure if skin loading, but drop is significant
18:08 < bridge> <kebscs> with 128 players its a lot
18:12 < bridge> <robyt3> yeah, not loading by updating I presume
18:32 < bridge> <gorp_tw> i found a tee in the wild today in the list of contributors for lite-xl
18:32 < bridge> <gorp_tw> who is Jipok
19:06 < ws-client> <ChillerDragon> Jipok W profile pic
19:09 < ws-client> <ChillerDragon> @gorp_tw wats ur gh
19:10 < bridge> <Jupstar ✪> it's lynn, you have to know
19:10 < ws-client> <ChillerDragon> lynn = gorp?
19:10 < bridge> <Jupstar ✪> yes
19:10 < ws-client> <ChillerDragon> i thought gorp just spawned
19:10 < bridge> <Jupstar ✪> no
19:10 < ws-client> <ChillerDragon> whats lynn gh xd
19:11 < bridge> <Jupstar ✪> katalynn or smth xd
19:11 < bridge> <Jupstar ✪> look in ddnet-web
19:11 < ws-client> <ChillerDragon> kaitlynia
19:11 < ws-client> <ChillerDragon> you knowing that is pro josspit
19:11 < bridge> <Jupstar ✪> https://github.com/kaitlynia
19:11 < ws-client> <ChillerDragon> we need to duel in github username knowledge game one day
19:11 < bridge> <Jupstar ✪> xDDDDDDD
19:12 < bridge> <Jupstar ✪> Sadly you are influencer #1
19:12 < ws-client> <ChillerDragon> i am stargazer of https://github.com/kaitlynia/Petal le
19:12 < ws-client> <ChillerDragon> l
19:12 < ws-client> <ChillerDragon> i opened group chat https://github.com/ChillerDragon/github-meta/issues/10
19:13 < bridge> <Jupstar ✪> lmao
19:13 < bridge> <Jupstar ✪> classic chiller
19:14 < ws-client> <ChillerDragon> oke josspit
19:14 < ws-client> <ChillerDragon> surprise qiúiz
19:15 < ws-client> <ChillerDragon> what is tater client main dev github username? (looking it up = <:banhammer:392813948858269696>)
19:15 < bridge> <Jupstar ✪> srj6
19:15 < ws-client> <ChillerDragon> close
19:15 < ws-client> <ChillerDragon> i think its missing a c
19:15 < bridge> <Jupstar ✪> uff
19:15 < ws-client> <ChillerDragon> https://github.com/sjrc6/
19:15 < ws-client> <ChillerDragon> but not bad
19:16 < ws-client> <ChillerDragon> @totar wtf is that name btw? explain
19:16 < ws-client> <ChillerDragon> super jump release candidate 6
19:21 < bridge> <kebscs> @chiller why no ddnet commits?
19:21 < bridge> <kebscs> fell off lately
19:22 < bridge> <gorp_tw> wowow Petal mentioned
19:22 < bridge> <Jupstar ✪> I found lynn on some random webrtc repo once
19:22 < bridge> <Jupstar ✪> But can't remember which one
19:23 < bridge> <Jupstar ✪> xiu
19:24 < bridge> <Ewan> :nouis:
22:55 < bridge> <qxdfoxy> since when cant you say voldemort (client) in chat?
22:55 < bridge> <qxdfoxy> dafuk
22:55 < bridge> <qxdfoxy> i got insta muted for 60s when i tried to say it again out of confusion
23:01 < bridge> <Jupstar ✪> Angst Pottr?
23:01 < bridge> <Jupstar ✪> Angst Potter?
23:02 < bridge> <blaiszephyr> Is there a single reason where you have to say it
23:03 < bridge> <qxdfoxy> not really
23:03 < bridge> <qxdfoxy> why mute though
23:04 < bridge> <blaiszephyr> Idk I mute people for 5 minutes when they spam it
23:05 < bridge> <qxdfoxy> alright
23:05 < bridge> <qxdfoxy> should also add the russian version of the word then
23:15 < bridge> <blaiszephyr> Good idea
23:23 < bridge> <filoqcus> first?
23:23 < bridge> <filoqcus> https://cdn.discordapp.com/attachments/293493549758939136/1381745644892590130/image.png?ex=6848a269&is=684750e9&hm=6a7c905fe3c603b5810fe02fa51394d8c23243d9b3369eb8eefb23a1f457ffd4&
23:28 < bridge> <qxdfoxy> ?
23:29 < bridge> <filoqcus> https://cdn.discordapp.com/attachments/293493549758939136/1381746942333419520/image.png?ex=6848a39e&is=6847521e&hm=7d148e152ec23b428d3ae59cc56f1c992343119691f2efbe5fce25d648314837&
23:29 < bridge> <qxdfoxy> the Hakem dude still botting
23:29 < bridge> <qxdfoxy> holy shit
23:29 < bridge> <qxdfoxy> when yall gon ban that ip
23:29 < bridge> <qxdfoxy> is there even a way for yall to blacklist yet
23:43 < bridge> <chillerdragon> I wouldn’t say it fell off. I took a tiny break because I was annoyed by the amount of open PRs
