00:04 <+bridge> [ddnet] <Chairn> ASAN maps 20TB ðŸ˜„
00:04 <+bridge> [ddnet] <Chairn> i think most java stuff also maps around 100GB
00:32 <+bridge> [ddnet] <Learath2> I wonder what they do with it in discord. ASan uses it as a very clever trick
00:34 <+bridge> [ddnet] <Learath2> @heinrich5991 is the update simple at all? I need to review a file soon-ish
00:34 <+bridge> [ddnet] <heinrich5991> yes, update is simple
00:34 <+bridge> [ddnet] <heinrich5991> probably
00:34 <+bridge> [ddnet] <heinrich5991> can do it later
00:35 <+bridge> [ddnet] <heinrich5991> basically just patch out the check, I think
00:45 <+bridge> [ddnet] <louis> does anyone know an ipv4 range that would basically allow anyone to join? its for a tw server
00:45 <+bridge> [ddnet] <louis> https://cdn.discordapp.com/attachments/293493549758939136/1044398207700050021/image.png
00:45 <+bridge> [ddnet] <Learath2> 0.0.0.0-255.255.255.255
01:45 <+bridge> [ddnet] <Learath2> After you get through the mess that is setting all this up with 0 documentation, podman actually works quite well
01:47 <+bridge> [ddnet] <Learath2> Also definitely worth it to set it up with netavark instead of the old cni-plugins
04:24 <+bridge> [ddnet] <- Mahdiyar> @WarHammer i send command in terminal
05:47 <+bridge> [ddnet] <uwu> Rustaceans: after learning the syntax, rust is easier to read than python!!
05:47 <+bridge> [ddnet] <uwu>  Meanwhile rust:
05:47 <+bridge> [ddnet] <uwu>  Data cleaning
05:47 <+bridge> [ddnet] <uwu> https://cdn.discordapp.com/attachments/293493549758939136/1044474191761637426/IMG_20221122_064557_473.jpg
07:51 <+bridge> [ddnet] <chillerdragon> Ok I put it on my CV thanks
07:51 <+bridge> [ddnet] <chillerdragon> (@Not Keks)
07:57 <+bridge> [ddnet] <Ryozuki> This is a snippet shared on twitter purposely obscure btw
07:58 <+bridge> [ddnet] <Ryozuki> Its explained on rust reddit some time ago
07:58 <+bridge> [ddnet] <Voxel> it looks like its staring at you
07:58 <+bridge> [ddnet] <Voxel> | _ |
07:59 <+bridge> [ddnet] <Ryozuki> _ is saying, i have to pattern match this variable, but i wont use it
07:59 <+bridge> [ddnet] <Ryozuki> In this case
07:59 <+bridge> [ddnet] <Voxel> woag
10:23 <+bridge> [ddnet] <Ryozuki> http://www.cs.cmu.edu/~sprite/main4.html
11:03 <+bridge> [ddnet] <Learath2> If you wanna see some truly horrendous rust, you need to look at traits. I've seen some almost compete with C++ std types
11:12 <+bridge> [ddnet] <Ryozuki> C can be rly obfuscated too
11:12 <+bridge> [ddnet] <Ryozuki> U can do art
11:13 <+bridge> [ddnet] <Learath2> IOCCC
11:13 <+bridge> [ddnet] <Ryozuki> Also if i run the code from the img to the formatter u can see it clearer
11:13 <+bridge> [ddnet] <Ryozuki> Its formatted in a way to make it look like its all closures
11:14 <+bridge> [ddnet] <Ryozuki> But its just OR pattern matching
11:14 <+bridge> [ddnet] <Ryozuki> U can have | a | b
11:14 <+bridge> [ddnet] <Ryozuki> The first | is valid
11:14 <+bridge> [ddnet] <Ryozuki> Cuz it allows to writte macros easier
11:14 <+bridge> [ddnet] <Ryozuki> That use this
11:14 <+bridge> [ddnet] <Ryozuki> Its the same as a | b
11:15 <+bridge> [ddnet] <Learath2> How does this get formatted anyway?
11:15 <+bridge> [ddnet] <Ryozuki> Probs some spaces between the OR
11:15 <+bridge> [ddnet] <Ryozuki> And if u run check u prob get some warns
11:18 <+bridge> [ddnet] <Ryozuki> as said
11:18 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1044557433089044561/image.png
11:18 <+bridge> [ddnet] <Ryozuki> this is how it gets formatted
11:18 <+bridge> [ddnet] <Ryozuki> and
11:18 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1044557499350650930/image.png
11:19 <+bridge> [ddnet] <Ryozuki> btw
11:19 <+bridge> [ddnet] <Ryozuki> x is a closure
11:19 <+bridge> [ddnet] <Ryozuki> and the ..
11:19 <+bridge> [ddnet] <Ryozuki> is an empty Range
11:19 <+bridge> [ddnet] <Ryozuki> so u are passing an empty range that gets ignored
11:19 <+bridge> [ddnet] <Ryozuki> x(..)
11:19 <+bridge> [ddnet] <Learath2> Ah it does remove all the useless |
11:20 <+bridge> [ddnet] <Ryozuki> yeah
11:20 <+bridge> [ddnet] <Ryozuki> well idk if .. is an empty range or an infinite
11:20 <+bridge> [ddnet] <Learath2> Yeah, that does fix it up a fair bit
11:21 <+bridge> [ddnet] <Ryozuki> https://www.reddit.com/r/rust/comments/ynkblf/mara_bos_this_code_compiles_and_runs_without/
11:21 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1044558166437920808/image.png
12:15 <+bridge> [ddnet] <Ryozuki> ```sql
12:15 <+bridge> [ddnet] <Ryozuki> SELECT Map as map, Name as name, Time as time, Ranking as rank, Timestamp as timestamp, Server as server, ((time - PrevTime) / PrevTime) * 100 as faster_percent
12:15 <+bridge> [ddnet] <Ryozuki>      FROM (
12:15 <+bridge> [ddnet] <Ryozuki>          SELECT RANK() OVER w AS Ranking, MIN(Time) AS Time, Name, Timestamp, Server, LEAD(Time) OVER w as PrevTime, Map
12:15 <+bridge> [ddnet] <Ryozuki>          FROM race
12:15 <+bridge> [ddnet] <Ryozuki>          GROUP BY Map, Name
12:15 <+bridge> [ddnet] <Ryozuki>          WINDOW w AS (PARTITION BY Map ORDER BY MIN(Time))
12:15 <+bridge> [ddnet] <Ryozuki>      ) as a
12:15 <+bridge> [ddnet] <Ryozuki> WHERE Name = "Ryozuki"
12:16 <+bridge> [ddnet] <Ryozuki>  ORDER BY Ranking ASC;```
12:16 <+bridge> [ddnet] <Ryozuki> is have this query
12:16 <+bridge> [ddnet] <Ryozuki> but my ranks are a bit less, like by 3-6 ranks
12:16 <+bridge> [ddnet] <Ryozuki> on some maps
12:16 <+bridge> [ddnet] <Ryozuki> as shown on  the website
12:16 <+bridge> [ddnet] <Ryozuki> i wonder if im wrong or the web is wrong
12:16 <+bridge> [ddnet] <Ryozuki> Quite proud of coming up with this
12:16 <+bridge> [ddnet] <Ryozuki> Learning window functions ftw
12:31 <+bridge> [ddnet] <Ryozuki> This query is criminally slow
12:31 <+bridge> [ddnet] <Ryozuki> 90s
12:33 <+bridge> [ddnet] <Learath2> You can put an explain in front to see the execution plan
12:34 <+bridge> [ddnet] <Ryozuki> I probs dont have proper indexes for this query
12:34 <+bridge> [ddnet] <Ryozuki> Since sqlite doesnt have any when importing it
12:34 <+Ryozuki> create unique index mapinfo_map_idx on mapinfo(Map);
12:34 <+Ryozuki> create unique index maps_map_idx on maps(Map);
12:34 <+Ryozuki> create index maps_timestamp_idx on maps(Timestamp);
12:34 <+Ryozuki> create index race_map_idx on race(Map);
12:34 <+Ryozuki> create index race_time_idx on race(Time);
12:34 <+Ryozuki> create index teamrace_map_idx on teamrace(Map);
12:34 <+Ryozuki> create index teamrace_time_idx on teamrace(Time);
12:34 <+Ryozuki> i got these
12:36 <+bridge> [ddnet] <Ryozuki> I probs need a index on name
12:36 <+bridge> [ddnet] <Ryozuki> For ranks xd
12:36 <+bridge> [ddnet] <Learath2> I'm not good enough to look at a complex nested query like the one above and really guess what index is required
12:37 <+bridge> [ddnet] <Learath2> I'd also try name, but I'd probably also look at explain before ðŸ˜„
12:38 <+bridge> [ddnet] <Ryozuki> I never used explain
12:38 <+bridge> [ddnet] <Ryozuki> Will see
12:39 <+bridge> [ddnet] <Ryozuki> After i test it with the name idx
12:45 <+Ryozuki> https://pastebin.mozilla.org/rbZQmcPd/raw
12:45 <+Ryozuki> time to interpret this
12:45 <+Ryozuki> never rly did explains before
12:45 <+Ryozuki> index didnt help
12:45 <+Ryozuki> i even added a composite index
12:45 <+Ryozuki> map name
12:55 <+bridge> [ddnet] <Ryozuki> Oh
12:55 <+bridge> [ddnet] <Ryozuki> 42 seconds
12:56 <+bridge> [ddnet] <Ryozuki> Using rust release
12:56 <+bridge> [ddnet] <Ryozuki> So there is some overhead on my side and not just sqlite
12:57 <+bridge> [ddnet] <Ryozuki> 38~s on sqlite3
13:03 <+bridge> [ddnet] <Learath2> Still quite a long time, though it is kinda understandable
13:04 <+bridge> [ddnet] <Ryozuki> There are quite lot of ranks
13:04 <+bridge> [ddnet] <Ryozuki> So idk whats a good time
13:04 <+bridge> [ddnet] <Learath2> Yeah the table is massive
13:05 <+bridge> [ddnet] <Ryozuki> Essentially my query has to run over all ranks to determine the rank of the player
13:05 <+bridge> [ddnet] <Ryozuki> This is the query for the player page
13:06 <+bridge> [ddnet] <Learath2> (We do cache these for a reason :D)
13:06 <+bridge> [ddnet] <Learath2> Can you do an `EXPLAIN QUERY PLAN` instead of flat explain?
13:06 <+bridge> [ddnet] <Learath2> Sqlite print's individual opcodes with just explain which is annoying to read
13:07 <+bridge> [ddnet] <Learath2> s\/\'//
13:08 <+bridge> [ddnet] <Ryozuki> Ah ok
13:09 <+bridge> [ddnet] <Ryozuki> ```
13:09 <+bridge> [ddnet] <Ryozuki> QUERY PLAN
13:09 <+bridge> [ddnet] <Ryozuki> |--CO-ROUTINE a
13:09 <+bridge> [ddnet] <Ryozuki> |  |--CO-ROUTINE (subquery-3)
13:10 <+bridge> [ddnet] <Ryozuki> |  |  |--CO-ROUTINE (subquery-4)
13:10 <+bridge> [ddnet] <Ryozuki> |  |  |  |--SCAN race USING INDEX teamrace_map_name_idx
13:10 <+bridge> [ddnet] <Ryozuki> |  |  |  `--USE TEMP B-TREE FOR ORDER BY
13:10 <+bridge> [ddnet] <Ryozuki> |  |  `--SCAN (subquery-4)
13:10 <+bridge> [ddnet] <Ryozuki> |  `--SCAN (subquery-3)
13:10 <+bridge> [ddnet] <Ryozuki> |--SCAN a
13:10 <+bridge> [ddnet] <Ryozuki> |--SEARCH m USING INDEX maps_map_idx (Map=?) LEFT-JOIN
13:10 <+bridge> [ddnet] <Ryozuki> `--USE TEMP B-TREE FOR ORDER BY
13:10 <+bridge> [ddnet] <Ryozuki> ```
13:10 <+bridge> [ddnet] <Ryozuki> the query:
13:10 <+bridge> [ddnet] <Ryozuki> ```sql
13:10 <+bridge> [ddnet] <Ryozuki> SELECT a.Map as map, Name as name, Time as time, Ranking as rank, a.Timestamp as timestamp, a.Server as rank_server, m.Server as map_server,
13:10 <+bridge> [ddnet] <Ryozuki>      ((time - PrevTime) / PrevTime) * 100 as faster_percent, m.Points as points, m.Stars as stars
13:10 <+bridge> [ddnet] <Ryozuki>      FROM (
13:10 <+bridge> [ddnet] <Ryozuki>          SELECT RANK() OVER w AS Ranking, MIN(Time) AS Time, Name, Timestamp, Server, LEAD(Time) OVER w as PrevTime, Map
13:10 <+bridge> [ddnet] <Ryozuki>          FROM race
13:10 <+bridge> [ddnet] <Ryozuki>          GROUP BY Map, Name
13:10 <+bridge> [ddnet] <Ryozuki>          WINDOW w AS (PARTITION BY Map ORDER BY MIN(Time))
13:10 <+bridge> [ddnet] <Ryozuki>      ) as a
13:10 <+bridge> [ddnet] <Ryozuki> 
13:10 <+bridge> [ddnet] <Ryozuki> LEFT JOIN maps m ON m.Map = a.Map
13:10 <+bridge> [ddnet] <Ryozuki> WHERE Name = "Ryozuki"
13:10 <+bridge> [ddnet] <Ryozuki> ORDER BY Ranking ASC;
13:10 <+bridge> [ddnet] <Ryozuki> ```
13:10 <+bridge> [ddnet] <Ryozuki> I guess temp trees are missed index opportunities
13:11 <+bridge> [ddnet] <Ryozuki> Lol i think that i misnamed a index
13:11 <+bridge> [ddnet] <Ryozuki> But well shouldnt matter
13:12 <+bridge> [ddnet] <Ryozuki> Teamrace -> race
13:12 <+bridge> [ddnet] <Ryozuki> Its using the composite index i made
13:12 <+bridge> [ddnet] <Learath2> Hm, can you try an index on Time maybe?
13:12 <+bridge> [ddnet] <Ryozuki> I think i have one
13:13 <+bridge> [ddnet] <Ryozuki> But ill do that after i go eat xd
13:13 <+bridge> [ddnet] <Learath2> Oh, I think the group by there might make an index on time not work actually
13:39 <+bridge> [ddnet] <MÊŽÉ¹ ã‚·> How to turn on vulkan by console argument?
13:39 <+bridge> [ddnet] <MÊŽÉ¹ ã‚·> How to turn ON vulkan by console argument?
13:39 <+bridge> [ddnet] <Learath2> `./DDNet "gfx_backend vulkan"`
13:43 <+bridge> [ddnet] <MÊŽÉ¹ ã‚·> Ty
15:29 <+Ryozuki> i found a small optimization with a where clause
15:29 <+Ryozuki> 6 seconds ~~
15:29 <+Ryozuki> i think it depends on how many different maps u finished
15:52 <+bridge> [ddnet] <Jupstar âœª> What is your sql supposed to show
15:57 <+bridge> [ddnet] <Ryozuki> There are currently 18M ranks
15:57 <+bridge> [ddnet] <Ryozuki> All the best ranks a player has on all maps they finishes
15:58 <+bridge> [ddnet] <Ryozuki> Aka the ddnet player page
15:58 <+bridge> [ddnet] <Ryozuki> Its actually faster to calculate all at once
15:58 <+bridge> [ddnet] <Ryozuki> Im gonna do this and keep it in memory, ordering by player name and building a manual index
17:06 <+bridge> [ddnet] <louis> is it possible for mods to have prediction if it can't replicate ddnet physics in some way
17:10 <+bridge> [ddnet] <Skystrife> This is a client id bug that happens when you have strong and a lower client id than the person in freeze.  chatting probably fixes it by changing the order of inputs.  It could also be fixed by changing the order you join the server(which is why you say it worked fine yesterday).  Cool thing though, this makes it so doing this with hammer isnt reliant on client id.  Before you could only get height from hammering someone in freeze with w
17:10 <+bridge> [ddnet] <Skystrife> https://cdn.discordapp.com/attachments/293493549758939136/1044646045956706354/weak_hammer.demo.mp4
17:24 <+bridge> [ddnet] <Ryozuki> Keeping all calculated ranks in memory takes 1.6gb
17:24 <+bridge> [ddnet] <Ryozuki> Not bad
17:24 <+bridge> [ddnet] <Ryozuki> There are 10M non repeated player ranks
17:25 <+bridge> [ddnet] <Ryozuki> 18M if counting repeated
17:25 <+bridge> [ddnet] <Jupstar âœª> @Ryozuki either the sqlite is wrong or website you are right xd
17:25 <+bridge> [ddnet] <Jupstar âœª> I think it only respects second
17:25 <+bridge> [ddnet] <Jupstar âœª> Not milliseconds
17:25 <+bridge> [ddnet] <Jupstar âœª> Ah
17:25 <+bridge> [ddnet] <Ryozuki> Wdym about seconds
17:26 <+bridge> [ddnet] <Jupstar âœª> Oknvm
17:26 <+bridge> [ddnet] <Ryozuki> Xd
17:26 <+bridge> [ddnet] <Jupstar âœª> Teamranks are also always ranks right?
17:30 <+bridge> [ddnet] <Ryozuki> Ye
17:30 <+bridge> [ddnet] <Ryozuki> If u finish in team it saves a teamrank and rank
17:33 <+bridge> [ddnet] <Jupstar âœª> @Ryozuki so how fast is your sql
17:33 <+bridge> [ddnet] <Jupstar âœª> When I'm at home i want to beat
17:35 <+bridge> [ddnet] <ReiTW> https://cdn.discordapp.com/attachments/293493549758939136/1044652430895362090/20221122_112550.jpg
17:35 <+bridge> [ddnet] <ReiTW> https://cdn.discordapp.com/attachments/293493549758939136/1044652431277051924/20221122_111220.jpg
17:35 <+bridge> [ddnet] <ReiTW> Awesome job
17:36 <+bridge> [ddnet] <ReiTW> Montblanc
17:36 <+Ryozuki> my current sql returns all ranks with their calculated rank numbers and a bit more info like % of improvement over previous rank
17:36 <+Ryozuki> and number of finishes on same map
17:36 <+bridge> [ddnet] <Jupstar âœª> Previous rank or previous run of a completely unrelated player xd
17:37 <+bridge> [ddnet] <Ryozuki> ```sql
17:37 <+bridge> [ddnet] <Ryozuki> SELECT a.Map as map, Name as name, Time as time, Ranking as rank, a.Timestamp as timestamp, a.Server as rank_server, m.Server as map_server,
17:37 <+bridge> [ddnet] <Ryozuki>     ((time - PrevTime) / PrevTime) * 100 as faster_percent, m.Points as points, m.Stars as stars, finishes
17:37 <+bridge> [ddnet] <Ryozuki>     FROM (
17:37 <+bridge> [ddnet] <Ryozuki>         SELECT RANK() OVER w AS Ranking, MIN(Time) AS Time, Name, Timestamp, Server, LEAD(Time) OVER w as PrevTime, Map, COUNT(*) as finishes
17:37 <+bridge> [ddnet] <Ryozuki>         FROM race
17:37 <+bridge> [ddnet] <Ryozuki>             GROUP BY Map, Name
17:37 <+bridge> [ddnet] <Ryozuki>             WINDOW w AS (PARTITION BY Map ORDER BY MIN(Time))
17:37 <+bridge> [ddnet] <Ryozuki>     ) as a
17:37 <+bridge> [ddnet] <Ryozuki> LEFT JOIN maps m ON m.Map = a.Map
17:37 <+bridge> [ddnet] <Ryozuki> ORDER BY Name;
17:37 <+bridge> [ddnet] <Ryozuki> ```
17:37 <+bridge> [ddnet] <Izanagi> https://cdn.discordapp.com/attachments/293493549758939136/1044652780159258754/image.png
17:37 <+bridge> [ddnet] <Izanagi> i find this looks kinda odd
17:37 <+bridge> [ddnet] <Ryozuki> different player
17:38 <+bridge> [ddnet] <Jupstar âœª> How is that useful lol
17:41 <+bridge> [ddnet] <Ryozuki> ??
17:41 <+bridge> [ddnet] <Ryozuki> To see the rank inprovement
17:41 <+bridge> [ddnet] <Ryozuki> Its the same shown in #records
17:41 <+bridge> [ddnet] <Jupstar âœª> Ah but that's only for top rank
17:42 <+bridge> [ddnet] <Ryozuki> No
17:42 <+bridge> [ddnet] <Ryozuki> Its for each
17:42 <+bridge> [ddnet] <Ryozuki> Vs previous
17:42 <+bridge> [ddnet] <Ryozuki> Thats what LAG window function does
17:42 <+bridge> [ddnet] <Jupstar âœª> I mean in record
17:42 <+bridge> [ddnet] <Ryozuki> LEAD*
17:42 <+bridge> [ddnet] <Ryozuki> Ah ye
17:43 <+bridge> [ddnet] <Jupstar âœª> What if u last place xd
17:43 <+bridge> [ddnet] <Jupstar âœª> NaN
17:50 <+bridge> [ddnet] <Ryozuki> 0 iirc
17:50 <+bridge> [ddnet] <Ryozuki> Or ye
17:52 <+bridge> [ddnet] <Narke> hey where can i find the logs file please ?
17:59 <+Ryozuki> im only doing the data fetching part for now so the website couldnt be uglier but here are my ranks https://ddstats.org/players/Ryozuki
17:59 <+Ryozuki> (it will look nothing a like when finished)
18:00 <+Ryozuki> also got some maps in case ur curious https://ddstats.org/maps
18:04 <+bridge> [ddnet] <Ryozuki> Unlike the ddnet web this actually lists all ranks! So u may find ur name in the map page even if ur a nobo
18:04 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
18:10 <+ChillerDragon> cool stuff ryo im fan
18:10 <+ChillerDragon> also wow did u buy a domain for that?
18:11 <+bridge> [ddnet] <Jupstar âœª> explain im stupid
18:11 <+ChillerDragon> i gotta say ryo i do enjoy your front ends they look so nice
18:11 <+ChillerDragon> im not even trolling
18:11 <+ChillerDragon> i enjoy this simple pornhub themed rank site
18:11 <+ChillerDragon> also your blogs etc very lit
18:14 <+ChillerDragon> yo btw @Ryozuki the ddnet category is a dead link here https://edgarluque.com/blog/chat-command-ddracenetwork/
18:15 <+ChillerDragon> also when blog that explains how to write UI code in ddnet
18:16 <+bridge> [ddnet] <Ryozuki> Ddnet only shows top 500
18:16 <+bridge> [ddnet] <Ryozuki> Iirc
18:16 <+bridge> [ddnet] <Ryozuki> On a map
18:16 <+bridge> [ddnet] <Ryozuki> The ranks
18:16 <+bridge> [ddnet] <Jupstar âœª> ah
18:16 <+bridge> [ddnet] <Jupstar âœª> right
18:17 <+bridge> [ddnet] <Ryozuki> Ye chiller i bought it
18:17 <+bridge> [ddnet] <Ryozuki> I want to make the next ddnet website, and if it is not accepted ill just run it as some alternative stats web
18:18 <+bridge> [ddnet] <Ryozuki> Soon ill blog i guess
18:18 <+bridge> [ddnet] <Ryozuki> Been busy
18:19 <+ChillerDragon> such community driven ddnet much decentralized
18:19 <+ChillerDragon> pog
18:20 <+ChillerDragon> when add ranks to blockchain?
18:20 <+bridge> [ddnet] <Ryozuki> :PES3_WeirdSip:
18:22 <+bridge> [ddnet] <Ryozuki> So many ideas so little time
18:22 <+bridge> [ddnet] <Ryozuki> Gotta integrate teemasterparser
18:36 <+bridge> [ddnet] <Brokecdx-> cool but weird at the same time
19:03 <+bridge> [ddnet] <Jupstar âœª> without order by my query runs in 32ms
19:03 <+bridge> [ddnet] <Jupstar âœª> 
19:03 <+bridge> [ddnet] <Jupstar âœª> just adding the order by Ranking adds fucking 14 seconds
19:03 <+bridge> [ddnet] <Jupstar âœª> wtf is wrong with SQLite
19:03 <+bridge> [ddnet] <Jupstar âœª> we speak about 700 rows
19:08 <+bridge> [ddnet] <Jupstar âœª> @Ryozuki gimme ur results, first 10 entries or smth
19:08 <+bridge> [ddnet] <Jupstar âœª> i want to compare
19:09 <+bridge> [ddnet] <Jupstar âœª> without order by my query runs at 390ms with previous
19:09 <+bridge> [ddnet] <Ryozuki> Ofc order by is not cheap
19:09 <+bridge> [ddnet] <Jupstar âœª> yeah but bro, 700 entries
19:09 <+bridge> [ddnet] <Jupstar âœª> 14 seconds
19:09 <+bridge> [ddnet] <Jupstar âœª> never in life
19:09 <+bridge> [ddnet] <Jupstar âœª> over a integer
19:09 <+bridge> [ddnet] <Ryozuki> U only get 700?
19:09 <+bridge> [ddnet] <Jupstar âœª> 783
19:09 <+bridge> [ddnet] <Ryozuki> Im at the gym
19:09 <+bridge> [ddnet] <Jupstar âœª> rip
19:09 <+bridge> [ddnet] <Ryozuki> I get 10 million
19:09 <+bridge> [ddnet] <Jupstar âœª> wtf
19:09 <+bridge> [ddnet] <Jupstar âœª> how can u can 10 mios if there are only like 1000 maps on ddnet
19:10 <+bridge> [ddnet] <Ryozuki> Im talking about ranks lol
19:10 <+bridge> [ddnet] <Jupstar âœª> yeah i mean best ranks for Ryozuki
19:10 <+bridge> [ddnet] <Ryozuki> @Not Keks urs is slow cuz u probs didnt add indexes
19:10 <+bridge> [ddnet] <Jupstar âœª> i did
19:10 <+bridge> [ddnet] <Ryozuki> The sqlite db u download has indexes stripped
19:10 <+bridge> [ddnet] <Jupstar âœª> its only order by ranking
19:10 <+bridge> [ddnet] <Jupstar âœª> which is slow
19:12 <+bridge> [ddnet] <Ryozuki> It will be slow
19:12 <+bridge> [ddnet] <Jupstar âœª> nah bro
19:12 <+bridge> [ddnet] <Ryozuki> To get the ranking u gotta scan all ranks to know the poss
19:12 <+bridge> [ddnet] <Jupstar âœª> i can put them in memory (not sqlite) and do sorting my own
19:12 <+bridge> [ddnet] <Ryozuki> Pos
19:12 <+bridge> [ddnet] <Jupstar âœª> it will never take 14 seconds
19:12 <+bridge> [ddnet] <Ryozuki> Yeah
19:12 <+bridge> [ddnet] <Ryozuki> Idk
19:12 <+bridge> [ddnet] <Ryozuki> Im half doing that rn
19:12 <+bridge> [ddnet] <Jupstar âœª> this must be some weird optimization that sucks in this situation
19:13 <+bridge> [ddnet] <Ryozuki> Its prob a sql limitation
19:13 <+bridge> [ddnet] <Ryozuki> Rn i get all ranks sorted by player name
19:14 <+bridge> [ddnet] <Ryozuki> And i build a hashmap with each player name mapped to a start index and end index in the sorted array
19:14 <+bridge> [ddnet] <Jupstar âœª> i want to beat this sql ^
19:14 <+bridge> [ddnet] <Jupstar âœª> its very slow tho
19:14 <+bridge> [ddnet] <Ryozuki> How much time it takes mine
19:14 <+bridge> [ddnet] <Ryozuki> Did u beat it
19:14 <+bridge> [ddnet] <Ryozuki> It is slow yeah
19:14 <+bridge> [ddnet] <Jupstar âœª> yeah mine takes 390m,s
19:14 <+bridge> [ddnet] <Jupstar âœª> without order by
19:14 <+bridge> [ddnet] <Jupstar âœª> with order by 14seconds xD
19:14 <+bridge> [ddnet] <Ryozuki> Which order by
19:14 <+bridge> [ddnet] <Jupstar âœª> but i have to verfify the prev time thing
19:15 <+bridge> [ddnet] <Jupstar âœª> ```sql
19:15 <+bridge> [ddnet] <Jupstar âœª> 
19:15 <+bridge> [ddnet] <Jupstar âœª> select 
19:15 <+bridge> [ddnet] <Jupstar âœª>     x.best,
19:15 <+bridge> [ddnet] <Jupstar âœª>     x.Map,
19:15 <+bridge> [ddnet] <Jupstar âœª>     (
19:15 <+bridge> [ddnet] <Jupstar âœª>         select COUNT(*) + 1 as r from (select time from race r1 where r1.Map = x.Map and r1.time < x.best group by r1.name)
19:15 <+bridge> [ddnet] <Jupstar âœª>     )
19:15 <+bridge> [ddnet] <Jupstar âœª>     as Ranking,
19:15 <+bridge> [ddnet] <Jupstar âœª>     (
19:15 <+bridge> [ddnet] <Jupstar âœª>         x.best - (
19:15 <+bridge> [ddnet] <Jupstar âœª>             select time from race as r2 where r2.Map = x.Map and r2.Timestamp > x.Timestamp order by r2.Timestamp ASC LIMIT 1
19:15 <+bridge> [ddnet] <Jupstar âœª>         )
19:15 <+bridge> [ddnet] <Jupstar âœª>     )
19:15 <+bridge> [ddnet] <Jupstar âœª>     / (
19:15 <+bridge> [ddnet] <Jupstar âœª>         select time from race as r2 where r2.Map = x.Map and r2.Timestamp > x.Timestamp order by r2.Timestamp ASC LIMIT 1
19:15 <+bridge> [ddnet] <Jupstar âœª>     )
19:15 <+bridge> [ddnet] <Jupstar âœª>     as PreviousRank
19:15 <+bridge> [ddnet] <Jupstar âœª> from (
19:15 <+bridge> [ddnet] <Jupstar âœª>     select min(r.time) as best,  Map, Timestamp from race r where name = "Ryozuki" group by map
19:15 <+bridge> [ddnet] <Jupstar âœª> ) as x
19:15 <+bridge> [ddnet] <Jupstar âœª> 
19:15 <+bridge> [ddnet] <Jupstar âœª> --order by Ranking
19:15 <+bridge> [ddnet] <Jupstar âœª> ```
19:15 <+bridge> [ddnet] <Jupstar âœª> as soon as i enable the last line
19:15 <+bridge> [ddnet] <Jupstar âœª> rip
19:15 <+bridge> [ddnet] <Ryozuki> The order by in window is needed
19:16 <+bridge> [ddnet] <Ryozuki> Ah ok
19:16 <+bridge> [ddnet] <Ryozuki> Hmm idi
19:16 <+bridge> [ddnet] <Ryozuki> Idk
19:16 <+bridge> [ddnet] <Ryozuki> Does it do the same correct
19:16 <+bridge> [ddnet] <Jupstar âœª> i dunno except for faster_percent it looks correct
19:16 <+bridge> [ddnet] <Jupstar âœª> tho i dont query map info
19:16 <+bridge> [ddnet] <Jupstar âœª> but that cant take long with indices
19:24 <+bridge> [ddnet] <Ryozuki> @Not Keks just to be sure r u showing the best time?
19:24 <+bridge> [ddnet] <Jupstar âœª> yes
19:24 <+bridge> [ddnet] <Ryozuki> Btw mine also shows finish count
19:25 <+bridge> [ddnet] <Jupstar âœª> yeah but tbh that shouldnt add lot of extra time
19:25 <+bridge> [ddnet] <Jupstar âœª> even i a completly seperate sub select
19:25 <+bridge> [ddnet] <Ryozuki> In theory window functions should be an improvement btw
19:25 <+bridge> [ddnet] <Ryozuki> Or so i read xd
19:25 <+bridge> [ddnet] <Jupstar âœª> maybe the query is simply inefficient
19:25 <+bridge> [ddnet] <Ryozuki> Ye im no expert
19:26 <+bridge> [ddnet] <Jupstar âœª> but the fact that order by completly destroys my query already makes me wonder if its simply a bug that ur query is so slow
19:26 <+bridge> [ddnet] <Jupstar âœª> would be interesting to know similar query in mariadb perf
19:27 <+bridge> [ddnet] <Ryozuki> Some order bys cant be optimized with an index
19:27 <+bridge> [ddnet] <Ryozuki> Cuz they use temporary values
19:27 <+bridge> [ddnet] <Jupstar âœª> yes
19:27 <+bridge> [ddnet] <Ryozuki> Like the rank
19:28 <+bridge> [ddnet] <Jupstar âœª> but in no world does sorting 700 elements take 14 seconds
19:28 <+bridge> [ddnet] <Ryozuki> Ye xd
19:28 <+bridge> [ddnet] <Ryozuki> But
19:28 <+bridge> [ddnet] <Ryozuki> Ur not sorting 700
19:28 <+bridge> [ddnet] <Ryozuki> Ur sorting 10m
19:28 <+bridge> [ddnet] <Ryozuki> And then picking
19:28 <+bridge> [ddnet] <Ryozuki> 700
19:28 <+bridge> [ddnet] <Jupstar âœª> no
19:28 <+bridge> [ddnet] <Jupstar âœª> i already tried to use an extra subselect
19:28 <+bridge> [ddnet] <uwu> I have T-SQL code snippet and i wonder if i can do same things in my mariadb query
19:28 <+bridge> [ddnet] <uwu> ```sql
19:28 <+bridge> [ddnet] <uwu> declare @abc table (dat float)
19:28 <+bridge> [ddnet] <uwu> insert @abc values(2),(3),(4)
19:28 <+bridge> [ddnet] <uwu> 
19:28 <+bridge> [ddnet] <uwu> select max(dat) from @abc
19:28 <+bridge> [ddnet] <uwu> ```
19:28 <+bridge> [ddnet] <uwu> or any workaround
19:29 <+bridge> [ddnet] <Ryozuki> U want to insert and return?
19:29 <+bridge> [ddnet] <Ryozuki> On postgresql u use the RETURNING clause
19:29 <+bridge> [ddnet] <uwu> create temp table, insert values and use functions like avg max min with it
19:30 <+bridge> [ddnet] <Ryozuki> Make it all in a transaction or smth
19:30 <+bridge> [ddnet] <Ryozuki> Why would u do that
19:30 <+bridge> [ddnet] <Ryozuki> Just make a tbl
19:30 <+bridge> [ddnet] <uwu> https://tenor.com/view/pepe-feels-weird-man-spin-gif-23391479
19:33 <+bridge> [ddnet] <uwu> i mean, just wondering, i want to pass some values to a procedure and use avg min max with them
19:33 <+bridge> [ddnet] <uwu> i mean, just wondering, i want to pass some values to my procedure and use avg min max with them
19:35 <+bridge> [ddnet] <Ryozuki> Just do
19:35 <+bridge> [ddnet] <Ryozuki> Select from <procedure call>
19:35 <+bridge> [ddnet] <Ryozuki> From accepts more than tables
19:40 <+bridge> [ddnet] <zKBTuran> now rewrite in rust.
19:40 <+bridge> [ddnet] <uwu> I want to smthAvg(1,2,3,outVat);
19:40 <+bridge> [ddnet] <uwu> And get 2 in outVat
19:40 <+bridge> [ddnet] <uwu> But not just sum and divide
19:41 <+bridge> [ddnet] <uwu> But make a virtual table and use avg() on it
19:41 <+bridge> [ddnet] <uwu> Its just an example but shows the problem
19:41 <+bridge> [ddnet] <Ryozuki> Eh
19:41 <+bridge> [ddnet] <Ryozuki> Not home atm
19:41 <+bridge> [ddnet] <Ryozuki> Sounds like XY problem
19:42 <+bridge> [ddnet] <Ryozuki> U probs can do all thst in the procedure
19:42 <+bridge> [ddnet] <Ryozuki> Without a table
19:42 <+bridge> [ddnet] <Ryozuki> Sql itself already makes temp tables when needed
19:42 <+bridge> [ddnet] <uwu> Ok
20:10 <+bridge> [ddnet] <Jupstar âœª> ```sql
20:10 <+bridge> [ddnet] <Jupstar âœª> SELECT 
20:10 <+bridge> [ddnet] <Jupstar âœª>     z.*,
20:10 <+bridge> [ddnet] <Jupstar âœª>     ((z.best - z.prevranktime) / z.best) * 100 as prev
20:10 <+bridge> [ddnet] <Jupstar âœª> FROM
20:10 <+bridge> [ddnet] <Jupstar âœª> (
20:11 <+bridge> [ddnet] <Jupstar âœª>     select 
20:11 <+bridge> [ddnet] <Jupstar âœª>         y.best,
20:11 <+bridge> [ddnet] <Jupstar âœª>         y.Map,
20:11 <+bridge> [ddnet] <Jupstar âœª>         y.Ranking,
20:11 <+bridge> [ddnet] <Jupstar âœª>         y.Timestamp,
20:11 <+bridge> [ddnet] <Jupstar âœª>         (
20:11 <+bridge> [ddnet] <Jupstar âœª>             select 
20:11 <+bridge> [ddnet] <Jupstar âœª>                 r4.Time
20:11 <+bridge> [ddnet] <Jupstar âœª>             from
20:11 <+bridge> [ddnet] <Jupstar âœª>                 (select r3.Time, r3.Timestamp from race as r3 where r3.Map = y.Map order by r3.Timestamp DESC) as r4
20:11 <+bridge> [ddnet] <Jupstar âœª>             where
20:11 <+bridge> [ddnet] <Jupstar âœª>                 r4.Timestamp < y.Timestamp LIMIT 1
20:11 <+bridge> [ddnet] <Jupstar âœª>         ) as prevranktime
20:11 <+bridge> [ddnet] <Jupstar âœª>     from
20:11 <+bridge> [ddnet] <Jupstar âœª>         (
20:11 <+bridge> [ddnet] <Jupstar âœª>             select 
20:11 <+bridge> [ddnet] <Jupstar âœª>                 x.best,
20:11 <+bridge> [ddnet] <Jupstar âœª>                 x.Map,
20:11 <+bridge> [ddnet] <Jupstar âœª>                 (
20:11 <+bridge> [ddnet] <Jupstar âœª>                     select COUNT(*) + 1 as r from (select time from race r1 where r1.Map = x.Map and r1.time < x.best group by r1.name)
20:11 <+bridge> [ddnet] <Jupstar âœª>                 )
20:11 <+bridge> [ddnet] <Jupstar âœª>                 as Ranking,
20:11 <+bridge> [ddnet] <Jupstar âœª>                 (select timestamp from race as r2 where r2.Map = x.Map and r2.Time = x.best and r2.name = "Ryozuki" LIMIT 1) as Timestamp
20:11 <+bridge> [ddnet] <Jupstar âœª>             from (
20:11 <+bridge> [ddnet] <Jupstar âœª>                 select min(r.time) as best, Map from race r where name = "Ryozuki" group by map
20:13 <+bridge> [ddnet] <Jupstar âœª> @Ryozuki if u had r4
20:13 <+bridge> [ddnet] <Jupstar âœª> 
20:13 <+bridge> [ddnet] <Jupstar âœª> is it the prev time to whoever had r4 before your rank?
20:13 <+bridge> [ddnet] <Jupstar âœª> 
20:13 <+bridge> [ddnet] <Jupstar âœª> or is it r4 if your finish wouldnt exists
20:13 <+bridge> [ddnet] <Jupstar âœª> 
20:13 <+bridge> [ddnet] <Jupstar âœª> or simply the actual run before ur finish?
20:13 <+bridge> [ddnet] <Jupstar âœª> 
20:13 <+bridge> [ddnet] <Jupstar âœª> its so magic to me xd
20:13 <+bridge> [ddnet] <Jupstar âœª> i mean records always takes whoever had r1 before
20:13 <+bridge> [ddnet] <Jupstar âœª> but it kinda seems weird to do that for other ranks, since they can change during time
20:14 <+bridge> [ddnet] <Jupstar âœª> anyway enough SQL for a month xd
20:18 <+bridge> [ddnet] <Ryozuki> xd
20:18 <+bridge> [ddnet] <Ryozuki> its the rank before yours
20:18 <+bridge> [ddnet] <Ryozuki> thats not yours
20:18 <+bridge> [ddnet] <Ryozuki> e.g you improved a % over the previous rank
20:18 <+bridge> [ddnet] <Ryozuki> its always just your previous rank
20:18 <+bridge> [ddnet] <Ryozuki> not relative to the first
20:20 <+bridge> [ddnet] <Jupstar âœª> so if u have r4, the time to r5? xd
20:23 <+bridge> [ddnet] <Jupstar âœª> ```sqlSELECT 
20:23 <+bridge> [ddnet] <Jupstar âœª>     z.*,
20:23 <+bridge> [ddnet] <Jupstar âœª>     ((z.best - z.prevranktime) / z.best) * 100 as prev
20:23 <+bridge> [ddnet] <Jupstar âœª> FROM
20:23 <+bridge> [ddnet] <Jupstar âœª> (
20:23 <+bridge> [ddnet] <Jupstar âœª>     select 
20:23 <+bridge> [ddnet] <Jupstar âœª>         y.best,
20:23 <+bridge> [ddnet] <Jupstar âœª>         y.Map,
20:23 <+bridge> [ddnet] <Jupstar âœª>         y.Ranking,
20:23 <+bridge> [ddnet] <Jupstar âœª>         y.Timestamp,
20:23 <+bridge> [ddnet] <Jupstar âœª>         (
20:23 <+bridge> [ddnet] <Jupstar âœª>             select 
20:23 <+bridge> [ddnet] <Jupstar âœª>                 r4.Time
20:23 <+bridge> [ddnet] <Jupstar âœª>             from
20:23 <+bridge> [ddnet] <Jupstar âœª>                 (select r3.Time from race as r3 where r3.Map = y.Map order by r3.Time ASC) as r4
20:23 <+bridge> [ddnet] <Jupstar âœª>             where
20:23 <+bridge> [ddnet] <Jupstar âœª>                 r4.Time > y.best LIMIT 1
20:23 <+bridge> [ddnet] <Jupstar âœª>         ) as prevranktime
20:23 <+bridge> [ddnet] <Jupstar âœª>     from
20:23 <+bridge> [ddnet] <Jupstar âœª>         (
20:23 <+bridge> [ddnet] <Jupstar âœª>             select 
20:23 <+bridge> [ddnet] <Jupstar âœª>                 x.best,
20:23 <+bridge> [ddnet] <Jupstar âœª>                 x.Map,
20:23 <+bridge> [ddnet] <Jupstar âœª>                 (
20:23 <+bridge> [ddnet] <Jupstar âœª>                     select COUNT(*) + 1 as r from (select time from race r1 where r1.Map = x.Map and r1.time < x.best group by r1.name)
20:23 <+bridge> [ddnet] <Jupstar âœª>                 )
20:23 <+bridge> [ddnet] <Jupstar âœª>                 as Ranking,
20:23 <+bridge> [ddnet] <Jupstar âœª>                 (select timestamp from race as r2 where r2.Map = x.Map and r2.Time = x.best and r2.name = "Ryozuki" LIMIT 1) as Timestamp
20:23 <+bridge> [ddnet] <Jupstar âœª>             from (
20:23 <+bridge> [ddnet] <Jupstar âœª>                 select min(r.time) as best, Map from race r where name = "Ryozuki" group by map
20:24 <+bridge> [ddnet] <Jupstar âœª>             ) as x
20:24 <+bridge> [ddnet] <Jupstar âœª> ```sql
20:24 <+bridge> [ddnet] <Jupstar âœª> SELECT 
20:24 <+bridge> [ddnet] <Jupstar âœª>     z.*,
20:24 <+bridge> [ddnet] <Jupstar âœª>     ((z.best - z.prevranktime) / z.best) * 100 as prev
20:24 <+bridge> [ddnet] <Jupstar âœª> FROM
20:24 <+bridge> [ddnet] <Jupstar âœª> (
20:24 <+bridge> [ddnet] <Jupstar âœª>     select 
20:24 <+bridge> [ddnet] <Jupstar âœª> ok fixed it for that
20:24 <+bridge> [ddnet] <Jupstar âœª> for some reason it also only takes 48ms now xD
20:24 <+bridge> [ddnet] <Jupstar âœª> i only added a timestamp index, which i didnt use before so weird af
20:24 <+bridge> [ddnet] <Jupstar âœª> these are my indices, cant copy so soz for image
20:24 <+bridge> [ddnet] <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1044694992981082173/image.png
20:30 <+bridge> [ddnet] <Ryozuki> the % improvement over r5
20:30 <+bridge> [ddnet] <Ryozuki> u literally see my calc in the query
20:31 <+bridge> [ddnet] <Ryozuki> oh timestamp query
20:31 <+bridge> [ddnet] <Ryozuki> i dont think i have it
20:31 <+bridge> [ddnet] <Ryozuki> oh lol
20:31 <+bridge> [ddnet] <Ryozuki> you can have indices with ASC and desc
20:31 <+bridge> [ddnet] <Ryozuki> TIL
20:32 <+bridge> [ddnet] <Jupstar âœª> yeah i did that too now i think
20:32 <+bridge> [ddnet] <Ryozuki> i have the 5800x on my table
20:32 <+bridge> [ddnet] <Ryozuki> just gotta install it
20:32 <+bridge> [ddnet] <Ryozuki> i gotta beat my lazyness
20:32 <+bridge> [ddnet] <Ryozuki> 10 fps increase here i come
20:32 <+bridge> [ddnet] <Ryozuki> kek
20:33 <+bridge> [ddnet] <Jupstar âœª> i wonder how fast ddnets sql is
20:33 <+bridge> [ddnet] <Jupstar âœª> deen is SQL pro
20:33 <+bridge> [ddnet] <Ryozuki> nah but its probs matters a lot for compile times
20:33 <+bridge> [ddnet] <Ryozuki> and sql kek
20:33 <+bridge> [ddnet] <Jupstar âœª> xd
20:33 <+bridge> [ddnet] <Jupstar âœª> but faster compiling
20:33 <+bridge> [ddnet] <Jupstar âœª> is epic
20:41 <+bridge> [ddnet] <nori> just learned csgo has dxvk vulkan backend on linux :poggers: with tearing protocol merged it is time to install it on linux back
20:45 <+bridge> [ddnet] <Jupstar âœª> nice ðŸ˜„
20:46 <+bridge> [ddnet] <nori> they were using abstraction layer for opnegl too right? smth like togl
20:48 <+bridge> [ddnet] <Jupstar âœª> yes, but with dxvk not anymore
20:48 <+bridge> [ddnet] <Jupstar âœª> they use dxvk-native
20:48 <+bridge> [ddnet] <Jupstar âœª> u can compile dx on linux now ðŸ˜„
20:53 <+bridge> [ddnet] <nori> well looks like it's on upstream now https://github.com/Joshua-Ashton/dxvk-native
20:53 <+bridge> [ddnet] <nori> with dxvk 2
20:55 <+bridge> [ddnet] <Jupstar âœª> yep
20:56 <+bridge> [ddnet] <louis> so i added a new mod file koth.mod in the teeworlds 0.6 source for a gamemode
20:56 <+bridge> [ddnet] <louis> do i have to edit the cmake files somehow/
20:56 <+bridge> [ddnet] <louis> it's returning a lot of errors
21:15 <+bridge> [ddnet] <Ryozuki> csgo was always native what u on about
21:15 <+bridge> [ddnet] <Ryozuki> dota 2 and csgo are native
21:16 <+bridge> [ddnet] <Ryozuki> @Not Keks im back
21:16 <+bridge> [ddnet] <Ryozuki> idk if i should put lot of load on the pc right now or let the thermal paste settle
21:18 <+bridge> [ddnet] <Jupstar âœª> before they use togl
21:18 <+bridge> [ddnet] <Jupstar âœª> now they use dxvk-native
21:18 <+bridge> [ddnet] <Ryozuki> wat
21:18 <+bridge> [ddnet] <Jupstar âœª> it runs better now
21:18 <+bridge> [ddnet] <Jupstar âœª> since they use vulkan
21:18 <+bridge> [ddnet] <Ryozuki> but why dxvk
21:18 <+bridge> [ddnet] <Ryozuki> on dota they have opengl and vulkan backend
21:19 <+bridge> [ddnet] <Jupstar âœª> bcs they dont want to port to source engine 2
21:19 <+bridge> [ddnet] <Ryozuki> thats fake
21:19 <+bridge> [ddnet] <Ryozuki> source 2 is in vulkan already
21:19 <+bridge> [ddnet] <Ryozuki> dota 2 uses source 2
21:19 <+bridge> [ddnet] <Jupstar âœª> yes
21:19 <+bridge> [ddnet] <Jupstar âœª> but csgo not
21:19 <+bridge> [ddnet] <Jupstar âœª> he talked about csgo xD
21:19 <+bridge> [ddnet] <Jupstar âœª> u came up with dota
21:19 <+bridge> [ddnet] <Ryozuki> but they use the same engine
21:19 <+bridge> [ddnet] <Ryozuki> well csgo is in source 1
21:19 <+bridge> [ddnet] <Jupstar âœª> yes
21:19 <+bridge> [ddnet] <Ryozuki> and its valve
21:19 <+bridge> [ddnet] <Jupstar âœª> source1 has no vk
21:19 <+bridge> [ddnet] <Ryozuki> but why call it dxvk
21:19 <+bridge> [ddnet] <Ryozuki> and not vulkan
21:20 <+bridge> [ddnet] <Ryozuki> stupid directx
21:20 <+bridge> [ddnet] <Ryozuki> make it go away
21:20 <+bridge> [ddnet] <Jupstar âœª> bcs its literaly dx9 compiled on linux
21:20 <+bridge> [ddnet] <Jupstar âœª> they use dx9 header files
21:20 <+bridge> [ddnet] <Ryozuki> blegh
21:20 <+bridge> [ddnet] <Jupstar âœª> and then dxvk as library
21:27 <+bridge> [ddnet] <nori> yeah it has dxvk with -vulkan now
21:27 <+bridge> [ddnet] <nori> and it is source 1 so
21:27 <+bridge> [ddnet] <nori> only problem is
21:27 <+bridge> [ddnet] <nori> can't change the resolution sadge
21:28 <+bridge> [ddnet] <nori> https://github.com/ValveSoftware/csgo-osx-linux/issues/2889
21:32 <+bridge> [ddnet] <Jupstar âœª> r u one of those pros that plays 4:3 xd
21:35 <+bridge> [ddnet] <nori> i'm one of those nobos that plays on 4:3 xd
21:37 <+bridge> [ddnet] <nori> stutters a lot, i hope it will stop after shader caching stuff is done xd
21:39 <+bridge> [ddnet] <nori> but fps is improved like +30%
21:39 <+bridge> [ddnet] <nori> maybe more
21:41 <+bridge> [ddnet] <Jupstar âœª> yeah it does
21:41 <+bridge> [ddnet] <Jupstar âœª> for me it fixed the bug of slow opening
21:41 <+bridge> [ddnet] <Jupstar âœª> with togl it always took like a minute to start
21:56 <+bridge> [ddnet] <nori> @Not Keks https://github.com/ValveSoftware/csgo-osx-linux/issues/2889#issuecomment-997804245 do u have any idea how can i do some workaround like this on wayland? :d
21:56 <+bridge> [ddnet] <nori> maybe with xwayland dunno
21:58 <+bridge> [ddnet] <Jupstar âœª> ohm can u set ddnet to such a resolution? xd
21:58 <+bridge> [ddnet] <nori> gotta try
22:00 <+bridge> [ddnet] <Ryozuki> https://twitter.com/OnDeck/status/1595160031036846080
22:00 <+bridge> [ddnet] <Ryozuki> gaben the lord and saviour
22:06 <+bridge> [ddnet] <nori> yep
22:08 <+bridge> [ddnet] <Jupstar âœª> well then there must be a command to set your whole compositor to that resolution i guess ðŸ˜„
22:08 <+bridge> [ddnet] <Jupstar âœª> i never used wayland
22:08 <+bridge> [ddnet] <Jupstar âœª> never really
22:09 <+bridge> [ddnet] <Jupstar âœª> else compile own SDL2 for csgo that forces the resolution xd
22:09 <+bridge> [ddnet] <Jupstar âœª> 
22:09 <+bridge> [ddnet] <Jupstar âœª> except they are static linking it
22:45 <+bridge> [ddnet] <deen> Server up there?
22:45 <+bridge> [ddnet] <Anime.pdf> https://youtu.be/0O_VAEgJEcA
22:45 <+bridge> [ddnet] <Anime.pdf> :justatest:
22:47 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
22:47 <+bridge> [ddnet] <Ryozuki> i dont watch programming videos
22:47 <+bridge> [ddnet] <Jupstar âœª> microkernel
22:47 <+bridge> [ddnet] <Anime.pdf> Its not programming video
22:49 <+bridge> [ddnet] <deen> i only optimize when some page gets too slow though, disk space is expensive so donâ€˜t want indexes for everything
22:49 <+bridge> [ddnet] <Ryozuki> ddnet sql is probs not fast
22:49 <+bridge> [ddnet] <Ryozuki> since they rely on caching to a file
22:49 <+bridge> [ddnet] <Jupstar âœª> i mean the website pre calcs anyway doesnt it
22:49 <+bridge> [ddnet] <Ryozuki> but iirc the website doesnt do the rank calculation in the query
22:49 <+bridge> [ddnet] <Jupstar âœª> but disk space expensive is a word xd
22:49 <+bridge> [ddnet] <Ryozuki> it does it in python
22:50 <+bridge> [ddnet] <deen> only the parts which were too slow
22:50 <+bridge> [ddnet] <Jupstar âœª> does it not pre genearade a player's rank page?
22:51 <+bridge> [ddnet] <deen> yes, most of that page is precalculated
22:51 <+bridge> [ddnet] <Jupstar âœª> ok
22:51 <+bridge> [ddnet] <Ryozuki> @Not Keks i think he means adding a index to sql adds disk space
22:51 <+bridge> [ddnet] <Jupstar âœª> yes but the db is rather small
22:51 <+bridge> [ddnet] <deen> I doubt I can do the players page in 100ms with sql
22:51 <+bridge> [ddnet] <Ryozuki> i think its inefficient to pre render, you rly only need to cache the sql results
22:51 <+bridge> [ddnet] <Ryozuki> not the page itself
22:51 <+bridge> [ddnet] <Ryozuki> or just some parts
22:51 <+bridge> [ddnet] <Ryozuki> 1. its way smaller
22:52 <+bridge> [ddnet] <Ryozuki> 2.
22:52 <+bridge> [ddnet] <Jupstar âœª> async fetching
22:52 <+bridge> [ddnet] <Ryozuki> can be stored in memory
22:52 <+bridge> [ddnet] <Ryozuki> i simply store all the ranks in memory
22:52 <+bridge> [ddnet] <Jupstar âœª> but anyway the website is like it is
22:52 <+bridge> [ddnet] <deen> itâ€˜s not the page, itâ€˜s some results which i store in a msgpack file
22:52 <+bridge> [ddnet] <Ryozuki> i guess msgpack is less space efficient than just memory
22:52 <+bridge> [ddnet] <deen> so itâ€˜s also in memory
22:52 <+bridge> [ddnet] <deen> msgpack is just the ondisk format to get it from one python process to the other
22:53 <+bridge> [ddnet] <Ryozuki> so it has to go on disk?
22:53 <+bridge> [ddnet] <deen> yes, some download it for other projects too
22:53 <+bridge> [ddnet] <deen> i think discord bot uses it
22:54 <+bridge> [ddnet] <Ryozuki> oh well
22:54 <+bridge> [ddnet] <Jupstar âœª> how often does it recalculate btw?
22:54 <+bridge> [ddnet] <Ryozuki> if i do the page and its accepted ill just remake the bot in rust too
22:54 <+bridge> [ddnet] <Ryozuki> and use bincode or smth idk
22:54 <+bridge> [ddnet] <deen> as often as it can run, it basically runs in a loop, around once per hour
22:54 <+bridge> [ddnet] <Ryozuki> damn once per hour
22:54 <+bridge> [ddnet] <Jupstar âœª> uff
22:54 <+bridge> [ddnet] <Ryozuki> python for ya
22:55 <+bridge> [ddnet] <Ryozuki> on my sv fetching and indexing the ranks takes 130s, then thats it
22:55 <+bridge> [ddnet] <Ryozuki> https://ddstats.org/players/Neben
22:55 <+bridge> [ddnet] <Ryozuki> player pages load instant
22:56 <+bridge> [ddnet] <Jupstar âœª> but with a precalculated/cached SQL?
22:56 <+bridge> [ddnet] <Ryozuki> yeah
22:56 <+bridge> [ddnet] <Jupstar âœª> ok
22:56 <+bridge> [ddnet] <deen> the script also generates the /ranks/ pages for all countries and global, the msgpack is just a sideeffect of that
22:56 <+bridge> [ddnet] <Ryozuki> i basically load all player ranks
22:56 <+bridge> [ddnet] <Ryozuki> i think making this party dynamic allows for even more combinations
22:56 <+bridge> [ddnet] <Ryozuki> cuz this can grow exponentially
22:57 <+bridge> [ddnet] <Ryozuki> part*
22:57 <+bridge> [ddnet] <Ryozuki> e.g comparing between regions
22:57 <+bridge> [ddnet] <Jupstar âœª> i like to write small fast sqls per need
22:57 <+bridge> [ddnet] <Jupstar âœª> then everything is always up to date ðŸ˜„
22:57 <+bridge> [ddnet] <Ryozuki> yeah
22:58 <+bridge> [ddnet] <Ryozuki> but i think some caching is needed for player ranks, there is just too many
22:58 <+bridge> [ddnet] <Ryozuki> unless ur sql is magic
22:58 <+bridge> [ddnet] <Ryozuki> does it rly work
22:58 <+bridge> [ddnet] <Jupstar âœª> well i would never load all at once
22:58 <+bridge> [ddnet] <Ryozuki> i do that cuz otherwise i would hit a cache miss on every player page
22:58 <+bridge> [ddnet] <Jupstar âœª> see e.g. my sql for ranks in sqlite, 48ms sounds good enough
22:58 <+bridge> [ddnet] <Ryozuki> so i just do it all once
22:58 <+bridge> [ddnet] <Ryozuki> which is as fast as 1 player kinda
22:59 <+bridge> [ddnet] <Ryozuki> can u show it
22:59 <+bridge> [ddnet] <Jupstar âœª> i also once wrote an insanly optimized name search in sqlite, that can fetch maps, names etc in 3ms
22:59 <+bridge> [ddnet] <Jupstar âœª> 
22:59 <+bridge> [ddnet] <Jupstar âœª> but it used 6gb disk space for the sqlite db from ddnet xD
23:00 <+bridge> [ddnet] <Ryozuki> xd
23:01 <+bridge> [ddnet] <Ryozuki> oh
23:01 <+bridge> [ddnet] <Ryozuki> servers might be updated now
23:01 <+bridge> [ddnet] <Ryozuki> so in theory skins are reported
23:01 <+bridge> [ddnet] <Ryozuki> i know what i will add to the player page
23:02 <+bridge> [ddnet] <Ryozuki> ok i guess servers dont run on master
23:03 <+bridge> [ddnet] <Ryozuki> f
23:07 <+bridge> [ddnet] <Jupstar âœª> ah btw with sqlite fts5 the query is also faster
23:07 <+bridge> [ddnet] <Jupstar âœª> completly forgot it
23:07 <+bridge> [ddnet] <Jupstar âœª> finding "Ryozuki" was still too slow
23:08 <+bridge> [ddnet] <Alexander> skins are coming to the player page?
23:10 <+bridge> [ddnet] <Ryozuki> whats this
23:10 <+bridge> [ddnet] <Ryozuki> it will be possible
23:10 <+bridge> [ddnet] <Ryozuki> cuz i added so the ddnet servers report things such as each player skin and color, and if they are afk or not
23:10 <+bridge> [ddnet] <Alexander> i think i know how to render them :troll:
23:10 <+bridge> [ddnet] <Ryozuki> and the team they are in
23:12 <+bridge> [ddnet] <Jupstar âœª> Full text search
23:13 <+bridge> [ddnet] <Jupstar âœª> Do if u type in the full string at once it can basically create a hash and find that
23:13 <+bridge> [ddnet] <Jupstar âœª> For example. Dunno how it is implemented
23:15 <+bridge> [ddnet] <Jupstar âœª> I also abused it for the insanely optimized search. Even with a wildcard search it could find all ranks of "Ryo" in 3ms. But as said it wasted quite a bit of disk space
23:16 <+bridge> [ddnet] <Jupstar âœª> Likely tw names are pretty short
23:16 <+bridge> [ddnet] <Jupstar âœª> Also it requires a higher level script to generate the input. So it's not pure SQL
23:16 <+bridge> [ddnet] <Jupstar âœª> Lukely tw names are pretty short
23:22 <+bridge> [ddnet] <heinrich5991> not really, no
23:32 <+bridge> [ddnet] <ReiTW> Nop, buildings, my university has around 220 buildings and we manage the network part
23:33 <+bridge> [ddnet] <ReiTW> It was a rly cool place
23:33 <+bridge> [ddnet] <ReiTW> Nop, buildings, my university owns around 220 buildings and we manage the network part
23:36 <+bridge> [ddnet] <ReiTW> Nop, just buildings, my university owns around 220 buildings
