00:31 < bridge> <ryozuki> aoc will be interesting
00:35 < bridge> <ryozuki> https://stability.ai/news/stable-video-diffusion-open-ai-video-model
00:35 < bridge> <ryozuki> @jupeyy_keks gg
00:44 < bridge> <_voxeldoesart> :(
07:48 < bridge> <Jupstar ‚ú™> Nice
08:43 < bridge> <ryozuki> morning
08:44 < bridge> <ryozuki> its finally time i become a llvm contributor
08:47 < bridge> <teero777> xd you have 20k issues to choose from
08:49 < bridge> <ryozuki> nono
08:49 < bridge> <ryozuki> i have my own issue
08:50 < bridge> <ryozuki> https://github.com/llvm/llvm-project/issues/73008
08:58 < bridge> <Jupstar ‚ú™> Epic
08:59 < bridge> <Jupstar ‚ú™> Now do the pr to immortalize yourself
09:13 < bridge> <ryozuki> yes, i only need to do a setup that takes shitload and then code
09:27 < bridge> <Jupstar ‚ú™> btw maybe interesting for you (run on intel skylake i7 6700k):
09:27 < bridge> <Jupstar ‚ú™> https://pastebin.com/jpRXghp2
09:28 < bridge> <Jupstar ‚ú™> one of the reasons i linked hashlink. even tho it's a linked list, it's pretty fast for my use cases
09:28 < bridge> <Jupstar ‚ú™> (source: https://github.com/Jupeyy/dd-pg/blob/test5/game/shared-base/src/indexmap_tests.rs)
09:31 < bridge> <Jupstar ‚ú™> kinda funny that it beat std vec in the second benchmark in iteration
09:31 < bridge> <Jupstar ‚ú™> 
09:31 < bridge> <Jupstar ‚ú™> is ofc bit luck based, but shows that a efficiently packed linked list can still be very powerful
09:35 < bridge> <ryozuki> @jupeyy_keks why u not using criterion and black_box for benches?
09:36 < bridge> <Jupstar ‚ú™> 1. i never heard of that
09:36 < bridge> <Jupstar ‚ú™> 2. i wrote these benchmarks when i started with rust. so i defs didnt heard of them back then xdd
09:36 < bridge> <Jupstar ‚ú™> i tried cargo bench, but was unstable
09:36 < bridge> <Jupstar ‚ú™> like anything in rust üò¨
09:36 < bridge> <ryozuki> https://doc.rust-lang.org/std/hint/fn.black_box.html
09:36 < bridge> <ryozuki> cargo bench is not unstable??
09:36 < bridge> <Jupstar ‚ú™> then it was back then, i could not use it without nightlies
09:37 < bridge> <Jupstar ‚ú™> "Note: The #[bench] attribute is currently unstable and only available on the nightly channel. "
09:37 < bridge> <ryozuki> anyway everybody and their mother uses https://github.com/bheisler/criterion.rs
09:37 < bridge> <ryozuki> you can also use https://github.com/bheisler/iai which i think uses callgrind under the hood
09:38 < bridge> <ryozuki> the blackbox function is important to prevent const time optimizations on input
09:38 < bridge> <ryozuki> ah ur looking at the attribute
09:39 < bridge> <Jupstar ‚ú™> next time i'll look into it xd
09:39 < bridge> <Jupstar ‚ú™> but it doesn't look trivial to use these libs to me
09:39 < bridge> <Jupstar ‚ú™> i prefer to have some fancy ass macro that hides anything from me
09:41 < bridge> <ryozuki> ?
09:41 < bridge> <ryozuki> use criterion
09:41 < bridge> <ryozuki> it is like a cargo bench impl
09:41 < bridge> <ryozuki> when u setup criterion u just use cargo bench
09:41 < bridge> <Jupstar ‚ú™> ok
09:42 < bridge> <ryozuki> neat thing is it can make html reports with graphs
09:42 < bridge> <ryozuki> im seting up ccache before i venture on llvm dev
09:42 < bridge> <Jupstar ‚ú™> yeah, for a more important benchmark i can look into it xdd
09:43 < bridge> <Jupstar ‚ú™> how does it feel as cpp dev?
09:43 < bridge> <ryozuki> wdym
09:43 < bridge> <Jupstar ‚ú™> isnt llvm in cpp?
09:43 < bridge> <ryozuki> ye
10:40 < bridge> <milkeeycat> is there a command for a server to make it load maps in which you always must join a team?
10:44 < bridge> <Jupstar ‚ú™> Smth Like teamsize exist
10:46 < bridge> <milkeeycat> i was looking for sv_team command but it gets overwritten by map commands or smth :thonk:
10:53 < bridge> <milkeeycat> it doesnt seem to work even if a map has no sv_team coomand set :p
10:55 < ChillerDragon> reset.cfg is your friend for sv_team
10:55 < ChillerDragon> https://github.com/ddnet/ddnet/blob/8b0fccc6a3992084bda4bbfb8b957ca3b92f871d/src/engine/shared/config_variables.h#L356
10:56 < ChillerDragon> @milkeeycat this and inside the map are the places where sv_team can be set. Setting it in the regular autoexec.cfg gets troled away
11:04 < bridge> <milkeeycat> thanks :D
11:42 < bridge> <ryozuki> i got wow working on linux
11:42 < bridge> <ryozuki> with lutris
11:42 < bridge> <ryozuki> linux is amazing
11:56 < bridge> <Jupstar ‚ú™> Wow
12:03 < ChillerDragon> wow
12:34 < bridge> <kekomonter> wow
12:47 < bridge> <ryozuki> ```cpp
12:47 < bridge> <ryozuki> LLVMModuleRef mlirTranslateModuleToLLVMIR(MlirOperation module, LLVMContextRef context) {
12:47 < bridge> <ryozuki>     Operation *moduleOp = unwrap(module);
12:47 < bridge> <ryozuki> 
12:47 < bridge> <ryozuki>     llvm::LLVMContext *ctx = reinterpret_cast<llvm::LLVMContext*>(context);
12:47 < bridge> <ryozuki> 
12:47 < bridge> <ryozuki>     std::unique_ptr<llvm::Module> llvmModule = mlir::translateModuleToLLVMIR(moduleOp, *ctx);
12:47 < bridge> <ryozuki> 
12:47 < bridge> <ryozuki>     LLVMModuleRef moduleRef = reinterpret_cast<LLVMModuleRef>(const_cast<llvm::Module*>(llvmModule.release()));
12:47 < bridge> <ryozuki> 
12:47 < bridge> <ryozuki>     return moduleRef;
12:47 < bridge> <ryozuki> }
12:47 < bridge> <ryozuki> ```
12:47 < bridge> <ryozuki> guys
12:47 < bridge> <ryozuki> do u see ub here
12:47 < bridge> <ryozuki> xd
12:47 < bridge> <ryozuki> a c api for the c++ api
12:51 < bridge> <ryozuki> i tested it and it works
12:51 < bridge> <ryozuki> kek
13:37 < bridge> <ryozuki> epic
13:37 < bridge> <ryozuki> i even added a test
13:39 < bridge> <chillerdragon> Wat u hacking ryo
13:43 < bridge> <ryozuki> llvm
13:43 < bridge> <chillerdragon> Contribute to the project?
13:47 < bridge> <Jupstar ‚ú™> He's basically the maintainer at this point
13:53 < bridge> <ryozuki> ye
14:12 < ChillerDragon> wow
14:35 < bridge> <ryozuki> https://github.com/llvm/llvm-project/pull/73117
14:36 < bridge> <ryozuki> :justatest:
14:45 < bridge> <Jupstar ‚ú™> Wow
14:45 < bridge> <ryozuki> wew
14:45 < bridge> <ryozuki> @heinrich5991 btw did u know
14:45 < bridge> <ryozuki> llvm clang format options
14:45 < bridge> <ryozuki> they rename ur variables to the correct format
14:45 < bridge> <ryozuki> xd
14:46 < bridge> <heinrich5991> no, did not
14:46 < bridge> <ryozuki> ‚ùØ cat .clang-format
14:46 < bridge> <ryozuki> BasedOnStyle: LLVM
14:46 < bridge> <ryozuki> lmao
14:46 < bridge> <heinrich5991> what's "access"? how can it be slower than "iterate"?
14:46 < bridge> <ryozuki> ```
14:46 < bridge> <ryozuki> ‚ùØ cat .clang-tidy
14:46 < bridge> <ryozuki> Checks: '-*,clang-diagnostic-*,llvm-*,misc-*,-misc-const-correctness,-misc-unused-parameters,-misc-non-private-member-variables-in-classes,-misc-no-recursion,-misc-use-anonymous-namespace,readability-identifier-naming'
14:46 < bridge> <ryozuki> CheckOptions:
14:46 < bridge> <ryozuki>   - key:             readability-identifier-naming.ClassCase
14:46 < bridge> <ryozuki>     value:           CamelCase
14:46 < bridge> <ryozuki>   - key:             readability-identifier-naming.EnumCase
14:46 < bridge> <ryozuki>     value:           CamelCase
14:46 < bridge> <ryozuki>   - key:             readability-identifier-naming.FunctionCase
14:47 < bridge> <ryozuki>     value:           camelBack
14:47 < bridge> <ryozuki>   # Exclude from scanning as this is an exported symbol used for fuzzing
14:47 < bridge> <ryozuki>   # throughout the code base.
14:47 < bridge> <ryozuki>   - key:             readability-identifier-naming.FunctionIgnoredRegexp
14:47 < bridge> <ryozuki>     value:           "LLVMFuzzerTestOneInput"
14:47 < bridge> <ryozuki>   - key:             readability-identifier-naming.MemberCase
14:47 < bridge> <ryozuki>     value:           CamelCase
14:47 < bridge> <ryozuki>   - key:             readability-identifier-naming.ParameterCase
14:47 < bridge> <ryozuki>     value:           CamelCase
14:47 < bridge> <ryozuki>   - key:             readability-identifier-naming.UnionCase
14:47 < bridge> <ryozuki>     value:           CamelCase
14:47 < bridge> <ryozuki>   - key:             readability-identifier-naming.VariableCase
14:47 < bridge> <ryozuki>     value:           CamelCase
14:47 < bridge> <ryozuki>   - key:             readability-identifier-naming.IgnoreMainLikeFunctions
14:47 < bridge> <ryozuki>     value:           1
14:47 < bridge> <ryozuki>   - key:             readability-redundant-member-init.IgnoreBaseInCopyConstructors
14:47 < bridge> <ryozuki>     value:           1
14:47 < bridge> <ryozuki>   - key:             modernize-use-default-member-init.UseAssignment
14:47 < bridge> <ryozuki>     value:           1
14:47 < bridge> <ryozuki> ```
14:47 < bridge> <ryozuki> with this
14:47 < bridge> <ryozuki> i think
14:47 < bridge> <cyberfighter> uhhh my game crashed when i reloaded my server while i was still uploading a map, should i put the crash dump
14:47 < bridge> <Jupstar ‚ú™> Access By value
14:47 < bridge> <Jupstar ‚ú™> For vector it's find
14:47 < bridge> <Jupstar ‚ú™> That's why it's slow
14:47 < bridge> <ryozuki> @jupeyy_keks btw this uses the default hasher for hashmap
14:47 < bridge> <ryozuki> there are faster hash functions
14:47 < bridge> <cyberfighter> wtf??
14:48 < bridge> <Jupstar ‚ú™> Ok but I doubt it will beat indexmap
14:48 < bridge> <ryozuki> https://github.com/tkaitchuck/ahash
14:48 < bridge> <ryozuki> https://gitlab.redox-os.org/redox-os/seahash
14:49 < bridge> <heinrich5991> what does access mean for the different containers? probably not access by value, but by key somehow, for hashmaps?
14:49 < bridge> <cyberfighter> uh oh my server is crashing me whenever i try to join it
14:51 < bridge> <Jupstar ‚ú™> Yes. But since i also need delete it needs to be able to have hashmap lookup perf anyway. Don't over interpret the vec results. It's mostly in there to check iteration speed
14:51 < bridge> <Jupstar ‚ú™> It's original designed to compare index map to a hash queue
14:52 < bridge> <Jupstar ‚ú™> Ofc u can use a vector and never ever delete any element to have index performance
14:52 < bridge> <Jupstar ‚ú™> But then u have the limitations of ddnet code
14:53 < bridge> <heinrich5991> there are also hashmaps that can preserve insertion order
14:53 < bridge> <Jupstar ‚ú™> Indexmap
14:53 < bridge> <Jupstar ‚ú™> But not deleting order
14:53 < bridge> <Jupstar ‚ú™> At least not fast
14:54 < bridge> <heinrich5991> yes, also deletion order
14:54 < bridge> <heinrich5991> I think python has one
14:54 < bridge> <heinrich5991> I think you do it with a linked hash map, basically
14:54 < bridge> <Jupstar ‚ú™> Yes that's what I'm using here too
14:54 < bridge> <Jupstar ‚ú™> That's the whole point xd
14:55 < bridge> <Jupstar ‚ú™> Linked lists are used
14:55 < bridge> <heinrich5991> but apparently thel inked hashmap you use cannot maintain insertion order on deletion
14:55 < bridge> <heinrich5991> I just wanted to say that this is possible
14:55 < bridge> <Jupstar ‚ú™> It can
14:56 < bridge> <Jupstar ‚ú™> Only indexmap can not
14:56 < bridge> <Jupstar ‚ú™> I use hashlink
14:56 < bridge> <Jupstar ‚ú™> Indexmap basically used a vec internally
14:56 < bridge> <Jupstar ‚ú™> So it should normally outperform a internal linked list
14:56 < bridge> <Jupstar ‚ú™> In iteration
14:57 < bridge> <ryozuki> what do u use this map for
14:57 < bridge> <Jupstar ‚ú™> Lot of stuff
14:58 < bridge> <Jupstar ‚ú™> E.g. skins container
14:58 < bridge> <Jupstar ‚ú™> Which makes it easy to remove unused skins
14:58 < bridge> <Jupstar ‚ú™> A.k.a unhot unloading
14:58 < bridge> <Jupstar ‚ú™> And hot loading if used again
15:01 < bridge> <Jupstar ‚ú™> https://github.com/Jupeyy/dd-pg/blob/test5/game/client-containers/src/container.rs#L98-L110
15:01 < bridge> <Jupstar ‚ú™> 
15:01 < bridge> <Jupstar ‚ú™> i'm basically moving used stuff to the end, which is _almost_ free with a linked list
15:01 < bridge> <Jupstar ‚ú™> then i know that all stuff in the front _might_ be old
15:02 < bridge> <Jupstar ‚ú™> it's also nice for network queues
15:02 < bridge> <Jupstar ‚ú™> 
15:02 < bridge> <Jupstar ‚ú™> and entity containers
15:04 < bridge> <Jupstar ‚ú™> did u know the maintainer of the crate is/was the lead dev of starbound
15:05 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1176886068855967854/image.png?ex=65707f90&is=655e0a90&hm=2828311a53ddf13a9d491a5aec736975fec7810573a090a4d7f564a437428a91&
15:05 < bridge> <ryozuki> ChillerDragon
15:05 < bridge> <ryozuki> what are u up to
15:05 < bridge> <ryozuki> little troll xd
15:05 < bridge> <Jupstar ‚ú™> https://store.steampowered.com/app/211820/Starbound/
15:05 < bridge> <Jupstar ‚ú™> this game xdd
15:06 < bridge> <Jupstar ‚ú™> ok enough talk, cya
15:06 < bridge> <Jupstar ‚ú™> 
15:06 < bridge> <Jupstar ‚ú™> chiller stop troll on important projects lmao
15:06 < bridge> <ryozuki> nice
15:06 < bridge> <Jupstar ‚ú™> she even had a rustcon talk xDD
15:07 < bridge> <ryozuki> when c++20 on ddnet
15:08 < bridge> <Jupstar ‚ú™> chillerdragon: what did u even try to write that it was auto detected by some bot
15:08 < bridge> <ryozuki> i wanna know too
15:08 < bridge> <Jupstar ‚ú™> in 30 years
15:09 < bridge> <ryozuki> im amazed how well lutris works
15:09 < bridge> <ryozuki> and well wine proton
15:09 < bridge> <ryozuki> ill try starcraft 2
15:09 < bridge> <heinrich5991> did you maybe get an email about it?
15:10 < bridge> <ryozuki> lemme check
15:10 < bridge> <ryozuki> yes
15:10 < bridge> <ryozuki> he said this
15:10 < bridge> <ryozuki> ```
15:10 < bridge> <ryozuki> wow ryOwO is llvm dev
15:10 < bridge> <ryozuki> ```
15:10 < bridge> <ryozuki> no wonder xd
15:10 < bridge> <Jupstar ‚ú™> typical chiller ngl
15:11 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1176887690784931890/image.png?ex=65708112&is=655e0c12&hm=fbc26fc2ab43d845886aa9b4898f5910c15fff3e096279aa6ba42e799e7a1e88&
15:11 < bridge> <ryozuki> 113mb/s rn
15:11 < bridge> <ryozuki> linux rocks
15:12 < bridge> <ryozuki> i need to buy a new 2tb ssd
15:12 < bridge> <Jupstar ‚ú™> xd
15:12 < bridge> <Jupstar ‚ú™> 
15:12 < bridge> <Jupstar ‚ú™> i won lottery => linux rocks
15:12 < bridge> <ryozuki> i kinda wanna change the m2 ssd which i think is 500gb
15:12 < bridge> <ryozuki> but i would need to move my OS
15:12 < bridge> <ryozuki> and im too lazy
15:12 < bridge> <ryozuki> maybe it would work if i copy it with dd
15:12 < bridge> <ryozuki> and then change fstab?
15:13 < bridge> <ryozuki> the uuid
15:13 < bridge> <ryozuki> https://www.amazon.es/Crucial-CT2000P5PSSD8-S%C3%B3lido-Interno-6600MB/dp/B098WKQRDL/
15:13 < bridge> <ryozuki> its amazing
15:13 < bridge> <ryozuki> 100‚Ç¨
15:13 < bridge> <ryozuki> pic4
15:13 < bridge> <ryozuki> so cheap rn
15:13 < bridge> <zogtib> you can clone disks/partitions with gparted
15:14 < bridge> <zogtib> also iirc UUID gets also copied
15:15 < bridge> <ryozuki> rly?
15:15 < bridge> <ryozuki> i thought uuid was made up from some hardware info
15:15 < bridge> <ryozuki> xd
15:15 < bridge> <ryozuki> ill buy that m2
15:16 < bridge> <zogtib> gparted also has an option to regenerate UUID for a filesystem/partition
15:18 < bridge> <zogtib> So if you can have both SSDs connected to your PC at the same time you can just copy+paste partitions with gparted
15:19 < bridge> <zogtib> you can resize them also etc
15:20 < bridge> <Jupstar ‚ú™> @ryozuki how the hell do you live with 500GB xdd
15:20 < bridge> <Jupstar ‚ú™> 
15:20 < bridge> <Jupstar ‚ú™> compiling 10 rust projects = full
15:20 < bridge> <ryozuki> i have a normal ssd
15:20 < bridge> <ryozuki> with 2tb
15:20 < bridge> <ryozuki> but shared with winshit
15:20 < bridge> <Jupstar ‚ú™> ok üòÑ
15:20 < bridge> <Jupstar ‚ú™> urgh
15:20 < bridge> <ryozuki> damn
15:20 < bridge> <ryozuki> amazon is smth else
15:20 < bridge> <ryozuki> i will get the ssd today
15:20 < bridge> <ryozuki> XD
15:21 < bridge> <Jupstar ‚ú™> big city
15:21 < bridge> <ryozuki> ye
15:22 < bridge> <ryozuki> oh i see my setup now
15:22 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1176890554836058213/image.png?ex=657083bd&is=655e0ebd&hm=ffa9fb27ffc25a08232a6424e890c9c1cd5ae6e59b2d4b3a9526b61133811cab&
15:22 < bridge> <ryozuki> this is how i have it
15:23 < bridge> <ryozuki> 2 m2s
15:23 < bridge> <ryozuki> windows stupidly takes lot of space
15:24 < bridge> <ryozuki> https://askubuntu.com/questions/57908/how-can-i-quickly-copy-a-gpt-partition-scheme-from-one-hard-drive-to-another
15:27 < bridge> <ryozuki> https://wiki.archlinux.org/title/Rsync#Full_system_backup
15:27 < bridge> <ryozuki> hmm
15:28 < bridge> <ryozuki> https://man.archlinux.org/man/xfs_copy.8
15:28 < bridge> <ryozuki> looks pog
15:46 < bridge> <ryozuki> damn i already got a review
15:54 < bridge> <Jupstar ‚ú™> Rip
15:54 < bridge> <Jupstar ‚ú™> More review than code xd
15:54 < bridge> <Jupstar ‚ú™> Good that u paid for that
15:54 < bridge> <ryozuki> nah its good
15:55 < bridge> <ryozuki> its mostly style and doc conventions
17:21 < ChillerDragon> https://zillyhuhn.com/cs/.1700670082.png
17:21 < ChillerDragon> watfak
17:21 < bridge> <heinrich5991> don't spam people's issue trackers
17:22 < ChillerDragon> ofc banhammer5991 agrees with censorship axaxax
17:22 < ChillerDragon> i was cheering for my frint
17:22 < bridge> <heinrich5991> https://lucisqr.substack.com/p/why-i-think-c-is-still-a-very-attractive
17:41 < bridge> <Jupstar ‚ú™> chillerdragon: ~600 ppl are watching that repo
17:41 < bridge> <Jupstar ‚ú™> nice mass ping
17:41 < bridge> <Jupstar ‚ú™> üò¨
17:48 < ChillerDragon> oh no shiet
17:48 < ChillerDragon> but wait they dont watch pr comments do they?
17:48 < bridge> <ryozuki> https://github.com/llvm/llvm-project/pull/73117#pullrequestreview-1744884956
17:48 < bridge> <ryozuki> ez
17:48 < bridge> <ryozuki> my pr got approved
17:48 < ChillerDragon> epic
17:48 < bridge> <heinrich5991> if you watch a repo, you get all comments
17:49 < ChillerDragon> okay i fucked up then 
17:49 < ChillerDragon> wopsi daisy
17:49 < ChillerDragon> Im not used to github comments being red by more than 2 people
17:49 < ChillerDragon> @ryozuki thats big flex bro congrats
17:50 < bridge> <ryozuki> chiller
17:50 < bridge> <ryozuki> they watch prs
17:50 < bridge> <ryozuki> and they have subscribers
17:50 < bridge> <ryozuki> on another platform
17:50 < bridge> <ryozuki> @llvm/pr-subscribers-mlir-llvm
17:50 < bridge> <ryozuki> 
17:50 < bridge> <ryozuki> @llvm/pr-subscribers-mlir
17:50 < bridge> <ryozuki> also on phabricator
17:50 < bridge> <Jupstar ‚ú™> it's ok chiller, u'll be fame now
17:52 < bridge> <_voxeldoesart> wait, github can delete comments? LOL
17:52 < bridge> <_voxeldoesart> i thought everything there was just kinda permanent
17:52 < ChillerDragon> nono github is like a regular forum
17:52 < ChillerDragon> repo owners can delete and edit comments
17:52 < bridge> <Jupstar ‚ú™> u can generally remove sensible data
17:52 < bridge> <ryozuki> edits show their diff tho*
17:53 < ChillerDragon> ddnet also uses it to censor bot clients etc 
17:53 < ChillerDragon> bot ads
17:53 < bridge> <Jupstar ‚ú™> you mean yours?
17:53 < bridge> <Jupstar ‚ú™> bcs u always cross link to your repo
17:53 < ChillerDragon> oh that too axaxax
17:53 < bridge> <ryozuki> https://www.youtube.com/watch?v=0PK9RzSl9O0
17:53 < bridge> <ryozuki> @jupeyy_keks
17:54 < ChillerDragon> i saw latlely something on ddnet github where it got edited saying "dont mention bot clients" or sumsin
17:54 < bridge> <Jupstar ‚ú™> the average apple user takes that as granted
17:55 < bridge> <heinrich5991> you can also delete edit revisions
17:55 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1176928891521208422/image.png?ex=6570a772&is=655e3272&hm=a9f2edc112cfa32d93b84e3a1d4bd8de67fc922c4a5873f99348b7e5b086b152&
17:55 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1176928968478310420/image.png?ex=6570a784&is=655e3284&hm=014f16a000250622a8046fb5e2d2f7343f8664621be26ea608b126b6dd3fa0bc&
17:55 < bridge> <ryozuki> XD
17:55 < bridge> <_voxeldoesart> lol
17:55 < bridge> <ryozuki> apple in a nutshell
17:56 < bridge> <_voxeldoesart> when open source hardware stuff
17:56 < bridge> <Jupstar ‚ú™> open hardware?
17:56 < bridge> <ryozuki> why u carte
17:56 < bridge> <ryozuki> care
17:56 < bridge> <ryozuki> u use windows
17:56 < bridge> <ryozuki> :justatest:
17:56 < bridge> <Jupstar ‚ú™> pssst
17:56 < bridge> <Jupstar ‚ú™> dont demotivate him
17:57 < bridge> <ryozuki> i think rpi is open source
17:57 < bridge> <Jupstar ‚ú™> @ryozuki if there would be open hardware pcs (that are useful)
17:57 < bridge> <Jupstar ‚ú™> would u also built it your own, just like you build gentoo your own?
17:57 < bridge> <Jupstar ‚ú™> else u not hipster enough
17:57 < bridge> <ryozuki> idk
17:57 < bridge> <ryozuki> sounds more complicated
17:57 < bridge> <ryozuki> but ifg i had spare money i would try
17:58 < bridge> <_voxeldoesart> damn so im suddenly not allowed to mention j
17:58 < bridge> <_voxeldoesart> hardware now?? LOL
17:58 < bridge> <_voxeldoesart> classic linux user
17:58 < bridge> <Jupstar ‚ú™> i always wonder how high voxels pulse is in this chat
17:58 < bridge> <Jupstar ‚ú™> either he player, or he raging af
17:59 < bridge> <_voxeldoesart> im literally laying in bed rn
17:59 < bridge> <Jupstar ‚ú™> bom bom
17:59 < bridge> <Jupstar ‚ú™> bom bom
17:59 < bridge> <ryozuki> im joking xd
17:59 < bridge> <ryozuki> voxel u need to come to windows
17:59 < bridge> <ryozuki> ur the last one left
17:59 < bridge> <heinrich5991> you can still use windows and care about open hardware
17:59 < bridge> <ryozuki> well and robyt
17:59 < bridge> <heinrich5991> just like you can use closed hardware and still use linux
17:59 < bridge> <ryozuki> yeah
18:00 < bridge> <heinrich5991> please don't do this shitting on windows users‚Ä¶
18:00 < bridge> <Jupstar ‚ú™> please continue, my popcorn is not empty yet
18:01 < bridge> <_voxeldoesart> he said he was joking, plus this is ryozuki so, ive gotten used to it
18:01 < bridge> <heinrich5991> idc if people are "joking"
18:01 < bridge> <heinrich5991> in real life you have to make really sure that the recipient gets that, in order to still be friendly
18:01 < bridge> <heinrich5991> over the internet, it just doesn't work
18:02 < bridge> <ryozuki> feels low quality and typical anti rust
18:02 < bridge> <ryozuki> > Conclusion
18:02 < bridge> <ryozuki> > Given that the performance benefits are either inconclusive, non-existent or more likely negative, and the safety benefits are not really that pressing for most applications, is that really worth moving to a completely new language, with its infamous long and hard learning curve as Rust?
18:02 < bridge> <ryozuki> xd
18:02 < bridge> <learath2> What did chiller write in the comment?
18:03 < bridge> <ryozuki> ```
18:03 < bridge> <ryozuki> wow ryOwO is llvm dev
18:03 < bridge> <ryozuki> ```
18:03 < bridge> <ryozuki> he wrote this
18:03 < bridge> <heinrich5991> ^
18:03 < bridge> <Jupstar ‚ú™> that indeed sounds bullshit
18:03 < bridge> <Jupstar ‚ú™> xDD
18:03 < bridge> <ryozuki> on my pr on llvm
18:03 < bridge> <ryozuki> @learath2 im a llvm contributor now
18:03 < bridge> <ryozuki> :EZ:
18:03 < bridge> <ryozuki> :green_tick: rust
18:03 < bridge> <ryozuki> :green_tick: llvm
18:03 < bridge> <ryozuki> ???
18:03 < bridge> <_voxeldoesart> LOL
18:03 < bridge> <_voxeldoesart> trollerdragon
18:03 < bridge> <Jupstar ‚ú™> khronos
18:03 < bridge> <ryozuki> @learath2 im an llvm contributor now
18:03 < bridge> <ryozuki> what do u contribute to khronos?
18:03 < bridge> <ryozuki> a spec? xD
18:04 < bridge> <Jupstar ‚ú™> i contributed a bug report for the vulkan loader
18:04 < bridge> <Jupstar ‚ú™> üòè
18:04 < bridge> <heinrich5991> I still think X is as good as Y. that mostly tells me that Y is generally accepted to be good üôÇ
18:04 < bridge> <heinrich5991> "I still think X is as good as Y". that mostly tells me that Y is generally accepted to be good üôÇ
18:04 < bridge> <ryozuki> what is x and y here?
18:05 < bridge> <ryozuki> im not getting what u mean exactly
18:05 < bridge> <heinrich5991> I'm quoting the title of the blog post I sent
18:05 < bridge> <ryozuki> ah
18:05 < bridge> <learath2> I have a feeling anything anti rust would feel low quality to you immediately anyway
18:06 < bridge> <ryozuki> not rly
18:06 < bridge> <ryozuki> i always said
18:06 < bridge> <ryozuki> if a new lang better than rust pops up
18:06 < bridge> <ryozuki> ill jump ship
18:06 < bridge> <ryozuki> and i hope one appears
18:06 < bridge> <Jupstar ‚ú™> rust nightly > rust
18:06 < bridge> <Jupstar ‚ú™> ryo can accept that
18:06 < bridge> <ryozuki> true xd
18:06 < bridge> <heinrich5991> unfortunately, rust has a lot of movement behind it at this point
18:06 < bridge> <heinrich5991> so the new language is going to face an uphill battle, even if it is better
18:07 < bridge> <ryozuki> true
18:07 < bridge> <ryozuki> maybe rust has also easier time adopting new features from new languages
18:07 < bridge> <ryozuki> @jupeyy_keks polonius rust > rust
18:07 < bridge> <Jupstar ‚ú™> wat
18:07 < bridge> <heinrich5991> new borrow checker, I think?
18:07 < bridge> <ryozuki> polonius is the next gen borrow checker
18:08 < bridge> <Jupstar ‚ú™> is it faster?
18:08 < bridge> <ryozuki> -Zpolonius
18:08 < bridge> <Jupstar ‚ú™> is it less sensitive? xd
18:08 < bridge> <ryozuki> less sensitive
18:08 < bridge> <ryozuki> it allows more
18:08 < bridge> <Jupstar ‚ú™> interesting
18:08 < bridge> <ryozuki> i think its not faster or slower
18:08 < bridge> <ryozuki> https://github.com/rust-lang/polonius
18:10 < bridge> <ryozuki> there is also plans for a better type solver
18:10 < bridge> <ryozuki> https://github.com/rust-lang/chalk
18:11 < bridge> <ryozuki> well im not sure if its being used already
18:11 < bridge> <ryozuki> i read rust-analyzer uses it
18:12 < bridge> <learath2> It's not exactly less sensitive but it's smarter and can prove more, no?
18:12 < bridge> <ryozuki> yeah, i guess by less sensitive we mean it is less restrictive in what u can do
18:12 < bridge> <ryozuki> since it can prove more yes
18:14 < bridge> <learath2> I think I'll just merge #7171 and we can fix the ubsan warnings some other way
18:14 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/7171
18:15 < bridge> <Jupstar ‚ú™> @ryozuki have u already tried NVK?
18:15 < bridge> <Jupstar ‚ú™> it's now vk 1.0 conform
18:15 < bridge> <ryozuki> whats was nvk xd
18:15 < bridge> <Jupstar ‚ú™> nvidia vk driver
18:15 < bridge> <Jupstar ‚ú™> oss ofc
18:16 < bridge> <Jupstar ‚ú™> not from nvidia
18:16 < bridge> <ryozuki> ah idk
18:16 < bridge> <Jupstar ‚ú™> enjoy your 3 fps
18:16 < bridge> <Jupstar ‚ú™> üò¨
18:28 < bridge> <learath2> Is anyone even making anything using the rust integration we have in the code?
18:29 < bridge> <learath2> Every compilation is paying the rust tax and we still don't have anything in :/
18:30 < bridge> <heinrich5991> yea, maybe we should rip it out again
18:30 < bridge> <heinrich5991> my upcoming‚Ñ¢ quic network will make use of rust
18:32 < bridge> <ryozuki> its sad we havent done anything
18:32 < bridge> <ryozuki> but i think its more that there is not much ported to rust
18:32 < bridge> <ryozuki> so u need to do 200% work to do something
18:34 < bridge> <ryozuki> https://www.kungfudev.com/blog/2023/11/21/ddos-mitigation-with-rust-and-aya
18:34 < bridge> <ryozuki> @reitw
18:39 < bridge> <Jupstar ‚ú™> it's sad that we need pyson, rust & cpp compiler
18:39 < bridge> <Jupstar ‚ú™> 
18:39 < bridge> <Jupstar ‚ú™> at least pyson should leave üòè
18:39 < bridge> <heinrich5991> you forgot the cmake interpreter
18:39 < bridge> <Jupstar ‚ú™> true
18:39 < bridge> <heinrich5991> generally, python and cmake are installed on systems that have a C++ compiler
18:39 < bridge> <heinrich5991> so it's not much of a burden
18:45 < bridge> <_voxeldoesart> oh man
18:45 < bridge> <_voxeldoesart> i wonder who made that pixelart
18:49 < bridge> <heinrich5991> stuff like that might always be an AI production
18:50 < bridge> <deksv> hello
18:50 < bridge> <deksv> Where can I find multieasymap files?
18:50 < bridge> <learath2> https://maps.ddnet.org/ all the maps we host and many others are here
18:51 < bridge> <heinrich5991> you can also open it in your client if you're connected to the server
18:51 < bridge> <heinrich5991> open the editor and select "load current map"
18:51 < bridge> <deksv> https://cdn.discordapp.com/attachments/293493549758939136/1176943084764942448/image.png?ex=6570b4a9&is=655e3fa9&hm=4c0ba9de6455ebb3091bd95a79aed420938a204811257127efa2a1f57372a382&
18:51 < bridge> <Jupstar ‚ú™> https://github.com/ddnet/ddnet-maps/raw/master/types/novice/maps/Multeasymap.map
18:52 < bridge> <Jupstar ‚ú™> generally all ddnet maps are here
18:52 < bridge> <Jupstar ‚ú™> https://github.com/ddnet/ddnet-maps/tree/master
18:52 < bridge> <Jupstar ‚ú™> the current ones
18:52 < bridge> <_voxeldoesart> yeah i thought so. i set it up as a trick question.
18:52 < bridge> <_voxeldoesart> when hire an artist
18:52 < bridge> <deksv> I'm trying, thank you everyone in advance
18:53 < bridge> <Jupstar ‚ú™> AIs are artists
18:53 < bridge> <Jupstar ‚ú™> üò¨
18:54 < bridge> <deksv> Thank you very much it worked. I have another question, how can I add my server to the Turkish servers list? I just type the IP and enter it, I want it to appear in the list.,
18:54 < bridge> <_voxeldoesart> prove it
18:54 < bridge> <heinrich5991> if you host it on a server, the server list should automatically list it
18:55 < bridge> <heinrich5991> please do not impersonate the "DDNet Turkey" name though
18:56 < bridge> <deksv> Well, when I don't, it doesn't appear when I type the server name.
18:56 < bridge> <deksv> I host it on a virtual server located in T√ºrkiye.
18:56 < bridge> <Jupstar ‚ú™> xdd
18:56 < bridge> <Jupstar ‚ú™> it still choose you if i could choose
18:57 < bridge> <Jupstar ‚ú™> the synapses count is still too low
18:57 < bridge> <heinrich5991> can you check the log output of the server?
18:57 < bridge> <heinrich5991> what does it say about "register"?
18:58 < bridge> <deksv> 2023-11-22 09:52:33 I sql: failed connecting to db: Can't open sqlite database: 'unable to open database file'
18:59 < bridge> <heinrich5991> that sound bad üòÆ
18:59 < bridge> <heinrich5991> but maybe unrelated
19:00 < bridge> <deksv> I downloaded the server from the ddnet website, installed multeasy and opened it.
19:00 < bridge> <heinrich5991> which operating system is the server on? windows? linux?
19:00 < bridge> <deksv> windows 2016
19:00 < bridge> <heinrich5991> can you post the whole log output?
19:00 < bridge> <deksv> yes, one minute
19:01 < bridge> <deksv> share error
19:01 < bridge> <deksv> come to dm
19:01 < bridge> <deksv> i am bad english sorry...
19:02 < bridge> <deksv> 2023-11-22   I engine: running on windows-win64-amd64
19:02 < bridge> <deksv> 2023-11-22   I engine: arch is little endian
19:02 < bridge> <deksv> 2023-11-22   I engine: operating system version: Windows 10.0.14393.0
19:02 < bridge> <deksv> 2023-11-22   I storage: added path '$USERDIR' ('C:\Users\Administrator\AppData\Roaming/DDNet')
19:02 < bridge> <deksv> 2023-11-22   I storage: added path '$DATADIR' ('data')
19:02 < bridge> <deksv> 2023-11-22   I storage: added path '$CURRENTDIR' ('C:\Users\Administrator\Desktop\ddnet\DDNet-17.4-win64')
19:02 < bridge> <deksv> 2023-11-22   I http: libcurl version 8.0.1 (compiled = 8.0.1)
19:02 < bridge> <deksv> 2023-11-22   I host_lookup: host='localhost' port=0 1
19:02 < bridge> <deksv> 2023-11-22   I host_lookup: host='localhost' port=0 2
19:02 < bridge> <deksv> 2023-11-22   I console: executing 'autoexec_server.cfg'
19:02 < bridge> <deksv> 2023-11-22   I server: added maps to votes
19:02 < bridge> <deksv> 2023-11-22   I console: failed to open 'myServerconfig.cfg'
19:02 < bridge> <deksv> 2023-11-22   I server: starting...
19:02 < bridge> <deksv> 2023-11-22   I socket: Setting TOS on ipv6 failed: 0
19:02 < bridge> <deksv> 2023-11-22   I server: using port 8303
19:02 < bridge> <deksv> 2023-11-22   I server: server name is 'harbitech.com.tr DDNet server'
19:02 < bridge> <deksv> 2023-11-22   I sql: failed connecting to db: Can't open sqlite database: 'unable to open database file'
19:02 < bridge> <deksv> 2023-11-22   I sql: [2] load best time failed on all databases
19:02 < bridge> <deksv> 2023-11-22   I git-revision: d1310c22731891a3874ff52a83443f7cdd57842f
19:03 < bridge> <deksv> 2023-11-22   I server: version 17.4 on win64 amd64
19:03 < bridge> <deksv> 2023-11-22   I server: git revision hash: d1310c22731891a3874ff52a83443f7cdd57842f
19:03 < bridge> <deksv> 2023-11-22   I server: +-------------------------+
19:03 < bridge> <deksv> 2023-11-22   I server: | rcon password: 'V9gTC2' |
19:03 < bridge> <deksv> 2023-11-22   I server: +-------------------------+
19:03 < bridge> <reitw> I was thinking about writing a post but my english and explanations sucks
19:04 < bridge> <heinrich5991> check whether autoexec_server.cfg contains something like `sv_register`
19:04 < bridge> <heinrich5991> doit
19:04 < bridge> <heinrich5991> you could ask people here (e.g. me üòõ ) to review it
19:04 < bridge> <deksv> # Register server (make it public)
19:04 < bridge> <deksv> sv_register 0
19:06 < bridge> <heinrich5991> change that to 1
19:06 < bridge> <deksv> still same
19:10 < bridge> <yekrm> sv_register "ipv4"
19:11 < bridge> <heinrich5991> to get rid of the log messages
19:11 < bridge> <heinrich5991> doesn't really fix anything
19:36 < bridge> <learath2> How illegal is it to cast an iterator to a pointer? üòÑ
19:37 < bridge> <heinrich5991> just dereference it and reference it?
19:38 < bridge> <learath2> Problem is I need the iterator stored, but I only have a void *s worth of storage
19:39 < bridge> <learath2> Mh, what am I even thinking, iterators are not just pointers, it's larger than a void *
19:39 < bridge> <learath2> It's time for food, low blood sugar
19:39 < bridge> <heinrich5991> vector iterators are just a pointer AFAIK
19:40 < bridge> <heinrich5991> check the size and if it's larger, allocate
19:53 < bridge> <learath2> https://en.cppreference.com/w/cpp/memory/enable_shared_from_this have any of you ever seen this thing? black magic üòÑ
19:55 < bridge> <heinrich5991> if it is what I think it is, I wanted to have this in rust, before
19:55 < bridge> <heinrich5991> food now though, will look at it later
20:19 < bridge> <heinrich5991> hmm. doesn't sound too black-magic to me tbh
20:20 < bridge> <heinrich5991> but I'd still like something similar for rust
20:45 < bridge> <milkeeycat> whats the best place to put proto files in ddnet :thonk:  in data?
20:46 < bridge> <milkeeycat> whats the best place to put proto files in ddnet :thonk:  in `data`?
20:52 < bridge> <heinrich5991> datasrc, probably
20:53 < bridge> <milkeeycat> oh, thanks üôÇ
20:56 < bridge> <heinrich5991> what are you doing? üôÇ
20:58 < bridge> <milkeeycat> before i was working on website and rust server but ddnet server also has to send a request to rust server when the map is finished so it can shutdown and let the website know about it. so i need to use proto files in ddnet as well :feelsbadman:
20:58 < bridge> <heinrich5991> ah üôÇ
20:58 < bridge> <heinrich5991> got a link to the rest of the project? üôÇ
20:59 < bridge> <milkeeycat> rest? it's basically a website, rust server, and not commited ddnet server code
20:59 < bridge> <milkeeycat> https://github.com/DDNet-Team-Searcher everything is here
21:01 < bridge> <milkeeycat> 3.3k lines cmake file, holly hell :pepeW:
21:31 < bridge> <kekomonter> Website where players can find other players, sounds very cool :owo:
21:44 < ChillerDragon> ryOwO bash repo enjoyer
21:44 < ChillerDragon> https://zillyhuhn.com/cs/.1700685940.png
21:45 < bridge> <ryozuki> xd
21:57 < bridge> <heinrich5991> why did you go for protobuf?: )
21:57 < bridge> <heinrich5991> why did you go for protobuf? üôÇ
21:59 < bridge> <milkeeycat> Why not. Json sucks and i dont know many alternatives so i decided to try protobuf
22:00 < bridge> <milkeeycat> After 1 hour trying to make cmake generate those damn files, i feel it will be so much fun
22:15 < bridge> <heinrich5991> ah. I would've gone with json, I guess
22:15 < ChillerDragon> @milkeeycat where website
22:16 < bridge> <milkeeycat> On github :santatrollet:
22:16 < ChillerDragon> url
22:16 < bridge> <milkeeycat> That would be easy way
22:16 < bridge> <kekomonter> Link pls
22:16 < ChillerDragon> https://github.com/DDNet-Team-Searcher/website
22:16 < ChillerDragon> i see no link in description or readme
22:16 < bridge> <milkeeycat> Its not hosted
22:17 < ChillerDragon> wot
22:17 < ChillerDragon> why
22:17 < bridge> <milkeeycat> Because its not finished
22:17 < bridge> <milkeeycat> ._.
22:17 < bridge> <milkeeycat> I have a long ass todo
22:17 < ChillerDragon> classic
22:17 < bridge> <milkeeycat> Its right in the repo
22:18 < bridge> <Jupstar ‚ú™> who made the artwork
22:18 < bridge> <milkeeycat> My friend
22:18 < bridge> <Jupstar ‚ú™> who is your friend
22:18 < bridge> <milkeeycat> He played ddnet one and said he hates this game
22:18 < bridge> <milkeeycat> He played ddnet once and said he hates this game
22:18 < bridge> <Jupstar ‚ú™> aha
22:18 < bridge> <Jupstar ‚ú™> that's impossible
22:18 < bridge> <Jupstar ‚ú™> please try again
22:19 < bridge> <kekomonter> This art made by your friend too? xdd
22:19 < bridge> <kekomonter> https://cdn.discordapp.com/attachments/293493549758939136/1176995334761758871/image.png?ex=6570e553&is=655e7053&hm=30e2a7e56b57fe1a697436794e055b2d672818e15b0bc6767acc1b8b43004077&
22:19 < bridge> <milkeeycat> Nop, mystery.fox :D
22:19 < bridge> <kekomonter> Teach him how to use alpha channel
22:20 < bridge> <milkeeycat> Host it for me :gigachad:
22:20 < bridge> <milkeeycat> Her* xd
22:25 < bridge> <heinrich5991> why does json suck? üôÇ
22:26 < bridge> <milkeeycat> Takes a lot of space
22:27 < bridge> <Jupstar ‚ú™> it includes java in its name
22:27 < bridge> <Jupstar ‚ú™> üòè
22:27 < bridge> <milkeeycat> Almost every ur message ends with üôÇ :justatest:
22:28 < bridge> <milkeeycat> It includes JavaScript in its name
22:29 < bridge> <Jupstar ‚ú™> what are u even doing
22:29 < bridge> <Jupstar ‚ú™> that u need so much space
22:29 < bridge> <Jupstar ‚ú™> store vertices?
22:29 < bridge> <milkeeycat> I dont need much space
22:30 < bridge> <Jupstar ‚ú™> so u just hipster, i respect that
22:30 < bridge> <milkeeycat> I just dont want it to take bajillion kilobytes
22:30 < bridge> <Jupstar ‚ú™> 1 trillion fps is a must have for future humans, also when searching teams
22:30 < bridge> <Jupstar ‚ú™> not like compression exists xd
22:31 < bridge> <milkeeycat> (all i send is 3 numbers, but doesn't matter)
22:32 < bridge> <milkeeycat> The time hasn't come to frontend
22:32 < bridge> <milkeeycat> The time just hasn't come to frontend
22:34 < bridge> <milkeeycat> The time just hasn't come to frontend yet
22:38 < bridge> <Jupstar ‚ú™> i dont want to be mean, but if ur website does not use webgpu, it kinda sucks
22:38 < bridge> <Jupstar ‚ú™> would be really anti hipster
22:40 < bridge> <milkeeycat> Its not finished yet, i can find where to use it
22:42 < bridge> <milkeeycat> When i will have infinite amount of time ill get rid of next.js and rewrite it in htmx :greenthing:
22:42 < bridge> <milkeeycat> And go obviously
