00:53 < ws-client> <ChillerDragon> I thought a working /mapinfo was the only requirement for points to work <:tee_thinking:478629518358085653> are you using sqlite or mysql @kdaniel ?
00:54 < bridge> <kdaniel> mysql
00:55 < ws-client> <ChillerDragon> i think these days even sqlite works but mysql works for sure
00:55 < ws-client> <ChillerDragon> no errors in the logs?
00:55 < ws-client> <ChillerDragon> and you gave the map also more than 0 points? :D that show in /mapinfo 
00:58 < bridge> <kdaniel> that's not what i wanted to say but that the maps are entered in %s_maps and successfully recognised by /mapinfo so should be yes 
00:58 < bridge> <kdaniel> ```
00:58 < bridge> <kdaniel> str_format(aBuf, sizeof(aBuf),
00:58 < bridge> <kdaniel>         "INSERT INTO %s_points(Name, Points) "
00:58 < bridge> <kdaniel>         "VALUES (?, ?) "
00:58 < bridge> <kdaniel>         "ON DUPLICATE KEY UPDATE Points=Points+?",
00:58 < bridge> <kdaniel>         GetPrefix());
00:58 < bridge> <kdaniel> ```
00:58 < bridge> <kdaniel> also work
00:58 < bridge> <kdaniel> that's not what i wanted to say but that the maps are entered in %s_maps and successfully recognised by /mapinfo so should be yes 
00:58 < bridge> <kdaniel> ```
00:58 < bridge> <kdaniel> str_format(aBuf, sizeof(aBuf),
00:58 < bridge> <kdaniel>         "INSERT INTO %s_points(Name, Points) "
00:58 < bridge> <kdaniel>         "VALUES (?, ?) "
00:58 < bridge> <kdaniel>         "ON DUPLICATE KEY UPDATE Points=Points+?",
00:58 < bridge> <kdaniel>         GetPrefix());
00:58 < bridge> <kdaniel> ```
00:58 < bridge> <kdaniel> should also work
00:58 < bridge> <kdaniel> that's not what i wanted to say but that the maps are entered in %s_maps and successfully recognised by /mapinfo so should 
00:58 < bridge> <kdaniel> ```
00:58 < bridge> <kdaniel> str_format(aBuf, sizeof(aBuf),
00:58 < bridge> <kdaniel>         "INSERT INTO %s_points(Name, Points) "
00:58 < bridge> <kdaniel>         "VALUES (?, ?) "
00:58 < bridge> <kdaniel>         "ON DUPLICATE KEY UPDATE Points=Points+?",
00:59 < bridge> <kdaniel>         GetPrefix());
00:59 < bridge> <kdaniel> ```
00:59 < bridge> <kdaniel> also work
00:59 < bridge> <pathos3005> Yes :O then there's something going on with game.png
00:59 < ws-client> <ChillerDragon> at this point i would add some ``dbg_msgs``s around this ``INSERT INTO`` statement and see where it goes wrong
01:00 < bridge> <pathos3005> But shotgun etc. aren't affected
01:00 < ws-client> <ChillerDragon> is it unmodified latest ddnet code base @kdaniel ?
01:01 < bridge> <kdaniel> ah yes okay thought here are so common stupid questions known that it may be due to something like gametype etc as with random_votes but then I'll look for the error myself
01:02 < ws-client> <ChillerDragon> did you change sv_gametype?
01:02 < bridge> <kdaniel> ups sorry i mean sv_server_type
01:03 < bridge> <pathos3005> Nope
01:03 < bridge> <kdaniel> this should be changed to get working random_votes
01:04 < ws-client> <ChillerDragon> wtf @ryozuki  https://github.com/ddnet/ddnet/pull/8925
01:05 < ws-client> <ChillerDragon> now i have to put non ascii characters in my gametype or what -.-
01:07 < bridge> <kdaniel> damn i forgot that i changed one statement to get points even after first finish:
01:07 < bridge> <kdaniel> ```
01:07 < bridge> <kdaniel>         int NumFinished = true; //pSqlServer->GetInt(1);
01:07 < bridge> <kdaniel>         if(NumFinished == 0)
01:08 < bridge> <kdaniel> ```
01:08 < bridge> <kdaniel> will be never true xDD
01:13 < bridge> <pathos3005> Also I want to report that this isn't just me
02:12 < bridge> <pathos3005> Restarting the client fixes it only for some people
05:16 < bridge> <vappy19> 9000!
05:23 < ws-client> <ChillerDragon> yes its over 9000!
05:42 < bridge> <oxyzo.> 8,09958998668719085829131208009794E31681
05:50 < bridge> <notzxpixty> where i can find firedelay
06:11 < ws-client> <ChillerDragon> i tunes
06:12 < ws-client> <ChillerDragon> rcon ``tune grenade_fire_delay 0``
06:12 < ws-client> <ChillerDragon> see also ``tunes``
06:12 < ws-client> <ChillerDragon> @notzxpixty 
06:13 < bridge> <notzxpixty> tunes ok ,where i can find lines of this?
06:25 < ws-client> <ChillerDragon> wat
06:26 < bridge> <notzxpixty> nvm
06:30 < ws-client> <ChillerDragon> @patiga can there be no gamelayer?
06:30 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1726806627.png
08:36 < bridge> <milkeeycat> Yo, anyone knows why there's no `gmock.h` header file :\ (I did steps described in `Running tests (Debian/Ubuntu)` part in readme)
08:37 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1286576828991017043/image.png?ex=66ee698b&is=66ed180b&hm=196029b76520a4680bed53da828abb82de219f31dbec1c7b0e192d27363269c2&
08:45 < bridge> <teero777> probably because you didn't install it?
08:45 < bridge> <teero777> Isn't this some lib? xd
08:46 < bridge> <milkeeycat> i have `google-mock` lib package installed
08:46 < bridge> <milkeeycat> i have `google-mock` package installed
08:57 < bridge> <chillerdragon> Try the download gtest cmake flag. Check what the CI does
08:58 < bridge> <chillerdragon> Also deleting the build directory might help
08:58 < bridge> <milkeeycat> deleted it already 3 times xd
08:58 < bridge> <chillerdragon> Which cmake command did you run?
08:59 < bridge> <milkeeycat> `cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DDEV=ON .. && make run_tests`
09:02 < bridge> <chillerdragon> Try the GTEST one
09:05 < bridge> <milkeeycat> with `-DDOWNLOAD_GTEST=ON` it works
09:05 < bridge> <milkeeycat> thanks xd
09:23 < bridge> <murpi> @ryozuki 
09:23 < bridge> <murpi> https://github.com/edg-l/ddstats/blob/86940cd45074ea440bee048f8551252bd08eb557/src/routes/events/%2Bpage.svelte#L42
09:23 < bridge> <murpi> The close code must be either 1000, or between 3000 and 4999 otherwise switching between pages breaks (i.e. going from the /Events page to any other page raises an InvalidAccessError)
09:39 < bridge> <ryozuki> :O
10:00 < bridge> <patiga> only when you create a map from scratch, you cant save a map without a gamelayer
10:11 < ws-client> <ChillerDragon> hm okay then the optional makes sense. Bit annoying for type checking if a map is loaded hmm..
10:12 < ws-client> <ChillerDragon> maybe it would be nicer if making a map from scratch creates a game layer for you? like the editor does.
10:23 < bridge> <zhn> you should then pass everything for gamelayer to appear
10:24 < bridge> <zhn> current approach is not sane, but making default gamelayer for ::new(...) is kinda meh
10:50 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1286610486204563466/image.png?ex=66ee88e3&is=66ed3763&hm=ce8832388448f5548325b9e1f491b50a3c3b18395d68a185997862c84cf779eb&
10:50 < bridge> <ryozuki> feels good
10:56 < ws-client> <ChillerDragon> where did the input field for envelope values go in the editor?
10:58 < ws-client> <ChillerDragon> and how to resize the envelopes field in general?
11:00 < bridge> <robyt3> Right click the envelope point
11:01 < bridge> <robyt3> Mouse wheel and Shift+mouse wheel
11:01 < ws-client> <ChillerDragon> woah segfault xd
11:01 < ws-client> <ChillerDragon> @robyt3 that seems to zoom not make the view port bigger
11:02 < ws-client> <ChillerDragon> last time i used the editor clicking on "envelopes" multiple times would open it in 3 different sizes
11:02 < bridge> <robyt3> You can drag the envelope menu up to make it larger
11:02 < ws-client> <ChillerDragon> a
11:02 < bridge> <robyt3> You can also drag the setting editor and layers
11:03 < ws-client> <ChillerDragon> i see nice
11:03 < ws-client> <ChillerDragon> thanks
11:09 < bridge> <zhn> n flips the tile, why shift+n doesnt
11:16 < bridge> <robyt3> In general I'd say it's better if hotkeys are only activated when no additional unnecessary modifiers are pressed, so we can more easily add new hotkeys in the future without breaking users' existing workflow
11:20 < bridge> <zhn> yeah, and thats cool actually
11:20 < bridge> <zhn> i got used to these hotkeys tbh
12:03 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1286628754205970454/image.png?ex=66ee99e7&is=66ed4867&hm=8d886537e9178d24e5fbd3599fcd6df710a5acf3be04dcd3e87003139e6fa1d3&
12:03 < bridge> <ryozuki> not me but funny
12:22 < bridge> <totar> This might not be as bad as it seems with context. Hetzner offers dedicated system configurations where a tech has to setup and make changes for you. So it's probably not a vps, maybe someone asked for extra hard drives and they forgot to plug it back in.
12:26 < bridge> <totar> Basically a non event if that's the case since your downtime was planned an unspecified duration so who cares.
12:26 < bridge> <totar> Basically a non event if that's the case since your downtime was planned and an unspecified duration so who cares.
14:04 < bridge> <mian_ku> go ddnet.
14:04 < bridge> <mian_ku> https://cdn.discordapp.com/attachments/293493549758939136/1286659284561694730/image.png?ex=66eeb656&is=66ed64d6&hm=ef16aac335a5fcbbbe41ea95911528a32c28bc2176dc186db51fc21a404f1f08&
14:04 < bridge> <mian_ku> what the fxxkin'
14:05 < bridge> <mian_ku> nightly builds
14:12 < bridge> <meloƞ> Yes ? You're toggling it from 0 to 1 or 1 to 0
14:12 < bridge> <meloƞ> That's how a toggle works ^^
14:14 < bridge> <heinrich5991> the info data should be treated as free-form
14:17 < bridge> <heinrich5991> move restriction
14:18 < bridge> <heinrich5991> https://github.com/ddnet/ddnet/issues/6754
14:20 < bridge> <_kemel_> how can I find hammer's hitbox implementation in source?
14:21 < bridge> <meloƞ> :think_bot:
14:22 < bridge> <meloƞ> Yes ? You're toggling it from 0 to 1 or 1 to 0 (NVM I didn't see the 100)
14:23 < bridge> <_kemel_> what
14:26 < bridge> <heinrich5991> ech is great. change my mind. you just put anything into the client outer, it doesn't matter
14:28 < bridge> <heinrich5991> maybe we could try reducing the size of the json a little. 128 bytes per player doesn't sound too little, but I guess json is verbose…
14:31 < bridge> <heinrich5991> ChillerDragon: if you want to maintain 0.7, it might be possible. the problem is that we have literally no one who wants to do that currently
14:32 < bridge> <0xfaulty> Are you suggesting to add another endpoint to the master server and shorten the names of the json parameters?
14:32 < bridge> <learath2> How does it not matter? How is the "client-facing server" supposed to handle the case of ech rejection otherwise?
14:32 < bridge> <mian_ku> im doing 0 <-> 100, but it's 0 <-> 1
14:34 < bridge> <0xfaulty> It would of course be nice to use grpc serialisation, but it's not really appropriate in our case 😅
15:10 < bridge> <heinrich5991> nice
15:16 < bridge> <heinrich5991> check out the older version that worked with wireshark 4.0
15:16 < bridge> <milkeeycat> i already compiled 4.2 xd
15:24 < bridge> <heinrich5991> ChillerDragon: why would you be against quic?
15:29 < bridge> <heinrich5991> report a bug 🙂
15:35 < bridge> <ryozuki> is quic quick enough? did u see the reports from cloudflare?
15:35 < bridge> <ryozuki> ok not cloudflare
15:35 < bridge> <ryozuki> https://dl.acm.org/doi/10.1145/3589334.3645323
15:35 < bridge> <heinrich5991> that was about file downloads, probably doesn't matter for ddnet
15:35 < bridge> <heinrich5991> IIRC
15:36 < bridge> <heinrich5991> the diagrams show that current QUIC impls don't manage to saturate a data link if it has more than 500 Mb/s
15:37 < bridge> <heinrich5991> I hope we don't have server-client connections with more than 1 Mb/s
15:43 < bridge> <heinrich5991> I don't understand what you said. if the server gets a request from a client that doesn't do ECH, they'll include the normal SNI. if they don't, the server unpacks the actual SNI from the inner handshake, the outer one doesn't matter
15:46 < bridge> <learath2> What if the server can not decrypt the inner hello? Then a connection is supposed to be established with the outer hello, through which the "client-facing server" needs to give out an ECHConfig to be used
15:50 < bridge> <learath2> 6.3.2.1: When the server rejects ECH or ..., it continues with the handshake using the plaintext "server_name" extension instead. Clients that offer ECH then authenticate the connection with the public name, as follows:
15:50 < bridge> <learath2> - The client MUST verify that the certificate is valid for `ECHConfigContents.public_name`. If invalid, it MUST abort the connection with the appropriate alert.
15:51 < bridge> <learath2> ...
15:52 < bridge> <learath2> So I can't just put "anything" in there. I need to put a valid SNI for which I can produce a certificate as far as I understand. Now if you are behind cloudflare or akamai or whatever, that's great. You put `cloudflare.com` in there, `cloudflare.com` provides the ECHConfig great.
15:52 < bridge> <learath2> 
15:52 < bridge> <learath2> What am I supposed to do with my topology? I'm forced to expose the one domain that I own in plaintext
15:54 < bridge> <reitw> lmaooo
15:55 < bridge> <learath2> Unless I grossly misunderstand something. ESNI definitely had the better idea when they used DNS for the keys. ECH's approach seems to be designed around funneling people to using some "client-facing server" provider
15:56 < bridge> <learath2> Or making no assumptions about intent, at the very least completely designed around that usecase
15:59 < bridge> <ryozuki> @heinrich5991 
15:59 < bridge> <ryozuki> > Issue 1. When downloading the same file, the in-kernel UDP stack issues much more packet reads (netif_receive_skb) than TCP, leading to a significantly higher CPU usage. This is because none of the QUIC implementations we examine uses UDP generic receive offload (GRO) where the link layer module combines multiple received UDP datagrams into a mega datagram before passing it to the transport layer. This is in sharp contrast to the wide deployment 
15:59 < bridge> <ryozuki> > • Issue 2. In the user space, QUIC incurs a higher overhead when processing received packets and generating responses. This overhead can be attributed to multiple factors: the excessive packets passed from the kernel (Issue 1), the user-space nature of QUIC ACKs, and the lack of certain optimizations such as delayed ACK in QUIC.
15:59 < bridge> <ryozuki> it looks like some issues are also bad implementations
15:59 < bridge> <ryozuki> or not optimized
15:59 < bridge> <jxsl13> It's more of a wireshark from brew does seem to be amd64 and my problem was cross compilation from arm64 to amd64
16:00 < bridge> <ryozuki> https://loco.rs/
16:00 < bridge> <ryozuki> loco
16:01 < bridge> <learath2> I've grown to dislike ORMs in general over the course of the last 5 months
16:02 < bridge> <learath2> Any value I used to see in them has been destroyed by how annoying to use `GORM` was in golang
16:03 < bridge> <jxsl13> it's great
16:03 < bridge> <jxsl13> that the Go community discourages ORMs
16:03 < bridge> <jxsl13> cuz gorm is literally shit
16:03 < bridge> <jxsl13> as are all orms that do more than basic crud
16:04 < bridge> <jxsl13> easier to debug sql than some orm (cough Java)
16:05 < bridge> <ryozuki> this is not a orm tho i think
16:05 < bridge> <learath2> I think in the future I only want something that wraps the idea of a transaction, query and a row
16:05 < bridge> <ryozuki> it uses sqlx
16:05 < bridge> <ryozuki> its builts around axum + sqlx iirc
16:05 < bridge> <ryozuki> its built around axum + sqlx iirc
16:06 < bridge> <ryozuki> oh it has some kind like orm thing
16:06 < bridge> <learath2> It was talking about SeaORM in it's page that's why I wanted to talk about ORMs. Yeah this thing seems rather interesting and not an ORM
16:06 < bridge> <ryozuki> maybe its sea orm
16:06 < bridge> <ryozuki> sea orm is kind of dope tho
16:06 < bridge> <learath2> It'll take a long while to take the taste of GORM out of my mouth 😄
16:07 < bridge> <ryozuki> xd
16:07 < bridge> <heinrich5991> AIUI, if you know the server supports ECH, you don't need to hope for a fallback
16:08 < bridge> <ryozuki> what does AIUI mean
16:08 < bridge> <ryozuki> (Internet slang) Initialism of as I understand it.
16:08 < bridge> <heinrich5991> ECH also uses DNS for keys
16:08 < bridge> <learath2> But where are you supposed to get the keys to encrypt the inner hello?
16:08 < bridge> <heinrich5991> DNS
16:09 < bridge> <heinrich5991> preferably over some encrypted transport
16:09 < bridge> <heinrich5991> I see
16:09 < bridge> <jxsl13> I gave up, cuz dunno no rust toolchain
16:09 < bridge> <heinrich5991> eh 😦
16:09 < bridge> <jxsl13> would be cool if there was an example for cross compilation
16:10 < bridge> <jxsl13> too lazy xD
16:10 < bridge> <heinrich5991> I haven't done cross compilation except from linux
16:10 < bridge> <heinrich5991> from there it was pretty easy
16:10 < bridge> <heinrich5991> did you install rust with rustup?
16:10 < bridge> <jxsl13> yeah
16:10 < bridge> <heinrich5991> maybe you can simply add a target there
16:10 < bridge> <jxsl13> ehm, let.me see
16:10 < bridge> <learath2> btw, this fallback is something that can happen say as you rotate keys, or some ISP DNS server misbehaves
16:11 < bridge> <heinrich5991> `rustup target add aarch64-apple-darwin`
16:11 < bridge> <heinrich5991> ah, you want cross-compilation
16:11 < bridge> <heinrich5991> so
16:11 < bridge> <heinrich5991> `rustup target add x86_64-apple-darwin`
16:11 < bridge> <jxsl13> ehm, it's  seemingly the one from brew, so no rustup command.
16:12 < bridge> <heinrich5991> uninstall that and use rustup
16:12 < bridge> <jxsl13> k
16:14 < bridge> <heinrich5991> hmmm
16:14 < bridge> <learath2> I seem to have missed this part of the proposal because it delegated it to another rfc, my bad. So it's not as insane as I thought it initially was
16:14 < bridge> <heinrich5991> it makes sense to encrypt the whole handshake, because otherwise data would leak left and right
16:15 < bridge> <heinrich5991> and having an inner and an outer handshake is incredibly clever IMO
16:15 < bridge> <heinrich5991> since it makes it hard to block ECH without blocking all connections that are pretending to do ECH
16:15 < bridge> <heinrich5991> since it makes it hard (impossible?) to block ECH without blocking all connections that are pretending to do ECH
16:15 < bridge> <learath2> It's very clever, it allows this fallback, allows middleboxes to handle this easily and backwards compatibility in one fell swoop
16:16 < bridge> <learath2> but the chain of trust needs to hold so the fallback is only possible if you can produce a certificate for the outer hellos sni
16:16 < bridge> <heinrich5991> I was thinking that this is impossible. until I read that RFC. it was amazing. crypto people just sprinkle some magic pixie dust and the impossible works
16:16 < bridge> <heinrich5991> yes
16:17 < bridge> <learath2> and now the sni is no longer hidden unless you are behind cloudflare or fastly or akamai or whatever
16:17 < bridge> <heinrich5991> or if you give up the fallback
16:17 < bridge> <learath2> I guess you could always buy a throwaway domain
16:17 < bridge> <heinrich5991> (just like there would be no fallback with ESNI, as I understand it)
16:17 < bridge> <learath2> I wonder if the RFC allows the server to behave that way
16:21 < bridge> <zaerin__> is the teeworlds programming playlist still a good resource? the first video looks 4 years old
16:22 < bridge> <heinrich5991> I don't know the teeworlds programming playlist
16:22 < bridge> <heinrich5991> care to share a link?
16:23 < bridge> <zaerin__> Found it at the development wiki page
16:23 < bridge> <zaerin__> https://youtube.com/playlist?list=PLhJkqAQmOh5LyYOfnMy4PJB6CSZltQyTc
16:25 < bridge> <teero777> ohh
16:25 < bridge> <teero777> ddnet code is so retarded
16:25 < bridge> <teero777> they use sin() for the x component
16:25 < bridge> <teero777> whoever did that
16:28 < bridge> <learath2> What do you mean even?
16:29 < bridge> <jxsl13> done, and currently in the wireshark-dissector directory :0 what's the command for cross compilationm
16:29 < bridge> <jxsl13> stay without sin, son.
16:30 < bridge> <teero777> https://github.com/ddnet/ddnet/blob/b34edb64c0a20373214bdc28d666ba445f43263d/src/game/server/entities/door.cpp#L19
16:31 < bridge> <teero777> 2010 type of code
16:31 < bridge> <learath2> It doesn't matter there, just makes the rotation start from 90degree up
16:31 < bridge> <learath2> and go cw instead of ccw
16:32 < bridge> <teero777> i used direction() from vmath since i didn't see the difference
16:32 < bridge> <teero777> suddenly everything is wrong
16:33 < bridge> <teero777> btw i have a question. can i just remove door.cpp/h entirely or are some mods somehow using that entity?
16:33 < bridge> <teero777> it only initializes itself and is uselessly ticked afterwards
16:33 < bridge> <teero777> i put it in the initialization process of CCollision so it also gets predicted by the client.
16:34 < bridge> <teero777> wanted to make a pr for that
16:34 < bridge> <jxsl13> bugs are used as features and you think a complete file is unused D:
16:34 < bridge> <learath2> What? It is the laser doors that many maps use
16:34 < bridge> <teero777> yea bro look at the code
16:35 < bridge> <teero777> you dont need to store that entity in the gameworld
16:35 < bridge> <teero777> it literally sets stoppers with a switch number
16:35 < bridge> <teero777> nothing else
16:35 < bridge> <learath2> It's snapped, what do you mean you don't need to store it
16:35 < bridge> <teero777> it can never change
16:36 < bridge> <teero777> it is static.
16:36 < bridge> <teero777> atleast in normal ddnet
16:36 < bridge> <jxsl13> moving doors
16:36 < bridge> <teero777> thats not a thing...
16:36 < bridge> <teero777> right??
16:36 < bridge> <jxsl13> just a thought of what you actually mean
16:36 < bridge> <teero777> moving doors doesnt work.
16:36 < bridge> <jxsl13> the door is stationarry
16:36 < bridge> <learath2> Where do you propose to move that code even? Where will you snap it?
16:37 < bridge> <chillerdragon> Sure when I’m piss drunk Heinrich decides to return to \#develööper
16:37 < bridge> <jxsl13> -r
16:37 < bridge> <teero777> why even snap it? the client doesn't use it
16:37 < bridge> <jxsl13> chilleroni, pepperoni
16:37 < bridge> <jxsl13> heino is back
16:37 < bridge> <heinrich5991> `cargo build --release --target=x86_64-apple-darwin`
16:37 < bridge> <learath2> Ofc it does, it's a normal laser entity, where did you get the idea that the client doesn't use it?
16:37 < bridge> <chillerdragon> Sounds backwards compatibility breaking. And hard to implement in assembly
16:38 < bridge> <learath2> Maybe the very new clients now have prediction for them and don't use it
16:38 < bridge> <teero777> okay then it's fine.
16:39 < bridge> <teero777> can the collision check if it is used by the server or client?
16:39 < bridge> <teero777> i mean my change works fine and the client predicts the doors now but it would be basically double initializing the doors on the server. which does not cause any issues but it not that nice
16:40 < bridge> <heinrich5991> no more backcompat breaking than 0.7. just use a library in asm
16:40 < bridge> <jxsl13> the boomerang, chiller
16:40 < bridge> <jxsl13> it's hitting
16:40 < bridge> <chillerdragon> Libraries are. Bloat
16:40 < bridge> <learath2> I don't get it, sorry
16:41 < bridge> <teero777> np, i will open a pr and describe it more carefully
16:41 < bridge> <chillerdragon> 0.6 is backwards and 0.7is forward
16:41 < bridge> <jxsl13> debatable
16:41 < bridge> <heinrich5991> and quic is even more forward
16:41 < bridge> <heinrich5991> chillerdragon: you already depend on third-party code, e.g. the linux kernel, to send UDP packets
16:41 < bridge> <jxsl13> quic as in: an additional protocol, not a replacement?
16:41 < bridge> <ryozuki> remove it from brew install with rustup
16:41 < bridge> <learath2> You likely can't remove that file unless I had whiskey instead of tea this morning and didn't notice. It would break all clients that don't have door prediction
16:41 < bridge> <ryozuki> brew cargo cant do stuff like "cargo +nightly fmt"
16:42 < bridge> <teero777> i won't dw
16:42 < bridge> <jxsl13> I got it to compile the x86_64 target
16:42 < bridge> <jxsl13> (Y) will check how wireshark likes that
16:42 < bridge> <heinrich5991> well. it's supposed to be a replacemet in the long run, but I'd support 0.6 for now
16:42 < bridge> <ryozuki> are u sure he wants x86 darwin?
16:42 < bridge> <heinrich5991> pretty
16:42 < bridge> <jxsl13> urgh :'/
16:42 < bridge> <chillerdragon> Omg
16:43 < bridge> <ryozuki> check out https://github.com/cross-rs/cross
16:43 < bridge> <jxsl13> my wireshark (from bew) seemingly is x64
16:43 < bridge> <heinrich5991> buut?
16:43 < bridge> <jxsl13> so it dislikes my shared library which was arm64
16:43 < bridge> <learath2> I actually don't remember, is it literally as simple as `teeworlds over udp` and `teeworlds over quic`? As in after getting the raw bytes out is the protocol still the same?
16:43 < bridge> <heinrich5991> seems unrelated, we're just trying to cross compile on macos between different arches
16:44 < bridge> <jxsl13> that's why I need a x64 shared library
16:44 < bridge> <chillerdragon> The kernel is different imo
16:44 < bridge> <heinrich5991> yes
16:44 < bridge> <learath2> When ring0 real mode tw client?
16:44 < bridge> <ryozuki> ahh
16:44 < bridge> <jxsl13> I have high hopes that you come up with an abstraction in order to make protocols plug and play 🙏
16:45 < bridge> <jxsl13> cough heinrich
16:45 < bridge> <ryozuki> UEFI ddnet
16:45 < bridge> <heinrich5991> yes, that's actually implemented
16:45 < bridge> <learath2> probably not the higher layer, but after his changes I think the lower layer will be completely abstracted away
16:45 < bridge> <ryozuki> it can be a interesting challenge
16:45 < bridge> <ryozuki> xdd
16:45 < bridge> <heinrich5991> yes
16:46 < bridge> <chillerdragon> Yew heino how is the abstraction layer progressing?
16:46 < bridge> <jxsl13> then the maintenance of 0.6/0.7 and quic would be pretty "easy" and one would not necessarily need to throw away old workin protocols
16:46 < bridge> <teero777> @learath2 actually nvm my approach is bad. i should add the door collision when a snap with a door comes in and remove them when it's not there anymore ig
16:46 < bridge> <learath2> I have a small question about that. We have optimizations like `recvmmsg` for UDP, will those still be possible? I imagine recv for quic and udp would be quite different
16:47 < bridge> <learath2> If you tell me what you are trying maybe I can give you an idea? Door prediction and issues have been talked about for a decade now 🙃
16:47 < bridge> <teero777> just usual door prediction
16:48 < bridge> <heinrich5991> the plan™ is to do the steam proxy thing next maybe, once we have the transparent protocol abstraction
16:48 < bridge> <heinrich5991> chillerdragon: not at all, I postponed it after the 0.7 PR got merged
16:48 < bridge> <heinrich5991> both are UDP, not sure what would be different there
16:51 < bridge> <chillerdragon> Can I help? I have time until December
16:51 < bridge> <heinrich5991> do you like coding in rust? I could push my current state
16:51 < bridge> <heinrich5991> it's not much more than a skeleton
16:51 < bridge> <heinrich5991> it can translate messages
16:52 < bridge> <heinrich5991> but I guess it needs some architectural things first, still
16:52 < bridge> <heinrich5991> so maybe not the best moment to open it to contributions
16:52 < bridge> <heinrich5991> what do you do in december?
16:52 < bridge> <chillerdragon> No idea what you are replying to. Element iOS says (null) but yes I will maintain 0.7 until January then I will return to fulltime gaming
16:53 < bridge> <chillerdragon> Return to Germany
16:53 < bridge> <zhn> 5991 is alive!
16:54 < bridge> <chillerdragon> Do the architectural
16:55 < bridge> <learath2> I don't think this is the way to go, we already send switches and extended laser objects have their switch numbers assigned to them. So first time you spot them in the snap, add them to the world according to the switch. Then toggle them on switch changes instead.
16:55 < bridge> <learath2> 
16:55 < bridge> <learath2> Atleast that's how I'd go about it. Keeping track of laser entities is janky
16:55 < bridge> <meloƞ> LETSGOOOOO
16:56 < bridge> <teero777> yea
16:56 < bridge> <teero777> doing it rn. my problem is how do i remove them once they are not in the snapshot anymore?
16:56 < bridge> <teero777> maybe the custom server removed them
16:56 < bridge> <teero777> we dont want mispredictions
16:57 < bridge> <learath2> The interface is what I was thinking about. idk what `quic_recv` looks like in whatever library you used but can you unify that with our `udp_recv`?
16:57 < bridge> <jxsl13> ah, rip
16:57 < bridge> <heinrich5991> `udp_recv` is gone
16:57 < bridge> <learath2> That's fair, maybe you do have to keep track of the lasers afterall. Mh
16:57 < bridge> <heinrich5991> only `CNetServer::Recv` remains
16:58 < bridge> <chillerdragon> @jxsl13: rip teeworlds-go
16:58 < bridge> <jxsl13> noooo
16:58 < bridge> <jxsl13> why
16:58 < bridge> <learath2> and different lower layers implement their own `CNetServer::Recv`?
16:58 < bridge> <teero777> also on the master branch the "toggle" bind apparently doesnt work
16:58 < bridge> <teero777> xddd
16:58 < bridge> <chillerdragon> Are you adding quic support? Xd
16:59 < bridge> <teero777> can't toggle entities anymore lmao
16:59 < bridge> <learath2> Robyt3 said he'd fix it I think
16:59 < bridge> <teero777> ok :D
16:59 < bridge> <robyt3> Fix is already merged
16:59 < bridge> <learath2> https://discord.com/channels/252358080522747904/757720336274948198/1286663676496973906
16:59 < bridge> <jxsl13> I mean, it's probably 5 lines of code in Go
16:59 < bridge> <heinrich5991> no, all the different protocols pop out from there
16:59 < bridge> <jxsl13> I was not talking about quic
16:59 < bridge> <teero777> within the last hour? xd
16:59 < bridge> <teero777> oke
16:59 < bridge> <jxsl13> just more fun with wireshark
16:59 < bridge> <learath2> and they provide some sort of `mytransportlayer::recv`?
17:00 < bridge> <robyt3> https://discord.com/channels/252358080522747904/293493549758939136/1286680911030653071
17:00 < bridge> <heinrich5991> yes, wait a sec
17:00 < bridge> <chillerdragon> @heinrich5991: why have you been afk so long?
17:01 < bridge> <heinrich5991> vacation (and taking time off of ddnet for my own sanity)
17:02 < bridge> <Ewan> fking discord
17:02 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1286703969883783240/image.png?ex=66eedff4&is=66ed8e74&hm=6ffe1dc5b45711fc591dd3e64ed829447319519a545f6a50dfcb374fb9604afe&
17:02 < bridge> <Ewan> can never load the message
17:02 < bridge> <chillerdragon> Where did you do vacation?
17:02 < bridge> <Ewan> i hope u had a good vacation heinrich
17:02 < bridge> <chillerdragon> Lmao same problem
17:02 < bridge> <heinrich5991> https://github.com/ddnet/ddnet/pull/6961/files#diff-de4e64f3ca4835ed9aef1c5d33c0ceb26f52c0599a85da35b8d92eb60c9e5fb0R831-R842
17:02 < bridge> <heinrich5991> I guess you could say yes to your question
17:03 < bridge> <teero777> ah btw doors should also extend into infinity since their collision does
17:03 < bridge> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1286704180899217570/image.png?ex=66eee026&is=66ed8ea6&hm=fbd11a6cea9d7d17c56b167329fd5eee797951c8932fa9af356a415f265c6640&
17:03 < bridge> <teero777> ah btw door rendering should also extend into infinity since their collision does
17:03 < bridge> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1286704180899217570/image.png?ex=66eee026&is=66ed8ea6&hm=fbd11a6cea9d7d17c56b167329fd5eee797951c8932fa9af356a415f265c6640&
17:03 < bridge> <jxsl13> now it's saying the dissector was compiled for wireshark 4.2 ._. and I got 4.4
17:03 < bridge> <chillerdragon> lol
17:03 < bridge> <learath2> @0xdeen I vaguely remember you trying to implement postgres for ddnet, what went wrong there? Was the abstraction not abstract enough?
17:04 < bridge> <chillerdragon> libtw2 blaze it 420
17:04 < bridge> <heinrich5991> I think @zwelf2 is currently rewriting the db stuff in rust
17:04 < bridge> <chillerdragon> woah Postgres for ddnet I didn’t know that
17:05 < bridge> <chillerdragon> Zwelf better not be breaking my two forks that depend on the db code xd
17:06 < bridge> <0xdeen> I started a new job and had a baby I think 😄
17:06 < bridge> <chillerdragon> lol
17:06 < bridge> <learath2> Ah, that also explains it 😄
17:07 < bridge> <chillerdragon> deen is only here to click merge button
17:07 < bridge> <01000111g> If someone is interested in adding more customization to the skin system in an easy maintable idea, here is my idea: https://discordapp.com/channels/252358080522747904/1286427778744586350
17:07 < bridge> <jxsl13> sometimes with a different finger
17:07 < bridge> <chillerdragon> xd
17:08 < bridge> <chillerdragon> lerato also didn’t send a commit since 666
17:08 < bridge> <Ewan> nice
17:08 < bridge> <jxsl13> makes sense
17:08 < bridge> <Ewan> congratulations
17:08 < bridge> <jxsl13> can't get any better than 666
17:08 < bridge> <Ewan> true
17:09 < bridge> <learath2> Oh you handle the udp socket yourself for quic too
17:09 < bridge> <heinrich5991> yes
17:12 < bridge> <learath2> Can I just say seeing ddnet capitalized like this doesn't spark joy in me? `typedef struct DdnetNetEvent CNetEvent;` 😄
17:13 < bridge> <learath2> @heinrich5991 so how functional is this nowadays? Can I join a server yet?
17:14 < bridge> <chillerdragon> Ddnet
17:14 < bridge> <jxsl13> https://go.dev/wiki/CodeReviewComments#initialisms <--
17:14 < bridge> <learath2> Golang authors with another W, this language makes correct decision after correct decision
17:14 < bridge> <chillerdragon> lmao jiggsaw had same thought
17:15 < bridge> <jxsl13> 😛
17:19 < bridge> <learath2> I'm collecting commits until I have 111 of them to push
17:19 < bridge> <chillerdragon> What’s 772?
17:19 < bridge> <chillerdragon> Eh 777
17:20 < bridge> <chillerdragon> It has no meaning has it?
17:20 < bridge> <chillerdragon> @learath2: until then then I will out rank you hehe
17:24 < bridge> <learath2> You are too far behind boss
17:25 < bridge> <learath2> If you get too close I'll start pushing typo fixes
17:26 < bridge> <chillerdragon> Shit
17:37 < bridge> <vappy19> O.o
17:48 < bridge> <heinrich5991> server joining works. mostly ancillary stuff that's missing. currently, I'm working on mastersrv registering
17:49 < bridge> <heinrich5991> > Code generated by the protocol buffer compiler is exempt from this rule. Human-written code is held to a higher standard than machine-written code.
17:49 < bridge> <heinrich5991> that's kinda meh
17:53 < bridge> <jxsl13> dunno about protocol buffers but in general. it's kind of impossible to deduce the correct casing from ddnetAPIEndpoint where your target casing is for example capital camel case DDNetAPIEndpoint.
17:57 < bridge> <louis> skin accessories will always be not easy nor maintainable 😅
17:57 < bridge> <louis> but i hope the day comes
18:58 < bridge> <ryozuki> finland
18:58 < bridge> <ryozuki> stronk
19:59 < bridge> <sada03466> lh
19:59 < bridge> <sada03466> ]др
20:13 < bridge> <Ewan> hmm
20:13 < bridge> <Ewan> i got job interview in 15 mins
20:13 < bridge> <Ewan> wish me luck
20:14 < bridge> <teero777> u good :owo:
20:14 < bridge> <zaerin__> How can I get the currently selected CTile in the editor?
20:15 < bridge> <Ewan> unsure
20:15 < bridge> <zaerin__> good luck
20:15 < bridge> <Ewan> :tyronechamp:
20:15 < bridge> <Ewan> ty
20:15 < bridge> <milkeeycat> You got it!!!
20:15 < bridge> <manikoo> get luck teero!
20:17 < bridge> <manikoo> get luck EWAN!
20:22 < bridge> <Ewan> ty
20:22 < bridge> <Ewan> with all this luck i cannot fail
21:15 < bridge> <milkeeycat> I just got owned by my own compiler -.-
21:15 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1286767701162721290/image.png?ex=66ef1b4e&is=66edc9ce&hm=da44d478b52f0be2dceadd4389c4a082ef5b09060435ee8761942c05ebe178d0&
21:21 < bridge> <learath2> Something on this computer is sending a sleep signal to my controller and I can't figure it out. I absolutely despise windows
21:22 < bridge> <meloƞ> :cammostripes:
21:23 < bridge> <learath2> Like if this was linux it was happening on, worst case I can just debug the driver itself
21:43 < bridge> <Ewan> wretched
22:21 < bridge> <ryozuki> good luck
22:21 < bridge> <ryozuki> re link
22:21 < bridge> <learath2> I tried about 8 times
22:22 < bridge> <ryozuki> the problem is it links blue and then shuts down right?
22:22 < bridge> <ryozuki> u gotta press power and share iirc
22:22 < bridge> <ryozuki> atleast with ps5
22:22 < bridge> <ryozuki> until it blinks a lot
22:22 < bridge> <ryozuki> then try
22:22 < bridge> <learath2> It's not bluetooth, it's xbox one with the xbox wireless adapter
22:22 < bridge> <ryozuki> also forget from pc
22:22 < bridge> <ryozuki> oh
22:22 < bridge> <ryozuki> idk
22:22 < bridge> <ryozuki> im playing poe
22:40 < bridge> <Ewan> i think i won
22:40 < bridge> <Ewan> holy shit
22:40 < bridge> <Ewan> late start on the league eh?
22:40 < bridge> <Ewan> what build are u following
22:41 < bridge> <Ewan> but ya u might be talking to the newest minion at warner bros... we'll see
22:42 < bridge> <Ewan> never used those things. bluetooth has always worked very well for me for xbox controller
22:42 < bridge> <Ewan> but that must be stupid
22:42 < bridge> <Ewan> is it one of the first gen controllers?
