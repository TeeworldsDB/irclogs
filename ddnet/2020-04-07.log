00:37 <+bridge> [ddnet] <onby> nah im fairly sure that was it
00:37 <+bridge> [ddnet] <onby> https://cdn.discordapp.com/attachments/293493549758939136/696851047427211324/Screen_Shot_2020-04-06_at_5.36.17_PM.png
00:37 <+bridge> [ddnet] <onby> look i tried changing gfx_highdpi 1
00:37 <+bridge> [ddnet] <onby> and the font changed
00:37 <+bridge> [ddnet] <onby> and my fans spin on 10.6.2 now
00:38 <+bridge> [ddnet] <onby> https://cdn.discordapp.com/attachments/293493549758939136/696851230143545414/Screen_Shot_2020-04-06_at_5.37.53_PM.png
00:38 <+bridge> [ddnet] <onby> now turned off highdpi
00:38 <+bridge> [ddnet] <onby> and font's back to normal, fans stopped spinning
00:38 <+bridge> [ddnet] <onby> @Learath2 @heinrich5991
00:39 <+bridge> [ddnet] <onby> im prety sure the versions that caused fan spinning
00:39 <+bridge> [ddnet] <onby> didnt even have this option to turn off
00:41 <+bridge> [ddnet] <onby> finding this + the result of the bisects pretty strongly points to the high dpi being the cause of all of these problems
01:44 <+bridge> [ddnet] <<BµmM>> https://cdn.discordapp.com/attachments/293493549758939136/696868086300672120/screenshot_2020-04-07_01-44-35.png
01:45 <+bridge> [ddnet] <<BµmM>> https://cdn.discordapp.com/attachments/293493549758939136/696868091795210541/screenshot_2020-04-07_01-44-36.png
01:45 <+bridge> [ddnet] <<BµmM>> what is this
01:45 <+bridge> [ddnet] <onby> someone is spoofing servers
01:45 <+bridge> [ddnet] <Ryozuki> bumm with egirls
01:45 <+bridge> [ddnet] <<BµmM>> when i join second server i join first lol
01:45 <+bridge> [ddnet] <onby> do not join it
01:45 <+bridge> [ddnet] <<BµmM>> why
01:45 <+bridge> [ddnet] <Ryozuki> yep dont join
01:46 <+bridge> [ddnet] <onby> theyre probably trying to get playerips
01:46 <+bridge> [ddnet] <Ryozuki> ye
01:46 <+bridge> [ddnet] <<BµmM>> oh
01:46 <+bridge> [ddnet] <onby> can u still see it?
01:46 <+bridge> [ddnet] <<BµmM>> ye
01:46 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/696868444905144500/unknown.png
01:46 <+bridge> [ddnet] <onby> mm
01:46 <+bridge> [ddnet] <<BµmM>> oh
01:46 <+bridge> [ddnet] <louis> wtf
01:47 <+bridge> [ddnet] <Ryozuki> and they got several ips
01:47 <+bridge> [ddnet] <onby> its literally
01:47 <+bridge> [ddnet] <onby> just some dbag with his home internet doing it
01:47 <+bridge> [ddnet] <onby> look up his ip
01:47 <+bridge> [ddnet] <Ryozuki> the servers with ticks are real tho
01:47 <+bridge> [ddnet] <Ryozuki> nice feature to have rn
01:47 <+bridge> [ddnet] <onby> i dont see the fake servers now
01:47 <+bridge> [ddnet] <onby> 😄
01:47 <+bridge> [ddnet] <<BµmM>> same
01:47 <+bridge> [ddnet] <Ryozuki> sometimes they appear
01:48 <+bridge> [ddnet] <onby> rip
01:48 <+bridge> [ddnet] <onby> i wonder who is doing this
01:48 <+bridge> [ddnet] <<BµmM>> time to ddos him
01:48 <+bridge> [ddnet] <onby> bumm ddoser
01:48 <+bridge> [ddnet] <<BµmM>> jk
01:48 <+bridge> [ddnet] <Ryozuki> bumm ddoser
01:48 <+bridge> [ddnet] <Ryozuki> :monkaS:
01:49 <+bridge> [ddnet] <<BµmM>> :justatest:
01:49 <+bridge> [ddnet] <onby> but i wouldnt be surprised if someone tried
01:49 <+bridge> [ddnet] <<BµmM>> someone haha :justatest:
01:49 <+bridge> [ddnet] <onby> someone aka u
01:49 <+bridge> [ddnet] <<BµmM>> no u
01:49 <+bridge> [ddnet] <onby> why me
01:49 <+bridge> [ddnet] <onby> lol
01:49 <+bridge> [ddnet] <<BµmM>> cuz u are the biggest troll
01:50 <+bridge> [ddnet] <onby> ddosing isnt trolling its just being an ass
01:50 <+bridge> [ddnet] <onby> also no im not, no u
01:50 <+bridge> [ddnet] <abcqwerty> thats what a troll would say
05:41 <+bridge> [ddnet] <Toxic> @Aoe
08:25 <+bridge> [ddnet] <Learath2> @noby well highdpi effectively multiplies the resolution maybe the computer is genuinely having trouble getting out all the pixels
08:26 <+bridge> [ddnet] <Learath2> Does it atleast look sharper?
08:26 <+bridge> [ddnet] <filodex> ddnet 13.0 error
08:26 <+bridge> [ddnet] <filodex> https://cdn.discordapp.com/attachments/293493549758939136/696969099208818758/unknown.png
08:26 <+bridge> [ddnet] <filodex> a lot of players got this
08:26 <+bridge> [ddnet] <filodex> help
08:27 <+bridge> [ddnet] <Learath2> @deen ^^ did you forget to ship sth?
08:33 <+bridge> [ddnet] <Learath2> I would take a look but I dont have anything with windows on it
08:38 <+bridge> [ddnet] <filodex> DDNet 13.0 error message .
08:38 <+bridge> [ddnet] <filodex> https://cdn.discordapp.com/attachments/293493549758939136/696972025008226324/unknown.png
08:39 <+bridge> [ddnet] <filodex> Title: entry point not found
08:39 <+bridge> [ddnet] <filodex> Text: entry point to procedure Crypt... not found in dll library.
08:40 <+bridge> [ddnet] <deen> @filodex fixed, sorry about that
08:41 <+bridge> [ddnet] <Learath2> How did that happen? Missing libcurl.dll or sth?
08:41 <+bridge> [ddnet] <deen> yes, forgot to update libcurl.dll
08:45 <+bridge> [ddnet] <filodex> Wow, so fast, Thanks!
09:07 <+bridge> [ddnet] <XerRious> @deen I am also getting the same error popup after updating to 13.0
09:07 <+bridge> [ddnet] <XerRious> I have redownloaded 13.0 twice from the webpage, but still the same thing.
09:08 <+bridge> [ddnet] <deen> ok, that's too bad
09:08 <+bridge> [ddnet] <deen> I hoped that was the fix 😄
09:10 <+bridge> [ddnet] <XerRious> Well, its not like its rushed or anything, I can just redownload 12.9.2 again while waiting. I was also hoping its just the libcurl.dll
09:14 <+bridge> [ddnet] <deen> It's weird that it works for me in Wine
09:15 <+bridge> [ddnet] <XerRious> Could be win10 version or a recent update?
09:15 <+bridge> [ddnet] <XerRious> to windows I mean
09:33 <+bridge> [ddnet] <Learath2> Well that function is deprecated but 12.9.2 works, so it can't be removed yet
09:33 <+bridge> [ddnet] <Learath2> I don't think microsoft does macOS like compatibility hooks checking which version a program is linked on
09:34 <+bridge> [ddnet] <Learath2> @deen how do we get curl for windows? just a download or do we compile that aswell?
09:34 <+bridge> [ddnet] <deen> compile myself
09:34 <+bridge> [ddnet] <deen> but I guess this has nothing to do with curl
09:34 <+bridge> [ddnet] <deen> we use CryptAcquireContext in system.c
09:35 <+bridge> [ddnet] <deen> My guess would be a mingw change and I might now have to statically link in advapi32.a
09:35 <+bridge> [ddnet] <Learath2> can you even statically link that? it's part of winapi
09:38 <+bridge> [ddnet] <deen> not sure, but the error message seems to say that we're missing that symbol in DDNet.exe, right?
09:39 <+bridge> [ddnet] <Learath2> yep
09:40 <+bridge> [ddnet] <Learath2> @deen does mingw come with dumpbin?
09:41 <+bridge> [ddnet] <Learath2> I think it has something similar, maybe you can check with that whether it links with advapi to begin with
09:45 <+bridge> [ddnet] <Learath2> maybe we are missing a linker flag for it?  `-ladvapi` is something we could try (not sure why it worked in the past in that case though)
09:46 <+bridge> [ddnet] <Learath2> @onby can you profile that btw? Instruments is a pretty decent profiler, it'd be nice to see where the CPU is spending much more time
09:49 <+bridge> [ddnet] <deen> So maybe it's not our fault but SDL2 is doing something wrong
09:50 <+bridge> [ddnet] <deen> in 12.9.2 I see CryptAcquireContextA only imported from ADVAPI32.dll
09:50 <+bridge> [ddnet] <deen> but in 13.0 it's also imported from SDL2.dll
09:50 <+bridge> [ddnet] <Learath2> yeah, or it's also possible that the cpu is actually used more for the extra pixels, the fan curve on macbooks are VERY steep
09:50 <+bridge> [ddnet] <Learath2> oh you mean that 😄
09:51 <+bridge> [ddnet] <Learath2> huh, SDL2.dll is exporting CryptAcquireContextA?
09:51 <+bridge> [ddnet] <deen> we could also disable hidpi mode somehow maybe?
09:52 <+bridge> [ddnet] <Learath2> @deen can you dumpbin sdl2.dll aswell, see if it exports that?
09:52 <+bridge> [ddnet] <Learath2> it's also possible that minGW is just tripping balls
09:52 <+bridge> [ddnet] <deen> objdump -x seems to tell me so: https://ddnet.tw/13.0.objdump https://ddnet.tw/12.9.2.objdump
09:53 <+bridge> [ddnet] <deen> it's a bit annoying that I can't repro in wine
09:55 <+bridge> [ddnet] <deen> somehow I can't check exported symbols, only imported ones
09:55 <+bridge> [ddnet] <Learath2> well if sdl2.dll doesn't even export the symbol it's a problem in mingw
09:55 <+bridge> [ddnet] <Learath2> eh, that's a setback :/
09:57 <+bridge> [ddnet] <Learath2> maybe you can't objdump libraries not created by mingw
09:57 <+bridge> [ddnet] <deen> ah, winedump works, CryptAcquireContextA is not exported in SDL2.dll
09:58 <+bridge> [ddnet] <Learath2> I wonder why mingws linker thinks it does
09:59 <+bridge> [ddnet] <Jupstar ✪> i dont get double export when i compile with mingw
09:59 <+bridge> [ddnet] <Jupstar ✪> using objdump
09:59 <+bridge> [ddnet] <Learath2> but are you also cross compiling @Jupstar ✪
09:59 <+bridge> [ddnet] <Jupstar ✪> yes
09:59 <+bridge> [ddnet] <deen> what version? maybe I upgraded mingw recently and got a weird update
09:59 <+bridge> [ddnet] <Jupstar ✪> debian bullseye
10:00 <+bridge> [ddnet] <Jupstar ✪> need to lookup the verison
10:00 <+bridge> [ddnet] <deen> I verified with winedump and CryütAcquireContextA & CryptGenRandom are imported from SDL2.dll indeed
10:00 <+bridge> [ddnet] <Learath2> we really should finish up that docker container to compile all this
10:00 <+bridge> [ddnet] <Jupstar ✪> 9.3.0-8+22
10:00 <+bridge> [ddnet] <deen> my bet is that we are running into a linking bug, because the thunks have the same locations
10:00 <+bridge> [ddnet] <deen> so basically the import table for SDL2 and ADVAPI32 overlap
10:01 <+bridge> [ddnet] <deen> I guess I should try downgrading mingw and opening a bug
10:08 <+bridge> [ddnet] <Learath2> hopefully a downgrade takes care of it
10:26 <+bridge> [ddnet] <Jupstar ✪> @deen are you not using https://github.com/ddnet/ddnet-scripts/blob/master/ddnet-release.sh
10:26 <+bridge> [ddnet] <Jupstar ✪> to create the binary?
10:27 <+bridge> [ddnet] <deen> I am
10:27 <+bridge> [ddnet] <Jupstar ✪> ok
10:27 <+bridge> [ddnet] <Jupstar ✪> bcs i build another projects wich adds more aggressive compiler optimizations and i get the double symbol there too
10:28 <+bridge> [ddnet] <Jupstar ✪> but when i use that script i dont xd
10:28 <+bridge> [ddnet] <deen> hm, weird...
10:32 <+bridge> [ddnet] <Jupstar ✪> ok not reltaed to that, but still strange
10:33 <+bridge> [ddnet] <Jupstar ✪> are you stripping after the script?
10:33 <+bridge> [ddnet] <deen> oh yeah
10:33 <+bridge> [ddnet] <deen> or doesn't the script
10:33 <+bridge> [ddnet] <deen> i think the script does
10:36 <+bridge> [ddnet] <Jupstar ✪> oh yeah its in the cmake txt 😄
10:36 <+bridge> [ddnet] <deen> ok, do you think that might be the problem?
10:37 <+bridge> [ddnet] <Jupstar ✪> i don't think so, but our linker build differently appearently
10:37 <+bridge> [ddnet] <Jupstar ✪> so maybe ur right with linker bug, but i also get the double symbol in another project
10:37 <+bridge> [ddnet] <deen> and the other project still works fine?
10:37 <+bridge> [ddnet] <deen> I also don't get why it works fine in wine, but no on real windows
10:37 <+bridge> [ddnet] <Jupstar ✪> i tested it around a week ago and it worked then
10:37 <+bridge> [ddnet] <Jupstar ✪> but i can also just go into windows and check
10:39 <+bridge> [ddnet] <Learath2> well it is quite possible that wine is doing some magic to hook that call to CryptAcquireContextA which fixes the issue
10:45 <+bridge> [ddnet] <Jupstar ✪> well i get the error in the other project indeed, but not if not stripped
10:45 <+bridge> [ddnet] <deen> then I'll just try not stripping
10:45 <+bridge> [ddnet] <Jupstar ✪> and i use -s and hide debug symbols in the other project
10:45 <+bridge> [ddnet] <Jupstar ✪> u can build and and send it to me @deen
10:45 <+bridge> [ddnet] <Jupstar ✪> i can test it
10:46 <+bridge> [ddnet] <Learath2> how much fat does stripping trim anyway?
10:46 <+bridge> [ddnet] <Jupstar ✪> alot
10:46 <+bridge> [ddnet] <Ryozuki> yea
10:47 <+bridge> [ddnet] <deen> ok, the non-stripped one still has CryptAcquireContextA imported from SDL2, but not overlapped now
10:47 <+bridge> [ddnet] <deen> this leads me to believe that the overlap is an intentional optimization by strip
10:48 <+bridge> [ddnet] <Ryozuki> oh looks like i have another cmake warning to look into ```cmake
10:48 <+bridge> [ddnet] <Ryozuki> CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):
10:48 <+bridge> [ddnet] <Ryozuki>   The package name passed to `find_package_handle_standard_args` (FFMPEG)
10:48 <+bridge> [ddnet] <Ryozuki>   does not match the name of the calling package (FFmpeg).  This can lead to
10:48 <+bridge> [ddnet] <Ryozuki>   problems in calling code that expects `find_package` result variables
10:48 <+bridge> [ddnet] <Ryozuki>   (e.g., `_FOUND`) to follow a certain pattern.
10:48 <+bridge> [ddnet] <Ryozuki> Call Stack (most recent call first):
10:48 <+bridge> [ddnet] <Ryozuki>   cmake/FindFFmpeg.cmake:82 (find_package_handle_standard_args)
10:48 <+bridge> [ddnet] <Ryozuki>   CMakeLists.txt:332 (find_package)
10:48 <+bridge> [ddnet] <Ryozuki> This warning is for project developers.  Use -Wno-dev to suppress it.
10:48 <+bridge> [ddnet] <Ryozuki> ```
10:48 <+bridge> [ddnet] <Ryozuki> also this
10:48 <+bridge> [ddnet] <Ryozuki> Can't set BUILD_RPATH in CMake before 3.8, pass -Wl,-rpath,'$ORIGIN' manually if you wish to emulate this. Or just install a newer version of CMake...
10:48 <+bridge> [ddnet] <Ryozuki> and i have cmake 3.17 xD
10:48 <+bridge> [ddnet] <deen> i fixed that already
10:48 <+bridge> [ddnet] <Ryozuki> both?
10:48 <+bridge> [ddnet] <Ryozuki> i see
10:48 <+bridge> [ddnet] <deen> only the FFMPEG
10:48 <+bridge> [ddnet] <Ryozuki> ah
10:49 <+bridge> [ddnet] <Ryozuki> hmm i dont get it now
10:50 <+bridge> [ddnet] <Ryozuki> (i got that stuff when compiling the aur package)
10:51 <+bridge> [ddnet] <Ryozuki> btw i found a cool thing, if you use make typing just "make -j" without specifying any core number uses the max number of cores
10:51 <+bridge> [ddnet] <deen> ok, wihtout strip it crashes for me in wine too when loading dlls
10:51 <+bridge> [ddnet] <deen> @Ryozuki no it does not 😄
10:51 <+bridge> [ddnet] <Ryozuki> rly?
10:51 <+bridge> [ddnet] <Jupstar ✪> well i used a non stripped and it didnt crash
10:51 <+bridge> [ddnet] <deen> that builds with maximum parallelization, so it will run as many processes as possible
10:51 <+bridge> [ddnet] <Jupstar ✪> (compiled by me)
10:51 <+bridge> [ddnet] <deen> If you have a small project it's usually fine, but on a large process this will kill your system and go OOM
10:51 <+bridge> [ddnet] <deen> large project*
10:51 <+bridge> [ddnet] <Ryozuki> ooo
10:52 <+bridge> [ddnet] <Ryozuki> xd
10:52 <+bridge> [ddnet] <Jupstar ✪> @deen are u using mingw posix?
10:52 <+bridge> [ddnet] <Ryozuki> i saw a project suggesting it in the readme xD
10:52 <+bridge> [ddnet] <deen> I'm using mingw-w64
10:52 <+bridge> [ddnet] <Jupstar ✪> ok i think i have posix default, dunno if the runtime can make a difference
10:53 <+bridge> [ddnet] <Jupstar ✪> atleast regarding the crash
10:53 <+bridge> [ddnet] <Jupstar ✪> the other thing is regarding stripping 😄
10:54 <+bridge> [ddnet] <Learath2> why does it even think SDL2 exports that symbol, maybe it's a malformed import table
10:55 <+bridge> [ddnet] <Jupstar ✪> well it creates the same export address
10:55 <+bridge> [ddnet] <Jupstar ✪> and in my project its not sdl
10:55 <+bridge> [ddnet] <Jupstar ✪> its some weird strip bug
10:55 <+bridge> [ddnet] <Jupstar ✪> i wonder if -s flag for mingw uses the linux internal strip
10:57 <+bridge> [ddnet] <Ryozuki> https://github.com/ddnet/ddnet/issues/2114
10:57 <+bridge> [ddnet] <Ryozuki> :tee_thinking:
10:59 <+bridge> [ddnet] <Learath2> well @deen said it crashes without the strip too
10:59 <+bridge> [ddnet] <Jupstar ✪> but thats something different
10:59 <+bridge> [ddnet] <Jupstar ✪> for me it works when i compile it
11:00 <+bridge> [ddnet] <Learath2> does it have the double import?
11:00 <+bridge> [ddnet] <Jupstar ✪> btw strip -s DDNet.exe does not remove 
11:00 <+bridge> [ddnet] <Jupstar ✪> 
11:00 <+bridge> [ddnet] <Jupstar ✪>     symbols stripped
11:00 <+bridge> [ddnet] <Jupstar ✪> 
11:00 <+bridge> [ddnet] <Jupstar ✪>     debugging information removed
11:00 <+bridge> [ddnet] <Jupstar ✪> 
11:00 <+bridge> [ddnet] <Jupstar ✪> for me, strangly enough
11:00 <+bridge> [ddnet] <Jupstar ✪> but the script uses the linux command doesnt it?
11:03 <+bridge> [ddnet] <Jupstar ✪> @deen does it crash for u in debug mode?
11:11 <+bridge> [ddnet] <Learath2> binutils source is a little too huge to dissect for this bug 😛
11:12 <+bridge> [ddnet] <deen> might also be an SDL2 bug, I'll try downgrading SDL2 later
11:15 <+bridge> [ddnet] <Jupstar ✪> well as i said i dont have sdl in the other project
11:15 <+bridge> [ddnet] <Jupstar ✪> still get the error
11:45 <+bridge> [ddnet] <Learath2> @Jupstar ✪ if you are here can you link verbosely?
11:45 <+bridge> [ddnet] <Jupstar ✪> what does that mean?
11:45 <+bridge> [ddnet] <Learath2> pass --verbose to ld
11:45 <+bridge> [ddnet] <Jupstar ✪> mh ok
11:48 <+bridge> [ddnet] <Learath2> it should output the linker script which I wanted to take a look at
11:49 <+bridge> [ddnet] <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/697020228307255366/message.txt
11:49 <+bridge> [ddnet] <Jupstar ✪> dunno if that was passed to ld
11:49 <+bridge> [ddnet] <Jupstar ✪> i just added it to cmake linker flags
11:51 <+bridge> [ddnet] <Learath2> doesn't seem it made it's way to LD
11:51 <+bridge> [ddnet] <Jupstar ✪> mhh
11:51 <+bridge> [ddnet] <Learath2> it made it to gcc though
11:51 <+bridge> [ddnet] <Learath2> how did you add to linker flags btw?
11:52 <+bridge> [ddnet] <Jupstar ✪> ok i pass it to release maybe it gets overwritten
11:52 <+bridge> [ddnet] <Jupstar ✪> looks better now xd
11:52 <+bridge> [ddnet] <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/697021055453233162/message.txt
11:53 <+bridge> [ddnet] <Jupstar ✪> but looks same to me
11:53 <+bridge> [ddnet] <Jupstar ✪> but it only is verbose when its linking
11:53 <+bridge> [ddnet] <Jupstar ✪> so that is mingws linker output
11:54 <+bridge> [ddnet] <Learath2> that's gccs --verbose output
11:54 <+bridge> [ddnet] <Learath2> not ld's
11:54 <+bridge> [ddnet] <Jupstar ✪> set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} --verbose")
11:54 <+bridge> [ddnet] <Jupstar ✪> what am i doing wrong then
11:55 <+bridge> [ddnet] <Learath2> hm, maybe try -Wl,--verbose
11:56 <+bridge> [ddnet] <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/697021898046832730/message.txt
11:56 <+bridge> [ddnet] <Jupstar ✪> yeah thats verbose xd
11:56 <+bridge> [ddnet] <Learath2> let's see if there is any glaring issue 😛
11:56 <+bridge> [ddnet] <Learath2> fixing an actual binutils bug is a little beyond me
11:58 <+bridge> [ddnet] <Jupstar ✪> but i can just tell to clearify:
11:58 <+bridge> [ddnet] <Jupstar ✪> i use another project and have the acquire error there too(it uses -s flag which just strips too).
11:58 <+bridge> [ddnet] <Jupstar ✪> i don't get any error when i use either my exe or deens exe without stripping
11:58 <+bridge> [ddnet] <Jupstar ✪> but deens crashes, mine does not
11:59 <+bridge> [ddnet] <Learath2> can you dump that exe see if it still has the double import
12:00 <+bridge> [ddnet] <Jupstar ✪> it does not, but it also does not strip correctly when i use strip -s DDNet.exe, i'll try with -s gimme a minute
12:02 <+bridge> [ddnet] <Jupstar ✪> it does not double it
12:02 <+bridge> [ddnet] <Jupstar ✪> but in my other project it does xD
12:03 <+bridge> [ddnet] <Jupstar ✪> its just random
12:03 <+bridge> [ddnet] <Learath2> are you stripping with binutils strip btw?
12:03 <+bridge> [ddnet] <Jupstar ✪> from mingw?
12:03 <+bridge> [ddnet] <Learath2> it should be included in mingw yeah
12:04 <+bridge> [ddnet] <Jupstar ✪> well i used linux internal command and -s
12:04 <+bridge> [ddnet] <Jupstar ✪> i dunno if i have a mingwstrip
12:04 <+bridge> [ddnet] <Jupstar ✪> but according to cmakelist.txt it also just does strip -s
12:05 <+bridge> [ddnet] <Learath2> there is one in bintools and mingw does come with the entire bintools
12:05 <+bridge> [ddnet] <Learath2> what is the cross compiler called?
12:06 <+bridge> [ddnet] <Learath2> try /usr/bin/x86_64-w64-mingw32-strip
12:06 <+bridge> [ddnet] <Jupstar ✪> well i use mingw64
12:08 <+bridge> [ddnet] <Jupstar ✪> ok used the mingw strip and it stripped, but no double symbol
12:08 <+bridge> [ddnet] <Jupstar ✪> but that doesnt mean its working
12:08 <+bridge> [ddnet] <Jupstar ✪> i'll try it in windows now, if it doesnt work, it might be related to windows
12:10 <+bridge> [ddnet] <Learath2> The PE executable format is extremely finicky from what I can see from that linker script and the dozens of workarounds in ld's source
12:10 <+bridge> [ddnet] <Learath2> it is entirely possible that stripping with a different version of binutils or one that might be missing the mingw plugin could cause issues
12:12 <+bridge> [ddnet] <Jupstar ✪> yeah for me all versions work:
12:12 <+bridge> [ddnet] <Jupstar ✪> no strip
12:12 <+bridge> [ddnet] <Jupstar ✪> strip with linux strip
12:12 <+bridge> [ddnet] <Jupstar ✪> strip with mingw strip
12:12 <+bridge> [ddnet] <Jupstar ✪> and in my other project it does not
12:12 <+bridge> [ddnet] <Jupstar ✪> doing nothing else xd
12:13 <+bridge> [ddnet] <Learath2> I guess it is indeed a mingw/binutils issue, the best we can do is create an issue about it
12:13 <+bridge> [ddnet] <Jupstar ✪> well the question is does mingw -s use mingw strip or linux strip
12:14 <+bridge> [ddnet] <Learath2> mingw -s?
12:14 <+bridge> [ddnet] <Jupstar ✪> compiler flag
12:14 <+bridge> [ddnet] <Learath2> you can pass -s to the compiler too?
12:14 <+bridge> [ddnet] <Jupstar ✪> yes
12:14 <+bridge> [ddnet] <Jupstar ✪> bcs in the other project it uses -s, maybe deens strip does what mingw's -s does too
12:14 <+bridge> [ddnet] <Jupstar ✪> or its random
12:14 <+bridge> [ddnet] <Jupstar ✪> xD
12:15 <+bridge> [ddnet] <Jupstar ✪> maybe deen should use mingw's strip
12:15 <+bridge> [ddnet] <Jupstar ✪> but deens version without stripping worked, except it crashes
12:15 <+bridge> [ddnet] <Learath2> he can try but I doubt that's the issue, even without stripping it was broken
12:15 <+bridge> [ddnet] <Jupstar ✪> but not bcs no ddl entry was missing
12:15 <+bridge> [ddnet] <Learath2> why must microsoft make everything so hard for everyone?
12:16 <+bridge> [ddnet] <Jupstar ✪> maybe they had a bug or changed it, and mingws wrapper call breaks it currently or smth
12:16 <+bridge> [ddnet] <Jupstar ✪> like there is no fall back
12:17 <+bridge> [ddnet] <Jupstar ✪> but its too strange that the symbol is double tho
12:17 <+bridge> [ddnet] <Jupstar ✪> its pure random
12:18 <+bridge> [ddnet] <Jupstar ✪> i also don't find any issue regarding this, but the fact that 2 completly different projects have the same error
12:18 <+bridge> [ddnet] <Jupstar ✪> makes me wonder nobody reportet it
12:18 <+bridge> [ddnet] <Learath2> It'd be nice if we could all agree on an executable format, ELF is nice and it can even be extended
12:19 <+bridge> [ddnet] <Learath2> @Jupstar ✪ It probably triggers in pretty specific circumstances
12:20 <+bridge> [ddnet] <Learath2> I saw one more person ask about it on stackoverflow but no one could reply
12:20 <+bridge> [ddnet] <Jupstar ✪> well atleast u found smth xd
12:20 <+bridge> [ddnet] <Learath2> https://stackoverflow.com/questions/41885215/dependencies-to-cryptreleasecontext-and-other-advapi32-calls-with-cgo
12:21 <+bridge> [ddnet] <Learath2> This guy seems to have very meh english and doesn't describe the issue well, but there it is advapi functions ending up in different/wrong dlls
12:26 <+bridge> [ddnet] <Learath2> I don't even know if we can write a minimal testcase for this while reporting tbh
12:27 <+bridge> [ddnet] <Jupstar ✪> well anyway the other project doesnt work at all without or with strip.
12:27 <+bridge> [ddnet] <Jupstar ✪> so you really just have to report its not reproducable
12:28 <+bridge> [ddnet] <Jupstar ✪> well except you use the excat versions of deens arch linux and the current ddnet github maybe
12:41 <+bridge> [ddnet] <Learath2> okay I give up, PE is just too complex for my mortal eyes
12:42 <+bridge> [ddnet] <Learath2> also I ran out of music
13:04 <+bridge> [ddnet] <Jupstar ✪> its probably about this
13:04 <+bridge> [ddnet] <Jupstar ✪> http://mingw.org/wiki/MixingCompilers
13:04 <+bridge> [ddnet] <Jupstar ✪> 
13:04 <+bridge> [ddnet] <Jupstar ✪> i tried changing the linkers to mingw-ld without success
13:04 <+bridge> [ddnet] <deen> so I should build SDL2 myself?
13:04 <+bridge> [ddnet] <Jupstar ✪> well i dunno
13:04 <+bridge> [ddnet] <Jupstar ✪> test it out i have 0 plan xD
13:05 <+bridge> [ddnet] <deen> to me this sounds like an unrelated issue
13:05 <+bridge> [ddnet] <Jupstar ✪> but i remember i build the libs for my project too a longer time ago, so maybe thats it
13:06 <+bridge> [ddnet] <Jupstar ✪> i'll try it out for my project and give u feedback
13:09 <+bridge> [ddnet] <Jupstar ✪> @deen it indeed worked now
13:09 <+bridge> [ddnet] <Jupstar ✪> so yes
13:09 <+bridge> [ddnet] <Jupstar ✪> u need to build sdl for mingw yourself XD
13:10 <+bridge> [ddnet] <Jupstar ✪> will probs work
13:10 <+bridge> [ddnet] <deen> meh
13:10 <+bridge> [ddnet] <deen> ah, sdl2 also provides development libs for mingw
13:11 <+bridge> [ddnet] <deen> i always used the VS ones I think?
13:11 <+bridge> [ddnet] <Jupstar ✪> yeah i think ddnet uses vs ones
13:12 <+bridge> [ddnet] <deen> that's the other problem, if I provide mingw ones, then maybe we get other problems when someone builds in visual studio
13:12 <+bridge> [ddnet] <deen> so we need both?
13:12 <+bridge> [ddnet] <Jupstar ✪> probably the best way
13:12 <+bridge> [ddnet] <Jupstar ✪> @heinrich5991 does adding 
13:12 <+bridge> [ddnet] <Jupstar ✪> set(CMAKE_LINKER x86_64-w64-mingw32-ld)
13:12 <+bridge> [ddnet] <Jupstar ✪> set(CMAKE_AR x86_64-w64-mingw32-gcc-ar)
13:13 <+bridge> [ddnet] <Jupstar ✪> set(CMAKE_RANLIB x86_64-w64-mingw32-gcc-ranlib)
13:13 <+bridge> [ddnet] <Jupstar ✪> to the mingw toolchain makes sense?
13:24 <+bridge> [ddnet] <heinrich5991> @deen would this commit help? https://github.com/heinrich5991/ddnet/commit/293e58c932e6ffeb779f07e5b0e44fdfe1a849d8
13:25 <+bridge> [ddnet] <deen> I don't know. I can try
13:30 <+bridge> [ddnet] <deen> ```
13:30 <+bridge> [ddnet] <deen> /usr/lib/gcc/x86_64-w64-mingw32/9.3.0/../../../../x86_64-w64-mingw32/bin/ld: CMakeFiles/DDNet.dir/objects.a(system.c.obj):system.c:(.text+0x579e): undefined reference to `RtlGenRandom'
13:30 <+bridge> [ddnet] <deen> /usr/lib/gcc/x86_64-w64-mingw32/9.3.0/../../../../x86_64-w64-mingw32/bin/ld: CMakeFiles/DDNet.dir/objects.a(system.c.obj):system.c:(.text+0x5878): undefined reference to `RtlGenRandom'
13:30 <+bridge> [ddnet] <deen> /usr/lib/gcc/x86_64-w64-mingw32/9.3.0/../../../../x86_64-w64-mingw32/bin/ld: CMakeFiles/DDNet.dir/objects.a(system.c.obj):system.c:(.text+0x58e2): undefined reference to `RtlGenRandom'
13:30 <+bridge> [ddnet] <deen> ```
13:34 <+bridge> [ddnet] <heinrich5991> interesting. I don't get the error locally 😦
13:35 <+bridge> [ddnet] <heinrich5991> @deen can you try again? I pushed another version
13:40 <+bridge> [ddnet] <deen> @heinrich5991 works for me in wine
13:41 <+bridge> [ddnet] <deen> sent exe to Jupstar for windows verification
13:53 <+bridge> [ddnet] <Patiga> in the struct `CSwitchTile` from `mapitems.h`
13:53 <+bridge> [ddnet] <Patiga> ```
13:53 <+bridge> [ddnet] <Patiga> class CSwitchTile
13:53 <+bridge> [ddnet] <Patiga> {
13:53 <+bridge> [ddnet] <Patiga> public:
13:53 <+bridge> [ddnet] <Patiga>     unsigned char m_Number;
13:53 <+bridge> [ddnet] <Patiga>     unsigned char m_Type;
13:53 <+bridge> [ddnet] <Patiga>     unsigned char m_Flags;
13:53 <+bridge> [ddnet] <Patiga>     unsigned char m_Delay;
13:53 <+bridge> [ddnet] <Patiga> };
13:53 <+bridge> [ddnet] <Patiga> ```
13:53 <+bridge> [ddnet] <Patiga> where can i find what `m_Flags` contains?
13:54 <+bridge> [ddnet] <Ryozuki> search how its used
13:54 <+bridge> [ddnet] <Patiga> didnt find anything in reasonable time
13:54 <+bridge> [ddnet] <Patiga> so i figured someone here might either know it or find it a lot faster
13:56 <+bridge> [ddnet] <heinrich5991> it *looks like* they're the normal tile flags
13:57 <+bridge> [ddnet] <heinrich5991> i.e. rotation, mirroring
13:57 <+bridge> [ddnet] <Patiga> 👍 thx
14:14 <+bridge> [ddnet] <deen> so for Jupstar it crashes, not sure why
14:26 <+bridge> [ddnet] <deen> @heinrich5991 any hint for how to best use these paths?
14:48 <+bridge> [ddnet] <heinrich5991> @deen add them to the `set_extra_dirs_lib` function
14:48 <+bridge> [ddnet] <heinrich5991> in `CMakeLists.txt`
14:52 <+bridge> [ddnet] <heinrich5991> ```
14:52 <+bridge> [ddnet] <heinrich5991> if(TARGET_BITS AND TARGET_OS)
14:52 <+bridge> [ddnet] <heinrich5991>   set(DIR "ddnet-libs/${NAME}/${TARGET_OS}/lib${TARGET_BITS}")
14:52 <+bridge> [ddnet] <heinrich5991>   if(TARGET_OS STREQUAL)
14:52 <+bridge> [ddnet] <heinrich5991>     if(MSVC)
14:52 <+bridge> [ddnet] <heinrich5991>       list(APPEND DIR "ddnet-libs/${TARGET_OS}/lib${TARGET_BITS}/vc")
14:52 <+bridge> [ddnet] <heinrich5991>     else()
14:52 <+bridge> [ddnet] <heinrich5991>       list(APPEND DIR "ddnet-libs/${TARGET_OS}/lib${TARGET_BITS}/mingw")
14:52 <+bridge> [ddnet] <heinrich5991>     endif()
14:52 <+bridge> [ddnet] <heinrich5991>   endif()
14:52 <+bridge> [ddnet] <heinrich5991>   [...]
14:53 <+bridge> [ddnet] <heinrich5991> endif()
14:53 <+bridge> [ddnet] <heinrich5991> ```
14:53 <+bridge> [ddnet] <heinrich5991> @deen ^
14:53 <+bridge> [ddnet] <deen> btw, the libsdl.org sdl2.dll for mingw also didn't fix the issue, so now I'm building my own
14:53 <+bridge> [ddnet] <deen> thanks
14:55 <+bridge> [ddnet] <heinrich5991> ```
14:55 <+bridge> [ddnet] <heinrich5991> if(TARGET_BITS AND TARGET_OS)
14:55 <+bridge> [ddnet] <heinrich5991>   set(DIR "ddnet-libs/${NAME}/${TARGET_OS}/lib${TARGET_BITS}")
14:55 <+bridge> [ddnet] <heinrich5991>   if(TARGET_OS STREQUAL "windows")
14:55 <+bridge> [ddnet] <heinrich5991>     if(MSVC)
14:55 <+bridge> [ddnet] <heinrich5991>       list(APPEND DIR "ddnet-libs/${TARGET_OS}/lib${TARGET_BITS}/vc")
14:55 <+bridge> [ddnet] <heinrich5991>     else()
14:55 <+bridge> [ddnet] <heinrich5991>       list(APPEND DIR "ddnet-libs/${TARGET_OS}/lib${TARGET_BITS}/mingw")
14:55 <+bridge> [ddnet] <heinrich5991>     endif()
14:55 <+bridge> [ddnet] <heinrich5991>   endif()
14:55 <+bridge> [ddnet] <heinrich5991>   [...]
14:55 <+bridge> [ddnet] <heinrich5991> endif()
14:55 <+bridge> [ddnet] <heinrich5991> ```
15:18 <+bridge> [ddnet] <heinrich5991> @deen do you understand this error?
15:18 <+bridge> [ddnet] <heinrich5991> ```
15:18 <+bridge> [ddnet] <heinrich5991> W: The repository 'https://dl.yarnpkg.com/debian stable Release' does not have a Release file.
15:18 <+bridge> [ddnet] <heinrich5991> E: Failed to fetch https://dl.yarnpkg.com/debian/dists/stable/main/binary-amd64/Packages  503  No healthy IP available for the backend
15:18 <+bridge> [ddnet] <heinrich5991> ```
15:18 <+bridge> [ddnet] <heinrich5991> doesn't seem to be related to the change
15:22 <+bridge> [ddnet] <deen> yeah, can't reach dl.yarnpkg.com
15:22 <+bridge> [ddnet] <deen> infrastructure problem i guess
15:24 <+bridge> [ddnet] <deen> Hm, why do I still need SDL2.lib when I build my own SDL2.dll
15:24 <+bridge> [ddnet] <heinrich5991> windows dynamic linking works like this: you build a library that you statically link that takes care of dynamically linking the actual dll
15:25 <+bridge> [ddnet] <heinrich5991> (as far as I understand it; I read a bit about it, but I haven't looked into it in that much detail)
15:25 <+bridge> [ddnet] <deen> so how do i get the .lib file?
15:25 <+bridge> [ddnet] <deen> building SDL2 didn't create it
15:26 <+bridge> [ddnet] <heinrich5991> hm, it should
15:26 <+bridge> [ddnet] <deen> and the official SDL2 mingw version also doesn't contain a .lib file
15:26 <+bridge> [ddnet] <heinrich5991> hm ok
15:26 <+bridge> [ddnet] <Jupstar ✪> it does
15:26 <+bridge> [ddnet] <deen> oh?
15:27 <+bridge> [ddnet] <Jupstar ✪> \x86_64-w64-mingw32\lib\
15:27 <+bridge> [ddnet] <heinrich5991> currently don't have time to investigate, and I'm probably not being helpful, I'll just leave for now
15:27 <+bridge> [ddnet] <Jupstar ✪> libSDL2.dll.a
15:27 <+bridge> [ddnet] <Jupstar ✪> it probs static links the shared api for the shared library
15:28 <+bridge> [ddnet] <Jupstar ✪> (ok its not a .lib file like for vs) but its a normal static lib u have to link against
15:34 <+bridge> [ddnet] <deen> make[3]: *** No rule to make target 'ddnet-libs/sdl/windows/lib64/SDL2.lib', needed by 'DDNet.exe'.  Stop.
15:38 <+bridge> [ddnet] <deen> ok, works now
15:38 <+bridge> [ddnet] <deen> had to remove CMakeCache.txt
15:39 <+bridge> [ddnet] <deen> finally, runs fine in wine
15:39 <+bridge> [ddnet] <deen> please test on Windows if client starts fine: https://ddnet.tw/DDNet-13.0-win64.zip
15:42 <+bridge> [ddnet] <Jupstar ✪> @deen works for me 😄
15:42 <+bridge> [ddnet] <Jupstar ✪> was it with self compiled libs now?=
15:42 <+bridge> [ddnet] <deen> yes
15:42 <+bridge> [ddnet] <Jupstar ✪> ok
15:42 <+bridge> [ddnet] <deen> thanks for the hint @Jupstar ✪
15:42 <+bridge> [ddnet] <Jupstar ✪> well i looked thorugh SDL and only saw that for WinRT it compiles cpp code too
15:43 <+bridge> [ddnet] <Jupstar ✪> dunno if that is enabled by default
15:43 <+bridge> [ddnet] <deen> Will release in the evening, see you
15:43 <+bridge> [ddnet] <Jupstar ✪> or mingw isnt downward compatible to all types of c dlls
15:43 <+bridge> [ddnet] <Jupstar ✪> cya
16:17 <+bridge> [ddnet] <louis> could we have the freeze stars for other tees in /showothers also be transparent and maybe hammer / hook sounds could also be less volume?
18:09 <+bridge> [ddnet] <Ryuken> hello
18:09 <+bridge> [ddnet] <Ryuken> i have problem
18:09 <+bridge> [ddnet] <Ryuken> whern i try to convert my demos to .mp4 my ddnet i crash
18:09 <+bridge> [ddnet] <Ryuken> whern i try to convert my demos to .mp4 my ddnet crash
18:10 <+bridge> [ddnet] <Ryuken> https://cdn.discordapp.com/attachments/293493549758939136/697116041867952228/message.txt
18:10 <+bridge> [ddnet] <Ryuken> https://cdn.discordapp.com/attachments/293493549758939136/697116047907487914/message.txt
18:11 <+bridge> [ddnet] <heinrich5991> relevant part:
18:11 <+bridge> [ddnet] <heinrich5991> ```
18:11 <+bridge> [ddnet] <heinrich5991> [2020-04-07 18:00:38][datafile]: loading data index=15 size=13883 uncompressed=262144
18:11 <+bridge> [ddnet] <heinrich5991> [2020-04-07 18:00:38][demo_render]: ppp.demo.mp4
18:11 <+bridge> [ddnet] <heinrich5991> [NULL @ 0x55978136e520] Requested output format 'mp4' is not a suitable output format
18:11 <+bridge> [ddnet] <heinrich5991> [2020-04-07 18:00:38][video_recorder]: Failed to create formatcontext for recoding video.
18:11 <+bridge> [ddnet] <heinrich5991> [2020-04-07 18:00:39][datafile]: loading data index=16 size=88 uncompressed=152
18:11 <+bridge> [ddnet] <heinrich5991> [...]
18:11 <+bridge> [ddnet] <heinrich5991> [2020-04-07 18:00:40][datafile]: loading data index=25 size=620 uncompressed=2888
18:11 <+bridge> [ddnet] <heinrich5991> [2020-04-07 18:01:00][video_recorder]: called
18:11 <+bridge> [ddnet] <heinrich5991> Erreur de segmentation (core dumped)
18:11 <+bridge> [ddnet] <heinrich5991> ```
18:12 <+bridge> [ddnet] <Ryuken> and ?
18:12 <+bridge> [ddnet] <heinrich5991> sorry, wasn't directed at you
18:12 <+bridge> [ddnet] <heinrich5991> just in case someone wanted to take a quick look without downloading the log
18:12 <+bridge> [ddnet] <heinrich5991> I don't know about the video recorder tbh
18:13 <+bridge> [ddnet] <Ryuken> ah ok
18:13 <+bridge> [ddnet] <Ryuken> np
18:13 <+bridge> [ddnet] <Ryuken> :3
18:45 <+bridge> [ddnet] <ChillerDragon> lmao just wasted some hours of life the create a bash script that generates bash code using sed to prepare sed statements
18:45 <+bridge> [ddnet] <ChillerDragon> https://cdn.discordapp.com/attachments/293493549758939136/697124911063498752/unknown.png
18:46 <+bridge> [ddnet] <Ryuken> it s for me ?
18:46 <+bridge> [ddnet] <Ryozuki> 🤦🏻‍♂️
18:47 <+bridge> [ddnet] <ChillerDragon> @Ryuken nah its for my vim config 😄
18:47 <+bridge> [ddnet] <ChillerDragon> ur free to use it as well 😄
18:59 <+bridge> [ddnet] <heinrich5991> @deen does replacing `"${EXTRA_CURL_LIBDIR}/libcurl.dll"` with `"${CURL_LIBRARY}"` in `cmake/FindCurl.cmake` help?
19:59 <+bridge> [ddnet] <deen> @heinrich5991 yes, that worked, but now it doesn't find SDL2. Maybe I should just get rid of the VS version
20:00 <+bridge> [ddnet] <heinrich5991> @deen do the same to the line with SDL2.dll in `cmake/FindSDL2.cmake`
20:00 <+bridge> [ddnet] <deen> i did
21:55 <+bridge> [ddnet] <Learath2> sorry, couldn't follow what happened today
21:55 <+bridge> [ddnet] <Learath2> @deen does it work if we compile our own SDL?
22:04 <+bridge> [ddnet] <onby> 25 AM] Learath2: @onby well highdpi effectively multiplies the resolution maybe the computer is genuinely having trouble getting out all the pixels
22:04 <+bridge> [ddnet] <onby> [1:26 AM] Learath2: Does it atleast look sharper?
22:04 <+bridge> [ddnet] <onby> 
22:04 <+bridge> [ddnet] <onby> it changes the way the font looks i guess
22:04 <+bridge> [ddnet] <onby> but the change isnt worth making the fans spin and it would be cool if it could be disabled in newer versions
22:06 <+bridge> [ddnet] <Learath2> if it's just the font we are probably doing sth wrong about highdpi anyway
22:11 <+bridge> [ddnet] <redix> Maybe the rest of the texture is not high-res enough, so you don't see a difference. The text renderer automatically uses a bigger font size if resolution goes up
22:13 <+bridge> [ddnet] <Learath2> you can look for the rounded corners on rectangles, those should look better
22:13 <+bridge> [ddnet] <redix> but highdpi will definitely increase gpu load, so the fans start spinning
22:13 <+bridge> [ddnet] <onby> high dpi cant be turned off on new ddnet it seems?
22:13 <+bridge> [ddnet] <heinrich5991> @Learath2 maybe we can give an option to disable hidpi?
22:13 <+bridge> [ddnet] <onby> yess
22:13 <+bridge> [ddnet] <onby> pls
22:15 <+bridge> [ddnet] <Learath2> definitely, we should also steal some of the highdpi code from 0.7 we are doing some things wrong, but 0.7 has most of it right
22:15 <+bridge> [ddnet] <Learath2> (atleast for macOS
22:15 <+bridge> [ddnet] <Learath2> )
22:18 <+bridge> [ddnet] <onby> nonononono
22:18 <+bridge> [ddnet] <onby> no
22:18 <+bridge> [ddnet] <onby> 0.7 is ass
22:18 <+bridge> [ddnet] <onby> it makes my fans spin so hard
22:19 <+bridge> [ddnet] <onby> and it doesnt even let me change the resolution atall
22:19 <+bridge> [ddnet] <redix> it has an option to turn off highdpi
22:19 <+bridge> [ddnet] <onby> does it come at the expense of those two things^
22:19 <+bridge> [ddnet] <redix> try `gfx_highdpi 0` in 0.7
22:20 <+bridge> [ddnet] <onby> ohhhhh wow
22:20 <+bridge> [ddnet] <onby> https://cdn.discordapp.com/attachments/293493549758939136/697179107988865085/Screen_Shot_2020-04-07_at_3.20.23_PM.png
22:20 <+bridge> [ddnet] <onby> etf
22:21 <+bridge> [ddnet] <heinrich5991> etf?
22:21 <+bridge> [ddnet] <onby> wtf*
22:21 <+bridge> [ddnet] <onby> cus its cutting off
22:21 <+bridge> [ddnet] <onby> half of the ui
22:24 <+bridge> [ddnet] <Trafalgar Law> the fuck
22:24 <+bridge> [ddnet] <redix> looks like the clipping is broken
22:24 <+bridge> [ddnet] <Trafalgar Law> Thats looks not good
22:25 <+bridge> [ddnet] <redix> open an issue in tw repo
22:25 <+bridge> [ddnet] <onby> i kindof gave up on that
22:25 <+bridge> [ddnet] <onby> after the resolution bug has been a "known bug" for like a year
22:25 <+bridge> [ddnet] <onby> and noones tried to fix it
22:25 <+bridge> [ddnet] <onby> i literally cant see what i type in the chat lol
22:25 <+bridge> [ddnet] <Learath2> I know what's brokebn
22:26 <+bridge> [ddnet] <Learath2> wait I'm not sure anymore, I patched SDL so much to get 0.7 working
22:26 <+bridge> [ddnet] <Learath2> @onby is your resolution set to the desktop resolution?
22:26 <+bridge> [ddnet] <onby> no
22:26 <+bridge> [ddnet] <onby> i want windowed 1024x768 like i have on ddnet
22:27 <+bridge> [ddnet] <Learath2> put it to desktop resolution so we can test it
22:27 <+bridge> [ddnet] <onby> https://cdn.discordapp.com/attachments/293493549758939136/697180715409997824/Screen_Shot_2020-04-07_at_3.27.08_PM.png
22:27 <+bridge> [ddnet] <onby> oh here are my settings
22:27 <+bridge> [ddnet] <onby> uuh
22:27 <+bridge> [ddnet] <onby> that will make me lag even more but ok
22:27 <+bridge> [ddnet] <Learath2> or you can patch the source to allow arbitrary resolution
22:27 <+bridge> [ddnet] <Learath2> but don't toggle fullscreen
22:28 <+bridge> [ddnet] <onby> how
22:28 <+bridge> [ddnet] <Learath2> backend_sdl.cpp L703, put 702 703 704 in a block
22:29 <+bridge> [ddnet] <onby> what the hell
22:29 <+bridge> [ddnet] <onby> it changes my resolution back to 1280x800
22:29 <+bridge> [ddnet] <onby> no matter what i do
22:29 <+bridge> [ddnet] <onby> even if i change it in settings.cfg
22:29 <+bridge> [ddnet] <Learath2> those are the lines that forces it
22:29 <+bridge> [ddnet] <Learath2> https://cdn.discordapp.com/attachments/293493549758939136/697181356488392704/unknown.png
22:30 <+bridge> [ddnet] <Learath2> put it in a block like this and it'll stop forcing the resolution
22:30 <+bridge> [ddnet] <deen> @Learath2 yes, compiling our own SDL fixed it
22:30 <+bridge> [ddnet] <Learath2> @deen guess cross-compiling with mingw is different from compiling with mingw on windows
22:31 <+bridge> [ddnet] <onby> XDD
22:31 <+bridge> [ddnet] <onby> https://cdn.discordapp.com/attachments/293493549758939136/697181796806164560/Screen_Shot_2020-04-07_at_3.31.23_PM.png
22:31 <+bridge> [ddnet] <onby> interesting
22:32 <+bridge> [ddnet] <Learath2> @onby is that with highdpi off?
22:32 <+bridge> [ddnet] <onby> yesr
22:32 <+bridge> [ddnet] <Learath2> you can turn it on and off right?
22:32 <+bridge> [ddnet] <onby> idk if it needs restart but yes
22:32 <+bridge> [ddnet] <Learath2> it shouldn't break anything
22:32 <+bridge> [ddnet] <Learath2> great
22:32 <+bridge> [ddnet] <Learath2> does it change gpu/cpu usage?
22:33 <+bridge> [ddnet] <onby> yes i get noticeably better fps in 0.7 with it turned off aha
22:34 <+bridge> [ddnet] <onby> but it clips the ui
22:34 <+bridge> [ddnet] <onby> that is another thing that suggests that ddnet *needs* the option to turn off high dpi support
22:35 <+bridge> [ddnet] <deen> on windows there's a built-in way to disable hidpi, didn't know mac osx doesn't have one
22:38 <+bridge> [ddnet] <Learath2> oh cmon, @onby why didn't you say it broke clipping
22:38 <+bridge> [ddnet] <onby> yessssss thank u xd
22:38 <+bridge> [ddnet] <onby> uh
22:39 <+bridge> [ddnet] <onby> because i just found out about it two seconds ago?
22:39 <+bridge> [ddnet] <onby> i hadnt thought to try gfx_highdpi 0
22:39 <+bridge> [ddnet] <heinrich5991> https://github.com/ddnet/ddnet/pull/2120/files#diff-0667e4904b6955f3b3b84482d7167d0eR568
22:39 <+bridge> [ddnet] <onby> until u suggested it
22:39 <+bridge> [ddnet] <deen> I think there's a way to get the logical vs physical resolution
22:39 <+bridge> [ddnet] <onby> i dont have that problem on 06
22:39 <+bridge> [ddnet] <deen> which is probably what we need here
22:40 <+bridge> [ddnet] <Learath2> The resolution you get from GL_Drawablesize is the resolution we should be rendering in
22:40 <+bridge> [ddnet] <Learath2> we already do that
22:40 <+bridge> [ddnet] <Learath2> @onby is that 0.7 master btw?
22:40 <+bridge> [ddnet] <onby> no
22:40 <+bridge> [ddnet] <onby> i can try
22:41 <+bridge> [ddnet] <onby> its on my test client based on 0.7.3.1
22:41 <+bridge> [ddnet] <Learath2> can you try master instead, just so I don't try to hunt down a bug that no longer exists
22:41 <+bridge> [ddnet] <onby> ye
22:41 <+bridge> [ddnet] <onby> #if defined(CONF_PLATFORM_MACOSX)    // Todo SDL: remove this when fixed (game freezes when losing focus in fullscreen)
22:41 <+bridge> [ddnet] <onby> {
22:41 <+bridge> [ddnet] <onby>         SdlFlags |= SDL_WINDOW_FULLSCREEN_DESKTOP;    // always use "fake" fullscreen
22:41 <+bridge> [ddnet] <onby>     *pWindowWidth = *pDesktopWidth;
22:41 <+bridge> [ddnet] <onby>     *pWindowHeight = *pDesktopHeight;
22:41 <+bridge> [ddnet] <onby> }
22:41 <+bridge> [ddnet] <onby> just that?
22:41 <+bridge> [ddnet] <Learath2> yeah, that should get you windowed gfx at any resolution
22:41 <+bridge> [ddnet] <onby> OK
22:42 <+bridge> [ddnet] <Learath2> btw are you on catalina?
22:43 <+bridge> [ddnet] <Learath2> The clipping issue happens when m_ScreenWidth and m_ScreenHeight in the graphics backend don't match the actual resolution
22:43 <+bridge> [ddnet] <onby> https://cdn.discordapp.com/attachments/293493549758939136/697184765496918066/Screen_Shot_2020-04-07_at_3.43.13_PM.png
22:43 <+bridge> [ddnet] <onby> yes same issue on master
22:43 <+bridge> [ddnet] <Learath2> @onby are you on macOS Catalina?
22:43 <+bridge> [ddnet] <deen> @Learath2 should I merge the hidpi change and my sdl2 and try to release a new one? Or do you still need to fix the clipping thing?
22:43 <+bridge> [ddnet] <onby> https://cdn.discordapp.com/attachments/293493549758939136/697184839597686794/Screen_Shot_2020-04-07_at_3.43.32_PM.png
22:43 <+bridge> [ddnet] <Learath2> @deen nah, clipping thing is not an issue in ddnet
22:43 <+bridge> [ddnet] <heinrich5991> "Use Highdpi" → "Use high DPI"
22:45 <+bridge> [ddnet] <Learath2> @onby can you add a debug print before and after SDL_GL_GetDrawableSize and print the resolution?
22:45 <+bridge> [ddnet] <onby> SDL_GL_GetDrawableSize(m_pWindow, pScreenWidth, pScreenHeight); // drawable size may differ in high dpi mode
22:45 <+bridge> [ddnet] <onby> OK
22:45 <+bridge> [ddnet] <Learath2> `*pScreenWidth` and `*pScreenHeight` that is
22:45 <+bridge> [ddnet] <onby> ye
22:46 <+bridge> [ddnet] <Learath2> there are like 4 resolutions right there so it can get a little confusing which one to print 😛
22:46 <+bridge> [ddnet] <onby> 0 -1 -1
22:46 <+bridge> [ddnet] <onby> 1 2560 1600
22:46 <+bridge> [ddnet] <onby> lol
22:46 <+bridge> [ddnet] <onby> SDL_GetWindowSize(m_pWindow, pWindowWidth, pWindowHeight);
22:46 <+bridge> [ddnet] <onby>     printf("0 %d %d\n", *pScreenWidth, *pScreenHeight);
22:46 <+bridge> [ddnet] <onby>     
22:46 <+bridge> [ddnet] <onby>     SDL_GL_GetDrawableSize(m_pWindow, pScreenWidth, pScreenHeight); // drawable size may differ in high dpi mode
22:46 <+bridge> [ddnet] <onby>     printf("1 %d %d\n", *pScreenWidth, *pScreenHeight);
22:46 <+bridge> [ddnet] <Learath2> is that with gfx_highdpi 1 or 0?
22:46 <+bridge> [ddnet] <onby> 0
22:46 <+bridge> [ddnet] <Learath2> try with 1 too please
22:47 <+bridge> [ddnet] <Trafalgar Law> gfx_highdbi for ddnet?
22:47 <+bridge> [ddnet] <onby> [2020-04-07 15:47:10][client]: starting...
22:47 <+bridge> [ddnet] <onby> 0 -1 -1
22:47 <+bridge> [ddnet] <onby> 1 2560 1600
22:47 <+bridge> [ddnet] <onby> [2020-04-07 15:47:11][sdl]: SDL version 2.0.8 (dll = 2.0.8)
22:47 <+bridge> [ddnet] <onby> [2020-04-07 15:47:11][render]: opengl max texture sizes: 16384, 2048(3D)
22:47 <+bridge> [ddnet] <onby> mm
22:47 <+bridge> [ddnet] <onby> highdpi fixes the clipping
22:47 <+bridge> [ddnet] <onby> but causes fan spinning
22:47 <+bridge> [ddnet] <onby> the "better font but horrible cpu usage" seems to be the same problem for ddnet high dpi and also 0.7
22:47 <+bridge> [ddnet] <Learath2> ooh, i bet this is some macOS issue again
22:48 <+bridge> [ddnet] <onby> great xd
22:48 <+bridge> [ddnet] <Learath2> see how you set gfx_highdpi and the drawable resolution doesn't change?
22:48 <+bridge> [ddnet] <Learath2> that's not supposed to happen
22:48 <+bridge> [ddnet] <onby> ooo
22:48 <+bridge> [ddnet] <onby> i see
22:49 <+bridge> [ddnet] <Learath2> `[2020-04-07 23:49:03][DEBUG]: 1920 1200` when I set gfx_highdpi 0
22:49 <+bridge> [ddnet] <onby> do u have high dpi screen? do u have osx
22:50 <+bridge> [ddnet] <Learath2> `[2020-04-07 23:49:43][DEBUG]: 3840 2400` when I set gfx_highdpi 1
22:50 <+bridge> [ddnet] <onby> o_o
22:50 <+bridge> [ddnet] <Learath2> macOS catalina on a macbook pro, with a high dpi screen
22:50 <+bridge> [ddnet] <onby> nice
22:50 <+bridge> [ddnet] <onby> so it works for u?
22:50 <+bridge> [ddnet] <Learath2> yeah it works fine for me, but I'm wondering whether it's my patched up SDL
22:50 <+bridge> [ddnet] <Learath2> nope, doesn't seem to be
22:52 <+bridge> [ddnet] <Learath2> @deen you can merge highdpi if you want, but I'm not certain how it behaves on windows
22:52 <+bridge> [ddnet] <deen> the default is what we have right now, so I guess it's ok even if it doesn't work great
22:52 <+bridge> [ddnet] <Learath2> @onby I have an idea, can you try sth for me?
22:53 <+bridge> [ddnet] <Learath2> `git cherry-pick 013682a6`
22:54 <+bridge> [ddnet] <onby> where
22:55 <+bridge> [ddnet] <Learath2> on master
22:55 <+bridge> [ddnet] <Learath2> well i'm not sure if that commit will resolve though, so you might need to add my repo as a remote
22:55 <+bridge> [ddnet] <onby> -.7?
22:55 <+bridge> [ddnet] <Learath2> yeah on 0.7
22:55 <+bridge> [ddnet] <onby> nobody1s-MacBook-Pro:teeworlds-master nobody1$ git cherry-pick 013682a6
22:55 <+bridge> [ddnet] <onby> fatal: Not a git repository (or any of the parent directories): .git
22:55 <+bridge> [ddnet] <onby> 
22:56 <+bridge> [ddnet] <onby> ..xd
22:56 <+bridge> [ddnet] <onby> i suppose i should clone it
22:56 <+bridge> [ddnet] <Learath2> no no
22:56 <+bridge> [ddnet] <onby> well its not a git repo
22:56 <+bridge> [ddnet] <onby> i just downloaded zip
22:56 <+bridge> [ddnet] <onby> nobody1s-MacBook-Pro:teeworlds nobody1$ git cherry-pick 013682a6
22:56 <+bridge> [ddnet] <onby> fatal: bad revision '013682a6'
22:56 <+bridge> [ddnet] <onby> o
22:56 <+bridge> [ddnet] <Learath2> just add https://github.com/Learath2/teeworlds.git
22:57 <+bridge> [ddnet] <onby> how
22:57 <+bridge> [ddnet] <Learath2> `git remote add l2 https://github.com/Learath2/teeworlds.git`
22:57 <+bridge> [ddnet] <Learath2> `git fetch l2`
22:57 <+bridge> [ddnet] <Learath2> that should fetch my commits, then you can cherry-pick
22:57 <+bridge> [ddnet] <onby> oo ok
22:58 <+bridge> [ddnet] <onby> nobody1s-MacBook-Pro:teeworlds nobody1$ git cherry-pick 013682a6
22:58 <+bridge> [ddnet] <onby> error: could not apply 013682a68... Implement runtime resizing
22:58 <+bridge> [ddnet] <onby> hint: after resolving the conflicts, mark the corrected paths
22:58 <+bridge> [ddnet] <onby> hint: with 'git add <paths>' or 'git rm <paths>'
22:58 <+bridge> [ddnet] <onby> hint: and commit the result with 'git commit'
22:58 <+bridge> [ddnet] <onby> nobody1s-MacBook-Pro:teeworlds nobody1$
22:58 <+bridge> [ddnet] <Learath2> conflicts??
22:58 <+bridge> [ddnet] <onby> * [new branch]          fngspoof          -> l2/fngspoof
22:58 <+bridge> [ddnet] <onby> 
22:58 <+bridge> [ddnet] <onby> what is this o_o
22:58 <+bridge> [ddnet] <Learath2> huh no idea, I wonder what I was doing with that branch
22:58 <+bridge> [ddnet] <onby> same
22:58 <+bridge> [ddnet] <onby> lol
22:58 <+bridge> [ddnet] <onby> yeah idk why conflicts
22:58 <+bridge> [ddnet] <onby> i just git clone https://github.com/teeworlds/teeworlds
22:59 <+bridge> [ddnet] <onby> then did the commands u otld me
22:59 <+bridge> [ddnet] <Learath2> @onby well do a git status
22:59 <+bridge> [ddnet] <onby> nobody1s-MacBook-Pro:teeworlds nobody1$ git status
22:59 <+bridge> [ddnet] <onby> On branch master
22:59 <+bridge> [ddnet] <onby> Your branch is up to date with 'origin/master'.
22:59 <+bridge> [ddnet] <onby> 
22:59 <+bridge> [ddnet] <onby> You are currently cherry-picking commit 013682a68.
22:59 <+bridge> [ddnet] <onby>   (fix conflicts and run "git cherry-pick --continue")
22:59 <+bridge> [ddnet] <onby>   (use "git cherry-pick --abort" to cancel the cherry-pick operation)
22:59 <+bridge> [ddnet] <onby> 
22:59 <+bridge> [ddnet] <onby> Changes to be committed:
22:59 <+bridge> [ddnet] <onby> 
22:59 <+bridge> [ddnet] <onby>     modified:   src/engine/client/graphics_threaded.cpp
22:59 <+bridge> [ddnet] <onby>     modified:   src/engine/client/input.cpp
22:59 <+bridge> [ddnet] <onby>     modified:   src/engine/graphics.h
22:59 <+bridge> [ddnet] <onby>     modified:   src/game/client/components/menus_scrollregion.cpp
23:00 <+bridge> [ddnet] <onby>     modified:   src/game/client/components/menus_settings.cpp
23:00 <+bridge> [ddnet] <onby> 
23:00 <+bridge> [ddnet] <onby> Unmerged paths:
23:00 <+bridge> [ddnet] <onby>   (use "git add <file>..." to mark resolution)
23:00 <+bridge> [ddnet] <onby> 
23:00 <+bridge> [ddnet] <onby>     both modified:   src/engine/client/backend_sdl.cpp
23:00 <+bridge> [ddnet] <onby>     both modified:   src/engine/client/backend_sdl.h
23:00 <+bridge> [ddnet] <onby>     both modified:   src/engine/client/graphics_threaded.h
23:00 <+bridge> [ddnet] <Learath2> yeah no, do a git cherry-pick --abort
23:00 <+bridge> [ddnet] <onby> ok
23:00 <+bridge> [ddnet] <onby> do i have to manually fix the sdl include paths again
23:00 <+bridge> [ddnet] <Learath2> then do a `git checkout 013682a68` instead
23:00 <+bridge> [ddnet] <onby> src/engine/client/input.cpp:3:10: fatal error: 'SDL.h' file not found
23:00 <+bridge> [ddnet] <onby> #include "SDL.h"
23:00 <+bridge> [ddnet] <onby>          ^~~~~~~
23:00 <+bridge> [ddnet] <onby> 1 error generated.
23:00 <+bridge> [ddnet] <onby> heh
23:00 <+bridge> [ddnet] <onby> looks like i do
23:00 <+bridge> [ddnet] <Learath2> is that after you aborted the cherry pick and checked out that commit?
23:00 <+bridge> [ddnet] <onby> after abort, before checkout
23:01 <+bridge> [ddnet] <onby> i typed bam
23:01 <+bridge> [ddnet] <onby> and
23:01 <+bridge> [ddnet] <onby> im not surprised, i always have to fix this manally
23:01 <+bridge> [ddnet] <Learath2> I wonder what's wrong with your installation of SDL
23:01 <+bridge> [ddnet] <onby> by changing "SDL.h" to <SDL2/SDL.h>
23:01 <+bridge> [ddnet] <Learath2> I think cmake should handle that better noby
23:01 <+bridge> [ddnet] <onby> oh
23:02 <+bridge> [ddnet] <onby> i use abm
23:02 <+bridge> [ddnet] <heinrich5991> …
23:02 <+bridge> [ddnet] <onby> ill try cmake
23:02 <+bridge> [ddnet] <Learath2> well it works with bam too for me, but your computer is weird 😛
23:02 <+bridge> [ddnet] <onby> xd
23:02 <+bridge> [ddnet] <Learath2> that runtime resizing patch should allow AppKit to resize the window to the correct size
23:03 <+bridge> [ddnet] <onby> sounds good
23:03 <+bridge> [ddnet] <onby> im compiling rn
23:03 <+bridge> [ddnet] <Learath2> if that doesn't work either, then idk why that surface is larger then it reports
23:03 <+bridge> [ddnet] <Learath2> oh can you also add a dbg_msg?
23:03 <+bridge> [ddnet] <onby> lol it worked wit cmake wtf
23:03 <+bridge> [ddnet] <onby> where
23:04 <+bridge> [ddnet] <Learath2> SDL_WINDOWEVENT_SIZE_CHANGED
23:04 <+bridge> [ddnet] <onby> xd
23:04 <+bridge> [ddnet] <onby> https://cdn.discordapp.com/attachments/293493549758939136/697190078589435956/Screen_Shot_2020-04-07_at_4.04.18_PM.png
23:04 <+bridge> [ddnet] <onby> uh
23:04 <+bridge> [ddnet] <Learath2> right below there, just add a dbg_msg("DEBUG", "o/");
23:04 <+bridge> [ddnet] <onby> what was i supposed to test again
23:05 <+bridge> [ddnet] <Learath2> well that clipping issue happens when the client is using the wrong resolution, but opengl reports a smaller drawable resolution
23:05 <+bridge> [ddnet] <Learath2> so I was thinking maybe that window is resized by AppKit after launch when it knows we can do highdpi
23:05 <+bridge> [ddnet] <onby> the debug msgs never comes up
23:06 <+bridge> [ddnet] <Learath2> can you try one last thing? then I need to go sleep anyway 😛
23:06 <+bridge> [ddnet] <onby> i tried 
23:06 <+bridge> [ddnet] <onby>                 case SDL_WINDOWEVENT:
23:06 <+bridge> [ddnet] <onby>                     dbg_msg("DEBUG", "asdfasdf");
23:06 <+bridge> [ddnet] <onby> 
23:06 <+bridge> [ddnet] <onby> and that msg came up
23:06 <+bridge> [ddnet] <onby> but not the one u said
23:06 <+bridge> [ddnet] <onby> ok
23:06 <+bridge> [ddnet] <Learath2> oh I wonder what event we get
23:07 <+bridge> [ddnet] <Learath2> can you print Event.window.event before we try the other thing?
23:07 <+bridge> [ddnet] <onby> [2020-04-07 16:07:18][client]: WARNING: netversion hash differs
23:07 <+bridge> [ddnet] <onby> EVENT 4
23:07 <+bridge> [ddnet] <onby> EVENT 1
23:07 <+bridge> [ddnet] <onby> EVENT 3
23:07 <+bridge> [ddnet] <onby> EVENT 10
23:07 <+bridge> [ddnet] <onby> EVENT 12
23:07 <+bridge> [ddnet] <onby> [2020-04-07 16:07:18][engine/mastersrv]: saving addresses
23:07 <+bridge> [ddnet] <onby> [2020-04-07 16:07:18][datafile]: loading data index=6 size=76 uncompressed=152
23:07 <+bridge> [ddnet] <onby> [2020-04-07 16:07:18][datafile]: loading data index=7 size=57 uncompressed=152
23:07 <+bridge> [ddnet] <onby> [2020-04-07 16:07:18][datafile]: loading data index=8 size=76 uncompressed=152
23:07 <+bridge> [ddnet] <onby> [2020-04-07 16:07:18][datafile]: loading data index=9 size=4831 uncompressed=31768
23:07 <+bridge> [ddnet] <onby> EVENT 11
23:07 <+bridge> [ddnet] <onby> EVENT 13
23:07 <+bridge> [ddnet] <onby> on launch
23:07 <+bridge> [ddnet] <onby> on clicking the "play" button:
23:07 <+bridge> [ddnet] <onby> EVENT 12
23:07 <+bridge> [ddnet] <onby> EVENT 10
23:07 <+bridge> [ddnet] <onby> [2020-04-07 16:07:27][pFont]: memory usage: 3145728
23:07 <+bridge> [ddnet] <onby> [2020-04-07 16:07:27][pFont]: memory usage: 4194304
23:07 <+bridge> [ddnet] <onby> EVENT 11
23:07 <+bridge> [ddnet] <onby> EVENT 13
23:08 <+bridge> [ddnet] <onby> on joining a server:
23:08 <+bridge> [ddnet] <onby> EVENT 12
23:08 <+bridge> [ddnet] <onby> EVENT 10
23:08 <+bridge> [ddnet] <onby> EVENT 11
23:08 <+bridge> [ddnet] <onby> EVENT 13
23:08 <+bridge> [ddnet] <onby> EVENT 12
23:08 <+bridge> [ddnet] <onby> EVENT 10
23:08 <+bridge> [ddnet] <onby> [2020-04-07 16:07:40][client]: disconnecting. reason='unknown'
23:08 <+bridge> [ddnet] <onby> 
23:08 <+bridge> [ddnet] <onby> ...
23:08 <+bridge> [ddnet] <onby> [2020-04-07 16:07:41][client/network]: loading done
23:08 <+bridge> [ddnet] <onby> EVENT 11
23:08 <+bridge> [ddnet] <onby> EVENT 13
23:08 <+bridge> [ddnet] <onby> [2020-04-0
23:08 <+bridge> [ddnet] <Learath2> that's for windowevent only right?
23:08 <+bridge> [ddnet] <onby> case SDL_WINDOWEVENT:
23:08 <+bridge> [ddnet] <onby>                     printf("EVENT %d\n", Event.window.event);
23:08 <+bridge> [ddnet] <onby> 
23:08 <+bridge> [ddnet] <onby> ye
23:09 <+bridge> [ddnet] <Learath2> okay, this will be horrible for performance but lets see if it helps
23:09 <+bridge> [ddnet] <Learath2> instead of that printf put `Graphics()->UpdateScreenSize();` there
23:10 <+bridge> [ddnet] <onby> windowevent?
23:10 <+bridge> [ddnet] <Learath2> yep
23:10 <+bridge> [ddnet] <Learath2> on any window event, just update the screensize
23:10 <+bridge> [ddnet] <onby> printf or just update
23:10 <+bridge> [ddnet] <Learath2> don't printf, just that graphics command
23:11 <+bridge> [ddnet] <onby> ok
23:11 <+bridge> [ddnet] <onby> fanspinny but clipping goes awy
23:11 <+bridge> [ddnet] <onby> :o
23:11 <+bridge> [ddnet] <Learath2> Who would have guessed a race condition in macOS SDL
23:12 <+bridge> [ddnet] <Learath2> can you check which version of SDL it's running with?
23:12 <+bridge> [ddnet] <Learath2> it should be output in the console
23:12 <+bridge> [ddnet] <onby> [2020-04-07 16:07:17][sdl]: SDL version 2.0.8 (dll = 2.0.8)
23:13 <+bridge> [ddnet] <Learath2> I'd ask you to test with a newer version, but the pain of doing library work on macOS is not something I'd wish on anyone
23:13 <+bridge> [ddnet] <onby> shouldnt it ultimately work no matter what version someone has
23:13 <+bridge> [ddnet] <Learath2> well no, if SDL itself has bugs
23:14 <+bridge> [ddnet] <Learath2> there are many macOS bugs in SDL
23:14 <+bridge> [ddnet] <onby> ripp
23:15 <+bridge> [ddnet] <Learath2> I wonder when SDL_GL_GetDrawable starts returning the correct size
23:15 <+bridge> [ddnet] <Learath2> if we knew at which point the resolution is correct, we could make it work for all versions
23:16 <+bridge> [ddnet] <onby> how to test
23:16 <+bridge> [ddnet] <Learath2> @onby what is in client.m in that patch btw?
23:16 <+bridge> [ddnet] <Learath2> is it my updated version? that might help
23:16 <+bridge> [ddnet] <onby> https://cdn.discordapp.com/attachments/293493549758939136/697193227672879144/client.m
23:17 <+bridge> [ddnet] <Learath2> ah yes, that's what's breaking things
23:18 <+bridge> [ddnet] <Learath2> wait oy merged my pull
23:18 <+bridge> [ddnet] <Learath2> how do you still have that client.m? 😄
23:18 <+bridge> [ddnet] <Learath2> oh that commit has that client.m
23:18 <+bridge> [ddnet] <Learath2> I'm stupid
23:19 <+bridge> [ddnet] <onby> lol
23:19 <+bridge> [ddnet] <Learath2> `git cherry-pick 7f602078e`
23:19 <+bridge> [ddnet] <Learath2> I think that should work
23:19 <+bridge> [ddnet] <onby> nobody1s-MacBook-Pro:teeworlds nobody1$ git cherry-pick 7f602078e
23:19 <+bridge> [ddnet] <onby> error: commit 7f602078e4d9543f4182ed63654ad4dd20b528f0 is a merge but no -m option was given.
23:19 <+bridge> [ddnet] <onby> fatal: cherry-pick failed
23:19 <+bridge> [ddnet] <Learath2> uhm wait are we on a detached head?
23:20 <+bridge> [ddnet] <Learath2> `git checkout -b testbranch`
23:20 <+bridge> [ddnet] <Learath2> `git merge l2/tw_pr_sdldelegate`
23:23 <+bridge> [ddnet] <onby> wat am i testing here
23:23 <+bridge> [ddnet] <Learath2> @onby remove the updatescreensize thing on WINDOWEVENT
23:23 <+bridge> [ddnet] <Learath2> add a dbg message to WINDOWEVENT_RESIZED THINGOMAJIG
23:24 <+bridge> [ddnet] <Learath2> SDL_WINDOWEVENT_SIZE_CHANGED this one
23:24 <+bridge> [ddnet] <Learath2> highdpi 0 and 1 both should work
23:24 <+bridge> [ddnet] <Learath2> hopefully
23:24 <+bridge> [ddnet] <Learath2> or I'll just cry
23:25 <+bridge> [ddnet] <onby> case SDL_WINDOWEVENT:
23:25 <+bridge> [ddnet] <onby>                     Graphics()->UpdateScreenSize(); 
23:25 <+bridge> [ddnet] <onby>                     printf("EVENT %d\n", Event.window.event);
23:25 <+bridge> [ddnet] <onby>                     switch(Event.window.event)
23:25 <+bridge> [ddnet] <onby>                     {
23:25 <+bridge> [ddnet] <onby> #if defined(CONF_PLATFORM_MACOSX)    // Todo SDL: remove this when fixed (mouse state is faulty on start)
23:25 <+bridge> [ddnet] <onby>                     case SDL_WINDOWEVENT_MAXIMIZED:
23:25 <+bridge> [ddnet] <onby>                         MouseModeAbsolute();
23:25 <+bridge> [ddnet] <onby>                         MouseModeRelative();
23:25 <+bridge> [ddnet] <onby>                         break;
23:25 <+bridge> [ddnet] <onby> #endif
23:25 <+bridge> [ddnet] <onby>                     case SDL_WINDOWEVENT_SIZE_CHANGED:
23:25 <+bridge> [ddnet] <onby>                         dbg_msg("DEBUG", "o/");
23:25 <+bridge> [ddnet] <onby>                         Graphics()->UpdateScreenSize();
23:25 <+bridge> [ddnet] <onby>                         break;
23:25 <+bridge> [ddnet] <onby>                     }
23:25 <+bridge> [ddnet] <onby>                     break;
23:25 <+bridge> [ddnet] <onby> this is already there
23:25 <+bridge> [ddnet] <onby> should i just comment out the updatescreensize
23:25 <+bridge> [ddnet] <Learath2> comment out the first updatescreensize
23:25 <+bridge> [ddnet] <Learath2> the rest can stay the same
23:26 <+bridge> [ddnet] <onby> mm
23:26 <+bridge> [ddnet] <Learath2> clipping was broken for you when highdpi was 0 right?
23:26 <+bridge> [ddnet] <onby> yes
23:26 <+bridge> [ddnet] <onby> and either i fcked something up or its still broken
23:26 <+bridge> [ddnet] <Learath2> is it still broken like this?
23:26 <+bridge> [ddnet] <onby> wait
23:26 <+bridge> [ddnet] <Learath2> also did we get a o/ in the log? 😄
23:27 <+bridge> [ddnet] <onby> no :X
23:27 <+bridge> [ddnet] <Learath2> okay so we don't get a o/ which means we didn't get lucky
23:28 <+bridge> [ddnet] <Learath2> I hoped it was just the broken event loop in that client.m which was not allowing the resize event through
23:28 <+bridge> [ddnet] <onby> cant it just updatescreensize less often
23:28 <+bridge> [ddnet] <Learath2> but I guess not, debugging any further is just too hard
23:28 <+bridge> [ddnet] <onby> since that seemed to fix it
23:28 <+bridge> [ddnet] <onby> rip
23:29 <+bridge> [ddnet] <Learath2> @onby well I know one more place we can check
23:29 <+bridge> [ddnet] <Learath2> uncomment that top updatescreensize
23:29 <+bridge> [ddnet] <Learath2> find updatescreensize, and add a dbg msg above and below GL_GetDrawablesize
23:30 <+bridge> [ddnet] <onby> wait wut
23:30 <+bridge> [ddnet] <onby> case SDL_WINDOWEVENT:
23:30 <+bridge> [ddnet] <onby>                     Graphics()->UpdateScreenSize(); 
23:30 <+bridge> [ddnet] <onby>                     printf("EVENT %d\n", Event.window.event);
23:30 <+bridge> [ddnet] <onby>                     switch(Event.window.event)
23:30 <+bridge> [ddnet] <onby> so do that again in input
23:30 <+bridge> [ddnet] <onby> and put back the dbg messages in backend_sdl?
23:30 <+bridge> [ddnet] <onby> void CGraphicsBackend_SDL_OpenGL::GetScreenSize(int *pScreenWidth, int *pScreenHeight)
23:30 <+bridge> [ddnet] <onby> {
23:30 <+bridge> [ddnet] <onby>     SDL_GL_GetDrawableSize(m_pWindow, pScreenWidth, pScreenHeight);
23:30 <+bridge> [ddnet] <onby> }
23:30 <+bridge> [ddnet] <onby> 
23:30 <+bridge> [ddnet] <onby> void CCommandProcessorFragment_SDL::Cmd_Resize(const CCommandBuffer::SCommand_Resize *pCommand)
23:30 <+bridge> [ddnet] <onby> {
23:30 <+bridge> [ddnet] <onby>     SDL_SetWindowSize(m_pWindow, pCommand->m_Width, pCommand->m_Height);
23:30 <+bridge> [ddnet] <onby>     int Width, Height;
23:30 <+bridge> [ddnet] <onby>     SDL_GL_GetDrawableSize(m_pWindow, &Width, &Height);
23:30 <+bridge> [ddnet] <onby>     glViewport(0, 0, Width, Height);
23:31 <+bridge> [ddnet] <onby> }
23:31 <+bridge> [ddnet] <onby> 
23:31 <+bridge> [ddnet] <onby> 
23:31 <+bridge> [ddnet] <onby>     SDL_GetWindowSize(m_pWindow, pWindowWidth, pWindowHeight);
23:31 <+bridge> [ddnet] <onby>     SDL_GL_GetDrawableSize(m_pWindow, pScreenWidth, pScreenHeight); // drawable size may differ in high dpi mode
23:31 <+bridge> [ddnet] <onby> there are three instances of getdrawablesize
23:31 <+bridge> [ddnet] <Learath2> oh wait there is no GL_Getdrawablesize there
23:31 <+bridge> [ddnet] <onby> which one should i add dbg to
23:31 <+bridge> [ddnet] <Learath2> okay it's a little different then I remembered, go to L929 instead
23:32 <+bridge> [ddnet] <Learath2> put the dbg above and below m_pBackend->GetScreenSize
23:32 <+bridge> [ddnet] <onby> wut
23:32 <+bridge> [ddnet] <onby> in which file?
23:32 <+bridge> [ddnet] <onby> neither one are that long
23:32 <+bridge> [ddnet] <Learath2> graphics_threaded.cpp
23:32 <+bridge> [ddnet] <onby> oh
23:33 <+bridge> [ddnet] <Learath2> this really is the last thing we can check, after this we need to hook into or debug sdl, or go even further and debug AppKit, which is not fun nor something I can really walk you through given I wouldn't even know where I myself would begin 😛
23:34 <+bridge> [ddnet] <onby> [2020-04-07 16:33:34][client]: WARNING: netversion hash differs
23:34 <+bridge> [ddnet] <onby> 0: 2560 1600
23:34 <+bridge> [ddnet] <onby> 1: 1280 800
23:34 <+bridge> [ddnet] <onby> EVENT 4
23:34 <+bridge> [ddnet] <onby> 0: 1280 800
23:34 <+bridge> [ddnet] <onby> 1: 1280 800
23:34 <+bridge> [ddnet] <onby> EVENT 1
23:34 <+bridge> [ddnet] <onby> 0: 1280 800
23:34 <+bridge> [ddnet] <onby> 1: 1280 800
23:34 <+bridge> [ddnet] <onby> EVENT 3
23:34 <+bridge> [ddnet] <onby> this is with highdpi 0
23:34 <+bridge> [ddnet] <Learath2> oh that's interesting
23:34 <+bridge> [ddnet] <Learath2> how/when did it become 2560 1600?
23:35 <+bridge> [ddnet] <onby> ¯\_(ツ)_/¯
23:35 <+bridge> [ddnet] <onby> thats the size of my screen
23:35 <+bridge> [ddnet] <Learath2> I think that's highdpi resolution
23:35 <+bridge> [ddnet] <Learath2> try setting the window smaller, see if it's 2x again
23:36 <+bridge> [ddnet] <Learath2> or if it's the desktop resolution
23:36 <+bridge> [ddnet] <onby> the window cant be set smaller thats the whole problem i thoughtr
23:36 <+bridge> [ddnet] <Learath2> didn't we patch that first?
23:37 <+bridge> [ddnet] <onby> no
23:37 <+bridge> [ddnet] <onby> i change in settings.cfg
23:37 <+bridge> [ddnet] <onby> 1024x768
23:37 <+bridge> [ddnet] <onby> and it changes it back to 1280x800
23:37 <+bridge> [ddnet] <Learath2> remember that block patch in backend_sdl.cpp?
23:37 <+bridge> [ddnet] <Learath2> L701 702 703
23:37 <+bridge> [ddnet] <Learath2> you can do that again
23:37 <+bridge> [ddnet] <Learath2> that only breaks fullscreen toggle which we won't do
23:38 <+bridge> [ddnet] <Learath2> oh the line numbers might have changed with the patches
23:38 <+bridge> [ddnet] <onby> ohhh
23:38 <+bridge> [ddnet] <onby> wow
23:38 <+bridge> [ddnet] <onby> finally
23:39 <+bridge> [ddnet] <Learath2> what does the console look like?
23:39 <+bridge> [ddnet] <onby> 0: 1600 1200
23:39 <+bridge> [ddnet] <onby> 1: 800 600
23:39 <+bridge> [ddnet] <onby> EVENT 1
23:39 <+bridge> [ddnet] <onby> 0: 800 600
23:39 <+bridge> [ddnet] <onby> 1: 800 600
23:39 <+bridge> [ddnet] <onby> EVENT 3
23:39 <+bridge> [ddnet] <onby> 0: 800 600
23:39 <+bridge> [ddnet] <onby> 1: 800 600
23:39 <+bridge> [ddnet] <Learath2> see that 1600 1200 is verywrong
23:39 <+bridge> [ddnet] <Learath2> this is with highdpi 0 right?
23:39 <+bridge> [ddnet] <onby> i put 800x600
23:39 <+bridge> [ddnet] <onby> yes
23:40 <+bridge> [ddnet] <Learath2> that initial 1600 1200 is what breaks the clipping
23:40 <+bridge> [ddnet] <Learath2> if we figure out where that comes from, that's a bug fixed
23:41 <+bridge> [ddnet] <Learath2> You can check the return of SDL_GL_GetDrawableSize in Init, hopefully it's there
23:42 <+bridge> [ddnet] <onby> where
23:43 <+bridge> [ddnet] <Learath2> in backend_sdl.cpp
23:45 <+bridge> [ddnet] <onby> /Users/nobody1/Downloads/teeworlds/src/engine/client/backend_sdl.cpp:754:26: error: cannot pass expression of type 'void' to variadic function; expected type from format string
23:45 <+bridge> [ddnet] <onby>       was 'int'
23:45 <+bridge> [ddnet] <onby>         printf("returned %d\n", SDL_GL_GetDrawableSize(m_pWindow, pScreenWidth, pScreenHeight)); // drawable size may differ in high dpi mode
23:45 <+bridge> [ddnet] <onby> it doenst return anything
23:45 <+bridge> [ddnet] <Learath2> lol not like that
23:46 <+bridge> [ddnet] <Learath2> that function returns in pScreenWidth, pScreenHeight
23:46 <+bridge> [ddnet] <onby> oh just
23:46 <+bridge> [ddnet] <onby> ok
23:46 <+bridge> [ddnet] <Learath2> so print *pScreenWidth, *pScreenHeight after calling it
23:46 <+bridge> [ddnet] <onby> [2020-04-07 16:46:12][client]: starting...
23:46 <+bridge> [ddnet] <onby> 800 600
23:47 <+bridge> [ddnet] <Learath2> see at some point, the resolution becomes 1600 1200, idk how that is possible
23:48 <+bridge> [ddnet] <Learath2> we only seem to modify m_ScreenHeight and m_ScreenWidth there, except for code I added for the runtime resizing
23:48 <+bridge> [ddnet] <Learath2> and all of my modifications of it go through UpdateScreenSize
23:48 <+bridge> [ddnet] <Learath2> Well if you are up for it we can try a watchpoint tomorrow
23:49 <+bridge> [ddnet] <onby> ok
23:49 <+bridge> [ddnet] <onby> if u tell me how
23:50 <+bridge> [ddnet] <Learath2> watchpoints are very nice debugging tools
23:50 <+bridge> [ddnet] <Learath2> they watch a section of memory for change and if it changes it breaks so you can see what changed it
23:52 <+bridge> [ddnet] <onby> oo cool
23:52 <+bridge> [ddnet] <onby> that sounds like it would be useful for this
23:52 <+bridge> [ddnet] <Learath2> sleep is required
23:52 <+bridge> [ddnet] <Learath2> cya @onby, thanks for sticking around and debugging this
23:53 <+bridge> [ddnet] <onby> np  :D
23:53 <+bridge> [ddnet] <onby> leme know if u want to try more tmrw
