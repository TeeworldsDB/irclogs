01:42 < bridge> <lukron55> i think i’ve sorted a windows desktop out
01:51 < bridge> <lukron55> so i can actually do my project now
02:34 < bridge> <chillerdragon> But discord only. When bridge to irc
04:20 < bridge> <ninekeem> Hello. I'm reacreating my own Dockerfiles for different teeworlds/ddnet modes.
04:20 < bridge> <ninekeem> 
04:20 < bridge> <ninekeem> I noticed that after install there's kinda a lot stuff:
04:20 < bridge> <ninekeem> 
04:20 < bridge> <ninekeem> ```
04:20 < bridge> <ninekeem> /tw/data # ls
04:20 < bridge> <ninekeem> announcement.txt     censorlist.txt       deadtee.png          game.png             languages            race_flag.png        wordlist.txt
04:20 < bridge> <ninekeem> arrow.png            communityicons       debug_font.png       gui_buttons.png      mapres               shader
04:20 < bridge> <ninekeem> assets               config               editor               gui_cursor.png       maps                 skins
04:20 < bridge> <ninekeem> audio                console.png          emoticons.png        gui_icons.png        maps7                skins7
04:20 < bridge> <ninekeem> autoexec_server.cfg  console_bar.png      extras.png           gui_logo.png         menuimages           strong_weak.png
04:20 < bridge> <ninekeem> blob.png             countryflags         fonts                hud.png              particles.png        themes
04:20 < bridge> <ninekeem> ```
04:20 < bridge> <ninekeem> 
04:20 < bridge> <ninekeem> Which files i can easily remove and server will stay fully functional?
04:20 < bridge> <ninekeem> 
04:20 < bridge> <ninekeem> Dockerfile, if needed: https://termbin.com/t9cg
04:22 < bridge> <ninekeem> ^ Same question for icons:
04:22 < bridge> <ninekeem> 
04:22 < bridge> <ninekeem> ```
04:22 < bridge> <ninekeem> /tw/share/icons/hicolor # tree
04:22 < bridge> <ninekeem> .
04:22 < bridge> <ninekeem> ├── 16x16
04:22 < bridge> <ninekeem> │   └── apps
04:22 < bridge> <ninekeem> │       └── ddnet-server.png
04:22 < bridge> <ninekeem> ├── 256x256
04:22 < bridge> <ninekeem> │   └── apps
04:22 < bridge> <ninekeem> │       └── ddnet-server.png
04:22 < bridge> <ninekeem> ├── 32x32
04:22 < bridge> <ninekeem> │   └── apps
04:22 < bridge> <ninekeem> │       └── ddnet-server.png
04:22 < bridge> <ninekeem> └── 48x48
04:22 < bridge> <ninekeem>     └── apps
04:22 < bridge> <ninekeem>         └── ddnet-server.png
04:22 < bridge> <ninekeem> 
04:22 < bridge> <ninekeem> 8 directories, 4 files
04:22 < bridge> <ninekeem> ```
04:23 < bridge> <ninekeem> Hello. I'm recreating my own Dockerfiles for different teeworlds/ddnet modes.
04:23 < bridge> <ninekeem> 
04:23 < bridge> <ninekeem> I noticed that after install there's kinda a lot stuff:
04:24 < bridge> <ninekeem> 
04:24 < bridge> <ninekeem> ```
04:24 < bridge> <ninekeem> /tw/data # ls
04:24 < bridge> <ninekeem> announcement.txt     censorlist.txt       deadtee.png          game.png             languages            race_flag.png        wordlist.txt
04:24 < bridge> <ninekeem> arrow.png            communityicons       debug_font.png       gui_buttons.png      mapres               shader
04:24 < bridge> <ninekeem> assets               config               editor               gui_cursor.png       maps                 skins
04:24 < bridge> <ninekeem> audio                console.png          emoticons.png        gui_icons.png        maps7                skins7
04:24 < bridge> <ninekeem> autoexec_server.cfg  console_bar.png      extras.png           gui_logo.png         menuimages           strong_weak.png
04:24 < bridge> <ninekeem> blob.png             countryflags         fonts                hud.png              particles.png        themes
04:24 < bridge> <ninekeem> ```
04:24 < bridge> <ninekeem> 
04:24 < bridge> <ninekeem> Which files i can easily remove and server will stay fully functional?
04:24 < bridge> <ninekeem> 
04:24 < bridge> <ninekeem> Dockerfile, if needed: https://termbin.com/t9cg
04:25 < bridge> <0xdeen> The server only needs the executable itself, autoexec_server.cfg and the map you want to run. announcement, censorlist, wordlist are only required if you have set something in them
04:25 < bridge> <ninekeem> Yes, i know, but what about that all icons, png's and other?
04:26 < bridge> <0xdeen> not required
04:26 < bridge> <ninekeem> Sounds too?
04:26 < bridge> <louis> not required
04:26 < bridge> <ninekeem> Thanks.
04:26 < bridge> <ninekeem> What do you think about merging my Dockerfile in official github repo?
04:52 < bridge> <ChillerDragon> <@713443740898951185>
04:52 < ws-client> <ChillerDragon> i thought i saw you patch this line but i cant find it anymore https://github.com/ddnet/ddnet/blob/09203aee78dd19b8d81c037a0e45d77e875c426c/src/game/server/gamecontext.cpp#L4436
04:53 < ws-client> <ChillerDragon> returning a ``new CInfClasGameContext`` here
04:53 < ws-client> <ChillerDragon> did i make that up?
04:53 < ws-client> <ChillerDragon> btw @ninekeem i also made a dockerfile once if you are interested https://github.com/BanBansNet/ddnet-docker/blob/master/ddnet-simple/Dockerfile
04:54 < bridge> <ninekeem> nice one
04:54 < bridge> <ninekeem> but i like mine more ;)
04:54 < ws-client> <ChillerDragon> ye classic
04:54 < bridge> <ninekeem> :D
04:54 < ws-client> <ChillerDragon> because u have mysql?
04:55 < bridge> <ninekeem> i don't like that fact you download maps while build image
04:55 < ws-client> <ChillerDragon> thats just to get it quickstarted its designed to be simple to use
04:55 < bridge> <ninekeem> but wget sources is interesting
04:55 < bridge> <ninekeem> why alpine 3.18?
04:55 < bridge> <ninekeem> ah, last year
04:55 < bridge> <ninekeem> got it
04:56 < ws-client> <ChillerDragon> ye old stuff 
04:57 < bridge> <ninekeem> and wget will not work :)
04:57 < bridge> <ninekeem> 404
04:57 < ws-client> <ChillerDragon> i rage quitted on it when i verified that i really do not like containers xd
04:57 < bridge> <ninekeem> i prefer local downloaded sources
04:57 < ws-client> <ChillerDragon> 404? woah how so
04:57 < bridge> <ninekeem> so how do you host your own servers?
04:57 < ws-client> <ChillerDragon> bare matle
04:57 < bridge> <ninekeem> don't say you use screen/tmux
04:57 < bridge> <ninekeem> pls…
04:57 < ws-client> <ChillerDragon> i use screen/tmux
04:58 < bridge> <ninekeem> …
04:58 < bridge> <ninekeem> no comments
04:58 < ws-client> <ChillerDragon> i mean i tried kubernetes https://github.com/BanBansNet/kubernetes/blob/master/ddnet.yaml
04:58 < bridge> <ninekeem> i think i am only one who enough crazy to use damned kubernetes
04:58 < ws-client> <ChillerDragon> i rly did not like it
04:58 < ws-client> <ChillerDragon> kog does koobernetes
04:58 < bridge> <ninekeem> damn
04:59 < bridge> <ninekeem> did you inspired by mine dockerfiles or wrote it by yourself?
05:00 < ws-client> <ChillerDragon> its been so long i think i looked at ddnet's dockerfile but its not alpine so its mostly from scratch
05:00 < bridge> <ninekeem> ok
05:59 < bridge> <zhn> yeah and it just works
07:39 < bridge> <milkeeycat> normin 0.6.5 enjoyers and others
10:18 < bridge> <ryozuki> gm
10:31 < bridge> <teero777> gm
13:17 < bridge> <milkeeycat> @learath2 There's little whoopsie daisy with da compiler, 11 registers isn't enough, right now I do smth like 
13:17 < bridge> <milkeeycat> ```rust
13:17 < bridge> <milkeeycat> let register_1 = allocate_reg();
13:17 < bridge> <milkeeycat> generate(expr.right, &register_1);
13:17 < bridge> <milkeeycat> let register_2 = allocate_reg();
13:17 < bridge> <milkeeycat> generate(expr.left, &register_2);
13:17 < bridge> <milkeeycat> 
13:17 < bridge> <milkeeycat> ...do other stuff
13:17 < bridge> <milkeeycat> ```
13:17 < bridge> <milkeeycat> and it all breaks if I try to compile something like
13:17 < bridge> <milkeeycat> ```rust
13:18 < bridge> <milkeeycat> let a: u8 = 1 + 1 + 1 + 1 + 1 + 1 + 1;
13:18 < bridge> <milkeeycat> ```
13:18 < bridge> <milkeeycat> 
13:18 < bridge> <milkeeycat> What's the better way to generate the expressions :\
13:53 < ws-client> <ChillerDragon> is this a bug in chat.zillyhuhn.com or do you use a copyright unicode in your code? xd
13:53 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1727178818.png
13:54 < bridge> <milkeeycat> it's `&register_2`
13:54 < bridge> <milkeeycat> oh
13:54 < bridge> <milkeeycat> hm
13:54 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1288106263812771891/image.png?ex=66f3f9f1&is=66f2a871&hm=8f87233227928f433af390074eec7c990a49c42afd16bd1f774acc01efe2def1&
13:54 < bridge> <patiga> & r e g i s t e r _ 2
13:54 < ws-client> <ChillerDragon> ah ok thanks patiga
13:54 < ws-client> <ChillerDragon> yea i dont see images @milkeeycat xd
13:54 < bridge> <milkeeycat> too bad
13:54 < bridge> <patiga> ez @milkeeycat :p
13:55 < ws-client> <ChillerDragon> would have been funny if your code had that (R) symbol xxxD
13:55 < ws-client> <ChillerDragon> is &reg html?
13:55 < bridge> <milkeeycat> it will panic on the first line of lexer probably xdd
13:55 < ws-client> <ChillerDragon> lol &lt test
13:55 < ws-client> <ChillerDragon> ok wtf it encodes all the html thingies xxxxD
13:56 < bridge> <oxyzo.> what is ws client:thonk:
13:56 < bridge> <milkeeycat> ```
13:56 < bridge> <milkeeycat> Failed to parse char Ð
13:56 < bridge> <milkeeycat> ```
13:57 < bridge> <heinrich5991> you need to replace ` & ` with `& a m p ;`, ChillerDragon
13:57 < bridge> <heinrich5991> (remove spaces)
13:57 < ws-client> <ChillerDragon> @oxyzo.  https://chat.zillyhuhn.com/ some homemade web frontend for irc
13:57 < ws-client> <ChillerDragon> @heinrich5991 yea i guess so
13:57 < bridge> <oxyzo.> :brownbear:
13:57 < ws-client> <ChillerDragon> i wonder if there is any case where i want this to expand. I dont think so
14:56 < bridge> <kollpotato> use stack then xd
14:57 < bridge> <kollpotato> or u can also try doing constant inlining after the parsing step
14:57 < bridge> <kollpotato> like a tree walker if it sees 2 integers `1+5` evaluates it to `6`
14:58 < bridge> <chillerdragon> Why close epic pr @milkeeycat
14:58 < bridge> <milkeeycat> noone looked at it xd
14:58 < bridge> <milkeeycat> if anyone needs 0.7 servers, they will make a pr
14:58 < bridge> <milkeeycat> if anyone needs 0.7 servers in lan tag, they will make a pr
14:58 < bridge> <milkeeycat> if anyone needs 0.7 servers in lan tab, they will make a pr
15:00 < bridge> <chillerdragon> Yea sadly ddnet pr reviews are not too active right now. But you gotta stay strong. You took so much time to debug it. Give the maintainers time to respond.
15:01 < bridge> <milkeeycat> you can make it 10x better :p
15:01 < bridge> <chillerdragon> Look at poor bubble butt who stayed strong for 9 months without a single response comment https://github.com/ddnet/ddnet/pull/7737
15:02 < bridge> <milkeeycat> :pepeW:
15:02 < bridge> <jxsl13> Milk, we need them lan servers
15:02 < bridge> <jxsl13> chiller waited two years to get his pr merged
15:03 < bridge> <jxsl13> and more
15:03 < bridge> <jxsl13> in teeworlds og repo
15:04 < bridge> <jxsl13> @milkeeycat reopen the pr, I believe in you.
15:08 < bridge> <jxsl13> it's BubbleBut
15:08 < bridge> <jxsl13> :kek:
15:10 < bridge> <chillerdragon> Bubble butt!
15:11 < bridge> <jxsl13> 🫧
15:25 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1288129062312743012/RDT_20240924_1524522140989270181646160.jpg?ex=66f40f2c&is=66f2bdac&hm=c6a1afbbb9b2458d784a4217af1ed48a9bcf9c4b30d7f5d22fb15615778fffe9&
15:27 < bridge> <learath2> Let me think a little. So the issue is that for a long expression for each op you descend into you allocate 2 registers, running out of registers?
15:28 < bridge> <learath2> The naive way out of it is to get stack scratch space. If no registers left, allocate on the stack
15:28 < bridge> <ryozuki> leave the notion of registees for after, just do allocations and at a later stage do "register allocation" and the others on the stack, loading as needed
15:29 < bridge> <meloƞ> &bull &ndash $bull :greenthing:
15:29 < bridge> <ryozuki> and a simple opt is to analyze the most ysed allocas
15:29 < bridge> <ryozuki> rank them
15:29 < bridge> <ryozuki> and put top on reg
15:29 < bridge> <ryozuki> easier to do in SSA
15:29 < bridge> <milkeeycat> ok cool
15:29 < bridge> <milkeeycat> 😬
15:29 < bridge> <ryozuki> and a simple opt is to analyze the most used allocas
15:30 < bridge> <learath2> He is generating raw assembly, it's important where his data lies because not all instructions can operate at every width and both with mem and regs
15:30 < bridge> <learath2> But yes, that is the actual proper solution. You do one pass with just abstract allocations, then in another pass you put stuff into registers if available
15:31 < bridge> <learath2> But now you can't just emit assembly as you go like you used to
15:31 < bridge> <ryozuki> this is why its so important so hace a simple ir in SSA form, cuz thats where u optimize this way easy, indeed in the register allocation pass if you see a alloca gets its addresd taken for example then it cant be put in a reg
15:31 < bridge> <ryozuki> this is why its so important so to have a simple ir in SSA form, cuz thats where u optimize this way easy, indeed in the register allocation pass if you see a alloca gets its addresd taken for example then it cant be put in a reg
15:31 < bridge> <ryozuki> shit mobileee
15:32 < bridge> <learath2> @milkeeycat another copout is reducing constant expressions at compile time
15:32 < bridge> <milkeeycat> ill do constant folding later
15:32 < bridge> <milkeeycat> i just don't like that it takes bajillion of registers for nothing
15:32 < bridge> <ryozuki> i beg u, do ssa form ir
15:32 < bridge> <ryozuki> u will love optimizing it
15:33 < bridge> <learath2> Sorry boss, only janky engineering allowed here
15:33 < bridge> <ryozuki> xd
15:33 < bridge> <ryozuki> :pepeW:
15:34 < bridge> <ryozuki> with ssa you can find the canonical form and see patterns easily
15:34 < bridge> <jxsl13> casually introducing the word Tee to a sentence.
15:34 < bridge> <ryozuki> this reminded me i have to retake edlang
15:35 < bridge> <ryozuki> but i stopped at multiple packages xd
15:37 < bridge> <learath2> @milkeeycat you have an AST right?
15:37 < bridge> <milkeeycat> ye
15:40 < bridge> <learath2> I guess the issue is your recursive approach. How about the shunting yard algorithm to first figure out the actual order you'll evaluate in?
15:42 < bridge> <learath2> Nah that's not good enough. I'll think about it more over tea
15:42 < bridge> <milkeeycat> i also can use passed register for one side
15:42 < bridge> <milkeeycat> instead of allocating a new one
15:43 < bridge> <milkeeycat> and that's what i actually have rn in my codebase
15:43 < bridge> <milkeeycat> but there were problems with dat
15:47 < bridge> <learath2> Yeah the issue is recursiveness. Travel down the tree first, do the operation upside down, then 2 registers will be enough for all expressions
15:48 < bridge> <milkeeycat> Will it solve the problem if I just return a register instead of passing it
15:50 < bridge> <learath2> As in let generate return a register? It doesn't change much, the issue is that your code travels all the way down the tree allocating registers
15:52 < bridge> <learath2> How about passing 2 registers all the way down and info about which side of the expression we are currently generating?
15:53 < bridge> <learath2> Allocate 2 registers at an expression root. LHS, RHS. Leaf expressions don't allocate their own of these but use either rhs or lhs as their result depending on which side they are on
15:53 < bridge> <milkeeycat> it's actually not a skill issue, my language just doesn't allow long mafs expression to not ruin code readability
15:55 < bridge> <learath2> Yeah no this doesn't work either. You just cant generate assembly traversing a tree in in order because that's not the order of operations
15:55 < bridge> <learath2> Yeah no this doesn't work either. You just cant generate assembly traversing a tree in order because that's not the order of operations
15:55 < bridge> <learath2> Well you can if you have infinite registers
16:02 < bridge> <learath2> @milkeeycat oh one more idea, idk if it works but tea inspired me. The issue is that you keep creating extra registers for the result of the expression but that result doesnt come until much later. How about you pass down the result register as the lhs or rhs?
16:03 < bridge> <learath2> That wouldn't fix the issue, but it would be less wasteful
16:04 < bridge> <milkeeycat> I think that's what I have now
16:04 < bridge> <milkeeycat> https://github.com/MilkeeyCat/meraki/blob/6633eddd08db542002dd010b76df7a33f3c5a83d/src/codegen/codegen.rs#L396-L401
16:04 < bridge> <learath2> Can't be lhs or rhs since I'm guessing generate generates an immediate load to that register right now for constants, so you can reuse only on the expression side
16:07 < bridge> <learath2> Eh, yes that's what you are doing indeed. So I guess that's not enough
16:08 < bridge> <milkeeycat> I just had a problem that the destination size could be different than expression type size and it would generate not valid assembly
16:09 < bridge> <milkeeycat> so I started looking maybe there's another way
16:09 < bridge> <milkeeycat> but I can just simply change the size of it and that's it
16:10 < bridge> <milkeeycat> and it wont be as bad as this
16:12 < bridge> <learath2> I was thinking you were doing this, this is far too wasteful of registers
16:22 < bridge> <ryozuki> :pepeW:
16:23 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1288143873184628927/20240924_162346.jpg?ex=66f41cf7&is=66f2cb77&hm=7f3cb64b60dc68810ba5377c44b018fdc81477af677aa00d0117afdd76bf81a7&
16:35 < bridge> <learath2> @milkeeycat here you go https://en.wikipedia.org/wiki/Sethi%E2%80%93Ullman_algorithm, I had to dig up some very old notes to remember whomst wrote this
16:37 < bridge> <learath2> This is the olden way of doing this properly, you traverse the expression, figure out which side needs how many registers in total, then traverse down the side that needs the most registers all the way down, emit assembly on your way up
16:39 < bridge> <murpi> Does ddnet-saves.txt only contain savegames created on official DDNet servers?
16:58 < bridge> <furo> Any server.
17:05 < bridge> <murpi> furo: Ah, okey! Do you have any idea why the file isn't being created for me?
17:42 < bridge> <furo> No clue, it's works fine for me. Is there any errors?
17:48 < bridge> <Ewan> wow they actually did it
17:48 < bridge> <Ewan> https://github.com/WinampDesktop/winamp
17:49 < bridge> <Ewan> dont have to rely on the leaks anymore
17:50 < bridge> <Ewan> wait LMAO
17:50 < bridge> <Ewan> <https://github.com/WinampDesktop/winamp/blob/community/LICENSE.md>
17:50 < bridge> <Ewan> "open source"
17:50 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1288165661193015296/image.png?ex=66f43142&is=66f2dfc2&hm=b8bf866ae76c62248c1e998e69b2038d8e4f86e6e8422de4199794ca7d3836fe&
17:51 < bridge> <meloƞ> lmao - why publish it to github then
17:51 < bridge> <Ewan> clout
17:52 < bridge> <Ewan> this is the same group responsible for the NFT fiasco
17:52 < bridge> <Ewan> and for inflating their beta tester numbers
17:52 < bridge> <Ewan> lots of shady things going on
18:03 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1288168835706257549/Screenshot_2024-09-24_at_16.png?ex=66f43437&is=66f2e2b7&hm=05fbf6a3d398ed3e31c99e8c93a1b3d55439a93ef42e3df9dbfc3fadb2768d1e&
18:03 < bridge> <Ewan> lol
18:03 < bridge> <meloƞ> huuuuh why
18:03 < bridge> <meloƞ> i've been using llama for a while now
18:05 < bridge> <learath2> ??? There is a fork button ??? Do I get picked up by the FBI if I click it?
18:06 < bridge> <learath2> https://github.com/WinampDesktop/winamp/issues/6
18:14 < bridge> <Ewan> No
18:14 < bridge> <Ewan> some weird shady group will have to sic their lawyers on you
18:14 < bridge> <Ewan> with all their $4.53
18:15 < bridge> <Ewan> though if this was valid under GitHub's TOS then it may be taken down via. DMCA notice
18:15 < bridge> <Ewan> which it isn't. so... 😁
18:49 < bridge> <zhn> i thought compilers have dynamic amount of registers while generating
18:50 < bridge> <zhn> https://llvm-mos.org/wiki/Imaginary_registers
18:50 < bridge> <zhn> ah lol
18:50 < bridge> <zhn> they even have wiki page for it
18:51 < bridge> <milkeeycat> i have as many registers as amd64 architecture
18:51 < bridge> <milkeeycat> I'll check this, thanks a lot!
18:53 < bridge> <zhn> *while cdoe generating*
18:53 < bridge> <zhn> u can have as many as u need to
18:53 < bridge> <milkeeycat> i have nothing fancy
18:53 < bridge> <milkeeycat> i just raw dawg assembly
18:54 < bridge> <milkeeycat> and I can use only amd64 registers :p
18:54 < bridge> <zhn> and i can crash ur compiler by giving this as source code or what
18:54 < bridge> <milkeeycat> yep :greenthing:
18:55 < bridge> <zhn> perfect combination xd
18:55 < bridge> <milkeeycat> you can also crash it by using non ascii chars
18:56 < bridge> <zhn> gg
19:01 < bridge> <learath2> This approach requires you to optimize after, he has no optimization passes at all for now
19:03 < bridge> <learath2> It requires more than just normal optimization passes, it requires an intermediary step like an SSA where you can merge all of these unnecessary assignments, then another where registers are allocated all before emitting any assembly
19:05 < bridge> <milkeeycat> It's first time in a long time I understood what's written on wikipedia page xD(probably because there isn't a wall of mafs)
19:07 < bridge> <learath2> These olden algorithms were so much more pleasant to understand. Nowadays it's all post quantum black magic
19:08 < bridge> <milkeeycat> Yep, so such neanderthals like me can't understand anything after 2nd sentence :\
19:09 < bridge> <learath2> I heard the modern approach to this is graph coloring. Good luck digging through dozens of pages of abstract mathematical theory to figure out how to properly color a graph with 11 colors optimally
19:09 < bridge> <milkeeycat> I love when there's a simple example of how the thing works xd
19:41 < bridge> <Jupstar ✪> no
19:42 < bridge> <milkeeycat> @learath2 can you help with this one pls
19:42 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1288193878456799324/image.png?ex=66f44b8a&is=66f2fa0a&hm=528d27fa1d5932122d993993d2577edb6694307e6208d7b73a56e38e481205ea&
19:42 < bridge> <Jupstar ✪> https://github.com/Jupeyy/ddnet-web/tree/testing_nextjs
19:43 < bridge> <louis> so basically 3*5 =15 then 15+1 =16
19:44 < bridge> <milkeeycat> thx homie xD
19:46 < bridge> <milkeeycat> like dis?
19:46 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1288194816353636485/image.png?ex=66f44c69&is=66f2fae9&hm=aaca6525aaee257955a94290ff610bc60e90b8a9d46062635fedbf5db746eb76&
19:46 < bridge> <Jupstar ✪> no matter what you do, if u dont use shaders and no texture arrays it won't look the same.
19:46 < bridge> <Jupstar ✪> 
19:46 < bridge> <Jupstar ✪> The reason the pixels are cut off is bcs mipmaps change the texture size.
19:46 < bridge> <Jupstar ✪> OpenGL 1.x is really only there for some ancient pcs, otherwise it should not be used
19:48 < bridge> <art0007i> yeah that's fair enough. I have no idea why it was the default for me
19:54 < bridge> <Jupstar ✪> we mostly wait for the secure server connection rn, once that is done we can do the rest ig
19:56 < bridge> <lukron55> hey @mpft and @blaiszephyr sorry for ping but we spoke yesterday about me getting ddnet ported to xbox somehow. as i said i completely new but i want to do it as a project and hopefully learn off of it. i managed to get my hands on a windows pc and can start. what shouldi start off with learning?
19:57 < bridge> <lukron55> hey @mpft and @blaiszephyr sorry for ping but we spoke yesterday about me getting ddnet ported to xbox somehow. as i said i completely new but i want to do it as a project and hopefully learn off of it. i managed to get my hands on a windows pc and can start. what should i start off with learning?
19:57 < bridge> <lukron55> ah fuck i think it was learath no melon
19:57 < bridge> <lukron55> ah fuck i think it was learath not melon
19:57 < bridge> <lukron55> i can’t remember 😭
20:04 < bridge> <learath2> LGTM
20:05 < bridge> <learath2> You should start by learning some directx
20:05 < bridge> <lukron55> okay awesome thank you
20:05 < bridge> <learath2> Well actually, if you are completely completely new, you need to learn C++ first 😄
20:06 < bridge> <lukron55> oh yeah that’s probably makes sense 😭
20:06 < bridge> <lukron55> luckily i’m in no rush for this
20:06 < bridge> <lukron55> and will happily learn
20:07 < bridge> <learath2> https://www.learncpp.com/ this is a pretty acceptable resource
20:38 < bridge> <Ewan> UWP is a lot more involved than just C++. You may be working with IDL and a bunch of other random Microsoft bullshit. I would recommend making a basic UWP in C++ that just runs on your desktop to get a feel for things
20:39 < bridge> <Ewan> I have to say considering there is no current DirectX backend (and such a thing is not really trivial to implement well) maybe you should start off with another project. But if you have free time and willpower I think you can do it for sure
20:39 < bridge> <lukron55> i have a lot of free time at the moment lmfao
20:39 < bridge> <Ewan> The UWP community Discord server is full of nice folks who would be happy to help you as long as you’re composed, honest, and don’t get mad
20:40 < bridge> <Ewan> You will need to learn a lot
20:40 < bridge> <Ewan> ChatGPT will not be able to help you with any large-scale problems (the biggest of which I anticipate being a DirectX backend)
20:44 < bridge> <milkeeycat> @learath2 btw, I still load integer literals into a register before using it, so "Sethi–Ullman algorithm" is not really possible, do you think it's worth to calculate bigger subtree and generate code for it first?
20:46 < bridge> <lukron55> my plans been foiled
20:46 < bridge> <lukron55> joking
20:46 < bridge> <lukron55> but cool i’ll have to join their server
20:46 < bridge> <lukron55> sounds good
20:51 < bridge> <Ewan> my roomba has started speaking german
20:52 < bridge> <chairn> wtf ? why ?
20:52 < bridge> <chairn> https://cdn.discordapp.com/attachments/293493549758939136/1288211367215759474/image.png?ex=66f45bd3&is=66f30a53&hm=a4cacfccb9e1bab0606f2d3bd54fd952b31a30ddaf573d1c918d4367d6842449&
20:52 < bridge> <meloƞ> "BATTERIE LEER"
20:52 < bridge> <Ewan> Same reason they invalidated password auth over git years ago
20:52 < bridge> <Ewan> Security
20:52 < bridge> <milkeeycat> nvm, ill do it the proper way
20:55 < bridge> <chairn> it's just getting boring to have heavy authentication everywhere
20:58 < bridge> <01000111g> I, goomba also speak german
21:02 < bridge> <learath2> Well you can augment it, you just won't have 0 nodes
21:37 < bridge> <milkeeycat> yey, unpacking of integers work
22:21 < bridge> <Jupstar ✪> furo: do you own ddstats.tw?
22:21 < bridge> <Jupstar ✪> https://github.com/ddnet/ddnet/issues/9032
22:33 < bridge> <furo> Yeah, I do. The skins are fetched from other sources like skins.tw, but I'll try resizing them.
22:34 < bridge> <Jupstar ✪> Thanks
23:01 < bridge> <cyberfrighter> Bro who is making 4k skins
23:01 < bridge> <milkeeycat> it's time for 8k skins
23:02 < bridge> <Jupstar ✪> I mean they are fine for demo renders or smth like that
23:02 < bridge> <chairn> i want 10^80 skin
23:02 < bridge> <Jupstar ✪> The universe as skin?
23:02 < bridge> <Jupstar ✪> epyc
23:02 < bridge> <chairn> exactly
23:02 < bridge> <Ewan> 4k skins are fine if u have them saved locally
23:02 < bridge> <chairn> skin even contains all the maps that can exist
23:02 < bridge> <Ewan> the loading is what causes lags
23:03 < bridge> <chairn> nah, they hog vram like crazy as well
23:03 < bridge> <louis> hm would it?
23:03 < bridge> <Ewan> well yea
23:03 < bridge> <Ewan> but many ppl now have cards with 12-24GB vram
23:03 < bridge> <Ewan> it really isn't a concern for most gamers
23:03 < bridge> <louis> definitely not right 😅 isnt the max map size 32000^2
23:03 < bridge> <chairn> cry in 4gb and 10y old card
23:03 < bridge> <Ewan> rip
23:03 < bridge> <oxyzo.> zip bomb ❌
23:03 < bridge> <oxyzo.> skin bomb ✅
23:03 < bridge> <milkeeycat> 2gb gamer here 😬
23:04 < bridge> <chairn> i saw 23k or 20k sth not long ago
23:04 < bridge> <oxyzo.> cat laughing emoji
23:04 < bridge> <chairn> but yeah, it's due to int32 limit
23:04 < bridge> <Ewan> that's tough lil bro.
23:04 < bridge> <Ewan> :kek:
23:04 < bridge> <Ewan> for years i had just a 2GB 1050
23:04 < bridge> <louis> but then u need 4k mapres too
23:05 < bridge> <oxyzo.> 64mb of ram 😎
23:05 < bridge> <oxyzo.> https://cdn.discordapp.com/attachments/293493549758939136/1288244914383224992/4qMTpfnntq9hsyzE1wFA_ZjgIwUrTey0i7cLZxSk0II.jpg?ex=66f47b12&is=66f32992&hm=a2e2b12cafcdc59777abcce055267ab437806ab256c157930ca92ccdafb92e3d&
23:05 < bridge> <meloƞ> :justatest:
23:06 < bridge> <chairn> that guy cannot play maps bigger than 100x100 😄
23:06 < bridge> <oxyzo.> cant even install ddnet
23:08 < bridge> <headshotnoby> mac os 9 ddnet port
23:08 < bridge> <headshotnoby> :justatest:
23:08 < bridge> <01000111g> we chillin
23:08 < bridge> <01000111g> https://cdn.discordapp.com/attachments/293493549758939136/1288245733069160449/image.png?ex=66f47bd5&is=66f32a55&hm=9cf92fb15af903fe8169c3c8292b132fd3e157b2630ff1b4c3987dbf1e31142c&
23:08 < bridge> <01000111g> Can i run TW with that?
23:10 < bridge> <Ewan> Hmmmm I'm gonna go with No
23:11 < bridge> <Jupstar ✪> WTF
23:11 < bridge> <Jupstar ✪> Where did you get that screenshot from
23:11 < bridge> <Jupstar ✪> 😬
23:13 < bridge> <01000111g> from my terminal! (its a cluster i have access to for research)
23:13 < bridge> <Ewan> are u foldin
23:13 < bridge> <Jupstar ✪> You mean researching ddnet.. nice
23:13 < bridge> <Ewan> researching ddnet max fps
23:13 < bridge> <Ewan> RIP SLI
23:13 < bridge> <Ewan> i dont think it would be that good
23:14 < bridge> <Jupstar ✪> yeah defs not
23:14 < bridge> <01000111g> yeah
23:15 < bridge> <Jupstar ✪> Maybe with a very high resolution monitor 😄
23:15 < bridge> <01000111g> Its not made for that task, but its banger for PyTorch etc
23:15 < bridge> <Ewan> right
23:15 < bridge> <01000111g> I bet i could solve the optimal way through linear with it kek
23:15 < bridge> <Ewan> do it
23:16 < bridge> <lukron55> is there a way i can change my server config to allow for connections from older clients?
23:16 < bridge> <louis> blud is running 700b llama
23:17 < bridge> <01000111g> would be fun, but rather then bruteforce i would do some kind of evolutionary algorithm, tbh way too lazy to implement it, maybe if i have a lot of free time and get skilled smh xdd
23:18 < bridge> <lukron55> specifically 0.7 versions of teeworlds
23:29 < bridge> <egyt> Playing DDNet on integrated GPU (although seems fine)
23:31 < bridge> <oxyzo.> when doom in ddnet
