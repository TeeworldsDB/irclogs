00:21 <+bridge> [ddnet] <Ryozuki> true
00:21 <+bridge> [ddnet] <Ryozuki> build a  dyson sphere
00:22 <+bridge> [ddnet] <Ryozuki> https://www.youtube.com/watch?v=v3y8AIEX_dU
00:25 <+bridge> [ddnet] <Ryozuki> https://twitter.com/Nibellion/status/1572249922992504832
00:25 <+bridge> [ddnet] <Ryozuki> does anyone know if rtx works on amd
00:25 <+bridge> [ddnet] <Ryozuki> or is it completly gpu locked
00:29 <+bridge> [ddnet] <Learath2> If they are advertising with the RTX logo I'm guessing it's nvidia only
00:37 <+bridge> [ddnet] <Ryozuki> time to mod then
00:38 <+bridge> [ddnet] <Ryozuki> my amd gpu has raytracing cores
00:39 <+bridge> [ddnet] <Ryozuki> oh i think u can do rtx on
00:39 <+bridge> [ddnet] <Ryozuki> but  its not on par with perfomance yet sadly
00:39 <+bridge> [ddnet] <Ryozuki> https://www.youtube.com/watch?v=l280ZCyTx0I
00:40 <+bridge> [ddnet] <Ryozuki> oh but  they are  running on 2k
00:40 <+bridge> [ddnet] <Ryozuki> 6600 xt is made for 1080
00:40 <+bridge> [ddnet] <Ryozuki> still not bad
00:40 <+bridge> [ddnet] <Ryozuki> 6600 xt outperforms outside rtx
00:41 <+bridge> [ddnet] <Learath2> I wonder if it depends on the game though. Does it even properly use the RT cores on AMD?
00:41 <+bridge> [ddnet] <Ryozuki> idk
00:55 <+bridge> [ddnet] <Learath2> @Chairn read through chapter one. I like the way you presented things and found it very digestible (though it is possible I felt so due to already being familiar with the material). Except for more english tips I have nothing to offer you ðŸ™‚
09:58 <+bridge> [ddnet] <ReiTW> https://www.youtube.com/watch?v=C7WFwgDRStM
09:58 <+bridge> [ddnet] <ReiTW> tf
12:43 <+bridge> [ddnet] <Ryozuki> Axum > actix > warp
12:43 <+bridge> [ddnet] <Ryozuki> So well designed
12:44 <+bridge> [ddnet] <Ryozuki> It shows they built on others ideas but improved
12:44 <+bridge> [ddnet] <Ryozuki> And sea-orm is awesome too
13:00 <+bridge> [ddnet] <Patiga> I released TwMap v0.8.0: https://gitlab.com/Patiga/twmap/-/releases/v0.8.0
13:01 <+bridge> [ddnet] <Patiga> License change to AGPL 3,  lots of changes (sadly also breaking), support for automappers
13:01 <+bridge> [ddnet] <Patiga> listed all changes in the link above
13:03 <+bridge> [ddnet] <Ryozuki> Nice!
13:03 <+bridge> [ddnet] <Ryozuki> https://tenor.com/view/stallman-meme-extreme-gif-15311412
13:09 <+bridge> [ddnet] <Patiga> because of the many changes, I hope I don't have to do a breaking fix soon because I missed something major ðŸ˜…
13:18 <+bridge> [ddnet] <Ryozuki> Reading the curl-multi pr
13:18 <+bridge> [ddnet] <Ryozuki> Mutexes rly should contain inside the data they guard
13:19 <+bridge> [ddnet] <Ryozuki> Its such a waste of time to figure out what they guard
13:19 <+bridge> [ddnet] <Ryozuki> And the names dont help
13:19 <+bridge> [ddnet] <Ryozuki> LoopL xd
14:02 <+bridge> [ddnet] <heinrich5991> @Ryozuki LoopL is only the the lock guard, I think
14:06 <+bridge> [ddnet] <heinrich5991> https://en.cppreference.com/w/cpp/thread/unique_lock
14:24 <+bridge> [ddnet] <ReiTW> u mean SurrealDB?
14:24 <+bridge> [ddnet] <Ryozuki> No
14:25 <+bridge> [ddnet] <Ryozuki> In talking about axum
14:25 <+bridge> [ddnet] <Ryozuki> Idk what that is
15:12 <+bridge> [ddnet] <Ryozuki> my current stack for a api backend im doing
15:12 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1022133122646691871/unknown.png
15:12 <+bridge> [ddnet] <Ryozuki> i should make a template or smth
15:17 <+bridge> [ddnet] <heinrich5991> watcha doing?
15:24 <+bridge> [ddnet] <Ryozuki> a modding hub for ff14
15:24 <+bridge> [ddnet] <Ryozuki> xd
15:28 <+bridge> [ddnet] <estherbtc> If you have Gmail account and a Crypto wallet then you're qualified for this coin giveaway click on the link and thank me later ðŸ‘‰ðŸ‘‰ðŸ‘‰https://t.me/+6418gUGZ6qQ2YzE0
16:03 <+bridge> [ddnet] <Patiga> @gerdoe forgot to ping you for twmap release ^^
16:07 <+bridge> [ddnet] <heinrich5991> @Ryozuki is it public btw?
16:07 <+bridge> [ddnet] <Learath2> Yes. There is one lock guarding everything that is cross thread inside CHttpRunner. Multiple unique_locks to make sure things get unlocked properly on unexpected early exits from blocks
16:10 <+bridge> [ddnet] <Ryozuki> Not right now
16:10 <+bridge> [ddnet] <Ryozuki> But idk if i wanna share that here
16:11 <+bridge> [ddnet] <Ryozuki> I only just started so there isnt anything tangible yet anyway
16:14 <+bridge> [ddnet] <Ryozuki> For the frontend ill use sveltekit
16:15 <+bridge> [ddnet] <Ryozuki> Cant get any more modern
16:20 <+bridge> [ddnet] <Learath2> Living on tbe cutting edge ðŸ˜„
16:22 <+bridge> [ddnet] <Ryozuki> <a:aPES_Hacker:513527552976093204>
16:41 <+bridge> [ddnet] <Ryozuki> https://tenor.com/view/programming-rust-c-lang-cpp-cplusplus-gif-26743262
16:42 <+bridge> [ddnet] <Ryozuki> @Learath2 lmao found this on discord gifs "anime programming"
16:43 <+bridge> [ddnet] <Learath2> Lol so true
16:50 <+bridge> [ddnet] <Ryozuki> I saw a funny thread on hn the other day
16:51 <+bridge> [ddnet] <Ryozuki> A c user on a rust related news, posted his project and said "find any memory related bugs" you wont find any
16:51 <+bridge> [ddnet] <Ryozuki> Dont need to say he got rekt
16:51 <+bridge> [ddnet] <Ryozuki> (his project was in C)
16:51 <+bridge> [ddnet] <Ryozuki> But he started putting excuses
16:51 <+bridge> [ddnet] <Ryozuki> On the bugs
16:51 <+bridge> [ddnet] <Ryozuki> It rly was funny
16:51 <+bridge> [ddnet] <Learath2> I would have never gotten rekted as he was. I'm built different
16:52 <+bridge> [ddnet] <Ryozuki> :BASED:
16:52 <+bridge> [ddnet] <Learath2> Like what? How do you even excuse a buffer overrun? ðŸ˜„
16:52 <+bridge> [ddnet] <Ryozuki> He also blamed some stuff on libraries etc
16:52 <+bridge> [ddnet] <Ryozuki> And some commits where literally saying "fix double free"
16:53 <+bridge> [ddnet] <Learath2> I hope people didn't "rekt" him about things that are runtime constrained, calling an internal function with impossible values isn't fair criticism as long as he never calls them like such
16:53 <+bridge> [ddnet] <Ryozuki> And he said, yeah thats because it was before "production"
16:57 <+bridge> [ddnet] <Ryozuki> Anyway its also fun to see r/cpp
16:58 <+bridge> [ddnet] <Ryozuki> You can rly see how close minded those ppl are
16:58 <+bridge> [ddnet] <Learath2> Ok, now I'm on his side, wtf
16:58 <+bridge> [ddnet] <Ryozuki> They drive high on copium about ppl not using modern cpp
16:58 <+bridge> [ddnet] <Learath2> The language this guy uses doesn't remove the possibility of memory management errors, ofc he had to fix mistakes. Don't rust users make any mistakes on classes of mistakes possible in their language?
16:58 <+bridge> [ddnet] <Ryozuki> The thing is you cant make that mistake in rust
16:58 <+bridge> [ddnet] <Learath2> I know, that's why I said in the class of mistakes possible in their language
16:58 <+bridge> [ddnet] <Learath2> If a mistake is made and fixed, what is the issue?
16:58 <+bridge> [ddnet] <Ryozuki> There are proba more mistakes like that because they cant exist
16:58 <+bridge> [ddnet] <Ryozuki> In rust you cant have them at all
16:58 <+bridge> [ddnet] <Ryozuki> Thats the thinf
16:58 <+bridge> [ddnet] <Ryozuki> Thing
16:58 <+bridge> [ddnet] <Ryozuki> Cant you rly not see how good that is?
16:58 <+bridge> [ddnet] <Learath2> So the mere possibility of mistakes implies all C programs are wrong? Even if mistakes are fixed before the program ever hits production?
16:58 <+bridge> [ddnet] <Ryozuki> You said that
16:58 <+bridge> [ddnet] <Ryozuki> I just said it means there can always be more mistakes
16:58 <+bridge> [ddnet] <Ryozuki> And cve lists shows its real
16:58 <+bridge> [ddnet] <Ryozuki> Also it gives other devs more security
16:58 <+bridge> [ddnet] <Ryozuki> E.g your pr
16:58 <+bridge> [ddnet] <Ryozuki> I would be more confident about it being right if it was rust
16:59 <+bridge> [ddnet] <Ryozuki> I would only need to look for deadlocks
16:59 <+bridge> [ddnet] <Learath2> I don't quite get how a fixed mistake is an own. Sorry
17:00 <+bridge> [ddnet] <Learath2> Doesnt mean I don't understand the value of Rust's memory guarantees. I just don't get how one person making and catching a mistake they made has anything wrong with it
17:00 <+bridge> [ddnet] <Ryozuki> Not having the possibility to ever have that mistake > being possible to have the mistake
17:00 <+bridge> [ddnet] <Ryozuki> Its rly simple
17:01 <+bridge> [ddnet] <Ryozuki> @Learath2 cuz the guy on the thread dismissed everything about rust
17:01 <+bridge> [ddnet] <Learath2> It actually isn't that simple and that's why you use Rust instead of languages with much stricter guarantees
17:04 <+bridge> [ddnet] <Learath2> Ada has guarantees about deadlocks not existing, bounds checking, contracts, at the cost of performance. Haskell is provable at the cost of ergonomics.
17:04 <+bridge> [ddnet] <Learath2> These are general purpose languages. There are DSLs with even stricter guarantees that only allow you to do a very specific subset of things
17:05 <+bridge> [ddnet] <Learath2> Rust is just a great compromise. It trades off some ergonomics for memory safety
17:07 <+bridge> [ddnet] <Learath2> I honestly don't get these religious wars about programming languages. Most all of them have a place
17:07 <+bridge> [ddnet] <Ryozuki> C has no place anymore, outside niche compile targets
17:07 <+bridge> [ddnet] <Ryozuki> :BASED:
17:07 <+bridge> [ddnet] <Ryozuki> And when gcc lands not even that
17:07 <+bridge> [ddnet] <Ryozuki> :BASED:
17:07 <+bridge> [ddnet] <Ryozuki> how to trigger learath 2.0
17:08 <+bridge> [ddnet] <Learath2> This is why people dont really enjoy rust evangelists
17:08 <+bridge> [ddnet] <Learath2> What do you gain by "triggering" me? Ok gj, you annoyed me. What is tbe next step?
17:08 <+bridge> [ddnet] <Ryozuki> Im triggering u on purpose
17:08 <+bridge> [ddnet] <Ryozuki> xd
17:09 <+bridge> [ddnet] <Learath2> Do you think I'd be more or less open to Rust after you "trigger" me?
17:09 <+bridge> [ddnet] <Ryozuki> oh god
17:09 <+bridge> [ddnet] <Ryozuki> Cant even joke
17:09 <+bridge> [ddnet] <Ryozuki> I thought we were on the same page
17:09 <+bridge> [ddnet] <Ryozuki> But i guess not
17:09 <+bridge> [ddnet] <Ryozuki> Sry if inoffended you
17:10 <+bridge> [ddnet] <Voxel> i love how learath has to use quotation marks
17:10 <+bridge> [ddnet] <Ryozuki> Sry if i offended you
17:10 <+bridge> [ddnet] <Learath2> No I personally don't care. You can joke all you want. But a lot of the people that have been trying to sell me rust in the past have actually went that route
17:11 <+bridge> [ddnet] <Ryozuki> I dont talk to any c devs outside this channel like this
17:11 <+bridge> [ddnet] <Ryozuki> Cuz i know im a rust meme here
17:12 <+bridge> [ddnet] <Learath2> Anyway, the place of C in the current era is the universal interface. Since no one is going t get together to make a proper ffi, it'll just stay like that for a decade or two
17:12 <+bridge> [ddnet] <Ryozuki> Yeah
17:12 <+bridge> [ddnet] <Ryozuki> C is not a language
17:12 <+bridge> [ddnet] <Ryozuki> But a protocol
17:12 <+bridge> [ddnet] <Ryozuki> You are forced to speak
17:13 <+bridge> [ddnet] <Learath2> Honestly I've had a better time talking C even between rust code and rust code
17:13 <+bridge> [ddnet] <Ryozuki> hm?
17:14 <+bridge> [ddnet] <Ryozuki> I dont get what you mean
17:14 <+bridge> [ddnet] <Learath2> The complexities of modern languages don't deal well with how simple the underlying hardware is. It sends around bytes, it doesn't understand what a std::HashMap is
17:15 <+bridge> [ddnet] <Learath2> I mean I've had a better time exposing rust functionality through the ffi and consuming it through the ffi then trying to link together a rust binary and a rust library
17:15 <+bridge> [ddnet] <Learath2> Specifically when one was compiled with a different version of rust. There are some breaking changes you need to keep track of to do it properly
17:16 <+bridge> [ddnet] <Learath2> Even more specifically I was working on a plugin system of sorts
17:17 <+bridge> [ddnet] <Ryozuki> Ah probs
17:17 <+bridge> [ddnet] <Ryozuki> Did u do repr c
17:17 <+bridge> [ddnet] <Ryozuki> The struct layout is not guaranteed otherwise
17:17 <+bridge> [ddnet] <Ryozuki> Rust optimizes it
17:18 <+bridge> [ddnet] <Learath2> Yes, on the outside facing interface I did
17:18 <+bridge> [ddnet] <Ryozuki> Have u considered using wasm for that
17:18 <+bridge> [ddnet] <Ryozuki> Wasntime just got 1.0
17:18 <+bridge> [ddnet] <Ryozuki> Its a wasm runtime made in rust
17:18 <+bridge> [ddnet] <Learath2> That's what I'll be doing next time around. I honestly am just tired of dealing with plugins in native code
17:18 <+bridge> [ddnet] <Ryozuki> And they are sandboxed
17:19 <+bridge> [ddnet] <Ryozuki> A plus
17:19 <+bridge> [ddnet] <Learath2> I like lua, I like wasm. One of those would be what I go with next time around
17:19 <+bridge> [ddnet] <Ryozuki> https://news.ycombinator.com/item?id=32913533
17:19 <+bridge> [ddnet] <Ryozuki> wasm is better
17:19 <+bridge> [ddnet] <Ryozuki> you dont bind the person to a language
17:20 <+bridge> [ddnet] <Learath2> Or maybe I'll take a look at js. V8 isn't half bad performance wise either
17:20 <+bridge> [ddnet] <Ryozuki> i personally dont like lua
17:20 <+bridge> [ddnet] <Ryozuki> why
17:20 <+bridge> [ddnet] <Ryozuki> just use wasm
17:20 <+bridge> [ddnet] <Voxel> i read this as "wasntme" like the map
17:20 <+bridge> [ddnet] <Learath2> I actually kinda like there being a language pre-agreed on ðŸ˜…
17:21 <+bridge> [ddnet] <Ryozuki> why? xd
17:21 <+bridge> [ddnet] <Ryozuki> i personally want to find a language with modding where u can use rust
17:21 <+bridge> [ddnet] <Ryozuki> lua is so boring
17:21 <+bridge> [ddnet] <Ryozuki> s / language / game
17:21 <+bridge> [ddnet] <Ryozuki> oof
17:21 <+bridge> [ddnet] <Learath2> You write stuff. My code runs the stuff. When there is a compiler inbetween that's one more part that might be introducing an error
17:22 <+bridge> [ddnet] <Mr.Gh0s7> I read it as wastetime 1.0 xD
17:22 <+bridge> [ddnet] <Learath2> Can't llvm target wasm? I thought it did
17:23 <+bridge> [ddnet] <Ryozuki> https://github.com/rhaiscript/rhai
17:23 <+bridge> [ddnet] <Learath2> Look I'm doing evangelism
17:23 <+bridge> [ddnet] <Learath2> https://cdn.discordapp.com/attachments/293493549758939136/1022166212190421073/Screenshot_20220921_172321.jpg
17:23 <+bridge> [ddnet] <Ryozuki> Idk proba
17:23 <+bridge> [ddnet] <Ryozuki> Kek
17:24 <+bridge> [ddnet] <Ryozuki> Im sure i posted that image
17:24 <+bridge> [ddnet] <Ryozuki> Oh wait
17:24 <+bridge> [ddnet] <Ryozuki> Is this another sv
17:27 <+bridge> [ddnet] <heinrich5991> llvm can indeed target wasm
17:27 <+bridge> [ddnet] <Voxel> thing is heinrich is adding rust into the ddnet client; im really curious as to what rust updates to the game will be like besides memory management
17:29 <+bridge> [ddnet] <Ryozuki> Wdym by updates
17:29 <+bridge> [ddnet] <Ryozuki> I would have done this http multi in rust
17:30 <+bridge> [ddnet] <Ryozuki> But its hard to interweave the code probs
17:30 <+bridge> [ddnet] <Ryozuki> Idk how worth is adding rust here
18:30 <+bridge> [ddnet] <matrix_coinbase> Win up to $1000 in crypto trading when you invest with just the minimum of $50
18:30 <+bridge> [ddnet] <matrix_coinbase> Signup and start investing your crypto with.
18:30 <+bridge> [ddnet] <matrix_coinbase> 
18:30 <+bridge> [ddnet] <matrix_coinbase> 
18:30 <+bridge> [ddnet] <matrix_coinbase> 
18:30 <+bridge> [ddnet] <matrix_coinbase> ðŸ’ŽNO STRESS
18:30 <+bridge> [ddnet] <matrix_coinbase> ðŸ’ŽNO REFERRAL NEEDED!!
18:30 <+bridge> [ddnet] <matrix_coinbase> ðŸ’ŽNO REGISTRATION FEE!!
18:30 <+bridge> [ddnet] <matrix_coinbase> 
18:30 <+bridge> [ddnet] <matrix_coinbase> https://t.me/Stevecoldham001
18:35 <+bridge> [ddnet] <matrix_coinbase> Win up to $1000 in crypto trading when you invest with just the minimum of $50
18:35 <+bridge> [ddnet] <matrix_coinbase> Signup and start investing your crypto with.
18:35 <+bridge> [ddnet] <matrix_coinbase> 
18:35 <+bridge> [ddnet] <matrix_coinbase> 
18:35 <+bridge> [ddnet] <matrix_coinbase> 
18:35 <+bridge> [ddnet] <matrix_coinbase> ðŸ’ŽNO STRESS
18:35 <+bridge> [ddnet] <matrix_coinbase> ðŸ’ŽNO REFERRAL NEEDED!!
18:35 <+bridge> [ddnet] <matrix_coinbase> ðŸ’ŽNO REGISTRATION FEE!!
18:35 <+bridge> [ddnet] <matrix_coinbase> 
18:35 <+bridge> [ddnet] <matrix_coinbase> https://t.me/Stevecoldham001
18:52 <+bridge> [ddnet] <Learath2> It would actually be a good place to use rust
18:52 <+bridge> [ddnet] <Learath2> It's a totally separate module
19:08 <+bridge> [ddnet] <Ryozuki> Yeah
19:08 <+bridge> [ddnet] <Ryozuki> But poc is not merged
19:14 <+bridge> [ddnet] <Jupstar âœª> i wish it would motivate the rust devs around here, but probs not, except maybe heinrich himself
19:15 <+bridge> [ddnet] <heinrich5991> I only need to fix the damn macos
19:15 <+bridge> [ddnet] <heinrich5991> but I guess I need access to a macos machine for that
19:16 <+bridge> [ddnet] <heinrich5991> I need rust to produce a fat binary for the library
19:16 <+bridge> [ddnet] <heinrich5991> but that's not really supported, so I need to hack my way around that
19:16 <+bridge> [ddnet] <heinrich5991> https://github.com/rust-lang/cargo/issues/8875
19:16 <+bridge> [ddnet] <Learath2> Maybe you can ssh to my laptop and poke around at it?
19:17 <+bridge> [ddnet] <heinrich5991> if you'd allow me to do that, I'd be very interested ðŸ™‚
19:17 <+bridge> [ddnet] <heinrich5991> another bug I'm currently facing:
19:18 <+bridge> [ddnet] <heinrich5991> the https register connects via IPv6 (or at least re-uses IPv6 connections wherever they came from) even though it explicitly requests `CURL_IPRESOLVE_IPV4`
19:18 <+bridge> [ddnet] <heinrich5991> I stepped through it in the debugger to see that it really sets `CURL_IPRESOLVE_IPV4`
19:19 <+bridge> [ddnet] <heinrich5991> and I quickly looked at the documentation, it seems to indicate that `CURL_IPRESOLVE_IPV4` will **only** attempt IPv4 connections. comments in the curl source code suggest, that this also applies for reusing connections
19:25 <+bridge> [ddnet] <heinrich5991> aha!
19:26 <+bridge> [ddnet] <heinrich5991> https://github.com/curl/curl/commit/84d2839740ca78041ac7419d9aaeac55c1e1c729
19:30 <+bridge> [ddnet] <gerdoe> checky checky check check <3
19:55 <+bridge> [ddnet] <Ryozuki> i mean there arent many rust devs here
19:55 <+bridge> [ddnet] <Ryozuki> i only know heinrich patiga me
19:55 <+bridge> [ddnet] <Ryozuki> and learath ocasionally
19:55 <+bridge> [ddnet] <Ryozuki> actually thats probs close to 30-40% of total devs xd
20:03 <+bridge> [ddnet] <Jupstar âœª> reitw too
20:03 <+bridge> [ddnet] <Ryozuki> theorically im getting the steam deck tomorrow
20:03 <+bridge> [ddnet] <Ryozuki> @Not Keks thanks to me kek
20:03 <+bridge> [ddnet] <Ryozuki> https://tenor.com/view/praise-praisethesun-darksouls-the-sun-gif-4970376
20:04 <+bridge> [ddnet] <Jupstar âœª> better learn OpenCL
20:17 <+bridge> [ddnet] <ReiTW> Well i'm a very little beginner lmao
20:17 <+bridge> [ddnet] <ReiTW> + I don't have a programmer soul lmao
20:17 <+bridge> [ddnet] <ReiTW> I'm kinda bad, but I have fun
20:30 <+bridge> [ddnet] <Jupstar âœª> then change it, coding is best, coding is creation.
20:30 <+bridge> [ddnet] <Jupstar âœª> if you aren't a craftsmen then there is almost no alternative to coding to create useful stuff ðŸ˜„
21:39 <+ChillerDragon> wait @heinrich5991 are you saying rust is not added into ddnet because of https://github.com/rust-lang/cargo/issues/8875 ?
21:40 <+ChillerDragon> for me it looks more like a nice to have than a actual blocker
21:43 <+bridge> [ddnet] <heinrich5991> I'm saying that a workaround for that bug needs to be found before rust can be added to ddnet, yes
21:43 <+ChillerDragon> but didnt the dude provide the workaround in the issue desc?
21:43 <+bridge> [ddnet] <heinrich5991> macos needs binaries to be compiled for amd64 and aarch64
21:44 <+ChillerDragon> doesnt it compile for both arch by default?
21:44 <+ChillerDragon> and then its running the lipo command
21:44 <+bridge> [ddnet] <heinrich5991> rust? no, see that bug
21:44 <+ChillerDragon> i mean mac
21:44 <+ChillerDragon> and for rust you can specify
21:44 <+bridge> [ddnet] <heinrich5991> yes
21:44 <+bridge> [ddnet] <heinrich5991> so you need to integrate that into cmakelists.txt
21:44 <+bridge> [ddnet] <heinrich5991> that hasn't happened yet
21:44 <+ChillerDragon> ye
21:44 <+ChillerDragon> a
21:45 <+ChillerDragon> yea i assume without testing thats pain
21:45 <+ChillerDragon> What about cross compile?
21:45 <+ChillerDragon> thats almost more important isnt it?
21:45 <+bridge> [ddnet] <heinrich5991> I haven't attempted to cross-compile to macos
21:46 <+ChillerDragon> is there even a lipo command for linux?
21:46 <+bridge> [ddnet] <heinrich5991> currently it's more important to compile on macos, that's how releases get built currently
21:46 <+bridge> [ddnet] <heinrich5991> yes, definitely
21:46 <+ChillerDragon> wait wot?
21:46 <+ChillerDragon> releases are build on mac?
21:46 <+ChillerDragon> ah wait since deen switched i guess? :D
21:46 <+bridge> [ddnet] <heinrich5991> yes, since code signing of fat binaries did not work under linux
21:47 <+ChillerDragon> macos moment
21:48 <+ChillerDragon> the only time i heard of code signing and fat binaries is while reading this book :D https://nostarch.com/art-mac-malware
21:48 <+ChillerDragon> i rly got disconnected to mac
21:48 <+ChillerDragon> not sure if i can recommend the book tho. Its okay.
22:41 <+bridge> [ddnet] <ReiTW> nostarch is a really good book edition
22:42 <+bridge> [ddnet] <ReiTW> Sometimes a bit too advanced (like the book about Malware Analysis)
22:42 <+bridge> [ddnet] <ReiTW> Sometimes a bit too advanced (like the book about Malware Analysis), so hard to read and understand, requires some basic knowledge sometimes
