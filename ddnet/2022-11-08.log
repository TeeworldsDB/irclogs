00:53 <+bridge> [ddnet] <YupHio> @Robyt3  Perhaps Debian is the issue. My VPS host has several OS options. What OS do the regular DDNet servers run on, or which one is the most stable for running a server?
01:45 <+bridge> [ddnet] <ReiTW> why would debian be the issue lol
02:00 <+bridge> [ddnet] <YupHio> ðŸ™‚
02:00 <+bridge> [ddnet] <YupHio> ^
02:00 <+bridge> [ddnet] <ReiTW> did u tst with the addr sanitizer
02:01 <+bridge> [ddnet] <YupHio> Changing the OS may likely change whatever variable is the root cause, since it is unknown
02:01 <+bridge> [ddnet] <YupHio> Will try that tomorrow @ReiTW ran out of time today
02:02 <+bridge> [ddnet] <ReiTW> let me 2min
02:32 <+bridge> [ddnet] <ReiTW> same issue tho, debian 11, but once I compile it by myself I can't get anything and everything works fine
02:32 <+bridge> [ddnet] <ReiTW> I've compiled the source from branch 16.5
02:36 <+bridge> [ddnet] <ReiTW> is it possible that the provided binary in the page might be "corrupted"?
02:40 <+bridge> [ddnet] <YupHio> Hmm. So you recreated the issue? Can you post the freshly compiled server for me (us) to use? Did you do a compare? Sounds like the one I downloaded may have a local artifact from whoever built it.
02:40 <+bridge> [ddnet] <YupHio> Yeah seems like it
02:41 <+bridge> [ddnet] <ReiTW> well u shouldn't trust me & compile it yourself tho
02:41 <+bridge> [ddnet] <ReiTW> xD
02:43 <+bridge> [ddnet] <YupHio> Tru
02:45 <+bridge> [ddnet] <YupHio> Do the publishes binaries on the DDNet website get built on a standard build machine (like a container), or does someone just build with whatever environment they have locally that day and then publish it? xD
02:45 <+bridge> [ddnet] <YupHio> Do the published binaries on the DDNet website get built on a standard build machine (like a container), or does someone just build with whatever environment they have locally that day and then publish it? xD
02:52 <+bridge> [ddnet] <ReiTW> (same for ubuntu 20.04)
03:27 <+bridge> [ddnet] <heinrich5991> they're built on deen's machine, I think
06:47 <+bridge> [ddnet] <chillerdragon> Poggers
06:47 <+bridge> [ddnet] <chillerdragon> (@Patiga)
09:44 <+bridge> [ddnet] <Ryozuki> https://news.ycombinator.com/item?id=33512338
10:36 <+ChillerDragon> How does rust pick the output filename? it says wireshark-dissector here but compilation generates a wireshark_dissector.so does it replace - with _ for libs or all binaries? https://github.com/ChillerDragon/libtw2/blob/5f07c47f71acb943aaa8aa4a6d693980db6a15d9/wireshark-dissector/Cargo.toml#L2
10:37 <+ChillerDragon> lib* in front
10:47 <+bridge> [ddnet] <Ryozuki> In this case
10:47 <+bridge> [ddnet] <Ryozuki> Under package
10:47 <+bridge> [ddnet] <Ryozuki> In name
10:47 <+bridge> [ddnet] <Ryozuki> Thats the binary name
10:48 <+bridge> [ddnet] <Ryozuki> Ah
10:48 <+bridge> [ddnet] <Ryozuki> Yeah i guess it removes -
10:48 <+bridge> [ddnet] <Ryozuki> Its a library got confused xd
10:49 <+bridge> [ddnet] <Ryozuki> I think just for libs
10:55 <+ChillerDragon> rust trol lang
11:02 < Ryozuki> test
11:03 <+Ryozuki> test2?
11:34 <+bridge> [ddnet] <uwu> https://cdn.discordapp.com/attachments/293493549758939136/1039488031041789992/Screenshot_2022-11-08-12-34-05-853-edit_io.github.pd4d10.gittouch.jpg
11:34 <+bridge> [ddnet] <uwu> :justatest:
11:34 <+ChillerDragon> @heinrich5991 Why can i not see the input snap object in wireshark? https://zillyhuhn.com/cs/.1667903649.png
11:48 <+bridge> [ddnet] <ReiTW> Rewrite it in Rust :sue:
11:55 <+bridge> [ddnet] <Ryozuki> :BASED:
12:00 <+ChillerDragon> This works... but it seems more hacky than what you planned there @heinrich5991 https://zillyhuhn.com/cs/.1667905210.png
14:47 <+bridge> [ddnet] <heinrich5991> the correct way to support this is to implement the `snapshot_object` type
14:47 <+bridge> [ddnet] <heinrich5991> ChillerDragon: but yours is okay for fixing it if you just want to look at it right now
15:15 <+bridge> [ddnet] <RonIn â˜¯> i don't understand why devs needed to delete the console window option in new versions :lol:
15:19 <+bridge> [ddnet] <deen> Debian
16:08 <+ChillerDragon> @heinrich5991 nah i dont need a hotfix i just wanted too see how hard it is to contribute to the dissector. Apparently too hard for me :(
16:08 <+ChillerDragon> Because if i check it looks implemented to me
16:10 <+ChillerDragon> in here https://github.com/heinrich5991/libtw2/blob/5f07c47f71acb943aaa8aa4a6d693980db6a15d9/gamenet/generate/datatypes.py#L1407-L1422
16:11 <+bridge> [ddnet] <YupHio> I did a fresh build on my Debian VPS, and the server crashing issue is now fixed ðŸ™‚ Seems there is an artifact/bug in the Linux DDNet-Server binary published on the DDNet website. Thanks @deen and @ReiTW
16:21 <+ChillerDragon> I knew it! website download includes additional malware! deen the bitcoin miner confirmed!!!!!!!!!!!!
16:22 <+ChillerDragon> ^ okay in case someone does not get it this is a joke xd
16:26 <+bridge> [ddnet] <ReiTW> deen reverse shell everyone
16:26 <+bridge> [ddnet] <ReiTW> :giga_chad:
16:29 <+bridge> [ddnet] <Ryozuki> :BASED:
16:31 <+bridge> [ddnet] <Chairn> what's the library to explore tw map in python by Patiga?
16:32 <+bridge> [ddnet] <Chairn> or is there any similar library, preferrably in python?
16:34 <+bridge> [ddnet] <Ryozuki> The twmap
16:34 <+bridge> [ddnet] <Ryozuki> Its just a python binding for the rust lib
16:34 <+bridge> [ddnet] <Ryozuki> So it should be fast too
16:34 <+bridge> [ddnet] <Chairn> ah i found it on pypi.org ðŸ˜‰
16:34 <+bridge> [ddnet] <Chairn> https://gitlab.com/Patiga/twmap-py
16:34 <+bridge> [ddnet] <Chairn> https://pypi.org/project/twmap/
16:34 <+bridge> [ddnet] <Ryozuki> https://pypi.org/project/twmap/
16:34 <+bridge> [ddnet] <Ryozuki> Ye cd
16:34 <+bridge> [ddnet] <Ryozuki> Xd
16:35 <+bridge> [ddnet] <Chairn> delete your message impostor !!
16:35 <+bridge> [ddnet] <Ryozuki> Rly good lib
16:35 <+bridge> [ddnet] <Ryozuki> I used the rust side
16:35 <+bridge> [ddnet] <Ryozuki> For my map gen
16:36 <+bridge> [ddnet] <Chairn> hmm, default python pip is using twmap 0.2.0, looks kinda old
16:36 <+bridge> [ddnet] <Chairn> anaconda does use 0.4.1 whihc seems to date from yesterday ðŸ™‚
16:37 <+bridge> [ddnet] <Patiga> glad you found it that easily!
16:37 <+bridge> [ddnet] <Patiga> please use 0.4.1, its much better imo
16:37 <+bridge> [ddnet] <Chairn> any idea why distrib python uses outdated version?
16:37 <+bridge> [ddnet] <Patiga> I'm not sure, I don't know how the version selection works
16:38 <+bridge> [ddnet] <Chairn> me neither ðŸ˜„
16:38 <+bridge> [ddnet] <Patiga> which python version are you on?
16:39 <+bridge> [ddnet] <Chairn> distrib is 3.6.9
16:39 <+bridge> [ddnet] <Chairn> conda is 3.7.6
16:39 <+bridge> [ddnet] <Patiga> iirc python 3.6 is end of life, my publish process doesn't support that version directly anymore
16:40 <+bridge> [ddnet] <Chairn> yeah, im waiting my phd defense to update to ubuntu 22 my machine
16:40 <+bridge> [ddnet] <Chairn> don't wanna take no risk at that point ðŸ˜„
16:40 <+bridge> [ddnet] <Chairn> and im running out of space 
16:40 <+bridge> [ddnet] <Chairn> `/dev/mapper/xubuntu--vg-root  144G  132G  5,4G  97% /`
16:40 <+bridge> [ddnet] <Chairn> how big is ddnet-maps?
16:40 <+bridge> [ddnet] <Chairn> will it fill my disk ?
16:40 <+bridge> [ddnet] <Patiga> well if you want you can also just built it yourself, that should be realtively easy for you :)
16:40 <+bridge> [ddnet] <Patiga> (if you have rust installed)
16:41 <+bridge> [ddnet] <Chairn> i do ðŸ™‚
16:41 <+bridge> [ddnet] <Patiga> about 2.3 GB
16:41 <+bridge> [ddnet] <Chairn> i think ill try to do some stuff in the train
16:41 <+bridge> [ddnet] <Patiga> https://gitlab.com/Patiga/twmap-py#manual-building-on-linux
16:41 <+bridge> [ddnet] <Chairn> yeah, but never compiled rust yet
16:42 <+bridge> [ddnet] <Patiga> oh god I hope your rust is new-ish, so far I didn't focus on keeping the minimum-supported-rust-version down
16:43 <+bridge> [ddnet] <Patiga> but if you already have it, compiling the project is really just `cargo build --release`
16:43 <+bridge> [ddnet] <Chairn> rustc 1.61.0
16:43 <+bridge> [ddnet] <Chairn> no idea how new this is
16:43 <+bridge> [ddnet] <Chairn> or how old
16:43 <+bridge> [ddnet] <Patiga> I'd guess updating wouldn't hurt if that is in your power
16:44 <+bridge> [ddnet] <Chairn> nah, fine for now
16:45 <+bridge> [ddnet] <Chairn> `Receiving objects: 100% (32608/32608), 918.89 MiB ` so 920MB packed
17:00 <+bridge> [ddnet] <Ryozuki> @Chairn just do rustup update
17:32 <+bridge> [ddnet] <Ryozuki> https://www.reddit.com/r/rust/comments/ypm47w/unofficial_opensource_nvidia_vulkan_driver_for/?utm_source=share&utm_medium=android_app&utm_name=androidcss&utm_term=1&utm_content=share_button
17:32 <+bridge> [ddnet] <Ryozuki> @Not Keks
17:38 <+bridge> [ddnet] <heinrich5991> ChillerDragon: it needs implementation here: https://github.com/heinrich5991/libtw2/blob/5f07c47f71acb943aaa8aa4a6d693980db6a15d9/wireshark-dissector/src/spec.rs#L615
17:38 <+bridge> [ddnet] <heinrich5991> and here: https://github.com/heinrich5991/libtw2/blob/5f07c47f71acb943aaa8aa4a6d693980db6a15d9/wireshark-dissector/src/spec.rs#L697
17:38 <+bridge> [ddnet] <heinrich5991> and here: https://github.com/heinrich5991/libtw2/blob/5f07c47f71acb943aaa8aa4a6d693980db6a15d9/wireshark-dissector/src/spec.rs#L933
17:42 <+bridge> [ddnet] <Jupstar âœª> better news would be official drivers
17:42 <+bridge> [ddnet] <Jupstar âœª> nouveum sucks performance wise
17:42 <+bridge> [ddnet] <Jupstar âœª> i dunno why it should change with rust ^^
17:42 <+bridge> [ddnet] <Jupstar âœª> 
17:42 <+bridge> [ddnet] <Jupstar âœª> the intel simply missing for the architectures
17:44 <+bridge> [ddnet] <Jupstar âœª> "The newly created Linux driver for Nvidia GPUs will be using Rust for its shader compiler."
17:44 <+bridge> [ddnet] <Jupstar âœª> 
17:44 <+bridge> [ddnet] <Jupstar âœª> also its just the shader compiler
18:04 <+bridge> [ddnet] <Ryozuki> True
18:38 <+ChillerDragon> yikes sounds complicated but thanks for the useful links @heinrich5991
19:43 <+bridge> [ddnet] <Patiga> that appears to be the exact minimum rust version for twmap-py o.o
19:58 <+bridge> [ddnet] <Chairn> @Patiga twmap doesn't have tile enumeration? didn't find any
19:58 <+bridge> [ddnet] <Chairn> our new build system requires an internet connection. Is it only for the very first time or at every rebuild (haven't tried yet)?
19:58 <+bridge> [ddnet] <Patiga> yes, it doesn't have that as of yet
19:59 <+bridge> [ddnet] <Patiga> have you tried getting the python bindings to work on your machine? :)
20:01 <+bridge> [ddnet] <Jupstar âœª> @Chairn how are the build times now btw?
20:01 <+bridge> [ddnet] <Jupstar âœª> ur pc was pretty slow
20:02 <+bridge> [ddnet] <Jupstar âœª> make 16.5 vs current master pls
20:57 <+bridge> [ddnet] <Chairn> yes it does work wonderfully ðŸ™‚
20:59 <+bridge> [ddnet] <Chairn> ```python
20:59 <+bridge> [ddnet] <Chairn> import twmap
20:59 <+bridge> [ddnet] <Chairn> from glob import glob
20:59 <+bridge> [ddnet] <Chairn> import numpy as np
20:59 <+bridge> [ddnet] <Chairn> 
20:59 <+bridge> [ddnet] <Chairn> TILE_FREEZE = 9
20:59 <+bridge> [ddnet] <Chairn> 
20:59 <+bridge> [ddnet] <Chairn> for mapname in glob('ddnet-maps/types/race/maps/*.map'):
20:59 <+bridge> [ddnet] <Chairn>   Map = twmap.Map(mapname)
21:00 <+bridge> [ddnet] <Chairn>   game = Map.game_layer().tiles[:,:,0]
21:00 <+bridge> [ddnet] <Chairn>   try:
21:00 <+bridge> [ddnet] <Chairn>     front = Map.front_layer().tiles[:,:,0]
21:00 <+bridge> [ddnet] <Chairn>   except AttributeError:
21:00 <+bridge> [ddnet] <Chairn>     front = np.zeros((1,1))
21:00 <+bridge> [ddnet] <Chairn> 
21:00 <+bridge> [ddnet] <Chairn>   if (game == TILE_FREEZE).any() or (front == TILE_FREEZE).any():
21:00 <+bridge> [ddnet] <Chairn>     print(f'{mapname} has freeze')
21:00 <+bridge> [ddnet] <Chairn> ```
21:00 <+bridge> [ddnet] <Chairn> hmm, not yet, will try later, probably tomorrow
21:01 <+bridge> [ddnet] <Patiga> nice, glad it works for you
21:11 <+bridge> [ddnet] <Chairn> cmd? rustup doesn't exist on my system
21:13 <+bridge> [ddnet] <Ryozuki> ah
21:13 <+bridge> [ddnet] <Ryozuki> i manage rust with rustup
21:15 <+bridge> [ddnet] <Jupstar âœª> https://win.rustup.rs/x86_64
21:17 <+bridge> [ddnet] <Chairn> build times are almost doubled from what i can see
21:19 <+bridge> [ddnet] <heinrich5991> build times with what?
21:19 <+bridge> [ddnet] <heinrich5991> ah
21:19 <+bridge> [ddnet] <Chairn> ddnet with my potato machine
21:19 <+bridge> [ddnet] <heinrich5991> the rust changes ðŸ˜¦
21:19 <+bridge> [ddnet] <Chairn> runnning 16.5 rn
21:19 <+bridge> [ddnet] <Jupstar âœª> but after all downloaded?
21:19 <+bridge> [ddnet] <Jupstar âœª> that obv wont count xd
21:19 <+bridge> [ddnet] <heinrich5991> yea
21:20 <+bridge> [ddnet] <Chairn> ```bash
21:20 <+bridge> [ddnet] <Chairn> $ cmake -G Ninja -DDEV=ON ..
21:20 <+bridge> [ddnet] <Chairn> $ time ninja
21:20 <+bridge> [ddnet] <Chairn> # 16.5
21:20 <+bridge> [ddnet] <Chairn> real    3m2,989s
21:20 <+bridge> [ddnet] <Chairn> user    10m1,479s
21:20 <+bridge> [ddnet] <Chairn> sys     0m31,780s
21:21 <+bridge> [ddnet] <Chairn> # master build with rust
21:21 <+bridge> [ddnet] <Chairn> real    3m45,214s
21:21 <+bridge> [ddnet] <Chairn> user    12m3,471s
21:21 <+bridge> [ddnet] <Chairn> sys     0m37,628s
21:21 <+bridge> [ddnet] <Chairn> ```
21:21 <+bridge> [ddnet] <Chairn> okay, not really doubled
21:21 <+bridge> [ddnet] <Chairn> i think potato pc is tired because i remember it builds in around 2 minutes usually
21:21 <+bridge> [ddnet] <Learath2> An extra 40s. Not that bad
21:21 <+bridge> [ddnet] <heinrich5991> +25%
21:21 <+bridge> [ddnet] <Chairn> ` Finished dev [unoptimized + debuginfo] target(s) in 54.34s`
21:21 <+bridge> [ddnet] <heinrich5991> it's okayish I gues
21:21 <+bridge> [ddnet] <Learath2> Though I can see it getting worse as we use more dependencies in rust modules
21:22 <+bridge> [ddnet] <Chairn> but, do we need to build it ? I thought it was just extra tool written in rust
21:22 <+bridge> [ddnet] <heinrich5991> no, it's compiled into the client and server
21:22 <+bridge> [ddnet] <heinrich5991> check out the new fancy console command `rust_version`
21:23 <+bridge> [ddnet] <heinrich5991> :p
21:23 <+bridge> [ddnet] <heinrich5991> :p
21:23 <+bridge> [ddnet] <Chairn> ðŸ˜„
21:23 <+bridge> [ddnet] <heinrich5991> hm, it doesn't replace :p anymore
21:23 <+bridge> [ddnet] <Chairn> maj P
21:23 <+bridge> [ddnet] <Chairn> ðŸ˜›
21:23 <+bridge> [ddnet] <Chairn> it does
21:23 <+bridge> [ddnet] <heinrich5991> ðŸ˜„
21:23 <+bridge> [ddnet] <heinrich5991> :p
21:23 <+bridge> [ddnet] <heinrich5991> ðŸ˜›
21:23 <+bridge> [ddnet] <heinrich5991> only with capital P
21:23 <+bridge> [ddnet] <heinrich5991> discord, you broke my workflow https://xkcd.com/1172/
21:24 <+bridge> [ddnet] <Chairn> it also uses more disk space:
21:24 <+bridge> [ddnet] <Chairn> ```shell
21:24 <+bridge> [ddnet] <Chairn> ## master build with rust
21:24 <+bridge> [ddnet] <Chairn> 284K    ./src
21:24 <+bridge> [ddnet] <Chairn> 40M     ./data
21:24 <+bridge> [ddnet] <Chairn> 90M     ./CMakeFiles
21:24 <+bridge> [ddnet] <Chairn> 238M    ./debug
21:24 <+bridge> [ddnet] <Chairn> 434M    .
21:24 <+bridge> [ddnet] <Chairn> ## 16.5
21:24 <+bridge> [ddnet] <Chairn> 284K    ./src
21:24 <+bridge> [ddnet] <Chairn> 40M     ./data
21:24 <+bridge> [ddnet] <Chairn> 89M     ./CMakeFiles
21:24 <+bridge> [ddnet] <Chairn> 167M    .
21:24 <+bridge> [ddnet] <Chairn> ```
21:24 <+bridge> [ddnet] <Learath2> :d
21:24 <+bridge> [ddnet] <Jupstar âœª> why the tripple style documentation style tho?
21:24 <+bridge> [ddnet] <heinrich5991> yes, that is to be expected
21:24 <+bridge> [ddnet] <Jupstar âœª> @Ryozuki what about our documentation tool
21:24 <+bridge> [ddnet] <Learath2> Triple style documentation style?
21:25 <+bridge> [ddnet] <Jupstar âœª> ```rust
21:25 <+bridge> [ddnet] <Jupstar âœª> 
21:25 <+bridge> [ddnet] <Jupstar âœª> /// Color, in HSLA format. Corresponds to the C++ type `ColorHSLA`.
21:25 <+bridge> [ddnet] <Jupstar âœª> ///
21:25 <+bridge> [ddnet] <Jupstar âœª> /// The color is represented by hue, saturation, lightness and alpha values
21:25 <+bridge> [ddnet] <Jupstar âœª> /// between `0.0` and `1.0`.
21:25 <+bridge> [ddnet] <Jupstar âœª> ///
21:25 <+bridge> [ddnet] <Jupstar âœª> /// See also <https://en.wikipedia.org/wiki/HSL_and_HSV>.
21:25 <+bridge> [ddnet] <Jupstar âœª> ///
21:25 <+bridge> [ddnet] <Jupstar âœª> /// # Examples
21:25 <+bridge> [ddnet] <Jupstar âœª> ///
21:25 <+bridge> [ddnet] <Jupstar âœª> /// ```
21:25 <+bridge> [ddnet] <Jupstar âœª> /// use ddnet_base::ColorHSLA;
21:25 <+bridge> [ddnet] <Jupstar âœª> ///
21:25 <+bridge> [ddnet] <Jupstar âœª> /// let white = ColorHSLA { h: 0.0, s: 0.0, l: 1.0, a: 1.0 };
21:25 <+bridge> [ddnet] <Jupstar âœª> /// let black = ColorHSLA { h: 0.0, s: 0.0, l: 0.0, a: 1.0 };
21:25 <+bridge> [ddnet] <Jupstar âœª> /// let red = ColorHSLA { h: 0.0, s: 1.0, l: 0.5, a: 1.0 };
21:25 <+bridge> [ddnet] <Jupstar âœª> /// let transparent = ColorHSLA { h: 0.0, s: 0.0, l: 0.0, a: 0.0 };
21:25 <+bridge> [ddnet] <Jupstar âœª> ///
21:25 <+bridge> [ddnet] <Jupstar âœª> /// // #ffa500
21:25 <+bridge> [ddnet] <Jupstar âœª> /// let ddnet_logo_color = ColorHSLA { h: 0.10784314, s: 1.0, l: 0.5, a: 1.0 };
21:25 <+bridge> [ddnet] <Jupstar âœª> /// ```
21:25 <+bridge> [ddnet] <Jupstar âœª> ```
21:25 <+bridge> [ddnet] <Jupstar âœª> ```rust
21:25 <+bridge> [ddnet] <Jupstar âœª> 
21:25 <+bridge> [ddnet] <Jupstar âœª> /// Color, in HSLA format. Corresponds to the C++ type `ColorHSLA`.
21:25 <+bridge> [ddnet] <Jupstar âœª> ///
21:25 <+bridge> [ddnet] <Jupstar âœª> /// The color is represented by hue, saturation, lightness and alpha values
21:25 <+bridge> [ddnet] <Jupstar âœª> /// between `0.0` and `1.0`.
21:25 <+bridge> [ddnet] <Jupstar âœª> ///
21:25 <+bridge> [ddnet] <Jupstar âœª> /// See also <https://en.wikipedia.org/wiki/HSL_and_HSV>.
21:25 <+bridge> [ddnet] <Jupstar âœª> ///
21:25 <+bridge> [ddnet] <Jupstar âœª> /// # Examples
21:26 <+bridge> [ddnet] <Jupstar âœª> ///
21:26 <+bridge> [ddnet] <Jupstar âœª> /// ---
21:26 <+bridge> [ddnet] <Jupstar âœª> /// use ddnet_base::ColorHSLA;
21:26 <+bridge> [ddnet] <Jupstar âœª> ///
21:26 <+bridge> [ddnet] <Jupstar âœª> /// let white = ColorHSLA { h: 0.0, s: 0.0, l: 1.0, a: 1.0 };
21:26 <+bridge> [ddnet] <Jupstar âœª> /// let black = ColorHSLA { h: 0.0, s: 0.0, l: 0.0, a: 1.0 };
21:26 <+bridge> [ddnet] <Jupstar âœª> /// let red = ColorHSLA { h: 0.0, s: 1.0, l: 0.5, a: 1.0 };
21:26 <+bridge> [ddnet] <Jupstar âœª> /// let transparent = ColorHSLA { h: 0.0, s: 0.0, l: 0.0, a: 0.0 };
21:26 <+bridge> [ddnet] <Jupstar âœª> ///
21:26 <+bridge> [ddnet] <Jupstar âœª> /// // #ffa500
21:26 <+bridge> [ddnet] <Jupstar âœª> /// let ddnet_logo_color = ColorHSLA { h: 0.10784314, s: 1.0, l: 0.5, a: 1.0 };
21:26 <+bridge> [ddnet] <Jupstar âœª> /// ---
21:26 <+bridge> [ddnet] <Jupstar âœª> ```
21:26 <+bridge> [ddnet] <heinrich5991> that's how you do documentation in rust
21:26 <+bridge> [ddnet] <heinrich5991> with the three slashes
21:26 <+bridge> [ddnet] <Jupstar âœª> can we change it to doxygen?
21:26 <+bridge> [ddnet] <Jupstar âœª> bcs it looks really bad
21:26 <+bridge> [ddnet] <heinrich5991> I don't know, but I wouldn't
21:26 <+bridge> [ddnet] <heinrich5991> rustdoc is really well integrated into rust
21:26 <+bridge> [ddnet] <Learath2> Hm, it is a little annoying that we need 2 sets of docs with no proper link between them
21:26 <+bridge> [ddnet] <Jupstar âœª> well same ppl probs made rust syntax what do i expect
21:30 <+bridge> [ddnet] <Jupstar âœª> whats better, rust analyser or rust language server?
21:31 <+bridge> [ddnet] <Ryozuki> rust docs are markdown
21:31 <+bridge> [ddnet] <Ryozuki> with extensions
21:31 <+bridge> [ddnet] <Jupstar âœª> does rust language server include rust analyzer?
21:31 <+bridge> [ddnet] <Ryozuki> no
21:32 <+bridge> [ddnet] <Ryozuki> use rust analyzer
21:32 <+bridge> [ddnet] <Jupstar âœª> well it still looks shit xD
21:32 <+bridge> [ddnet] <Ryozuki> it looks good to me
21:32 <+bridge> [ddnet] <Ryozuki> and the rendered docs even better
21:32 <+bridge> [ddnet] <Ryozuki> docs.rs is a blessing
21:32 <+bridge> [ddnet] <Jupstar âœª> is it better?
21:32 <+bridge> [ddnet] <Ryozuki> rls is deprecated
21:32 <+bridge> [ddnet] <Ryozuki> rust analyzer is the oficial now
21:32 <+bridge> [ddnet] <heinrich5991> rls is actually removed from the newest release
21:33 <+bridge> [ddnet] <Jupstar âœª> what tool to format code?
21:33 <+bridge> [ddnet] <Ryozuki> cargo fmt
21:33 <+bridge> [ddnet] <heinrich5991> `cargo fmt`
21:34 <+bridge> [ddnet] <Ryozuki> cargo check to check for errors without compiling
21:34 <+bridge> [ddnet] <Jupstar âœª> how should my ide have support for both?
21:34 <+bridge> [ddnet] <Ryozuki> cargo clippy for more checks
21:34 <+bridge> [ddnet] <Jupstar âœª> clang format and cargo
21:34 <+bridge> [ddnet] <Ryozuki> vscode?
21:34 <+bridge> [ddnet] <Ryozuki> it uses t he rust-analyzer formatter
21:34 <+bridge> [ddnet] <Ryozuki> which is cargo fmt
21:34 <+bridge> [ddnet] <Ryozuki> so just format
21:34 <+bridge> [ddnet] <Ryozuki> LSP also are used to format code
21:34 <+bridge> [ddnet] <Ryozuki> the rust LSP calls rustfmt
21:35 <+bridge> [ddnet] <Ryozuki> there is also a tool to check unsafe code
21:35 <+bridge> [ddnet] <Ryozuki> miri
21:35 <+bridge> [ddnet] <Ryozuki> but thats more advanced
21:36 <+bridge> [ddnet] <Jupstar âœª> its not formatting xd
21:36 <+bridge> [ddnet] <Ryozuki> do note that
21:36 <+bridge> [ddnet] <Ryozuki> rust-analyzer fails to initialize
21:36 <+bridge> [ddnet] <Ryozuki> on current master
21:36 <+bridge> [ddnet] <Ryozuki> cuz heinrich panics on a missing env
21:37 <+bridge> [ddnet] <Ryozuki> on a build script
21:37 <+bridge> [ddnet] <Jupstar âœª> only if i set formatter to rust
21:37 <+bridge> [ddnet] <Jupstar âœª> but then i obv dont have clang-format
21:37 <+bridge> [ddnet] <Ryozuki> what
21:37 <+bridge> [ddnet] <Ryozuki> just set formatter to rust for rust files
21:37 <+bridge> [ddnet] <Jupstar âœª> how is that option called
21:37 <+bridge> [ddnet] <heinrich5991> can you set the env var I posted in the PR?
21:40 <+bridge> [ddnet] <Ryozuki> its bad
21:40 <+bridge> [ddnet] <Jupstar âœª> ok manually changing setting works
21:40 <+bridge> [ddnet] <Ryozuki> that u ggotta set a env var
21:40 <+bridge> [ddnet] <Ryozuki> default should work
21:40 <+bridge> [ddnet] <Ryozuki> bad dev exp
21:42 <+bridge> [ddnet] <heinrich5991> I explained why there's a tradeoff
21:42 <+bridge> [ddnet] <heinrich5991> can you maybe make your IDE or rust analyzer set a env var by default?
21:42 <+bridge> [ddnet] <heinrich5991> or can I detect that I'm being compiled by rust-analyzer?
21:43 <+bridge> [ddnet] <Jupstar âœª> "Enable all cargo features"
21:43 <+bridge> [ddnet] <Jupstar âœª> 
21:43 <+bridge> [ddnet] <Jupstar âœª> do you think its worth it?
21:45 <+bridge> [ddnet] <heinrich5991> that's about the project, I think
21:45 <+bridge> [ddnet] <heinrich5991> since we don't have any, it shouldn't make a difference
21:45 <+bridge> [ddnet] <Ryozuki> no
21:45 <+bridge> [ddnet] <Ryozuki> set default
21:45 <+bridge> [ddnet] <Ryozuki> settings
21:45 <+bridge> [ddnet] <Ryozuki> well
21:46 <+bridge> [ddnet] <Ryozuki> i disable inlay hints
21:46 <+bridge> [ddnet] <Ryozuki> cuz they are annoying
21:46 <+bridge> [ddnet] <Jupstar âœª> i want best defaults, not maintainers default xd
21:47 <+bridge> [ddnet] <Ryozuki> my defaults is
21:48 <+bridge> [ddnet] <Ryozuki> clippy instead of check
21:48 <+bridge> [ddnet] <Ryozuki> and disable inlay hints
21:48 <+bridge> [ddnet] <Ryozuki> and there is smth about a lru cache
21:48 <+bridge> [ddnet] <Ryozuki> i increased it
21:48 <+bridge> [ddnet] <Ryozuki> cuz i have lot of ram
21:48 <+bridge> [ddnet] <Jupstar âœª> seems like it only supports clippy anyway
21:48 <+bridge> [ddnet] <Ryozuki> its clippy or check
21:48 <+bridge> [ddnet] <Ryozuki> clippy has way more checks
21:48 <+bridge> [ddnet] <Ryozuki> but might be a little slower
21:48 <+bridge> [ddnet] <Ryozuki> on the ms levels tho
21:50 <+bridge> [ddnet] <heinrich5991> clippy has some lints enabled by default that I don't agree with
21:50 <+bridge> [ddnet] <Ryozuki> and i agree with
21:50 <+bridge> [ddnet] <Ryozuki> the lints
21:50 <+bridge> [ddnet] <Ryozuki> strongly
21:50 <+bridge> [ddnet] <Ryozuki> like a cult
21:50 <+bridge> [ddnet] <Ryozuki> mindlessly
21:50 <+bridge> [ddnet] <heinrich5991> how can you say that, without even having seen the ones I complain about?
21:51 <+bridge> [ddnet] <Ryozuki> cuz i like to tease you
21:51 <+bridge> [ddnet] <Ryozuki> xd
21:51 <+bridge> [ddnet] <heinrich5991> kk ^^
21:51 <+bridge> [ddnet] <Ryozuki> but now im curious
21:52 <+bridge> [ddnet] <Ryozuki> looking at lints u can learn lot of stuff tho
21:52 <+bridge> [ddnet] <Ryozuki> there was some about await stuff
21:52 <+bridge> [ddnet] <heinrich5991> e.g. this one didn't seem to make the code clearer in the cases where I saw it fire
21:52 <+bridge> [ddnet] <heinrich5991> https://rust-lang.github.io/rust-clippy/master/index.html#bool_to_int_with_if
21:53 <+bridge> [ddnet] <heinrich5991> they call `as` a coercion
21:53 <+bridge> [ddnet] <heinrich5991> I think that's no coercion
21:53 <+bridge> [ddnet] <Jupstar âœª> @Ryozuki any plugin to have parameter names displayed like this?
21:53 <+bridge> [ddnet] <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1039643792866820106/image.png
21:53 <+bridge> [ddnet] <Ryozuki> those are inlay hints
21:53 <+bridge> [ddnet] <Ryozuki> for parameters
21:53 <+bridge> [ddnet] <heinrich5991> idea does these by default for rust
21:53 <+bridge> [ddnet] <heinrich5991> (if you install the rust plugin)
21:53 <+bridge> [ddnet] <Ryozuki> dont switch to idea
21:54 <+bridge> [ddnet] <Ryozuki> let me find the settings
21:54 <+bridge> [ddnet] <Jupstar âœª> xD
21:54 <+bridge> [ddnet] <Jupstar âœª> i need to enable in vscode btw
21:56 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1039644495974768740/image.png
21:56 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1039644528770027531/image.png
21:56 <+bridge> [ddnet] <Ryozuki> @Not Keks just search inlay hints lol
21:56 <+bridge> [ddnet] <Jupstar âœª> i dont even have rust-analyzer settings lol
21:56 <+bridge> [ddnet] <Ryozuki> install it?
21:57 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1039644736304197662/image.png
21:57 <+bridge> [ddnet] <Jupstar âœª> well i thought its integrated into the rust tool
21:57 <+bridge> [ddnet] <Ryozuki> it is
21:57 <+bridge> [ddnet] <Ryozuki> but vscode has a plugin
21:57 <+bridge> [ddnet] <Ryozuki> it uses the tool
21:57 <+bridge> [ddnet] <Ryozuki> like clangd extension
21:57 <+bridge> [ddnet] <Jupstar âœª> i use vscodium, so its maybe not equally suggested
21:57 <+bridge> [ddnet] <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1039644979754193077/image.png
21:58 <+bridge> [ddnet] <Ryozuki> its that
21:58 <+bridge> [ddnet] <Ryozuki> try it
21:58 <+bridge> [ddnet] <Ryozuki> which one u had then?
21:58 <+bridge> [ddnet] <Ryozuki> xd
21:58 <+bridge> [ddnet] <Jupstar âœª> so the other plugin uninstall?
21:58 <+bridge> [ddnet] <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1039645190509572136/image.png
21:59 <+bridge> [ddnet] <Jupstar âœª> it had more downloads, so i thought its the used one xd
21:59 <+bridge> [ddnet] <Ryozuki> this one is deprecated
21:59 <+bridge> [ddnet] <Ryozuki> on vscode it says deprecated
21:59 <+bridge> [ddnet] <Ryozuki> i guess on vscodium it doesnt for some reason
21:59 <+bridge> [ddnet] <Ryozuki> uninstall it
21:59 <+bridge> [ddnet] <Jupstar âœª> ok
22:06 <+bridge> [ddnet] <Jupstar âœª> ```
22:06 <+bridge> [ddnet] <Jupstar âœª> [ERROR rust_analyzer::lsp_utils] failed to run build scripts
22:06 <+bridge> [ddnet] <Jupstar âœª> 
22:06 <+bridge> [ddnet] <Jupstar âœª> error: failed to run custom build command for `ddnet-test v0.0.1 (/home/jupeyy/Schreibtisch/Teeworlds/DDNet/ddnet_jupeyy/src/rust-bridge/test)`
22:06 <+bridge> [ddnet] <Jupstar âœª> 
22:06 <+bridge> [ddnet] <Jupstar âœª> Caused by:
22:06 <+bridge> [ddnet] <Jupstar âœª>   process didn't exit successfully: `/home/jupeyy/Schreibtisch/Teeworlds/DDNet/ddnet_jupeyy/target/debug/build/ddnet-test-3232940390239a5f/build-script-build` (exit status: 101)
22:06 <+bridge> [ddnet] <Jupstar âœª>   --- stdout
22:06 <+bridge> [ddnet] <Jupstar âœª>   cargo:rerun-if-env-changed=DDNET_TEST_LIBRARIES
22:06 <+bridge> [ddnet] <Jupstar âœª>   cargo:rerun-if-env-changed=DDNET_TEST_NO_LINK
22:06 <+bridge> [ddnet] <Jupstar âœª> 
22:06 <+bridge> [ddnet] <Jupstar âœª>   --- stderr
22:06 <+bridge> [ddnet] <Jupstar âœª>   thread 'main' panicked at 'environment variable DDNET_TEST_LIBRARIES required but not found: NotPresent', src/rust-bridge/test/build.rs:27:14
22:06 <+bridge> [ddnet] <Jupstar âœª>   stack backtrace:
22:06 <+bridge> [ddnet] <Jupstar âœª>      0: rust_begin_unwind
22:06 <+bridge> [ddnet] <Jupstar âœª>                at /rustc/e092d0b6b43f2de967af0887873151bb1c0b18d3/library/std/src/panicking.rs:584:5
22:06 <+bridge> [ddnet] <Jupstar âœª>      1: core::panicking::panic_fmt
22:06 <+bridge> [ddnet] <Jupstar âœª>                at /rustc/e092d0b6b43f2de967af0887873151bb1c0b18d3/library/core/src/panicking.rs:142:14
22:06 <+bridge> [ddnet] <Jupstar âœª>      2: core::result::unwrap_failed
22:06 <+bridge> [ddnet] <Jupstar âœª>                at /rustc/e092d0b6b43f2de967af0887873151bb1c0b18d3/library/core/src/result.rs:1785:5
22:06 <+bridge> [ddnet] <Jupstar âœª>      3: core::result::Result<T,E>::expect
22:06 <+bridge> [ddnet] <Jupstar âœª>                at /rustc/e092d0b6b43f2de967af0887873151bb1c0b18d3/library/core/src/result.rs:1035:23
22:07 <+bridge> [ddnet] <Jupstar âœª>      4: build_script_build::main
22:07 <+bridge> [ddnet] <Jupstar âœª>                at ./build.rs:26:25
22:07 <+bridge> [ddnet] <Jupstar âœª>      5: core::ops::function::FnOnce::call_once
22:07 <+bridge> [ddnet] <Jupstar âœª>                at /rustc/e092d0b6b43f2de967af0887873151bb1c0b18d3/library/core/src/ops/function.rs:248:5
22:07 <+bridge> [ddnet] <Jupstar âœª>   note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
22:07 <+bridge> [ddnet] <Jupstar âœª> 
22:07 <+bridge> [ddnet] <Jupstar âœª> 
22:07 <+bridge> [ddnet] <Jupstar âœª> [ERROR project_model::workspace] cyclic deps: ddnet_engine_shared(CrateId(17)) -> ddnet_engine(CrateId(16)), alternative path: ddnet_engine(CrateId(16)) -> ddnet_engine_shared(CrateId(17))
22:07 <+bridge> [ddnet] <Jupstar âœª> ```
22:07 <+bridge> [ddnet] <Jupstar âœª> what am i doing wrong ryozoozki
22:07 <+bridge> [ddnet] <Jupstar âœª> it doesnt integrate with cmake?
22:07 <+bridge> [ddnet] <Ryozuki> @Not Keks i told u
22:07 <+bridge> [ddnet] <Ryozuki> this is heinrich fault
22:07 <+bridge> [ddnet] <Ryozuki> here is the fix
22:07 <+bridge> [ddnet] <Ryozuki> https://github.com/ddnet/ddnet/pull/6020
22:07 <+bridge> [ddnet] <Jupstar âœª> bro do i look like i understand what u talking about xD
22:07 <+bridge> [ddnet] <Ryozuki> @Not Keks heinrich decided to panic on the build.rs script
22:08 <+bridge> [ddnet] <Ryozuki> which rust-analyzer runs
22:08 <+bridge> [ddnet] <Ryozuki> to check code correctly
22:08 <+bridge> [ddnet] <Ryozuki> a build.rs script is made to link C stuff and more
22:08 <+bridge> [ddnet] <Ryozuki> or compile
22:08 <+bridge> [ddnet] <Ryozuki> C
22:08 <+bridge> [ddnet] <Jupstar âœª> i c
22:08 <+bridge> [ddnet] <Jupstar âœª> then we need it heinrich
22:08 <+bridge> [ddnet] <Ryozuki> yes
22:08 <+bridge> [ddnet] <Ryozuki> we riot
22:08 <+bridge> [ddnet] <Ryozuki> <a:PeepoRiot:933241606218326026>
22:09 <+bridge> [ddnet] <Ryozuki> he wants us to set the env var ourselves
22:09 <+bridge> [ddnet] <Ryozuki> but this is a bad dev experience
22:09 <+bridge> [ddnet] <Jupstar âœª> when i open IDE it must directly give me full tripple A game.. good defaults are important
22:09 <+bridge> [ddnet] <Ryozuki> it should work by default
22:18 <+bridge> [ddnet] <heinrich5991> I talked about the tradeoff
22:18 <+bridge> [ddnet] <heinrich5991> you seem to ignore it in your comments
22:18 <+bridge> [ddnet] <heinrich5991> you also don't respond to my questions
22:18 <+bridge> [ddnet] <heinrich5991> starting here ^
23:04 <+bridge> [ddnet] <Ryozuki> i havent tried yet
23:04 <+bridge> [ddnet] <Ryozuki> im in no code mood
23:04 <+bridge> [ddnet] <Ryozuki> happens at night
23:04 <+bridge> [ddnet] <Ryozuki> tomorrow maybe
23:04 <+bridge> [ddnet] <Ryozuki> i dont think u can detect its rust-analyzer
23:28 <+bridge> [ddnet] <Alexander> wtf do you mean no code mood happens at night
23:28 <+bridge> [ddnet] <Alexander> It's the only time it happens!
23:28 <+bridge> [ddnet] <Alexander> It's the only time it doesn't happen!
23:39 <+bridge> [ddnet] <Learath2> probably a side effect of coding also being your day job ðŸ˜„
23:50 <+bridge> [ddnet] <deen> How did you trigger the crash? Just on server start?
23:51 <+bridge> [ddnet] <deen> and what does the crash look like on terminal?
