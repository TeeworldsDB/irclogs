06:37 < bridge> <kollpotato> guten morgen
07:53 < bridge> <eidderFsT> @0xdeen have you tried reverting the spectator features in 18.9? should be these commits in reverse chrono order.
07:53 < bridge> <eidderFsT> ```
07:53 < bridge> <eidderFsT> fe3984846fbc8e0319c6a407c8f7d353ddda5d8e
07:53 < bridge> <eidderFsT> 9863c0f57e099dbcf2cba0e1f39b014975d9f367
07:53 < bridge> <eidderFsT> abbd20b07cebd8c005b25a42fd55a6655e0fa66a
07:53 < bridge> <eidderFsT> 288a7a3a19e35bde0cd61c92549d5021d15211c9
07:53 < bridge> <eidderFsT> ea9a0a3a9c7947644fd0bba950e08d174c321797
07:53 < bridge> <eidderFsT> ```
07:53 < bridge> <eidderFsT> I tried on master they revert just fine without conflict it seems. but i imagine you need to do it in a 18.9 branch manually.
08:46 < bridge> <kollpotato> gitignore prs ftw
09:35 < bridge> <0xdeen> perfect, thanks
09:50 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1326110668222496818/GgqKj2-WsAAXBba.png?ex=677e3c4d&is=677ceacd&hm=4dbc599db3f8e661cadfe62f2a246e89c6096bb0be86c81ad99693c05ea25f14&
09:50 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1326110720760348754/RTX-5000-1-2025-01-9ebd4a2761eacb069eb2e2f9244065cc-1024x576.png?ex=677e3c59&is=677cead9&hm=bb8ab7eba38bfebff618e985425c49ce0b7bc48737a06da49e97a8e2b8973b49&
09:50 < bridge> <ryozuki> :justatest:
09:50 < bridge> <kollpotato> can it run rust
10:27 < bridge> <louis> how am i meant to get the number of players in team 0? CGameTeams::Count returns 64
10:27 < bridge> <Solly> finally the gradle demon was giving me nightmares
10:28 < bridge> <Solly> loop thru clients 
10:28 < bridge> <Solly> 1. check if connected
10:28 < bridge> <Solly> 2. check if in team
10:29 < bridge> <louis> sounds annoying
10:29 < bridge> <Solly> yep
11:07 < bridge> <zhn> from client?
11:07 < bridge> <louis> server
11:09 < bridge> <zhn> then yep seems bun bun solution is only one to get it right
11:09 < bridge> <zhn> i wonder in what context Count() is being used tho
11:09 < bridge> <zhn> with 64 in t0 xd
11:18 < bridge> <cellegenrih> ah yes, making DLSS a necessity :kek:
11:29 < bridge> <totar> my next gpu upgrade
11:29 < bridge> <totar> https://fxtwitter.com/tsarnick/status/1876470407697772848
11:33 < bridge> <totar> they probably get the intern to develop the gaming gpus these days, they're all too busy making their 3000% margin $10,000,000 single server
12:02 < bridge> <cyberfrighter> imagine he drops it
12:25 < bridge> <totar> Its definitely a dummy or those are chips that were defective off the wafer
12:32 < bridge> <Jupstar âœª> Wtf xddd
12:32 < bridge> <Jupstar âœª> Average GPU to run electron
13:36 < bridge> <cellegenrih> deen moment, ngl he is right tho
13:58 < bridge> <hectavoxel> at least change it to `2013 -     `
14:02 < ws-client> <ChillerDragon> @hectavoxel oh yea including the start year sounds nice
14:02 < ws-client> <ChillerDragon> go send a pr to troll deen
14:02 < bridge> <hectavoxel> cant, have to go to work
14:03 < ws-client> <ChillerDragon> and next year we change it from ``2013 -`` to ``since 2013`` and then in 2027 we change it to ``2013 - today``
14:40 < bridge> <oxyzo.> :greenthing:
14:41 < bridge> <Jupstar âœª> I feel a bit uncomfortable spamming this channel
14:42 < ws-client> <ChillerDragon> dont worry jupstar github webhook is not bridged to irc nobody sees your spam
14:45 < bridge> <ryozuki> atleast ur commits are not "ok" xd
14:45 < bridge> <ryozuki> or some random word
14:45 < bridge> <ryozuki> like i do :justatest:
14:46 < bridge> <hectavoxel> next jupstar commit: "fix"
14:47 < bridge> <pioooooo> push directly and reduce 2/3 of the spam
14:52 < bridge> <Jupstar âœª> believe me the git commit msgs of the last 2 years been "u".
14:52 < bridge> <Jupstar âœª> 
14:52 < bridge> <Jupstar âœª> And I almost created prs with that here too xDD
14:52 < bridge> <Jupstar âœª> muscle memory
14:52 < bridge> <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1326186809373364286/image.png?ex=677e8336&is=677d31b6&hm=1838223b086d1e40837f464084f1da4ff05ba0633bb35278e85771e1a7ab009f&
14:55 < bridge> <ryozuki> xd
14:55 < bridge> <hectavoxel> u
14:55 < bridge> <Jupstar âœª> no u
15:30 < bridge> <ryozuki> https://en.wikipedia.org/wiki/Uniform_Function_Call_Syntax
17:10 < bridge> <ryozuki> https://docs.rs/dispose/latest/dispose/index.html
17:10 < bridge> <ryozuki> @jupeyy_keks check this xd
17:13 < bridge> <Jupstar âœª> I wish rust would support that instead of the current Drop trait ðŸ˜„
17:13 < bridge> <Jupstar âœª> ofc without a wrapper ^^
17:15 < bridge> <Jupstar âœª> `#[non_exhaustive]` is also such a design flaw.. it forces me to ignore future cases
17:15 < bridge> <Jupstar âœª> I cannot understand libraries use it
17:15 < bridge> <Jupstar âœª> I'd prefer a compile time error xd
17:20 < bridge> <reitw> @heinrich5991 hi, is there any issue with master4 ?
17:20 < bridge> <reitw> ```
17:20 < bridge> <reitw> v3royal  | [677d541a][register]: WARNING: Master server is not responding, switching master
17:20 < bridge> <reitw> v3royal  | [677d541a][engine/mastersrv]: refreshing master server addresses
17:20 < bridge> <reitw> v3royal  | [677d541a][register]: refreshing ip addresses
17:20 < bridge> <reitw> v3royal  | [677d541a][engine/mastersrv]: saving addresses
17:21 < bridge> <reitw> v3royal  | [677d541a][register]: fetching server counts
17:21 < bridge> <reitw> v3royal  | [677d541d][register]: chose 'master4.teeworlds.com' as master, sending heartbeats
17:21 < bridge> <reitw> ```
17:21 < bridge> <reitw> No changes on my side
17:21 < bridge> <0xdeen> It has reduced traffic for 1 month now, let me check
17:22 < bridge> <reitw> alright thank you
17:24 < bridge> <reitw> note that this is legacy registering, not https (forgot to mention)
17:25 < bridge> <0xdeen> yes, that was clear from the message
17:25 < bridge> <0xdeen> working now?
17:25 < bridge> <0xdeen> I just restarted it, didn't check where the mastersrv got stuck
17:38 < bridge> <reitw> no clue what is happening, from the tcpdump my server sends a query but no answer:
17:38 < bridge> <reitw> ```
17:38 < bridge> <reitw> 16:38:06.483390 IP (tos 0x10, ttl 63, id 2707, offset 0, flags [DF], proto UDP (17), length 42)
17:38 < bridge> <reitw>     57.129.64.12.8303 > 49.12.97.180.8300: [bad udp cksum 0x0c75 -> 0xd9f7!] UDP, length 14
17:38 < bridge> <reitw>         0x0000:  4510 002a 0a93 4000 3f11 24d3 3981 400c  E..*..@.?.$.9.@.
17:38 < bridge> <reitw>         0x0010:  310c 61b4 206f 206c 0016 0c75 ffff ffff  1.a..o.l...u....
17:38 < bridge> <reitw>         0x0020:  ffff ffff ffff 636f 7532                 ......cou2
17:38 < bridge> <reitw> 16:38:07.483396 IP (tos 0x10, ttl 63, id 2904, offset 0, flags [DF], proto UDP (17), length 42)
17:38 < bridge> <reitw>     57.129.64.12.8303 > 49.12.97.180.8300: [bad udp cksum 0x0c75 -> 0xd9f7!] UDP, length 14
17:38 < bridge> <reitw>         0x0000:  4510 002a 0b58 4000 3f11 240e 3981 400c  E..*.X@.?.$.9.@.
17:38 < bridge> <reitw>         0x0010:  310c 61b4 206f 206c 0016 0c75 ffff ffff  1.a..o.l...u....
17:38 < bridge> <reitw>         0x0020:  ffff ffff ffff 636f 7532                 ......cou2
17:38 < bridge> <reitw> 16:38:08.483403 IP (tos 0x10, ttl 63, id 2993, offset 0, flags [DF], proto UDP (17), length 42)
17:38 < bridge> <reitw>     57.129.64.12.8303 > 49.12.97.180.8300: [bad udp cksum 0x0c75 -> 0xd9f7!] UDP, length 14
17:38 < bridge> <reitw>         0x0000:  4510 002a 0bb1 4000 3f11 23b5 3981 400c  E..*..@.?.#.9.@.
17:38 < bridge> <reitw>         0x0010:  310c 61b4 206f 206c 0016 0c75 ffff ffff  1.a..o.l...u....
17:38 < bridge> <reitw>         0x0020:  ffff ffff ffff 636f 7532                 ......cou2
17:38 < bridge> <reitw> 16:38:09.483377 IP (tos 0x10, ttl 63, id 3233, offset 0, flags [DF], proto UDP (17), length 44)
17:38 < bridge> <reitw>     57.129.64.12.8303 > 49.12.97.180.8300: [bad udp cksum 0x0c77 -> 0xce8e!] UDP, length 16
17:38 < bridge> <reitw>         0x0000:  4510 002c 0ca1 4000 3f11 22c3 3981 400c  E..,..@.?.".9.@.
17:38 < bridge> <reitw>         0x0010:  310c 61b4 206f 206c 0018 0c77 ffff ffff  1.a..o.l...w....
17:39 < bridge> <reitw>         0x0020:  ffff ffff ffff 6265 6132 206f            ......bea2.o
17:39 < bridge> <reitw> ```
17:39 < bridge> <reitw> 10sec after it retries
17:40 < bridge> <reitw> with an mtr I can reach to the end (tho I don't have an answer from the master server I guess as it doesn't know how to answer)
18:05 < bridge> <0xdeen> damn, then we have to check closer. iptables was clean so my only other guess is that the hoster might be blocking traffic
18:10 < bridge> <kebscs> whats SpecChar
18:11 < bridge> <kebscs> seem to always be 0
18:12 < bridge> <ryozuki> i think on a server with spec enabled
18:12 < bridge> <ryozuki> its the circle char
18:12 < bridge> <ryozuki> but im probs wrong
18:12 < bridge> <ryozuki> back then i think i implemented the spec char :justatest:
18:13 < bridge> <kebscs> ah yea the outline
18:52 < bridge> <0xdeen> I checked tcpdump and the packets come in and the responses go out:
18:52 < bridge> <0xdeen> ```
18:52 < bridge> <0xdeen> 18:51:40.729306 eth0  In  IP bw.reitw.fr.8305 > master.ddnet.org.8300: UDP, length 16
18:52 < bridge> <0xdeen> 18:51:40.744488 eth0  In  IP bw.reitw.fr.8306 > master.ddnet.org.8300: UDP, length 16
18:52 < bridge> <0xdeen> 18:51:40.750681 eth0  In  IP bw.reitw.fr.8304 > master.ddnet.org.8300: UDP, length 16
18:52 < bridge> <0xdeen> 18:51:41.540856 eth0  Out IP master.ddnet.org.8300 > bw.reitw.fr.8307: UDP, length 14
18:52 < bridge> <0xdeen> 18:51:41.550004 eth0  Out IP master.ddnet.org.8300 > bw.reitw.fr.8305: UDP, length 14
18:52 < bridge> <0xdeen> 18:51:41.550048 eth0  Out IP master.ddnet.org.8300 > bw.reitw.fr.8304: UDP, length 14
18:52 < bridge> <0xdeen> 18:51:41.550108 eth0  Out IP master.ddnet.org.8300 > bw.reitw.fr.8306: UDP, length 14
18:52 < bridge> <0xdeen> ```
18:52 < bridge> <0xdeen> Maybe something on OVH side blocking it?
18:53 < bridge> <0xdeen> Oooh, 8303 is missing!
18:53 < bridge> <0xdeen> I'll ask our hoster
18:54 < bridge> <zhn> why my 1 day ddnet rs pr has merge conflicts already xd
18:58 < bridge> <0xdeen> @reitw is the server even running? I can't connect to it on 8303, so seems like a problem on your side
19:01 < bridge> <Ewan> he cooks
19:02 < bridge> <reitw> yes that's ovh
19:02 < bridge> <reitw> forgot to notify you sorry
19:02 < bridge> <reitw> someone is having fun since yesterday apparently, whenever i change my port to fix the issue he targets it
19:49 < bridge> <Solly> wait theres a difference ebtween ddrace and ddnet
19:50 < bridge> <Solly> i thought ddrace was just the gamemode and ddnet a thing that hosts alot of it which happens to have a client
19:50 < bridge> <Solly> or is 2011 when the client became a thing
20:05 < ChillerDragon> ``time ./DDNet quit``
20:05 < ChillerDragon> ``real    0m40.904s``
20:05 < ChillerDragon> i still miss the times quitting ddnet was instant tbh
20:06 < ChillerDragon> my internet bugged and i couldn't close the client anymore -.-
20:06 < bridge> <Jupstar âœª> Do same test with rs
20:06 < bridge> <inv41idu53rn4m3> DDNet is also the server software, the most relevant implementation of DDRace
20:08 < ChillerDragon> my internet is now back so its ddnet ``real    0m2.060s`` vs ddnet-rs ``real    0m1.569s``
20:08 < bridge> <hectavoxel> too slow. close the window and do all the calculation afterwards
20:18 < bridge> <Jupstar âœª> waat, is that a debug build? xd
20:19 < ChillerDragon> yes debug
20:26 < bridge> <Solly> i remember instant closing then the next time i updated it was a couple of seconds
20:26 < bridge> <Solly> why is ... that
20:26 < bridge> <Jupstar âœª> very simple, we cannot cancel http requests
20:27 < bridge> <Jupstar âœª> and since file writing and requests use the same tasks handler
20:27 < bridge> <Jupstar âœª> they must be handled, bcs file writing must succeed
20:28 < bridge> <inv41idu53rn4m3> "must succeed" :justatest:
20:37 < bridge> <Ewan> why canâ€™t you fork there and at least close the window?
20:38 < bridge> <robyt3> Some jobs still use the graphics
20:39 < bridge> <robyt3> And Windows can't fork
20:41 < bridge> <Ewan> just CHttpJobs or whatever?
20:41 < bridge> <Ewan> those seem to be the culprits
20:42 < bridge> <Ewan> they can also be changed to be conscious of the game state so if itâ€™s been forked while blocked by http request then it will just quit immediately without graphics calls
20:42 < bridge> <Ewan> but yea idk about windows
20:42 < bridge> <Ewan> there must be a similar mechanism
20:42 < bridge> <Ewan> it would work on mingw but that isnâ€™t a real solution
20:43 < bridge> <Ewan> those seem to be the culprit
20:52 < bridge> <robyt3> All image loading jobs, like those for skins, need to stop before the graphics can be shutdown
20:53 < bridge> <robyt3> Cygwin implements fork on Windows but it's a lot slower, that's also why `make` is slower on Windows IIRC
20:53 < bridge> <Jupstar âœª> `http: https://master3.ddnet.org/ddnet/15/servers.json failed. libcurl error (42): Callback aborted`
20:54 < bridge> <robyt3> yeah, but it's up to curl to cancel it
20:54 < bridge> <Jupstar âœª> i see, but it's weird that it doesnt work for chiller
20:54 < bridge> <robyt3> cancelation will only go though when there is progress AFAIK, so if there is zero progress than the cancelation doesn't work
20:54 < bridge> <Jupstar âœª> ðŸ˜®
20:54 < bridge> <Jupstar âœª> rip
20:54 < bridge> <robyt3> cancelation will only go through when there is progress AFAIK, so if there is zero progress than the cancelation doesn't work
20:55 < bridge> <hectavoxel> what would ddnet be like if it just killed all windows support
20:55 < bridge> <Jupstar âœª> a 4D game
20:55 < bridge> <robyt3> Probably less alive, since more than 90% of players use windows
20:56 < bridge> <robyt3> (probably, I don't have any stats)
21:27 < bridge> <kollpotato> ChillerDragon: i think i'm gonna stick to writing a teeworlds protocol library in rust, a whole server is too much lmao
21:28 < bridge> <kollpotato> i think i will still continue making the server but not in bevy
21:28 < bridge> <kollpotato> and it will not be a priority
21:29 < bridge> <Ewan> You can wait for those, or use an alternative solution
21:30 < bridge> <Ewan> i speak of libwinpthread which is independent of cygwin, not sure about its performance but i dont think it should matter too much in this instance
21:35 < bridge> <Jupstar âœª> @hectavoxel this guarantees the skin sounds are loaded btw
21:36 < bridge> <Jupstar âœª> usually the map loading is the slowest anyway
21:36 < bridge> <Jupstar âœª> for ctf1 maybe not xdd
21:43 < bridge> <hectavoxel> ðŸ”¥
22:19 < ws-client> <ChillerDragon> arent you using libtw2? so the lib is done or what is missing @kollpotato 
22:27 < bridge> <Solly> but that would only increase stop time when there are http jobs and most of the time when im closing its after the windows been idle for a while or in game the time is also pretty consistent
22:27 < bridge> <Solly> and why cant you cancel them, curl surely lets you do that, you can just delete the file it was writing to
22:28 < bridge> <Solly> ah
22:29 < bridge> <Solly> i mean its better than no cancellation
