15:55 <+bridge> [ddnet] <Bojidar Marinov> what about using re.split? E.g.:
15:55 <+bridge> [ddnet] <Bojidar Marinov> ```python
15:55 <+bridge> [ddnet] <Bojidar Marinov> import re, itertools
15:55 <+bridge> [ddnet] <Bojidar Marinov> func deslugify4(name):
15:55 <+bridge> [ddnet] <Bojidar Marinov>     x = re.split('-([\d]+)-', 'bob-95-fasul')
15:55 <+bridge> [ddnet] <Bojidar Marinov>     return ''.join(
15:55 <+bridge> [ddnet] <Bojidar Marinov>         n + chr(int(i))
15:55 <+bridge> [ddnet] <Bojidar Marinov>         for (n, i) in zip(x[::2], x[1::2])
15:55 <+bridge> [ddnet] <Bojidar Marinov>     ) + (x[-1] if len(x) % 2 == 1 else '')
15:55 <+bridge> [ddnet] <Bojidar Marinov> ```
15:55 <+bridge> [ddnet] <Bojidar Marinov> Or, longer and likely more understandable:
15:56 <+bridge> [ddnet] <Bojidar Marinov> what about using re.split? E.g.:
15:56 <+bridge> [ddnet] <Bojidar Marinov> ```python
15:56 <+bridge> [ddnet] <Bojidar Marinov> import re, itertools
15:56 <+bridge> [ddnet] <Bojidar Marinov> func deslugify4(name):
15:56 <+bridge> [ddnet] <Bojidar Marinov>     x = re.split('-([\d]+)-', name)
15:56 <+bridge> [ddnet] <Bojidar Marinov>     return ''.join(
15:56 <+bridge> [ddnet] <Bojidar Marinov>         n + chr(int(i))
15:56 <+bridge> [ddnet] <Bojidar Marinov>         for (n, i) in zip(x[::2], x[1::2])
15:56 <+bridge> [ddnet] <Bojidar Marinov>     ) + (x[-1] if len(x) % 2 == 1 else '')
15:56 <+bridge> [ddnet] <Bojidar Marinov> ```
15:56 <+bridge> [ddnet] <Bojidar Marinov> Or, longer and likely more understandable:
15:56 <+bridge> [ddnet] <Bojidar Marinov> ```python
15:56 <+bridge> [ddnet] <Bojidar Marinov> func deslugify4(name):
15:56 <+bridge> [ddnet] <Bojidar Marinov>     result = ''
15:56 <+bridge> [ddnet] <Bojidar Marinov>     for (i, part) in enumerate(re.split('-([\d]+)-', name)):
15:56 <+bridge> [ddnet] <Bojidar Marinov>         if i % 2 == 0:
15:56 <+bridge> [ddnet] <Bojidar Marinov>             result += part
15:57 <+bridge> [ddnet] <Bojidar Marinov>         else:
15:57 <+bridge> [ddnet] <Bojidar Marinov>             result += chr(int(part))
15:57 <+bridge> [ddnet] <Bojidar Marinov>     return result
15:57 <+bridge> [ddnet] <Bojidar Marinov> ```
15:57 <+bridge> [ddnet] <Bojidar Marinov> what about using re.split? E.g.:
15:57 <+bridge> [ddnet] <Bojidar Marinov> ```python
15:57 <+bridge> [ddnet] <Bojidar Marinov> import re, itertools
15:57 <+bridge> [ddnet] <Bojidar Marinov> func deslugify4(name):
15:57 <+bridge> [ddnet] <Bojidar Marinov>     x = re.split('-([\d]+)-', name)
15:57 <+bridge> [ddnet] <Bojidar Marinov>     return ''.join(
15:57 <+bridge> [ddnet] <Bojidar Marinov>         n + unichr(int(i))
15:57 <+bridge> [ddnet] <Bojidar Marinov>         for (n, i) in zip(x[::2], x[1::2])
15:57 <+bridge> [ddnet] <Bojidar Marinov>     ) + (x[-1] if len(x) % 2 == 1 else '')
15:57 <+bridge> [ddnet] <Bojidar Marinov> ```
15:57 <+bridge> [ddnet] <Bojidar Marinov> Or, longer and likely more understandable:
15:57 <+bridge> [ddnet] <Bojidar Marinov> ```python
15:57 <+bridge> [ddnet] <Bojidar Marinov> func deslugify4(name):
15:57 <+bridge> [ddnet] <Bojidar Marinov>     result = ''
15:57 <+bridge> [ddnet] <Bojidar Marinov>     for (i, part) in enumerate(re.split('-([\d]+)-', name)):
15:57 <+bridge> [ddnet] <Bojidar Marinov>         if i % 2 == 0:
15:57 <+bridge> [ddnet] <Bojidar Marinov>             result += part
15:57 <+bridge> [ddnet] <Bojidar Marinov>         else:
15:57 <+bridge> [ddnet] <Bojidar Marinov>             result += unichr(int(part))
15:57 <+bridge> [ddnet] <Bojidar Marinov>     return result
15:57 <+bridge> [ddnet] <Bojidar Marinov> ```
16:02 <+bridge> [ddnet] <deen> yeah, that should have nicer performance
16:31 <+bridge> [ddnet] <Learath2> @deen what was the issue with recvmmsg?
16:34 <+bridge> [ddnet] <deen> it seemed to work but was more complex and didn't seem to offer any performance for the attacks we had at that time
20:13 <+bridge> [ddnet] <Jupstar âœª> @Lexin what was your CPU btw?
20:56 <+bridge> [ddnet] <Lexin> trash
20:56 <+bridge> [ddnet] <Lexin> some sort of notebook i5
21:13 <+bridge> [ddnet] <Jupstar âœª> @Lexin  ever tried to make energy option to max. performance in windows settings?
21:20 <+bridge> [ddnet] <Lexin> yeah, i have that
