10:39 <+bridge> [ddnet] <ChillerDragon> I have a variable representing money and it is a sqlite3_uint64 and the compiler yells at me when i compare it against signed integers which makes sense.. but I am not sure how to fix it.
10:40 <+bridge> [ddnet] <Ryozuki> u should tell what it yells
10:40 <+bridge> [ddnet] <ChillerDragon> I was thinking about converting the normal integers to unsigned as well by creating a new variable for the comparison.
10:40 <+bridge> [ddnet] <ChillerDragon> The compiler says comparision between signed and unsigned int
10:41 <+bridge> [ddnet] <Ryozuki> hm
10:41 <+bridge> [ddnet] <Ryozuki> u should decide to cast one
10:41 <+bridge> [ddnet] <Ryozuki> either the signed or the unsigned
10:41 <+bridge> [ddnet] <Ryozuki> i guess
10:42 <+bridge> [ddnet] <ChillerDragon> yea
10:42 <+bridge> [ddnet] <ChillerDragon> but how to cast xd
10:42 <+bridge> [ddnet] <ChillerDragon> in the ifstatment?
10:42 <+bridge> [ddnet] <Ryozuki> r u in c
10:42 <+bridge> [ddnet] <Ryozuki> or c++
10:42 <+bridge> [ddnet] <ChillerDragon> c++
10:42 <+bridge> [ddnet] <ChillerDragon> tw
10:42 <+bridge> [ddnet] <Ryozuki> well
10:42 <+bridge> [ddnet] <Ryozuki> i guess u hate modern
10:42 <+bridge> [ddnet] <Ryozuki> so
10:42 <+bridge> [ddnet] <ChillerDragon> xd
10:42 <+bridge> [ddnet] <Ryozuki> (int)
10:43 <+bridge> [ddnet] <ChillerDragon> ya thought so
10:43 <+bridge> [ddnet] <Ryozuki> in modern i think it would be static_cast<int>()
10:43 <+bridge> [ddnet] <Ryozuki> xd
10:43 <+bridge> [ddnet] <ChillerDragon> but can that casting mess something up
10:43 <+bridge> [ddnet] <Ryozuki> well yes
10:43 <+bridge> [ddnet] <ChillerDragon> i mean it is money
10:43 <+bridge> [ddnet] <Ryozuki> u should then just store money in signed
10:43 <+bridge> [ddnet] <ChillerDragon> so i shouldnt fuck that up or fokko exploits the shit of mi server
10:43 <+bridge> [ddnet] <Ryozuki> if it gives u so much trouble
10:43 <+bridge> [ddnet] <Ryozuki> not like u will have max int money
10:43 <+bridge> [ddnet] <Ryozuki> or just use a long
10:44 <+bridge> [ddnet] <ChillerDragon> but longs are so small
10:44 <+bridge> [ddnet] <Ryozuki> no they arent
10:44 <+bridge> [ddnet] <ChillerDragon> how to fit in the money of rich ppl
10:44 <+bridge> [ddnet] <Ryozuki> +9,223,372,036,854,775,807
10:44 <+bridge> [ddnet] <Ryozuki> its not small
10:44 <+bridge> [ddnet] <ChillerDragon> thats a long?
10:45 <+bridge> [ddnet] <Ryozuki> ye
10:45 <+bridge> [ddnet] <ChillerDragon> that looks kinda good
10:45 <+bridge> [ddnet] <Ryozuki> https://en.wikibooks.org/wiki/C_Programming/limits.h
10:45 <+bridge> [ddnet] <ChillerDragon> i thought when i looked the last time it showed a smaller number
10:45 <+bridge> [ddnet] <ChillerDragon> but the thing is i thought ill be saver with unsigned since nobody should ever have negative money
10:46 <+bridge> [ddnet] <Ryozuki> if u handle ur logic correctly
10:46 <+bridge> [ddnet] <Ryozuki> then no one will have negative
10:46 <+bridge> [ddnet] <Ryozuki> and in real world is possible to have negative money btw
10:46 <+bridge> [ddnet] <Ryozuki> when u owe shit
10:46 <+bridge> [ddnet] <ChillerDragon> meh i thing i switch back to long
10:46 <+bridge> [ddnet] <ChillerDragon> wait or isnt the long long? or int64
10:46 <+bridge> [ddnet] <ChillerDragon> wasnt that bigger
10:47 <+bridge> [ddnet] <ChillerDragon> or less supportet? idk
10:47 <+bridge> [ddnet] <Ryozuki> long and long int are identical. So are long long and long long int. In both cases, the int is optional.
10:47 <+bridge> [ddnet] <Ryozuki> 
10:47 <+bridge> [ddnet] <Ryozuki> As to the difference between the two sets, the C++ standard mandates minimum ranges for each, and that long long is at least as wide as long.
10:47 <+bridge> [ddnet] <Ryozuki> from stackoverflow
10:47 <+bridge> [ddnet] <Ryozuki> https://stackoverflow.com/questions/18971732/what-is-the-difference-between-long-long-long-long-int-and-long-long-i/37563374
10:48 <+bridge> [ddnet] <Ryozuki> long is a int64
10:49 <+bridge> [ddnet] <Ryozuki> Long and long int are at least 32 bits.
10:49 <+bridge> [ddnet] <Ryozuki> 
10:49 <+bridge> [ddnet] <Ryozuki> long long and long long int are at least 64 bits.
10:49 <+bridge> [ddnet] <Ryozuki> but if ur compiler is 64bit long will probs be 64bit
10:49 <+bridge> [ddnet] <ChillerDragon> i guess ill use int64 then xd
10:49 <+bridge> [ddnet] <ChillerDragon> how it was before
10:49 <+bridge> [ddnet] <Ryozuki> ?
10:49 <+bridge> [ddnet] <Ryozuki> it has been always like this
10:50 <+bridge> [ddnet] <ChillerDragon> i mean that datatype i used before
10:50 <+bridge> [ddnet] <ChillerDragon> was int64 so ill go back to that
10:50 <+bridge> [ddnet] <ChillerDragon> i replaced it with sqlite3_uint64 at some point uz i thought i was smart
10:50 <+bridge> [ddnet] <ChillerDragon> xd
10:50 <+bridge> [ddnet] <Ryozuki> @ChillerDragon https://en.cppreference.com/w/cpp/header/cstdint
10:59 <+bridge> [ddnet] <ChillerDragon> ty ryo
10:59 <+bridge> [ddnet] <ChillerDragon> 10/10 search engine as always
11:11 <+bridge> [ddnet] <ChillerDragon> /q
11:11 <+bridge> [ddnet] <ChillerDragon> /quit
11:11 <+bridge> [ddnet] <ChillerDragon> meh how to close discord xd
11:19 <+bridge> [ddnet] <Gwendal> ctrl shift q
14:09 <+bridge> [ddnet] <heinrich5991> @Ryozuki long is 32 bit on 32 bit systems and on 64 bit windows
14:09 <+bridge> [ddnet] <heinrich5991> use explicitly sized types instead (`int64_t`)
14:09 <+bridge> [ddnet] <Ryozuki> ye thats what i said
14:09 <+bridge> [ddnet] <heinrich5991> woops
14:09 <+bridge> [ddnet] <Ryozuki> Long and long int are at least 32 bits.
14:09 <+bridge> [ddnet] <Ryozuki> 
14:10 <+bridge> [ddnet] <Ryozuki> long long and long long int are at least 64 bits.
14:10 <+bridge> [ddnet] <Ryozuki> right?
14:10 <+bridge> [ddnet] <heinrich5991> in practice, that's right I think
14:12 <+bridge> [ddnet] <heinrich5991> uh, apparently it's even guaranteed by the standard
14:12 <+bridge> [ddnet] <heinrich5991> but just specify the bit width explicitly ðŸ˜‰
14:18 <+bridge> [ddnet] <heinrich5991> Note: as with all type specifiers, any order is permitted: `unsigned long long int` and `long int unsigned long` name the same type.
15:29 <+bridge> [ddnet] <Learath2> C11 adds long long int, it is guaranteed to fit 64bits
15:29 <+bridge> [ddnet] <Learath2> Oh already answered
