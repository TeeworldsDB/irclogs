00:55 < bridge> <sollybunny> ```c
00:55 < bridge> <sollybunny> // handle key presses
00:55 < bridge> <sollybunny>     Input()->ConsumeEvents([&](const IInput::CEvent &Event) {
00:55 < bridge> <sollybunny>         for(auto &pComponent : m_vpInput)
00:55 < bridge> <sollybunny>         {
00:55 < bridge> <sollybunny>             // Events with flag `FLAG_RELEASE` must always be forwarded to all components so keys being
00:55 < bridge> <sollybunny>             // released can be handled in all components also after some components have been disabled.
00:55 < bridge> <sollybunny>             if(pComponent->OnInput(Event) && (Event.m_Flags & ~IInput::FLAG_RELEASE) != 0)
00:55 < bridge> <sollybunny>                 break;
00:55 < bridge> <sollybunny>         }
00:55 < bridge> <sollybunny>     });
00:55 < bridge> <sollybunny> ```
00:55 < bridge> <sollybunny> apparently pComponenet is null?
00:55 < bridge> <sollybunny> ```c
00:55 < bridge> <sollybunny> 0 0x5918ce7c1ed8 in CBinds::CBindsSpecial::OnInput(IInput::CEvent const&) /home/solly/Games/ddnet/src/game/client/components/binds.cpp:24:20
00:55 < bridge> <sollybunny>     #1 0x5918cf03f115 in CGameClient::OnUpdate()::$_0::operator()(IInput::CEvent const&) const /home/solly/Games/ddnet/src/game/client/gameclient.cpp:456:19
00:55 < bridge> <sollybunny> ```
00:55 < bridge> <sollybunny> ```
00:56 < bridge> <sollybunny> ==179819==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5918ce7c1ed8 bp 0x7ffd2cbbe5d0 sp 0x7ffd2cbbe4d0 T0)
00:56 < bridge> <sollybunny> ==179819==The signal is caused by a READ memory access.
00:56 < bridge> <sollybunny> ```
00:57 < bridge> <sollybunny> ah yes
00:57 < bridge> <sollybunny> i deleted some code that i didnt mean 2
01:01 < bridge> <sollybunny> ```c
01:01 < bridge> <sollybunny> MASK2GOT: 0
01:01 < bridge> <sollybunny> MASK: 0
01:01 < bridge> <sollybunny> MASK: 0
01:01 < bridge> <sollybunny> PROCESING: 0 0 0
01:01 < bridge> <sollybunny> MASK: 0
01:01 < bridge> <sollybunny> MASK2GOT: 0
01:01 < bridge> <sollybunny> MASK: 0
01:01 < bridge> <sollybunny> MASK: 0
01:01 < bridge> <sollybunny> PROCESING: 0 0 0
01:01 < bridge> <sollybunny> MASK: 0
01:01 < bridge> <sollybunny> MASK2GOT: 0
01:01 < bridge> <sollybunny> MASK: 0
01:01 < bridge> <sollybunny> MASK: 0
01:01 < bridge> <sollybunny> PROCESING: 0 0 0
01:01 < bridge> <sollybunny> MASK: 0
01:01 < bridge> <sollybunny> ```
01:01 < bridge> <sollybunny> debugging b like
01:14 < bridge> <sollybunny> would it be an idea to change it so it does?
01:15 < bridge> <sollybunny> ```c
01:15 < bridge> <sollybunny> static char* useafterfree = (char *)malloc(1);
01:15 < bridge> <sollybunny>     free(useafterfree);
01:15 < bridge> <sollybunny>     *useafterfree = 0;
01:15 < bridge> <sollybunny> ```
01:15 < bridge> <sollybunny> idk what the best way to do it is x-x
01:24 < bridge> <sollybunny> abort() just sends sigill or sigbreak to itself
01:24 < bridge> <sollybunny> for post mortem debug
01:25 < bridge> <sollybunny> idk if asan still allows post mortem debug in the same way
01:25 < bridge> <sollybunny> if it catches something
01:34 < bridge> <sollybunny> https://youtu.be/WaM8_Bllaf0
01:59 < bridge> <peter0x44> It does, the default options really hinder it though
02:02 < bridge> <peter0x44> ```
02:02 < bridge> <peter0x44> export ASAN_OPTIONS=abort_on_error=1:halt_on_error=1
02:02 < bridge> <peter0x44> export UBSAN_OPTIONS=abort_on_error=1:halt_on_error=1
02:02 < bridge> <peter0x44> ```
02:02 < bridge> <peter0x44> This gives you the sensible behavior rather than existing in a rather useless way
02:02 < bridge> <peter0x44> This gives you the sensible behavior rather than exiting in a rather useless way
02:05 < bridge> <peter0x44> There is also -fsanitize-trap which works without any runtime libs at all
02:26 < bridge> <sollybunny> y r u here
02:43 < ws-client> <ChillerDragon> @peter0x44 do you play ddnet?
03:33 < bridge> <woidless> ChillerDragon and how do you feel about the fact that I, according to Kisao, "fake" your mod. Like, I have a type of "SlowNet" on the server that corresponds to the theme of the server. And Kisao says that I should use the most diffolt type
03:48 < bridge> <sollybunny> ^ wtf does this mean?
03:56 < bridge> <woidless> It's just that the owner of TeeSports thinks that I'm kind of hiding the fact that I use DDnetPP. Like I have a SlowNet type on my server , and he thinks that I'm just using another type of server , hiding the fact that I use DDNetPP
03:57 < bridge> <sollybunny> ^ this doesnt make it any clearer ng;
03:57 < bridge> <sollybunny> ^ this doesnt make it any clearer ngl
03:58 < bridge> <sollybunny> owner of TeeSports = Kisao
03:58 < bridge> <sollybunny> you set the type to SlowNet, but the mod is just a ddrace with tunings on server settings
03:58 < bridge> <sollybunny> kisao thinks youre hiding that youre using ddnetpp?
03:59 < bridge> <sollybunny> cant u do slownet with just default ddnet server
04:05 < ws-client> <ChillerDragon> @woidless I created and published ddnet++ for it to be used. I appreciate credits a lot but I do not require them. Also setting the gametype is a ddnet++ feature that was also added to be used.
04:07 < ws-client> <ChillerDragon> But yes I agree with Kisao to some degree that it is a bit weird. Historically gametypes convey the meaning of which gamemode and usually also which code base is running on the server. So changing the gametype without changing anything else has a bit of a master server click bait vibe to it because it looks like it is a brand new modification when in reality it is not.
04:09 < ws-client> <ChillerDragon> It is a bit sketchy to me but I am also just conservative. Because one could also argue that the gametype is about informing the users about their gameplay experience and then SlowNet is quite descriptive even if there is no custom code. Anyways I added that feature for you and from my side feel free to set whatever gametype.
04:11 < ws-client> <ChillerDragon> It is not like you went into the code and removed my name from the credits. Which by the way is something Kisao did. He modified DDNet++ and removed me from /credits and /info and the ddnet++ welcome version message.
04:13 < ws-client> <ChillerDragon> I never complained about that because he also extended ddnet++ and added some russian translations and a few more commands so it now became his modification. That is what ddnet++ is for as a starting point for your mod so that people do not have to reinvent the wheel all the time. Still it makes me a bit sad to be wiped entirely from the credits since clout is the only payment i receive for this work.
04:24 < bridge> <woidless> Great, I hope at least now Kisao will leave me alone about the type of server.
04:25 < bridge> <woidless> ChillerDragon, how do you feel about the fact that I can tell you every day I ask you to do something
04:34 < bridge> <zhn> we all knew it chiller, rip
04:35 < bridge> <zhn> and since when kisao is owner of teesports xd
04:40 < bridge> <woidless> And who is he?
05:06 < ws-client> <ChillerDragon> @woidless dont worry ask away i will tell you when i dont want to do something
05:19 < bridge> <woidless> Thanks
05:49 < bridge> <tsfreddie> https://cdn.discordapp.com/attachments/293493549758939136/1307568170344644669/Image_236172927976469.jpg?ex=673ac741&is=673975c1&hm=179e7dedf01ca97df064d471330f005466c38442a9721b808c0d8cf07c1cb9cf&
06:24 < Voxel_> Ohhh this is getting annoying now
06:25 < Voxel_> Sprites are so dependant in DDNet that trying to remove even a little of them breaks everything
06:25 < Voxel_> Like, what do you mean `weapon = WeaponSpec(container, "hammer")` completely relies on the original sprite?
07:36 < bridge> <louis> how else would you define the weaponspec?
07:37 < bridge> <louis> you could probably create a fallback texture in case the original sprite isn't found
07:38 < bridge> <louis> seems annoying to work w the python generated code in general though
08:51 < ws-client> <ChillerDragon> @Sedonya u here?
09:01 < bridge> <milkeeycat> @sedonya ^
09:01 < ws-client> <ChillerDragon> ty
09:04 < bridge> <sedonya> good morning
09:04 < ws-client> <ChillerDragon> ok nice
09:04 < ws-client> <ChillerDragon> go check wire
09:05 < bridge> <sedonya> I saw your msg a long time ago, but it seems like I haven't worked with git enough and don't understand how to move commit history over
10:19 < bridge> <woidless> When people vote on a server with 128 slots, the wrong person kicks at all.
11:26 < bridge> <robyt3> They would still have to be defined in code. We also want to ensure that users' assets have the correct aspect ratio.
11:27 < bridge> <robyt3> I'd vote for moving the sprite code away from being generated with python if that makes it easier
11:43 < bridge> <kollpotato> ChillerDragon: I have found another typo in the 0.7 documentation, NETMSG_MAP_CHANGE is sent by the server xd
11:43 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1307657246708203550/image.png?ex=673b1a36&is=6739c8b6&hm=def160b26d4ce061180381d6e7e9da9c7e91b8944fd8f494edb09b4e807f6da0&
12:01 < ws-client> <ChillerDragon> @kollpotato go send pr and earn a contributor badge for html programming skills https://github.com/ChillerDragon/teeworlds-protocol/blob/d3a985e21f9903c421bf106fde812c23f0f6daa0/07/system_messages.html#L202-L205
13:11 < ws-client> <Sedonya> omg
13:28 < bridge> <kollpotato> done :D
13:54 < bridge> <Assa> I have seen a video about `zlib` and `zstd` might be an endevour to check if this could improve data bandwidth since ddnet and teeworlds is using `zlib` for network compression
13:56 < bridge> <Assa> but I guess I would just break the netcode or backwards compatibility, however newer clients could switch to low bandwidth communication
13:56 < bridge> <woidless> ChillerDragon When people vote on a server with 128 slots, the wrong person kicks at all.
14:00 < bridge> <borsmatyas02> can you make a server where bots are allowed?
14:01 < bridge> <cyberfrighter> no
14:14 < bridge> <Assa> you can host your own server where bots are allowed
15:02 < ws-client> <ChillerDragon> @borsmatyas02 what kind of bots? The block servers I host tolarate a few bots 88.198.96.203:8303 and 88.198.96.203:8306
15:05 < ws-client> <ChillerDragon> @woidless If i were to allocate time for 128 stuff I would start by adding client support but I don't have the energy for that in the forseeable future
15:05 < ws-client> <ChillerDragon> so you can keep the 128 player server bugs for now. It is an experimental feature branch with no support.
15:08 < ws-client> <ChillerDragon> @Assa zlib for network compression? You mean in maps? Idk the map format much but i assume it could affect the map download process. But either way map or network protocol changes break backwards compatibility. Then old clients can't load the map anymore.
15:09 < ws-client> <ChillerDragon> I think it would be nice if the client and server could negotiate compression algorithms like browsers do it. So a client could say it supports no compression and the server is forced to not use huffman at all. And the client could also ask the server for brotli and if the server supports that it will be used.
15:10 < ws-client> <ChillerDragon> It is backwards compatible but it adds complexity. Probably the wrong time for such proposal with quic and ddpg in the pipeline.
15:16 < bridge> <Assa> this is what I meant
15:17 < bridge> <Assa> Yeah, I just wanted to throw that into the room
15:20 < ws-client> <ChillerDragon> i guess since http map downloads are already a thing and its using libcurl we are probably optimizing the download speed quite well already given that the server support map downloads
16:46 < bridge> <Assa> do we use zlib only for map downloads and not for regular networking?
16:57 < bridge> <robyt3> No, zlib compression isn't fast enough I assume
16:57 < bridge> <Assa> okay, then throw this idea in the trashbin ^^
18:32 < bridge> <byfox> Hi all, can you tell me how to create a server binary for windows with sql support?
18:32 < bridge> <byfox> 
18:32 < bridge> <byfox> 112 error..
18:37 < bridge> <byfox> There is a lot of white in the screenshot
18:37 < bridge> <byfox> 
18:37 < bridge> <byfox> I'm sorry I can't text
18:37 < bridge> <byfox> https://cdn.discordapp.com/attachments/293493549758939136/1307761589986005032/SPOILER_image-1.png?ex=673b7b64&is=673a29e4&hm=3832fd1df22be1592b95b45f016b6785d0b0940394843ac47c5916b845b1c6c9&
18:44 < bridge> <gqzrbexa0_01047> hi, if I cut out the check on sv_test_cmds so that the commands always work, is this against the rules?
18:56 < bridge> <diariesvexar> nope it's fine you can do it on your own private servers
19:00 < bridge> <gqzrbexa0_01047> and if I give in to the community, will it already be prohibited?
20:03 < bridge> <louis> no
20:03 < bridge> <louis> since it's your own server
20:08 < bridge> <learath2> Mh, this one might actually be completely broken, or at the very least the knowledge of it is lost to time. Idk anyone who builds with mysql on windows
20:09 < bridge> <learath2> It's not against the rules, but I would suggest you rename the mod so people don't come to expect ddnet to have test commands enabled
20:22 < bridge> <swarfey> used to work for me when i did `cmake .. -DMYSQL=ON -DMYSQL_CONFIG:FILEPATH="C:\Program Files\MariaDB 11.3\bin\mysql_config.pl" -DMYSQL_INCLUDEDIR:PATH="C:\Program Files\MariaDB 11.3\include\mysql" -DMYSQL_LIBRARY:FILEPATH="C:\Program Files\MariaDB 11.3\lib\libmariadb.lib"`
20:24 < bridge> <swarfey> tho idk, the codebase i did that on is also a year old now
20:25 < bridge> <swarfey> tho idk, the codebase i needed mysql for is also a year old now. i just had that command written down
22:16 < bridge> <0xdeen> @.paisho. @chillbreaker95 Thanks for the large donation!
22:16 < bridge> <sollybunny> ```
22:16 < bridge> <sollybunny> gf�?ff�?��Cz    D���C�GDI��C�*Dbind a "+left"
22:16 < bridge> <sollybunny> gf�?ff�?��Cz    D���C�GDI��C�*Dbind a "+left"bind b "say /spec"
22:16 < bridge> <sollybunny> gf�?ff�?��Cz    D���C�GDI��C�*Dbind a "+left"bind b "say /spec"bind c "exec scripts/dummy_deep_off.cfg"
22:16 < bridge> <sollybunny> gf�?ff�?��Cz    D���C�GDI��C�*Dbind a "+left"bind b "say /spec"bind c "exec scripts/dummy_deep_off.cfg"bind d "+right"
22:16 < bridge> <sollybunny> gf�?ff�?��Cz    D���C�GDI��C�*Dbind a "+left"bind b "say /spec"bind c "exec scripts/dummy_deep_off.cfg"bind d "+right"bind e "exec scripts/location_team.cfg"
22:17 < bridge> <sollybunny> gf�?ff�?��Cz    D���C�GDI��C�*Dbind a "+left"bind b "say /spec"bind c "exec scripts/dummy_deep_off.cfg"bind d "+right"bind e "exec scripts/location_team.cfg"bind f "toggle cl_dyncam 1 0"
22:17 < bridge> <sollybunny> gf�?ff�?��Cz    D���C�GDI��C�*Dbind a "+left"bind b "say /spec"bind c "exec scripts/dummy_deep_off.cfg"bind d "+right"bind e "exec scripts/location_team.cfg"bind f "toggle cl_dyncam 1 0"bind g "say gg"
22:17 < bridge> <sollybunny> gf�?ff�?��Cz    D���C�GDI��C�*Dbind a "+left"bin
22:17 < bridge> <sollybunny> ```
22:17 < bridge> <sollybunny> why is this happening x-x
22:17 < bridge> <sollybunny> ```c
22:17 < bridge> <sollybunny> void CBinds::ConfigSaveCallback(IConfigManager *pConfigManager, void *pUserData)
22:17 < bridge> <sollybunny> {
22:17 < bridge> <sollybunny>     CBinds *pSelf = (CBinds *)pUserData;
22:17 < bridge> <sollybunny> 
22:17 < bridge> <sollybunny>     pConfigManager->WriteLine("unbindall");
22:17 < bridge> <sollybunny>     for(auto &it : pSelf->m_Binds)
22:17 < bridge> <sollybunny>     {
22:17 < bridge> <sollybunny>         const CBindSlot BindSlot = it.first;
22:17 < bridge> <sollybunny>         const char *pBind = it.second;
22:17 < bridge> <sollybunny>         char pBuf[1024];
22:17 < bridge> <sollybunny>         const char *pBufEnd = pBuf + sizeof(pBuf);
22:17 < bridge> <sollybunny>         str_copy(pBuf, "bind ");
22:17 < bridge> <sollybunny>         pSelf->GetName(BindSlot.m_Key, BindSlot.m_ModifierMask, pBuf + str_length(pBuf), sizeof(pBuf) - str_length(pBuf));
22:17 < bridge> <sollybunny>         str_append(pBuf, " \"", sizeof(pBuf));
22:17 < bridge> <sollybunny>         // process the string. we need to escape some characters
22:17 < bridge> <sollybunny>         char *pDst = pBuf + str_length(pBuf);
22:17 < bridge> <sollybunny>         str_escape(&pDst, pBind, pBufEnd);
22:17 < bridge> <sollybunny>         str_append(pBuf, "\"", sizeof(pBuf));
22:17 < bridge> <sollybunny>         printf("%s\n", pBuf);
22:17 < bridge> <sollybunny>         pConfigManager->WriteLine(pBuf);
22:17 < bridge> <sollybunny>     }
22:17 < bridge> <sollybunny> }
22:17 < bridge> <sollybunny> ```
22:17 < bridge> <sollybunny> that is why is there a bunch of garbage before the first bind, why is the stuff before not being reset?
22:23 < bridge> <sollybunny> ```
22:23 < bridge> <sollybunny> bind period "exec scripts/kill_bind_off.cfg"
22:23 < bridge> <sollybunny> bind f1 "toggle_local_console"
22:23 < bridge> <sollybunny> bind f2 "toggle_remote_console"
22:23 < bridge> <sollybunny> bind f3 "vote yes"
22:23 < bridge> <sollybunny> bind f4 "vote no"
22:23 < bridge> <sollybunny> bind f5 "+showhookcoll"
22:23 < bridge> <sollybunny> bind lshift "+emote;+spectate"
22:23 < bridge> <sollybunny> bind rctrl "exec scripts/location_team_bindwheel.cfg;+bindwheel"
22:23 < bridge> <sollybunny> bind rshift "+emote;+spectate"
22:23 < bridge> <sollybunny> bind mouse1 "+fire; +toggle cl_dummy_hammer 1 0"
22:23 < bridge> <sollybunny> bind mouse2 "+hook"
22:23 < bridge> <sollybunny> bind mousewheelup "+fire"
22:23 < bridge> <sollybunny> bind mousewheeldown "+fire"
22:23 < bridge> <sollybunny> ```
22:23 < bridge> <sollybunny> i printf it?
22:23 < bridge> <sollybunny> and its fine
22:29 < bridge> <sollybunny> oh
22:29 < bridge> <sollybunny> micro is buuggy mess and is doing this not me xdddd
22:29 < bridge> <sollybunny> lmao
