00:00 <+bridge> [ddnet] <deen> https://wiki.archlinux.org/index.php/Core_dump
00:00 <+bridge> [ddnet] <Jupstar âœª> ok thx
00:00 <+bridge> [ddnet] <Jupstar âœª> hope i get something useful next crash
00:00 <+bridge> [ddnet] <deen> The existing ones should be in /var/lib/systemd/coredump already
00:01 <+bridge> [ddnet] <Jupstar âœª> yeah sadly empty ðŸ˜„
00:01 <+bridge> [ddnet] <deen> cleared after 3 days
00:01 <+bridge> [ddnet] <Jupstar âœª> it happened 20minutes ago xd
02:47 <+bridge> [ddnet] <hussainx3> ðŸ¤¬
05:13 <+bridge> [ddnet] <Spyry> How to spawn item
05:14 <+bridge> [ddnet] <Spyry> Like Ninja Sword,  armor etc.
05:14 <+bridge> [ddnet] <Xyloae> ?XD
05:40 <+bridge> [ddnet] <murpi> You'll need to get familiar with mapping if you wish to create a custom map
05:42 <+bridge> [ddnet] <murpi> alternatively you can give yourself all weapons by typing `weapons` in the rcon console (your own server)
05:43 <+bridge> [ddnet] <murpi> all available server commands: https://ddnet.tw/settingscommands/
05:52 <+bridge> [ddnet] <Spyry> @murpi in c++
06:54 <+bridge> [ddnet] <gerdoe> Cpickup(...)
09:38 <+bridge> [ddnet] <Ryozuki> @Spyry https://github.com/ddnet/ddnet/blob/master/src/game/server/gamecontroller.cpp#L120
09:38 <+bridge> [ddnet] <Ryozuki> this is how the server creates entities (in this case from the map info iirc)
10:54 <+bridge> [ddnet] <becc> Can I compile it from any OS for any OS? Or do I have to use Windows to compile it for Windows?
10:55 <+bridge> [ddnet] <deen> @stnwtr You can compile from Linux to everything else, others are not so easy
10:56 <+bridge> [ddnet] <deen> Here's how I crosscompile the release for Windows: https://github.com/ddnet/ddnet-scripts/blob/master/release/build.sh#L111
10:57 <+bridge> [ddnet] <deen> Requires mingw
12:12 <+bridge> [ddnet] <Learath2> Also requires some messing around sometimes. That symbol overlap issue with dlls was quite annoying to debug
13:09 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/780767146098556928/unknown.png
13:10 <+bridge> [ddnet] <Ryozuki> yay centos 6 will soon die
13:12 <+bridge> [ddnet] <Ryozuki> damn centos 7 uses the same cmake version as centos 6
13:12 <+bridge> [ddnet] <Ryozuki> we cant bump it yet i guess
13:12 <+bridge> [ddnet] <Ryozuki> rip
13:12 <+bridge> [ddnet] <Ryozuki> stuck at 2.8
13:13 <+bridge> [ddnet] <Ryozuki> centos 8 has 3.11 :poggies:
13:13 <+bridge> [ddnet] <Ryozuki> and i got 3.19
13:13 <+bridge> [ddnet] <Ryozuki> <a:aPES4_Steering:751433824721961031>
13:15 <+bridge> [ddnet] <Ryozuki> > Starting in CMake 3.12, this supports a range, such as VERSION 3.1...3.15; this means you support as low as 3.1 but have also tested it with the new policy settings up to 3.15. This is much nicer on users that need the better settings, and due to a trick in the syntax, it's backward compatible with older versions of CMake (though actually running CMake 3.1-3.11 will only set the 3.1 version of the policies in this example, since those ver
13:15 <+bridge> [ddnet] <Ryozuki> rip
14:40 <+bridge> [ddnet] <Pure_luck> @Jupstar âœª to make systemd dump crashes you have to tune a service first.
14:40 <+bridge> [ddnet] <Jupstar âœª> yeah already found it
14:40 <+bridge> [ddnet] <Jupstar âœª> its limits
14:40 <+bridge> [ddnet] <Jupstar âœª> in debian
14:41 <+bridge> [ddnet] <Pure_luck> Also if you're on Ubuntu it has it's own crash interceptor which could be removed first.
14:41 <+bridge> [ddnet] <Pure_luck> Nice!
14:41 <+bridge> [ddnet] <Jupstar âœª> it was set to 0, which disabled it
14:41 <+bridge> [ddnet] <Jupstar âœª> @Pure_luck so on ubuntu there is some crash handler on default?
14:43 <+bridge> [ddnet] <Pure_luck> It has systemd and you can install systemd-coredump package first. Then you have to disable a built-in coredump interceptor, apport.
14:44 <+bridge> [ddnet] <Pure_luck> Or maybe disable Apport first would be a nicer idea ðŸ˜„
14:44 <+bridge> [ddnet] <Jupstar âœª> but is that some crash handler?
14:45 <+bridge> [ddnet] <Jupstar âœª> since ubuntu is based on debian, maybe there is some crash dump somewhere ðŸ˜„
14:45 <+bridge> [ddnet] <Pure_luck> https://wiki.ubuntu.com/Apport
14:45 <+bridge> [ddnet] <Jupstar âœª> ah
14:45 <+bridge> [ddnet] <Jupstar âœª> its a gui interface ok
14:45 <+bridge> [ddnet] <Pure_luck> To be honest I don't remember if it was enabled or disabled by default on ubuntu 20.0 server installation.
14:46 <+bridge> [ddnet] <Jupstar âœª> maybe i should install smth like that ðŸ˜„
14:46 <+bridge> [ddnet] <Pure_luck> I've just found a tip to disable it while trying to make systemd-coredump work. And it was limits.
14:46 <+bridge> [ddnet] <Pure_luck> Why should you? systemd-coredump is much better
14:46 <+bridge> [ddnet] <Pure_luck> and it's universal
14:46 <+bridge> [ddnet] <Pure_luck> I have a script that asks systemd to get last dump from my VPS server and then download it.
14:46 <+bridge> [ddnet] <Pure_luck> Works so nice.
14:47 <+bridge> [ddnet] <Jupstar âœª> then i see when smth is crashing or when something is just closing ðŸ˜„
14:47 <+bridge> [ddnet] <Pure_luck> Just don't forget to backup EVERY DDNet-server binary build you deploy on server or else your coredump will correspond to newer version and most probably will not work.
14:48 <+bridge> [ddnet] <Pure_luck> @Jupstar âœª if you're working on local dev machine only then ok.
14:48 <+bridge> [ddnet] <Pure_luck> But if you manage servers I'd recommend you to use something like papertrail to get notifications on email about SEGV dumps.
14:49 <+bridge> [ddnet] <Pure_luck> Also it keeps all logs from all servers in one place and make it easy searchable.
14:49 <+bridge> [ddnet] <Pure_luck> https://cdn.discordapp.com/attachments/293493549758939136/780792184848777236/Screenshot_from_2020-11-24_16-48-52.png
14:49 <+bridge> [ddnet] <Pure_luck> For example, I write SEGV and see all crashes.
14:50 <+bridge> [ddnet] <Pure_luck> That day I've introduced new bugs and fixed it on the second try ðŸ˜„ no crash since then.
14:50 <+bridge> [ddnet] <Pure_luck> That day I've introduced new bugs and fixed them on the second try ðŸ˜„ no crash since then.
14:50 <+bridge> [ddnet] <Pure_luck> https://papertrailapp.com/
14:50 <+bridge> [ddnet] <Pure_luck> it has a free plan too
14:51 <+bridge> [ddnet] <Jupstar âœª> luckily my fng servers didnt ever crash yet since years xd
14:51 <+bridge> [ddnet] <Jupstar âœª> so i dont have trouble server side
14:51 <+bridge> [ddnet] <Pure_luck> It doesn't seems you're adding new features daily, right?
14:51 <+bridge> [ddnet] <Pure_luck> To your fng mod I mean.
14:51 <+bridge> [ddnet] <Jupstar âœª> yeah, rarely
14:52 <+bridge> [ddnet] <Jupstar âœª> and like 99% of bugs are easily visible with asan, or back then valgrind ðŸ˜„
14:53 <+bridge> [ddnet] <Pure_luck> Nice. Crashes were bane of my existence from the very start of my mod.
14:53 <+bridge> [ddnet] <Pure_luck> ||Before I've accidentally found a trick to check if I am accessing a pointer which still points to a destroyed instance.||
14:53 <+bridge> [ddnet] <Pure_luck> I should try valgrind one day ðŸ˜„
14:55 <+bridge> [ddnet] <Jupstar âœª> better use asan tbh, the performance is just superb
15:33 <+bridge> [ddnet] <Learath2> ye, the virtual memory trick is such a great idea
15:42 <+bridge> [ddnet] <Ryozuki> https://github.com/neovim/neovim/releases/tag/nightly
15:42 <+bridge> [ddnet] <Ryozuki> soon neovim 0.5.0 released
15:42 <+bridge> [ddnet] <Ryozuki> over 2.3k commits
15:44 <+bridge> [ddnet] <Ryozuki> with 0.5 u can use <https://github.com/nvim-treesitter/nvim-treesitter>
15:44 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/780806008992956426/example-cpp.png
15:44 <+bridge> [ddnet] <Ryozuki> Traditional highlighting (left) vs Treesitter-based highlighting (right).
15:44 <+bridge> [ddnet] <Ryozuki> :poggers:
16:16 <+bridge> [ddnet] <deen> @Pure_luck the cheapo solution that I use is a cron entry with `MAILTO=myaddress` like this ðŸ˜„ :
16:16 <+bridge> [ddnet] <deen> ```
16:16 <+bridge> [ddnet] <deen> 0 */8 * * * find /home/teeworlds/servers -maxdepth 1 -name 'core*'
16:16 <+bridge> [ddnet] <deen> ```
16:17 <+bridge> [ddnet] <deen> requires sendmail to work of course
16:17 <+bridge> [ddnet] <Learath2> I had been very skeptical of game streaming up until today. Google was giving away free stadia controllers and subscriptions, got mine and I can confidently say this is probably the future for singleplayer gaming
16:18 <+bridge> [ddnet] <Ryozuki> lol even if it works well its like DRM
16:18 <+bridge> [ddnet] <deen> Why just singleplayer?
16:18 <+bridge> [ddnet] <Ryozuki> its not good
16:18 <+bridge> [ddnet] <Learath2> Even with my average connection I can get console level graphics and very acceptable responsiveness
16:18 <+bridge> [ddnet] <Learath2> Multiplayer I don't see happening without some major improvements to latenct
16:18 <+bridge> [ddnet] <Learath2> Latency*
16:19 <+bridge> [ddnet] <Jupstar âœª> not even the best compression gives good result with noisy graphics
16:19 <+bridge> [ddnet] <Ryozuki> yeah
16:19 <+bridge> [ddnet] <Learath2> Even in single player I feel the effects of all the lag combining
16:19 <+bridge> [ddnet] <Ryozuki> thats why watching ppl stream games with lot of particles makes bitrate go crazy
16:19 <+bridge> [ddnet] <Ryozuki> i assume the same happens
16:20 <+bridge> [ddnet] <Learath2> What we nerds think with our privacy requirements and very high graphics needs don't matter
16:20 <+bridge> [ddnet] <Learath2> Oh and our distaste of drm
16:20 <+bridge> [ddnet] <Ryozuki> console leve graphics :lol:
16:20 <+bridge> [ddnet] <Ryozuki> level*
16:20 <+bridge> [ddnet] <Learath2> For the general public drm is good, they think it's the companies right to protect their profits
16:21 <+bridge> [ddnet] <Learath2> For the general public google tracking them is a non issue
16:21 <+bridge> [ddnet] <Ryozuki> u can circumvent drm xd
16:21 <+bridge> [ddnet] <Ryozuki> youtube theorically has a drm
16:21 <+bridge> [ddnet] <Ryozuki> but youtube-dl exists
16:21 <+bridge> [ddnet] <Learath2> And for them console gfx is far better than acceptable
16:21 <+bridge> [ddnet] <Ryozuki> its just to make sure in law u can say u are protecting the content
16:21 <+bridge> [ddnet] <Learath2> I'm fairly confident this is the future
16:21 <+bridge> [ddnet] <Ryozuki> and ur average joe cant right click download
16:22 <+bridge> [ddnet] <Learath2> The controller is shit though, google needs to step up their game
16:22 <+bridge> [ddnet] <Learath2> Oh and the stupid controller doesn't implement usb pd correctly still. After 7 years of usb c we still get non compliant devices...
16:24 <+bridge> [ddnet] <Ryozuki> 9,99 â‚¬ month, if u play long enough its more worth to buy a gpu
16:24 <+bridge> [ddnet] <Ryozuki> u may even get better results
16:25 <+bridge> [ddnet] <Learath2> Well you'd need to play maaassive amounts to cover all the free games included in the subscription
16:25 <+bridge> [ddnet] <Learath2> Buying single games on stadia, idk, might be less worth
16:26 <+bridge> [ddnet] <Ryozuki> those free games are boring
16:26 <+bridge> [ddnet] <Learath2> There is one hidden cost with gpus, they are basically almost space heaters. 500W is no joke
16:26 <+bridge> [ddnet] <Ryozuki> ppl want to play cyberpunk 2077 not nba basketball :lol:
16:26 <+bridge> [ddnet] <Learath2> My space heaters first level is 600W
16:26 <+bridge> [ddnet] <Learath2> Cyberpunk 2077 is coming out on stadia too. On launch even
16:27 <+bridge> [ddnet] <Ryozuki> i want to see how it performs there
16:27 <+bridge> [ddnet] <Ryozuki> @Learath2 but u have to buy the game specifically on stadia
16:27 <+bridge> [ddnet] <Ryozuki> to play it there
16:27 <+bridge> [ddnet] <Ryozuki> ?
16:27 <+bridge> [ddnet] <Ryozuki> if so then thats rly bad
16:27 <+bridge> [ddnet] <Learath2> I played some Sniper Elite 4 today. I'll try dead by daylight tomorrow
16:28 <+bridge> [ddnet] <Learath2> @Ryozuki the game collection is really not as bad as I expected. Tho you do need to buy some titles they are usually cheaper to get on stadia
16:28 <+bridge> [ddnet] <Ryozuki> but its locked to stadia
16:29 <+bridge> [ddnet] <Learath2> I don't see myself subscribing to stadia as I don't play much nowadays and when I do I have a good gpu I'd like to utilize and want the ability to revisit games in the future
16:29 <+bridge> [ddnet] <Learath2> Tho I can see how for the common consumer this is a great deal
16:30 <+bridge> [ddnet] <Jupstar âœª> when we get quantum entanglement internet connections, then this is the future xd
16:30 <+bridge> [ddnet] <Ryozuki> tree sitter highlighting without support from a LSP
16:30 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/780817554067292190/unknown.png
16:30 <+bridge> [ddnet] <Ryozuki> the future is neovim
16:30 <+bridge> [ddnet] <Learath2> It is indeed locked to stadia, but does Joe Average care about that? He gets to play his game, at a very reasonable gfx quality, for cheaper
16:30 <+bridge> [ddnet] <Learath2> Even 4k if you have a beastly internet connection like in northern europe or korea
16:30 <+bridge> [ddnet] <Ryozuki> also it highlights correctly as u edit
16:30 <+bridge> [ddnet] <Ryozuki> its incremental
16:30 <+bridge> [ddnet] <Ryozuki> â˜•
16:31 <+bridge> [ddnet] <Ryozuki> https://tree-sitter.github.io/tree-sitter/
16:31 <+bridge> [ddnet] <Ravie> @Ryozuki whatever text editor that is, looks nice
16:31 <+bridge> [ddnet] <Learath2> @Jupstar âœª multiplayer games I agree require better, but I'm honestly surprised at how playable the singleplayer experiences are
16:31 <+bridge> [ddnet] <Ryozuki> its neovim from source with neovim-treesitter and dracula theme
16:32 <+bridge> [ddnet] <Ryozuki> i use dracula everywhere lately
16:32 <+bridge> [ddnet] <Ryozuki> it looks nice everywhere
16:32 <+bridge> [ddnet] <Ravie> oh I think I've had that theme in notepad++ long ago
16:32 <+bridge> [ddnet] <Ryozuki> https://draculatheme.com/
16:33 <+bridge> [ddnet] <Ryozuki> with rust code :BASED:
16:33 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/780818458576158760/unknown.png
16:35 <+bridge> [ddnet] <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/780818926350499860/unknown.png
16:35 <+bridge> [ddnet] <Jupstar âœª> @Ryozuki i dunno
16:35 <+bridge> [ddnet] <Jupstar âœª> honstly like this more xD
16:36 <+bridge> [ddnet] <Ryozuki> well ur color theme is different
16:36 <+bridge> [ddnet] <Ravie> that's really similar to my current notepad++ skin xD but not exact
16:36 <+bridge> [ddnet] <Ryozuki> yea its the famous vscode dark theme
16:36 <+bridge> [ddnet] <Jupstar âœª> its default of vscodium, or vscode
16:37 <+bridge> [ddnet] <Ravie> yeah but for me the numbers on the left are blue
16:37 <+bridge> [ddnet] <Ravie> other than that pretty much the same
16:37 <+bridge> [ddnet] <Ryozuki> @Jupstar âœª vscode doesnt use treesitter yet
16:38 <+bridge> [ddnet] <Jupstar âœª> cannot judge if i find it useful ðŸ˜„
16:38 <+bridge> [ddnet] <Ryozuki> the cool thing is u can edit and it highlights correctly even as u edit
16:39 <+bridge> [ddnet] <Jupstar âœª> but ur tip with clang server was good xd thats useful
16:39 <+bridge> [ddnet] <Ryozuki> "It can build a concrete syntax tree for a source file and efficiently update the syntax tree as the source file is edited."
16:39 <+bridge> [ddnet] <Ryozuki> @Jupstar âœª for vim?
16:39 <+bridge> [ddnet] <louis> https://cdn.discordapp.com/attachments/293493549758939136/780819825130733568/unknown.png
16:39 <+bridge> [ddnet] <louis> best :greenthing:
16:39 <+bridge> [ddnet] <Jupstar âœª> for vscodium
16:39 <+bridge> [ddnet] <Ryozuki> ah ye
16:39 <+bridge> [ddnet] <Ryozuki> clangd everywhere
16:40 <+bridge> [ddnet] <Ryozuki> are u learning rust
16:40 <+bridge> [ddnet] <Jupstar âœª> its insanly much faster than the microsoft tool
16:40 <+bridge> [ddnet] <Jupstar âœª> sadly the extension isnt perfect yet ðŸ˜„
16:40 <+bridge> [ddnet] <Ryozuki> i dont like font ligatures
16:40 <+bridge> [ddnet] <Ryozuki> i prefer seeing every character
16:40 <+bridge> [ddnet] <Ravie> honestly I salute to the people who can make syntax highlighting with 50 different colors look good
16:41 <+bridge> [ddnet] <louis> @Ryozuki i was doing a little bit before but im not really focusing on it now
16:41 <+bridge> [ddnet] <Ryozuki> rust ftw
16:42 <+bridge> [ddnet] <Ryozuki> rust is complicated as a first language tho
16:43 <+bridge> [ddnet] <louis> yes
16:57 <+bridge> [ddnet] <Ryozuki> @Learath2 do u think this is worth doing (java) or do they optimize .size if i dont use n
16:57 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/780824330514595840/unknown.png
16:58 <+bridge> [ddnet] <Learath2> Hm, I donâ€™t think it would be allowed to optimize as you are not barred from modifying the array in a loop like this
16:58 <+bridge> [ddnet] <Ryozuki> :yoo:
16:58 <+bridge> [ddnet] <Learath2> I would use a for-each or a stream tho. Modern java and all
16:59 <+bridge> [ddnet] <Learath2> More safety, easier to optimise
16:59 <+bridge> [ddnet] <Ryozuki> For each loop :: 110 ms
16:59 <+bridge> [ddnet] <Ryozuki> Using collection.size() :: 37 ms
16:59 <+bridge> [ddnet] <Ryozuki> Using [int size = list.size(); int j = 0; j < size ; j++] :: 4 ms
16:59 <+bridge> [ddnet] <Ryozuki> Using [int j = list.size(); j > size ; j--] :: 1 ms
16:59 <+bridge> [ddnet] <Ryozuki> <https://howtodoinjava.com/java/collections/performance-comparison-of-different-for-loops-in-java/>
17:00 <+bridge> [ddnet] <Ryozuki> my loop is the 3rd
17:00 <+bridge> [ddnet] <Ryozuki> i dont think they optimize it
17:00 <+bridge> [ddnet] <Ryozuki> xd
17:00 <+bridge> [ddnet] <Ryozuki> iterators in java are not zero cost
17:00 <+bridge> [ddnet] <Ryozuki> rip
17:01 <+bridge> [ddnet] <Learath2> Well it doesnâ€™t say which version this is in. Iirc iterators optimize much better nowadays
17:02 <+bridge> [ddnet] <Ryozuki> Java 7
17:02 <+bridge> [ddnet] <TsFreddie> How do you push commit into a someone's PR? (In a repo that I own ofc)
17:02 <+bridge> [ddnet] <TsFreddie> How do you push commit into someone else's PR? (In a repo that I own ofc)
17:03 <+bridge> [ddnet] <Learath2> Ah, stick to old stuff @Ryozuki. Get the size once loop thru
17:03 <+bridge> [ddnet] <Ryozuki> yea
17:03 <+bridge> [ddnet] <Learath2> @TsFreddie add their repo as a remote, push to their branch
17:03 <+bridge> [ddnet] <Ryozuki> im doing that in the example i sent u xd
17:03 <+bridge> [ddnet] <Ryozuki> but im going to test those loops in java 15
17:03 <+bridge> [ddnet] <Ryozuki> well 14, 15 is too new for my ide
17:04 <+bridge> [ddnet] <TsFreddie> Can I just do that? Pushing to other ppl's branch
17:04 <+bridge> [ddnet] <Ryozuki> if ur a member of ddnet
17:04 <+bridge> [ddnet] <Ryozuki> and they made pr withthat tick on
17:04 <+bridge> [ddnet] <Ryozuki> yes
17:04 <+bridge> [ddnet] <Ryozuki> the tick is on by default
17:04 <+bridge> [ddnet] <TsFreddie> Cool
17:05 <+bridge> [ddnet] <Learath2> @Ryozuki also depends on the jvm btw
17:06 <+bridge> [ddnet] <Learath2> I wonder how different the bytecode is between the different loop types
17:08 <+bridge> [ddnet] <Ryozuki> ```
17:08 <+bridge> [ddnet] <Ryozuki> For each loop :: 49 ms
17:08 <+bridge> [ddnet] <Ryozuki> Using collection.size() :: 3 ms
17:08 <+bridge> [ddnet] <Ryozuki> Using [int size = list.size(); int j = 0; j < size ; j++] :: 3 ms
17:08 <+bridge> [ddnet] <Ryozuki> Using [int j = list.size(); j > size ; j--] :: 0 ms
17:08 <+bridge> [ddnet] <Ryozuki> ```
17:08 <+bridge> [ddnet] <Ryozuki> with java 14
17:08 <+bridge> [ddnet] <Ryozuki> openjdk
17:09 <+bridge> [ddnet] <Ryozuki> the reverse loop is rly fast
17:09 <+bridge> [ddnet] <Ryozuki> ```
17:09 <+bridge> [ddnet] <Ryozuki> For each loop :: 49 ms
17:09 <+bridge> [ddnet] <Ryozuki> Using collection.size() :: 3 ms
17:09 <+bridge> [ddnet] <Ryozuki> Using [int size = list.size(); int j = 0; j < size ; j++] :: 3 ms
17:09 <+bridge> [ddnet] <Ryozuki> Using [int j = list.size(); j > size ; j--] :: 0 ms
17:09 <+bridge> [ddnet] <Ryozuki> ```
17:09 <+bridge> [ddnet] <Ryozuki> with java 1.8
17:09 <+bridge> [ddnet] <Ryozuki> xd
17:09 <+bridge> [ddnet] <Ryozuki> ```
17:09 <+bridge> [ddnet] <Ryozuki> For each loop :: 27 ms
17:09 <+bridge> [ddnet] <Ryozuki> Using collection.size() :: 4 ms
17:09 <+bridge> [ddnet] <Ryozuki> Using [int size = list.size(); int j = 0; j < size ; j++] :: 5 ms
17:09 <+bridge> [ddnet] <Ryozuki> Using [int j = list.size(); j > size ; j--] :: 0 ms
17:09 <+bridge> [ddnet] <Ryozuki> 
17:09 <+bridge> [ddnet] <Ryozuki> ```
17:09 <+bridge> [ddnet] <Ryozuki> fixed
17:09 <+bridge> [ddnet] <Ryozuki> i copied old one by mistake
17:10 <+bridge> [ddnet] <Jupstar âœª> @Ryozuki have u used R8?
17:10 <+bridge> [ddnet] <Ryozuki> 10000000 this is the size of lists
17:10 <+bridge> [ddnet] <Ryozuki> whats r8
17:10 <+bridge> [ddnet] <Jupstar âœª> a java optimizer
17:10 <+bridge> [ddnet] <Jupstar âœª> from google
17:10 <+bridge> [ddnet] <Learath2> It is better but itâ€™s still not there, so odd. Youâ€™d think with more constraints it should be trivial for the jvm to optimize
17:11 <+bridge> [ddnet] <Ryozuki> i havent used it
17:11 <+bridge> [ddnet] <Ryozuki> im not a fan of java
17:11 <+bridge> [ddnet] <Ryozuki> using it only because i have to
17:12 <+bridge> [ddnet] <Learath2> Anyway, I write most of my java code with streams. I would only consider performance if it proves to be an issue
17:12 <+bridge> [ddnet] <Learath2> Java is shit for performance anyway ðŸ˜›
17:12 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
17:12 <+bridge> [ddnet] <Ryozuki> @Learath2 ppl make webservers with spring
17:12 <+bridge> [ddnet] <Jupstar âœª> when i hear java, i see minecraftr
17:12 <+bridge> [ddnet] <Jupstar âœª> when i hear java, i see minecraft
17:12 <+bridge> [ddnet] <Ryozuki> well ppl also make them with python
17:12 <+bridge> [ddnet] <Ryozuki> at this point ppl dont care about perfomance
17:13 <+bridge> [ddnet] <Ryozuki> im writing my web in rust
17:13 <+bridge> [ddnet] <Ryozuki> 2nd fastest web framework
17:13 <+bridge> [ddnet] <Ryozuki> after c++ dragon or smth like that
17:13 <+bridge> [ddnet] <Ryozuki> https://www.techempower.com/benchmarks/
17:13 <+bridge> [ddnet] <Ryozuki> im using actix
17:13 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/780828524093112371/unknown.png
17:14 <+bridge> [ddnet] <Learath2> Honestly, performance is not usually the concern in web since your site will realistically only serve so many people
17:15 <+bridge> [ddnet] <Learath2> Unless you work at amazon, than it matters
17:15 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/780828937529982976/unknown.png
17:15 <+bridge> [ddnet] <Ryozuki> express is one of the most famous
17:15 <+bridge> [ddnet] <Ryozuki> and it has rly bad perf
17:15 <+bridge> [ddnet] <Ryozuki> i know xd
17:15 <+bridge> [ddnet] <Ryozuki> but gotta go fast
17:15 <+bridge> [ddnet] <Ryozuki> <a:aPES4_Steering:751433824721961031>
17:15 <+bridge> [ddnet] <Jupstar âœª> @Ryozuki is that a full webserver, like completly in rust?
17:16 <+bridge> [ddnet] <Jupstar âœª> no script languages?
17:16 <+bridge> [ddnet] <Ryozuki> https://actix.rs/
17:16 <+bridge> [ddnet] <Ryozuki> @Jupstar âœª yes
17:16 <+bridge> [ddnet] <Jupstar âœª> then its cool xd
17:16 <+bridge> [ddnet] <Ryozuki> @Jupstar âœª for templates i use askama, it compiles the templates to rust from html
17:16 <+bridge> [ddnet] <Ryozuki> i can know at compile time if my templates will fail
17:17 <+bridge> [ddnet] <Ryozuki> https://github.com/djc/askama
17:17 <+bridge> [ddnet] <Jupstar âœª> yeah sounds cool
17:17 <+bridge> [ddnet] <Ryozuki> <a:aPES4_Steering:751433824721961031>
17:17 <+bridge> [ddnet] <Ryozuki> and diesel for orm
17:18 <+bridge> [ddnet] <Learath2> Is the webserver also part of the project?
17:18 <+bridge> [ddnet] <Ryozuki> actix-web (the web framework) is built on top of actix a Actor framework
17:18 <+bridge> [ddnet] <Ryozuki> Features
17:18 <+bridge> [ddnet] <Ryozuki> 
17:18 <+bridge> [ddnet] <Ryozuki>     Async and sync actors
17:18 <+bridge> [ddnet] <Ryozuki>     Actor communication in a local/thread context
17:18 <+bridge> [ddnet] <Ryozuki>     Uses futures for asynchronous message handling
17:18 <+bridge> [ddnet] <Ryozuki>     Actor supervision
17:18 <+bridge> [ddnet] <Ryozuki>     Typed messages (No Any type)
17:18 <+bridge> [ddnet] <Ryozuki>     Runs on stable Rust 1.40+
17:19 <+bridge> [ddnet] <Ryozuki> what project
17:19 <+bridge> [ddnet] <Learath2> Actix
17:19 <+bridge> [ddnet] <Ryozuki> the web framework is built on top of actix
17:19 <+bridge> [ddnet] <Ryozuki> by the actix authors
17:20 <+bridge> [ddnet] <Learath2> A web framework doesnâ€™t usually contain a webserver, they usually have an interface of sorts, like fastcgi or uwsgi
17:21 <+bridge> [ddnet] <Learath2> Seems they do, itâ€™s nice for performance
17:21 <+bridge> [ddnet] <Ryozuki> they have lot of libs
17:21 <+bridge> [ddnet] <Ryozuki> actix-server is their tcp server
17:22 <+bridge> [ddnet] <Ryozuki> actix-connect the connector
17:22 <+bridge> [ddnet] <Ryozuki> and so on
17:22 <+bridge> [ddnet] <Learath2> Not sure how good of an idea it is to do that yourself though, very large attack surface on web servers
17:22 <+bridge> [ddnet] <Ryozuki> but u just use actic-web
17:22 <+bridge> [ddnet] <Learath2> There is a reason there are only a handful around in active use
19:57 <+bridge> [ddnet] <becc> @Jupstar âœª R8 sounds like it's used for Android mostly?
20:03 <+bridge> [ddnet] <Jupstar âœª> then take proguard or whatever tool xd
20:03 <+bridge> [ddnet] <Jupstar âœª> android is the only case where i ever used java lately ðŸ˜„
20:04 <+bridge> [ddnet] <Ryozuki> samew
20:05 <+bridge> [ddnet] <becc> Why are you not a fan of Java? :0
20:07 <+bridge> [ddnet] <Ryozuki> rust shall overtake the world
20:08 <+bridge> [ddnet] <Ryozuki> https://en.wikipedia.org/wiki/Criticism_of_Java
20:09 <+bridge> [ddnet] <Ryozuki> oh just noticed this Arrays must be indexed by int values
20:09 <+bridge> [ddnet] <Ryozuki> means u can only have a array as long as max int
20:09 <+bridge> [ddnet] <Ryozuki> 32
20:09 <+bridge> [ddnet] <Ryozuki> 2.1 billion
20:10 <+bridge> [ddnet] <Ryozuki> Supporting large arrays would also require changes to the JVM.[22] This limitation manifests itself in areas such as collections being limited to 2 billion elements[23] and the inability to memory map continuous file segments larger than 2 GB.[24] Java also lacks true multidimensional arrays (contiguously allocated single blocks of memory accessed by a single indirection), which limits performance for scientific and technical computing.[15]
20:10 <+bridge> [ddnet] <Ryozuki> There is no efficient way to initialize arrays in Java. When declaring an array, the JVM compiles it to bytecodes with instructions that set its elements one by one at runtime.
20:10 <+bridge> [ddnet] <Ryozuki> kek
20:10 <+bridge> [ddnet] <Ryozuki> the list goes on
20:10 <+bridge> [ddnet] <Ryozuki> java is a joke
20:11 <+bridge> [ddnet] <Ryozuki> i also hate its so ide oriented
20:11 <+bridge> [ddnet] <Ryozuki> u need to access 30 folders
20:11 <+bridge> [ddnet] <Ryozuki> to go to ur src file
20:11 <+bridge> [ddnet] <Ryozuki> src/main/tw/ddnet/mypackage/MyClass.java
20:11 <+bridge> [ddnet] <Ryozuki> xdd
20:32 <+bridge> [ddnet] <becc> Yeah it has some issues and bad designs, however, almost any language got some of that I guess
20:32 <+bridge> [ddnet] <becc> I really like Java, no matter the performance. I have never had problems using it for a lot of projects :0
20:51 <+bridge> [ddnet] <becc> Anyways ... _4 Billion Devices run Java_ :>
20:52 <+bridge> [ddnet] <becc> Anyways ... _More than 4 Billion Devices run Java_ :>
20:57 <+bridge> [ddnet] <heinrich5991> your sim card runs java
20:59 <+bridge> [ddnet] <Jupstar âœª> run, or have it installed? ðŸ˜„
21:14 <+bridge> [ddnet] <heinrich5991> AFAIUI, you can run java code on sim cards
22:03 <+bridge> [ddnet] <Learath2> They are cheating with sim cards...
22:03 <+bridge> [ddnet] <Learath2> ofc more than 4b run it because sim cards can do JVM bytecode iirc
22:32 <+bridge> [ddnet] <Jupstar âœª> 4b doesnt sound alot tho
22:32 <+bridge> [ddnet] <Jupstar âœª> if we count android its actually pretty low
23:21 <+bridge> [ddnet] <heinrich5991> yea
23:25 <+bridge> [ddnet] <Learath2> they said more than ðŸ˜›
23:28 <+bridge> [ddnet] <Learath2> consider the amount of android phones, now all of those run java, now double that since the sim cards also run java on their own
