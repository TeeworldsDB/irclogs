00:00 < bridge> <Jupstar âœª> So simply talks bs
00:00 < bridge> <Jupstar âœª> It often does that
00:01 < bridge> <Jupstar âœª> It simply talks bs
00:45 < bridge> <Cellegen | RiH> @Jupeyy_Keks https://discord.com/channels/252358080522747904/295908390956433410/1075917241649999882
00:45 < bridge> <Cellegen | RiH> second video, maybe that's what the AI meant by wallslide :kek:
01:05 < bridge> <newlesstee> How to change the image of discord rich presence?
01:08 < bridge> <163> ðŸ’€
01:10 < bridge> <Cellegen | RiH> twitter.
01:10 < bridge> <Cellegen | RiH> the best place to replicate Skynet
02:44 < bridge> <Ewan> y/n
02:44 < bridge> <Ewan> i dug a little bit and all it would take is setting the player afk flag
02:44 < bridge> <Ewan> and to make the timer not interfere if it's manually set
07:08 < bridge> <Ryozuki> https://www.nethack.org/v367/release.html
07:08 < bridge> <Ryozuki> new nethack release
07:51 < bridge> <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1076033235131314226/0u8g5h7xrmia1.png
11:59 < bridge> <Chairn> don't get it
12:13 < bridge> <Ryozuki> cp = child pron
12:29 < bridge> <DefaultO> omg, this server will get nuked now
12:29 < bridge> <DefaultO> and you wonder why it hasn't been verified
12:30 < bridge> <DefaultO> :Kappa:
13:26 < bridge> <Chairn> not sure i wanted to have this information now that i have it
14:34 < bridge> <Jupstar âœª> ðŸ˜‡
14:35 < bridge> <Jupstar âœª> dear discord employee. we are innocent
14:45 <+ChillerDragon> cp = connection problems
14:45 <+ChillerDragon> everyone knows that
14:45 < bridge> <Jupstar âœª> chillerpragon
15:06 < bridge> <Learath2> cp is cheese pizza
15:23 < bridge> <bencie> cp is checkpoint
15:28 <+ChillerDragon> bencie +1
15:28 <+ChillerDragon> lerato -1
15:32 < bridge> <ReiTW> damn rip linode
15:41 < bridge> <Ryozuki> damn
15:41 < bridge> <Ryozuki> dont compile llvm with 16 threads
15:41 < bridge> <Ryozuki> i ran out of mem on link time
15:41 < bridge> <Ryozuki> 32gb ram not enough
15:42 < bridge> <Jupstar âœª> what compiler did u use
15:42 < bridge> <Ryozuki> well i had all targets enabled to it probs tried to link everything at once
15:42 < bridge> <Ryozuki> and those targets are big
15:42 < bridge> <Ryozuki> it should parellize compile but not link
15:42 < bridge> <Ryozuki> not smart enough
15:42 < bridge> <Ryozuki> default, so probs gcc and the slow linker
15:42 < bridge> <Ryozuki> i switched to clang and lld now
15:43 < bridge> <Ryozuki> llvm has a easy option for lld so im using it
15:43 < bridge> <Jupstar âœª> xd
15:43 < bridge> <Jupstar âœª> just wanting to say:
15:43 < bridge> <Jupstar âœª> imagine compiling llvm with gcc
15:43 < bridge> <Ryozuki> ```
15:43 < bridge> <Ryozuki> cmake -S llvm -B build -G Ninja -DCMAKE_INSTALL_PREFIX=/home/me/data/llvm-15.x -DLLVM_ENABLE_ASSERTIONS=On -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_USE_LINKER=lld -DLLVM_ENABLE_PROJECTS='clang;lld;polly' -DLLVM_ENABLE_RUNTIMES='libcxx;libcxxabi;libunwind;compiler-rt;libc'
15:43 < bridge> <Ryozuki> ```
15:43 < bridge> <Ryozuki> my current line now
15:44 < bridge> <Ryozuki> well the problem was not compiling but linking
15:44 < bridge> <Ryozuki> what killed the memory xd
15:45 < bridge> <Ryozuki> did u know llvm ir allows u to specify a integer of arbitrary bit width
15:45 < bridge> <Ryozuki> i666 is valid
15:46 < bridge> <Ryozuki> > The integer type is a very simple type that simply specifies an arbitrary bit width for the integer type desired. Any bit width from 1 bit to 223(about 8 million) can be specified.
15:46 < bridge> <Jupstar âœª> i knew that rust supports 128 bit integers bcs the llvm backend supports weird bit lengths
15:46 < bridge> <Jupstar âœª> but didnt know its that crazy
15:46 < bridge> <Ryozuki> nah im talking about llvm ir
15:46 < bridge> <Ryozuki> it probs translates it to handle the big integers somehow
15:46 < bridge> <Ryozuki> when compiling
15:46 < bridge> <Jupstar âœª> yeah
15:46 < bridge> <Jupstar âœª> thats obvious ðŸ˜„
15:46 < bridge> <Ryozuki> xd
15:47 < bridge> <Ryozuki> but yeah its neat
15:47 < bridge> <Jupstar âœª> i always thought there are lots of problems where 3 bytes would be enough xdd
15:47 < bridge> <Jupstar âœª> 
15:47 < bridge> <Jupstar âœª> but it will probs decrease perf or be equally fast anyway
15:47 < bridge> <Jupstar âœª> so not worth it
15:48 < bridge> <Ryozuki> ```
15:48 < bridge> <Ryozuki> define i252 @field_elemnt_div(i252 %0, i252 %1) {
15:48 < bridge> <Ryozuki> entry:
15:48 < bridge> <Ryozuki>   %t = alloca i503, align 8
15:48 < bridge> <Ryozuki>   %new_t = alloca i503, align 8
15:48 < bridge> <Ryozuki>   %r = alloca i503, align 8
15:48 < bridge> <Ryozuki>   %new_r = alloca i503, align 8
15:48 < bridge> <Ryozuki>   store i503 0, ptr %t, align 4
15:48 < bridge> <Ryozuki>   store i503 1, ptr %new_t, align 4
15:48 < bridge> <Ryozuki>   store i503 3618502788666131213697322783095070105623107215331596699973092056135872020481, ptr %r, align 4
15:48 < bridge> <Ryozuki>   %new_r_extended = sext i252 %1 to i503
15:48 < bridge> <Ryozuki>   store i503 %new_r_extended, ptr %new_r, align 4
15:48 < bridge> <Ryozuki>   br label %while
15:48 < bridge> <Ryozuki> 
15:48 < bridge> <Ryozuki> while:                                            ; preds = %body, %entry
15:48 < bridge> <Ryozuki>   %new_r_value = load i503, ptr %new_r, align 4
15:48 < bridge> <Ryozuki>   %while_compare = icmp ne i503 %new_r_value, 0
15:48 < bridge> <Ryozuki>   br i1 %while_compare, label %body, label %exit
15:48 < bridge> <Ryozuki> 
15:49 < bridge> <Ryozuki> body:                                             ; preds = %while
15:49 < bridge> <Ryozuki>   %r_value = load i503, ptr %r, align 4
15:49 < bridge> <Ryozuki>   %new_r_value1 = load i503, ptr %new_r, align 4
15:49 < bridge> <Ryozuki>   %new_quotient_value = sdiv i503 %r_value, %new_r_value1
15:49 < bridge> <Ryozuki>   %old_t_value = load i503, ptr %t, align 4
15:49 < bridge> <Ryozuki>   %new_t_value = load i503, ptr %new_t, align 4
15:49 < bridge> <Ryozuki>   store i503 %new_t_value, ptr %t, align 4
15:49 < bridge> <Ryozuki>   %quotient_mul_new_t = mul i503 %new_quotient_value, %new_t_value
15:49 < bridge> <Ryozuki>   %sub_t_res = sub i503 %old_t_value, %quotient_mul_new_t
15:49 < bridge> <Ryozuki>   store i503 %sub_t_res, ptr %new_t, align 4
15:49 < bridge> <Ryozuki>   %old_r_value = load i503, ptr %r, align 4
15:49 < bridge> <Ryozuki>   %new_r_value2 = load i503, ptr %new_r, align 4
15:49 < bridge> <Ryozuki> lmao too big
15:49 < bridge> <Ryozuki> ```llvm
15:49 < bridge> <Ryozuki> define i252 @field_elemnt_div(i252 %0, i252 %1) {
15:49 < bridge> <Ryozuki> entry:
15:49 < bridge> <Ryozuki>   %t = alloca i503, align 8
15:49 < bridge> <Ryozuki>   %new_t = alloca i503, align 8
15:49 < bridge> <Ryozuki>   %r = alloca i503, align 8
15:49 < bridge> <Ryozuki>   %new_r = alloca i503, align 8
15:49 < bridge> <Ryozuki>   store i503 0, ptr %t, align 4
15:49 < bridge> <Ryozuki>   store i503 1, ptr %new_t, align 4
15:49 < bridge> <Ryozuki>   store i503 3618502788666131213697322783095070105623107215331596699973092056135872020481, ptr %r, align 4
15:49 < bridge> <Ryozuki>   %new_r_extended = sext i252 %1 to i503
15:49 < bridge> <Ryozuki>   store i503 %new_r_extended, ptr %new_r, align 4
15:49 < bridge> <Ryozuki>   br label %while
15:49 < bridge> <Ryozuki> 
15:49 < bridge> <Ryozuki> while:                                            ; preds = %body, %entry
15:49 < bridge> <Ryozuki>   %new_r_value = load i503, ptr %new_r, align 4
15:50 < bridge> <Ryozuki>   %while_compare = icmp ne i503 %new_r_value, 0
15:50 < bridge> <Ryozuki> its a divisin in a finite field
15:50 < bridge> <Ryozuki> division* god dman
15:50 < bridge> <Jupstar âœª> epic
15:50 < bridge> <Ryozuki> epic integer sizes
15:58 < bridge> <Ryozuki> i rly want to make my own simple language now
15:58 < bridge> <Ryozuki> i see it feasible
15:58 < bridge> <Jupstar âœª> lets go
15:59 < bridge> <Ryozuki> actually llvm has a JIT engine too
15:59 < bridge> <Ryozuki> for llvm ir
15:59 < bridge> <Ryozuki> we could ejecute programs on the fly on ddnet
15:59 < bridge> <Ryozuki> scripts kek
15:59 < bridge> <Ryozuki> https://crates.io/crates/inkwell
16:00 < bridge> <Ryozuki> this lib is rly good and what i use to make ir
16:00 < bridge> <Ryozuki> @Jupeyy_Keks are u on llvm 17 now?
16:00 < bridge> <Ryozuki> 16 released yesterday
16:00 < bridge> <Jupstar âœª> yes
16:01 < bridge> <Jupstar âœª> llvm-config --version                                                                                                                                 
16:01 < bridge> <Jupstar âœª> 17.0.0
16:01 < bridge> <Ryozuki> nice xd
22:01 < bridge> <fokkonaut> I dont even have to look at the auther of the prs, i just see the title, maybe the desc and i know its roby
22:02 < bridge> <Ryozuki> truth
22:02 < bridge> <Ryozuki> it looks like we are in a downtime of dev activity
22:02 < bridge> <Ryozuki> roby holding it himself
22:03 < bridge> <Ryozuki> i just dont have the willpower to do anything tbh xd
22:03 < bridge> <Ryozuki> well, i always have willpower to post rust links
