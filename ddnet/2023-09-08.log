01:14 < bridge> <_voxeldoesart> I'm super new to Regex... I'm trying to repurpose old, converted javascript code into actual array code, but I don't know how to detect it properly.
01:14 < bridge> <_voxeldoesart> Ex: 
01:14 < bridge> <_voxeldoesart> ```goto((itemOf(points.x, point2 - 1)), (itemOf(points.y, point2 - 1))); ---> goto(points.x[point2 - 1], points.y[point2 - 1]);```
01:14 < bridge> <_voxeldoesart> https://cdn.discordapp.com/attachments/293493549758939136/1149482887020814487/image.png
01:15 < bridge> <heinrich5991> the general case is not doable with regexes
01:15 < bridge> <_voxeldoesart> I'm super new to Regex... I'm trying to repurpose old, converted javascript code into actual array code, but I don't know how to detect it properly.
01:15 < bridge> <_voxeldoesart> Ex: 
01:15 < bridge> <_voxeldoesart> ```js
01:15 < bridge> <_voxeldoesart> let points = [{x: 1, y:2}, {x:3, y:4}];
01:15 < bridge> <_voxeldoesart> 
01:15 < bridge> <_voxeldoesart> goto((itemOf(points.x, point2 - 1)), (itemOf(points.y, point2 - 1))); 
01:15 < bridge> <_voxeldoesart> #converted to
01:15 < bridge> <_voxeldoesart> goto(points.x[point2 - 1], points.y[point2 - 1]);```
01:15 < bridge> <_voxeldoesart> https://cdn.discordapp.com/attachments/293493549758939136/1149482887020814487/image.png
01:16 < bridge> <heinrich5991> best would be using a JS parser
01:16 < bridge> <_voxeldoesart> I'm trying to find and replace in VSCode
01:16 < bridge> <heinrich5991> do you only have simple expressions as the index?
01:16 < bridge> <heinrich5991> `itemOf\(([^(),]*), ([^(),]*)\)`
01:18 < bridge> <_voxeldoesart> Yeah, that works perfectly! Thanks!
01:18 < bridge> <_voxeldoesart> I'm using (regex101)[https://regex101.com/] to understand this better
01:18 < bridge> <_voxeldoesart> Yeah, that works perfectly! Thanks!
01:18 < bridge> <_voxeldoesart> I'm using https://regex101.com/ to understand this better
07:07 < bridge> <ryozuki> fun fact, vscode uses ripgrep made in rust
07:08 < bridge> <_voxeldoesart> ok
07:08 < bridge> <ryozuki> so ur using rust made software
07:09 < bridge> <ryozuki> :gigachad:
07:09 < bridge> <cyberFighter> no im not
07:11 < bridge> <_voxeldoesart> ‚ùå
07:11 < bridge> <_voxeldoesart> typescript
07:14 < bridge> <_voxeldoesart> if i had the time and energy rn id continue chipping at the thing i was doing but its 1 am
07:15 < bridge> <_voxeldoesart> i love making pointlesa adobe jsfls
07:15 < bridge> <_voxeldoesart> i love making pointless adobe jsfls
08:39 < ChillerDragon> oof running clang tidy on arch is messy af seems like the new version doesnt like the use of static functions
08:43 < bridge> <ryozuki> @jupeyy_keks did u prepare todays question
08:44 < bridge> <ryozuki> <a:noted:1121473576189579275>
08:44 < ChillerDragon> rost fridai
09:13 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1149603383150391317/image.png
09:13 < bridge> <ryozuki> its firefox update day
09:13 < bridge> <Jupstar ‚ú™> Mhh
09:13 < bridge> <Jupstar ‚ú™> What is the best library you recently found
09:14 < bridge> <ryozuki> https://github.com/moka-rs/moka
09:15 < bridge> <ryozuki> there is also https://docs.rs/cached/latest/cached/ but its diferent
09:15 < bridge> <ryozuki> cached is more for memoizing
09:34 < bridge> <ryozuki> > Wasmer is the most popular WebAssembly runtime for Rust. It supports JIT (Just In Time) and AOT (Ahead Of Time) compilation as well as pluggable compilers suited to your needs.
09:34 < bridge> <ryozuki> @jupeyy_keks nice wasmer supports AOT too
09:34 < bridge> <ryozuki> im gonna tinker with it
09:41 < bridge> <Jupstar ‚ú™> I'm more surprised it supports jit.. never seen an example for that xd
09:42 < bridge> <ryozuki> @jupeyy_keks to make wasm modules with rust u use wasm-pack?=
09:43 < bridge> <Jupstar ‚ú™> No, why?
09:44 < bridge> <ryozuki> wasm-bindgen?
09:44 < bridge> <ryozuki> what do u use
09:44 < bridge> <ryozuki> i want to know to test with wasmer
09:44 < bridge> <ryozuki> xd
09:45 < bridge> <Jupstar ‚ú™> They are all for JavaScript or not?
09:45 < bridge> <ryozuki> ah i see
09:45 < bridge> <ryozuki> so how u do it
09:45 < bridge> <ryozuki> u simply declare extern functions?
09:45 < bridge> <ryozuki> and target wasm32?
09:46 < bridge> <ryozuki> today rust friday is for me xd
09:47 < bridge> <Jupstar ‚ú™> No. Wasm runtime has a completely separated memory model.You cannot really just call it.
09:47 < bridge> <Jupstar ‚ú™> 
09:47 < bridge> <Jupstar ‚ú™> I share memory over a serializer, and call the function of the wasmer API
09:48 < bridge> <ryozuki> im just asking
09:48 < bridge> <ryozuki> how u make a wasm module
09:48 < bridge> <ryozuki> oh
09:48 < bridge> <ryozuki> so u dont call host functions?
09:48 < bridge> <Jupstar ‚ú™> i do, in wasmer you export host functions
09:48 < bridge> <Jupstar ‚ú™> so yes, host functions are basically external functions
09:49 < bridge> <Jupstar ‚ú™> i thought u meant calling a guest function
09:50 < bridge> <ryozuki> https://github.com/wasmerio/wasmer/blob/master/examples/imports_exports.rs
09:50 < bridge> <ryozuki> i mean u can do that too
09:50 < bridge> <Jupstar ‚ú™> in the export you also bind a environment (Arc<Env>>) and that gets called as well. So over that env you basically modify whatever you want to modify
09:50 < bridge> <ryozuki> <https://github.com/wasmerio/wasmer/blob/master/examples/exports_function.rs>
09:50 < bridge> <ryozuki> calling a guest
09:50 < bridge> <Jupstar ‚ú™> yes
09:51 < bridge> <ryozuki> ```rust
09:51 < bridge> <ryozuki>   let sum_typed: TypedFunction<(i32, i32), i32> = sum.typed(&mut store)?;
09:51 < bridge> <ryozuki> 
09:51 < bridge> <ryozuki>     println!("Calling `sum` function (natively)...");
09:51 < bridge> <ryozuki>     // Let's call the `sum` exported function. The parameters are
09:51 < bridge> <ryozuki>     // statically typed Rust values of type `i32` and `i32`. The
09:51 < bridge> <ryozuki>     // result, in this case particular case, in a unit of type `i32`.
09:51 < bridge> <ryozuki>     let result = sum_typed.call(&mut store, 3, 4)?;
09:51 < bridge> <ryozuki> ```
09:51 < bridge> <Jupstar ‚ú™> sadly wasmer has no scoped call.. so i have to use unsafe for imports
09:51 < bridge> <Jupstar ‚ú™> yeah i meant imports above*
09:51 < bridge> <Jupstar ‚ú™> imported into the guest
09:52 < bridge> <Jupstar ‚ú™> it's weird naming ^^
09:55 < bridge> <Jupstar ‚ú™> @ryozuki what do you want to use it for?
09:56 < bridge> <ryozuki> i want to test a wasm host + guest
09:56 < bridge> <Jupstar ‚ú™> i can only recommend from personal experience to move as much into the module as possible and don't do one call per function like system(so not that func1 calls func1 on wasm, func2 calls func2 etc.)
09:56 < bridge> <ryozuki> to learn it
09:57 < bridge> <Jupstar ‚ú™> i c. It's fun, but it would also be nice if it would be easier üòÑ
09:58 < bridge> <Jupstar ‚ú™> the most important thing you need to know is, that the global memory of the guest is always called "memory".
09:58 < bridge> <Jupstar ‚ú™> 
09:58 < bridge> <Jupstar ‚ú™> so:
09:58 < bridge> <Jupstar ‚ú™> `instance.exports.get_memory("memory")`
09:58 < bridge> <Jupstar ‚ú™> 
09:58 < bridge> <Jupstar ‚ú™> Will give you the guest memory export.
09:59 < bridge> <Jupstar ‚ú™> WASM uses linear memory, so this memory export can grow
09:59 < bridge> <Jupstar ‚ú™> i think generally understanding the memory model is important.. the rest is basically just calling functions by string names xd
09:59 < bridge> <ryozuki> rn im just trying to figure out how to make 1 crate in a workspace  compile to wasm32 and the other not
09:59 < bridge> <ryozuki> xd
09:59 < bridge> <Jupstar ‚ú™> xd
09:59 < bridge> <ryozuki> i probs need nightly feature
10:00 < bridge> <Jupstar ‚ú™> i don't build any wasm module automatically.. i don't want the wasm toolchain as must have to compile the client
10:00 < bridge> <ryozuki> https://doc.rust-lang.org/cargo/reference/unstable.html#per-package-target
10:00 < bridge> <ryozuki> well for me its more like a nice workflow
10:00 < bridge> <ryozuki> but ur right
10:30 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1149622663413764127/RDT_20230908_1029351022476687481882556.jpg
10:30 < bridge> <ryozuki> :justatest:
12:03 < bridge> <ryozuki> look @learath2 they are removing you
12:03 < bridge> <ryozuki> > We don't have any own C source files anymore.
12:09 < bridge> <learath2> I may aswell resign :AnyaSob:
12:12 < bridge> <ryozuki> ```
12:12 < bridge> <ryozuki> #[no_mangle]
12:12 < bridge> <ryozuki> pub fn add(left: u32, right: u32) -> u32 {
12:12 < bridge> <ryozuki>     left + right
12:12 < bridge> <ryozuki> }
12:12 < bridge> <ryozuki> ```
12:12 < bridge> <ryozuki> ```
12:12 < bridge> <ryozuki> ‚ùØ cargo r -- target/wasm32-unknown-unknown/debug/guest.wasm 
12:12 < bridge> <ryozuki>     Finished dev [optimized + debuginfo] target(s) in 0.04s
12:12 < bridge> <ryozuki>      Running `target/debug/host target/wasm32-unknown-unknown/debug/guest.wasm`
12:12 < bridge> <ryozuki> [host/src/main.rs:20] &result = [
12:12 < bridge> <ryozuki>     I32(4),
12:12 < bridge> <ryozuki> ]
12:12 < bridge> <ryozuki> ```
12:12 < bridge> <Jupstar ‚ú™> epic
12:12 < bridge> <ryozuki> epic
12:12 < bridge> <ryozuki> i32 but the comment says ints in wasm are sign agnostic
12:12 < bridge> <Jupstar ‚ú™> the safest add two numbers ever
12:12 < bridge> <ryozuki> xd
12:12 < bridge> <Jupstar ‚ú™> safe rust compiled to wasm xd
12:13 < bridge> <Jupstar ‚ú™> now create bindgen xd
12:13 < bridge> <ryozuki> bindgen?
12:13 < bridge> <Jupstar ‚ú™> create a macro that automates anything u done here by hand
12:14 < bridge> <ryozuki> ah
12:14 < bridge> <ryozuki> but i dont want the guest to just be rust
12:14 < bridge> <ryozuki> but im interested in how to call a host function now
12:14 < bridge> <ryozuki> let me try
12:21 < bridge> <ryozuki> ```
12:21 < bridge> <ryozuki> #[no_mangle]
12:21 < bridge> <ryozuki> pub fn add(left: i32, right: i32) -> i32 {
12:21 < bridge> <ryozuki>     unsafe { print_wasm(left) };
12:21 < bridge> <ryozuki>     unsafe { print_wasm(right) };
12:21 < bridge> <ryozuki>     left + right
12:21 < bridge> <ryozuki> }
12:21 < bridge> <ryozuki> 
12:21 < bridge> <ryozuki> extern {
12:21 < bridge> <ryozuki>     fn print_wasm(a: i32);
12:21 < bridge> <ryozuki> }
12:21 < bridge> <ryozuki> ```
12:21 < bridge> <ryozuki> this worked lol
12:21 < bridge> <ryozuki> ```
12:21 < bridge> <ryozuki> fn print_wasm(_env: FunctionEnvMut<MyEnv>, a: i32) {
12:21 < bridge> <ryozuki>     println!("{a}");
12:21 < bridge> <ryozuki> }
12:21 < bridge> <ryozuki> ```
12:22 < bridge> <ryozuki> (this is wasm)
12:23 < bridge> <Jupstar ‚ú™> good project for FFR
12:28 < bridge> <heinrich5991> now do strings, I'm interested @ryozuki
12:28 < bridge> <heinrich5991> integers are cheating, they're native types
12:28 < bridge> <ryozuki> yeah i was trying
12:28 < bridge> <ryozuki> i cant put &str in signatur
12:38 < bridge> <Jupstar ‚ú™> Hehe
12:38 < bridge> <Jupstar ‚ú™> I hinted you some stuff. But yeah now the hard part starts
12:56 < bridge> <ryozuki> ```rust
12:56 < bridge> <ryozuki> pub fn host_import(mut env: FunctionEnvMut<()>, memory: Memory, ptr: WasmPtr<u32>) {
12:56 < bridge> <ryozuki>     let memory = memory.view(&env);
12:57 < bridge> <ryozuki>     let derefed_ptr = ptr.deref(&memory);
12:57 < bridge> <ryozuki>     let inner_val: u32 = derefed_ptr.read().expect("pointer in bounds");
12:57 < bridge> <ryozuki>     println!("Got {} from Wasm memory address 0x{:X}", inner_val, ptr.offset());
12:57 < bridge> <ryozuki>     // update the value being pointed to
12:57 < bridge> <ryozuki>     derefed_ptr.write(inner_val + 1).expect("pointer in bounds");
12:57 < bridge> <ryozuki> }
12:57 < bridge> <ryozuki> ```
12:57 < bridge> <ryozuki> @jupeyy_keks the docs for WasmPtr show this
12:57 < bridge> <ryozuki> but
12:57 < bridge> <ryozuki> `fn accept_str(mut env: FunctionEnvMut<()>, memory: Memory, ptr: WasmPtr<u8>, len: u32) {`
12:57 < bridge> <ryozuki> it wont accept me this signature lol
13:05 < bridge> <ryozuki> ok i got the host side
13:06 < bridge> <ryozuki> ```
13:06 < bridge> <ryozuki> ‚ùØ cargo r -- target/wasm32-unknown-unknown/debug/guest.wasm 
13:06 < bridge> <ryozuki>     Finished dev [optimized + debuginfo] target(s) in 0.04s
13:06 < bridge> <ryozuki>      Running `target/debug/host target/wasm32-unknown-unknown/debug/guest.wasm`
13:06 < bridge> <ryozuki> 2
13:06 < bridge> <ryozuki> 2
13:06 < bridge> <ryozuki> adding 2 to 2
13:06 < bridge> <ryozuki> [host/src/main.rs:39] &result = [
13:06 < bridge> <ryozuki>     I32(4),
13:06 < bridge> <ryozuki> ]
13:06 < bridge> <ryozuki> ```
13:06 < bridge> <ryozuki> ```rust
13:06 < bridge> <ryozuki> #[no_mangle]
13:07 < bridge> <ryozuki> pub fn add(left: i32, right: i32) -> i32 {
13:07 < bridge> <ryozuki>     unsafe {
13:07 < bridge> <ryozuki>         print_wasm(left);
13:07 < bridge> <ryozuki>         print_wasm(right);
13:07 < bridge> <ryozuki> 
13:07 < bridge> <ryozuki>         let str = format!("adding {} to {}", left, right);
13:07 < bridge> <ryozuki>         accept_str(str.as_ptr(), str.len() as u32);
13:07 < bridge> <ryozuki>     }
13:07 < bridge> <ryozuki>     left + right
13:07 < bridge> <ryozuki> }
13:07 < bridge> <ryozuki> 
13:07 < bridge> <ryozuki> extern {
13:07 < bridge> <ryozuki>     fn print_wasm(a: i32);
13:07 < bridge> <ryozuki>     fn accept_str(ptr: *const u8, len: u32);
13:07 < bridge> <ryozuki> }
13:07 < bridge> <ryozuki> ```
13:07 < bridge> <ryozuki> @jupeyy_keks i got it
13:07 < bridge> <ryozuki> epyc
13:07 < bridge> <ryozuki> the trick is a functionenv with a option field to memory
13:07 < bridge> <ryozuki> ```rust
13:07 < bridge> <ryozuki> let instance = Instance::new(&mut store, &module, &import_object)?;
13:07 < bridge> <ryozuki>     let env = env.as_mut(&mut store);
13:07 < bridge> <ryozuki>     let mem = instance.exports.get_memory("memory")?;
13:07 < bridge> <ryozuki>     env.memory = Some(mem.clone());
13:08 < bridge> <ryozuki> ```
13:08 < bridge> <ryozuki> and setting it after the instance
13:21 < bridge> <ryozuki> this is it
13:21 < bridge> <ryozuki> i love wasm now
13:21 < bridge> <ryozuki> bye rust (joke)
13:21 < bridge> <Jupstar ‚ú™> Xd
13:21 < bridge> <ryozuki> lua has a compiler to wasm right
13:21 < bridge> <ryozuki> i wonder how this would work
13:21 < bridge> <ryozuki> are there pointers in lua
13:22 < bridge> <Jupstar ‚ú™> Does it?
13:22 < bridge> <ryozuki> u said there was a compiler to wasm
13:22 < bridge> <ryozuki> no?
13:22 < bridge> <Jupstar ‚ú™> I mean compiler
13:22 < bridge> <ryozuki> i forgor
13:22 < bridge> <Jupstar ‚ú™> I suggested to run the lua interpreter inside wasm
13:22 < bridge> <ryozuki> ah
13:22 < bridge> <ryozuki> the interpreter itself
13:22 < bridge> <Jupstar ‚ú™> Yeah
13:23 < bridge> <ryozuki> js compiles to wasm?
13:23 < bridge> <Jupstar ‚ú™> Doubt. There is assemblyscript
13:23 < bridge> <ryozuki> hm
13:23 < bridge> <Jupstar ‚ú™> It's basically typescript for wasm
13:23 < bridge> <ryozuki> so for modding we could only use c++, rust
13:23 < bridge> <ryozuki> what else
13:23 < bridge> <Jupstar ‚ú™> No, we can use all
13:23 < bridge> <ryozuki> how
13:24 < bridge> <Jupstar ‚ú™> U can compile most stuff to wasm
13:24 < bridge> <Jupstar ‚ú™> So complete the interpreter to wasm
13:24 < bridge> <Jupstar ‚ú™> And run it there
13:24 < bridge> <Jupstar ‚ú™> Compile*
13:24 < bridge> <ryozuki> meh
13:25 < bridge> <Jupstar ‚ú™> Well its only a small overhead compared to directly using the interpreter
13:25 < bridge> <ryozuki> whqt about python
13:25 < bridge> <Jupstar ‚ú™> Same for any language xd
13:26 < bridge> <Jupstar ‚ú™> You have to understand one thing anyway. A real python interpreter would be unsafe
13:26 < bridge> <Jupstar ‚ú™> It can open files
13:27 < bridge> <ryozuki> rust is better
13:27 < bridge> <ryozuki> it wont compile if u do non wasmthings
13:27 < bridge> <ryozuki> when targeting wasm
13:27 < bridge> <ryozuki> the end result is: rust for all and all for rust
13:28 < bridge> <ryozuki> thanks for coming to my ted talk
13:28 < bridge> <Jupstar ‚ú™> Yep xd
13:29 < bridge> <Jupstar ‚ú™> At least wasm offers okish perf
13:29 < bridge> <Jupstar ‚ú™> That's where all script languages Fall behind
13:51 < bridge> <reitw> lol u can spam notifications on apple devices with a flipper zero
15:13 < bridge> <patiga> can do when I'm home, I do kinda try to keep the dependencies up-to-date
15:15 < bridge> <Iza> Yeah you basically send bluetooth header packets that mimic apple products like airpods etc
15:33 < bridge> <ryozuki> https://napi.rs/
15:34 < bridge> <Jupstar ‚ú™> @ryozuki have u heard of https://github.com/vercel/turbo
15:34 < bridge> <Jupstar ‚ú™> to replace webpack
15:34 < bridge> <Jupstar ‚ú™> written in rust
15:37 < bridge> <ryozuki> ah
15:38 < bridge> <ryozuki> hm no but nice
15:38 < bridge> <ryozuki> i think today ppl use another thing
15:38 < bridge> <ryozuki> called vite
15:38 < bridge> <ryozuki> ah
15:38 < bridge> <ryozuki> its a unrelated tool maybe
15:38 < bridge> <ryozuki> https://github.com/vitejs/vite
15:38 < bridge> <ryozuki> svelte uses vite
15:38 < bridge> <Jupstar ‚ú™> no rust no trust
15:39 < bridge> <ryozuki> vite uses https://rollupjs.org/
15:39 < bridge> <ryozuki> yeah turbo is probs faster if rust
15:40 < bridge> <Jupstar ‚ú™> @ryozuki what rust crate do you recommend for creating https servers
15:40 < bridge> <Jupstar ‚ú™> i want it simple if possible
15:41 < bridge> <heinrich5991> axum I heard
15:42 < bridge> <heinrich5991> http at least. for https, you usually use a reverse proxy
15:42 < bridge> <ryozuki> axum
15:42 < bridge> <ryozuki> i use axum always
15:42 < bridge> <ryozuki> axum is made by tokio team
15:42 < bridge> <Jupstar ‚ú™> okay
15:42 < bridge> <ryozuki> i recommend axum having tried: axum, actix-web, rocket
15:44 < bridge> <heinrich5991> do you have an opinion on warp btw?
15:44 < bridge> <ryozuki> i have a service i made for FFXIV, https://market.xivhub.org/
15:44 < bridge> <ryozuki> the backend for this is powered by axum
15:44 < bridge> <ryozuki> i handle millions of requests achtually
15:44 < bridge> <ryozuki> https://github.com/ZhyraPlugins/xivhub-market-api
15:44 < bridge> <ryozuki> source code
15:44 < bridge> <heinrich5991> millions of requests per ‚Ä¶?
15:45 < bridge> <ryozuki> month
15:45 < bridge> <ryozuki> XD
15:45 < bridge> <ryozuki> sorry no hype
15:45 < bridge> <Jupstar ‚ú™> that's what i wanted to hear
15:45 < bridge> <ryozuki> let me check cloudflare
15:45 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1149702149165547572/image.png
15:46 < bridge> <ryozuki> ddstats has 300k
15:46 < bridge> <ryozuki> well the ddnet wiki has way more requests tho
15:47 < bridge> <ryozuki> i cant check cloudflare but i can check nginx logs
15:48 < bridge> <ryozuki> what u doin btw
15:48 < bridge> <ryozuki> i also recommend not using a ORM
15:48 < bridge> <ryozuki> and instead use sqlx with sqlx-cli to handle migrations
15:48 < bridge> <Jupstar ‚ú™> just want to test a simple http request -> image answer
15:48 < bridge> <ryozuki> ohh
15:48 < bridge> <ryozuki> tee renderer?
15:48 < bridge> <Jupstar ‚ú™> LMAO
15:48 < bridge> <ryozuki> i had my idea to do that but i haver to fix the tee
15:48 < bridge> <ryozuki> have*
15:48 < bridge> <Jupstar ‚ú™> well that's indeed my idea
15:48 < bridge> <Jupstar ‚ú™> xD
15:49 < bridge> <ryozuki> lmao
15:49 < bridge> <ryozuki> do it please
15:49 < bridge> <heinrich5991> @ryozuki do you know warp?
15:49 < bridge> <ryozuki> and make it open source
15:49 < bridge> <Jupstar ‚ú™> but i don't really want it to work like you think
15:49 < bridge> <ryozuki> @heinrich5991 i tried it long ago and  i didnt like my xp with it
15:49 < bridge> <ryozuki> it felt a bit confusing iirc
15:49 < bridge> <Jupstar ‚ú™> i want to test to run vulkan on my server xD
15:49 < bridge> <ryozuki> but i was also not as experienced
15:49 < bridge> <ryozuki> but the warp author didnt discontinue it?
15:49 < bridge> <ryozuki> he is just working on hyper iirc
15:49 < bridge> <Jupstar ‚ú™> so not directly a pure tee renderer
15:49 < bridge> <ryozuki> ah, i wanted a simple api service to render  tee from skins on request
15:50 < bridge> <Jupstar ‚ú™> more like a tw renderer
15:51 < bridge> <TsFreddie> i just bought nou.is
15:51 < bridge> <Jupstar ‚ú™> this site can't be reached
15:52 < bridge> <TsFreddie> cuz i just bought it
15:52 < bridge> <Ewan> :kek:
15:52 < bridge> <Ewan> gm
15:52 < bridge> <ryozuki> oh btw im migrating most of my domains from gandi to google domains
15:52 < bridge> <ryozuki> as they expire
15:52 < bridge> <ryozuki> its cheaper for some reason
15:52 < bridge> <heinrich5991> I wouldn't use google tbh
15:52 < bridge> <Ewan> the google illusion
15:52 < bridge> <heinrich5991> they lock you out, you have no recourse
15:53 < bridge> <Jupstar ‚ú™> good afternoon
15:53 < bridge> <TsFreddie> isn't google domains sold to squarespace or something
15:53 < bridge> <ryozuki> can they lock u out of ur own domain? i know they can do that from adsense and stuff
15:53 < bridge> <ryozuki> yeah
15:53 < bridge> <ryozuki> they sold it
15:53 < bridge> <Ewan> wdym it‚Äôs 7:53
15:53 < bridge> <heinrich5991> they lock you out of GCE, too, destroying businesses overnight
15:53 < bridge> <Jupstar ‚ú™> 3:53
15:53 < bridge> <ryozuki> i think locking out of ur domain has more legal implicaitons?
15:53 < bridge> <Ewan> Your timezone is wrong
15:53 < bridge> <ryozuki> thats crazy
15:53 < bridge> <ryozuki> @heinrich5991 what domain web u use?
15:53 < bridge> <heinrich5991> I use inwx.de
15:54 < bridge> <Jupstar ‚ú™> yes, i live in future, bcs i'm future human
15:54 < bridge> <Ewan> :monkaStop:
15:54 < bridge> <Jupstar ‚ú™> hello dear past human
15:54 < bridge> <heinrich5991> it's german, so maybe you don't like it
15:54 < bridge> <ryozuki> i just love how clean google interface  is
15:54 < bridge> <heinrich5991> someone recommended it to me, it worked well
15:54 < bridge> <ryozuki> why good stuff is bad  sage
15:54 < bridge> <ryozuki> sadge
15:55 < bridge> <ryozuki> well google domains wont exist
15:55 < bridge> <TsFreddie> oof, i forgot i had the ddrace ones :justatest:
15:55 < bridge> <TsFreddie> https://cdn.discordapp.com/attachments/293493549758939136/1149704466094899200/image.png
15:55 < bridge> <Jupstar ‚ú™> r they so cheap?
15:55 < bridge> <Jupstar ‚ú™> i always find domains rather expensive
15:55 < bridge> <heinrich5991> german domains are like 6‚Ç¨/year
15:55 < bridge> <Jupstar ‚ú™> yes
15:55 < bridge> <Jupstar ‚ú™> expensive xd
15:56 < bridge> <TsFreddie> tencent gave me teel.ink for free (not really)
15:57 < bridge> <Jupstar ‚ú™> on netcup u often get .de domains for 13 cents per month xd
15:57 < bridge> <Jupstar ‚ú™> ink sounds expensive
15:57 < bridge> <ryozuki> anyone tried cloudflare for domains?
15:57 < bridge> <Jupstar ‚ú™> but anything not .de is expensive in my experience
15:57 < bridge> <Jupstar ‚ú™> 1000000‚Ç¨ / year i bet xd
15:57 < bridge> <Jupstar ‚ú™> i want .ar
15:57 < bridge> <heinrich5991> jupst
15:57 < bridge> <Jupstar ‚ú™> but it's very expensive
15:57 < bridge> <Jupstar ‚ú™> üò¨
15:58 < bridge> <TsFreddie> https://cdn.discordapp.com/attachments/293493549758939136/1149705253223141427/image.png
15:58 < bridge> <Jupstar ‚ú™> 55 chinese characters
15:58 < bridge> <TsFreddie> 7 euro
15:58 < bridge> <Jupstar ‚ú™> sounds ok
15:58 < bridge> <Jupstar ‚ú™> if it's per year
15:58 < bridge> <TsFreddie> ye
15:58 < bridge> <TsFreddie> nou.is isn't cheap tho
15:59 < bridge> <TsFreddie> it's like 47 usd :justatest:
15:59 < bridge> <Jupstar ‚ú™> what even is .is
15:59 < bridge> <Jupstar ‚ú™> islamic state?
15:59 < bridge> <ryozuki> u know there is .google
15:59 < bridge> <TsFreddie> iceland
15:59 < bridge> <ryozuki> .org best anyway
15:59 < bridge> <TsFreddie> apparently
15:59 < bridge> <Jupstar ‚ú™> i once heard u can buy TLD for like 100k
15:59 < bridge> <Jupstar ‚ú™> not sure if true
15:59 < bridge> <ryozuki> yeah
15:59 < bridge> <ryozuki> google did
16:00 < bridge> <Jupstar ‚ú™> let's collect donations xd
16:00 < bridge> <TsFreddie> there is .ee
16:00 < bridge> <Jupstar ‚ú™> oh ok.. i mean from a german perspective it makes sense
16:00 < bridge> <Jupstar ‚ú™> Island = iceland xd
16:00 < bridge> <ryozuki> .weeb
16:00 < bridge> <Jupstar ‚ú™> üò¨
16:00 < bridge> <TsFreddie> i tried some ending with t, didn't find any good ones
16:00 < bridge> <ryozuki> üò¨
16:00 < bridge> <ryozuki> when .rust
16:00 < bridge> <Jupstar ‚ú™> @ryozuki u work for argentinians.. ask them for .ar domain xd
16:00 < bridge> <ryozuki> why do i want one xd
16:01 < bridge> <Jupstar ‚ú™> i want it
16:01 < bridge> <ryozuki> u can buy it probs
16:01 < bridge> <ryozuki> just likeu can buy .es
16:01 < bridge> <Jupstar ‚ú™> >> 20‚Ç¨ is too much for a domain imo
16:01 < bridge> <ryozuki> xd
16:01 < bridge> <Jupstar ‚ú™> i mean it has no real value
16:01 < bridge> <ryozuki> just go to a argentina registar
16:01 < bridge> <Jupstar ‚ú™> xD
16:02 < bridge> <TsFreddie> some european domains check contacts i think?
16:03 < bridge> <ryozuki> .cat says it checks the web has atleast a catalan version
16:03 < bridge> <ryozuki> and it cant be used for cats
16:03 < bridge> <ryozuki> tm
16:03 < bridge> <TsFreddie> :pepeW:
16:03 < bridge> <ryozuki> http://nyan.cat/
16:03 < bridge> <ryozuki> the trick is
16:03 < bridge> <ryozuki> to make it available in catalan
16:03 < bridge> <ryozuki> there is a language  selection
16:04 < bridge> <heinrich5991> so it can be used for cats? ^^
16:04 < bridge> <ryozuki> if it has text in catalan ye iirc
16:05 < bridge> <TsFreddie> kinda want a .no domain
16:05 < bridge> <ryozuki> > The .cat TLD is intended to serve the needs of the Catalan Linguistic and Cultural Community on the Internet (the ‚ÄúCommunity‚Äù).
16:05 < bridge> <ryozuki> > 
16:05 < bridge> <ryozuki> >         The Community consists of those who use the Catalan language for their online communications, and/or promote the different aspects of Catalan culture online, and/or want to specifically address their online communications to that Community.
16:05 < bridge> <_voxeldoesart> ew theres nysn cat nfts?
16:05 < bridge> <_voxeldoesart> ew theres nyan cat nfts?
16:05 < bridge> <TsFreddie> i mean, are you really surprised
16:05 < bridge> <ryozuki> > Registry‚Äôs policies may permit registrations in .cat TLD to the following:
16:05 < bridge> <ryozuki> > 
16:05 < bridge> <ryozuki> >         Universities, schools, research institutions and other academic entities that use Catalan in their academic activities or teach/promote aspects of Catalan culture.
16:05 < bridge> <ryozuki> >         public or private entities whose aim is promoting the Catalan culture.
16:05 < bridge> <ryozuki> >         writers, translators, correctors and journalists publishing (or contributing to) works in Catalan
16:05 < bridge> <ryozuki> >         publishing companies that publish works in the Catalan language or relating to the Catalan culture.
16:05 < bridge> <ryozuki> >         media using the Catalan language for their communications.
16:05 < bridge> <ryozuki> >         individuals, groups, businesses, organizations, entities or initiatives, however constituted, carrying online communications in Catalan.
16:06 < bridge> <ryozuki> >         individuals, groups, businesses, organizations, entities or initiatives, however constituted, proving their belonging to the Community by way of sponsorship from other members of the Community in the form established in the Registration Policies.
16:06 < bridge> <ryozuki> >         members of Fundaci√≥ puntCAT
16:06 < bridge> <_voxeldoesart> no
16:06 < bridge> <ryozuki> this is the rule but idk how often enforced
16:36 < bridge> <ryozuki> @learath2 do u know about the new BORE scheduler?
16:36 < bridge> <ryozuki> do u know how to use it in gentoo
16:37 < bridge> <ryozuki> https://github.com/firelzrd/bore-scheduler
16:38 < bridge> <Jupstar ‚ú™> TIL
16:38 < bridge> <Jupstar ‚ú™> rust depedency
16:38 < bridge> <Jupstar ‚ú™> any_lib_inside_repo = { git = "file:///globalpath" }
16:39 < bridge> <Jupstar ‚ú™> kinda funny u can specify git repos like that
16:42 < bridge> <heinrich5991> mm you'd usually use a path dependency for that
16:42 < bridge> <Jupstar ‚ú™> but then i need to link the lib directly
16:42 < bridge> <Jupstar ‚ú™> repos are fully scanned
16:42 < bridge> <Jupstar ‚ú™> xd
16:44 < bridge> <Ewan> speaking of scheduler which one should I use
16:44 < bridge> <heinrich5991> wdym, link to the lib directly?
16:45 < bridge> <Jupstar ‚ú™> the path to the lib directly, instead using the root
16:45 < bridge> <heinrich5991> `path = "/abc/def"` probably works, too, no?
16:45 < bridge> <heinrich5991> aah
16:45 < bridge> <heinrich5991> I get it
16:45 < bridge> <Jupstar ‚ú™> not if i not use the direct path tolib
16:45 < bridge> <Jupstar ‚ú™> xd
16:45 < bridge> <heinrich5991> you mean it doesn't work with the path to the workspace
16:45 < bridge> <heinrich5991> with `path = "‚Ä¶"`
16:47 < bridge> <Jupstar ‚ú™> well it is indeed a different project. but yeah i just want to link to it's workspace so i don't have to find all paths for all libs
16:50 < bridge> <ryozuki> i think u can only change scheduler by applying kernel patches
16:50 < bridge> <ryozuki> iirc
16:50 < bridge> <ryozuki> but i seen some videos
16:50 < bridge> <ryozuki> TKG-pds seems the best specially for gaming
16:50 < bridge> <ryozuki> but BORE is new
16:50 < bridge> <ryozuki> and i havent seen benches
16:56 < bridge> <learath2> Nope, haven't seen it yet
16:57 < bridge> <learath2> If you want to try a new scheduler you'll need to use epatches
16:57 < bridge> <learath2> Maybe someone already has a kernel package with this patchset in some overlay?
17:00 < bridge> <Ewan> i wasn‚Äôt gonna use the distribution kernel forever
17:00 < bridge> <Ewan> this is fine i think
18:05 < bridge> <Jupstar ‚ú™> @robyt3 üò¨
18:05 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1149737227392401508/image.png
18:05 < bridge> <robyt3> Yeah, when PR's for label changes?
18:05 < bridge> <ryozuki> whats going on
18:05 < bridge> <Jupstar ‚ú™> xDDD
18:05 < bridge> <robyt3> We edited tags at the same time and it conflicted
18:05 < bridge> <ryozuki> xd
18:05 < bridge> <ryozuki> race condition
18:06 < bridge> <Jupstar ‚ú™> github moment
18:06 < bridge> <Jupstar ‚ú™> chillerdragon: ^
18:06 < bridge> <chillerdragon> Indeed
18:06 < bridge> <chillerdragon> Very GitHub
18:26 < bridge> <chillerdragon> @kaffeine0: oh no infclass is vanilla 0.6 based bro. You do all the refactorings haha. Reminds me of my humble 0.7 support beginnings of cherry picking random upstream commits into ddnet.
18:26 < bridge> <chillerdragon> 
18:26 < bridge> <chillerdragon> I can‚Äôt imagine what it‚Äôs like porting that to ddnet. Good luck bro!
18:26 < bridge> <chillerdragon> 
18:26 < bridge> <chillerdragon> Reminds me of the insane ddnet++ merge to ddnet. That was nuts. It was a seperate git repo. Where the initial commit was from me. And I somehow managed to get years of my history attached on the ddnet history and then merge back up to master.
18:26 < bridge> <chillerdragon> https://cdn.discordapp.com/attachments/293493549758939136/1149742567303426180/ima_34f204a.jpeg
18:26 < bridge> <chillerdragon> Looked like this for days
18:26 < bridge> <chillerdragon> Was jumping from ddnet release to release and doing a lot of merges
18:27 < bridge> <chillerdragon> Which is also horrible because the troll deen force pushed away release tags
18:32 < bridge> <_voxeldoesart> now that im thinking about it damn
18:32 < bridge> <_voxeldoesart> ddnet has been in some sort of update drought as of recently
18:33 < bridge> <chillerdragon> Still getting weekly conflicts in all my forks
18:33 < bridge> <chillerdragon> ddnet code base moves way too fast
18:33 < bridge> <chillerdragon> And teeworlds code base too slow
18:33 < bridge> <chillerdragon> @_voxeldoesart: ddnet is not Update dry! Did you see teeworlds? :D
18:34 < bridge> <_voxeldoesart> no
18:34 < bridge> <_voxeldoesart> oh wait OHHHH
18:35 < bridge> <chillerdragon> There was 1 feature release in my decade long playtime
18:35 < bridge> <chillerdragon> ddnet does crazy updates all the time. For example a lot of editor things happening right now
18:35 < bridge> <_voxeldoesart> anyways i think ddnet is gonna become more backwards compat after 0.7 support releases
18:36 < bridge> <_voxeldoesart> like, more and more old things will be supported
18:36 < bridge> <chillerdragon> Like 0.6 ? :D
18:36 < bridge> <_voxeldoesart> isnt This 0.6
18:36 < bridge> <chillerdragon> That‚Äôs the joke
18:36 < bridge> <chillerdragon> It‚Äôs still old
18:42 < bridge> <ryozuki> https://beta.tauri.app/blog/roadmap-to-tauri-2-0/
18:43 < bridge> <kaffeine0> DDNet is backward compatible on the network level but on the codebase and API it is the Elusive Joe. Every patch release results in conflicts here and there (at least on the client side).
18:46 < bridge> <ryozuki> https://factorio.com/blog/post/fff-375
18:53 < bridge> <kaffeine0> Yeah but "This is the way".
18:53 < bridge> <kaffeine0> Infclass is huge ‚Äî 24 entity types, 28 weapons, 22 player classes, custom map format with own external map editor, localization with "2 248 words to translate", statistics, classes menu, and the original author decided to refactor some base classes (CConsole) ü§Ø.
18:53 < bridge> <kaffeine0> 
18:53 < bridge> <kaffeine0> I wrote own CMake file (so no, I don't benefit from https://github.com/ddnet/ddnet/pull/7145) and build with conan, so everything is different.
18:54 < bridge> <kaffeine0> Initially everything was baked into the base classes (CServer, CCharacter, CPlayer, etc).
18:56 < bridge> <cyberFighter> the editor got changed like 30 times this month
18:58 < bridge> <kaffeine0> True. A few month ago I added initial infclass maps support to the client fork, and damn the implementation took twice less time than I already spent on the many rebases of the editor code. ü§Ø üòÖ
19:21 < bridge> <kaffeine0> Initially whole mod logic was baked into the base classes (CServer, CCharacter, CPlayer, etc).
19:37 < bridge> <chairn> sometimes i am üòâ
19:40 < bridge> <chairn> i hope it wasn't too important
19:45 < bridge> <learath2> No, I was just curious if you knew about how much leakage current modern mosfets have üòÑ
19:45 < bridge> <chairn> depends on the feature size
19:47 < bridge> <chairn> since 28nm node, leakage is rising again due to smaller gates, so 14nm is more leaky than 22nm for instance
19:47 < bridge> <chairn> i think it's around 100pA to 1nA
19:50 < bridge> <chairn> you have to account for dynamic power, i.e. switching activity which is proportionate to the square of frequency and to the voltage
19:51 < bridge> <chairn> you have to account for dynamic power, i.e. switching activity which is proportionate to the frequency and to the square of voltage
19:51 < bridge> <chairn> Pdyn = CV 2 f
19:51 < bridge> <chairn> Pdyn = CV¬≤f
19:52 < bridge> <chairn> and then, you also need to account for line effects which are R and C
20:16 < bridge> <cyberFighter> ugh, mixing cyrillic into the latin serbian. i swear ill edit it myself some time soon
20:16 < bridge> <cyberFighter> https://cdn.discordapp.com/attachments/293493549758939136/1149770367469101136/image.png
21:27 < bridge> <Iza> since when is cyberfighter serbian
21:35 < bridge> <Jupstar ‚ú™> since today ü•≥
22:06 < bridge> <gerdoe> he was like always serbian
22:06 < bridge> <gerdoe> thats why he refuses to talk with me üßå
22:06 < bridge> <gerdoe> thats why he refuses to talk with me :troll:
22:55 < bridge> <teero777> wth
22:55 < bridge> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1149810149599490139/Screenshot_20230908-2254152.png
22:55 < bridge> <teero777> yt goin wild
23:25 < bridge> <Iza> When you‚Äôve gone through all the english tutorials on youtube
