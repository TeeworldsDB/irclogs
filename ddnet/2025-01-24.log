00:04 < bridge> <learath2> I don't think those ever worked, we only ever used that CI to make sure it still compiles
00:14 < bridge> <totar> but like, why not? I don't think it should be impossible or even that hard to make them work
00:15 < bridge> <learath2> It just was never something we really cared about I guess. Only me, noby and at some point deen had macs, I never played on it, deen only used his for his job and noby probably built his own client
00:15 < bridge> <totar> hmm ok
00:16 < bridge> <ryozuki> ihave mac but i would never play
00:16 < bridge> <learath2> I fixed some macOS sdl issues because I'm very obsessive. Cleaned up the objective C stuff we had. Cleaned up some linking stuff. Didn't really touch it ever again after my mac broke
00:16 < bridge> <ryozuki> the objective c stuff is deprecated
00:16 < bridge> <ryozuki> in macos 14.5 or smth
00:16 < bridge> <ryozuki> like it throws warns
00:16 < bridge> <ryozuki> about methods
00:17 < bridge> <learath2> What we have? I guess it might need an update
00:17 < bridge> <ryozuki> .mm files
00:17 < bridge> <learath2> I did all of this on Catalina, that's 10.15 I think
00:17 < bridge> <totar> deen's pc seems to be the only one capable of making a universal macos binary lol. I can't figure it out
00:18 < bridge> <learath2> Do we ship fat binaries with both aarch64 and amd64?
00:18 < bridge> <totar> yeah it looks like it
00:18 < bridge> <learath2> what fails?
00:18 < bridge> <totar> libpng is linking itself wrong
00:19 < bridge> <totar> or something weird
00:19 < bridge> <totar> see above convo
00:19 < bridge> <learath2> Also I think our official mac build is still crossbuilt from linux, it might be an issue there too
00:19 < bridge> <totar> oh
00:19 < bridge> <totar> interesting
00:19 < bridge> <totar> maybe I should do that instead
00:19 < bridge> <learath2> it is entirely possible no one really ever tried the build process on an actual mac
00:20 < bridge> <learath2> I remember it being quite annoying to set up osxcross, but you can try
00:20 < bridge> <totar> yeah it looked annoying
00:20 < bridge> <learath2> You can also try to fix the native build, or you can donate me a mac and I can try fix the native build again 😄
00:21 < bridge> <learath2> ship me the mac, I ship it back after 😄
00:21 < bridge> <totar> I think the shipping costs more than the mac I'm using to test lol
00:22 < bridge> <learath2> is it native aarch64? that might also be causing issues, back when I last made sure the mac thing still built natively aarch64 macs werent even a thing
00:22 < bridge> <totar> idk
00:22 < bridge> <totar> I think it's like a 2015 mac mini or something
00:22 < bridge> <totar> I forgot the year
00:23 < bridge> <learath2> Ah, that's probably still amd64, yeah idk if you can build fat binaries on there, if anyone tested native builds recently it's deen and he has an apple silicon macbook iirc
00:24 < bridge> <totar> I'm not building it on this mac I'm just testing
00:24 < bridge> <totar> it's building in the github runner
00:24 < bridge> <Ewan> tela builds it all the time
00:24 < bridge> <learath2> Nice to hear someone still does 😄
00:24 < bridge> <Ewan> on x86 tho
00:24 < bridge> <totar> it's easier to build if it only needs to work on your system
00:25 < bridge> <Ewan> fwiw i built it fine
00:25 < bridge> <Ewan> i got it on my work laptop briefly
00:25 < bridge> <Ewan> played tclient
00:25 < bridge> <Ewan> a month or so ago
00:25 < bridge> <totar> it's much harder to run into system library issues if you're building and running it on the same machine
00:26 < bridge> <totar> anyway I'm close to making it work
01:23 < bridge> <totar> :o it finished building this time
01:23 < bridge> <totar> I wonder if it works
01:27 < bridge> <totar> rip
01:27 < bridge> <totar> still broke
01:28 < bridge> <totar> apparently this is literally a cmake bug
01:28 < bridge> <totar> https://gitlab.kitware.com/cmake/cmake/-/issues/18921
01:30 < bridge> <totar> or atleast it's annoying behavior
01:30 < bridge> <totar> It seems you can disable it
02:59 < bridge> <pioooooo> It's so funny to see some Russian guy faked me playing
02:59 < bridge> <pioooooo> Like I have a faker now XD
03:31 < bridge> <hectavoxel> oh my god it works 
03:31 < bridge> <hectavoxel> but it needs to be after a NewRun
03:32 < bridge> <hectavoxel> idk why but oh well LOL
03:33 < bridge> <hectavoxel> uh
03:33 < bridge> <hectavoxel> nevermind??
03:33 < bridge> <hectavoxel> ok so apperantly it just   doesnt place down a tile if the condition is false now
03:33 < bridge> <hectavoxel> im DEFINTELY doing something wrong
03:38 < bridge> <hectavoxel> I fixed it!!
03:42 < bridge> <hectavoxel> https://github.com/ddnet/ddnet/pull/9512
03:42 < bridge> <hectavoxel> Can anyone review this so far, before I add in guide layer?
07:05 < Boke> Is anyone there?
07:29 < bridge> <0xdeen> Hi Boke
07:30 < Boke> Hello! I would like to ask, how can I get the skin of a specific player? And then set it as my own skin?
07:31 < bridge> <0xdeen> in the code? Not sure 😄
07:34 < Boke> Yes, I didn't find it in character.cpp either.
07:34 < bridge> <zhn> you have to look in client side i suppose... :troll:
07:35 < bridge> <zhn> just search up for scoreboard and check where it gets the data about all players to render
07:36 < Boke> Thank you! I'll try it
07:55 < bridge> <teero777> You can also check out players.cpp where the players are rendered.
08:06 < bridge> <ryozuki> morning peeps
08:06 < bridge> <ryozuki> and peepetes
08:08 < bridge> <milkeeycat> morning
08:09 < bridge> <ryozuki> im gonna check it out
08:35 < bridge> <ryozuki> left some minor comments but it looks ok for me
08:39 < Boke> Thanks teero
08:39 < bridge> <hectavoxel> troll
08:39 < bridge> <hectavoxel> https://cdn.discordapp.com/attachments/293493549758939136/1332253533998813299/image.png?ex=6794954a&is=679343ca&hm=525dc27a29e13af4c082148dc68f5710046505c3ba79a7c289a80a69419bb140&
08:41 < Boke> I found something I'm not sure if it's correct or not. How do I output it to the chat box? I'm using "dbg_msg" to output to the console, which is not convenient for viewing.
08:42 < bridge> <meloƞ> `    void SendChatTarget(int To, const char *pText, int VersionFlags = FLAG_SIX | FLAG_SIXUP) const;`
09:03 < bridge> <kollpotato> havent u read the contributing guide xD
09:08 < bridge> <hectavoxel> no
09:21 < bridge> <ryozuki> how is this troll? xd
09:21 < bridge> <ryozuki> the ci will reject the pr if u dont fix it anyway
09:21 < bridge> <ryozuki> iirc
09:22 < bridge> <ryozuki> anyway u need to follow the naming convention
09:33 < bridge> <ryozuki> @robyt3 fixed the ur comments on my censor pr :owo:
09:33 < bridge> <ryozuki> @robyt3 fixed  ur comments on my censor pr :owo:
09:34 < bridge> <ryozuki> `std::optional<std::vector<std::string>> m_vLoadedWords;`
09:34 < bridge> <ryozuki> :gigachad:
09:34 < bridge> <ryozuki> trying to mimic rust kek
09:35 < bridge> <chillerdragon> Yea I distribute my clients based on CI builds. It always worked? Did it recently broke?
09:38 < bridge> <fokkonaut> build - yes, since i dont have  mac idk if F-Client ever worked on mac but some people reported it doesnt work correctly or smth
09:38 < bridge> <totar> It runs?
09:38 < bridge> <totar> I'll take a look at your ci
09:39 < bridge> <chillerdragon> <@749222324980416602>: chillerbot.github.io has cl\_skin\_stealer hehe
09:40 < bridge> <chillerdragon> Do we need a „I have red CONTRIBUTING.md“ checkbox in the pr template?
09:41 < bridge> <totar> Chillerdragon which github ci file makes your builds the ddnet one has never worked afaik?
09:41 < bridge> <chillerdragon> Why is it not convenient? I recommend windowed for development then you can do split screen with your terminal. Otherwise you can also set your log levels to verbose and you see dbg\_msgs in the client console (f1 by default)
09:42 < bridge> <chillerdragon> I have nothing custom I use ddnet
09:42 < bridge> <kollpotato> yea definitely
09:43 < bridge> <chillerdragon> I did not know they started to break. But I am not booting my old ass Mac now to test
09:43 < bridge> <chillerdragon> @totar: your pipeline passes right?
09:43 < bridge> <totar> It builds but it isn't compatible with any macos versions
09:44 < bridge> <totar> Have you tested yours
09:44 < bridge> <chillerdragon> Then I might suffer from the same issue
09:44 < bridge> <totar> Even after fixing that issue I run into more hidden issues that are much harder to fix
09:45 < bridge> <chillerdragon> I know that rqza is gaming on ZillyWoods just fine but that’s a 5 year old teeworlds based client not sure how that is built. I think chillerbot has 0 macos users. So it might be fully broken
09:45 < bridge> <totar> cmake refuses to use the bundled libpng library on macos because the github runners have Mono installed by default and removing it breaks everything.
09:46 < bridge> <totar> There's some weird bug/quirk where it finds the headers from one place and the library from another
09:46 < bridge> <chillerdragon> Should be investigated then. Having the CI do release is nice
09:47 < bridge> <totar> According to learath it never worked so I'm going to make a crossosx ci which has been tested
09:48 < bridge> <totar> Also the Linux builds don't work either but you just need to add prefer bundled libs
09:49 < bridge> <chillerdragon> That should be added to ddnet then
09:50 < bridge> <totar> Its probably possible to fix the native macos build but I'm not qualified
09:51 < bridge> <chillerdragon> Then just fix the Linux one :)
09:53 < bridge> <totar> Sure
10:03 < bridge> <ryozuki> https://x.com/ahmadaccino/status/1882513346144161972
11:10 < bridge> <ryozuki> @learath2 to cast a void* to uintptr_t would u use `reinterpret_cast<uintptr_t>`?
11:11 < bridge> <ryozuki> i guess yes
11:16 < bridge> <meloƞ> make everyone reading your code suffer, static cast it
11:16 < bridge> <meloƞ> static_cast<uintptr_t>(reinterpret_cast<unitptr_t(ptr))
11:20 < bridge> <chairn> static_cast is enough
11:21 < bridge> <ryozuki> doc says reinterpret_cast
11:21 < bridge> <ryozuki> the llvm code uses reinterpret_cast
11:21 < bridge> <ryozuki> > Unlike static_cast, but like const_cast, the reinterpret_cast expression does not compile to any CPU instructions (except when converting between integers and pointers, or between pointers on obscure architectures where pointer representation depends on its type)
11:21 < bridge> <ryozuki> iwonder what cpu instructions does when its ptr to int
11:22 < bridge> <ryozuki> https://llvm.org/docs/LangRef.html#ptrtoint-to-instruction
11:22 < bridge> <ryozuki> > he ‘ptrtoint’ instruction converts value to integer type ty2 by interpreting the pointer value as an integer and either truncating or zero extending that value to the size of the integer type. If value is smaller than ty2 then a zero extension is done. If value is larger than ty2 then a truncation is done. If they are the same size, then nothing is done (no-op cast) other than a type change.
11:22 < bridge> <ryozuki> in llvm it should do thisç
11:22 < bridge> <ryozuki> > the ‘ptrtoint’ instruction converts value to integer type ty2 by interpreting the pointer value as an integer and either truncating or zero extending that value to the size of the integer type. If value is smaller than ty2 then a zero extension is done. If value is larger than ty2 then a truncation is done. If they are the same size, then nothing is done (no-op cast) other than a type change.
11:22 < bridge> <chairn> apprently, casting pointer to int is unsafe with static_cast
11:23 < bridge> <chairn> apparently, casting pointer to int is unsafe with static_cast
11:23 < bridge> <learath2> Yes. That's the correct cast
11:28 < bridge> <learath2> Not only unsafe but iirc impossible. It's not one of the casts the standard allows static_cast to do
11:29 < Boke> @chillerdragon Thank you so much!I have another question, When iterating over the player array using “for(int i = 0; i < MAX_CLIENTS; i++) { // Server-side CPlayer *pPlayer = GameServer()->m_apPlayers[i]; }”, how do you determine if it is not yourself?
11:31 < bridge> <chairn> indeed `error: invalid ‘static_cast’ from type ‘int*’ to type ‘int’`
11:57 < bridge> <pioooooo> There should be a cluentid somewhere I guess
11:58 < bridge> <pioooooo> There should be a clientid somewhere I guess
12:13 < ws-client> <ChillerDragon> Boke what does "yourself" mean on the server side?
12:14 < ws-client> <ChillerDragon> also btw Boke cool kids these days loop using ``for(CPlayer *pPlayer : GameServer()->m_apPlayers)``
12:20 < Boke> What I mean is that this traversal will include my own character, how can I exclude it?
12:22 < bridge> <learath2> What context you are in is important here. For the server there is no general concept of "my own character". How should the server know who you are?
12:22 < bridge> <learath2> In the context of a console command you have a the command users client id which you can use to exclude them
12:23 < bridge> <learath2> In the context of a tile you have the character entities client id field. In the context of a projectile hit you have the projectiles owner id field.
12:24 < bridge> <ryozuki> `for(auto *pPlayer : GameServer()->m_apPlayers)`
12:24 < bridge> <ryozuki> cooler
12:25 < bridge> <ryozuki> @learath2 does auto make it compile slower?
12:25 < bridge> <learath2> Shouldn't a significant amount
12:25 < bridge> <learath2> Type inference of this kind is very cheap
12:26 < bridge> <learath2> In the context of a console command you have the command users client id which you can use to exclude them
12:27 < Boke> I see. Let me rephrase it. I found that "void CCharacterCore::TickDeferred()" in the file "game\gamecore.cpp" handled the "collision between two players". My goal was to get "the character that collided with the client (myself)".
12:31 < Boke> Thank you very much, and I'm sorry that I don't know much about C++. I have been using C# before.
12:38 < bridge> <chillerdragon> @ryozuki: I like goto but no auto
12:38 < bridge> <ryozuki> 🤡
12:39 < bridge> <kollpotato> i like rust
12:39 < bridge> <kollpotato> :owo:
12:39 < bridge> <fokkonaut> i am on 18.8 and dont have an auto-updater button, normal?
12:41 < bridge> <chillerdragon> @ryozuki: thanks for the merges
12:45 < bridge> <kollpotato> chillerdragon: why are u not an official merger?
12:46 < ws-client> <ChillerDragon> i never got the offer maybe im too edgy idk
12:46 < ws-client> <ChillerDragon> Kaffeine also isnt and he is active reviewer
12:47 < ws-client> <ChillerDragon> Boke you have access to ``m_Id`` which is the players ClientId can you work with that?
12:53 < ws-client> <ChillerDragon> tbh getting the full CCharacter sounds a bit messy from gamecore.cpp sounds a bit messy. Its a bit decoupled. But you can access the CCharacterCore
12:53 < ws-client> <ChillerDragon> what do you need from the character?
13:09 < bridge> <louis> where git squash
13:10 < bridge> <kollpotato> @maslowian lets gooo
13:16 < bridge> <kollpotato> now we need/cancelcancelswap
13:16 < bridge> <kollpotato> now we need /cancelcancelswap
13:18 < bridge> <filoqcus> I have asked this question before and would like to ask it again. There are 58 nicknames in the database, I upload each nickname individually to `https://ddnet.org/players/?json2=nickname`. Out of 58 nicknames 10-15 will give status code 500. Every update different nicknames will give status code 500. In general, I do not know what to do with it, maybe it is necessary to issue a delay before each request?
13:18 < bridge> <kollpotato> nah its a bug
13:19 < bridge> <kollpotato> just retry the request if u get an error
13:43 < bridge> <pioooooo> https://discord.com/channels/252358080522747904/757720336274948198/1332108473764151407
14:01 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1332334562411548732/image.png?ex=6794e0c1&is=67938f41&hm=7614ecdd4da62b40a398240cd1dbddafe9765e74e0c63f8ef9df620001afa266&
14:01 < bridge> <ryozuki> this copilot shit ain working
14:03 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1332334860710449192/image.png?ex=6794e108&is=67938f88&hm=c390f8a9ea1f94962d536bebe46e80cf9bddfb75694b07351e11da4ab8ece7cf&
14:08 < bridge> <ryozuki> https://yasserarg.com/tb
14:10 < bridge> <milkeeycat> sea of nodes mentioned
14:10 < bridge> <kollpotato> @ryozuki have u seen this? https://c9x.me/compile/
14:11 < bridge> <ryozuki> no
14:11 < bridge> <ryozuki> thanks for url
14:12 < bridge> <kollpotato> np
14:19 < bridge> <ryozuki> https://c9x.me/compile/bib/
14:19 < bridge> <ryozuki> @kollpotato bro
14:19 < bridge> <ryozuki> this web is a gold mine for me
14:19 < bridge> <ryozuki> ty
14:26 < bridge> <kollpotato> im glad i have helped
14:26 < bridge> <kollpotato> yippe
15:15 < bridge> <robyt3> yeah, I tried it a few times and it has overall been performing worse than a google search would
15:29 < bridge> <teero777> i like auto for std::chrono
15:30 < bridge> <teero777> im not typing `time_point<std::chrono::system_clock, duration<long, ratio<1, 1000000000>>> CurrentTime;`
16:20 < ws-client> <ChillerDragon> agree long c++ types are ugly but i like seeing the type. I sometimes have been in situation where i had to reverse engineer what was inside the auto and that was annoying
16:28 < bridge> <Jupstar ✪> buy ide bro
17:10 < bridge> <teero777> `map("K", vim.lsp.buf.hover, "Hover Documentation")`
17:10 < bridge> <teero777> lsp best
17:10 < bridge> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1332382089240379553/image.png?ex=67950d04&is=6793bb84&hm=7488d07dc15793787c0d0e35cc8b0284b51f2554f775930635cbb250fc126dae&
17:14 < bridge> <Jupstar ✪> https://wiki.c2.com/?UnixIsAnIde
17:25 < bridge> <teero777> bean earth
17:25 < bridge> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1332385912520183952/image.png?ex=67951094&is=6793bf14&hm=23daa08cc4ccdbe57f84df0a11d637fadfaa2fe9a1d7b03eb773aabf3ce75b4b&
17:26 < bridge> <Jupstar ✪> what 3d engine is that
17:26 < bridge> <teero777> opengl
17:27 < bridge> <Jupstar ✪> but what engine
17:27 < bridge> <teero777> wanna see my highly professional glsl skills?
17:27 < bridge> <Jupstar ✪> did u write that?
17:27 < bridge> <teero777> bro wdym engine
17:27 < bridge> <teero777> ofc
17:27 < bridge> <teero777> https://github.com/Teero888/astrosim
17:27 < bridge> <Jupstar ✪> nice
17:27 < bridge> <Jupstar ✪> so you switch from c to cpp already
17:27 < bridge> <Jupstar ✪> we both know the next step
17:27 < bridge> <teero777> yes i missed operator overloading
17:28 < bridge> <Jupstar ✪> ok i run
17:28 < bridge> <teero777> ok
17:28 < bridge> <teero777> come vc
17:28 < bridge> <teero777> i wanna see u flame me
17:32 < bridge> <learath2> This is actually brilliant. It makes me feel like creating a language again
17:32 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1332387497740865536/image.png?ex=6795120e&is=6793c08e&hm=31490ec383cf3bd5b488976cc7d33dcd30fbd25bbe5f11f6df9ba84d501a631f&
17:32 < bridge> <learath2> non-fancy C99 without any dependencies ❤️
17:36 < bridge> <kollpotato> yeah u can also just write is a language if u want xD
17:36 < bridge> <kollpotato> yeah u can also just write is as a language if u want xD
17:37 < bridge> <kollpotato> im not sure where i have initially seen it
17:38 < bridge> <kollpotato> https://github.com/garritfra/qbe-rs
17:38 < bridge> <kollpotato> for the nerdy ass programming language developers
17:42 < bridge> <kollpotato> yeah u can also just write the IR is as a language if u want xD
21:52 < bridge> <chillerdragon> Nerdy
21:52 < bridge> <chillerdragon> Ass
21:52 < bridge> <chillerdragon> Pro gaming
21:52 < bridge> <chillerdragon> Language
21:59 < bridge> <Ewan> hi chiller
21:59 < bridge> <milkeeycat> hi ewan
22:00 < bridge> <Ewan> hi milkeeycat
22:20 < bridge> <hectavoxel> hi kollpotato
22:21 < bridge> <headshotnoby> voxuis
22:22 < bridge> <hectavoxel> headbor
22:22 < bridge> <hectavoxel> headbot
