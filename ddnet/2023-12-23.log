00:06 < bridge> <Bota> Mb dont kill me please :pepeH:
00:06 < bridge> <Bota> I pulled libtw2 and tried to build wireshark plugin
00:12 < bridge> <Bota> how i do that. I dont know rust :justatest:
01:34 < bridge> <chillerdragon> Yes that much is obvious from the screenshot. But why? What are you wiresharking?
01:35 < bridge> <chillerdragon> What you did looks good. No idea what the issue is. Maybe wrong rust version. Not sure if anyone ever tried to build that on windows you can try pinging Heinrich but he will read this eventually anyways I think
01:47 < bridge> <Ewan> what toolchain are you using? msvc mangles symbol names differently from gcc and clang so it would expect different function names
01:59 < bridge> <Ewan> don't forget the world depends on #7691
01:59 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/7691
03:02 < bridge> <Ewan> @mbvxoxo give me another idea
08:14 < bridge> <ryozuki> the world depends on monotonic buffer resource
08:23 < bridge> <Ewan> true
08:23 < bridge> <Ewan> @tela what macos ver u on
08:32 < bridge> <ryozuki> @mpft if its for me i would merge it but i want atleast another one to agree
08:33 < bridge> <Ewan> yea
08:33 < bridge> <Ewan> nobody looking at it
08:33 < bridge> <ryozuki> i gave my ü¶≠ of aproval
08:33 < bridge> <Ewan> seal
08:33 < bridge> <Ewan> i love seals
08:33 < bridge> <Ewan> some ppl say my dog looks like a seal
08:33 < bridge> <Ewan> but seals are just water dogs
08:34 < bridge> <Ewan> give me an idea
08:34 < bridge> <ryozuki> xd
08:36 < bridge> <ryozuki> @mpft did u see deen comment on my pr
08:36 < bridge> <ryozuki> should i make CHeap thread safe
08:36 < bridge> <Ewan> Yes
08:36 < bridge> <ryozuki> the old way isnt and this isnt
08:36 < bridge> <Ewan> that would be sick for when i have another go at async skins
08:36 < bridge> <ryozuki> but whats the point if the üçé is holding me back
08:36 < bridge> <Ewan> i think when i do it again i will just batch them and not try and have them load in the bg with the game xd
08:36 < bridge> <Ewan> no matter how i do that i will still get micro stutters
08:37 < bridge> <Ewan> bcs it has to wait to upload to the gpu at an irregular time
08:37 < bridge> <Ewan> maybe it isn't
08:37 < bridge> <Ewan> depends on how deen feels about dropping host compilation support for already very old macos
08:38 < bridge> <Ewan> who is Shereef Marzouk
08:39 < bridge> <ryozuki> idk
08:39 < bridge> <ryozuki> why u ask
08:39 < bridge> <ryozuki> but the ci on gh is using macos-latest iirc XD
08:39 < bridge> <Ewan> yea
08:39 < bridge> <Ewan> he's (c) at the top of ddracechat.cpp
08:39 < bridge> <Ewan> maybe other files
08:39 < bridge> <Ewan> never heard the real name before
08:39 < bridge> <Ewan> i'm sure you can still run the binary compiled by latest macos on <14
08:40 < bridge> <Ewan> depends on how deen feels about dropping compilation host support for already very old macos
08:45 < bridge> <learath2> Why?
08:45 < bridge> <learath2> Greyfox
08:45 < bridge> <ryozuki> @learath2 read deen comment
08:45 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1188024670209970296/image.png?ex=65990531&is=65869031&hm=f773a7eddc3ce343ac732bf70e93fbbcb636c9143ad1b289635472dc852dff71&
08:46 < bridge> <Ewan> as long as CHeap doesn't have bad single thread perf because it's thread safe. which i can't see happening anyway
08:46 < bridge> <ryozuki> did u check my pr yet
08:46 < bridge> <ryozuki> https://github.com/ddnet/ddnet/pull/7692
08:46 < bridge> <ryozuki> cheap is rarely used too
08:46 < bridge> <ryozuki> only for localisation and another thing
08:46 < bridge> <learath2> I think it should be made thread safe at the point of use. That's how most containers are unless they are specifically crafted to be threadsafe usually locklessly
08:46 < bridge> <ryozuki> apparently macos comes with gcc 13 in github ci?
08:46 < bridge> <ryozuki> can se use that?
08:47 < bridge> <ryozuki> https://github.com/actions/runner-images/blob/main/images/macos/macos-13-Readme.md
08:47 < bridge> <ryozuki> i see
08:48 < bridge> <learath2> Do we even use it from multiple threads ever anyway?
08:48 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1188025442486202478/image.png?ex=659905e9&is=658690e9&hm=597366f23ba28f04d989a4ca3889afd14e1e86d9b5b607b31631e073826a6862&
08:49 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1188025488459960401/image.png?ex=659905f4&is=658690f4&hm=c9395915ae06b3ebf59bea22fd9b0b500dd4f9e18d21bca79b5f102e687c2777&
08:49 < bridge> <ryozuki> those are the uses i found
08:49 < bridge> <ryozuki> is the serverbrowser MT?
08:50 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1188025875376128040/image.png?ex=65990651&is=65869151&hm=f3bb793f92a3ba6b2b235c2c9cbcf12dd4c6a27513effb859d764c7bee673f4d&
08:50 < bridge> <ryozuki> is the console execution queue mt?
08:51 < bridge> <Ewan> i believe so
08:51 < bridge> <Ewan> dont take my word for it
08:51 < bridge> <ryozuki> in macos
08:51 < bridge> <ryozuki> CXX=/usr/bin/g++-13 would work?
08:51 < bridge> <Ewan> no
08:51 < bridge> <learath2> Config using it now might explain some of the bizarre new bugs
08:51 < bridge> <ryozuki> github macos containers have gcc 13
08:52 < bridge> <Ewan> maybe in the ci it might work
08:52 < bridge> <Ewan> idk what they use
08:52 < bridge> <ryozuki> Clang/LLVM 14.0.3
08:52 < bridge> <ryozuki> Clang/LLVM (Homebrew) 15.0.7 - available on $(brew --prefix llvm@15)/bin/clang
08:52 < bridge> <ryozuki> GCC 11 (Homebrew GCC 11.4.0) - available by gcc-11 alias
08:52 < bridge> <ryozuki> GCC 12 (Homebrew GCC 12.3.0) - available by gcc-12 alias
08:52 < bridge> <ryozuki> GCC 13 (Homebrew GCC 13.2.0) - available by gcc-13 alias
08:53 < bridge> <Ewan> unrelated q but why is my chat command's pResult->NumArguments() only saying there is 1 arg when in fact there are 2
08:55 < bridge> <sedonya> :ddnet_lgbt:
09:00 < bridge> <ryozuki> ```cpp
09:00 < bridge> <ryozuki> // execute config file
09:00 < bridge> <ryozuki>     if(pStorage->FileExists(CONFIG_FILE, IStorage::TYPE_ALL))
09:00 < bridge> <ryozuki>     {
09:00 < bridge> <ryozuki>         pConsole->SetUnknownCommandCallback(SaveUnknownCommandCallback, pClient);
09:00 < bridge> <ryozuki>         if(!pConsole->ExecuteFile(CONFIG_FILE))
09:00 < bridge> <ryozuki>         {
09:00 < bridge> <ryozuki>             const char *pError = "Failed to load config from '" CONFIG_FILE "'.";
09:00 < bridge> <ryozuki>             dbg_msg("client", "%s", pError);
09:00 < bridge> <ryozuki>             pClient->ShowMessageBox("Config File Error", pError);
09:00 < bridge> <ryozuki>             PerformAllCleanup();
09:00 < bridge> <ryozuki>             return -1;
09:00 < bridge> <ryozuki>         }
09:00 < bridge> <ryozuki>         pConsole->SetUnknownCommandCallback(IConsole::EmptyUnknownCommandCallback, nullptr);
09:00 < bridge> <ryozuki>     }
09:00 < bridge> <ryozuki> ```
09:00 < bridge> <ryozuki> @learath2 i see this but where is the callback called on execute file? xD
09:01 < bridge> <learath2> Look for a findcommand somewhere in executeline
09:01 < bridge> <Ewan> i guess it's always reporting as 2 when it's 3 or more
09:01 < bridge> <ryozuki> ah
09:01 < bridge> <Ewan> is it not delimiting args by space after the actual name of the command?
09:01 < bridge> <Ewan> do i have to do that myself
09:01 < bridge> <learath2> What does your arg string look like?
09:02 < bridge> <learath2> If you have an r it won‚Äôt split anymore
09:02 < bridge> <ryozuki> but i dont see where a thread is started
09:02 < bridge> <Ewan> an r?
09:02 < bridge> <Ewan> an actual 'r'
09:02 < bridge> <learath2> When you register a command you give a definition of it‚Äôs arguments
09:03 < bridge> <learath2> Something like ‚Äússs‚Äù for a command that takes 3 strings e.g.
09:03 < bridge> <Ewan> oic
09:03 < bridge> <Ewan> i didn't realize that actually did anything :smileu
09:03 < bridge> <Ewan> i didn't realize that actually did anything üòÉ
09:03 < bridge> <learath2> r means rest, so it‚Äôll give you all the rest of the string at that point
09:04 < bridge> <Ewan> gotcha
09:04 < bridge> <ryozuki> we should speak british english
09:04 < bridge> <ryozuki> colour
09:05 < bridge> <ryozuki> now that i have  lot of free time its time to do prs
09:05 < bridge> <ryozuki> and redeem myself as a ddnet dev
09:05 < bridge> <Ewan> lol
09:05 < bridge> <ryozuki> (if macos doesnt hold me back)
09:05 < bridge> <Ewan> holidays moment
09:05 < bridge> <Ewan> anyone here ever rent a macos vps
09:05 < bridge> <ryozuki> i have a m1 myself
09:05 < bridge> <Ewan> oh yeah i forgot
09:05 < bridge> <Ewan> lucky
09:05 < bridge> <ryozuki> from work
09:06 < bridge> <ryozuki> @learath2 did u  check ewan pr
09:06 < bridge> <ryozuki> feel free to merge it
09:07 < bridge> <ryozuki> do u know what version of clang supports pmr
09:07 < bridge> <Ewan> can CConsole::CResult::GetFloat ever return NaN
09:07 < bridge> <ryozuki> 15? 16? 17?
09:07 < bridge> <Ewan> no idea
09:09 < bridge> <ryozuki> well with brew u can get llvm 17
09:09 < bridge> <ryozuki> so
09:14 < bridge> <Ewan> wanted?
09:14 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1188031898841255976/Base_Profile_2023.12.23_-_01.13.08.03.DVR-24.mp4?ex=65990bed&is=658696ed&hm=bfca3c21e714a65350816a1822e1053c9faf10e6dccc4e70adaf2915fb5e9d36&
09:15 < bridge> <Ewan> i made it so u can /tp x y
09:15 < bridge> <Ewan> /tp
09:15 < bridge> <Ewan> or
09:15 < bridge> <Ewan> /tp playername
09:15 < bridge> <Ewan> or
09:15 < bridge> <Ewan> /tp x y
09:16 < bridge> <ryozuki> @learath2 why on gentoo i have gcc 12
09:16 < bridge> <ryozuki> and not 13
09:17 < bridge> <ryozuki> omg
09:17 < bridge> <ryozuki> i have it in eselect
09:17 < bridge> <ryozuki> nvm
09:17 < bridge> <Ewan> i will make pr
09:17 < bridge> <ryozuki> of what
09:18 < bridge> <Ewan> The thing i just sent
09:18 < bridge> <learath2> NaN should not be possible
09:18 < bridge> <Ewan> üëç
09:18 < bridge> <learath2> However you can get, HUGE_VAL on overflow and 0 on underflow
09:19 < bridge> <learath2> We don‚Äôt check or catch either üòÑ
09:19 < bridge> <Ewan> wow awesome
09:20 < bridge> <learath2> Oh now that I take a look at it we don‚Äôt check for invalid either, so you should get a 0 on things that can‚Äôt be converted to float too üôÉ
09:20 < bridge> <learath2> Teeworlds moment
09:20 < bridge> <Ewan> i will parse it myself then
09:20 < bridge> <ryozuki> /Users/runner/work/ddnet/ddnet/src/base/math.h:6:10: fatal error: algorithm: No such file or directory
09:20 < bridge> <ryozuki>     6 | #include <algorithm>
09:20 < bridge> <ryozuki> tf why g++ 13 fails
09:20 < bridge> <Ewan> was planning to prepend with + or - for relative coords anyway so i couldn‚Äôt use getfloat
09:21 < bridge> <learath2> It should handle negatives just fine, no?
09:21 < bridge> <Ewan> not what i mean
09:21 < bridge> <Ewan> 10 = absolute 10
09:21 < bridge> <Ewan> +10 = current pos + 10
09:21 < bridge> <Ewan> -10 = current pos - 10
09:22 < bridge> <learath2> Aha, yeah can‚Äôt do that with float
09:22 < bridge> <Ewan> ya
09:22 < bridge> <Ewan> or i could be more explicit and use tildes like minecraft
09:22 < bridge> <Ewan> but doesn't seem needed
09:22 < bridge> <Ewan> it's just ~ vs +/-0
09:23 < bridge> <Ewan> but uhh actually can you place things at negative coords in a map üòÖ i feel like i've seen it before
09:23 < bridge> <Ewan> in which case i would have to use a tilde or smth else
09:23 < bridge> <Ewan> need to know real map boundaries
09:26 < bridge> <Ewan> sounds like what i want is the entity clipping rectangle?
09:27 < bridge> <ryozuki> ok i surrender
09:27 < bridge> <ryozuki> fck macos
09:27 < bridge> <ryozuki> i hate ci driven development
09:28 < bridge> <Ewan> xd
09:34 < bridge> <ryozuki> this also means i cant modernize other parts
09:34 < bridge> <ryozuki> cuz macos
09:34 < bridge> <ryozuki> imagine saying u support c++17 but not rly
09:36 < bridge> <Ewan> yea
09:36 < bridge> <ryozuki> i was about to say smth
09:36 < bridge> <ryozuki> but it would piss u off
09:36 < bridge> <ryozuki> üò¨
09:38 < bridge> <Ewan> lol
09:38 < bridge> <Ewan> go for it
09:38 < bridge> <Mr.Gh0s7> Voxel really did rq :(. He was cool. Hope he comes back. Although he did say ddnet wasn't as fun anymore couple of times.
09:40 < bridge> <ryozuki> life is not daijoubu
09:40 < bridge> <ryozuki> https://tenor.com/view/lovyyn-sad-crying-crying-face-anime-cry-gif-23716177
09:40 < bridge> <ryozuki> i love this meme
09:41 < bridge> <Jupstar ‚ú™> why do all our artists rq xd
09:41 < bridge> <learath2> I still can‚Äôt believe he left because Ryozuki preached rust. It‚Äôs like getting angry at a priest for reading the bible
09:41 < bridge> <Jupstar ‚ú™> we already have too few
09:41 < bridge> <ryozuki> i dont think its just that
09:41 < bridge> <ryozuki> he was frustrated with maps too
09:41 < bridge> <ryozuki> he said all new maps were unfun or smth
09:42 < bridge> <ryozuki> i guess artists arent as keen to open source art as devs are for free software
09:42 < bridge> <ryozuki> we are more selfless
09:42 < bridge> <Jupstar ‚ú™> it's just bcs they are paid bad in RL
09:42 < bridge> <ryozuki> maybe
09:43 < bridge> <Jupstar ‚ú™> as dev u get a new job after 1 sec xD
09:43 < bridge> <Mr.Gh0s7> I think artists want more recognition than programmers tbh
09:43 < bridge> <ryozuki> xd
09:43 < bridge> <cellegenrih> ...anyways
09:43 < bridge> <ryozuki> ye programmers stay in the shadows
09:43 < bridge> <ryozuki> normal ppl dont know  john carmack
09:43 < bridge> <Ewan> well he was not paid to be an artist afaik
09:44 < bridge> <ryozuki> true
09:44 < bridge> <ryozuki> idk what ravie does
09:44 < bridge> <cellegenrih> db manager
09:44 < bridge> <ryozuki> i mean as job
09:44 < bridge> <cellegenrih> xd
09:44 < bridge> <cellegenrih> idk
09:45 < bridge> <Ewan> guys what are the actual map boundaries
09:45 < bridge> <learath2> He is a professional edgelord. Gets paid to have unwoke opinions
09:45 < bridge> <Ewan> let's say for entities
09:45 < bridge> <Ewan> i just need a number rn to test this
09:45 < bridge> <Mr.Gh0s7> Plays the accordeon
09:45 < bridge> <ryozuki> -i16 +i16??
09:45 < bridge> <ryozuki> idk
09:45 < bridge> <ryozuki> xd
09:46 < bridge> <ryozuki> <a:omw:1133512609862275142>
09:46 < bridge> <Ewan> where SHORT_MAX macro xd
09:46 < bridge> <Ewan> :feelsbadman:
09:46 < bridge> <ryozuki> i just said it randomly idk tbh
09:46 < bridge> <learath2> I doubt there is any if you remove the death border, you just go out until floats become very inaccurate and bizarre things happen
09:46 < bridge> <learath2> Teeworlds farlands
09:46 < bridge> <Ewan> k what is the death border
09:46 < bridge> <ryozuki> i think its 20 tiles away from the map size
09:46 < bridge> <Ewan> ouu
09:46 < bridge> <ryozuki> or smth like that
09:47 < bridge> <Ewan> can maps go negative
09:47 < bridge> <Ewan> on either x or y
09:47 < bridge> <cellegenrih> basically if it goes to negative after hitting float limit, it wont render theorically
09:47 < bridge> <ryozuki> u sometimes dont make sense xd
09:47 < bridge> <Ewan> ig i should ask if maps can exist outside of quadrant 4
09:47 < bridge> <learath2> It shouldn‚Äôt, float overflow works differently
09:47 < bridge> <ryozuki> float loses accuracy as it goes further from 0 iirc
09:47 < bridge> <cellegenrih> so it would just reset
09:47 < bridge> <ryozuki> so its not about not being able to render
09:47 < bridge> <Ewan> float overflow is a myth
09:47 < bridge> <learath2> You‚Äôll get stuck at HUGE_VAL
09:48 < bridge> <ryozuki> just use float128
09:48 < bridge> <ryozuki> big boi float
09:48 < bridge> <Ewan> is huge val also for negatively huge numbers
09:48 < bridge> <cellegenrih> so it would just reset (as in if its 64 or 128) hitting limit
09:48 < bridge> <Ewan> tending towards - infinity
09:48 < bridge> <learath2> HUGE_VAL + d == HUGE_VAL forall d > 0 iirc
09:48 < bridge> <ryozuki> https://en.cppreference.com/w/cpp/numeric/math/HUGE_VAL
09:48 < bridge> <ryozuki> HUGE_VALF     Expands to positive float expression that indicates overflow
09:48 < bridge> <ryozuki> HUGE_VAL     Expands to positive double expression that indicates overflow, not necessarily representable as a float
09:48 < bridge> <ryozuki> HUGE_VALL     Expands to positive long double expression that indicates overflow, not necessarily representable as a float or double
09:49 < bridge> <Ewan> i guess i will use placeholders for now. i need to know how to get this info tho
09:50 < bridge> <ryozuki> https://doc.rust-lang.org/std/primitive.f64.html#associatedconstant.INFINITY
09:54 < bridge> <ryozuki> @learath2 did u know arm uses 16 byte align
09:54 < bridge> <ryozuki> macos
09:54 < bridge> <learath2> I did not know it as fact, but I‚Äôd guess it given thumb instructions are 16b
09:55 < bridge> <ryozuki> ah wait
09:55 < bridge> <ryozuki> its 16 for > 128bit
09:56 < bridge> <ryozuki> https://github.com/ziglang/zig/issues/2987 https://github.com/rust-lang/rust/issues/54341
09:56 < bridge> <ryozuki> ok wait this is unrelated
09:56 < bridge> <ryozuki> xdd
09:56 < bridge> <ryozuki> but this shit came up at work
09:56 < bridge> <ryozuki> when making the compiler
09:57 < bridge> <Ewan> damn
09:57 < bridge> <Ewan> okay i added relative modes
09:57 < bridge> <Ewan> i still need to know if maps can exist outside quadrant 4
09:57 < bridge> <Ewan> so i can reserve -X.X for non relative purposes
09:57 < bridge> <Ewan> absolute
09:57 < bridge> <Ewan> sdiffjsd
09:58 < bridge> <ryozuki> but ye 64bit arm is 16
10:01 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1188043768767709194/Base_Profile_2023.12.23_-_02.01.04.05.DVR-24.mp4?ex=659916fb&is=6586a1fb&hm=40fd73e16f13496ad6a24a213be47c59700c0433d3fa3b718168340375c61428&
10:02 < bridge> <Ewan> tbh it would be easy to just make it ~+ or ~- instead
10:08 < bridge> <Ewan> im going with tildes for now
10:17 < bridge> <ryozuki> ur a tilde
10:18 < bridge> <Ewan> wtf
10:18 < bridge> <Ewan> rude
10:44 < bridge> <devinci24> Ngl, but this seems more unpractical to use than current tp
10:45 < bridge> <Ewan> yea i too love zooming in and inching towards the exact tenth place offset i need
10:45 < bridge> <Ewan> ???
10:45 < bridge> <Ewan> it exists for a different purpose
10:45 < bridge> <Ewan> also can be bound...
10:51 < bridge> <devinci24> The only real application I see tp this it's if I wanted to go far to some direction to save me like 2 secs of dezooming.
10:51 < bridge> <devinci24> Otherwise most of tp needs too much precision for me to somehow guess the exact coordinates
10:52 < bridge> <Ewan> well then i didnt make this for you
10:52 < bridge> <Ewan> i think it would be quite helpful
10:52 < bridge> <devinci24> Talking about tp, something that could really be useful is not falling just after tp (already happens when using it with spec)
10:52 < bridge> <Ewan> how else would it work
10:53 < bridge> <Ewan> i guess it wouldn't be hard to put the player in a limbo state but i dont want to mess with prediction code
10:53 < bridge> <devinci24> ^^
10:53 < bridge> <devinci24> I was just giving my opinion. I'm sorry to hurt you? Idk.
10:53 < bridge> <devinci24> If you receice some positive feedback I'd like to know the use of it, because I can't really come up with anything other than fast travel to far distances
10:54 < bridge> <Ewan> have you ever played a map and wanted to test a setup on the fly or something
10:54 < bridge> <Ewan> you can iterate on starting coordinates for the setup using this without just tapping a and d until your fingers bleed
10:54 < bridge> <devinci24> Oh, ok I see what you mean
10:55 < bridge> <Ewan> it seems like you don't really play the game because it's really really common for me to be playing with other people & all of the sudden coordinates matter a lot
10:55 < bridge> <devinci24> You want to use it to repeat a setup
10:55 < bridge> <Ewan> or i guess you have a radically different playstyle
10:55 < bridge> <devinci24> Well, I usually just accomplish whatever I try eithouth needing 99999 attempts
10:56 < bridge> <devinci24> Ok I ll stop the beef here, but y I see
11:15 < bridge> <Ewan> i just got trolled hard by vec4
11:15 < bridge> <Ewan> spent about 30 min trying to figure out why i get sent out of bounds & subsequently killed only when my bounds checking is on
11:15 < bridge> <Ewan> `std::clamp(BaseY, Boundaries.y + 32.f, Boundaries.y + Boundaries.h - 32.f)`
11:15 < bridge> <Ewan> and i was doing it like that
11:15 < bridge> <Ewan> but .h is the same as .x.... it's h for HSL
11:16 < bridge> <Ewan> i needed .l (length)
11:16 < bridge> <robyt3> TBH we could likely remove the color aliases at some point since we use `ColorRGBA` in most places
11:17 < bridge> <Ewan> nice
11:21 < bridge> <Ewan> i have sort of a niche need atm robyt
11:21 < bridge> <Ewan> i am bounds checking /tp coordinates from my video up there but this requires getting the game layer & saving its boundaries
11:22 < bridge> <Ewan> i don't want to do it every frame but making it static would not be good because it would persist after a map change if it's only set once
11:22 < bridge> <Ewan> should i check if the map changed inline or make it a member of CGameContext, and make it stick out like a sore thumb
11:23 < bridge> <Ewan> i don't want to do it every time the command is called but making it static would not be good because it would persist after a map change if it's only set once
11:26 < bridge> <robyt3> Doesn't seem very expensive to calculate the boundaries. Do you mean something like `width+201`?
11:26 < bridge> <Ewan> yea
11:27 < bridge> <Ewan> i suppose i will just do it every frame üòÉ
11:27 < bridge> <robyt3> `CCollision` keeps track of the game layer size, so if you wanted a cache then that would be the place, but just for `width+201` it's not really worth it
11:27 < bridge> <robyt3> I'd say profile first if it's an issue, otherwise it's premature optimization
11:27 < bridge> <Ewan> k
11:27 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1188065461758337074/image.png?ex=65992b2f&is=6586b62f&hm=4b2d0adb82a554d8a844e9ab56125af04c737f5257cfadf444b67e47012e8155&
11:28 < bridge> <Ewan> this is all it is
11:28 < bridge> <Ewan> i think it should be fine
11:30 < bridge> <ryozuki> @mpft u can finally get dev role
11:30 < bridge> <Ewan> nope
11:30 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1188066063536103484/image.png?ex=65992bbe&is=6586b6be&hm=1a680ae3094fe4bf48b85a2eed3924e98282848ec7967cc8d750372bb808e0fa&
11:30 < bridge> <Ewan> trolled again!
11:30 < bridge> <ryozuki> xd
11:30 < bridge> <Ewan> these are issues from 2020
11:30 < bridge> <Ewan> all of them complaints from heinrich
11:30 < bridge> <Ewan> heinrich singlehandedly stopping progress. nice
11:31 < bridge> <robyt3> And somehow we have two issues about the same thing
11:31 < bridge> <Ewan> i really have not heard anyone but heinrich complain about that approach
11:32 < bridge> <robyt3> If it generates lots of server messages then it's bad for the servers
11:32 < bridge> <robyt3> The comment in #2221 explain a case in one map where it happens
11:32 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/2221
11:36 < bridge> <Jupstar ‚ú™> what exactly is the issue rn?
11:36 < bridge> <Ewan> can u eli5
11:36 < bridge> <Jupstar ‚ú™> kill will act like /r right?
11:36 < bridge> <Jupstar ‚ú™> 
11:36 < bridge> <Jupstar ‚ú™> /r only works if u stand still somewhere, right?
11:37 < bridge> <Ewan> yes exactly
11:37 < bridge> <Jupstar ‚ú™> then i dont see a problem with your design
11:37 < bridge> <Ewan> the only place that you can get softlocked or repeatedly teleported without interfering has been removed in my pr
11:37 < bridge> <robyt3> If you stand on a speeder and it moves you into a kill tile
11:37 < bridge> <Ewan> then speeders shouldn't be safe
11:37 < bridge> <robyt3> I only skimmed the comments
11:37 < bridge> <Jupstar ‚ú™> but /r only works if u stand still
11:37 < bridge> <Jupstar ‚ú™> so this cant even happen
11:38 < bridge> <robyt3> Then the comments still need to be "addressed" by extensive testing and explanation that this cannot happen
11:38 < bridge> <Jupstar ‚ú™> if not, then i'd claim that /r is bugged
11:38 < bridge> <Jupstar ‚ú™> yeah, the approach that heinrich wants is pretty overcomplicated tho.
11:38 < bridge> <Jupstar ‚ú™> 
11:39 < bridge> <Jupstar ‚ú™> better try to make it easier by restricting it to our case
11:39 < bridge> <exosphere_endosphere> —Ö—É–π —á–ª–µ–Ω
11:39 < bridge> <robyt3> It could be possible to have a velocity of `vec(0, 0)` temporarily while inside a speeder
11:39 < bridge> <exosphere_endosphere> üê°
11:39 < bridge> <Jupstar ‚ú™> well then stand still and dont press any key
11:40 < bridge> <Jupstar ‚ú™> for 2 ticks
11:40 < bridge> <Jupstar ‚ú™> xdd
11:41 < bridge> <Jupstar ‚ú™> but pressing /r after died
11:41 < bridge> <Jupstar ‚ú™> or not dieing, when you expect it defs sounds more unintuitive
11:42 < bridge> <robyt3> @mpft Can you some of the unrelated style changes in your PR? Looks like you used clang-format-15 instead of 10
11:42 < bridge> <robyt3> @mpft Can you avoid some of the unrelated style changes in your PR? Looks like you used clang-format-15 instead of 10
11:42 < bridge> <Ewan> it‚Äôs literally just like gravity
11:42 < bridge> <Ewan> i‚Äôd like to but idk how to set it up with my ide
11:42 < bridge> <Ewan> i will have to manually apply style changes inplace with the cli otherwise
11:43 < bridge> <robyt3> You could simply not stage, commit and push those changes :owo:
11:43 < bridge> <Ewan> err we must not be talking about the same thing
11:43 < bridge> <Ewan> anyway why does ddnet not use 15
11:43 < bridge> <Ewan> quite annoying
11:43 < bridge> <robyt3> Because the format looks trash
11:43 < bridge> <robyt3> https://github.com/ddnet/ddnet/pull/7696/files#diff-29ffe32916052e1066eed938021aadfeb29f855d7c63d9c1ca3350aceffb79f3L1246-R1247
11:43 < bridge> <Ewan> can‚Äôt you specify further
11:43 < bridge> <Jupstar ‚ú™> maybe we could invest some day in a definition about which tiles actively affect gameplay.
11:43 < bridge> <Jupstar ‚ú™> 
11:43 < bridge> <Jupstar ‚ú™> would be intersting, e.g.:
11:43 < bridge> <Jupstar ‚ú™> - air tiles
11:44 < bridge> <Jupstar ‚ú™> - tele out
11:44 < bridge> <Jupstar ‚ú™> - tune zones
11:44 < bridge> <Jupstar ‚ú™> 
11:44 < bridge> <Jupstar ‚ú™> are all passive
11:44 < bridge> <robyt3> Interfacing with clang-format is black magic
11:44 < bridge> <Ewan> it‚Äôs literally just a file
11:44 < bridge> <Ewan> and you write the rules you want
11:44 < bridge> <Ewan> ez as pie
11:44 < bridge> <robyt3> But I wish someone would do it of course
11:44 < bridge> <Jupstar ‚ú™> just ping deen, he fixes clang-format for you
11:44 < bridge> <robyt3> He also didn't know how to get lines not to break
11:45 < bridge> <Ewan> well sorry if you don‚Äôt agree but subjecting every contributor to use an old version of clang format when they do any more than 3 line changes doesn‚Äôt exactly seem logical
11:45 < bridge> <robyt3> Ideally clang-format would either preserve our line lengths or at least not do something as stupid as the format I linked above
11:45 < bridge> <Ewan> you can give it an explicit max line width
11:46 < bridge> <Jupstar ‚ú™> @mpft u can take over #7034
11:46 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/7034
11:46 < bridge> <Ewan> ehh
11:46 < bridge> <robyt3> The version and format should be upgrades yeah, but contributions shouldn't contain unrelated changes either
11:47 < bridge> <Jupstar ‚ú™> then u can use format 15 xd
11:47 < bridge> <Ewan> should just cut your losses imo
11:47 < bridge> <Ewan> impose clang format 15 changes on all ddnet source
11:47 < bridge> <Ewan> without trying to preserve current style
11:47 < bridge> <robyt3> I could agree with all previous clang-format decisions so far, but this is completely illogical formatting so I won't support it
11:47 < bridge> <Ewan> right well it's definitely not hard to write your own'
11:47 < bridge> <Ewan> rules
11:48 < bridge> <Jupstar ‚ú™> he have our own rules
11:48 < bridge> <Jupstar ‚ú™> we
11:48 < bridge> <Jupstar ‚ú™> sadly clang-format seems to have changed some things
11:48 < bridge> <Ewan> it does not help that clang format 10 is not even in my pkg mgr
11:49 < bridge> <Jupstar ‚ú™> yep, but even clang-format15 should be pretty close. what even is your issue rn?
11:49 < bridge> <Jupstar ‚ú™> 
11:49 < bridge> <Jupstar ‚ú™> does it create such a huge diff?
11:49 < bridge> <ryozuki> im finding so much stuff
11:49 < bridge> <ryozuki> prepare
11:49 < bridge> <Jupstar ‚ú™> #7034 only changed 300 lines
11:49 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/7034
11:49 < bridge> <Ewan> mainly my problem is we are talking about whitespace here but now i have to build an old version of this tool from source because nobody took the time to modernize the CI
11:50 < bridge> <Ewan> you could also consider having the CI in-place apply the proposed changes that make the build fail
11:50 < bridge> <robyt3> The changes to comments I don't care about, but this is bad: https://github.com/ddnet/ddnet/pull/7034/files#diff-b3a45ccb488177dbd8a7327f6f67322eaf69a6f178a57680d9c6172f0a436b08L690-R692
11:50 < bridge> <Ewan> yeah that's silly
11:50 < bridge> <Ewan> hey ryo want another ddnet chore
11:51 < bridge> <Ewan> ask in llvm server how to fix that bs
11:51 < bridge> <Ewan> clang-format channel has seen enough of my face
11:51 < bridge> <Jupstar ‚ú™> ryo will tell you exactly one thing:
11:51 < bridge> <Jupstar ‚ú™> use rust
11:51 < bridge> <Jupstar ‚ú™> and then i'll tell him, yeah but sometimes rustfmt also breaks, very annoying
11:52 < bridge> <Ewan> o yea btw some help here pls <https://github.com/ddnet/ddnet/pull/7696/files#diff-196a92816a2a9db961e4c9fe22ea5f2b66274242c6482955275ec818b5cb7dd1R1599>
11:52 < bridge> <Ewan> don't know what constant to use for these buffers
11:52 < bridge> <Ewan> max console string length or whatever it's called seems absurd
11:52 < bridge> <Ewan> not rly trying to allocate 8kb per arg
11:52 < bridge> <robyt3> 32 seems enough I guess
11:53 < bridge> <Jupstar ‚ú™> do u even need these tmp vars?
11:53 < bridge> <Ewan> i suppose not
11:53 < bridge> <robyt3> Doesn't looks like it
11:53 < bridge> <robyt3> Doesn't look like it
11:53 < bridge> <Ewan> changing real quick
11:54 < bridge> <robyt3> Also `GameLayer` -> `pGameLayer`
11:54 < bridge> <Ewan> o yea thx
11:54 < bridge> <robyt3> `Boundaries` probably doesn't need to be `static`
11:54 < bridge> <robyt3> Would also have the wrong name for that
11:54 < bridge> <Ewan> wdym
11:54 < bridge> <Ewan> oh yeha
11:54 < bridge> <Ewan> s_
11:54 < bridge> <Ewan> s
11:54 < bridge> <Ewan> asjkbfkj
11:55 < bridge> <robyt3> You are calculating the values every time, so you don't need `static`
11:55 < bridge> <robyt3> One `vec4` isn't very expensive to create/destroy either
11:55 < bridge> <Ewan> my thinking was it helps to not allocate 4 floats again but i'm using aggregate init so w/e
11:55 < bridge> <learath2> It‚Äôs in none of ours either, you just install it once and it‚Äôs done
11:56 < bridge> <Ewan> it's a real thorn in my side is all im saying
11:56 < bridge> <Jupstar ‚ú™> ```
11:56 < bridge> <Jupstar ‚ú™> % clang-format --version                                            
11:56 < bridge> <Jupstar ‚ú™> Debian clang-format version 18.0.0 (++20231122111257+b3a9e8f7c0af-1~exp1~20231122111413.1710)
11:56 < bridge> <Jupstar ‚ú™> ```
11:56 < bridge> <Jupstar ‚ú™> 
11:56 < bridge> <Jupstar ‚ú™> üòè
11:56 < bridge> <Ewan> yea i was gonna say
11:56 < bridge> <Ewan> surely debian has it
11:56 < bridge> <Jupstar ‚ú™> clang-format-15, what is that?
11:56 < bridge> <Ewan> there's not even a clang-format executable option in my ide so i really will have to manually inplace every comit
11:57 < bridge> <learath2> You don‚Äôt have to, this is a common hurdle so there are prebuilt versions of it. Everyone and their mothers uses this one https://github.com/muttleyxd/clang-tools-static-binaries
11:57 < bridge> <Ewan> oh cool
11:57 < bridge> <Jupstar ‚ú™> the vscode workspace also directly makes it easy to use if u add it to PATH
11:57 < bridge> <Jupstar ‚ú™> üòè
11:57 < bridge> <learath2> Anyway, yeah we should bump up to clang-format15 soon, if only we can figure out how to get rid of the ugly linebreaks
11:58 < bridge> <ryozuki> :owo:
11:58 < bridge> <learath2> I usually just do `python3 scripts/fix_style.py` before committing
11:58 < bridge> <Jupstar ‚ú™> well theoretically we should simply use clang-format default values
11:58 < bridge> <Jupstar ‚ú™> 
11:58 < bridge> <Jupstar ‚ú™> but i guess most ppl here would go on rampage
11:58 < bridge> <Jupstar ‚ú™> I DONT CARE aslong as i dont have to do anything manually
11:59 < bridge> <Jupstar ‚ú™> then i go on rampage
11:59 < bridge> <learath2> It‚Äôs nasty. Idk what sort of brain worms do the people that make the style guide for clang format have
11:59 < bridge> <learath2> Just 0 sense of aesthetics
11:59 < bridge> <Jupstar ‚ú™> i write so much code inline and let the formater do it's job xD
11:59 < bridge> <Ewan> ```
11:59 < bridge> <Ewan> ewan@machine /x/ddnet-practice-tp-coords (tp-coords)> clang-format-10 -i -style=file **/*.cpp **/*.h
11:59 < bridge> <Ewan> exec: Failed to execute process '/usr/bin/clang-format-10': the total size of the argument list and exported variables (6kB) exceeds the operating system limit.
11:59 < bridge> <Ewan> ```
11:59 < bridge> <Ewan> :feelsbadman:
11:59 < bridge> <Jupstar ‚ú™> if ... {bla} else {blam} whatever;
11:59 < bridge> <Jupstar ‚ú™> 
11:59 < bridge> <Jupstar ‚ú™> ENTER
11:59 < bridge> <ryozuki> check my pr thanks
12:00 < bridge> <ryozuki> i do ./scripts/fix_style
12:00 < bridge> <Jupstar ‚ú™> or CTRL+S
12:00 < bridge> <Jupstar ‚ú™> xd
12:00 < bridge> <ryozuki> yes i use ur workspace
12:00 < bridge> <learath2> Use the included script, it fixes the glob issue
12:00 < bridge> <Ewan> yea it works
12:00 < bridge> <Jupstar ‚ú™> based
12:00 < bridge> <Ewan> swagular.
12:00 < bridge> <ryozuki> @jupeyy_keks check my pr, theorically it enabled more optimization oportunities
12:01 < bridge> <ryozuki> default the world
12:01 < bridge> <Ewan> it did Not Work
12:01 < bridge> <Jupstar ‚ú™> nice, 1ns better frame times
12:01 < bridge> <Jupstar ‚ú™> i take that
12:01 < bridge> <Ewan> brb killing myself
12:01 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1188073835543670784/image.png?ex=659932fb&is=6586bdfb&hm=3402373c9ee2b36b5bf36c6e0887802f86a4eb844efabd20d368eb3084df619f&
12:01 < bridge> <ryozuki> also i found some interfaces that did not have a virtual destructor xd
12:02 < bridge> <ryozuki> thats good
12:02 < bridge> <Ewan> yea well they dont like whitespace changes
12:02 < bridge> <ryozuki> this is why rustfmt is best
12:02 < bridge> <ryozuki> u dont argue about style
12:02 < bridge> <ryozuki> u dont lose time
12:04 < bridge> <Ewan> clang-format would benefit from some backcompat
12:04 < bridge> <Ewan> but this sort of thing only happens after several versions of neglect
12:04 < bridge> <Ewan> so i can't say i rly think it's a huge deal
12:04 < bridge> <Jupstar ‚ú™> clang-format also AFAIR profiles
12:05 < bridge> <ryozuki> LLVM profile
12:05 < bridge> <Jupstar ‚ú™> so u say i want "google-like style"
12:05 < bridge> <Ewan> that's --style=google
12:05 < bridge> <Ewan> or basedonstyle in your file
12:05 < bridge> <Jupstar ‚ú™> maybe one is close to ours
12:05 < bridge> <Ewan> yea i always just use the llvm one in my own code
12:05 < bridge> <ryozuki> btw did anyone check if the dockerfile still works
12:09 < bridge> <Ewan> nope
12:09 < bridge> <Ewan> never used docker in my life
12:10 < bridge> <Ewan> can't say i regret it
12:12 < bridge> <Ewan> lmfao
12:13 < bridge> <Ewan> hmmmm
12:13 < bridge> <Ewan> this is a tricky thing to test here
12:13 < bridge> <Ewan> trying to figure out exactly what would be considered out of bounds with the kill tile's hitbox
12:14 < bridge> <Ewan> should i hardcode something or just round it to the next whole tile
12:16 < bridge> <robyt3> You want to make sure the tee stays in bounds, right? Would be the easiest to make the checks a bit stricter so you don't need a lot of additional logic.
12:16 < bridge> <Ewan> i just added 1 real coordinate (not 'display' coord)
12:16 < bridge> <Ewan> works fine
12:16 < bridge> <Ewan> though for some reason my bounds checking is screwing me over again
12:16 < bridge> <Ewan> i didn't test this super thoroughly :owo:
12:27 < bridge> <hazielsilva> Can someone help me with a resolution problem I have with my ddnet?
12:27 < bridge> <Ewan> wrong channel
12:28 < bridge> <Ewan> #questions
12:28 < bridge> <hazielsilva> oh sry
12:35 < bridge> <Ewan> i forgot to transpose the game layer tile int coords to float coords
12:35 < bridge> <Ewan> *32
12:47 < bridge> <Ewan> the pr is winning now
12:48 < bridge> <Ewan> i think adding some sort of 'limbo' state after a tp or rescue would satisfy both heinrich's and devinci's issues
12:48 < bridge> <Ewan> where the tee is there but it's just not moving
12:48 < bridge> <Ewan> and any movement input would make it move again
12:50 < bridge> <Ewan> style check is failing after using the script so i really don't know
12:50 < ChillerDragon> touching physics :justatest:
12:50 < bridge> <Ewan> yea im not thrilled either
12:51 < bridge> <Ewan> it'd need to interact with other entities so it'd have to put the whole team in limbo
12:51 < bridge> <ryozuki> :justatest: :justatest: :justatest:
12:51 < bridge> <Ewan> maybe it's not the move
12:51 < bridge> <robyt3> It's a different style check that failed now
12:51 < bridge> <robyt3> > src/game/server/ddracechat.cpp:#include "game/mapitems.h"
12:52 < bridge> <robyt3> Should use `<>` instead
12:52 < bridge> <Ewan> oh that's clangd's fault
12:52 < bridge> <Ewan> bleh
12:52 < bridge> <Ewan> being able to dry-run the build-unrelated ci checks would be nice
13:06 < bridge> <Ewan> i just added a method to IConsole & CConsole and it's undefined reference to vtable for IConsole
13:06 < bridge> <Ewan> you don't use anything like IDL do you :justatest:
13:43 < ChillerDragon> @Ewan you can dry run the ci? its a bunch of py scripts just run those
13:43 < ChillerDragon> i have a shell script called ``ddlint`` that basically runs all of the CI stuff at once locally
13:43 < ChillerDragon> https://github.com/ChillerDragon/crools/blob/5989f3e647ea1c7e9acfdbd78c0d5f3ccf30cbdc/ddlint
13:53 < bridge> <Ewan> rad
13:53 < bridge> <Ewan> when upstream
14:05 < bridge> <Ewan> ChillerDragon: what is ctidy
14:06 < bridge> <Ewan> clang-tidy? why do u call it ctidy
14:29 < ChillerDragon> https://github.com/ChillerDragon/crools/blob/5989f3e647ea1c7e9acfdbd78c0d5f3ccf30cbdc/ctidy
14:29 < ChillerDragon> ah ye its another script
14:29 < bridge> <Ewan> :justatest:
14:29 < ChillerDragon> yea not sure if i can recommend my infrastructure for it
14:29 < ChillerDragon> just wanted to show you that you can basically copy paste all the commands from the github actions into one script and then run it locally just fine
14:30 < bridge> <Ewan> i might just get one of those local gha runners
14:30 < ChillerDragon> omg they the worst
14:30 < bridge> <Ewan> probably low overhead
14:30 < ChillerDragon> fakin microsoft
14:30 < ChillerDragon> just run native
14:30 < ChillerDragon> its like 4 commands
14:30 < bridge> <Ewan> x
14:33 < bridge> <heinrich5991> basically, since you can have something like
14:33 < bridge> <heinrich5991> ```rs
14:33 < bridge> <heinrich5991> let param = match x.parse() {
14:33 < bridge> <heinrich5991>     Ok(p) => p,
14:34 < bridge> <heinrich5991>     Err(e) => {
14:34 < bridge> <heinrich5991>         eprintln!("Error in param: {e}");
14:34 < bridge> <heinrich5991>         continue;
14:34 < bridge> <heinrich5991>     }
14:34 < bridge> <heinrich5991> }
14:34 < bridge> <heinrich5991> ```
14:34 < bridge> <Ewan> heinrich why u think it should be a separate command
14:34 < bridge> <heinrich5991> you can model `continue` as `!` which can be converted into any arbitrary type, thus the two branches of the `match` can return the same type
14:34 < bridge> <Ewan> no perf gain at all + it was already multifunctional + more work to make it behave differently
14:36 < bridge> <heinrich5991> seems to be still mostly useless, as explained in the blog post :/
14:40 < bridge> <learath2> It's extremely finnicky to get working and it's slow. Can't recommend unless you are a container veteran and have a beastly pc
14:40 < bridge> <Ewan> damn
14:41 < bridge> <Ewan> https://github.com/ddnet/ddnet/pull/7691#pullrequestreview-1795439527
14:41 < bridge> <Ewan> i don‚Äôt understand what he means
14:41 < bridge> <Ewan> <https://github.com/ddnet/ddnet/pull/7691#pullrequestreview-1795439527>
14:41 < bridge> <Ewan> tbh Heinrich i have seen 2 other ppl implement this on their own and many more expressing their desire for it
14:42 < bridge> <Ewan> i don‚Äôt think your fundamental disagreement but unwillingness to actually code it yourself should stand in the way of what many players want
14:42 < bridge> <Ewan> my implementation is brief, non-intrusive, works and fills the need that most ppl have
14:49 < bridge> <heinrich5991> I'll try to see where the error comes from. please report an issue on github
14:49 < bridge> <heinrich5991> do we use it in threads?
14:51 < bridge> <heinrich5991> `strtod` e.g. returns `NaN` if you input `"nan"` with any case
14:53 < bridge> <learath2> Oh yes, I totally forgot you could explicitly ask for a nan while focusing on the error states
14:53 < bridge> <heinrich5991> you can keep it unformatted and ask someone else to format it
14:54 < bridge> <Ewan> i dealt with it
15:09 < bridge> <cyberfighter> of course fokkonaut instantly responds
15:09 < bridge> <chairn> no, you would get stuck either at some big value if addition always rounds down to the same number, or you'll get stuck at infinity which is a valid value for floating points
15:09 < bridge> <chairn> that sounds like infinity
15:12 < bridge> <heinrich5991> yep, `HUGE_VAL` is defined as infinity on my machine
15:13 < bridge> <Ewan> tricky
15:13 < bridge> <Jupstar ‚ú™> @ryozuki üò¨
15:13 < bridge> <Jupstar ‚ú™> gog sorce
15:14 < bridge> <fokkonaut> Its stupid
15:14 < bridge> <Ewan> it could be a good idea if all popular game modes but ddrace weren‚Äôt closed
15:14 < bridge> <fokkonaut> noby will not have a community, bombay wont be official, blockZ cant be hosted on ddnet, and much more
15:14 < bridge> <Ewan> fng as well
15:15 < bridge> <cyberfighter> u have instant alarm + notification when an issue has the words "mods" and "open-source"?
15:15 < bridge> <Ewan> oh
15:15 < bridge> <Ewan> i misread
15:15 < bridge> <Ewan> xdd
15:15 < bridge> <fokkonaut> then 1 year of "special case" handling for kog
15:15 < bridge> <Ewan> yea that‚Äôs straight up ridiculous
15:15 < bridge> <heinrich5991> I'm pretty sure we can get noby to open his sources. the only reason not to do it was laziness so far, AFAIK
15:15 < bridge> <fokkonaut> all of this makes it very stupid to really force this
15:15 < bridge> <Ewan> what‚Äôs the gain anyway
15:15 < bridge> <fokkonaut> Pushing tw open sourceness
15:15 < bridge> <heinrich5991> longevity of the game
15:16 < bridge> <Ewan> if ppl want to keep ripping each other off in their shitty block clients then let them
15:16 < bridge> <heinrich5991> pushing open-sourceness in an open-source game
15:16 < bridge> <Ewan> one must imagine sisyphus happy
15:16 < bridge> <Ewan> block srvs i mean xd
15:17 < bridge> <fokkonaut> @heinrich5991 even if it's lazyness from noby or whatever, i think with this approach communities will kinda lose their purpose (indicating official servers etc)
15:17 < bridge> <Ewan> tbh it‚Äôs not necessarily against the spirit of teeworlds to have a closed game. it would be non permissive otherwise
15:17 < bridge> <fokkonaut> as a closed src mod cant be a community and therefore is on the black market of servers
15:18 < bridge> <murpi> Something broke the rcon console:
15:18 < bridge> <murpi> https://cdn.discordapp.com/attachments/293493549758939136/1188123393522925608/DDNet_UjLn7tA8OX.gif?ex=65996123&is=6586ec23&hm=2ab31484c14160165e408abd41893d5c7d90c48a9096ea319b870badcbd2ad15&
15:18 < bridge> <Ewan> well the point is to make you want to go oss
15:18 < bridge> <cyberfighter> LOL
15:18 < bridge> <fokkonaut> I understood that
15:18 < bridge> <Ewan> *you*
15:19 < bridge> <Ewan> anyway Heinrich can u respond to smth
15:19 < bridge> <fokkonaut> I just dont think it should be enforced
15:19 < bridge> <Ewan> anythgng rly
15:19 < bridge> <Ewan> waiting 2 sleep
15:19 < bridge> <cyberfighter> new incremental mod added to ddnet where you gain lines in the rcon
15:19 < bridge> <heinrich5991> I'm a fan of having discussion on github, discussions here will be forgotten
15:19 < bridge> <fokkonaut> True
15:19 < bridge> <heinrich5991> @fokkonaut has been the only one to actually comment on the issue I opened
15:19 < bridge> <Ewan> well I responded to both of ur reviews
15:20 < bridge> <fokkonaut> yes
15:21 < bridge> <heinrich5991> in both of the PRs I recently commented on, there's a comment by me that is more recent than a comment of yours, I think
15:21 < bridge> <Ewan> watching ddnet repo would destroy my inbox
15:21 < bridge> <Ewan> i blame this on the gh mobile app
15:21 < bridge> <Ewan> i get no notifications and i had to manually refresh to see it
15:27 < bridge> <robyt3> Is that with nightly? Doesn't happen to me there. Which operating system?
15:28 < bridge> <murpi> Yes, nightly. I can't reproduce it. :/ Only restarting the client helped
15:28 < bridge> <murpi> Win11 64bit
15:28 < bridge> <robyt3> Maybe something not initialized correctly
15:29 < bridge> <Ewan> idk what im looking at anyway
15:29 < bridge> <robyt3> Was this after joining a server or did you do something else like logout or clear the console?
15:30 < bridge> <syrinok> Clearing the console seems to fix that, don't know what causes it though
15:31 < bridge> <murpi> I connected a dummy, that's all. (wasn't authed on my primary tee)
15:31 < bridge> <murpi> I never clear my console, but I did logout via bind
15:32 < bridge> <murpi> I used `bind kp_1 "rcon_login <name> <accesskey>; rcon show_ips 1; rcon status; rcon dump_antibot; rcon logout"` to be more precise
15:34 < bridge> <Ewan> discuss with me fellas
16:00 < ChillerDragon> ayo once i said we need https://mclo.gs/ for ddnet
16:01 < ChillerDragon> i started with syntax highlight and probably will rq there but its kinda public and ready to use already
16:01 < ChillerDragon> https://logs.zillyhuhn.com/?url=https://paste.zillyhuhn.com/jT
16:01 < ChillerDragon> https://logs.zillyhuhn.com/?url=https://paste.zillyhuhn.com/dE
16:04 < bridge> <Jupstar ‚ú™> xD
16:04 < bridge> <Jupstar ‚ú™> such a chillerdragon feature
16:19 < bridge> <Ewan> test
16:21 < bridge> <Ewan> what the hell
16:21 < bridge> <Ewan> ```cpp
16:21 < bridge> <Ewan> Test
16:21 < bridge> <Ewan> ```
16:21 < bridge> <Ewan> this is what i was trying to send
16:21 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1188139411221782639/image.png?ex=6599700e&is=6586fb0e&hm=d258712140a9e6141ee5ac66d91a0f5d63aa4cc869fdaeec6a987a485ba4d1eb&
16:21 < bridge> <Ewan> discord's not letting me for some reason
16:22 < bridge> <Ewan> i super over-engineered it the first time
16:22 < bridge> <Ewan> i liked the logic i thought it was clever
16:27 < bridge> <Ewan> maybe one of my variable names is on some anti-injection blacklist
16:33 < bridge> <ryozuki> kog should definitly not be a exception and removed
16:34 < ChillerDragon> removed from wat wowo
16:34 < bridge> <chillerdragon> a
16:34 < bridge> <chillerdragon> wowo
16:34 < bridge> <Ewan> wowo
16:34 < ChillerDragon> hot discussion foss
16:34 < bridge> <Ewan> chuller
16:34 < ChillerDragon> Uwun
16:34 < bridge> <Ewan> true
16:35 < bridge> <ryozuki> i open my pc and put the same on gh in 5 mins
16:35 < bridge> <Ewan> Wdym
16:35 < bridge> <ryozuki> so its not lost
16:35 < bridge> <ryozuki> i always said we shouldnt give visibility to closed source
16:36 < bridge> <ryozuki> we also shouldnt offer kog help with discord commands
16:36 < bridge> <ryozuki> a bot should silently delete the msg and send a private dm
16:36 < bridge> <ryozuki> its rly annoying
16:36 < bridge> <ryozuki> i ofc would change my mind if kog becomes fully open source, web and all
16:37 < bridge> <ryozuki> btw unique deserves more to be in the community list
16:37 < bridge> <ryozuki> we are fully open source, web too
16:37 < bridge> <MilkeeyCat> open source btw
16:37 < bridge> <milkeeycat> no pfp, fock :feelsbadman:
16:38 < bridge> <Ewan> very true
16:38 < bridge> <Ewan> tim has not been responding to my msgs
16:39 < bridge> <ryozuki> he is sadly not much into tw lately
16:39 < bridge> <ryozuki> life
16:39 < bridge> <Ewan> usa servers db is not properly set up
16:39 < bridge> <Ewan> idk since when
16:39 < ChillerDragon> ddnet is not open source
16:39 < bridge> <Ewan> but i turned race servers off about a month ago
16:39 < ChillerDragon> it links spyware blobs
16:39 < bridge> <Ewan> still waiting for him to fix
16:40 < bridge> <heinrich5991> ddnet is open-source
16:40 < bridge> <heinrich5991> check https://github.com/ddnet/ddnet
16:40 < ChillerDragon> https://github.com/ddnet/ddnet/blob/88ee1566463e9e377d34600b47fd4b6be28ca57a/CMakeLists.txt#L3148
16:40 < ChillerDragon> where is the code for this dylib
16:40 < ChillerDragon> https://github.com/ddnet/ddnet/blob/88ee1566463e9e377d34600b47fd4b6be28ca57a/CMakeLists.txt#L3156
16:40 < bridge> <Ewan> that is not discord code
16:40 < ChillerDragon> where is the code
16:41 < bridge> <Ewan> is any open source code which relies on Microsoft‚Äôs CRT closed?
16:41 < bridge> <heinrich5991> all of DDNet code is open source. you can also (and by default) build without linking to closed source code
16:41 < bridge> <ryozuki> https://www.gnu.org/philosophy/pragmatic.en.html
16:41 < bridge> <ryozuki> >  The GNU GPL is not Mr. Nice Guy. It says no to some of the things that people sometimes want to do. There are users who say that this is a bad thing‚Äîthat the GPL ‚Äúexcludes‚Äù some proprietary software developers who ‚Äúneed to be brought into the free software community.‚Äù
16:41 < bridge> <ryozuki> > 
16:41 < bridge> <ryozuki> > But we are not excluding them from our community; they are choosing not to enter. Their decision to make software proprietary is a decision to stay out of our community. Being in our community means joining in cooperation with us; we cannot ‚Äúbring them into our community‚Äù if they don't want to join.
16:41 < bridge> <heinrich5991> on linux, at least
16:41 < ChillerDragon> ddnet.org ships code that is not public doesnt it?
16:41 < ChillerDragon> or ships binaries
16:41 < ChillerDragon> compiled by valve and discord
16:41 < bridge> <Ewan> shut up
16:41 < bridge> <heinrich5991> ddnet.org and steam ship binaries that are not open-source, yes
16:41 < ChillerDragon> i dont like that
16:42 < ChillerDragon> wouldnt call that foss
16:42 < bridge> <heinrich5991> feel free to be this specific
16:42 < bridge> <heinrich5991> but calling ddnet non-open source seems wrong to me
16:42 < ChillerDragon> i am specific
16:42 < bridge> <heinrich5991> no:
16:42 < bridge> <heinrich5991> > ddnet is not open source
16:43 < ChillerDragon> out of context xd
16:43 < bridge> <ryozuki> lot of projects deliver the compiled software via a paywall but they host the full source code on a public site
16:43 < bridge> <ryozuki> that is still open and free software
16:43 < bridge> <Jupstar ‚ú™> xd
16:43 < ChillerDragon> irc newlines be like
16:43 < ChillerDragon> i followed up with why its not foss 1s after
16:43 < bridge> <ryozuki> tw should have used AGPL
16:43 < bridge> <Jupstar ‚ú™> pls no
16:44 < bridge> <Jupstar ‚ú™> exclusive licenses are evil
16:44 < bridge> <Jupstar ‚ú™> excluding*
16:44 < bridge> <heinrich5991> but that is incorrect. ddnet.org/steam builds of ddnet are not open source
16:44 < bridge> <heinrich5991> ddnet itself is very much open source
16:44 < ChillerDragon> except the scripts repo :p
16:44 < bridge> <ryozuki> GPL is the most user respecting license
16:44 < bridge> <murpi> What's this referring to?
16:44 < ChillerDragon> and anitbot axaxax
16:44 < bridge> <ryozuki> $kog
16:44 < bridge> <ryozuki> and the other
16:44 < bridge> <ryozuki> which spams a wall
16:44 < bridge> <ryozuki> dont promote this
16:44 < ChillerDragon> but i mean it is embracing closed source software by using discord and steam api @heinrich5991
16:44 < bridge> <Jupstar ‚ú™> no, it just prevents specific ppl to use it
16:45 < bridge> <ryozuki> send a private dm and delete the message
16:45 < ChillerDragon> and forcing that onto all users that download ddnet from official channels
16:45 < bridge> <ryozuki> no, it ensures users have the freedoms everyone should have
16:45 < bridge> <ryozuki> fully owning a software u use
16:45 < bridge> <heinrich5991> that downlad ddnet *binaries* from ddnet.org
16:45 < ChillerDragon> yes
16:45 < bridge> <Jupstar ‚ú™> that is the case with other OS licenses too
16:45 < bridge> <Jupstar ‚ú™> one could argue, even more
16:45 < bridge> <heinrich5991> implement it in a sane way, I think it'd be accepted
16:45 < bridge> <ryozuki> no because there will be devs using propietary licenses
16:46 < bridge> <heinrich5991> I see it as hard to do though
16:46 < bridge> <ryozuki> this is why i link this article https://www.gnu.org/philosophy/pragmatic.en.html
16:46 < bridge> <ryozuki> u have to be pragmatic in this world
16:46 < bridge> <Jupstar ‚ú™> then remove license all together
16:46 < bridge> <Jupstar ‚ú™> that is pragmatic
16:46 < bridge> <Jupstar ‚ú™> you are just playing the game without breaking any rules
16:46 < bridge> <ryozuki> that requires us to overthro goverments and copyright laws which is impossible
16:46 < bridge> <ryozuki> u are not being realistic
16:46 < bridge> <murpi> The 'other' no longer exists
16:46 < bridge> <ryozuki> while this license is
16:47 < bridge> <Jupstar ‚ú™> but it's governments and copyright laws that also have to protect your license in order to work
16:47 < bridge> <ryozuki> yeah u cant change the game, u play the game smart
16:47 < bridge> <Jupstar ‚ú™> so you are stabilizing the rights of companies
16:47 < bridge> <ryozuki> its what copyleft does
16:47 < bridge> <ryozuki> tf are u saying
16:47 < bridge> <Jupstar ‚ú™> well your opinion
16:47 < bridge> <ryozuki> yes its mine
16:47 < bridge> <ryozuki> i use agpl everywhere now
16:47 < bridge> <Jupstar ‚ú™> good for you
16:47 < bridge> <Jupstar ‚ú™> sadly zwelf uses it too
16:48 < bridge> <ryozuki> good
16:48 < bridge> <Jupstar ‚ú™> sad
16:48 < bridge> <ryozuki> zwelf understands
16:48 < bridge> <ryozuki> he is also pretty based
16:48 < bridge> <ryozuki> he required the wiki to use a plugin which doesnt directly load the yt videos
16:48 < bridge> <ryozuki> for privacy reasons
16:48 < bridge> <ryozuki> i admire him
16:48 < bridge> <Jupstar ‚ú™> i think his ddnet physics have the potential to be used for a next gen ddnet
16:48 < bridge> <Jupstar ‚ú™> but with AGPL it doesnt have my support at least
16:49 < bridge> <Jupstar ‚ú™> that would be a step backwards compared to the cpp project
16:49 < bridge> <ryozuki> no
16:49 < bridge> <ryozuki> with agpl its even better
16:49 < bridge> <ryozuki> i hope he makes it rly good
16:50 < bridge> <ryozuki> this is how gpl thrives
16:50 < bridge> <ryozuki> why gcc had so much impact
16:50 < bridge> <Ewan> ryo we trade reviews?
16:50 < bridge> <ryozuki> > Consider GNU C++. Why do we have a free C++ compiler? Only because the GNU GPL said it had to be free. GNU C++ was developed by an industry consortium, MCC, starting from the GNU C compiler. MCC normally makes its work as proprietary as can be. But they made the C++ front end free software, because the GNU GPL said that was the only way they could release it. The C++ front end included many new files, but since they were meant to be linked with G
16:50 < bridge> <Jupstar ‚ú™> and now clang is the "better" compiler
16:50 < bridge> <Jupstar ‚ú™> or llvm generally
16:50 < bridge> <ryozuki> sadly llvm has made things like NVVM be born
16:50 < bridge> <ryozuki> its toxic af
16:50 < bridge> <Jupstar ‚ú™> only thing i still use gcc is to get most perf
16:50 < bridge> <ryozuki> i dislike llvm license the most
16:51 < bridge> <ryozuki> > Consider GNU Objective C. NeXT initially wanted to make this front end proprietary; they proposed to release it as .o files, and let users link them with the rest of GCC, thinking this might be a way around the GPL's requirements. But our lawyer said that this would not evade the requirements, that it was not allowed. And so they made the Objective C front end free software.
16:51 < bridge> <Ewan> nu obj c wat
16:52 < bridge> <Ewan> xxxxxx'
16:53 < bridge> <Jupstar ‚ú™> https://en.wikipedia.org/wiki/Public_domain#/media/File:Cc-public_domain_mark.svg
16:53 < bridge> <Jupstar ‚ú™> the best logo
16:53 < bridge> <Jupstar ‚ú™> üòè
16:53 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1188147340662546483/CuwRGqqE9xQAAAAASUVORK5CYII.png?ex=65997770&is=65870270&hm=db2b1105fdc3264a481dea10ede15dccb5ba6f927ff76b7d37e2817faa4297b6&
16:53 < bridge> <ryozuki> agpl logo is cooler xd
16:53 < bridge> <ryozuki> ill add this logo in my web
16:55 < bridge> <Jupstar ‚ú™> add vulkan logo
16:55 < bridge> <Ewan> lol
16:55 < bridge> <Jupstar ‚ú™> bcs vulkan API is royalty-free
16:55 < bridge> <Jupstar ‚ú™> 
16:55 < bridge> <Jupstar ‚ú™> and fast af üòè
16:58 < bridge> <Jupstar ‚ú™> that's how true kings live
16:58 < bridge> <Jupstar ‚ú™> üòè
16:58 < bridge> <Ewan> u all so religious
16:58 < bridge> <ryozuki> @heinrich5991 pls dont ask me to remove comments
16:58 < bridge> <Ewan> i hope to one day be as passionate about something as you are about rust and vulkan
16:59 < bridge> <Ewan> on wiki?
16:59 < bridge> <Ewan> or wat
16:59 < bridge> <ryozuki> its totally legit to say some private mods want monetary gain
16:59 < bridge> <Jupstar ‚ú™> if you are not religious about cpp, why don't you try rust? üòâ
16:59 < bridge> <ryozuki> https://github.com/ddnet/ddnet/issues/7699
16:59 < bridge> <Ewan> i did try rust
16:59 < bridge> <Jupstar ‚ú™> for over 1 week xd
16:59 < bridge> <Ewan> no
16:59 < bridge> <Ewan> too much brain power involved
16:59 < bridge> <heinrich5991> the "you" sounded to me like addressing Kaffeine
16:59 < ChillerDragon>  @ryozuki i am suprised you with your agpl user rights whatever idiology are not bothered by discord
16:59 < bridge> <Ewan> cpp flows thru my fingers naturally
16:59 < bridge> <heinrich5991> and now you're telling him that he's doing it for possible monetary gain
17:00 < bridge> <Jupstar ‚ú™> üòÇ
17:00 < bridge> <heinrich5991> and that's telling others what their intentions are
17:00 < bridge> <heinrich5991> which is not nice
17:00 < bridge> <ryozuki> ok my you was like in 3rd person
17:00 < bridge> <ryozuki> as in the person doing a privative mod
17:00 < bridge> <heinrich5991> can you replace it with "one"?
17:00 < bridge> <heinrich5991> then it's clear
17:00 < bridge> <Ewan> dude
17:00 < bridge> <ryozuki> ur so pedantic sometimes
17:00 < bridge> <Ewan> why do u want to control what he saysa
17:00 < bridge> <Ewan> it does not even reflect on u
17:01 < bridge> <Ewan> let it go
17:01 < bridge> <heinrich5991> because I want the discussion to go somewhere. insults or things perceived to be insults help make the discussion go nowhere
17:01 < bridge> <Jupstar ‚ú™> i've to admit, i much more rare need to open the rust "spec" (or google about rust behavior) than cpp behavior
17:01 < bridge> <Jupstar ‚ú™> even tho i code in cpp for 10 years
17:01 < bridge> <Ewan> code in my brain is cpp
17:01 < bridge> <ryozuki> ChillerDragon: its true im sad i have to use discord, but i dont want to be invisible socially and i need to talk to friends i cant be like stalkman, but yeah it may be idiotic but i still want agpl
17:02 < ChillerDragon> i see
17:02 < ChillerDragon> thats fair
17:02 < bridge> <Ewan> sad that drug dealers have ruined name of all the good open chat softwares
17:02 < ChillerDragon> like which
17:02 < bridge> <heinrich5991> the EU might help with that üôÇ
17:02 < ChillerDragon> i am yet to discover good chat software @Ewan wat would u consider good?
17:03 < bridge> <ryozuki> how so
17:03 < bridge> <heinrich5991> that doesn't sound like drug dealers, but rather someone trying to use drug dealers to fight against open chat software
17:03 < bridge> <Ewan> telegram, signal
17:03 < ChillerDragon> they suck ass
17:03 < bridge> <Ewan> telegram is goated
17:03 < ChillerDragon> telegram and signal are shit af
17:03 < bridge> <ryozuki> i know my views are probably impossible but its nice to have some ideals
17:03 < ChillerDragon> telegram is closed src
17:03 < ChillerDragon> signal is literal spyware
17:03 < bridge> <heinrich5991> not discord specifically, but the dma forces some messengers to interoperate
17:03 < bridge> <Ewan> yea
17:03 < ChillerDragon> bound to your phonenumber
17:03 < bridge> <heinrich5991> telegram is open-source
17:03 < ChillerDragon> everything?
17:03 < bridge> <Ewan> open client
17:03 < bridge> <heinrich5991> open client
17:03 < ChillerDragon> isnt serrvers closed
17:03 < bridge> <Ewan> yea
17:03 < bridge> <Jupstar ‚ú™> well vulkan is bad because it doesn't enforce me to write correct code, **BUT** it , IMO, makes 10000 more sense than OpenGL.
17:03 < bridge> <Jupstar ‚ú™> 
17:03 < bridge> <Jupstar ‚ú™> It's much more clear to me what happens under the hood with it.
17:03 < ChillerDragon> thats not open source then
17:03 < bridge> <ryozuki> @heinrich5991 i think google play store doesnt allow GPL apps
17:03 < bridge> <ryozuki> idk if they allow MIT
17:04 < ChillerDragon> binding a chat protocol to a phone number is fucked
17:04 < ChillerDragon> and should be illegal
17:04 < bridge> <heinrich5991> apple does not, not sure about google
17:04 < bridge> <Jupstar ‚ú™> @mpft join the vulkan force
17:04 < bridge> <Jupstar ‚ú™> 
17:04 < bridge> <Jupstar ‚ú™> today
17:04 < bridge> <Jupstar ‚ú™> 
17:04 < bridge> <Jupstar ‚ú™> not tomorrow
17:04 < bridge> <heinrich5991> I think they're working on it, ChillerDragon
17:04 < bridge> <Ewan> idek opengl
17:04 < ChillerDragon> signal?
17:04 < bridge> <heinrich5991> yes
17:04 < ChillerDragon> thats amazing i didnt know that
17:04 < ChillerDragon> holy 
17:04 < ChillerDragon> there might be hope
17:04 < bridge> <ryozuki> i think phone numbers should be more abundant so they not used anymore to identify someone
17:04 < bridge> <Ewan> i only do 2d greaphics usuauaully
17:04 < bridge> <ryozuki> or just change phone number system
17:04 < bridge> <Jupstar ‚ú™> https://techgage.com/wp-content/uploads/2018/03/Khronos-Vulkan-Logo-680x656.png
17:04 < bridge> <Jupstar ‚ú™> vk has cool logos
17:04 < bridge> <Ewan> i know
17:04 < bridge> <Jupstar ‚ú™> XD
17:05 < bridge> <Ewan> it's awesome
17:05 < bridge> <Jupstar ‚ú™> good argument
17:05 < bridge> <Jupstar ‚ú™> rust has only ugly logos
17:05 < bridge> <Jupstar ‚ú™> vulkan has cool logos
17:05 < bridge> <Ewan> golang has worst logos
17:05 < bridge> <ryozuki> rust has some cute logos
17:05 < bridge> <ryozuki> ok not logos
17:05 < ChillerDragon> binding contacts/chats/2fa to some weird small device and a contract is such an unstable concept
17:05 < bridge> <Ewan> who is this asshole
17:05 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1188150439951220746/12562442-golang-development-servics-2715713123.png?ex=65997a53&is=65870553&hm=0b735d70e55def7278d8b8c03945b2f8c598219246362fc3632308fce0988a16&
17:05 < bridge> <ryozuki> https://tenor.com/view/ferris-rust-rustlang-crab-cute-gif-26396486
17:05 < bridge> <Ewan> i want to flush him down a toilet
17:05 < bridge> <Jupstar ‚ú™> but not the crap crab
17:05 < bridge> <ryozuki> xd
17:06 < bridge> <milkeeycat> does vulkan have waifus?
17:06 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1188150526853009479/z30gb4g5vwea1.png?ex=65997a68&is=65870568&hm=b2420c5102a5d4330bde769c2263c2b58bb15b6dbe97f50765b0065c80054ed0&
17:06 < bridge> <ryozuki> @jupeyy_keks u know there is a unsafe rust pet
17:06 < ChillerDragon> lmao @Ewan xd
17:06 < bridge> <ryozuki> meet corro, the unsafe rust pet
17:06 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1188150589134225568/corro.png?ex=65997a77&is=65870577&hm=6c0c601f3c5164935f596e74153509d446b99b03ed74cb405259549503b519a4&
17:06 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1188150616271368263/EzDmTuJWgAUEg5h.png?ex=65997a7d&is=6587057d&hm=54954741ceb2dcd4b074e9c145a557afe97d2357ef1663462d227c386ba0d722&
17:06 < bridge> <Jupstar ‚ú™> kek
17:06 < ChillerDragon> https://goran.krampe.se/nim/nim-logo2.png
17:06 < ChillerDragon> nimrocks
17:06 < bridge> <Jupstar ‚ú™> https://pbs.twimg.com/media/DX-mmbxWkAAGbA4.jpg
17:06 < bridge> <Jupstar ‚ú™> how did he create a black version
17:06 < bridge> <Jupstar ‚ú™> looks even cooler
17:06 < bridge> <ryozuki> i like more the one with text
17:07 < bridge> <ryozuki> "forging ahead"
17:07 < bridge> <ryozuki> or smth
17:07 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1188150833175613440/VulkanCar_678x452.png?ex=65997ab1&is=658705b1&hm=71c8895ed7c568f385af4d1d8b39e37facd37eaba58f626394234fec02c6a13b&
17:07 < bridge> <Jupstar ‚ú™> i like the other more üòÑ
17:07 < bridge> <ryozuki> @jupeyy_keks ü§ù
17:07 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1188150939270533170/maxresdefault.png?ex=65997aca&is=658705ca&hm=7250faa00dc650b536c5bf5dab5e253ffea0de9ffca329ea0c39114794ead2be&
17:07 < bridge> <Jupstar ‚ú™> üò¨
17:08 < bridge> <ryozuki> when vulkan 1.4
17:08 < bridge> <Jupstar ‚ú™> vulkan is already too bloated üò¨ 
17:08 < bridge> <Jupstar ‚ú™> 
17:08 < bridge> <Jupstar ‚ú™> we need new API
17:09 < bridge> <ryozuki> @jupeyy_keks but thanks to vulkan extensions u can easily add features right
17:09 < bridge> <Jupstar ‚ú™> yeah, and validation layers etc.
17:09 < bridge> <Jupstar ‚ú™> 
17:09 < bridge> <Jupstar ‚ú™> but they add like 3 new extensions per month xD
17:09 < bridge> <ryozuki> stonks
17:11 < bridge> <ryozuki> @heinrich5991 @jupeyy_keks i think a override on a virtual with default is still virtual right?
17:11 < bridge> <Jupstar ‚ú™> from my understanding yes
17:11 < bridge> <Ewan> wdym
17:11 < bridge> <Jupstar ‚ú™> and default also still implements the destructor chain
17:11 < bridge> <heinrich5991> how would you mark it non-virtual then?
17:11 < bridge> <ryozuki> i made this changes with clangd suggestions
17:11 < bridge> <Jupstar ‚ú™> override only works on virtual functions
17:12 < bridge> <Jupstar ‚ú™> just remove the const stuff
17:12 < bridge> <heinrich5991> is there a difference between marking child class functions as `virtual` or not (e.g. if they're further derived)?
17:12 < bridge> <Jupstar ‚ú™> i agree with heinrich, even tho i'd argument from different perspective xd
17:12 < bridge> <ryozuki> override also makes it a error if the overriden signature doesnt mathc, while virtual doesnt and ucan get nifty bugs
17:12 < bridge> <ryozuki> override is safer and better
17:12 < bridge> <ryozuki> override also makes it a error if the overriden signature doesnt match, while virtual doesnt and ucan get nifty bugs
17:12 < bridge> <heinrich5991> I think override and virtual do different things
17:12 < bridge> <Ewan> you can't finalize a virtual function
17:12 < bridge> <Jupstar ‚ú™> no, u can always override, until u used final
17:12 < bridge> <heinrich5991> not having to do with each other
17:13 < bridge> <heinrich5991> not having anything to do with each other
17:13 < bridge> <ryozuki> yeah as long as its not marked final
17:13 < bridge> <ryozuki> u can override i think
17:13 < bridge> <Ewan> override simply overrides any virtual fn, already implemented or not
17:13 < bridge> <ryozuki> > In a member function declaration or definition, override specifier ensures that the function is virtual and is overriding a virtual function from a base class. The program is ill-formed (a compile-time error is generated) if this is not true.
17:13 < bridge> <ryozuki> > 
17:13 < bridge> <ryozuki> > override is an identifier with a special meaning when used after member function declarators: it's not a reserved keyword otherwise.
17:13 < bridge> <ryozuki> see
17:13 < bridge> <ryozuki> it ensures
17:13 < bridge> <heinrich5991> yes
17:14 < bridge> <Jupstar ‚ú™> you are overriding the vptr
17:14 < bridge> <Jupstar ‚ú™> 
17:14 < bridge> <Jupstar ‚ú™> what else you mean?
17:14 < bridge> <ryozuki> > ensures that the function is virtual and is overriding a virtual function from a base class
17:14 < bridge> <heinrich5991> ah, it makes it virtual
17:14 < bridge> <heinrich5991> perfect üôÇ
17:15 < bridge> <ryozuki> i also agree with jupstar gh comment
17:15 < bridge> <ryozuki> we should use refs wherever possible
17:15 < bridge> <ryozuki> so const matters
17:15 < bridge> <ryozuki> xd
17:16 < bridge> <Jupstar ‚ú™> well heinrich will say that it's less clear as func arguments
17:16 < bridge> <Jupstar ‚ú™> but anyway, let's not trigger this discussion again xD
17:16 < bridge> <ryozuki> its cuz cpp doesnt require u to do & right
17:16 < bridge> <ryozuki> xd
17:16 < bridge> <Jupstar ‚ú™> yes
17:16 < bridge> <ryozuki> also does cpp optimize refs better
17:16 < bridge> <ryozuki> ?
17:16 < bridge> <ryozuki> since it knows its not null
17:17 < bridge> <ryozuki> we should also do noalias üò¨
17:17 < bridge> <Jupstar ‚ú™> dunno, i guess it's about the compiler
17:17 < bridge> <ryozuki> rust in cpp
17:21 < bridge> <Jupstar ‚ú™> yeah, if cpp would have move by default, it would be less of a pain
17:22 < bridge> <murpi> @heinrich5991 > There are advantages to keeping your code private, like discovering vulnerabilities but keeping them under wraps for personal benefit
17:22 < bridge> <murpi> 
17:22 < bridge> <murpi> >> "discovering vulnerabilities but keeping them under wraps for personal benefit" does not sound like a benefit to the community at large at all.
17:22 < bridge> <murpi> 
17:22 < bridge> <murpi> Sorry, I edited it my comment too late :|
17:23 < bridge> <Jupstar ‚ú™> @ryozuki when do you start working for discord and add @ aliases so i can ping u with `@rust` üòè
17:23 < bridge> <Jupstar ‚ú™> chiller once had it, sad it was removed
17:23 < bridge> <Jupstar ‚ú™> xd
17:23 < bridge> <Ewan> No
17:24 < bridge> <Jupstar ‚ú™> well that would at least eliminate the problem with const ref vs implicit copy
17:24 < bridge> <Jupstar ‚ú™> and _many_ times you want a const ref as function parameter
17:24 < bridge> <Jupstar ‚ú™> but anyway this alone wont work anyway
17:25 < bridge> <Jupstar ‚ú™> there's a reason why rust kinda feels like the opposite syntax wise than cpp xD
17:25 < bridge> <Ewan> when u move u deal with lifetimes
17:25 < bridge> <Jupstar ‚ú™> stuff u need to type out in rust, u dont need to do in cpp and wise versa
17:25 < bridge> <Jupstar ‚ú™> stuff u need to type out in rust, u dont need to do in cpp and vise versa
17:25 < bridge> <Ewan> just avoid it if u want to stay sane
17:25 < bridge> <Ewan> you do not need those 4 bytes
17:25 < bridge> <Ewan> const ref is the way tho
17:26 < bridge> <murpi> @heinrich5991 > There are advantages to keeping your code private, like discovering vulnerabilities but keeping them under wraps for personal benefit
17:26 < bridge> <murpi> 
17:26 < bridge> <murpi> >> "discovering vulnerabilities but keeping them under wraps for personal benefit" does not sound like a benefit to the community at large at all.
17:26 < bridge> <murpi> 
17:26 < bridge> <murpi> Sorry, I edited it my comment too late :|
17:26 < bridge> <murpi> Edit: I changed it again so it makes more sense xD
17:26 < bridge> <Jupstar ‚ú™> how do you want to approach insane gores, if u want to stay sane xd
17:26 < bridge> <Ewan> i hate gores
17:27 < bridge> <Jupstar ‚ú™> ok ddnet calls it insane too
17:27 < bridge> <Jupstar ‚ú™> when `nightmare` category
17:27 < bridge> <Ewan> insane is enough tbh
17:28 < bridge> <Ewan> tho 50pts for a 5* is not nearly enough
17:28 < ChillerDragon> we could also add a "free" category and shift stuff
17:28 < bridge> <Ewan> all those pts are the difference between 20k and 30k players nowadays
17:28 < bridge> <Ewan> the gap should be higher
17:28 < ChillerDragon> so novice becomes free and moderate novice and hard moderate and insane hard and insane is free for harder stuff
17:28 < bridge> <Ewan> idk
17:28 < bridge> <Ewan> categories are fine as is
17:28 < ChillerDragon> xd ofc they are
17:28 < bridge> <Ewan> gonna make some eggs
17:28 < ChillerDragon> egg
17:30 < bridge> <Jupstar ‚ú™> `novice`
17:30 < bridge> <Jupstar ‚ú™> `moderate`
17:30 < bridge> <Jupstar ‚ú™> `brutal`
17:30 < bridge> <Jupstar ‚ú™> `insane`
17:30 < bridge> <Jupstar ‚ú™> `nightmare`
17:30 < bridge> <Jupstar ‚ú™> `godlike`
17:30 < bridge> <Jupstar ‚ú™> `supreme king`
17:30 < bridge> <Jupstar ‚ú™> `SSGSSJ2`
17:30 < bridge> <Jupstar ‚ú™> `Ultra instinct`
17:30 < bridge> <Jupstar ‚ú™> my unbiased list
17:31 < bridge> <murpi> `uninstall`
17:32 < bridge> <heinrich5991> stronghold 4 release in half an our!
17:32 < bridge> <heinrich5991> stronghold 4 release in half an hour!
17:32 < bridge> <heinrich5991> everyone in? üôÇ
17:32 < bridge> <ryozuki> `atomic`
17:32 < bridge> <ryozuki> ohh
17:32 < bridge> <Jupstar ‚ú™> `thread-safe`
17:32 < bridge> <ryozuki> lets do towers
17:34 < bridge> <Ewan> i am so excited
17:34 < bridge> <Ewan> are u srs
17:34 < bridge> <Ewan> i am actually in
17:35 < bridge> <ryozuki> im in
17:35 < bridge> <ryozuki> ger10
17:35 < bridge> <ryozuki> stormwind
17:35 < bridge> <bumm.> Who will post the first stronghold 4 tower :justatest:
17:35 < bridge> <ryozuki> lets do a dev team
17:35 < bridge> <ryozuki> üò¨
17:35 < bridge> <ryozuki> we wont pass üò¨
17:37 < bridge> <Ewan> fine by me
17:37 < bridge> <Ewan> u want to voice?
17:37 < bridge> <learath2> On all implementations that support infinities iirc
17:39 < bridge> <Ewan> learath are u in
17:39 < bridge> <heinrich5991> that seems really irrelevant. all machines I know of support IEEE754
17:39 < bridge> <heinrich5991> I'm sure we rely on IEEE754 somewhere more than "supporting infinities" somewhere
17:49 < bridge> <Ewan> where's my team
17:51 < bridge> <Ewan> dont see it
17:51 < bridge> <ryozuki> ger
17:52 < bridge> <Ewan> im on 45.141.57.22:8336
17:52 < bridge> <DDNet> 45.141.57.22:8336 is an official DDNet server. 
17:52 < bridge> <DDNet> <https://ddnet.org/connect-to/?addr=45.141.57.22:8336/>
18:05 < bridge> <learath2> Am outside
18:05 < bridge> <Ewan> come on in
18:09 < bridge> <gerdoe> whats going on vc
18:09 < bridge> <gerdoe> @cyberfighter yo
18:10 < bridge> <gerdoe> ill do a little trolling
18:10 < bridge> <cyberfighter> hi
18:10 < bridge> <gerdoe> got trolled by cf himself
18:11 < bridge> <cyberfighter> whats so special about stronghold 4
18:11 < bridge> <gerdoe> numbero 4 is kinda exciting
18:11 < bridge> <Ewan> the final
18:11 < bridge> <cyberfighter> as if we needed the fourth one
18:12 < bridge> <cyberfighter> :troll:
18:19 < bridge> <ryozuki> playing stronghold 4
18:52 < bridge> <heinrich5991> @mpft
18:52 < bridge> <heinrich5991> ubgane
18:52 < bridge> <heinrich5991> ingame
18:52 < bridge> <Ewan> what‚Äôs up
18:52 < bridge> <Ewan> I have been waiting on my brother to exit his friend‚Äôs house for like 15 minutes
19:07 < bridge> <Jupstar ‚ú™> @robyt3 come voice
19:08 < bridge> <cyberfighter> does windows 11 have different emojis tf?
19:08 < bridge> <cyberfighter> https://cdn.discordapp.com/attachments/293493549758939136/1188181462328016896/image.png?ex=65999737&is=65872237&hm=ff0b17e163dc38d3dfd342f49ff5b9a2bed979132ee7e8b9baee4215292521b9&
19:09 < bridge> <gerdoe> win10 has black outlined so seems yep
19:37 < bridge> <Ewan> @robyt3 come voice
20:00 < bridge> <-StormAx> in which update ninja was removed to frozen tee?
20:05 < bridge> <Ewan> u mean the katana?
20:06 < bridge> <-StormAx> ye
20:08 < bridge> <cyberfighter> are you gonna fork it
20:11 < bridge> <-StormAx> ima gonna add oldshccool mode
20:11 < bridge> <-StormAx> ima gonna add oldshcool mode
20:29 < bridge> <-StormAx> so, does someone know?
20:31 < bridge> <syrinok> 16.2.2? I think when the HUD was added?
20:37 < bridge> <heinrich5991> @coke1465 ingame
20:39 < bridge> <syrinok> Ya, just checked, it was 16.2.2
20:39 < bridge> <-StormAx> yep
20:39 < bridge> <-StormAx> thanks
20:39 < bridge> <syrinok> No problem
21:28 < bridge> <ryozuki> was fun but missed @learath2
21:33 < ChillerDragon> 17:35:53        bridge | <ryozuki> we wont pass üò¨
21:33 < bridge> <Ewan> yea sma
21:33 < bridge> <Ewan> same
21:33 < ChillerDragon> gg
21:33 < bridge> <heinrich5991> gg
21:34 < bridge> <Jupstar ‚ú™> was funny run, happy end
21:34 < bridge> <Jupstar ‚ú™> disney could have written this story better
21:34 < bridge> <Jupstar ‚ú™> "funny run"
21:34 < bridge> <Jupstar ‚ú™> üòè
21:34 < bridge> <Jupstar ‚ú™> insider
21:34 < ChillerDragon> xd
21:35 < bridge> <Ewan> üòé
21:38 < bridge> <Jupstar ‚ú™> was funny run, happy end
21:38 < bridge> <Jupstar ‚ú™> disney couldn't have written this story better
21:41 < bridge> <ryozuki> gg
21:42 < bridge> <Jupstar ‚ú™> the last sweaty moments
21:42 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1188220177763008704/ezpz.mp4?ex=6599bb46&is=65874646&hm=82604ea0aa641a425c5d8465b90b482b6ffff4be4854b463a2f42000941ccbe0&
21:42 < bridge> <Jupstar ‚ú™> the hammer was so close to freeze xD
22:05 < bridge> <Ewan> enjoying your holiday ryo
22:09 < bridge> <ryozuki> thanks
22:11 < bridge> <Jupstar ‚ú™> @ryozuki first time i heard you üò¨
22:11 < bridge> <ryozuki> normal
22:11 < bridge> <ryozuki> i dont talk much
22:11 < bridge> <Jupstar ‚ú™> i usually also don't talk much, but today dunno
22:11 < bridge> <ryozuki> same about u
22:11 < bridge> <Jupstar ‚ú™> i fell out of my role
22:12 < bridge> <ryozuki> xD
22:12 < bridge> <ryozuki> u showed ur gores skill
22:12 < bridge> <ryozuki> its so easy to notice
22:12 < bridge> <ryozuki> the only gores part
22:12 < bridge> <ryozuki> gj
22:12 < bridge> <Jupstar ‚ú™> xdd insane gores skills
22:12 < bridge> <ryozuki> xdd
22:12 < bridge> <ryozuki> i suck hard at them
22:12 < bridge> <ryozuki> they filler parts in ddnet
22:20 < bridge> <ryozuki> ```c
22:20 < bridge> <ryozuki> #include <stdio.h>
22:20 < bridge> <ryozuki> main(t,_,a)
22:20 < bridge> <ryozuki> char
22:20 < bridge> <ryozuki> *
22:20 < bridge> <ryozuki> a;
22:20 < bridge> <ryozuki> {
22:20 < bridge> <ryozuki>         return!
22:20 < bridge> <ryozuki> 
22:20 < bridge> <ryozuki> 0<t?
22:20 < bridge> <ryozuki> t<3?
22:20 < bridge> <ryozuki> 
22:20 < bridge> <ryozuki> main(-79,-13,a+
22:20 < bridge> <ryozuki> main(-87,1-_,
22:20 < bridge> <ryozuki> main(-86, 0, a+1 )
22:20 < bridge> <ryozuki> 
22:20 < bridge> <ryozuki> 
22:20 < bridge> <ryozuki> +a)):
22:20 < bridge> <ryozuki> 
22:20 < bridge> <ryozuki> 1,
22:20 < bridge> <ryozuki> t<_?
22:20 < bridge> <ryozuki> main(t+1, _, a )
22:20 < bridge> <ryozuki> :3,
22:20 < bridge> <ryozuki> 
22:20 < bridge> <ryozuki> main ( -94, -27+t, a )
22:20 < bridge> <ryozuki> &&t == 2 ?_
22:20 < bridge> <ryozuki> <13 ?
22:20 < bridge> <ryozuki> 
22:20 < bridge> <ryozuki> main ( 2, _+1, "%s %d %d\n" )
22:20 < bridge> <ryozuki> 
22:20 < bridge> <ryozuki> :9:16:
22:20 < bridge> <ryozuki> merry C christmas
22:20 < bridge> <ryozuki> (try to run it)
22:22 < bridge> <heinrich5991> smells like
22:22 < bridge> <heinrich5991> 1. Xmas.c, winner of the 1988 International Obfuscated C Code Contest (udel.edu)
22:22 < bridge> <heinrich5991> 279 points by evah 3 hours ago | flag | hide | 40 comments
22:22 < bridge> <ryozuki> indeed
22:22 < bridge> <ryozuki> u got some nice memory
22:22 < bridge> <ryozuki> or google
22:22 < bridge> <ryozuki> xd
22:23 < bridge> <Jupstar ‚ú™> let's test gpt xd
22:23 < bridge> <Jupstar ‚ú™> gpt 3 too weak
22:23 < bridge> <Jupstar ‚ú™> sadly no gpt-4 xd
22:28 < bridge> <ryozuki> xd
22:41 < bridge> <blaiszephyr> /\_/\
22:41 < bridge> <blaiszephyr>       ( o.o )
22:41 < bridge> <blaiszephyr>        >^,^<
22:41 < bridge> <blaiszephyr> 
22:41 < bridge> <blaiszephyr> meow!
22:45 < bridge> <Jupstar ‚ú™> i'm getting worse in cpp #7697
22:45 < bridge> <Jupstar ‚ú™> 
22:45 < bridge> <Jupstar ‚ú™> @ryozuki ur fault üò¨
22:45 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/7697
22:45 < bridge> <Jupstar ‚ú™> too much rust
22:45 < bridge> <ryozuki> xDDD
22:46 < bridge> <Jupstar ‚ú™> it's funny how much stuff you can forget.
22:46 < bridge> <Jupstar ‚ú™> 
22:46 < bridge> <Jupstar ‚ú™> i dunno if i remember anything useful from university anymore xD
22:46 < bridge> <ryozuki> anyway
22:46 < bridge> <ryozuki> c++ requiring so much complexity
22:47 < bridge> <ryozuki> is a plus for rust
22:47 < bridge> <ryozuki> in rust u dont deal with virtual destructor shenanigans
22:47 < bridge> <Jupstar ‚ú™> yeah cpp is very complicated indeed
22:47 < bridge> <Jupstar ‚ú™> 
22:47 < bridge> <Jupstar ‚ú™> u only notice it if u havent used it for a bit
22:48 < bridge> <Jupstar ‚ú™> but i think it's still important to know that rust kinda still has vptr, just not stored into the object, but into the `dyn ...`
22:49 < bridge> <ryozuki> but dinamic dispatch is rarer in rust
22:49 < bridge> <Jupstar ‚ú™> but u kinda never have to think about it
22:49 < bridge> <blaiszephyr> can we have a dev channel that simply links every single message that mentions rust? üôÇ
22:49 < bridge> <ryozuki> and idk it feels much simpler
22:49 < bridge> <ryozuki> in rust this shenanigans are actually called
22:49 < bridge> <ryozuki> "object safety"
22:49 < bridge> <ryozuki> trait is object safe if it has the following qualities (defined in RFC 255): All supertraits must also be object safe. Sized must not be a supertrait. In other words, it must not require Self: Sized .
22:49 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1188237034406551572/image.png?ex=6599caf9&is=658755f9&hm=318f3bf99af5da68b5129d15589b55badee6e47ec7bea2a6924899552f53411c&
22:49 < bridge> <Jupstar ‚ú™> you want to have a dev channel that copies the exact same content as this channel? rust
22:49 < bridge> <ryozuki> https://doc.rust-lang.org/reference/items/traits.html#object-safety
22:50 < bridge> <blaiszephyr> fair enough
22:51 < bridge> <Jupstar ‚ú™> not only that. i'd say it even makes more sense like that.
22:51 < bridge> <Jupstar ‚ú™> 
22:51 < bridge> <Jupstar ‚ú™> u can have POD data structures and still implement traits on it
22:52 < bridge> <Jupstar ‚ú™> this is huge struggle with cpp xd
22:52 < bridge> <Jupstar ‚ú™> u can ofc create a POD and put is as member field into your inherited class
22:52 < bridge> <Jupstar ‚ú™> but not enforced = u'll forget it the other day
23:12 < bridge> <Ewan> yea the necessity for wrapper classes in cpp is a huge turnoff
23:12 < bridge> <Ewan> it has relatively limited metaprogramming capabilities
