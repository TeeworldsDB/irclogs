02:33 <@deen> eeeee: hm, no post on ddnet forum about js client?
02:42 < eeeee> oh yea i was going to post but then i forgot
02:42 <@deen> go ahead, many don't read TW forum i think
02:42 <@deen> and ddnet forum is more active anyway :P
02:42 < eeeee> have to register first -_-
02:46 < eeeee> lazily copypasted the tw forum post
02:49 < eeeee> deen: highcharts on the statistics page are getting ridiculous
02:49 <@deen> eeeee: right =/
02:49 <@deen> any suggestion?
02:51 <@deen> and i want your RLE encoding for map layers!
02:51 <@deen> does the server just keep 1 layer or was it multiple?
02:52 < eeeee> not sure about the server, i guess the layers are unpacked on first access so the server might not store them at all
02:52 <@deen> but still great to reduce memory usage on client
02:53 < eeeee> nobody is gonna care though
02:53 < eeeee> didnt see anyone complaining about the client eating up too much memory
02:53 <@deen> Looks like the server uses multiple layers, m_Layers in gamecontext
02:53 <@deen> There are people, but mostly not in Europe and North America
02:53 < eeeee> well it has two game layers, teleport, speedup and other layers
02:54 < eeeee> you can't really rle compress those because you need collision testing
02:54 <@deen> I had complaints from chile about the client not starting anymore after we added too many skins
02:54 <@deen> which was one of the reasons we have an optional skin database now instead of adding thousands of skins into client
02:54 < eeeee> yeah i have codez for dynamic skin loading
02:54 <@deen> that's cool too
02:55 < eeeee> didnt even merge it into js though because perf win was negligible
02:55 <@deen> I look forward to see how these work on desktop client
02:55 < eeeee> but thats probably because js client doesnt have a million skins
02:55 <@deen> well, many people have hundreds of skins, reduced memory would be great
02:56 < eeeee> yeah and actually my original plan was to load skins from http too
02:56 < eeeee> so that you can have all the skins in js client
02:56 <@deen> texture compression works, but then client needs a few seconds to start
02:56 <@deen> good idea, with the skin database
02:56 < eeeee> yeah i guess now that we have some http infra we can do that on desktop as well
02:57 <@deen> as long as you can disable it it's great
03:00 <@deen> binary search through rle compressed layer is too slow?
03:01 <@deen> I think it may even be a performance advantage actually
03:01 <@deen> less stupid map data filling caches
03:02 < eeeee> prolly not for collision
03:03 < eeeee> idk
03:04 < eeeee> the js client doesn't binsearch anything right now
03:04 < eeeee> it compresses each row separately and then has a row index
03:05 <@deen> ok, that's what i expected
03:05 < eeeee> on rendering it always finds the relevant rows and decompresses them fully
03:05 < eeeee> i mean, scans the whole row
03:05 <@deen> I'll just give it a try when we get to merging js client into ddnet
03:06 < eeeee> for rendering there is an obvious optimization of caching the last column offset for each row
03:06 < eeeee> because you're usually rendering something very close to previous position
03:07 < eeeee> that should perform better than uncompressed, not so sure about binsearch
03:11 < eeeee> if we completely detach from reality and say we were willing to make major changes to tw engine, i'd say we could first compile a list of all collision tests we want to do, then sort it and test everything in one pass over the encoded data
03:13 <@deen> and then rle encode the collision test data? :P
03:13 < eeeee> there's not gonna be that many tests
03:13 <@deen> you may end up with even more memory then?
03:13 <@deen> is there not?
03:14 <@deen> for each tile you'd have a separate test?
03:14 < eeeee> you'd want to know what tiles intersect with each player, hook, plasma ball, laz0r and shit
03:14 < eeeee> there isn't that many of those objects
03:22 < eeeee> imo this is a weak point of relatively low-level languages like C+
03:22 <@deen> what exactly is the weak point?
03:22 < eeeee> if tw was made in higher-level language it'd probably be much easier to refactor the code and make this change towards a more efficient algorithm
03:23 < eeeee> even though the language itself is "slower"
03:23 <@deen> right
12:17 < Nimda> HappyValenTees by Tsin just released on Ddmax at 2015-04-21 12:13
12:17 < Nimda> Grey 4 by Knight :3 just released on Ddmax at 2015-04-21 12:13
12:17 < Nimda> Grey 3 by Knight :3 just released on Ddmax at 2015-04-21 12:13
12:17 < Nimda> Grey 2 by Knight :3 just released on Ddmax at 2015-04-21 12:13
12:17 < Nimda> Grey 1 by Knight :3 just released on Ddmax at 2015-04-21 12:13
13:25 < laxadedi> deen: told you so :p
13:47 <@deen> ^^
13:47 <@deen> That Soreu... Just sent me a list of over 20 suggestions and bugs about ddnet
14:11 < ddnet-commits> [ddnet] def- pushed 2 new commits to DDRace64: http://git.io/vfqvb
14:11 < ddnet-commits> ddnet/DDRace64 c85865c def: Go back in envelopes with right mouse click
14:11 < ddnet-commits> ddnet/DDRace64 a1d62d2 def: Merge branch 'DDRace64' of github.com:def-/ddnet into DDRace64
14:19 < ddnet-commits> [ddnet] def- pushed 1 new commit to DDRace64: http://git.io/vfqTf
14:19 < ddnet-commits> ddnet/DDRace64 cb64bc6 def: Move "Add Sound" button down for 5:4 resolutions
14:19 <@deen> eeeee: too many complaints about tournament_mode off, I'm reenabling it =/
14:23 <@EastByte> as expected :D
14:42 < ddnet-commits> [ddnet] def- pushed 1 new commit to DDRace64: http://git.io/vfqYP
14:42 < ddnet-commits> ddnet/DDRace64 b5d7226 def: On switch layer fix delay number with FillSelection when creating new tiles instead of copying
14:53 < laxadedi> deen: autojoin as a player when joining a server instead of being in spec mode onJoin right >
14:53 < laxadedi> ?
14:53 <@deen> right
14:54 < laxadedi> Well, when you change something, people will always complain, that's the human nature ^^
14:54 <@deen> If anyone wants to fix some of the bugs: http://ddnet.tw/soreu-bugs.png
14:57 < laxadedi> Hopefully you changed that for a good reason, and people who complained gave you a good arguments to revert that change :p
16:06 < o_be_one> hi
16:07 < o_be_one> JS DDnet is awesome, good work !
19:00 < Spyker> deen, finally i tesed with kayumi!
20:36 < eeeee> that kinda sux, we should at least make js client autojoin somehow
20:42 <@deen> forced autojoin for websockets connections?
20:42 <@deen> i don't know
20:42 <@deen> or something in the client
20:44 <@heinrich5991> why is spec-by-default, anyway?
20:45 <@EastByte> I bet deen thought it was a great idea back then
20:46 <@deen> hmm
20:46 <@deen> now both sides complain
20:46 <@EastByte> haha
20:46 <@heinrich5991> you could do auto-join after 15s, like in counter strike
20:46 <@deen> I'll just change it every 12 hours
20:47 <@EastByte> ^
20:48 <@EastByte> deen: you shouldn't put the dummy connect fix into the next version, people might complain about the missing delay...
20:49 <@deen> EastByte: I'll make an option so you can set the seconds until it connects
20:49 <@EastByte> ha, yea :)
23:42 < laxa> deen: me and aaa think that having the ddnet js player on mainpage isn't really good
23:42 < laxa> makes the brother lag as hell
