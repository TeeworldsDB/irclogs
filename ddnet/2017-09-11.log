08:45 <+ddnet-discord> <deen> We had less accuracy on x86, destroying tournaments because the very weak gravity had no effect
09:23 <+eeeee> did someone fix the bouncing plasma balls accuracy yet?
09:25 <+eeeee> i used to run a server with the same map for months at a time, and the plasma balls were drifting at a rate of about half a tile per month or so
09:25 <@heinrich5991> accuracy or  missing team-awareness
09:25 <+eeeee> because they were using trigonometry for reflections
09:25 <+eeeee> nah, just float accuracy
09:26 <@heinrich5991> what are the plasma balls?
09:26 <+ddnet-discord> <Ryozuki> balls that move and freeze
09:26 <@heinrich5991> the laser things that shoot more laser things?
09:26 <+ddnet-discord> <Ryozuki> i guess
09:26 <+eeeee> wait no
09:26 <@heinrich5991> or the shotgun bullets that freeze?
09:26 <+eeeee> those were some kind of bullets 
09:26 <+eeeee> plasma balls don't bounce
09:26 <+ddnet-discord> <Ryozuki> :o
09:27 <@heinrich5991> so the shotgun bullets that freeze?
09:27 <+eeeee> yeah the shotgun bullets
09:27 <@heinrich5991> they only ever hit the wall orthogonally
09:27 <+eeeee> yeah but they were using sin/cos for reflections
09:27 <@heinrich5991> I wonder what sin(PI) is in float
09:28 <@heinrich5991> >>> np.sin(np.arange(4, dtype='float32') * np.pi)
09:28 <@heinrich5991> array([  0.00000000e+00,  -8.74227766e-08,   1.74845553e-07,
09:28 <@heinrich5991>         -2.38497613e-08], dtype=float32)
09:28 <@heinrich5991> argh
09:29 <@heinrich5991> why do you even use sin/cos for reflection?
09:29 <@heinrich5991> it's a simple subtraction
09:29 <@heinrich5991> for orthogonal walls
09:29 <+Ryozuki> -8.74228e-08
09:30 <@heinrich5991> >>> np.sin(np.arange(4, dtype='float32') * np.pi / 2)
09:30 <@heinrich5991> array([  0.00000000e+00,   1.00000000e+00,  -8.74227766e-08, -1.00000000e+00], dtype=float32)
09:30 <@heinrich5991> actually, I wanted this ^
09:30 <+Ryozuki> arange = arrange ?
09:31 <@heinrich5991> so angles close to 180Â° are the culprit
09:31 <@heinrich5991> ?
09:31 <@heinrich5991> arange = arange
09:31 <+Ryozuki> never heard that word
09:31 <@heinrich5991> numpy.arange, generates numpy Arrays similar to the RANGE function of python
09:31 <+Ryozuki> ah
09:33 <+eeeee> oh lol
09:34 <+eeeee> was trying to figure out if that shitcode was fixed by someone yet
09:34 <+eeeee> found this https://github.com/ddnet/ddnet/commit/56ad4f3c738503a7b8b0624e637afd58782793ca
09:34 <@heinrich5991> aaaahrg
09:34 <@heinrich5991> :P
09:35 <+eeeee> so, not really :D
09:35 <@heinrich5991> well yes, -8.7e-8 < 1e-6
09:36 <+eeeee> admittedly i didn't really bother to check that, my test plan was "run on my server for a couple months and see if it drifts"
09:39 <+eeeee> i guess https://github.com/ddnet/ddnet/blob/master/src/game/server/gamecontroller.cpp#L235 is the place for a real fix
12:23 <@deen> heinrich5991: how do i set my own CFLAGS/CXXFLAGS with the new cmake build?
12:23 <@deen> I thought it worked, but now I look at the compiler calls and my flags are not in there...
12:35 <@heinrich5991> do rm -r build if you wan to set CFLAGS/CXXFLAGS
12:35 <@heinrich5991> and regenerate the build directory
12:48 <@deen> huh?
12:48 <@deen> so calling cmake again does not reset everything?
20:29 <@heinrich5991> deen: although the server select()s while empty, but it still advances the game state
20:29 <@heinrich5991> maybe it could stop doing that, to use less CPU
23:22 < keep> Hello, is there some ddnet devs ?
23:22 <@heinrich5991> ask your question
23:25 <+keep> well, i found by myself xD
23:25 <+keep> it was stupid question
