00:04 < bridge> <ms.warroir> iH lla.. woh era uoy gniod sved؟
01:01 < bridge> <avolicious> good, you?
01:15 < bridge> <_voxeldoesart> making the hurt sounds right now
01:15 < bridge> <_voxeldoesart> should they have the impact or is it better without it?
01:15 < bridge> <_voxeldoesart> https://cdn.discordapp.com/attachments/293493549758939136/1314022243877257316/ddnet_robot_hurt_sound_comparison.mp3?ex=67524214&is=6750f094&hm=604917c2bbd27d70780a19be308914fa7924cf2d4b0dc911ee5167ac3707b778&
01:15 < bridge> <_voxeldoesart> (ngl i wish there was a dd-pg server)
02:10 < bridge> <louis> cant u host it yourself
02:19 < bridge> <_voxeldoesart> i hate managing and moderating discord servers
02:19 < bridge> <louis> oh u mean discord server
02:20 < bridge> <_voxeldoesart> yea
03:01 < bridge> <chillerdragon> That was not your console change. My underscores were cut off before already.
03:02 < bridge> <chillerdragon> Yea finding authors is hard
03:03 < bridge> <chillerdragon> Nice to hear it helped
03:05 < bridge> <chillerdragon> Yea it felt wrong to abandon the strongest pc I ever owned for a year instantly after buying it. I’m back at it end of December
03:05 < bridge> <chillerdragon> Yes next time you can come and pick it up at my house
03:43 < bridge> <woidless> Pls
05:50 < bridge> <_voxeldoesart> this is fucking awesome
05:50 < bridge> <_voxeldoesart> i can see myself making a ton of shit for this
05:50 < bridge> <_voxeldoesart> https://cdn.discordapp.com/attachments/293493549758939136/1314091591874510858/2024-12-04_23-48-32.mp4?ex=675282aa&is=6751312a&hm=551ad20cd95a40d819605271f40fc66481733ecc63a7b0d020d6eb4228e13b15&
06:08 < bridge> <tsfreddie> hacker man
07:46 < bridge> <EGYT> Dammit, I am busy
07:48 < bridge> <EGYT> Ain't got any time to do a side project, let alone DDNet translation update
07:49 < bridge> <EGYT> Ain't got any time to do my side project, let alone update the translation
08:28 < bridge> <meloƞ> It's okay egyt no rush :owoWeary:
08:53 < bridge> <inv41idu53rn4m3> hory shiet
08:54 < bridge> <inv41idu53rn4m3> took me almost 3 hours for *part one* of today's AoC
08:54 < bridge> <inv41idu53rn4m3> Why am I torturing myself so?
08:54 < bridge> <inv41idu53rn4m3> I guess I know a number of new tricks now
08:54 < bridge> <totar> it's only day 5..
08:55 < bridge> <totar> are they that hard already?
08:55 < bridge> <teero777> Haven't followed I wanna do other stuff instead
08:55 < bridge> <totar> Idk I don't really want to spend my time on them but I find it interesting
08:56 < bridge> <teero777> same
08:57 < bridge> <inv41idu53rn4m3> no I'm just doing it with wacky restrictions
08:57 < bridge> <totar> oh ok
08:57 < bridge> <teero777> he's doing only mov
08:57 < bridge> <totar> nah
08:57 < bridge> <teero777> xd
08:58 < bridge> <totar> It's fun to click the github profiles of the top ranked people
08:58 < bridge> <totar> that meme is actually surprisngly accurate lol
08:59 < bridge> <teero777> How do you get ranked?
08:59 < bridge> <teero777> Can you get ranked based on performance?
08:59 < bridge> <totar> based on how fast you submit after the question becomes public
08:59 < bridge> <teero777> /execution time?
08:59 < bridge> <tsfreddie> <a:amogus:876956004674338848>
08:59 < bridge> <totar> you speedrun the solution
08:59 < bridge> <teero777> meh then it's not that cool
08:59 < bridge> <totar> otherwise you can cheat
09:00 < bridge> <totar> this is the only way to avoid cheating
09:00 < bridge> <teero777> wdym?
09:00 < bridge> <totar> all other metrics can be cheated
09:00 < bridge> <inv41idu53rn4m3> Like, here's my code for today
09:00 < bridge> <inv41idu53rn4m3> You probably won't get much from it at a glance so it's not a big spoiler
09:00 < bridge> <inv41idu53rn4m3> https://cdn.discordapp.com/attachments/293493549758939136/1314139243127509033/SPOILER_5.hs?ex=6752af0b&is=67515d8b&hm=57eedb87105db9987986a554f3eac84a7edd3ca70aff84f7183931b5e2034a73&
09:00 < bridge> <teero777> execution time?
09:00 < bridge> <inv41idu53rn4m3> absolute gobbledygook
09:00 < bridge> <totar> you could copy someone else
09:00 < bridge> <inv41idu53rn4m3> I literally went `fmap uncurry`
09:00 < bridge> <teero777> Can't you also copy the first solution that gets submitted?
09:00 < bridge> <totar> they are private
09:00 < bridge> <teero777> I mean you get second place then
09:01 < bridge> <teero777> So how are you gonna copy them ?
09:01 < bridge> <inv41idu53rn4m3> The first place would have to share the code with you
09:01 < bridge> <totar> once the fastest solution is known everyone just copies each other
09:01 < bridge> <teero777> How
09:01 < bridge> <teero777> How do they copy
09:01 < bridge> <totar> wdym how
09:01 < bridge> <totar> you join a discord with your 40 developer friends and micro optimize you C solution until it's fast and all of you get 1st place
09:01 < bridge> <totar> you join a discord with your 40 developer friends and micro optimize your C solution until it's fast and all of you get 1st place
09:02 < bridge> <teero777> yea dur
09:02 < bridge> <teero777> yea sure
09:02 < bridge> <totar> or someone posts it online
09:02 < bridge> <teero777> That would deserve r1
09:02 < bridge> <totar> but everyone has the same speed
09:02 < bridge> <teero777> hmm okay....
09:02 < bridge> <teero777> Annoying
09:02 < bridge> <inv41idu53rn4m3> Well, there's fastest and there's *fastest*
09:02 < bridge> <inv41idu53rn4m3> the real fastest times would be some ring of wizards in their tower, hand rolling assembly based on their best guess of the target system's processor
09:03 < bridge> <teero777> Would be fun
09:03 < bridge> <totar> anyway people started cheating this year already with AI, someone solved the first day in 9 seconds
09:03 < bridge> <inv41idu53rn4m3> and of course to rank execution time you'd have to execute everyone's solutions, which would be *expensive*
09:03 < bridge> <teero777> XD
09:03 < bridge> <totar> the later questions are probably too hard
09:03 < bridge> <totar> it might already be too hard
09:03 < bridge> <totar> for full chatgpt automation
09:03 < bridge> <inv41idu53rn4m3> I don't think it's too hard for AI as it is
09:03 < bridge> <totar> without help tho?
09:03 < bridge> <teero777> Don't you have to do that anyway to find out if the solution is correct? x
09:03 < bridge> <inv41idu53rn4m3> maybe for full 100% automation but def not too hard for partial automation
09:04 < bridge> <totar> to do it in 9 seconds you can't even read the prompt
09:04 < bridge> <totar> everything has to be automated
09:04 < bridge> <teero777> The first one was only few loc
09:04 < bridge> <inv41idu53rn4m3> You only send the solution calculated by your program
09:04 < bridge> <teero777> The complete question was at the bottom
09:04 < bridge> <totar> ?
09:04 < bridge> <teero777> Reading it takes like 5 seconds. Doing the task maybe 30-60s
09:05 < bridge> <teero777> I only looked at day 1 tho
09:05 < bridge> <totar> ai can read in 0 seconds and do the task in 4 seconds, then you spam the submit button for 5 seconds xd
09:05 < bridge> <teero777> xddd
09:05 < bridge> <teero777> Well I guess so
09:05 < bridge> <teero777> It has to be automated as a browser plugin I guess?
09:05 < bridge> <totar> anyway I don't really care about how they measure who is winning
09:05 < bridge> <inv41idu53rn4m3> and I guess the crazy people also have automation for retrieving the input and submitting the output
09:06 < bridge> <totar> just copy the html
09:06 < bridge> <totar> well
09:06 < bridge> <totar> yeah I guess it's hard
09:06 < bridge> <totar> 9 seconds is pretty impressive
09:07 < bridge> <inv41idu53rn4m3> the input is just plain text retrieved from a separate endpoint, so that's easy, it's just the auth tokens that you need to deal with
09:11 < bridge> <totar> the top leaderboard positions are always one of these people:
09:11 < bridge> <totar> - I have 3 degrees at prestigious university
09:11 < bridge> <totar> - Software engineer at FAANG company
09:11 < bridge> <totar> - My passion is doing AoC, and sometimes other programming
09:11 < bridge> <totar> - open source person with a ton of random projects
09:11 < bridge> <totar> - empty profile
09:12 < bridge> <totar> also ai developer
09:14 < bridge> <cyberfrighter> ai developer
09:14 < bridge> <cyberfrighter> pick up a keyboard bro...
09:16 < bridge> <totar> I mean people who do machine learning code
09:16 < bridge> <totar> like actually making the ai
09:16 < bridge> <cyberfrighter> ohh
09:16 < bridge> <totar> "ai researcher"
09:16 < bridge> <cyberfrighter> i thought some nub just using ai for everything
09:16 < bridge> <totar> idk
09:16 < bridge> <totar> those probably also exist
09:16 < bridge> <cyberfrighter> yea
09:16 < bridge> <cyberfrighter> cringe ngl
09:25 < bridge> <teero777> I was thinking about basically the same thing as an llm but instead of predicting the next word it will predict the next input of a player
09:25 < bridge> <teero777> based on demos I guess
09:25 < bridge> <teero777> I think it might result in a relatively okayish AI
09:25 < bridge> <totar> yeah but the inputs don't allow you to see the map
09:26 < bridge> <teero777> Additional info works
09:26 < bridge> <totar> hmm
09:26 < bridge> <totar> idk of a transformer is the best for that
09:26 < bridge> <totar> idk if a transformer is the best for that
09:27 < bridge> <teero777> It might just work but I am not quite sure
09:27 < bridge> <totar> teeworlds is not really a language, knowing the previous inputs doesn't affect what your future inputs will be. Only your current position, velocity and other gamestate matters.
09:28 < bridge> <totar> it's not like english where taking 2 paths to reach the word "Hello" is completely different. If you reach the same gamestate with 2 ways in teeworlds they are equivilent.
09:30 < bridge> <talloran20> Hi!  I have a request to add a check mark on the finished maps in KoG, when I suggested it in the channel of KoG itself, I was told that this was a client-side change, and they are not doing this, I would really like to see this convenient feature in the game, thx
09:30 < bridge> <talloran20> https://cdn.discordapp.com/attachments/293493549758939136/1314146817767641109/image.png?ex=6752b619&is=67516499&hm=eaed2ebd0b035b4796d13036547cad961507f30755f83f7086dd0dd676c3b8d9&
09:31 < bridge> <talloran20> I hope now I've written where I need to
09:32 < bridge> <totar> KoG doesn't have any api available to retrieve your finishes so it's not possible until they add one
09:32 < bridge> <teero777> currently that status is pulled from ddnet.tw afaik. Kog would need to set up an API point so that the client can get the finishes from it. Of course adding custom endpoints in the client would need to come first
09:32 < bridge> <teero777> currently that status is pulled from ddnet.org afaik. Kog would need to set up an API point so that the client can get the finishes from it. Of course adding custom endpoints in the client would need to come first
09:33 < bridge> <talloran20> Thanks for the information, I'll pass it on
09:38 < bridge> <inv41idu53rn4m3> oh I am SO glad the ordering info in the input is complete
09:38 < bridge> <inv41idu53rn4m3> so you can just pass it to `sortBy`
09:39 < bridge> <teero777> @inv41idu53rn4m3 I wanna check out your gh profile
09:39 < bridge> <teero777> Who are u
09:39 < bridge> <inv41idu53rn4m3> my gh is empty and depressing
09:40 < bridge> <inv41idu53rn4m3> I need portfolio-worthy stuff
09:40 < bridge> <inv41idu53rn4m3> :(
09:41 < bridge> <totar> I just put all my garbage there
09:41 < bridge> <inv41idu53rn4m3> This is a travesty
09:41 < bridge> <inv41idu53rn4m3> `main` is a single line 279 characters long
09:41 < bridge> <inv41idu53rn4m3> https://cdn.discordapp.com/attachments/293493549758939136/1314149647404765204/SPOILER_5x.hs?ex=6752b8bb&is=6751673b&hm=ff6874199d0cd745ca93dbc95ae48cf58d9c061fde5ae0ea2bea44cc07d3a21c&
09:41 < bridge> <totar> I like how you put the spoiler, incase someone might learn the solution from this code
09:42 < bridge> <inv41idu53rn4m3> Yeah idk why I'm doing that atp
09:42 < bridge> <totar> lol
09:42 < bridge> <totar> it's funny
09:42 < bridge> <inv41idu53rn4m3> I'm in actual pain and my brain is constantly telling me that there MUST be a cleaner way to do this
09:42 < bridge> <teero777> Just in case someone accidentally downloads it and spoils the Haskell code lmao
09:42 < bridge> <teero777> I bet there is not a single person currently doing ddnet dev that does Haskell actively
09:42 < bridge> <totar> I think it was take me >72 hours to understand this
09:43 < bridge> <inv41idu53rn4m3> but then again while Haskell is made by functional programming nuts it's not made by people quite *that* nuts
09:43 < bridge> <totar> I think it would  take me >72 hours to understand this
09:43 < bridge> <totar> I think it would take me >72 hours to understand this
09:43 < bridge> <inv41idu53rn4m3> holy shit it's almost 4 hours since I started
09:44 < bridge> <inv41idu53rn4m3> Figuring out `compose2` and `compose3` helped tremendously
09:45 < bridge> <inv41idu53rn4m3> I unironically typed out the words `fmap curry $ traverse $ fmap uncurry $ uncurry`
09:46 < bridge> <inv41idu53rn4m3> This would be SO MUCH EASIER to write in a stack based language
09:48 < bridge> <avolicious> Correction: https://discord.com/channels/252358080522747904/293493549758939136/1292538896932143235
09:49 < bridge> <totar> ok that seems like a bad solution
09:50 < bridge> <totar> we should just have a standard schema for the finishes and let the endpoint be defined with the community info
09:50 < bridge> <avolicious> DDNet doesnt want to expose the clients to untrusted servers
09:50 < bridge> <teero777> It would be only for communities
09:50 < bridge> <avolicious> https://discord.com/channels/252358080522747904/293493549758939136/1270680599694147585
09:50 < bridge> <avolicious> But we are untrusted
09:50 < bridge> <avolicious> The communities are not part of DDNet
09:51 < bridge> <totar> then let the ddnet server act as a proxy for the kog endpoint, it will just pass the json through the ddnet. That way no IPs are leaked
09:52 < bridge> <avolicious> Something like that was also planned
09:52 < bridge> <totar> seems much better than PUT solution
09:52 < bridge> <totar> PUT solution is unworkable
09:53 < bridge> <avolicious> It will generate some traffic, yes
09:54 < bridge> <totar> idk the main issue is data consistency, if anything needs to change for some reason it gets hard
09:54 < bridge> <avolicious> What do you mean?
09:55 < bridge> <totar> how can kog track the state of the data that ddnet keeps on the finishes?
09:55 < bridge> <avolicious> We cant
09:55 < bridge> <totar> right
09:55 < bridge> <avolicious> They store a tuple with community, name, finish
09:56 < bridge> <avolicious> There were some endpoints to either bulk delete or delete everything within
09:56 < bridge> <avolicious> Something like that
09:56 < bridge> <totar> I think you should just make the endpoint and convince them to add support on their backend later
09:57 < bridge> <inv41idu53rn4m3> You know, now that I think of it, a programming language without variables wouldn't be *that* bad 
09:57 < bridge> <inv41idu53rn4m3> Like, if you actually intended for the programmer to write in this style and made the tools for it I could see it being reasonably productive
09:57 < bridge> <avolicious> ??? But how to store temporary data?
09:58 < bridge> <inv41idu53rn4m3> Check the AoC solutions I've posted in this channel, none of them contain any named variables
09:58 < bridge> <totar> but variables are used internally by the language
09:59 < bridge> <totar> you cannot code without registers
09:59 < bridge> <avolicious> True that, but variables help you to maintain your references 😄
09:59 < bridge> <inv41idu53rn4m3> yes yes, I just mean that the language itself would enforce a point-free style
10:00 < bridge> <avolicious> We have an API endpoint for that already
10:00 < bridge> <totar> is it the same as the ddnet one or some custom format?
10:01 < bridge> <totar> I don't expect them to care enough to reparse your data
10:01 < bridge> <avolicious> Its just an array of maps you've finished 😄
10:01 < bridge> <avolicious> So you could add it to the info endpoint maps
10:01 < bridge> <avolicious> https://info.ddnet.org/info?name=Avolicious
10:02 < bridge> <inv41idu53rn4m3> You see, I like composing functions very much
10:02 < bridge> <totar> yeah that seems reasonable
10:02 < bridge> <inv41idu53rn4m3> Thanks!
10:02 < bridge> <inv41idu53rn4m3> :3
10:09 < bridge> <inv41idu53rn4m3> I wonder how much of this I'll have to do before I get to spend more time solving the problem than I do arranging my unnamed variables
10:10 < bridge> <inv41idu53rn4m3> so much effort goes simply into keeping track of when I want to pass the function itself instead of the output of that function
10:12 < bridge> <inv41idu53rn4m3> `flip13 = flip . (fmap flip) . flip` exists simply to swap the 1st and 3rd arguments of a function
10:12 < bridge> <Jupstar ✪> i like, i like
10:12 < bridge> <Jupstar ✪> 
10:12 < bridge> <Jupstar ✪> how the fk did you kill your dummy like that tho xD
10:12 < bridge> <Jupstar ✪> I wouldn't know how to do that xDD
10:17 < bridge> <avolicious> The only problem I see would be map name conflicts 😄
10:17 < bridge> <avolicious> There are a few maps hosted on DDNet and KoG, they are the same
10:17 < bridge> <avolicious> so if they finish it on ddnet, they have the finish on kog too
10:17 < bridge> <totar> it should be a separate array right?
10:17 < bridge> <avolicious> Right now it isnt
10:17 < bridge> <avolicious> And the client is only aware of one array
10:18 < bridge> <totar> hmm
11:17 < bridge> <woidless> pls
11:32 < bridge> <inv41idu53rn4m3> just fyi asking for something with "pls" doesn't sound very respectful or like you're taking your request seriously
11:33 < bridge> <meloƞ> Chiller is usually at beach around that time
11:46 < bridge> <teero777> go prompt gpt or smth
11:57 < bridge> <chillerdragon> Oof I am too predictable
12:00 < bridge> <ChillerDragon> echo say hi >> server.fifo
12:00 < bridge> <ChillerDragon> @woidless here u go
12:06 < bridge> <woidless> But I will specify the time when this will happen, I also want automation
12:06 < bridge> <woidless> It gives out incorrectly
12:07 < bridge> <tsfreddie> chillerdragon: how do i get your lifestyle
12:07 < bridge> <inv41idu53rn4m3> smh can't even proompt properly
12:07 < bridge> <teero777> Then learn to code or prompt it more specifically
12:08 < bridge> <inv41idu53rn4m3> You *can* talk to it in Russian too if that helps
12:08 < bridge> <woidless> It will take me at least half a year to learn C++
12:08 < bridge> <teero777> This is a bash script what you want to do
12:08 < bridge> <teero777> Or a python script
12:08 < bridge> <woidless> I'm doing it anyway.
12:08 < bridge> <inv41idu53rn4m3> ???
12:08 < bridge> <woidless> Python
12:08 < bridge> <woidless> Sorry
12:09 < bridge> <teero777> you can learn basic python in a day
12:10 < bridge> <teero777> You don't need a degree for writing a simple script
12:10 < bridge> <woidless> ```py
12:10 < bridge> <woidless> #!/bin/env python3
12:10 < bridge> <woidless> 
12:10 < bridge> <woidless> from random import random
12:10 < bridge> <woidless> from time import sleep
12:10 < bridge> <woidless> 
12:10 < bridge> <woidless> MSGCOUNTDOWN = "%ss untill randomize"
12:10 < bridge> <woidless> MSGRANDOMIZE = "tunes randomized"
12:10 < bridge> <woidless> DELTA = 5 # seconds between each random
12:10 < bridge> <woidless> FIFOPATH = "./fifo.fifo"
12:10 < bridge> <woidless> TUNES = {
12:10 < bridge> <woidless>     ("ground_control_speed", 4.00, 14.00), # Maximum running speed on the ground. (Higher values make the character move faster).  
12:10 < bridge> <woidless>     ("ground_control_accel", 0.50, 4.00), # Acceleration on the ground. (Higher values make the character speed up faster).  
12:10 < bridge> <woidless>     ("ground_friction", 0.30, 1.00), # Ground friction. (Higher values make the character stop faster).  
12:10 < bridge> <woidless>     ("ground_jump_impulse", 8.00, 18.00), # Jump force from the ground. (Higher values make the character jump higher).  
12:10 < bridge> <woidless>     ("air_jump_impulse", 6.00, 16.00), # Jump force in the air. (Applies to double jumps; higher values allow higher jumps).  
12:10 < bridge> <woidless>     ("air_control_speed", 2.00, 9.00), # Maximum speed when moving in the air. (Higher values allow faster air movement).  
12:11 < bridge> <woidless>     ("air_control_accel", 0.50, 3.00), # Acceleration in the air. (Higher values allow quicker changes in air movement).  
12:11 < bridge> <woidless>     ("air_friction", 0.70, 1.10), # Air friction. (Higher values reduce the character's air speed more quickly).  
12:11 < bridge> <woidless>     ("gravity", 0.30, 0.80), # Gravity strength. (Lower values make the character float longer; higher values make them fall faster). 
12:11 < bridge> <woidless> }
12:11 < bridge> <woidless> 
12:11 < bridge> <woidless> def write(s):
12:11 < bridge> <woidless>     with open(FIFOPATH, "w") as fifo:
12:11 < bridge> <woidless>         fifo.write(s)
12:11 < bridge> <woidless>     print(s)
12:11 < bridge> <woidless> 
12:11 < bridge> <woidless> sleep(1)
12:11 < bridge> <woidless> 
12:11 < bridge> <woidless> while True:
12:11 < bridge> <woidless>     out = "broadcast %s\n" % MSGRANDOMIZE
12:11 < bridge> <teero777> No. I won't.
12:12 < bridge> <meloƞ> Yes
12:12 < bridge> <woidless> Okay
12:12 < bridge> <teero777> If you don't learn to do it yourself you are going to be dependent on other people for eternity
12:13 < bridge> <woidless> Now I only need this script, and then I think I can implement what I want through the neural network
12:15 < bridge> <meloƞ> ..neural network?
12:15 < bridge> <meloƞ> 
12:15 < bridge> <meloƞ> You're currently struggling writing a while loop / using the time library in the time of AI
12:16 < bridge> <meloƞ> 
12:16 < bridge> <meloƞ> Why are you overcomplicating this stuff so much while struggling with the basics.
12:16 < bridge> <meloƞ> 
12:16 < bridge> <meloƞ> ```python
12:16 < bridge> <meloƞ> while True:
12:16 < bridge> <meloƞ> 
12:16 < bridge> <meloƞ>   Function template 1
12:16 < bridge> <meloƞ>   Function template 2
12:16 < bridge> <meloƞ>   Function template 3
12:16 < bridge> <meloƞ>   sleep(time)
12:16 < bridge> <meloƞ> ```
12:16 < bridge> <meloƞ> ..neural network?
12:16 < bridge> <meloƞ> 
12:16 < bridge> <meloƞ> You're currently struggling writing a while loop / using the time library in the time of AI
12:16 < bridge> <meloƞ> 
12:16 < bridge> <meloƞ> Why are you overcomplicating this stuff so much
12:16 < bridge> <meloƞ> 
12:16 < bridge> <meloƞ> ```python
12:16 < bridge> <meloƞ> while True:
12:16 < bridge> <meloƞ> 
12:16 < bridge> <meloƞ>   Function template 1
12:16 < bridge> <meloƞ>   Function template 2
12:16 < bridge> <meloƞ>   Function template 3
12:16 < bridge> <meloƞ>   sleep(time)
12:16 < bridge> <meloƞ> ```
12:17 < bridge> <woidless> ```#!/bin/env python3
12:17 < bridge> <woidless> 
12:17 < bridge> <woidless> from time import sleep
12:17 < bridge> <woidless> 
12:17 < bridge> <woidless> MSGRANDOMIZE = "Подпишись на наш Telegram @goodservers! На 500 подписчиков будет крупный розыгрыш TAS. Также у нас дешевый TAS и слоунет!"
12:17 < bridge> <woidless> DELTA = 3600  # интервал между сообщениями в секундах
12:17 < bridge> <woidless> FIFOPATH = "./fifo.fifo"
12:17 < bridge> <woidless> 
12:17 < bridge> <woidless> def write(s):
12:17 < bridge> <woidless>     with open(FIFOPATH, "w") as fifo:
12:17 < bridge> <woidless>         fifo.write(s)
12:17 < bridge> <woidless>     print(s)
12:17 < bridge> <woidless> 
12:17 < bridge> <woidless> sleep(1)
12:17 < bridge> <woidless> 
12:17 < bridge> <woidless> while True:
12:17 < bridge> <woidless>     write(f"broadcast {MSGRANDOMIZE}")
12:17 < bridge> <woidless>     sleep(DELTA) ```
12:17 < bridge> <woidless> Work?
12:18 < bridge> <woidless> ```#!/bin/env python3
12:18 < bridge> <woidless> 
12:18 < bridge> <woidless> from time import sleep
12:18 < bridge> <woidless> 
12:18 < bridge> <woidless> MSGRANDOMIZE = "Подпишись на наш Telegram @goodservers! На 500 подписчиков будет крупный розыгрыш на слоунет. Также у нас дешевыйслоунет и слоунет!"
12:18 < bridge> <woidless> DELTA = 3600  # интервал между сообщениями в секундах
12:18 < bridge> <woidless> FIFOPATH = "./fifo.fifo"
12:18 < bridge> <woidless> 
12:18 < bridge> <woidless> def write(s):
12:18 < bridge> <woidless>     with open(FIFOPATH, "w") as fifo:
12:18 < bridge> <woidless>         fifo.write(s)
12:18 < bridge> <woidless>     print(s)
12:18 < bridge> <woidless> 
12:18 < bridge> <woidless> sleep(1)
12:18 < bridge> <woidless> 
12:18 < bridge> <woidless> while True:
12:18 < bridge> <woidless>     write(f"broadcast {MSGRANDOMIZE}")
12:18 < bridge> <woidless>     sleep(DELTA) ```
12:18 < bridge> <woidless> ```#!/bin/env python3
12:18 < bridge> <woidless> 
12:18 < bridge> <woidless> from time import sleep
12:18 < bridge> <woidless> 
12:18 < bridge> <woidless> MSGRANDOMIZE = "Подпишись на наш Telegram @serv! На 500 подписчиков будет крупный розыгрыш на слоунет. Также у нас дешевыйслоунет и слоунет!"
12:18 < bridge> <woidless> DELTA = 3600  # интервал между сообщениями в секундах
12:18 < bridge> <woidless> FIFOPATH = "./fifo.fifo"
12:18 < bridge> <woidless> 
12:18 < bridge> <woidless> def write(s):
12:18 < bridge> <woidless>     with open(FIFOPATH, "w") as fifo:
12:18 < bridge> <woidless>         fifo.write(s)
12:18 < bridge> <woidless>     print(s)
12:18 < bridge> <woidless> 
12:19 < bridge> <woidless> sleep(1)
12:19 < bridge> <woidless> 
12:19 < bridge> <woidless> while True:
12:19 < bridge> <woidless>     write(f"broadcast {MSGRANDOMIZE}")
12:19 < bridge> <woidless>     sleep(DELTA) ```
12:19 < bridge> <meloƞ> How am I supposed to know the script YOU want to use works, it looks okay ish
12:19 < bridge> <inv41idu53rn4m3> That's for you to figure out!
12:19 < bridge> <inv41idu53rn4m3> If I want to know whether a program I wrote works I don't go ask someone else, I just run it and see!
12:19 < bridge> <woidless> Okay, just tell me what to register on the server
12:19 < bridge> <woidless> sv_input_fifo?
12:21 < bridge> <milkeeycat> oh no, I have transparent cursor and top left icons
12:21 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1314189990988746752/image.png?ex=6752de4e&is=67518cce&hm=34edbeee6e009a530c9735673d93bf930ad4b59028ae77eb782ecfb3ffe16337&
12:21 < bridge> <meloƞ> Wait Evelyn you're in windows or Linux ?
12:22 < bridge> <woidless> Linux Ubuntu
12:22 < bridge> <woidless> I use host
12:23 < bridge> <meloƞ> ah good, create a fifo file and specify it with sv_input_fifo
12:23 < bridge> <meloƞ> You then use that fifo file in here as well, same file same path
12:24 < bridge> <meloƞ> Fifo is basically client and server communicating with each other, one sends to fifo, the other reads
12:24 < bridge> <meloƞ> Fifo is basically client and server communicating with each other either with a file (.fifo) or a named pipe on windows, one sends to fifo, the other reads
12:25 < bridge> <woidless> ?
12:26 < bridge> <woidless> What to enter into the RCON
12:26 < bridge> <meloƞ> you said it yourself already
12:27 < bridge> <woidless> I registered sv_input_fifo, ran the script on the host in the build directory of the server , but the script just doesn't give out anything , there is no error and no action
12:29 < bridge> <Jupstar ✪> why does it always only happen to u xd
12:30 < ws-client> <ChillerDragon> @tsfreddie my lifestyle is being broke, working little and spending little. Being able to allocate on hour of free time daily to go to the beach should fit in every healthy lifestyle (at least in europe :p)
12:30 < bridge> <meloƞ> Ah ok mf, come back to Germany and say that again :peperage:
12:31 < bridge> <woidless> What to do
12:31 < bridge> <inv41idu53rn4m3> It should at least be printing something to the shell where you ran it
12:32 < bridge> <inv41idu53rn4m3> If the issue is that nothing seems to be showing up on the server then you probably haven't made the fifo file right
12:32 < bridge> <woidless> No action
12:32 < bridge> <milkeeycat> Can I do something to narrow the code where the bug can be?
12:32 < bridge> <Jupstar ✪> you mean that beach where the sand is concrete of the skycrapers?
12:33 < bridge> <inv41idu53rn4m3> I assume you have to create the fifo file by hand then, `mknod <filename> p`
12:33 < bridge> <Jupstar ✪> if you can reproduce it, start renderdoc and take a snapshot
12:33 < bridge> <Jupstar ✪> then you can see if it's really part of the rendercall
12:33 < bridge> <woidless> Well
12:33 < bridge> <woidless> fifo.I created the fifo using mkfifo fifo.fifo
12:34 < bridge> <milkeeycat> I tried joining different servers, changing different settings and nothing changed xd
12:34 < bridge> <inv41idu53rn4m3> huh, didn't even know `mkfifo` existed
12:34 < bridge> <Jupstar ✪> yeah but still renderdoc will tell us the truth
12:34 < bridge> <Jupstar ✪> it's a doc after all
12:35 < bridge> <woidless> python3: can't open file '/root/DDNetPP/build/broadcast': [Errno 2] No such file or directory
12:35 < bridge> <woidless> root@GoodServers:~/DDNetPP/build# python3 broadcast.py
12:35 < bridge> <woidless> Traceback (most recent call last):
12:35 < bridge> <woidless>   File "/root/DDNetPP/build/broadcast.py", line 17, in <module>
12:35 < bridge> <woidless>     write(f"broadcast {MSGRANDOMIZE}")
12:35 < bridge> <woidless>   File "/root/DDNetPP/build/broadcast.py", line 10, in write
12:35 < bridge> <woidless>     with open(FIFOPATH, "w") as fifo:
12:35 < bridge> <woidless> KeyboardInterrupt
12:35 < bridge> <Jupstar ✪> doctor render
12:35 < ws-client> <ChillerDragon> well yea the beach part is depending on being close to a beach fair. But dude bali is so cheap its crazy.
12:35 < bridge> <Jupstar ✪> so cheap that you could invite us
12:35 < bridge> <Jupstar ✪> for a year
12:36 < ws-client> <ChillerDragon> uhm ._.
12:36 < ws-client> <ChillerDragon> you can crash my place for sure 
12:36 < bridge> <milkeeycat> where to click :justatest:
12:37 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1314193801560195112/image.png?ex=6752e1da&is=6751905a&hm=af0a451c93be3bc867de85983ea9604720976f1e11fc7a4f4b28bc9f2168d5fd&
12:37 < bridge> <Jupstar ✪> select ddnet in exec path
12:37 < ws-client> <ChillerDragon> jupstar imagine being room mates
12:37 < bridge> <inv41idu53rn4m3> This seems like FIFOPATH is set to "broadcast"?
12:37 < bridge> <Jupstar ✪> then fire that mf up
12:37 < bridge> <Jupstar ✪> and then press f12 when u see the cursed cursor
12:37 < bridge> <Jupstar ✪> and then u can fancy stuff
12:37 < bridge> <woidless> Ye
12:38 < bridge> <Jupstar ✪> we'd discuss the whole day how awesome 0.7 is
12:38 < bridge> <Jupstar ✪> i can't imagine better
12:38 < bridge> <milkeeycat> sadly I can't reproduce it, it just happens "sometimes" :\
12:38 < ws-client> <ChillerDragon> sounds good
12:38 < bridge> <Jupstar ✪> tja
12:38 < bridge> <Jupstar ✪> then you play with renderdoc from now on
12:39 < ws-client> <ChillerDragon> im sure you are good at cooking healthy stuff jupstar
12:39 < bridge> <milkeeycat> yup
12:39 < bridge> <Jupstar ✪> chiller: i am ok, but defs not good
12:39 < bridge> <Jupstar ✪> i eat like 500-600g vegs every day, but often frozen one
12:39 < bridge> <Jupstar ✪> bcs i am too lazy to cut it myself xd
12:40 < ws-client> <ChillerDragon> nice
12:40 < bridge> <inv41idu53rn4m3> How do you even get "No such file or directory" when opening a file in write mode? It should just create a file if one doesn't exist!
12:40 < ws-client> <ChillerDragon> unless it is in a folder that does not exist
12:41 < bridge> <woidless> I just didn't enter the file permission then
12:41 < ws-client> <ChillerDragon> he is writing to the file "broadcast .." should probably be fifo.write not just write
12:41 < bridge> <woidless> broadcast≠broadcast.py
12:41 < bridge> <inv41idu53rn4m3> Oh, are you running the script as a user that doesn't have access to `/root`? I mean that would make sense...
12:42 < ws-client> <ChillerDragon> he runs everything as root
12:42 < ws-client> <ChillerDragon> change line 17 from `` write(f"broadcast {MSGRANDOMIZE}")`` to ``fifo.write(f"broadcast {MSGRANDOMIZE}")``
12:42 < bridge> <woidless> окей
12:42 < bridge> <inv41idu53rn4m3> `write` is a function defined in the script, not a built-in
12:42 < ws-client> <ChillerDragon> a
12:43 < ws-client> <ChillerDragon> ok yea never mind then i did not read the full code
12:43 < bridge> <inv41idu53rn4m3> I am being way too helpful right now
12:44 < bridge> <woidless> i change
12:44 < bridge> <woidless> Start script?
12:45 < bridge> <woidless> File "/root/DDNetPP/build/broadcast.py", line 17, in <module>
12:45 < bridge> <woidless>     fifo.write(f"broadcast {MSGRANDOMIZE}")
12:45 < bridge> <woidless> NameError: name 'fifo' is not defined
12:45 < bridge> <woidless> root@GoodServers:~/DDNetPP/build#
12:55 < bridge> <learath2> Unworkable why? It should work just fine
13:01 < bridge> <tsfreddie> too bad we need to pay to go to the beach
13:02 < bridge> <learath2> Us polling communities exposes everyone that is online at a given time to communities
13:04 < bridge> <inv41idu53rn4m3> Yeah the change broke it, ChillerDragon just made a mistake
13:30 < bridge> <woidless> But even with the usual change, it doesn't work for me
14:03 < bridge> <avolicious> But they are exposed anyways no?
14:03 < bridge> <avolicious> If they are on any server, the master catches their name & you can find them
14:04 < bridge> <learath2> You get some extra info, like when they turned on their client in general, and you get to know they are on the client even if they play on unregistered servers
14:04 < bridge> <learath2> Does it matter, idk
14:04 < bridge> <avolicious> How do we get this information if you pull the info from us? 😄
14:05 < bridge> <avolicious> You just add the playername to the request & we give you the maps in return
14:05 < bridge> <learath2> Player opens client
14:05 < bridge> <learath2> We send a request to you
14:05 < bridge> <learath2> You know player online now
14:05 < bridge> <avolicious> But what should I do with this information?
14:05 < bridge> <learath2> Idk, I'm just telling you what extra information you get
14:06 < bridge> <avolicious> We have 13k players. I dont care if someone just opens a client xd
14:06 < bridge> <learath2> I guess you can go rob them because you know they are now immersed in the game
14:06 < bridge> <avolicious> 🤣
14:06 < bridge> <learath2> Ask @heinrich5991 he is more creative with these sorts of things
14:07 < bridge> <avolicious> I would also accept something like: "No we dont want to add this feature for 3rd party providers"
14:07 < bridge> <avolicious> Then atleast its a clear path & statement
14:07 < bridge> <learath2> To be honest nothing is really "unclear". Idk why this conversation got dug back up
14:07 < bridge> <avolicious> I dont know either
14:07 < bridge> <avolicious> I just got pinged
14:08 < bridge> <learath2> We want this feature for 3rd party providers. We determined the put endpoint was a decent way to implement it without exposing anything extra. Nothing changed there, I just had a sudden burst of real life stuff to do that didn't allow me to complete that
14:09 < bridge> <avolicious> I would personally prefer if there is a put/patch/delete endpoint for community servers 😄
14:11 < bridge> <learath2> You mean the ips? That would be nice, but updates are infrequent enough that I never really thought it would be enough added value for it to be worth someones time
14:11 < bridge> <avolicious> For the community server ips, yeah
14:12 < bridge> <avolicious> So its more event based & you just keep a state for a community
14:14 < bridge> <inv41idu53rn4m3> This is so pretty to me, makes me want to learn Idris
14:14 < bridge> <inv41idu53rn4m3> ```idris
14:14 < bridge> <inv41idu53rn4m3> app : Vect n a -> Vect m a -> Vect (n + m) a
14:14 < bridge> <inv41idu53rn4m3> app Nil       ys = ys
14:14 < bridge> <inv41idu53rn4m3> app (x :: xs) ys = x :: app xs ys
14:14 < bridge> <inv41idu53rn4m3> ```
14:14 < bridge> <inv41idu53rn4m3> but hot damn my brain is so fried from writing cursed Haskell that it feels like it's *refusing* to think about types more complicated than `int`
14:30 < bridge> <ms.warroir> Syug woh ot eb a ved؟ tahw i deen ot nrael؟ tahw si eht tsrif pets ot pets؟ 🤔
14:35 < bridge> <kollpotato> yeehaw
14:42 < bridge> <zhn> learn cpp in first
14:44 < bridge> <teero777> learn c first
14:45 < bridge> <Assa> I woudln't consider this really necessary, what's your reasoning? (I learned C first)
14:46 < bridge> <Assa> Because IMO the basics of C++ are the same for C (e.g. pointer arithmetic, C-style-casting, structs, formatting ...)
14:46 < bridge> <Assa> except maybe for free and alloc
14:47 < bridge> <Assa> except maybe for free and (m)alloc
14:47 < bridge> <Sans> learn x86 Assembly first
14:49 < bridge> <ryozuki> learn how to make ur own processor first
14:49 < bridge> <ryozuki> learn physics first
14:53 < bridge> <ms.warroir> I already learnd c++ and python basics.. so what is the best step now?
14:53 < bridge> <ms.warroir> Also what IMO means
14:53 < bridge> <Assa> "in my opinion"
14:54 < bridge> <ms.warroir> "in your opinion"
14:55 < bridge> <oxyzo.> in his opinion
14:55 < bridge> <ms.warroir> ... @essigautomat ❓⁉️❔
14:58 < bridge> <Assa> I guess he has the `const char*` already down
14:58 < bridge> <inv41idu53rn4m3> in our opinion
14:59 < bridge> <teero777> many things tend to get easier in c++ such as handling lists, hashmaps or the whole stream arithmetic
14:59 < bridge> <teero777> also error handly with trycatch
14:59 < bridge> <teero777> also c++ has object oriented structures.
14:59 < bridge> <inv41idu53rn4m3> https://tenor.com/view/meme-our-now-gif-21036569
14:59 < bridge> <teero777> many things tend to get easier in c++ such as handling lists, hashmaps or the whole stream arithmetic
14:59 < bridge> <teero777> also error handling with trycatch
14:59 < bridge> <teero777> also c++ has object oriented structures.
14:59 < bridge> <inv41idu53rn4m3> OO is a curse
14:59 < bridge> <zhn> actually its better to hop c to cpp because if you start learning cpp just like this you will end up writing c code in cpp
15:00 < bridge> <teero777> i like how you handle that kind of stuff in C it is just really funny to me
15:00 < bridge> <zhn> and if you know c already you will try to use an actual cpp benefits instead
15:00 < bridge> <teero777> i like it
15:00 < bridge> <zhn> in c you will literally remake OO :P
15:01 < bridge> <inv41idu53rn4m3> actually me
15:01 < bridge> <teero777> do you know a solution for doing what #embed does in C99?.... i would love to hear it
15:01 < bridge> <zhn> is there embed in c99?
15:01 < bridge> <teero777> no
15:01 < bridge> <teero777> thats the problem xd
15:01 < bridge> <zhn> ah
15:01 < bridge> <zhn> use codegen
15:01 < bridge> <zhn> and why u stick to c99
15:02 < bridge> <zhn> ur not old fart
15:02 < bridge> <teero777> challenge
15:02 < bridge> <teero777> have already made renderer and now using gtk for ui
15:02 < bridge> <zhn> write in pure asm xd
15:02 < bridge> <teero777> have already made renderer with opengl and now using gtk for ui
15:02 < bridge> <Assa> I stick to C++17, because I don't need a challenge, I want to get stuff done
15:02 < bridge> <teero777> im getting stuff done
15:02 < bridge> <teero777> thats a stupid argument xd
15:03 < bridge> <inv41idu53rn4m3> but no inheritance
15:03 < bridge> <inv41idu53rn4m3> no virtual functions
15:03 < bridge> <inv41idu53rn4m3> data and code beautifully separate, like they were meant to be
15:03 < bridge> <Assa> depends if you need more or less stuff done in a unit of time. My time is limited, I don't want to overthink every single detail
15:03 < bridge> <zhn> nah, you can reimplement inheritance, composition, virtual tables
15:03 < bridge> <inv41idu53rn4m3> I can but I won't
15:03 < bridge> <teero777> hmm depends.
15:03 < bridge> <zhn> if you don't make anything bigger than a simple cli thing you will end up with this
15:04 < bridge> <Assa> yes, I am missing the time aspect, or do you think you'll be faster with c99?
15:04 < bridge> <Assa> faster in programming, not in terms of program runtime
15:04 < bridge> <teero777> depends on the problem
15:04 < bridge> <inv41idu53rn4m3> Every sufficiently complex software will eventually implement a slow buggy lisp
15:05 < bridge> <zhn> bros lowkey machine code programmer
15:05 < bridge> <inv41idu53rn4m3> https://en.wikipedia.org/wiki/Greenspun's_tenth_rule
15:05 < bridge> <inv41idu53rn4m3> my paraphrasing doesn't sound nearly as good as the original
15:06 < bridge> <zhn> why the fuck wikipedia asks me to donate
15:06 < bridge> <zhn> they even have commercial branch company why the fuck they are begging to donate
15:09 < bridge> <inv41idu53rn4m3> because there is no money in actually good software or online services
15:11 < bridge> <oxyzo.> https://cdn.discordapp.com/attachments/293493549758939136/1314232803575070871/image.png?ex=6753062d&is=6751b4ad&hm=1b73b136230c7ac9ebff9a0a87df4b28d1a047e694197172a3bc15eb2f9216a4&
15:18 < bridge> <Assa> wikipedias donation campaign is somewhat shady, they don't need your money to keep the website alive, they are redirecting the money to sub-projects
16:20 < bridge> <Jupstar ✪> Even if, considering how huge and important Wikipedia is, it's not really lot of money actually.
16:20 < bridge> <Jupstar ✪> 
16:20 < bridge> <Jupstar ✪> But every project of decent size attracts ppl that can't have enough money xd
16:29 < bridge> <milkeeycat> @jupeyy_keks I got the bug with attached renderdoc :DD
16:30 < bridge> <Jupstar ✪> epyc
16:30 < bridge> <Jupstar ✪> press f12
16:31 < bridge> <milkeeycat> wat now
16:31 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1314252843422843001/image.png?ex=675318d7&is=6751c757&hm=55ca2d4b7a70e47daa59f797d61f8fcdee79e6b638fe5e889f03772a80e659a7&
16:31 < bridge> <Jupstar ✪> on the left press color pass
16:31 < bridge> <Jupstar ✪> open it
16:31 < bridge> <Jupstar ✪> then find where the cursor is drawn
16:32 < bridge> <Jupstar ✪> on "Texture Viewer" you can see how the frame builds up
16:34 < bridge> <milkeeycat> ok, found
16:35 < bridge> <Jupstar ✪> great, next is to go into the pipeline state
16:35 < bridge> <Jupstar ✪> first click on "Vertex Mesh" or smth like that
16:35 < bridge> <Jupstar ✪> that should show all vertices
16:35 < bridge> <Jupstar ✪> Mesh View it is
16:36 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1314254076007026789/image.png?ex=675319fd&is=6751c87d&hm=4ddd81da4350ce5ef7d072eb0573a738d6e9d65ac8fd2e6afd7be54957f33167&
16:36 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1314254085230297158/image.png?ex=675319ff&is=6751c87f&hm=2d4230f6ed924674ae9bbd7b5da7f5ce877d391c52835468f3e05c1da24a3b8d&
16:36 < bridge> <Jupstar ✪> these are the interesting fields
16:37 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1314254424423661589/image.png?ex=67531a50&is=6751c8d0&hm=63611614766056f52d0314087c34b2bbe1e3201b67f6d5482871bbc8c24bf52e&
16:37 < bridge> <Jupstar ✪> ok
16:38 < bridge> <Jupstar ✪> so they actually are transparent for you
16:38 < bridge> <Jupstar ✪> lol
16:38 < bridge> <Jupstar ✪> which ddnet version are you on?
16:38 < bridge> <milkeeycat> git revision hash: 2fad40204c14560b
16:40 < bridge> <Jupstar ✪> how the hell can that even happen lol
16:40 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1314255114453778536/image.png?ex=67531af4&is=6751c974&hm=67eee4757c6457bb894f259aa6e631e226c3b3f8e5f190fbd4c5b1d2ac02b9d7&
16:40 < bridge> <Jupstar ✪> something has to literally rewrite the buffer object
16:40 < bridge> <Jupstar ✪> but not only that
16:40 < bridge> <Jupstar ✪> it must perfectly only overwrite the alpha values
16:41 < bridge> <Jupstar ✪> xd
16:41 < bridge> <murpi> @jupeyy_keks Are numbers in skin names fine or should I disallow that too
16:41 < bridge> <Jupstar ✪> idc, ig it can't hurt if the skin name does not start with a digit
16:41 < bridge> <Jupstar ✪> but generally numbers can be typed by the international community ig
16:43 < bridge> <murpi> What about whitespaces?
16:43 < bridge> <milkeeycat> @jupeyy_keks is there anything else I can do?
16:43 < bridge> <murpi> People seem to use underscores instead of whitespaces right now
16:43 < bridge> <Jupstar ✪> i think we already have so many skins with them that it is kinda too late 😄
16:43 < bridge> <Jupstar ✪> i think they often just look what the person above did xD
16:45 < bridge> <Jupstar ✪> mhh dunno, i am honestly shocked xd
16:46 < bridge> <murpi> I'd just use a regex to check the name, `^[a-zA-Z0-9\s_-]+$`
16:46 < bridge> <Jupstar ✪> @milkeeycat it happens while the client is open right?
16:46 < bridge> <Jupstar ✪> 
16:46 < bridge> <Jupstar ✪> like it's not directly when you have the client open
16:46 < bridge> <murpi> That'd allow latin letters, numbers, whitespaces, _ and -
16:47 < bridge> <milkeeycat> It happens sometimes when I open the client but not during when it's open
16:47 < bridge> <Jupstar ✪> ok, i'm fine with that, we have very few skins with a dot, but i've nothing against not doing it
16:48 < bridge> <milkeeycat> It happens sometimes when I open the client but not during the time when it's open
16:48 < bridge> <Jupstar ✪> ah so it's not a _runtime_ bug
16:48 < bridge> <Jupstar ✪> but a setup bug
16:48 < bridge> <milkeeycat> ye
16:48 < bridge> <Jupstar ✪> ok that helps a lot already
16:49 < bridge> <Jupstar ✪> @robyt3 if you have an idea why _sometimes_ the color is not reset during client setup, you can go ahead and tell me xD
16:49 < bridge> <Jupstar ✪> 
16:49 < bridge> <Jupstar ✪> The _sometimes_ is what makes me a bit nervous. Just resetting the color probably fixes it
16:50 < bridge> <Jupstar ✪> But do we even have conditional code in the setup?
16:50 < bridge> <Jupstar ✪> Maybe `RenderLoading` ?
16:51 < bridge> <_voxeldoesart> hidden kill tiles
16:53 < bridge> <robyt3> Do we also save the current color during initialization of quad containers? I've also looked at this function and thought it should be impossible for the color to be anything else white.
16:54 < bridge> <robyt3> Do we also save the current color during initialization of quad containers? I've also looked at this function and thought it should be impossible for the color to be anything except white.
16:54 < bridge> <robyt3> Looks like the color could be 0.5 alpha after `RenderLoading` if we don't reset it before initializing the quad container
16:57 < bridge> <robyt3> `\s` would also match other space characters, I guess we only want ` ` and not tabs/newline/zero-width spaces etc.
17:04 < bridge> <learath2> You don't have to. The OO lobby has poisoned your mind. Polymorphism isn't the only way to write code
17:30 < bridge> <learath2> Today I'm integrating with an API that has a string field, that can only be `"true"` or `"false"`
17:34 < bridge> <Jupstar ✪> is it inside a json, or literally a parameter that takes "true" as string?
17:38 < bridge> <learath2> It's a json payload, that has bools elsewhere and the parameter is called "reverseFlag". Absolutely zero reason that couldn't be a bool aswell 😄
17:39 < bridge> <learath2> Another funny thing is that items in the item array have a float price field, the overall payload has a string total price field
17:40 < bridge> <Jupstar ✪> Then I've seen worse.
17:40 < bridge> <Jupstar ✪> Some delphi app that returns the boolean as string as "Wahr" which is german for true xDDDD
17:40 < bridge> <ryozuki> float for monetary should be a crime
17:41 < bridge> <ryozuki> float for money should be a crime
17:41 < bridge> <learath2> LOL that's great i8n
17:41 < bridge> <learath2> Well it's accurate enough for pretty much any amount of money, when does a float32 even lose 2 digit precision?
17:42 < bridge> <Jupstar ✪> f64 already looses it with 0.6
17:42 < bridge> <Jupstar ✪> 
17:42 < bridge> <Jupstar ✪> But only if you absolutely don't round
17:42 < bridge> <ryozuki> :RR: :UU: :SS: :TT:
17:43 < bridge> <ryozuki> :RR: :UU: :SS: :TT: :brownbear:
17:43 < bridge> <learath2> (fwiw internally I use fixed point numbers for money everywhere)
17:43 < bridge> <Jupstar ✪> Sadly rust doesn't implement fixed points properly either
17:43 < bridge> <learath2> There is a colleague I have that keeps making a PR trying to convert my nice fixed point numbers into doubles though
17:43 < bridge> <Jupstar ✪> Seems like most ppl except us simply don't care
17:43 < bridge> <ryozuki> u simply shouldnt use floats, store it as cents with integers
17:43 < bridge> <Jupstar ✪> f64 is accurate enough for most xd
17:44 < bridge> <Jupstar ✪> that sadly doesn't work either
17:44 < bridge> <Jupstar ✪> many apps want decimal cents
17:44 < bridge> <ryozuki> :VV: :UU: :LL: :KK: :AA: :NN:
17:44 < bridge> <Jupstar ✪> epyc
17:44 < bridge> <ryozuki> ???
17:44 < bridge> <Jupstar ✪> convinced me
17:44 < bridge> <ryozuki> its how the industry standard works
17:45 < bridge> <ryozuki> depending on the money type its different quantity of cents
17:45 < bridge> <learath2> You can cheat, internally do everything in cents, externally just put a fake dot
17:45 < bridge> <ryozuki> u just need to save if its jpy or €
17:45 < bridge> <ryozuki> when displaying u just display it as float
17:46 < bridge> <ryozuki> losless arithmetic
17:46 < bridge> <learath2> Working at this job has made me notice how godawful people are at designing APIs, it's almost like most of the time there is no design at all
17:46 < bridge> <Jupstar ✪> i am not rich enough that f64 is inaccurate enough 😏
17:47 < bridge> <ryozuki> this makes me think being a "software architect" isnt as hard as it might be given the level on the field
17:47 < bridge> <learath2> Bigger companies like Stripe/Paypal are great, they have very well documented very flexible apis, but these small vendors create the most attrocious horseshit I've ever seen
17:47 < bridge> <Jupstar ✪> tbf, it is hard.
17:47 < bridge> <Jupstar ✪> 
17:47 < bridge> <Jupstar ✪> Either an API is super fast and sucks to use. Or it's super easy and doesn't scale xd
17:47 < bridge> <ryozuki> stripe looks rly good
17:47 < bridge> <ryozuki> but lately high fees for small players
17:47 < bridge> <Jupstar ✪> So they end up using the worst from both worlds
17:47 < bridge> <Jupstar ✪> Super hard to use, and still shit
17:48 < bridge> <ryozuki> just use mongodb for web scale
17:48 < bridge> <learath2> This integration I'm working on is worst of both worlds. It's slow, sucks to use and doesn't scale
17:48 < bridge> <learath2> They really managed to capture something special here
17:48 < bridge> <ryozuki> have u considered piping it to dev null
17:48 < bridge> <learath2> It would be very fast
17:49 < bridge> <learath2> Just breaks a couple ACID promises
17:49 < bridge> <learath2> I guess it's still atomic, you never observe the change so you can't observe half changes
17:50 < bridge> <learath2> It's also still consistent, nothing is always consistent with nothing, and the database state never changes so it can't become inconsistent
17:50 < bridge> <learath2> Actually /dev/null might be a better db than mongo
17:51 < bridge> <ryozuki> :WW:
17:51 < bridge> <learath2> It just needs to work a little on the Durability
17:51 < bridge> <ryozuki> whoever added the words  emotes is a genius
18:11 < bridge> <0xdeen> This reminds me, today I noticed that in Rust `lto = false` does not disable LTO, you have to do `lto = "off"` instead: https://doc.rust-lang.org/cargo/reference/profiles.html
18:11 < bridge> <0xdeen> > false: Performs “thin local LTO” which performs “thin” LTO on the local crate only across its codegen units. No LTO is performed if codegen units is 1 or opt-level is 0.
18:33 < bridge> <ryozuki> https://doc.rust-lang.org/std/?search=Result%3CT%2CE%3E%20-%3E%20Option%3CT%3E
18:33 < bridge> <ryozuki> @heinrich5991 @jupeyy_keks did u know this trick?
18:33 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1314283485065773127/image.png?ex=67533561&is=6751e3e1&hm=d67bb25b0a747186d17b294732c5188fedd369891812f3081a917b5d7add965e&
18:33 < bridge> <ryozuki> shows results for converting from a type to another in docs
18:34 < bridge> <Jupstar ✪> Lol interesting
18:34 < bridge> <Jupstar ✪> but you have to know the name of the generic attribute xd
18:36 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1314284303231746048/image.png?ex=67533624&is=6751e4a4&hm=c9e5724c95bcf2154d3bff3456e616ab760c14884c3188790c3b591a7594b471&
18:36 < bridge> <ryozuki> not at all
18:36 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1314284367954186240/image.png?ex=67533633&is=6751e4b3&hm=91c4265ccce58471f2e1b2792b6042ef438452bbc97821afc4c80921895c501b&
18:36 < bridge> <ryozuki> xd
18:38 < bridge> <Jupstar ✪> for me it at least rejects wrong ones
18:38 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1314284898969714768/image.png?ex=675336b2&is=6751e532&hm=3ef6c483c9bed2c3424cb24a817bdbc4007d039c9e267ed0af5959c4bbdc82e2&
18:39 < bridge> <Jupstar ✪> for some entries
18:39 < bridge> <Jupstar ✪> replaced T with B
19:19 < bridge> <milkeeycat> @jupeyy_keks thx for fixing the bug :heartw:
19:44 < bridge> <Assa> does anyone know how to capture wine output? It starts to get ... weird:
19:44 < bridge> <Assa> `wine cmd /c start ${BUILD_DIR}/tests.exe ^> output.txt`
19:45 < bridge> <Assa> this doesn't work btw, but this works on windows (ofc without wine)
19:47 < bridge> <Assa> nevermind this doesn't work because of the directory, lol fck mcrsft
19:48 < bridge> <Jupstar ✪> do you want to capture outpute inside wine or simply the linux terminal output?
19:48 < bridge> <Assa> I figured it out, it's `build\\tests.exe` instead of `build/tests.exe` fck me I guess
19:49 < bridge> <Jupstar ✪> do you want to capture output inside wine or simply the linux terminal output?
19:49 < bridge> <Assa> annoyingly the output doesn't get captured by wine at all, I want to capture the output of the windows binary
20:08 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1314307352261820466/image.png?ex=67534b9b&is=6751fa1b&hm=58246f34e8998a523bbc444ab6671bf047f0338e2dc697f917988596cf9cdbf7&
20:08 < bridge> <kollpotato> :feelsbadman:
20:08 < bridge> <Jupstar ✪> time to fill up a pr
20:11 < bridge> <Assa> ddnet (or teeworlds for that matter) is quantizing the positions and velocities, I always wondered why? What's the benefit of doing this, is this for lower bandwidth?
20:24 < bridge> <learath2> You'd have to ask matricks, I'm guessing it's a combination of many things, it's better for determinism, it's better for network efficiency
20:25 < bridge> <learath2> I think the only reason it's not straight up fixed point is because he didn't want to have a max map size
20:37 < bridge> <learath2> @mtrcks if you ever end up checking discord again :this: 🙃
20:39 < bridge> <_voxeldoesart> oh yea i forgot matricks was here
20:41 < bridge> <learath2> I also hate floats with a passion, so I would have probably gone entirely with fixed point numbers only converting to float at the very very end because gpus can't do fixed point
20:42 < bridge> <learath2> With fixed point everywhere we'd have even better determinism, stuff like moving parts around the map would work perfectly
20:53 < bridge> <chairn> GPUs can do fixed point, just not in a single operation but two
20:55 < bridge> <learath2> They can do operations but you still need to get to a float to display stuff, no? The coordinate system doesn't understand fixed point
20:57 < bridge> <chairn> what coordinate system ?
20:57 < bridge> <chairn> most libs to draw things in 3D uses floating points, so i'd guess the underlying hardware is probably using floating point as well
20:59 < bridge> <Jupstar ✪> opengl and vulkan have support for fixed points ranging from 0-1.. so basically no integer part.
20:59 < bridge> <Jupstar ✪> 
20:59 < bridge> <Jupstar ✪> ddnet even uses that. If however this means the GPU makes use of it, is another topic xd
21:02 < bridge> <chairn> in embedded cpu, i often see hardware support for 1.7 fixed point format
21:02 < bridge> <chairn> don't know why specifically this format though
21:03 < bridge> <EGYT> time to remember the terms I used back when I was actively translating
21:05 < bridge> <learath2> hm, aren't all coordinates expected to be in normalized floating point? Is there support for integer texel coordinates e.g.?
21:05 < bridge> <chairn> i don't really know what's inside gpu
21:05 < bridge> <chairn> weirdly enough, it's not taught in any hardware design class i knowof
21:05 < bridge> <chairn> weirdly enough, it's not taught in any hardware design class i know of
21:06 < bridge> <learath2> it's probably all proprietary anyway 🙃
21:06 < bridge> <chairn> well, we now have open hardware for cpu, soon gpus will follow as well
21:07 < bridge> <chairn> im sure i've seen opengpu somewhere already
21:07 < bridge> <chairn> but it's more gpus used for computing rather than for drawing i think
21:07 < bridge> <Jupstar ✪> do you mean theoretically or practically?
21:07 < bridge> <Jupstar ✪> 
21:07 < bridge> <Jupstar ✪> you can fetch texels above 1.0, it depends on your texture wrap what the result is then. repeating texture or clamp to edge etc.
21:07 < bridge> <learath2> Is there any capability in vk or gl to address a specific pixel on a texture e.g.?
21:07 < bridge> <Jupstar ✪> u can fetch a texel
21:08 < bridge> <learath2> I mean 1.0 is a float, and I know going above it wraps. I'm curious if there is support for proper integer coordinates, or say a fixed point coordinate
21:09 < bridge> <learath2> By it's exact integer coordinates without ever having to convert to float?
21:09 < bridge> <Jupstar ✪> yes
21:09 < bridge> <learath2> Oh, that's cool, I did not know this
21:09 < bridge> <Jupstar ✪> https://registry.khronos.org/OpenGL-Refpages/gl4/html/texelFetch.xhtml
21:10 < bridge> <chairn> https://www.wired.com/story/rayv-lite-laser-chip-hacking-tool/ interesting
21:12 < bridge> <Jupstar ✪> the biggest problem of fixed points is simply the value range.
21:12 < bridge> <Jupstar ✪> 
21:12 < bridge> <Jupstar ✪> if you are not currently working with [0-1] numbers only, then you directly need a 64bit fixed point to have a decent value range
21:13 < bridge> <chairn> 16.16 would be well enough for ddnet
21:13 < bridge> <learath2> Yeah, range is the well known issue. I thought hardware support on gpus were also an issue but I guess not
21:13 < bridge> <chairn> largest maps are not 64K blocks large, so it would work quite well
21:13 < bridge> <Jupstar ✪> and do you also perform your math operations on the size?
21:13 < bridge> <learath2> You probably don't need 16 bits after the dot even, so you can maybe have larger maps too
21:14 < bridge> <EGYT> «Close»? Where this one appears?
21:14 < bridge> <Jupstar ✪> i dont think we can handle more than u16xu16 maps _ever_ xd
21:14 < bridge> <Jupstar ✪> i even made it a hard limit
21:15 < bridge> <chairn> wdym ?
21:15 < bridge> <learath2> so technically a 16.16 fixed point integer would be sufficient for teeworlds in your opinion?
21:15 < bridge> <learath2> It has enough range and has 0% error across the range
21:16 < bridge> <Jupstar ✪> hard to say, i'd need to see how common math functions would be implemented, like tan, sqrt etc.
21:16 < bridge> <Jupstar ✪> like always stay 16.16
21:16 < bridge> <Jupstar ✪> never use higher resolution
21:17 < bridge> <learath2> I didn't mean performance wise. This is another big issue with fixed point math, they just don't have the great hardware support floats get
21:17 < bridge> <Jupstar ✪> i also don't mean performance wise
21:17 < bridge> <learath2> Well if you don't care about performance you can get as accurate as you want with your tan sqrt etc
21:17 < bridge> <chairn> multiplication would need 64b (32.32) integer then rescaling to 16.16
21:17 < bridge> <Jupstar ✪> let's reformulate.
21:17 < bridge> <Jupstar ✪> if zwelf would try out fixed points and all his tests would still work. why not xd
21:17 < bridge> <chairn> sqrt on int is pretty easy
21:18 < bridge> <learath2> Both can be implemented as a power series expansion
21:18 < bridge> <chairn> for trigonometric, either table based or cordic could work
21:18 < bridge> <Jupstar ✪> ah @learath2 btw 16 is not enough, bcs we can go -200 into the map
21:18 < bridge> <Jupstar ✪> forgot about that
21:18 < bridge> <Jupstar ✪> so for coordinates it's not enough
21:18 < bridge> <chairn> also note that these functions are not that performant on float either
21:18 < bridge> <Jupstar ✪> only for rendering xdd
21:18 < bridge> <learath2> wym -200 into the map?
21:19 < bridge> <chairn> 16.16 is signed
21:19 < bridge> <Jupstar ✪> like outside the map
21:19 < bridge> <Jupstar ✪> yes but then i16 is really small
21:19 < bridge> <chairn> still leaves you 32K block maps
21:19 < bridge> <Jupstar ✪> except we only want 32k max size
21:19 < bridge> <Jupstar ✪> but that already halves it
21:20 < bridge> <Jupstar ✪> i mean 32.32 would be that bad tbh, not like 99% of all modern cpus that could start ddnet have 64bit instruction set anyway. but yeah would still cost bit perf probs
21:20 < bridge> <Jupstar ✪> i mean 32.32 would be that bad tbh, not like 99% of all modern cpus that could start ddnet don't have 64bit instruction set anyway. but yeah would still cost bit perf probs
21:20 < bridge> <learath2> This is impossible I guess. Maps rely on floating point inaccuracy now. Drop parts break at different distances to the origin
21:21 < bridge> <Jupstar ✪> yeah ofc without the edge cases
21:22 < bridge> <Jupstar ✪> if we end up re-releasing 5 maps
21:22 < bridge> <Jupstar ✪> that doesn't sound too bad lmao
21:22 < bridge> <learath2> I would most definitely experiment with it, but I don't think performance requirements can be satisfied easily without some hw support
21:22 < bridge> <Jupstar ✪> i mean modern cpus have insane integer performance
21:24 < bridge> <Jupstar ✪> my personal serious concern with fixed points is really language support
21:24 < bridge> <chairn> int performances is alwyas better than float performances because there are more int functional units than floats ones
21:24 < bridge> <chairn> basic cpp class should do it
21:24 < bridge> <Jupstar ✪> i use `fixed` crate a bit in rust for some binary layouts. and working with it is really not nice xD
21:24 < bridge> <chairn> with inlining operators, it would be quite efficient
21:25 < bridge> <learath2> Maybe that's what I should try as my teeworlds project. Just rewrite the whole thing in fixed point integers
21:25 < bridge> <meloƞ> rewrite the entire thing in Go
21:25 < bridge> <Jupstar ✪> not that easy, u also need sqrt, tan, sin etc.
21:25 < bridge> <Jupstar ✪> without that it's not usable
21:26 < bridge> <learath2> @jupeyy_keks so wait, can I really just upload fixed point ints into the gpu as coordinates?
21:26 < bridge> <Jupstar ✪> as said only normalized ones
21:26 < bridge> <Jupstar ✪> so [0-1] range
21:27 < bridge> <learath2> These are mostly solved problems, idk if the performance is up to par nowadays, but it's all either tables or series or iterative numeric methods
21:27 < bridge> <Jupstar ✪> maybe rust lacks behind in that matter
21:27 < bridge> <Jupstar ✪> i don't know any fixed point lib that fells like a drop in replacement
21:28 < bridge> <chairn> well, just implement the functions as well, i don't see any issue with that, except maybe performance
21:32 < bridge> <Jupstar ✪> i don't know any fixed point lib that feels like a drop in replacement
21:47 < bridge> <EGYT> Here you  are
21:48 < bridge> <EGYT> Here you are
21:48 < bridge> <EGYT> Waiting for the F-Droid build xD
21:51 < bridge> <Jupstar ✪> good luck waiting, bcs f-droid really is annoying xD
21:51 < bridge> <Jupstar ✪> it takes like one week before your build is done
21:53 < bridge> <Jupstar ✪> fdroid also has pretty strict requirements on the build tools. dunno how exactly that process works xd
