00:00 < bridge> <Teero> Good thing I rewrote all of it to not need to mess with this :kek:
00:00 < bridge> <Solly (bun bun)> you have to do deal with it
00:00 < bridge> <Solly (bun bun)> unless your map data isnt a one to one with how its stored
00:00 < bridge> <Solly (bun bun)> you can hide alot of unused data in the map format
00:01 < bridge> <Teero> What? What exactly do you mean
00:01 < bridge> <Solly (bun bun)> in the map format theres blocks of data which are indexed, and then each layer has flags saying what type it is and an index into this data for each type that it could be
00:01 < bridge> <Solly (bun bun)> m_Flags
00:01 < bridge> <Solly (bun bun)> m_Data
00:01 < bridge> <Solly (bun bun)> m_Tele
00:01 < bridge> <Solly (bun bun)> m_Switch
00:01 < bridge> <Solly (bun bun)> ....
00:01 < bridge> <Solly (bun bun)> setting m_Flags to multiple types doesnt work
00:02 < bridge> <Solly (bun bun)> its absolutley cursed
00:02 < bridge> <Solly (bun bun)> (sized blocks of data)
00:02 < bridge> <Solly (bun bun)> (which are not verified at load time)
00:02 < bridge> <Teero> I honestly have no idea what you are talking about even though I did rewrite the map loader
00:03 < bridge> <Solly (bun bun)> (whose size are not verified at load time, which is very annoying)
00:03 < bridge> <Solly (bun bun)> well it may be quirks of how the ddnet map loader works
00:03 < bridge> <Solly (bun bun)> im just assuming what the map format is from how the structs are
00:03 < bridge> <Solly (bun bun)> im just infering what the map format is from how the structs are
00:03 < bridge> <Solly (bun bun)> it would be incredibly dumb if the map format is simpler than i see it here
00:03 < bridge> <Solly (bun bun)> but it would be nice that it could be refactored to not be ... like that
00:03 < bridge> <Teero> https://github.com/Teero888/ddnet_maploader_c99/blob/master/ddnet_map_loader.h
00:04 < bridge> <Solly (bun bun)> so much cleaner
00:04 < bridge> <Solly (bun bun)> `void *get_data(datafile_t *data_file, int index) {` you have the index block sizes here
00:04 < bridge> <Solly (bun bun)> `void *get_data(datafile_t *data_file, int index) {` you have the data blocks here
00:04 < bridge> <Teero> I do store the map differently in memory than ddnet because of cache stuff
00:04 < bridge> <Solly (bun bun)> `void *get_data(datafile_t *data_file, int index) {` and `int get_item_size(datafile_t *data_file, int index) ` you have the data blocks here
00:04 < bridge> <Teero> But thats a minor change
00:05 < bridge> <Teero> Ah that's what you mean xd
00:05 < bridge> <Solly (bun bun)> i lied you do it the exact same lmao
00:05 < bridge> <Solly (bun bun)> how u have no clue what im talking abt xd
00:06 < bridge> <Solly (bun bun)> i lied you do it the exact same lmao (i just didnt see it cuz the .h doesnt contain map data struct)
00:06 < bridge> <Teero> I wrote this a while ago xdd
00:08 < bridge> <Teero> maybe 7 months ago I knew what I was doing.
00:11 < bridge> <Teero> okay I sleep gn
02:00 < bridge> <Teero> @ryozuki for your os/kernel please implement in-process memory isolation to be able to sandbox dynamically loaded libraries without losing computational speed.
02:04 < bridge> <Teero> for example if I wanted to make a client side server mod plugin manager so you can for example download a plugin for custom prediction, it is very hard to ensure that that plugin doesn't have access to the network or filesystem. Of course you can use wasm for example. That's what  ddnet-rs does but you lose up to 20% speed which is very annoying.
02:04 < bridge> <Teero> Currently there isn't a single solution that works cross-platform and doesn't sacrifice performance
02:05 < bridge> <Teero> I read this. But you need a patched kernel and an Intel CPU for this to work.
02:05 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1416937978101501992/1801.06822v3.pdf?ex=68c8a9d3&is=68c75853&hm=ad5a8a13e29edd2902609d4fa1de2325427176509d875999377a9b515950bd5a&
02:06 < bridge> <Teero> So wasm is basically the only option. But I don't wanna sacrifice speed. On the other hand I don't want malicious plugins to be distributed.
02:06 < bridge> <Teero> So wasm is basically the only option but I don't wanna sacrifice speed. On the other hand I don't want malicious plugins to be distributed.
02:08 < bridge> <Teero> And you can completely forget about windows lmao.
02:09 < bridge> <Teero> The other possibility is to create a child process for the plugin but communicating between the main and the child would again be slow asf
02:16 < bridge> <Teero> Intel cpus have memory protection keys since 2015 starting with the Skylake models, amd since 2020 with zen3. Not sure about any others. the paper is from 2018 so the amd MPK wasn't out yet
02:16 < bridge> <Teero> I read this. But you need a patched kernel and linux for this to work.
02:16 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1416937978101501992/1801.06822v3.pdf?ex=68c8a9d3&is=68c75853&hm=ad5a8a13e29edd2902609d4fa1de2325427176509d875999377a9b515950bd5a&
02:19 < bridge> <Teero> Proper user space memory protection key support for windows isn't out yet afaik so i can't use this for cross platform
02:20 < bridge> <Teero> And I have no idea how the situation is on mac
02:24 < bridge> <Teero> I read this. But you need a patched kernel and linux for this to work.
02:24 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1416937978101501992/1801.06822v3.pdf?ex=68c8a9d3&is=68c75853&hm=ad5a8a13e29edd2902609d4fa1de2325427176509d875999377a9b515950bd5a&
02:28 < bridge> <Teero> Okay I'm stupid. Without patching your kernel it is basically impossible to block syscalls of only part of the program (dynamically loaded plugin).
02:29 < bridge> <Teero> @ryozuki for your os/kernel please implement in-process memory and syscall isolation to be able to sandbox dynamically loaded libraries without losing computational speed.
02:29 < bridge> <Teero> This is so annoying why has nobody ever thought about fixing this. Why do kernels not support this
02:30 < bridge> <Teero> I should make a pr
02:30 < bridge> <Teero> well I can't really make a pr to the windows kernel
02:30 < bridge> <Teero> I would have to get a job there
02:30 < bridge> <Teero> so much effort
02:55 < bridge> <forgottenabscat> Currently this can't be done on official client. If you want this feature, you can request it by opening an issue on Github
02:57 < bridge> <forgottenabscat> Oops, this feature has already been rejected.
02:57 < bridge> <forgottenabscat> https://discord.com/channels/252358080522747904/757720336274948198/1416857769931440202
03:01 < bridge> <kebscs> What do I have to do with this 😂 😂
03:06 < bridge> <kebscs> Also it is a bit confusing that f1 key does smth different in editor, I miss clicked it a bunch of times
03:06 < bridge> <kebscs> Bit definetly not illegal or whatever 💀
03:09 < bridge> <kebscs> But definetly not illegal or whatever 💀
07:17 < bridge> <ryozuki> morning
08:34 < bridge> <ryozuki> ```
08:34 < bridge> <ryozuki> [0.056865] <cpu-0:mount:k:7> Found root partition with uuid 87654321-4321-8765-cba9-987654321fed
08:34 < bridge> <ryozuki> [0.056923] <cpu-0:mount:k:7> Partition name "EDOS_DATA"
08:34 < bridge> <ryozuki> ```
08:34 < bridge> <ryozuki> ```
08:34 < bridge> <ryozuki> /edos
08:34 < bridge> <ryozuki>     protocol: limine
08:34 < bridge> <ryozuki>     kernel_path: boot():/boot/kernel
08:34 < bridge> <ryozuki>     cmdline: root=UUID=87654321-4321-8765-cba9-987654321fed rootfstype=fat32
08:34 < bridge> <ryozuki> ```
08:34 < bridge> <ryozuki> pog i have cmdline parsing and mounting
08:42 < bridge> <chillerdragon> Where is that tripple main screenshot from?
09:08 < bridge> <melon> you're the person who does quick fixes :kyaruXD:
09:08 < bridge> <melon> "first" public teeworlds commit from magnus's github
09:08 < bridge> <melon> :poggers2:
09:14 < bridge> <Assa> gumo, every normal and crashbug causing person ^.^
09:17 < bridge> <Assa> @blazulite can you show your target switch sounds here in the channel after you finished? :owo:
09:17 < bridge> <blazulite> Yea!
09:17 < bridge> <blazulite> In fact I was actually about to talk about that lol
09:20 < bridge> <blazulite> I have different ideas for it:
09:20 < bridge> <blazulite> - Switch sound (Like a light switch)
09:20 < bridge> <blazulite> - Something similar to `sfx_hit_weak-03` but lighter 
09:20 < bridge> <blazulite> - Something similar to  `sfx_msg-highlight`
09:21 < bridge> <Assa> go ahead, the light switch idea was already around. I want you to do this unbiased first 🙂
09:39 < bridge> <blazulite> Prototype for the Third option
09:39 < bridge> <blazulite> https://cdn.discordapp.com/attachments/293493549758939136/1417052195349598289/Untitled_project.mp4?ex=68c91432&is=68c7c2b2&hm=f286a07f6b9f499c50666d802ffbf6250118c8b2535e085dbac4b27e24964ac7&
11:08 < bridge> <Assa> Is there any way to undo an approve? 🤔
11:09 < bridge> <Assa> like I can request changes, but I don't know if the "comment" button undoes the approve
11:09 < bridge> <melon> https://cdn.discordapp.com/attachments/293493549758939136/1417074832096362586/Screenshot_20250915-110914.png?ex=68c92947&is=68c7d7c7&hm=734d6df4b5dbdc638b5bd0382e402f6795c66c4944e9454e49911f01715b8548&
11:10 < bridge> <Assa> I don't have this button in 2
11:10 < bridge> <Assa> I believe because my approval is of "no value" anyway ._.
11:13 < bridge> <Assa> okay I can't undo my own approvals, interesting
11:14 < bridge> <Assa> I also can't rerequest my own review hm
11:22 < bridge> <blazulite> Second idea
11:22 < bridge> <blazulite> https://cdn.discordapp.com/attachments/293493549758939136/1417078066827497534/Untitled_project2.mp4?ex=68c92c4b&is=68c7dacb&hm=0c611f1b28f85034fef953295d725c1ef99cd02b95d5f3b5172454e67350a50d&
11:22 < bridge> <blazulite> Sfx
11:22 < bridge> <blazulite> https://cdn.discordapp.com/attachments/293493549758939136/1417078096296804362/prototype2.zip?ex=68c92c52&is=68c7dad2&hm=464dad06a8c6d6db01101d3332392147e9a99cc60e4216619106f993878214f1&
11:39 < bridge> <blazulite> First idea
11:39 < bridge> <blazulite> https://cdn.discordapp.com/attachments/293493549758939136/1417082390479638608/Untitled_project1.mp4?ex=68c93052&is=68c7ded2&hm=efea42f6451def6a1b82a657ea50d32e167a192c246c362b292ecde2b408f4e8&
11:39 < bridge> <blazulite> Sfx
11:39 < bridge> <blazulite> https://cdn.discordapp.com/attachments/293493549758939136/1417082424013357098/prototype1.zip?ex=68c9305a&is=68c7deda&hm=d1415aaacfbb764ff2018375f6e560075a83d5581068f2573b8b3aad29712211&
11:41 < bridge> <Assa> I'll review them later today 🙂
11:41 < bridge> <blazulite> I personally like how the prototype2 and prototype1 sounds like
11:41 < bridge> <blazulite> They're supposed to sound lower in-game, but I made them "loud" for them to be better appreciated
11:41 < bridge> <blazulite> I personally like how the prototype2 and prototype1 sounds like
11:41 < bridge> <blazulite> They're supposed to sound lower in-game, but I made them loud in the videos for them to be better appreciated
11:41 < bridge> <Assa> !remind 380 review target sounds
11:41 < chillerbot12> Helo Assa I will remind you at Mon Sep 15 2025 18:01:37 GMT+0200 (Central European Summer Time) about your matter again.
12:41 < ws-client> **<ChillerDragon>** @milkeeycat i have skill issues help. I had segmentation fault because i forgot to `= {};` init my struct :/ and i got really confused
12:48 < bridge> <milkeeycat> nub
12:52 < bridge> <Solly (bun bun)> ```cpp
12:52 < bridge> <Solly (bun bun)> auto VerifyLayer = [&]<int CMapItemLayerTilemap::* pLayerPart>(CMapItemLayerTilemap *pLayer) {
12:52 < bridge> <Solly (bun bun)>     using TileType =
12:52 < bridge> <Solly (bun bun)>         std::conditional_t<pLayerPart == &CMapItemLayerTilemap::m_Data || pLayerPart == &CMapItemLayerTilemap::m_Front, CTile,
12:52 < bridge> <Solly (bun bun)>         std::conditional_t<pLayerPart == &CMapItemLayerTilemap::m_Tele, CTeleTile,
12:52 < bridge> <Solly (bun bun)>         void*>>;
12:52 < bridge> <Solly (bun bun)>     if(!pLayer)
12:52 < bridge> <Solly (bun bun)>         return (TileType *)nullptr;
12:52 < bridge> <Solly (bun bun)>     const int Size = GameClient()->Layers()->Map()->GetDataSize(pLayer->*pLayerPart);
12:52 < bridge> <Solly (bun bun)>     if(Size <= 0 || (size_t)Size < (size_t)pLayer->m_Width * (size_t)pLayer->m_Height * sizeof(TileType))
12:52 < bridge> <Solly (bun bun)>         return nullptr;
12:52 < bridge> <Solly (bun bun)>     return (TileType *)GameClient()->Layers()->Map()->GetData(pLayer->*pLayerPart);
12:52 < bridge> <Solly (bun bun)> };
12:52 < bridge> <Solly (bun bun)> ```
12:52 < bridge> <Solly (bun bun)> guys did i cook
12:56 < bridge> <totar> std::conditional_t :justatest:
12:56 < bridge> <Assa> this looks a lot like my raw function for rendering
12:57 < bridge> <Solly (bun bun)> it dont work x-x
12:57 < bridge> <Solly (bun bun)> i want it to return the the right type so i dont have to
12:57 < bridge> <totar> what's the goal of all the genericness
12:57 < bridge> <Solly (bun bun)> sunk cost fallacy
12:58 < bridge> <Solly (bun bun)> i could just cast at the call site
12:58 < bridge> <Solly (bun bun)> but thats cringe
12:58 < bridge> <totar> I would blindly assume all the layers are the same size
12:59 < bridge> <totar> because they are
12:59 < bridge> <Solly (bun bun)> they arent
12:59 < bridge> <Assa> @sollybunny https://github.com/ddnet/ddnet/blob/6dc8032694e2411ce575201711658cca8101338c/src/game/map/render_layer.cpp#L813
12:59 < bridge> <totar> they arent?
12:59 < bridge> <Solly (bun bun)> CTeleTile is bigger
12:59 < bridge> <totar> what
12:59 < bridge> <Solly (bun bun)> im desperatley tryignt o make the tele tile code look the same as the other 2
12:59 < bridge> <totar> you can teleporters outside the gametile grid?
12:59 < bridge> <totar> you can have teleporters outside the gametile grid?
13:00 < bridge> <Solly (bun bun)> CTile is 4 unsigned chars
13:00 < bridge> <Solly (bun bun)> CTeleTile is 2unsigned chars
13:00 < bridge> <Solly (bun bun)> CTeleTile is 2 unsigned chars
13:00 < bridge> <Solly (bun bun)> idk what padding has to say about that
13:00 < bridge> <totar> oh you mean stride size is different
13:00 < bridge> <Solly (bun bun)> but it doesnt work if i blindly assume they are the same
13:00 < bridge> <Assa> but this means, CTeleTile is smaller and not bigger, because 2 < 4
13:01 < bridge> <Solly (bun bun)> sorry
13:01 < bridge> <Solly (bun bun)> yes u r right
13:01 < bridge> <totar> I would just make a function that handles the stride differences
13:01 < bridge> <Solly (bun bun)> thats what ptr types do
13:01 < bridge> <Solly (bun bun)> but i want it to return a different type dpeending on which index i request
13:01 < bridge> <Solly (bun bun)> which is generics which is not yet supported by cpp
13:02 < bridge> <Solly (bun bun)> `VerifyLayer<&CMapItemLayerTilemap::m_Data>(GameClient()->Layers()->GameLayer());` this isnt valid syntax
13:02 < bridge> <Solly (bun bun)> id have to fall back to macros
13:02 < bridge> <totar> I'm still not fully understanding the motivation behind this
13:02 < bridge> <Solly (bun bun)> it checks the size and returns the right type so i can index into it without worrying about size
13:02 < bridge> <totar> right
13:03 < bridge> <Solly (bun bun)> `VerifyLayer<&CMapItemLayerTilemap::m_Data>(GameClient()->Layers()->GameLayer());`
13:03 < bridge> <Solly (bun bun)> `VerifyLayer<&CMapItemLayerTilemap::m_Data>(GameClient()->Layers()->FrontLayer());`
13:03 < bridge> <Solly (bun bun)> `VerifyLayer<&CMapItemLayerTilemap::m_Data>(GameClient()->Layers()->TeleLayer());`
13:03 < bridge> <Solly (bun bun)> `VerifyLayer<&CMapItemLayerTilemap::m_Tele>(GameClient()->Layers()->TeleLayer());`
13:03 < bridge> <Solly (bun bun)> those are what i want the calls to look like
13:03 < bridge> <Solly (bun bun)> and for it to return CTIle* for all but the last
13:03 < bridge> <totar> why not just hard code the size and pass it around from where you define every type of outline.
13:03 < bridge> <Solly (bun bun)> because thats cringe when types are meant to do that
13:04 < bridge> <Solly (bun bun)> its what im gonna have to do
13:04 < bridge> <Solly (bun bun)> or atleast pass in the size
13:04 < bridge> <Solly (bun bun)> and cast outside
13:04 < bridge> <Assa> the render layers solve this by polymorphism 🤷‍♂️
13:05 < bridge> <robyt3> This is very unreadable
13:05 < bridge> <totar> you want like, reflection I guess right?
13:05 < bridge> <totar> that would make this easy
13:06 < bridge> <Solly (bun bun)> mm if i could put the paramaters into templaets it would work
13:06 < bridge> <Solly (bun bun)> i would prefer constexpr ifs but both dont work anyway
13:06 < bridge> <Solly (bun bun)> i would prefer constexpr ifs but both dont work either
13:06 < bridge> <robyt3> Start by describing the problem instead of your solution
13:08 < bridge> <Solly (bun bun)> i want to get CTile* or CTeleTile* from Layers()->* checking the size and returning the data ptr
13:08 < bridge> <Solly (bun bun)> oh wait
13:08 < bridge> <Solly (bun bun)> if i return an std::function to get x, y -> index that works too
13:08 < bridge> <Solly (bun bun)> no generics required
13:09 < bridge> <Solly (bun bun)> ermm
13:09 < bridge> <robyt3> That, and checking the size when returning the pointer is the wrong approach
13:09 < bridge> <Solly (bun bun)> why, i dont want everything to be rwapped in checks
13:09 < bridge> <robyt3> The map should only have to be validated once when loading
13:09 < bridge> <robyt3> After that, you don't need validation anymore
13:10 < bridge> <Solly (bun bun)> well everywhere else its used its validated
13:10 < bridge> <Solly (bun bun)> eg collision
13:10 < bridge> <Solly (bun bun)> ```cpp
13:10 < bridge> <Solly (bun bun)> if(m_pLayers->TeleLayer())
13:10 < bridge> <Solly (bun bun)> {
13:10 < bridge> <Solly (bun bun)>     unsigned int Size = m_pLayers->Map()->GetDataSize(m_pLayers->TeleLayer()->m_Tele);
13:10 < bridge> <Solly (bun bun)>     if(Size >= (size_t)m_Width * m_Height * sizeof(CTeleTile))
13:10 < bridge> <Solly (bun bun)>         m_pTele = static_cast<CTeleTile *>(m_pLayers->Map()->GetData(m_pLayers->TeleLayer()->m_Tele));
13:10 < bridge> <Solly (bun bun)> }
13:10 < bridge> <Solly (bun bun)> ```
13:10 < bridge> <totar> you could add the size as part of the type itself right?
13:10 < bridge> <totar> ``constexpr m_Size = sizeof(CTeleTile);``
13:11 < bridge> <robyt3> That's how the code ended up being written. Doesn't really make it the correct approach if the problem you are trying to solve is "add proper map validation".
13:11 < bridge> <Solly (bun bun)> im sunk cost fallacying whilst rewriting outlines in tclient
13:11 < bridge> <Solly (bun bun)> but yes i would rather i didnt have to do validation
13:14 < bridge> <robyt3> I wouldn't waste effort trying to reduce duplicated code and logic if it makes it very unreadable instead. Looks like `CCollision` already validates its members, so you could use those instead of `CLayers`.
13:14 < bridge> <Solly (bun bun)> thats a bit wack
13:14 < bridge> <totar> that's a good idea
13:14 < bridge> <Solly (bun bun)> 2v1 okay xd
13:14 < bridge> <Solly (bun bun)> but dependning on collision is weird
13:15 < bridge> <totar> ok maybe
13:15 < bridge> <totar> but there's not any non collision layers we want to outline atm?
13:15 < bridge> <Solly (bun bun)> non
13:16 < bridge> <Assa> I wonder if you could do outlines with a shader :p hrr
13:16 < bridge> <robyt3> A slightly cleaner would be to move the validation from `CCollision` to `CLayers`, because the former also depends on the latter.
13:16 < bridge> <robyt3> A slightly cleaner approach would be to move the validation from `CCollision` to `CLayers`, because the former also depends on the latter.
13:16 < bridge> <totar> yes, you could
13:17 < bridge> <totar> which isn't to say that we should
13:17 < bridge> <Assa> nono, I mean if **you** could :p
13:17 < bridge> <Solly (bun bun)> the old collision code requires the data and tele index of the tele layer which collision doesnt which is slightly confusing
13:17 < bridge> <Solly (bun bun)> the old outline code requires the data and tele index of the tele layer which collision doesnt which is slightly confusing
13:17 < bridge> <Solly (bun bun)> maybe it was magic that somehow worked the same as collision does now
13:18 < bridge> <Solly (bun bun)> and ive been tryign to accomodate it despite it not being required
13:18 < bridge> <totar> I'm pretty sure it's just doing an existence check
13:18 < bridge> <Solly (bun bun)> TeleLayer()->m_Data and m_Tele are used
13:18 < bridge> <Solly (bun bun)> oh its all private in collsion
13:18 < bridge> <Solly (bun bun)> aduh
13:19 < bridge> <totar> I think it was to distinguish between tele in and tele out
13:20 < bridge> <Solly (bun bun)> i guess collision desont care about tele out
13:22 < bridge> <totar> I would be surprised if collision is completely unaware of teleout
13:23 < bridge> <pluskz> Lol kaizo network feature being ported to ddnet
13:24 < bridge> <totar> ok maybe you're right
13:27 < bridge> <totar> it doesn't provide a way to distinguish them other than just using the tele layer directly
14:27 < bridge> <Assa> hmm ivec3 distance already breaks at ivec3(431, 431, 431)  🤔
15:09 < bridge> <Assa> hmm the PR list doesn't look too bad tbh, we have many PRs ready just waiting for other mainteiners to review or simply press merge
15:16 < bridge> <kebscs> https://github.com/ddnet/ddnet/pull/10529
15:16 < bridge> <kebscs> this would be nice to have a review
15:17 < bridge> <kebscs> most likely is ready
15:19 < bridge> <Assa> I'll give it another look 🙂
15:20 < bridge> <Assa> @kebscs what is
15:20 < bridge> <Assa> ```
15:20 < bridge> <Assa> NetEventEx("TargetHit:Common", "targethit@netevent.ddnet.org", [
15:20 < bridge> <Assa>         NetBool("m_Weakly"),
15:20 < bridge> <Assa>     ]),
15:20 < bridge> <Assa> ```
15:20 < bridge> <Assa> 
15:20 < bridge> <Assa> for?
15:20 < bridge> <Assa> if you say "sound", can you guess what's missing?
15:21 < bridge> <Assa> if you say "sound" or "particles", can you guess what's missing?
15:23 < bridge> <kebscs> havent seen it, must be newly added by louis
15:23 < bridge> <ryozuki> @learath2 u like intrusive lists as a ' enjoyer right
15:24 < bridge> <ryozuki> ill have to use then for my ready queue since having allocs in scheduler at irq is bad
15:24 < bridge> <ryozuki> @learath2 u like intrusive lists as a C enjoyer right
15:33 < bridge> <learath2> Yep, embrace intrusiveness
15:48 < bridge> <milkeeycat> chillerdragon: why is the linter not in bash? :feelsbadman:
15:58 < ws-client> **<ChillerDragon>** @milkeeycat I almost wrote parts of it in bash just to trigger heinrich xd
15:58 < ws-client> **<ChillerDragon>** but then i had so much fun with C already
15:59 < ws-client> **<ChillerDragon>** also C has better bindings for libclang than bash lel
15:59 < bridge> <milkeeycat> chillerdragon: it's time to fix it
15:59 < bridge> <Assa> chiller should I compile a list of PRs you may merge for you?
15:59 < bridge> <Assa> chiller should I compile a list of PRs you may merge for you? (excluding my own)
16:00 < ws-client> **<ChillerDragon>** yea no joke i thought about writing a minimal cli in C for libclang wrap and the rest in bash xd @milkeeycat but nonono
16:00 < ws-client> **<ChillerDragon>** @Assa i think i am kinda aware of all open prs 
16:01 < ws-client> **<ChillerDragon>** not a single one of them is a free merge for me. Execept of course 20 of my epic prs.
16:02 < bridge> <Assa> all 90
16:03 < bridge> <Assa> Excuse me, 87 ofc
16:05 < bridge> <Assa> @chillerdragon what about 10824 ?
16:09 < ws-client> **<ChillerDragon>** hm idk
16:20 < bridge> <Solly (bun bun)> @robyt3 how do i overwrite all the skin information at once, the old way of just setting g_Config now segfaults
16:20 < bridge> <Solly (bun bun)> trying to do it via command is not atomic
16:47 < bridge> <Teero> well its a start at least xD
16:47 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1417159841083818096/2025-09-15_16-46-06.mp4?ex=68c97873&is=68c826f3&hm=452d139d38ad6719b37d0234f5f14ac7577457f0125289e5d93c2c3625ebb7ee&
16:59 < ws-client> **<ChillerDragon>** @Teero how do you render?
16:59 < ws-client> **<ChillerDragon>** is it pure C rewrite?
16:59 < ws-client> **<ChillerDragon>** SDL?
17:00 < bridge> <Teero> yes, C+vulkan+glfw
17:00 < bridge> <Teero> and imgui for UI
17:19 < bridge> <Jupstar ✪> ddnet-c
17:40 < bridge> <Teero> @jupeyy_keks feet fetish?
17:40 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1417173233496752321/2025-09-15_17-40-04.mp4?ex=68c984ec&is=68c8336c&hm=3796bd44fb28c0df1c9f26d8c3f0f88732b2890bfb194cea5c478fc6e7b36e71&
17:45 < bridge> <Solly (bun bun)> WE NEED /DANCE
17:45 < bridge> <Teero> xD
17:45 < bridge> <Solly (bun bun)> that would be fucking epic
17:45 < bridge> <Solly (bun bun)> sadly its fun and ddnet would reject
17:50 < bridge> <manikoo> :poggers2:
17:52 < bridge> <Teero> im so fucking confused rn
17:53 < bridge> <inv41idu53rn4m3> Extra epic: allow arbitrary emote animations dictated by the client, so clients can add their own
17:56 < bridge> <Solly (bun bun)> i think someone did ip/tcp thru emotes
17:57 < bridge> <ramirok_> He for a second make the:
17:57 < bridge> <ramirok_> https://cdn.discordapp.com/attachments/293493549758939136/1417177613566345317/image0.gif?ex=68c98900&is=68c83780&hm=c36b1b312cbfce75e30371dc83668922e9e7d4eb59b06653f5668d01e9e0ed0d&
18:01 < chillerbot12> Elo @Assa I just wanted to remind you that: review target sounds
18:16 < ws-client> **<ChillerDragon>** @Teero ur gigachad ngl. I wish the legit stuff would be open source. And i actually quite dislike that you work on tas ._. imo it devalues clips farmed by real humans and is basically cheating.
18:28 < bridge> <louis> idk bout dat if its done nicely
18:28 < bridge> <louis> extension on emote wheel to start an animation would be sick
18:29 < bridge> <Solly (bun bun)> idk if we have the full int for emotes
18:29 < bridge> <Solly (bun bun)> or if the server clamps them
18:30 < bridge> <Assa> so far I like this one the most, the click is neat, can you make the click louder?
