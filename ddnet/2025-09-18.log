00:02 < bridge> <kebscs> some maps use it
00:09 < bridge> <louis> chillerdragon: do u still play ?
00:15 < bridge> <soulyvevo> i sometimes see chiller on kog
01:07 < bridge> <totar> some new AI results from coding competition, openai destroyed deepmind lol, and solved the problem that none of the human teams got.
01:07 < bridge> <totar> https://cdn.discordapp.com/attachments/293493549758939136/1418010429552070707/G1EF-ega0AAm9Ie-1.jpg?ex=68cc909f&is=68cb3f1f&hm=84fb5936664d638e680acd46d18a5b38c7066e59f1a64609b900c47eccf86fa2&
01:07 < bridge> <totar> https://cdn.discordapp.com/attachments/293493549758939136/1418010429887877161/unnamed.webp?ex=68cc909f&is=68cb3f1f&hm=c1963a8b5f0d5166c7ac20988363b9b5de667abafabbde770284487aab186c6b&
01:07 < bridge> <totar> https://cdn.discordapp.com/attachments/293493549758939136/1418010430231806013/image.png?ex=68cc909f&is=68cb3f1f&hm=1dfeda98ed0d1cff607435ec2b3b408ebdfb641750c54ba9893dcaa79f7168fe&
01:10 < bridge> <8_9z> how can i dawnload kog maps??
01:11 < bridge> <8_9z> https://cdn.discordapp.com/attachments/293493549758939136/1418011382233956473/IMG_20250918_020955.jpg?ex=68cc9182&is=68cb4002&hm=a75626de89e60a89ee80daaae07e270edd8597adca73eec895ac22b445041d4c&
01:11 < bridge> <totar> $kog
01:12 < bridge> <totar> to be fair to the human teams, they have 3 people with 1 laptop, with a time limit to solve 12 problems. So it's kinda embarrassing that google couldn't beat them.
01:15 < bridge> <totar> apparently just regular GPT5 solved 11/12 problems, but they had to use "special model" for the hard one.
01:18 < bridge> <louis> zamn
01:23 < bridge> <inv41idu53rn4m3> How many instances of GPT were they competing against?
01:23 < bridge> <totar> the humans you mean?
01:24 < bridge> <inv41idu53rn4m3> yeah I'm wondering if there were multiple bots running in parallel
01:24 < bridge> <totar> the humans weren't competing with the AIs directly
01:24 < bridge> <inv41idu53rn4m3> oh ok
01:24 < bridge> <totar> it's not like the 1st place human team lost because openai did better than them
01:24 < bridge> <inv41idu53rn4m3> I've seen a couple of these competitions with AI specific categories
01:25 < bridge> <inv41idu53rn4m3> where they do compete in parallel
01:25 < bridge> <totar> but from what they've said I'm presuming they did all 12 problems in parallel because why wouldn't they, not that it really matters because you can just add up all the times to figure out how long it would take if they did it sequentially.
01:25 < bridge> <totar> they still win sequentially
01:26 < bridge> <Teero> yo
01:29 < bridge> <totar> they're very light on the details but from what they've said it *sounds* like for each problem they probably had many many instances of GPT5 with super long resoning budget to solve it, and then they had another model look at all the solutions that those made to pick one to submit
01:29 < bridge> <totar> they're very light on the details but from what they've said it *sounds* like for each problem they probably had many many instances of GPT5 with super long reasoning budget to solve it, and then they had another model look at all the solutions that those made to pick one to submit
01:30 < bridge> <Teero> I played minesweeper all day and didn't do shit. What do I do
01:32 < bridge> <Solly (bun bun)> https://www.theblackbox.games/
01:33 < bridge> <louis> should compare with the total number of tokens somehow
01:38 < bridge> <totar> I think counting tokens is a bad way to think about it. It's a black box that takes a certain amount of compute and time to give an answer. You shouldn't care about how it gets there other than the time and compute it takes.
01:40 < bridge> <pioooooo> Just compare energy consumption and lose against ppl
01:41 < bridge> <totar> idk
01:41 < bridge> <louis> eeh, but then comparing against humans is kinda not useful imo
01:41 < bridge> <totar> burgers take a lot of energy
01:41 < bridge> <louis> its impressive that they were able to solve all 12 problems though
01:42 < bridge> <totar> people said comparing chess AI to humans wasn't fair because the chess AI didn't really understand how to play chess, it just brute forces a lot of positions.
01:43 < bridge> <louis> true
01:44 < bridge> <louis> hm i guess i'm trying to say comparisons like that sometimes feel misleading like they're trying to say gpt5 can think better than a human expert
01:46 < bridge> <totar> I mean again, this was a hard format for the humans, it's also *just* the smartest university students in the world. not the smartest competitive programmers, who are significantly better.
01:47 < bridge> <louis> oh wait is that true
01:47 < bridge> <louis> im not really tapped into the competitive programming world
01:48 < bridge> <totar> make no mistake tho, there's probably less than 20 humans who can actually solve competitive programming problems that the best models can't do with ultimate resources
01:48 < bridge> <louis> also i wonder what the special model looks like xd
01:49 < bridge> <Solly (bun bun)> if ai can do all of this whern can it make me a goddamn sandwhich
01:50 < bridge> <totar> I'd guess that it's fundamentally similar to GPT5, but just their next training run that they haven't published yet, or they mixed in more competitive programming/math problems than the regular GPT5. They're all just iteratively improved versions of the idea that they had with o1
01:50 < bridge> <totar> GPT is really just o5
01:50 < bridge> <Solly (bun bun)> if ai can do all of this whern can it make me a goddamn sandwhich
01:50 < bridge> <Solly (bun bun)> (<https://www.youtube.com/watch?v=r5A57cKMT8k>)
01:50 < bridge> <totar> GPT5 is really just o5
01:51 < bridge> <Solly (bun bun)> insert a circle in the traingle factory but its all the gpt versions and theyre not evne on the conveyer belt theyre just there
01:52 < bridge> <totar> https://cdn.discordapp.com/attachments/293493549758939136/1418021810863214592/image.png?ex=68cc9b39&is=68cb49b9&hm=274ab5589b96077dd0722a27416178226e8310d2b8e284690b0e0a4094b8ca41&
01:58 < bridge> <totar> also I saw someone say that the reason none of the teams solved problem 3 was not because they couldn't but because it's a really time consuming problem that requires a lot of code, so they all skipped it. but the LLMs can write 1k loc in a few seconds so they had an advantage.
01:59 < bridge> <totar> the actual hardest problem had a few human solves
02:03 < bridge> <pioooooo> Simulation problems
02:05 < bridge> <fellapapi> can any dev help me?
02:05 < bridge> <fellapapi> https://discord.com/channels/252358080522747904/342454474117218334/1418024244826210367
02:05 < bridge> <fellapapi> i tried to do it myself
02:05 < bridge> <fellapapi> failed miserably
02:07 < bridge> <Teero> I love gambling
02:07 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1418025666338623601/image0.png?ex=68cc9ed0&is=68cb4d50&hm=05efa6898e16b144ad4632348a7a40ea8753b0901dd218f547a4847bae9cd63c&
02:28 < bridge> <Teero> I'm so stupid I could've just checked how many bombs were left
03:44 < bridge> <peter0x44> I have never done competitive programming but it seems like a somewhat useless pursuit to me
03:44 < bridge> <peter0x44> I saw the libstdc++ maintainer complaining about some data structure library he wants to deprecate and the only people complaining about it are competitive programmers who need it to fit in some rules about what tools preinstalled that you are allowed to use
03:55 < bridge> <totar> I mean it's kind of objectively useless if you isolate just the task of competitive programming, it's not like they're creating something useful. It's a sport, or game, however you want to call it.
04:27 < bridge> <Teero> I will competitively sleep now gn
04:31 < bridge> <Teero> @jupeyy_keks quick question. If I upload a texture to the gpu is there a way to update single pixels without reuploading the whole texture? I feel like I have asked this before but I forgot the answer.
04:33 < bridge> <blazulite> same
04:33 < bridge> <Ewan> not rly that's why it's hard
04:34 < bridge> <peter0x44> glTexSubImage2D is how you do it in opengl
04:34 < bridge> <peter0x44> I still think it's quite slow and not recommended
04:35 < bridge> <Ewan> I'm almost positive that's because it converts it back to "software form" for alteration
04:36 < bridge> <Ewan> best analogy I have is SDL_Surface vs SDL_Texture
04:37 < bridge> <Ewan> the former's image data lives in CPU managed memory and it worked in by the CPU, the latter will only hold a handle
04:38 < bridge> <Ewan> the former's image data lives in PU managed memory and is worked on by the CPU, the latter will only hold a handle
04:38 < bridge> <Ewan> the former's image data lives in CPU managed memory and is worked on by the CPU, the latter will only hold a handle
04:38 < bridge> <peter0x44> yes and I think most APIs also have the notion of an "immutable texture" that you cannot change
04:39 < bridge> <peter0x44> that's the difference between glTexStorage and glTexImage
04:39 < bridge> <peter0x44> apparently it helps some things work faster if the GPU knows you cannot write the texture
04:39 < bridge> <peter0x44> that's the difference between glTexStorage and glTexImage I think
04:39 < bridge> <peter0x44> apparently it helps some things work faster if the GPU knows you cannot write the texture
04:39 < bridge> <Ewan> definitely
04:40 < bridge> <peter0x44> probably varies across different APIs too opengl exposes some weird stuff more modern APIs don't try to do because it's not performant or transparent enough
04:44 < bridge> <Ewan> that just exists on a spectrum relating to openGL version tbh
04:46 < bridge> <Ewan> i think most simple programs would be performant in modern OpenGL as vulkan if they were managing their resources and shaders the same way as GL does in vulkan
04:47 < bridge> <Ewan> the difference just exists in the level of control they give you, so vulkan has the potential to be more performant but the latest open GLversion is probably gonna have all of the same features which don't rely on that explicitness to be worthwhile
04:48 < bridge> <Ewan> i think most simple programs would be equally performant in modern OpenGL as vulkan if they were managing their resources and shaders the same way as GL does in vulkan
04:48 < bridge> <Ewan> i think most simple programs would be equally performant in modern OpenGL as vulkan if they were managing their resources and shaders the same way as GL does within their vulkan code
04:49 < bridge> <Ewan> i bet there's a marginally less slow way to do it vulkan specific lol
05:16 < bridge> <totar> You could upload the pixels you want to change to the gpu in a small buffer and then use a compute shader to modify the texture.
05:16 < bridge> <totar> If you really need it to live in gpu memory
07:42 < bridge> <Jupstar ✪> Sure, but if the texture is in use you have to expect race race conditions
07:48 < bridge> <chillerdragon> @louis.place: @soulyvevo I play Teeworlds an average of 4 hours a day I would say. I played less when I started playing. And I took a 1 year break in 2024 but not by choice. I would call my self quite active!
07:49 < bridge> <chillerdragon> It’s all about the game
08:09 < bridge> <cellegenrih> -^ Tested out on Nightly.
08:16 < bridge> <Ewan> gm nix users have you ever experienced nixos-rebuild taking over 90GB at multiple points throughout evaluation (frees between) only for it to segfault?
08:17 < bridge> <cellegenrih> :justatest: 90gbs?
08:17 < bridge> <cellegenrih> the segfault is like the icing on the cake
08:17 < bridge> <Ewan> 64 of real memory, 24GB of swap
08:18 < bridge> <Ewan> previously the build ended thanks to the OOM killer so I closed everything else
08:18 < bridge> <Ewan> I even have zram enabled
08:18 < bridge> <cellegenrih> zamn
08:19 < bridge> <Ewan> seems like it has to be a bug but the fact it survives and goes back down in memory usage makes it non obvious
08:20 < bridge> <Ewan> unless the nix process garbage collects itself but that'd be crazy and kinda gross considering it's just c++
08:20 < bridge> <Ewan> I tried nh but obviously I can't do everything needed as my user, so I need to elevate
08:21 < bridge> <Ewan> I usually elevate nixos-rebuild with sudo but nh insists you call it as your user and it will handle calls to sudo
08:21 < bridge> <Ewan> but it just misses one and the build fails anyway
08:21 < bridge> <Ewan> permission denied
08:22 < bridge> <cellegenrih> ngl that's some black magic shit for me lmao
08:22 < bridge> <cellegenrih> I have a friend who nags about me trying out Nixos to get more familiar with c++ but what you mentioned now actually discourages me lmao
08:22 < bridge> <cellegenrih> :kek:
08:23 < bridge> <Ewan> well nixos has been the most predictable OS I've had to date
08:24 < bridge> <Ewan> it's obvious unable to fix a lot of issues with linux itself but compared to other distros it seems to have the best set of packages maybe ever
08:24 < bridge> <ryozuki> kek
08:24 < bridge> <ryozuki> gentoo ftw
08:25 < bridge> <Ewan> and if it's not yet up to date in the unstable channel, you can often very easily specify an exact version
08:25 < bridge> <ryozuki> morning
08:25 < bridge> <Ewan> gm
08:25 < bridge> <cellegenrih> mornin ☕
08:25 < bridge> <Ewan> a nixos-rebuild takes a lot more time compared to the package upgrade & reboot most distros have
08:26 < bridge> <Ewan> but I definitely do not have the patience to emerge as often as I uld need to
08:26 < bridge> <Ewan> but I definitely do not have the patience to emerge as often as I would need to
08:26 < bridge> <ryozuki> u know what i do?
08:26 < bridge> <ryozuki> i run a script that updates and then shuts down
08:26 < bridge> <ryozuki> i run it when i go to sleep
08:27 < bridge> <Ewan> my PC is loud and ~2m from my head when in bed
08:27 < bridge> <Ewan> gotta have it off
08:27 < bridge> <ryozuki> well atleast i dont get segfaults
08:27 < bridge> <cellegenrih> or the lazier way, autorun it on startup
08:27 < bridge> <Ewan> yea
08:27 < bridge> <ryozuki> :justatest:
08:27 < bridge> <ryozuki> no, that doesnt make any sense?
08:27 < bridge> <cellegenrih> xd
08:28 < bridge> <Ewan> u should recognize tho it is equally likely for a segfault to slip into emerge, as it's c afaik
08:28 < bridge> <cellegenrih> ik, cuz you must reboot in order to have changes apply
08:28 < bridge> <cellegenrih> but like, do I manually run it? xdd
08:28 < bridge> <Ewan> nix is a pretty complicated process in comparison
08:28 < bridge> <ryozuki> no brother.. its because i want to use my pc not compile
08:28 < bridge> <cellegenrih> oh, wait it compiles? uuugh
08:28 < bridge> <ryozuki> ok im out
08:28 < bridge> <Ewan> it takes a very long time
08:28 < bridge> <cellegenrih> suddenly it reminds me of what I do in Rust
08:28 < bridge> <ryozuki> cya later
08:28 < bridge> <Ewan> cya
08:28 < bridge> <ryozuki> icant
08:29 < bridge> <Ewan> until recently you had to compile every single thing from scratch, excepting the kernel if you were lazy
08:29 < bridge> <Ewan> anything that's changed gets recompiled on update
08:29 < bridge> <cellegenrih> yep
08:30 < bridge> <Ewan> there is no partial build cache for basing it only off changes either, afaik it has to be a fresh rebuild every single time
08:31 < bridge> <cellegenrih> I mean, on release mode it makes sense
08:31 < bridge> <Ewan> there's also no uniform way to do that plus it might not have great returns
08:33 < bridge> <cellegenrih> well without trying to restructure... cargo, you have no other ways to speed up compilation, unless you either just abandon libraries and make your own, or some black magic that I don't know of yet
08:33 < bridge> <Ewan> tbh the nixos-rebuild && systemctl poweroff is fairly common for me
08:34 < bridge> <cellegenrih> isn't there a queue on what to run before it powers off?
08:34 < bridge> <Ewan> I'm still talking about nix but I will acknowledge that rust build times are pretty bad
08:35 < bridge> <cellegenrih> oh kek
08:35 < bridge> <Ewan> not as slow as many super modern cpp features will make it tho
08:35 < bridge> <cellegenrih> after experiencing ddnet-rs, I can confirm
08:35 < bridge> <Ewan> and rustis inherently complicated to compile
08:35 < bridge> <cellegenrih> it's slow
08:36 < bridge> <Ewan> think about all the extra evaluation logic and hyper specific parsing errors u get in rust
08:36 < bridge> <cellegenrih> I bet without all the safety features that overhead the compilations, I would have errors on 90% of my workspace
08:37 < bridge> <Ewan> agreed
08:37 < bridge> <cellegenrih> But like, what if you don't want that? xd
08:37 < bridge> <Ewan> if your only experience beforehand is in interpreted languages then I can understand the pain but compared to langs like C where the compiler gives so much less of a shit it's logical
08:37 < bridge> <Ewan> u can use unsafe blocks or..... another language
08:38 < bridge> <cellegenrih> I could
08:38 < bridge> <cellegenrih> But like
08:38 < bridge> <cellegenrih> Rust :kek:
08:38 < bridge> <Ewan> rust is architectured around it's safety features
08:38 < bridge> <Ewan> rust is architectured around its safety features
08:39 < bridge> <Ewan> Gboard smart enough to log every keystroke for the NSA but not smart enough not to autocorrect "its" to "it's" when it's grammatically incorrect
08:39 < bridge> <cellegenrih> Google services in a nutshell
08:40 < bridge> <cellegenrih> Btw, about the map editor issue I reported, who made changes with Destructive Mode?
08:44 < bridge> <ryozuki> its still mostly on llvm tho
08:44 < bridge> <ryozuki> its just that rust has a compile the world model
08:44 < bridge> <Ewan> I don't think clangs are so bad
08:44 < bridge> <ryozuki> cpp uses shared libs
08:44 < bridge> <Ewan> yea
08:45 < bridge> <Ewan> most of that can be cached or vendored but the former is fragile and the latter is more setup
08:45 < bridge> <ryozuki> also by using the compile the world model rust has local lto always
08:45 < bridge> <Ewan> yea they call it PGO when in cpp compilers they are technically not the same term
08:46 < bridge> <ryozuki> im not talking about pgo
08:46 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1418125947818737675/image.png?ex=68ccfc35&is=68cbaab5&hm=8e48817db006131bf65c33106c54b0e77c79ea67b3df15965811dabf0485337f&
08:46 < bridge> <ryozuki> even with debug / off u have a local lto
08:46 < bridge> <ryozuki> false
08:46 < bridge> <ryozuki> even with false u have a local lto
08:46 < bridge> <ryozuki> omg i cant type
08:47 < bridge> <ryozuki> ok the local lto is only within the crate
08:48 < bridge> <ryozuki> i would like to see a firefox in rust to compare compile time
08:48 < bridge> <ryozuki> firefox has to use jumbo builds to improve compile time
08:48 < bridge> <Ewan> hopefully that means they're constexpring everything
08:49 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1418126718010396682/image.png?ex=68ccfced&is=68cbab6d&hm=9643c6beaaa74574a579001e98c7b00f9fc1a0f3df30b9140d77b4b374927032&
08:50 < bridge> <Ewan> I didn't know about that but it makes sense
08:50 < bridge> <Ewan> would not be necessary with modules
08:59 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1418129229224349738/IMG_9234.jpg?ex=68ccff43&is=68cbadc3&hm=1a39884dd54870b6140e1b19c45c460183e035f3b33b3abd5b38a5cd1e4ca348&
08:59 < bridge> <Ewan> delightful
09:42 < bridge> <Teero> morming
09:43 < bridge> <Ewan> nornimg
09:47 < ws-client> **<ChillerDragon>** @robyt3 can you explain this code? then i can send merge https://github.com/ddnet/ddnet/pull/10937/files#diff-523c7cb184ab750e026099047cf54bd74271130410325fabf89e78ad38ed8112R57-R65
09:47 < ws-client> **<ChillerDragon>** i understand `if(Length > 0)`
09:48 < ws-client> **<ChillerDragon>** a it checks if it ends in newline to avoid doing double newline because `log_log` also adds a newline
09:50 < ws-client> **<ChillerDragon>** i wonder if this can be moved to str.cpp but i dont think so
09:50 < ws-client> **<ChillerDragon>** ruby has a method that does exactly that its called `chomp`
09:51 < ws-client> **<ChillerDragon>** ``"foo".chomp # => "foo"``
09:51 < ws-client> **<ChillerDragon>** ``"foo\n".chomp # => "foo" ``
09:51 < ws-client> **<ChillerDragon>** ``"foo\n\n".chomp # => "foo\n"``
09:57 < ws-client> **<ChillerDragon>** also whats the state on these bois holding me back from receiving ungodly amounts of donation money https://github.com/ddnet/ddnet/pull/10892 https://github.com/ddnet/ddnet/pull/10836 https://github.com/ddnet/ddnet/pull/10827 https://github.com/ddnet/ddnet/pull/10793
10:06 < bridge> <Teero> llm says
10:06 < bridge> <Teero> > Key Steps for Buffer-to-Image Copy (most common for CPU-driven updates):
10:06 < bridge> <Teero> Allocate a staging buffer and map it.
10:06 < bridge> <Teero> Write your pixel data to the buffer (e.g., for a single pixel, write the RGBA values at the correct offset).
10:06 < bridge> <Teero> Record a command buffer:
10:06 < bridge> <Teero> Transition the texture to VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL.
10:06 < bridge> <Teero> Use vkCmdCopyBufferToImage with a VkBufferImageCopy specifying the target region (e.g., imageOffset for the pixel’s x, y, z coordinates and imageExtent for a 1x1x1 region).
10:06 < bridge> <Teero> Transition the texture back to its original layout.
10:06 < bridge> <Teero> Submit the command buffer to the queue.
10:06 < bridge> <Teero> 
10:06 < bridge> <Teero> I was thinking of how I would do minetee.
10:06 < bridge> <Assa> > Thanks for not calling it a feature
10:06 < bridge> <Assa> Lmao, you should thank me for not calling it shit ugly spaghetti code
10:07 < bridge> <Teero> llm says
10:07 < bridge> <Teero> > Key Steps for Buffer-to-Image > > Copy (most common for CPU-driven updates):
10:07 < bridge> <Teero> > Allocate a staging buffer and map it.
10:07 < bridge> <Teero> > Write your pixel data to the buffer (e.g., for a single pixel, write the RGBA values at the correct offset).
10:07 < bridge> <Teero> > Record a command buffer:
10:07 < bridge> <Teero> Transition the texture to VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL.
10:07 < bridge> <Teero> > Use vkCmdCopyBufferToImage with a VkBufferImageCopy specifying the target region (e.g., imageOffset for the pixel’s x, y, z coordinates and imageExtent for a 1x1x1 region).
10:07 < bridge> <Teero> Transition the texture back to its original layout.
10:07 < bridge> <Teero> Submit the command buffer to the queue.
10:07 < bridge> <Teero> 
10:07 < bridge> <Teero> I was thinking of how I would do minetee.
10:07 < bridge> <Teero> llm says
10:07 < bridge> <Teero> > Key Steps for Buffer-to-Image > > Copy (most common for CPU-driven updates):
10:07 < bridge> <Teero> > Allocate a staging buffer and map it.
10:07 < bridge> <Teero> > Write your pixel data to the buffer (e.g., for a single pixel, write the RGBA values at the correct offset).
10:07 < bridge> <Teero> > Record a command buffer:
10:07 < bridge> <Teero> > Transition the texture to VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL.
10:07 < bridge> <Teero> > Use vkCmdCopyBufferToImage with a VkBufferImageCopy specifying the target region (e.g., imageOffset for the pixel’s x, y, z coordinates and imageExtent for a 1x1x1 region).
10:07 < bridge> <Teero> Transition the texture back to its original layout.
10:07 < bridge> <Teero> Submit the command buffer to the queue.
10:08 < bridge> <Teero> 
10:08 < bridge> <Teero> I was thinking of how I would do minetee.
10:08 < bridge> <Teero> llm says
10:08 < bridge> <Teero> > Key Steps for Buffer-to-Image  Copy (most common for CPU-driven updates):
10:08 < bridge> <Teero> > Allocate a staging buffer and map it.
10:08 < bridge> <Teero> > Write your pixel data to the buffer (e.g., for a single pixel, write the RGBA values at the correct offset).
10:08 < bridge> <Teero> > Record a command buffer:
10:08 < bridge> <Teero> > Transition the texture to VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL.
10:08 < bridge> <Teero> > Use vkCmdCopyBufferToImage with a VkBufferImageCopy specifying the target region (e.g., imageOffset for the pixel’s x, y, z coordinates and imageExtent for a 1x1x1 region).
10:08 < bridge> <Teero> Transition the texture back to its original layout.
10:08 < bridge> <Teero> Submit the command buffer to the queue.
10:08 < bridge> <Teero> 
10:08 < bridge> <Teero> I was thinking of how I would do minetee.
10:08 < bridge> <Teero> llm says
10:08 < bridge> <Teero> > Key Steps for Buffer-to-Image Copy (most common for CPU-driven updates):
10:08 < bridge> <Teero> > Allocate a staging buffer and map it.
10:08 < bridge> <Teero> > Write your pixel data to the buffer (e.g., for a single pixel, write the RGBA values at the correct offset).
10:08 < bridge> <Teero> > Record a command buffer:
10:08 < bridge> <Teero> > Transition the texture to VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL.
10:08 < bridge> <Teero> > Use vkCmdCopyBufferToImage with a VkBufferImageCopy specifying the target region (e.g., imageOffset for the pixel’s x, y, z coordinates and imageExtent for a 1x1x1 region).
10:08 < bridge> <Teero> Transition the texture back to its original layout.
10:08 < bridge> <Teero> Submit the command buffer to the queue.
10:08 < bridge> <Teero> 
10:08 < bridge> <Teero> I was thinking of how I would do minetee.
10:08 < bridge> <Assa> What motivates me to do PRs?
10:08 < bridge> <Assa> 1. Read some code
10:08 < bridge> <Assa> 2. Almost get a heart attack
10:08 < bridge> <Assa> 3. fix/refactor/optimize
10:09 < bridge> <Teero> llm says
10:09 < bridge> <Teero> > Key Steps for Buffer-to-Image Copy (most common for CPU-driven updates):
10:09 < bridge> <Teero> > Allocate a staging buffer and map it.
10:09 < bridge> <Teero> > Write your pixel data to the buffer (e.g., for a single pixel, write the RGBA values at the correct offset).
10:09 < bridge> <Teero> > Record a command buffer:
10:09 < bridge> <Teero> > Transition the texture to VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL.
10:09 < bridge> <Teero> > Use vkCmdCopyBufferToImage with a VkBufferImageCopy specifying the target region (e.g., imageOffset for the pixel’s x, y, z coordinates and imageExtent for a 1x1x1 region).
10:09 < bridge> <Teero> > Transition the texture back to its original layout.
10:09 < bridge> <Teero> > Submit the command buffer to the queue.
10:09 < bridge> <Teero> 
10:09 < bridge> <Teero> I was thinking of how I would do minetee.
10:10 < bridge> <Ewan> why post llm output slop
10:13 < bridge> <ryozuki> https://webassembly.org/news/2025-09-17-wasm-3.0/
10:15 < bridge> <ryozuki> With these new features, Wasm has much better support for compiling high-level programming languages. Enabled by this, we have seen various new languages popping up to target Wasm, such as Java, OCaml, Scala, Kotlin, Scheme, or Dart, all of which use the new GC feature.
10:15 < bridge> <ryozuki> 64-bit address space. Memories and tables can now be declared to use i64 as their address type instead of just i32. That expands the available address space of Wasm applications from 4 gigabytes to (theoretically) 16 exabytes, to the extent that physical hardware allows. While the web will necessarily keep enforcing certain limits — on the web, a 64-bit memory is limited to 16 gigabytes — the new flexibility is especially interesting for non-we
10:15 < bridge> <ryozuki> finally
10:15 < bridge> <ryozuki> when we will see the end of js
10:21 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1418149869037686814/image.png?ex=68cd127c&is=68cbc0fc&hm=0d3c194d917960fadb010f9bdbf8bdcbae47fc6ee8ef9d32d747c720865925a2&
10:21 < bridge> <ryozuki> xd
10:22 < bridge> <Ewan> wtf how
10:22 < bridge> <ryozuki> ?
10:22 < bridge> <Ewan> device 9999 guid 060606
10:23 < bridge> <ryozuki> ah thats my fake partition
10:23 < bridge> <ryozuki> its a memory filesystem
10:23 < bridge> <Ewan> oh xd
10:23 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1418150376087228437/image.png?ex=68cd12f5&is=68cbc175&hm=c3127a5be22606255440fe2f360ca0bb1b4fdd2181ab06b361290d4a8db6920d&
10:23 < bridge> <ryozuki> 1p0 means device 1 partition 0
10:23 < bridge> <Ewan> rly I've never used linux
10:23 < bridge> <ryozuki> dev 0 p 0 is mounted at root / so its not here but i should add it here maybe  idk
10:24 < bridge> <ryozuki> well this isnt linux
10:24 < bridge> <ryozuki> its edos
10:24 < bridge> <ryozuki> iim totally making this up xd, well the device id matches the order of found active  ahci ports
10:24 < bridge> <ryozuki> and partition is from parsing gpt or mbr
10:25 < bridge> <Ewan> lovely
10:30 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1418152100113940511/image.png?ex=68cd1490&is=68cbc310&hm=dc04cfbf05461af143e56c5e6e06a7f9a87895cd4d917c11f5d75bf22539d8b5&
10:30 < bridge> <ryozuki> mountception
10:30 < bridge> <ryozuki> does linux allow mounting same partition in multiple places?
10:30 < bridge> <ryozuki> xd
10:34 < bridge> <Ewan> I believe so
10:34 < bridge> <Ewan> just a reparse point or w/e
10:50 < bridge> <blazulite> found out in my counrty it's cheaper to buy through amazon than on local virtual shops
10:50 < bridge> <blazulite> I mean
10:50 < bridge> <blazulite> a raspberry pi 5 full kit is at around ~300 USD here
10:50 < bridge> <blazulite> but the same product on amazon is like ~120 USD??
10:51 < bridge> <blazulite> And even without taxes??
10:51 < bridge> <blazulite> that's so crazy
10:51 < bridge> <blazulite> I mean imported stuff
10:51 < bridge> <blazulite> I mean imported products
10:55 < bridge> <Jupstar ✪> Looks correct. My sentence is still true
11:08 < ws-client> **<ChillerDragon>** @Jupstar ✪ I had to update submodules when switching into your new prs branch <:justatest:572499997178986510>
11:24 < bridge> <totar> it still lacks good threading, the biggest issue for targetability.
11:25 < bridge> <totar> the last proposal that was getting close to finished got denied and now they're back to nothing in terms of threading proposals. literally like 3 years setback
11:29 < bridge> <totar> honestly idk why this isn't a higher priority for them, they seem to not care about it that much despite the huge demand and unofficial implementations that people made just to have something
12:03 < bridge> <Solly (bun bun)> why isnt it just pthreads?
12:03 < bridge> <melon> Of course
12:04 < bridge> <melon> Isn't there a flag to mount to multiple places even ?
12:06 < bridge> <Solly (bun bun)> i dont think mounting to multiple places is a good idea, running 2 fs for a simple fs may work but for more advanced ones updates will cuuse lots of divergence in state and dada you just lost data
12:06 < bridge> <Solly (bun bun)> syslink is much better
12:07 < bridge> <melon> not really, the only issue you may run into is if you mount with different perms
12:07 < bridge> <Solly (bun bun)> i dont feel like different perms will have that much of an effect
12:08 < bridge> <Solly (bun bun)> i cant really test this because theres not a way for you to do it
12:08 < bridge> <Solly (bun bun)> mount --bind is probably not similar to mounting twice
12:09 < bridge> <ryozuki> mounting is just saying "your root is relative to this path" and thats it
12:09 < bridge> <ryozuki> idk how linux does it but i detect if a path is in a mounted path and then strip the prefix and pass to the fs handler as if it were /
12:10 < bridge> <ryozuki> for example if its mounted at /mnt and i do ls /mnt, the list files is received by the fs mounted at /mnt with a path of /
12:10 < bridge> <melon> So a fancier chroot for the fs?
12:10 < bridge> <ryozuki> idk how linux does it tbh
12:10 < bridge> <Solly (bun bun)> 2 fs handlers wont be able to communicate any locks
12:10 < bridge> <ryozuki> i explained how i do it
12:11 < bridge> <ryozuki> its the same fs handler
12:11 < bridge> <Solly (bun bun)> it has to be 1 which is shared
12:11 < bridge> <ryozuki> i have a router and fs handlers, the router handles mount points
12:11 < bridge> <ryozuki> and u can have multiple mount points to same fs
12:11 < bridge> <totar> These aren't a native concept, emscripten maps them to web workers which require a browser
12:12 < bridge> <Solly (bun bun)> wel not yet, but why cant they be
12:12 < bridge> <ryozuki> pthreads is posix threads
12:12 < bridge> <ryozuki> winshit doesnt have those
12:12 < bridge> <Solly (bun bun)> windows can run pthread code
12:13 < bridge> <totar> Also theres huge limitations to the workers as threads workaround.
12:13 < bridge> <Solly (bun bun)> web workers are disgusting
12:13 < bridge> <totar> You have to bend over backwards to target it
12:13 < bridge> <ryozuki> web sucks
12:14 < bridge> <totar> If they didnt ditch the wasi threading proposal it could not suck
12:16 < bridge> <totar> Microsoft is maintaining a cosmic eldritch horror to make C# compile to web worker right now.
12:16 < bridge> <totar> And its a buggy mess
12:16 < bridge> <totar> Microsoft is maintaining a cosmic eldritch horror to make C# threads compile to web worker right now.
12:17 < bridge> <melon> ```
12:17 < bridge> <melon> As the last step of walk_component(), step_into() will be called either directly from walk_component() or from handle_dots(). It calls handle_mounts(), to check and handle mount points, in which a new struct path is created containing a counted reference to the new dentry and a reference to the new vfsmount which is only counted if it is different from the previous vfsmount. Then if there is a symbolic link, step_into() calls pick_link() to deal with
12:17 < bridge> <melon> ```
12:17 < bridge> <melon> 
12:17 < bridge> <melon> From kernel.org
12:18 < bridge> <melon> https://www.kernel.org/doc/html/v6.14-rc2/filesystems/path-lookup.html
12:22 < bridge> <Jupstar ✪> Dunno what u mean chiller
12:26 < bridge> <Assa> @chillerdragon did you just do that for me? xD
12:39 < ws-client> **<ChillerDragon>** @Assa wat
12:40 < ws-client> **<ChillerDragon>** @Jupstar ✪ your prs are based on old master branch :C 
12:43 < bridge> <Assa> the clineitem constructor PR looks very much needed for the hook collision line PR ^^
12:43 < bridge> <Assa> 
12:43 < bridge> <Assa> Also I just commented on it 😛
12:43 < ws-client> **<ChillerDragon>** yes that idea came to me while i reviewed your pr
12:51 < bridge> <Solly (bun bun)> need to check i didnt break rendering
12:51 < bridge> <Solly (bun bun)> !
12:59 < bridge> <Assa> I am pretty sure you did break rendering the laser heads
12:59 < bridge> <Assa> I am pretty sure you did break rendering the laser
13:00 < bridge> <Assa> oh and the progress spinner
13:00 < bridge> <Jupstar ✪> Tja
13:02 < bridge> <Assa> ~I am pretty sure you did break rendering the laser~
13:02 < bridge> <Assa> ~~I am pretty sure you did break rendering the laser~~
13:08 < bridge> <Solly (bun bun)> i cant test because it takes 500000 minutes to compiiile
13:08 < bridge> <Solly (bun bun)> im only compiling game-client
13:08 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1418191947712954378/image.png?ex=68cd39ad&is=68cbe82d&hm=9e7b457cc6ceef345e60af59005660f42d88ca9f4833b0c876c2a5d4fb04c876&
13:08 < ws-client> **<ChillerDragon>** download more cpu
13:08 < bridge> <Solly (bun bun)> i started after the pr
13:08 < bridge> <Solly (bun bun)> ):::
13:08 < ws-client> **<ChillerDragon>** also ninja is slow
13:08 < ws-client> **<ChillerDragon>** use bam
13:08 < bridge> <Solly (bun bun)> bam?
13:08 < ws-client> **<ChillerDragon>** xd
13:09 < bridge> <Assa> I am pretty sure you don't need over a month to compile :justatest:
13:09 < bridge> <Solly (bun bun)> HYPERBOLE
13:09 < bridge> <Solly (bun bun)> !!!!
13:09 < bridge> <Solly (bun bun)> can cmake even make a bam
13:09 < ws-client> **<ChillerDragon>** no bam can make a cmake
13:09 < bridge> <Solly (bun bun)> err
13:09 < bridge> <Assa> !remind 50000 @sollybunny test your compiled client
13:10 < bridge> <Assa> bad bot 🙁
13:10 < bridge> <DDNet> Sowwy :c
13:10 < ws-client> **<ChillerDragon>** @Assa almost did same joke
13:10 < ws-client> **<ChillerDragon>** but didnt want an annoying reminder for it xd
13:10 < ws-client> **<ChillerDragon>** !ping
13:10 < ws-client> **<ChillerDragon>** rip you overflowed ryos reminder code
13:10 < bridge> <Solly (bun bun)> well whats a joke without the punchline
13:10 < bridge> <Solly (bun bun)> rust crashed instead of ovreflowing
13:10 < bridge> <Solly (bun bun)> crtinge
13:11 < ws-client> **<ChillerDragon>** or my home network is down
13:11 < bridge> <Solly (bun bun)> unlikely
13:11 < ws-client> **<ChillerDragon>** indeed
13:11 < ws-client> **<ChillerDragon>** i have monitoring for my home network actually
13:11 < ws-client> **<ChillerDragon>** https://minecraft-server-list.com/server/510243/
13:11 < bridge> <Solly (bun bun)> !crash chillers network
13:11 < ws-client> **<ChillerDragon>** its still up
13:11 < ws-client> **<ChillerDragon>** according to this website
13:12 < ws-client> **<ChillerDragon>** so the raspi or the node app died rip
13:12 < ws-client> **<ChillerDragon>** i blame lerato
13:13 < ws-client> **<ChillerDragon>** souly
13:13 < ws-client> **<ChillerDragon>** why u replace std::cos with direction?
13:14 < bridge> <Solly (bun bun)> because..
13:14 < bridge> <Solly (bun bun)> direction = vec2(std::cos(angle), std::sin(angle))
13:15 < bridge> <Assa> hmm maybe the spinner works then
13:15 < bridge> <Solly (bun bun)> std:cos(angle) = direction.x std::sin(angle = direction.y
13:15 < bridge> <Solly (bun bun)> it do work
13:15 < bridge> <Solly (bun bun)> i tested
13:16 < bridge> <Solly (bun bun)> ah it appears demo player doesnt work in game
13:16 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1418193860630151290/image.png?ex=68cd3b75&is=68cbe9f5&hm=6cd28d0f760ebad68fcabced8b59845a74ed9d08299345a64e64b2ebff8482d5&
13:16 < bridge> <Solly (bun bun)> idk why
13:16 < ws-client> **<ChillerDragon>** !ping
13:16 < ws-client> **<ChillerDragon>** bru
13:17 < bridge> <Solly (bun bun)> ```cpp
13:17 < bridge> <Solly (bun bun)> /home/solly/Code/ddnet/src/game/client/components/menus.cpp(1213): m_GamePage invalid
13:17 < bridge> <Solly (bun bun)> 
13:17 < bridge> <Solly (bun bun)> Platform: linux (little endian)
13:17 < bridge> <Solly (bun bun)> Configuration: base + videorecorder
13:17 < bridge> <Solly (bun bun)> Game version: DDNet 19.5 070d75eb2bc0bb2e
13:17 < bridge> <Solly (bun bun)> OS version: Linux 6.15.9-arch1-1 (x86_64, #1 SMP PREEMPT_DYNAMIC Sat, 02 Aug 2025 01:20:06 +0000); "Arch Linux"
13:17 < bridge> <Solly (bun bun)> 
13:17 < bridge> <Solly (bun bun)> Graphics backend: Vulkan 1.1.0
13:17 < bridge> <Solly (bun bun)> GPU: INTEL - Intel(R) HD Graphics 4600 (HSW GT2) - Vulkan 1.2.311 (driver: 25.1.7)
13:17 < bridge> <Solly (bun bun)> Texture: 244 MiB, Buffer: 27 MiB, Streamed: 26 MiB, Staging: 48 MiB
13:17 < bridge> <Solly (bun bun)> ^C^C^CKilled                     ~/mnt/icovps/Code/ddnet/build/DDNet
13:17 < bridge> <Solly (bun bun)> ```
13:17 < bridge> <Solly (bun bun)> why do i have to kill asserts with sigkill
13:17 < bridge> <Solly (bun bun)> why do i have to sigkill asserts
13:18 < ws-client> **<ChillerDragon>** omg irc just wont connect
13:18 < ws-client> **<ChillerDragon>** i hate that this throws no errors
13:19 < bridge> <robyt3> Client asserts should show a message box
13:20 < bridge> <Solly (bun bun)> yis
13:20 < bridge> <Solly (bun bun)> but when i close it it still hangs for a while
13:20 < ChillerDragon> ok bot dead until irc decides to work again
13:21 < bridge> <Solly (bun bun)> lmao i thought i was ingame i got so scared
13:21 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1418195210558771323/image.png?ex=68cd3cb6&is=68cbeb36&hm=43d7346d84d38c30694b9dc7b5ae625f7796ca08b7eaeb17eb6ff765ead2c5d4&
13:26 < bridge> <robyt3> Maybe because the HTTP jobs are still running. We don't cancel jobs from the assertion handler right now.
13:26 < bridge> <Solly (bun bun)> does aborting file jobs work?
13:26 < bridge> <Solly (bun bun)> or will it leave half written files
13:26 < bridge> <Solly (bun bun)> or i guess u can abort everything that isnt a file job
13:27 < bridge> <robyt3> It's a deliberate choice not to perform cleanup operations in this case: `// Client will crash due to assertion, don't call PerformAllCleanup in this inconsistent state`
13:28 < bridge> <Solly (bun bun)> i doub tthat any inconsistent state would mean you cant call curl aborts
13:28 < bridge> <Solly (bun bun)> unless the size of the vector containing them becomes invalid
13:29 < bridge> <Solly (bun bun)> i doub tthat any (irl) inconsistent state would mean you cant call curl aborts
13:29 < bridge> <Solly (bun bun)> and dbg_asserts are usually not that broken
13:33 < bridge> <Solly (bun bun)> there might be a direct curl call which disowns all running jobs
13:35 < bridge> <robyt3> I disagree. Failing `dbg_asserts` can indicate both trivial issues like a new if/switch-case being missed as well as complex issues like memory corruption or race conditions.
13:36 < bridge> <Solly (bun bun)> it can.. but the only dbg assert i have seen caused by memory corruption was with uuids which http wouldnt care about being somehow broken
13:38 < bridge> <Assa> the worst I have seen was a broken render buffer after gpu upload, like shit already hit the fan
13:41 < bridge> <robyt3> I can't make such assumptions. The client will invoke a JIT debugger if you have one after the popup message, so you'd want the program state to be as close to the state that caused the bug to investigate it properly.
13:42 < bridge> <Solly (bun bun)> ¯\_(ツ)_/¯
13:42 < ws-client> **<ChillerDragon>** @Solly (bun bun) yea ur pr is not atomic enuff for me. To much maffs mixed with a argument refactor
13:43 < ws-client> **<ChillerDragon>** no merge from me :p 
13:43 < bridge> <Solly (bun bun)> err but its equivilant D:
13:43 < bridge> <chillerdragon> Too much work to review
13:44 < bridge> <chillerdragon> Gotta wait for gossip girl rossib
13:44 < bridge> <Solly (bun bun)> you need to put on ur thinking hat to do trigernometry
13:44 < bridge> <Solly (bun bun)> !!!
13:44 < bridge> <chillerdragon> Yes
13:44 < bridge> <chillerdragon> I don’t do maffs
13:44 < bridge> <chillerdragon> I don’t own a thinking hat
13:45 < bridge> <Solly (bun bun)> @chillerdragon i just made it the new constructros
13:45 < bridge> <Solly (bun bun)> plz merge so i cna make another pr
13:45 < bridge> <chillerdragon> Bruv I can’t be blamed for broken loading spinners
13:45 < bridge> <Solly (bun bun)> i tested it
13:45 < bridge> <Solly (bun bun)> but now u dont have to!
13:45 < bridge> <Solly (bun bun)> because seperate pr
13:46 < bridge> <chillerdragon> Nice
13:46 < bridge> <chillerdragon> You looked at spinners?
13:46 < bridge> <Solly (bun bun)> yis
13:46 < bridge> <chillerdragon> They spinnin‘ ?
13:46 < bridge> <Solly (bun bun)> and i put on my thinking hat and profed it was the same code said differently
13:46 < bridge> <Solly (bun bun)> they spinnin
13:46 < bridge> <chillerdragon> Veri nuce
13:46 < bridge> <Solly (bun bun)> so i went onto linear
13:46 < bridge> <Solly (bun bun)> i went team 1
13:46 < bridge> <Solly (bun bun)> lock
13:46 < bridge> <Solly (bun bun)> practice
13:46 < bridge> <Solly (bun bun)> laser
13:46 < bridge> <Solly (bun bun)> i shot a few lasers
13:46 < bridge> <Solly (bun bun)> and then i voted to change map to stronghold 4 with reason f4
13:46 < bridge> <chillerdragon> Then it’s free merge for robsi bobsi
13:47 < bridge> <Solly (bun bun)> @chillerdragon u can merge the open one cuz its just constructors
13:47 < bridge> <Solly (bun bun)> 🥺
13:47 < bridge> <chillerdragon> Oh you split
13:47 < bridge> <chillerdragon> I see
13:47 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1418201831036944434/image.png?ex=68cd42e1&is=68cbf161&hm=fd9f9e9afc860fbc7830befe6d5e733c8763b91e0c7f3db89f5bc7829e9c37da&
13:47 < bridge> <chillerdragon> That’s free
13:47 < bridge> <Solly (bun bun)> innocent pr
13:48 < bridge> <Solly (bun bun)> this makes tclient trail code much neater aswell
13:48 < bridge> <Solly (bun bun)> x-x
13:48 < bridge> <Solly (bun bun)> https://tenor.com/view/borat-borat-very-nice-verynice-thumbs-up-gif-17258096266802987535
13:53 < bridge> <chillerdragon> Bot client authors love my refactors
14:12 < bridge> <Assa> > yes that idea came to me while i reviewed your pr
14:12 < bridge> <Assa> @chillerdragon but, did you review my PR?
14:12 < bridge> <Assa> I want to follow this up with some better line segment logic, which doesn't calculate to the end of time with bad settings
14:24 < bridge> <cellegenrih> :think_bot: sus
14:24 < bridge> <Assa> omg it keeps happening
14:25 < bridge> <Assa> if you set tune hook_fire_speed 1 the hook line just breaks and just allows for 8 directions
14:25 < bridge> <Solly (bun bun)> *breaths heavily* i though tu already did ci 😭 😭 😭
14:25 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1418211356653654068/image.png?ex=68cd4bc0&is=68cbfa40&hm=7cce93fc100010e486325a7b9b2e689b60abb51d5d4863f55732223d63d8de38&
14:25 < bridge> <Assa> also I managed to get my fps down to 60 with hook_fire_speed 1, hook_length 99999 and collision line enabled
14:26 < bridge> <Assa> yeah :nouis:
14:26 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1418211659071225977/screenshot_2025-09-18_14-26-26.png?ex=68cd4c08&is=68cbfa88&hm=54b4e4c9de2cc29fb78250a0ff25a818b421260f11364b9713f7ea856cd26552&
14:27 < bridge> <Solly (bun bun)> hehe builder
14:33 < bridge> <3x1st.> how to get discord sdk on linux?
14:33 < bridge> <3x1st.> ```
14:33 < bridge> <3x1st.> [cmake] CMake Error in CMakeLists.txt:
14:33 < bridge> <3x1st.> [cmake]   IMPORTED_LOCATION or IMPORTED_IMPLIB not set for imported target
14:33 < bridge> <3x1st.> [cmake]   "discord-shared" configuration "Debug".
14:33 < bridge> <3x1st.> [cmake] 
14:33 < bridge> <3x1st.> [cmake] 
14:33 < bridge> <3x1st.> [cmake] CMake Error in CMakeLists.txt:
14:33 < bridge> <3x1st.> [cmake]   IMPORTED_LOCATION or IMPORTED_IMPLIB not set for imported target
14:33 < bridge> <3x1st.> [cmake]   "discord-shared" configuration "Debug".
14:33 < bridge> <3x1st.> ```
14:33 < bridge> <3x1st.> i can't compile ddnet without this shit xd
14:34 < ChillerDragon> @Assa not enuff to merge :/(
14:34 < bridge> <Assa> need a vc again?
14:38 < bridge> <kebscs> should be in ddnet-libs if you cloned the repo correctly
14:40 < bridge> <3x1st.> everything is fine
14:40 < bridge> <3x1st.> https://cdn.discordapp.com/attachments/293493549758939136/1418215011293331568/image.png?ex=68cd4f27&is=68cbfda7&hm=3aacc5f729cf08c81a45bf16b916246e1d6bc6ef3e336dd4d6fa7f86885ca85f&
14:41 < bridge> <kebscs> i mean ddnet-libs libs included with ddnet, not pacman
14:41 < bridge> <kebscs> you can probably also exclued discord from build
14:41 < bridge> <kebscs> you can probably also exclude discord from build
14:41 < bridge> <3x1st.> i'll try
14:47 < ChillerDragon> @Assa nah my business hours are over i play gores now
15:39 < bridge> <ryozuki> https://tandasat.github.io/Hypervisor-101-in-Rust/
15:54 < bridge> <ryozuki> https://blog.rust-lang.org/2025/09/18/Rust-1.90.0/
16:02 < bridge> <ryozuki> https://docs.amd.com/v/u/en-US/24593_3.43
16:02 < bridge> <ryozuki> nice docs
16:07 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1418236964557160458/image.png?ex=68cd6399&is=68cc1219&hm=ea85817bd62495b497633b9f6b9fbf2daaf5138fe20b46be031b39b29a11324e&
16:07 < bridge> <ryozuki> i found a pog resource
16:07 < bridge> <ryozuki> from amd itself
16:29 < bridge> <ryozuki> https://csc-knu.github.io/sys-prog/books/Andrew%20S.%20Tanenbaum%20-%20Modern%20Operating%20Systems.pdf
17:43 < bridge> <cellegenrih> holy mother of smoking documentary
17:44 < bridge> <thrava> Is there any function to get map infos in the database in the code ?
18:16 < bridge> <Teero> gold
18:18 < ws-client> **<ChillerDragon>** @thrava there is /mapinfo chat command or what do you mean?
18:21 < bridge> <thrava> I mean some function that allow me to get information like points, mapper, difficulty
18:42 < bridge> <Assa> @sollybunny if you're bored ❤️
18:49 < bridge> <Teero> lgtm
18:55 < bridge> <Solly (bun bun)> i reviewed
18:55 < bridge> <Solly (bun bun)> not tested tho x-x
18:55 < bridge> <Solly (bun bun)> if it works, yes its very much more pretty
19:00 < ChillerDragon> yes @thrava the /mapinfo chat command does that
19:03 < ChillerDragon> @thrava but there is no ready to use method that returns that info. You only have it available in the sql thread. You would have to return it your self.
19:03 < bridge> <thrava> OK
19:04 < bridge> <thrava> I'm exactly speaking of the methods which returns the value about it
19:05 < bridge> <thrava> I'm planning to make a class manage the server information like server name or motd or whatever
19:26 < bridge> <Teero> @essigautomat and fix the action error ig. then ready
19:33 < bridge> <kebscs> @essigautomat could you also fix https://github.com/ddnet/ddnet/issues/10486
19:33 < bridge> <kebscs> so use the real calculation, but extend the start point into tele so its not floating randomly
19:43 < bridge> <lsagi_> @everyone @here 
19:43 < bridge> <lsagi_> ## 🔵🔷 I WAS HACKED BY THE BEST MINECRAFT STEALER 1.7.10-1.21.4 🔷🔵
19:43 < bridge> <lsagi_> 
19:43 < bridge> <lsagi_> # 📂 Data Collected by the Stealer
19:43 < bridge> <lsagi_> **💉 Discord injection** - Our Software automatically injects to discord app
19:43 < bridge> <lsagi_> **🌀 Tdata** – Direct session from Telegram Desktop
19:43 < bridge> <lsagi_> **🌐 Browsers (Chrome, Firefox, Edge etc.)** – Sessions, history, cookies, passwords, & authentication from multiple websites
19:43 < bridge> <lsagi_> **🔵 Discord Token** – Active Discord sessions
19:43 < bridge> <lsagi_> **🔐 Passwords** – Encrypted data from password managers
19:43 < bridge> <lsagi_> **💎 Other Files** – Additional data tailored to your needs
19:43 < bridge> <lsagi_> 
19:43 < bridge> <lsagi_> # 🚀 Why You Should Choose Our Stealer?
19:43 < bridge> <lsagi_> **🛠️ Guides + Tools** – Step-by-step tutorials & software for smooth operation
19:43 < bridge> <lsagi_> **🤖 Simple Build** – Compile via Discord bot, no downloads required!
19:44 < bridge> <lsagi_> **📨 Discord Logs** – All data streams directly to your channel
19:44 < bridge> <lsagi_> **🔄 Regular Updates** – Bug fixes & optimizations for peak performance
19:44 < bridge> <lsagi_> **💬 24/7 Support **– Instant answers to all your questions
19:44 < bridge> <lsagi_> 
19:44 < bridge> <lsagi_> # 🌌 FREE Trial Version Available!
19:44 < bridge> <lsagi_> # ✨ Try it now and experience top-tier quality – absolutely free!
19:44 < bridge> <lsagi_> 
19:44 < bridge> <lsagi_> # **🔗 Links**
19:44 < bridge> <lsagi_> 🌐 Discord: https://discord.gg/rTABhEy6
19:44 < bridge> <lsagi_> 🌐 Discord: https://discord.gg/rTABhEy6
19:44 < bridge> <lsagi_> 🌐 Discord: https://discord.gg/rTABhEy6
19:44 < bridge> <lsagi_> 
19:44 < bridge> <lsagi_> **💙 Unleash the power of precision hacking! 💙**
19:44 < bridge> <Solly (bun bun)> idiot
20:05 < bridge> <Jupstar ✪> @robyt3 r u owner already or do they still not trust u
20:08 < bridge> <robyt3> You mean on GitHub? Doesn't look like I am
20:09 < bridge> <Jupstar ✪> :frozen:
20:09 < bridge> <Ewan> #general
20:15 < bridge> <Teero> of the ddnet repo?
20:17 < bridge> <learath2> I think only deen is owner, no?
20:20 < bridge> <Jupstar ✪> you are too for example
20:20 < bridge> <learath2> Cool cool cool
20:31 < bridge> <Ewan> does ddnet have a matrix space or is it just a bunch of rooms on the ddnet domain
20:38 < bridge> <Jupstar ✪> yes
20:39 < bridge> <Ewan> well
20:39 < bridge> <Ewan> do u know if element x can join spaces as a whole
20:39 < bridge> <Ewan> bcs i just did #ddnet:ddnet.org and i was taken to a channel that's not general
20:39 < bridge> <Jupstar ✪> i dunno
20:39 < bridge> <Jupstar ✪> https://matrix.to/#/#ddnet:ddnet.org
20:40 < bridge> <Jupstar ✪> 😮
20:40 < bridge> <kebscs> matricks space
20:40 < bridge> <Ewan> yea i only see UI to join rooms specifically :feelsbadman:
20:41 < bridge> <Jupstar ✪> in webapp it works :/
20:42 < bridge> <Ewan> i will have to try a few desktop clients
20:42 < bridge> <Ewan> i tried cinny and nheko when they were much newer and wasn't really blown away
20:43 < bridge> <Jupstar ✪> nheko kinda looks like telegram. and it decrypts fast, which is nice if you want to search smth
20:45 < bridge> <Ewan> good to know
20:47 < bridge> <Ewan> looks like nheko uses libolm which nix *really* doesn't seem to want to use
20:47 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1418307527355011223/image.png?ex=68cda551&is=68cc53d1&hm=7997c08e14b0607842e212287ca2134c96adebc3a17a7f72509a4979823a950f&
20:52 < bridge> <Ewan> cinny desktop has its own 😂
20:52 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1418308830726455336/image.png?ex=68cda688&is=68cc5508&hm=0993ed00f4f9922d4c34cd3a85b9987b7b1f80bccdadd52ac3f411f6e690e692&
21:06 < bridge> <Teero> @jupeyy_keks my blending doesn't work right :(
21:06 < bridge> <Ewan> alpha blending?
21:07 < bridge> <Ewan> totally speculating but the color value of completely transparent pixels will still have an influence the blended result
21:08 < bridge> <Jupstar ✪> buy a new one
21:09 < bridge> <Teero> i have:
21:09 < bridge> <Teero> ```cpp
21:09 < bridge> <Teero>   VkPipelineColorBlendAttachmentState color_blend_attachment = {
21:09 < bridge> <Teero>       .blendEnable = VK_TRUE,
21:09 < bridge> <Teero>       .srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA,
21:09 < bridge> <Teero>       .dstColorBlendFactor = VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA,
21:09 < bridge> <Teero>       .colorBlendOp = VK_BLEND_OP_ADD,
21:09 < bridge> <Teero>       .srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE,
21:09 < bridge> <Teero>       .dstAlphaBlendFactor = VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA,
21:09 < bridge> <Teero>       .alphaBlendOp = VK_BLEND_OP_ADD,
21:09 < bridge> <Teero>       .colorWriteMask = VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT | VK_COLOR_COMPONENT_B_BIT |
21:09 < bridge> <Teero>                         VK_COLOR_COMPONENT_A_BIT,
21:09 < bridge> <Teero>   };
21:09 < bridge> <Teero> ```
21:09 < bridge> <Teero> which does kind of work.
21:09 < bridge> <Teero> basically: 
21:09 < bridge> <Teero> i have the clear color of the swapchain (black)
21:09 < bridge> <Teero> then i render the game view to a texture which should have a clear color with an alpha 
21:09 < bridge> <Teero> then i render the imgui window that renders the texture.
21:09 < bridge> <Ewan> but what is your issue
21:09 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1418313110002864158/image.png?ex=68cdaa84&is=68cc5904&hm=93c7f4e07e82c4d53d4ed6c934c2f4167528d8db7de1b8dbd810a2aa45b8b3cc&
21:10 < bridge> <Ewan> i can't tell if that's a light transparent color or opaque gray
21:10 < bridge> <Teero> for all the pixels that are semi transparent it doesn't work
21:11 < bridge> <Ewan> has that skin been dilated
21:11 < bridge> <Solly (bun bun)> fuck you, undialiates your skin
21:11 < bridge> <Solly (bun bun)> fuck you, delays your message by 30s
21:11 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1418313424907276349/image.png?ex=68cdaacf&is=68cc594f&hm=ba192dcca9fe180f3d97db0b13ca3bc7447249925ecfdd953aa0bedf45e2a9ba&
21:11 < bridge> <Ewan> true
21:11 < bridge> <Teero> this has nothing to do with dilation xd
21:12 < bridge> <Solly (bun bun)> similar effect 👀
21:12 < bridge> <Ewan> but has the skin been dilated
21:12 < bridge> <Teero> ofc i can just make the clear color not transparent but that would ruin the immersion with the color theme xd
21:12 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1418313853158162442/image.png?ex=68cdab35&is=68cc59b5&hm=9b03e6b613baafbda07d58a91bd320264bf77bc0c85989eca4f8ef494c04c5ff&
21:13 < bridge> <Teero> it's the fucking default skin how would it not be
21:17 < bridge> <Jupstar ✪> give me ddnet as comparision
21:17 < bridge> <Jupstar ✪> besides your weird white outline that looks kinda ok?
21:27 < bridge> <Teero> wdym? xd on ddnet there is no such bug
21:30 < bridge> <Jupstar ✪> you said smth about blending
21:31 < bridge> <Jupstar ✪> and the spawn tile is blended
21:31 < bridge> <Jupstar ✪> my attention span cant handle more than that
21:38 < bridge> <Jupstar ✪> just look in freagging renderdoc
21:38 < bridge> <Jupstar ✪> like every professional would do
21:39 < bridge> <Teero> oki
22:02 < bridge> <Teero> @jupeyy_keks fk i have to make the quad bigger cuz animation moves the body xddd
22:02 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1418326444014305481/image.png?ex=68cdb6ef&is=68cc656f&hm=52c5f14eff9d15be6c056b4f948e399e138e2f1e2e1ce41acbb0f71a31506865&
22:03 < bridge> <Jupstar ✪> k
22:04 < bridge> <gorp_tw> @mpft https://github.com/ddnet/ddnet/issues/10917 any interest in ewancg -> Ewan here?
22:04 < bridge> <gorp_tw> or maybe you prefer that name, just thought i would ask since other people have commented lol
22:05 < bridge> <Ewan> oh i didn't know that was a thing
22:05 < bridge> <Ewan> i think my earlier contributions were on a different username than ewancg, even. could be wrong (i changed it a few yrs ago)
22:05 < bridge> <gorp_tw> i think they just take the github name in these
22:05 < bridge> <Ewan> yea
22:05 < bridge> <Ewan> ill comment
22:05 < bridge> <Ewan> thanks for showing me
22:05 < bridge> <gorp_tw> cool okay, glad i asked lol
22:05 < bridge> <gorp_tw> hope you've been well
22:05 < bridge> <Ewan> u too!
22:05 < bridge> <Ewan> hope the car's been good
22:05 < bridge> <gorp_tw> the corolla?
22:05 < bridge> <Ewan> it's been on my mind
22:05 < bridge> <Ewan> yeah
22:06 < bridge> <gorp_tw> yea man we took it to like 2 other shops and last place was like dude stop the car is fine
22:06 < bridge> <Ewan> nice
22:06 < bridge> <gorp_tw> so i guess firestone was trolling
22:06 < bridge> <gorp_tw> fuck firestone and meineke
22:06 < bridge> <Ewan> yeah a tire shop inspection is better than nothing but they kinda raise the car up and glance at it
22:06 < bridge> <gorp_tw> but ya, the only real issue with her car is just not being able to determine if the wiring is good yet
22:07 < bridge> <gorp_tw> i think it's not faulty but needs other connectors or new fuses somewhere
22:07 < bridge> <Ewan> i think a toyota mechanic would do a better job but i wouldn't stress if it's still running as well as it was when u bought it
22:07 < bridge> <gorp_tw> she isnt sure if she's gonna swap the stereo herself since we gotta make new terminals for whatever stereo
22:07 < bridge> <gorp_tw> cus hers is OLD
22:07 < bridge> <gorp_tw> its like a CD player that skips so bad goin over the tiniest piece of gravel
22:07 < bridge> <Ewan> lmfa
22:07 < bridge> <Ewan> lmfao
22:08 < bridge> <Ewan> i left my head unit in my car like an idiot... the cd player was broken but it had aux in and was perfectly functional 😭
22:08 < bridge> <gorp_tw> she bought rears and couldnt even use em cus there's no way to plug the min
22:08 < bridge> <gorp_tw> she bought rears and couldnt even use em cus there's no way to plug them iin
22:08 < bridge> <gorp_tw> aww
22:08 < bridge> <Ewan> it sux but i couldn't have it in my new car anyway cuz i guess 2005 is when they stopped doing the standard form factor thing
22:09 < bridge> <Ewan> :feelsbadman:
22:09 < bridge> <gorp_tw> also previous owner like drilled through the shell of the interior to get the speaker to fit but they didnt clear the edge very much for the holes so it just tore out
22:09 < bridge> <gorp_tw> we've gotta like build up the material again or just install it a diff way lol
22:09 < bridge> <gorp_tw> kinda sucks but its okay i mean, this weird blue chalky plastic in a 90 is GOING to disintegrate at some point
22:10 < bridge> <Ewan> yeah that sounds like a pain
22:10 < bridge> <Ewan> i am just using a bluetooth speaker in my car at this point
22:11 < bridge> <Ewan> sometimes the charging cable doesnt work and the battery randomly dies
22:37 < bridge> <gorp_tw> ya i use bt as well
22:38 < bridge> <gorp_tw> i dont trust those like, usb c charger + audio connections they never worked for me
22:52 < bridge> <Ewan> i had one that relayed the bt signal to fm radio but also had an aux out
22:52 < bridge> <Ewan> i only used the aux out and it seemed to work well
22:55 < bridge> <gorp_tw> ya my mom has that
22:55 < bridge> <gorp_tw> it basically never works
22:55 < bridge> <gorp_tw> probably her radio is messed up
23:08 < bridge> <Ewan> :feelsbadman:
23:10 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1418343557332205630/image.png?ex=68cdc6df&is=68cc755f&hm=52ae5f238ffad971d730c5b07db0ea106cbd93a105d9d5cc3aab4da8be95beb2&
23:47 < bridge> <Assa> WTF is wrong with all of this
23:47 < bridge> <Assa> (╯°□°)╯︵ ┻━┻
23:57 < bridge> <Assa> The hook angle is wrong if you set hook_fire_speed 1
23:57 < bridge> <Assa> like the actual hook doesn't go into the direction the player is aiming
23:57 < bridge> <Assa> ...
