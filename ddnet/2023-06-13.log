00:35 <+bridge> <Unreal> I can't play ddnet via steam
00:36 <+bridge> <Unreal> I click play and it turns my screen all black
00:36 <+bridge> <Unreal> And it stays like that
00:36 <+bridge> <Unreal> I tried uninstalling it and it's the same
00:37 <+bridge> <deen> What OS are you on? Can you try https://wiki.ddnet.org/wiki/GFX_Troubleshooting ?
00:39 <+bridge> <Unreal> wdym by OS
00:40 <+bridge> <Unreal> Aslo before my game decided to not open anymore, it gave me crashes by drivers, or something related to that and memory
00:47 <+bridge> <deen> operating system. Yes, sounds like the gfx troubleshooting would help you
00:49 <+bridge> <Unreal> ok thanks
05:59 <+bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1118026930516668507/image.png
06:00 <+bridge> <Ewan> I just want to build with MSVC
06:02 <+bridge> <totar> building works for me I think
06:03 <+bridge> <totar> unless it was a recent change that broke it
06:15 <+bridge> <tsfreddie> honestly. looks like it's just missing the data folder
06:15 <+bridge> <Ewan> Oh LOL
06:15 <+bridge> <tsfreddie> i always manually copy it
06:15 <+bridge> <Ewan> Yeah i know the issue exactly
06:15 <+bridge> <Ewan> it's the VS generator
06:15 <+bridge> <Ewan> i forgot it does that
06:16 <+bridge> <Ewan> vs puts the binary in a subfolder with build type
06:16 <+bridge> <Ewan> data is just put at the base of the build dir
06:16 <+bridge> <tsfreddie> ye
06:16 <+bridge> <Ewan> *technically* this is a cmakelists issue but i wouldn't blame anyone for it
06:16 <+bridge> <tsfreddie> i still always copy it and it's workable
06:18 <+bridge> <totar> are you not using cmake?
06:18 <+bridge> <tsfreddie> cmake does that with vs generator
06:18 <+bridge> <Ewan> ^
06:19 <+bridge> <tsfreddie> i don't think we have other build system configured anyway.
07:20 <+bridge> <fokkonaut> dont believe me?
07:22 <+bridge> <Jupstar âœª> Yes
07:23 <+bridge> <fokkonaut> I can show u later but why
07:46 <+bridge> <Jupstar âœª> Why would I believe someone
08:28 <+bridge> <chillerdragon> believe what
08:29 <+bridge> <chillerdragon> Ah screenburn ye I also doubt that haha
08:31 <+bridge> <Alexander> Nonono, show everyone
08:32 <+bridge> <Alexander> I want to see, too
08:49 <+bridge> <Voxel> How cool would it be if maps had area boxes that could color correct the screen? This is post processing BTW
08:49 <+bridge> <Voxel> Pulsar called it useless but ngl I think this would make maps feel more immersive
08:49 <+bridge> <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1118069498185003108/ddnet_color_correction_test.mov
08:53 <+bridge> <Jupstar âœª> For a thing like that to look consistent, we'd need to introduce some concept of lighting
08:54 <+bridge> <Voxel> only downside is that people dont know what color theory and proper lighting is so there would be a lot of
08:54 <+bridge> <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1118070793520291880/image.png
08:54 <+bridge> <Jupstar âœª> ðŸ˜‚
08:54 <+bridge> <Voxel> maybe. i mean, i only see it as boxes that work similar to sounds
08:54 <+bridge> <Voxel> idk how lighting in ddnet would work but id love to
08:54 <+bridge> <Voxel> idk how lighting in ddnet would work but id love to know
08:56 < ws-client> <Jupstar> mhh yeah it's not that easy. I thought about it when i thought about a good looking 2D ray tracer (which obviously makes no sense in 2D)
08:57 < ws-client> <Jupstar> ambient light is ez. is the question if it should affect certain areas only
08:58 < ws-client> <Jupstar> for caves to look dimmer we'd need some concept like a sun. but that makes 0 sense in 2D ðŸ˜‚ 
08:59 < ws-client> <Jupstar> we could analyze how much of the sun is blocked while rendering before rendering the tee
08:59 < ws-client> <Jupstar> so a cave would require to have a background tile layer
09:00 < ws-client> <Jupstar> towards cave entries more sun would generally be in the scene
09:02 <+bridge> <Voxel> when i think of lighting i think about glow tiles too
09:02 <+bridge> <Voxel> basically like, a tileset with a set color and emittion amount
09:02 <+bridge> <Voxel> saying this because glow mapres suck so hard there's always creases and it never looks natural
09:02 <+bridge> <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1118072768542548094/image.png
09:03 < ws-client> <Jupstar> yeah but obv that also doesnt really make sense.. e.g. are there tiles that can completely block the emitting light rays? or does it always leak into the tiles
09:04 <+bridge> <Voxel> oh yeah good point. i was going to say it would be layer determined but i guess if the emittion is big enough there should be ways to block the lighting
10:41 <+bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1118097728833077318/FyaVNvgWIAE_z_D.png
11:38 <+bridge> <chairn> lel, didn't know the last one ðŸ˜„
12:13 <+bridge> <learath2> That last one is a cute idea, I wonder if it's sane
12:14 <+bridge> <heinrich5991> I heard it works
12:14 <+bridge> <heinrich5991> not sure if practical though
12:20 <+bridge> <chairn> you can also pick random points in a square that are also in the quarter circle to get pi
12:20 <+bridge> <chairn> Anyone know how to test C code similarly to googletest that is c++ only?
12:21 <+bridge> <heinrich5991> you can use C++ to test C code
12:21 <+bridge> <chairn> isn't there a risk to change behavior?
12:22 <+bridge> <chairn> if i compile my code with g++ instead of gcc, i got loads of errors
12:22 <+bridge> <heinrich5991> no, I mean just compiling the test code with g++
12:22 <+bridge> <chairn> Note that i will need to compile C code from students, so i think a pure C solution is preferable
12:23 <+bridge> <heinrich5991> does it have a given interface?
12:23 <+bridge> <chairn> ah, so i compile my test with g++ and retrieve only their code through a library maybe?
12:23 <+bridge> <heinrich5991> doesn't need to be a library
12:23 <+bridge> <chairn> they should have 2 functions:
12:23 <+bridge> <chairn> ```c
12:23 <+bridge> <chairn> int aes_encrypt(char* data, int size, char* key, int keysize);
12:23 <+bridge> <chairn> int aes_decrypt(char* data, int size, char* key, int keysize);
12:23 <+bridge> <chairn> // OU avec AES CBC implÃ©mentÃ©
12:23 <+bridge> <chairn> int aes_encrypt(char* data, int size, char* key, int keysize, int mode);
12:23 <+bridge> <chairn> int aes_decrypt(char* data, int size, char* key, int keysize, int mode);
12:23 <+bridge> <chairn> ```
12:24 <+bridge> <chairn> ill try that then ðŸ˜‰
12:24 <+bridge> <heinrich5991> yes, declare that as `extern "C"` in your header file and you should be good
12:24 <+bridge> <heinrich5991> compile the student's code with `-c` to an object file
12:25 <+bridge> <heinrich5991> and then link it with your test cde
12:25 <+bridge> <chairn> I was thinking of them sending me their header and also 2 static libraries: one normal, and one with the sanitizer, then i can just link with my testcode
12:26 <+bridge> <heinrich5991> hmm. you don't want to have the source code?
12:26 <+bridge> <Jupstar âœª> Virus
12:26 <+bridge> <heinrich5991> but yea, that'd work, too
12:26 <+bridge> <chairn> nah, they will all have different makefiles and their own test files
12:26 <+bridge> <chairn> so i wouldn't know which .o to get
12:27 <+bridge> <chairn> it will also be a live evaluation, so i can't take 5 minutes for each
12:27 <+bridge> <Jupstar âœª> Make files for single algorithm? Xd
12:27 <+bridge> <heinrich5991> ah ^^
12:27 <+bridge> <chairn> it will also be a live evaluation, so i can't take 5 minutes for each group to find correct files and stuff
12:27 <+bridge> <Jupstar âœª> Or do they use extern stuff
12:28 <+bridge> <chairn> I will ask them for extern C header and static lib, seems easier so that i can just link directly
12:28 < ws-client> <Jupstar> the static lib can also have deps
12:28 <+bridge> <chairn> they won't have
12:28 < ws-client> <Jupstar> then u can also take their source code
12:29 <+bridge> <chairn> https://discord.com/channels/252358080522747904/293493549758939136/1118124259970138253
12:30 <+bridge> <chairn> we didn't standardize anything except global API, so i don't wanna fumble through their code
12:30 <+bridge> <chairn> live evaluation
12:30 < ws-client> <Jupstar> then u need to take shared libraries
12:31 <+bridge> <chairn> why shared? static works fine too
12:31 <+bridge> <ryozuki> this would be way easier with rust, cargo, normalized way of doing things already and builtin unit testing
12:31 <+bridge> <ryozuki> :justatest:
12:31 < ws-client> <Jupstar> then i hope for you that they dont have external deps
12:31 <+bridge> <chairn> i don't make the teaching program
12:32 <+bridge> <chairn> there will be none, it's just basic c stuff with file IO and AES algorithm
12:32 <+bridge> <ryozuki> why not just provide urself a project skeleton
12:32 <+bridge> <ryozuki> with a makefile u made
12:32 < ws-client> <Jupstar> and then u could take their source code again^^
12:32 <+bridge> <ryozuki> good old make
12:32 <+bridge> <chairn> because we also evaluate this
12:32 <+bridge> <ryozuki> what is "this"
12:32 <+bridge> <chairn> their own makefile
12:32 <+bridge> <ryozuki> ah
12:33 <+bridge> <ryozuki> so in computer design class u evaluate makefile skills?
12:33 <+bridge> <ryozuki> xd
12:33 <+bridge> <chairn> it's not computer design class, it's C project class
12:33 < ws-client> <Jupstar> its plain c
12:33 <+bridge> <chairn> actually, it's math-info project
12:33 <+bridge> <ryozuki> C project class lol
12:33 < ws-client> <Jupstar> u dont really need makefiles lmao
12:33 <+bridge> <chairn> so they already made AES with Haskell, now with C
12:33 <+bridge> <ryozuki> nice
12:33 <+bridge> <ryozuki> should be easier
12:33 <+bridge> <ryozuki> xd
12:33 <+bridge> <ryozuki> idk haskell
12:34 <+bridge> <ryozuki> do processors have aes intrinsics
12:34 <+bridge> <ryozuki> like instructions
12:34 <+bridge> <chairn> yes
12:34 <+bridge> <ryozuki> do they use em in c
12:34 <+bridge> <ryozuki> can u do that with haskell
12:34 <+bridge> <chairn> there's a possible extension that they can use, i proposed it to some advanced groups
12:34 <+bridge> <ryozuki> oh
12:34 <+bridge> <chairn> im only supervising the c part
12:34 <+bridge> <ryozuki> i also think the linux kernel provides a interface for that
12:35 <+bridge> <ryozuki> if u enable it when compiling
12:35 <+bridge> <ryozuki> https://www.kernel.org/doc/html/v4.15/crypto/architecture.html
12:35 <+bridge> <ryozuki> but i understand u want them to impl it itself
12:35 <+bridge> <ryozuki> xd
12:35 < ws-client> <Jupstar> rust would link extern "Rust"
12:35 < ws-client> <Jupstar> !rust *
12:35 < chillerbot1> @Ryozuki
12:35 <+bridge> <ryozuki> extern "Rust" exists i think
12:35 < ws-client> <Jupstar> yes
12:36 <+bridge> <chairn> https://www.intel.com/content/www/us/en/docs/intrinsics-guide/index.html#othertechs=AES
12:36 <+bridge> <chairn> AES extension on x64
12:36 <+bridge> <ryozuki> there also exists extern "x86-something"
12:36 <+bridge> <chairn> introduced in 2009 apparently or 2008
12:36 < ws-client> <Jupstar> no wonder x86 is so huge ðŸ˜‚ 
12:37 <+bridge> <chairn> we also ask them to compare performances, own implementation are usually at 1MB/s at start, then they manage to reach 10MB/s. With AES extension, they reach 1GB/s ðŸ˜„
12:37 < ws-client> <Jupstar> i'd aim for 2GB/s
12:37 < ws-client> <Jupstar> else im unhappy
12:37 <+bridge> <chairn> not possible
12:37 < ws-client> <Jupstar> that's what u say
12:37 <+bridge> <ryozuki> `type HandlerFunc = extern "x86-interrupt" fn(_: InterruptStackFrame);`
12:37 <+bridge> <chairn> maybe possible if you cipher independent block
12:37 <+bridge> <chairn> so that you break dependencies
12:38 < ws-client> <Jupstar> @chairn first i'd buy you a new PC. then add multi threading
12:38 < ws-client> <Jupstar> and then it's 16GB/s
12:38 <+bridge> <ryozuki> xd troll
12:38 <+bridge> <ryozuki> @chairn imagine having jupstar as student
12:39 <+bridge> <ryozuki> nagging all day
12:39 <+bridge> <ryozuki> i problably would nag all day
12:39 <+bridge> <ryozuki> smth C this smth C that
12:39 <+bridge> <ryozuki> ub here ub there
12:39 <+bridge> <cellegenrih> jupstar buying pcs for people is such a jupstar move
12:39 < ws-client> <Jupstar> i am defs a horrible student
12:40 < ws-client> <Jupstar> the funny thing is. i in fact did smth like that
12:40 <+bridge> <cellegenrih> see? jupstar moves
12:40 <+bridge> <ryozuki> i also nagged to the teacher
12:40 < ws-client> <Jupstar> i had to create a java program. and just for fun aimed for most effective perf :D
12:40 <+bridge> <ryozuki> xd
12:40 < ws-client> <Jupstar> i think he didnt understand the code xD
12:40 < ws-client> <Jupstar> man i should search my old tasks
12:41 < ws-client> <Jupstar> i bet i did weird stuff, bcs i always hated the homeworks
12:41 < ws-client> <Jupstar> to death
12:41 < ws-client> <Jupstar> boring af
12:41 <+bridge> <cellegenrih> true
12:41 <+bridge> <cellegenrih> homework is shit to do
13:56 < ws-client1> <flamer> aaa
13:56 <+ChillerDragon> opsi
14:03 < ws-client> <Jupstar > OMG
14:03 < ws-client> <Jupstar > chillerdragon
14:03 < ws-client> <Jupstar > u didnt
14:03 < ws-client> <Jupstar > u didnt even tell me
14:03 < ws-client> <Jupstar> but its still a bit buggy, but nice progress "Jupstar is typing ..." after reload ðŸ˜‚ 
14:22 <+ChillerDragon> yes i just fixed the stuck bug
14:22 <+ChillerDragon> lemme deploy
14:23 < ws-client> <ChillerDragon> its now fixed
14:23 < ws-client> <ChillerDragon> the problem was the "is typing" state is tracked by the backend on a trust me bro basis from the client
14:24 < ws-client> <ChillerDragon> the client sends when it stops typing :D but that doesnt happen if you timeout without saying u stopped typing now its kinda fixed
14:24 < ws-client> <ChillerDragon> you gotta relogin since i restarted the backend
17:16 < ws-client> <ChillerDragon> !jap https://zillyhuhn.com/cs/.1686669397.png
17:16 < chillerbot1> @Jupstar âœª
17:17 < ws-client> <ChillerDragon> pingers from other channel <:poggers2:1008007455936094328> 
17:17 < ws-client> <ChillerDragon> @heinrich5991 when bridge #off-topic?
17:18 <+bridge> <Avolicious> Chillerdragon is creating a next-gen webclient as discord alternative?
17:19 <+ChillerDragon> ye its a web frontend for irc that looks like discord
17:20 <+ChillerDragon> but ffs i broke something really bad with this new feature xd
17:24 < ws-client> <ChillerDragon> !pig
17:24 < chillerbot1> pog
17:24 < ws-client> <ChillerDragon> ok nice fixed
18:17 <+bridge> <ryozuki> https://llvm.org/docs/CodingStandards.html#id58
18:17 <+bridge> <ryozuki> possible improv?
18:17 <+bridge> <ryozuki> https://llvm.org/docs/CodingStandards.html#anonymous-namespaces
18:17 <+bridge> <ryozuki> ops wrong link before
18:31 <+bridge> <learath2> Why is there no abuse email for googles ip range? Do they get special treatment because monopoly?
18:32 <+bridge> <learath2> My ip is used in one spoofed attack and hetzner is up my ass because they got abuse mail. We get a gbps-ful of traffic from 8.8.4.4 I want to complain too
18:37 <+bridge> <deen> It's spoofed traffic anyway, so why complain?
18:37 <+bridge> <deen> Popular to spoof since people whitelist those ips in their firewall for DNS
18:38 <+bridge> <deen> abuse emails seem to be a joke anyway, I mostly get back "address doesn't exist" or "mailbox is full"
18:38 <+bridge> <learath2> idk we are being annoyed, I want to share our pain with them
18:47 <+bridge> <Jupstar âœª> !c nice xd
18:47 < chillerbot1> ChillerDragon
18:51 <+bridge> <chillerdragon> You sure 8.8.4.4 is not just responses to your dns requests? Donâ€™t think a response counts as attack
19:13 <+bridge> <deen> Sure, we're just sending multi-GB/s of DNS requests and google is failing to limit us ðŸ˜„
19:18 <+bridge> <chillerdragon> Ok fair
19:22 <+bridge> <chillerdragon> Wait hetzner is sending you emails because your ip was used in a spoofing attack? A attack that was fully out of your control? That doesnâ€™t make much sense. Or do you mean these emails about you running services that might be used in reflection attacks? Because those we get at work and there is something we can do about it so itâ€™s making sense imo.
19:25 <+bridge> <chillerdragon> So itâ€™s probably someone ddosing you and spoofing google ip to not get ip blacklisted?
19:25 <+bridge> <chillerdragon> (@deen)
19:26 <+bridge> <chillerdragon> Imagine using evil corp dns anywaysâ€¦ real OGs use duckDNS
20:51 <+bridge> <ryozuki> @learath2 just wanted to comment, we are back to cxx with the bindings
20:51 <+bridge> <ryozuki> some stuff turned weird xD
20:52 <+bridge> <gerdoe> bruh
20:52 <+bridge> <ryozuki> the bad thing with cxx is that u make unique pointers everywhere, so allocations everywhere for everything
20:53 <+bridge> <learath2> You technically don't have to, ur also allowed raw pointers across the boundary, and you can define non-opaque structs that can go across the boundary
20:53 <+bridge> <ryozuki> my coworker  mentiones it might be a red zone thing
20:53 <+bridge> <ryozuki> but we are not sure
20:53 <+bridge> <ryozuki> a pointer address changed doing stuff, with the context allocated from rust
20:53 <+bridge> <ryozuki> we couldnt figure out why
20:53 <+bridge> <learath2> wym a pointer address changed?
20:53 <+bridge> <ryozuki> yeah but in mlir u can get Value(s) and Type(s) and Location(s) by value a lot
20:54 <+bridge> <ryozuki> since they are trivially copiable
20:54 <+bridge> <ryozuki> or smth
20:54 <+bridge> <ryozuki> llvm returns them by val
20:54 <+bridge> <ryozuki> the Context in mlir is just a unique ptr inside
20:54 <+bridge> <ryozuki> when we created a Location with it
20:54 <+bridge> <ryozuki> and Location has a getContext method too
20:55 <+bridge> <ryozuki> the getcontext returned a context with a pointer with a 100 byte offser more or less
20:55 <+bridge> <ryozuki> it changed +-50
20:55 <+bridge> <ryozuki> offset*
20:55 <+bridge> <ryozuki> anyway it was bound to be a disaster anyway xd
20:56 <+bridge> <ryozuki> allocating in rust and using in c++
20:56 <+bridge> <ryozuki> there must be smth weird
20:57 <+bridge> <ryozuki> u can use raw pointers if the api returns pointers/refs ye
20:57 <+bridge> <ryozuki> but the api mostly just returns by value
20:57 <+bridge> <ryozuki> in mlir there are operations, they almost always have results, these results return Value by value
20:58 <+bridge> <ryozuki> and thus thats a allocation for every operation result
20:58 <+bridge> <ryozuki> a operation can also have multiple results
20:58 <+bridge> <ryozuki> anyway
20:59 <+bridge> <Voxel> i should make more ddnet feature concept imagea
20:59 <+bridge> <Voxel> i should make more ddnet feature concept images
20:59 <+bridge> <ryozuki> add them to the wiki if u want too
21:00 <+bridge> <Jupstar âœª> u should make a beter ddnet logo ðŸ˜‚
21:00 <+bridge> <ryozuki> i allow the wiki to be ur ddnet concept art storage
21:00 <+bridge> <ryozuki> xd
21:00 <+bridge> <ryozuki> its impossible
21:00 <+bridge> <ryozuki> the current logo is perfect
21:01 <+bridge> <Voxel> ^^
21:01 <+bridge> <Voxel> really? what page?
21:02 <+bridge> <ryozuki> no page
21:02 <+bridge> <ryozuki> u can simply upload
21:02 <+bridge> <ryozuki> https://wiki.ddnet.org/wiki/Special:Upload
21:02 <+bridge> <ryozuki> @Voxel u can show em in ur user page if u want
21:02 <+bridge> <ryozuki> it also appears here https://wiki.ddnet.org/wiki/Special:ListFiles
21:03 <+bridge> <ryozuki> @Voxel oh
21:03 <+bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1118254319687438356/image.png
21:03 <+bridge> <ryozuki> i uploaded some of urs in the past
21:03 <+bridge> <ryozuki> xd
21:04 <+bridge> <ryozuki> https://wiki.ddnet.org/wiki/File:Voxel_does_a_pull_request_part2.png
21:04 <+bridge> <ryozuki> lmao
21:05 <+bridge> <Voxel> oh LOL
21:09 <+bridge> <Voxel> what about the new logo is so bad?
21:09 <+bridge> <Voxel> what about the current logo is so bad?
21:11 <+bridge> <Jupstar âœª> do u also like it? i think it looks cheap
21:11 <+bridge> <Jupstar âœª> i just feel like it doesnt represent teeworlds.
21:11 <+bridge> <Jupstar âœª> Choice of colors, the default tees
21:11 <+bridge> <Jupstar âœª> 
21:11 <+bridge> <Jupstar âœª> I like the blue rings tho xd
21:14 <+bridge> <Voxel> i cant think of anything better
21:14 <+bridge> <Voxel> i mean the only thing i WANT to improve are the menu images
21:14 <+bridge> <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1118257176071393350/local_server.png
21:16 <+bridge> <Jupstar âœª> ðŸ˜‚
21:16 <+bridge> <Voxel> progress so far
21:16 <+bridge> <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1118257611708571708/image.png
21:17 <+bridge> <bencie.> no.
21:17 <+bridge> <bencie.> cute twinbop
21:18 <+bridge> <animepdf> can it twerk?
21:18 <+bridge> <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1118258175741800548/image.png
21:19 <+bridge> <Voxel> anyways im gonna continue this
21:19 <+bridge> <ryozuki> :Twinbop:
21:19 <+bridge> <animepdf> https://tenor.com/view/jinx-the-cat-jinx-jinx-cat-cat-computer-gif-25786466
21:39 <+bridge> <Unreal> @deen i already installed the drivers and everything was working fine again. Until now that i tried to save a map in editor, then it suddenly crashed my game and now it says that i need to update my GPU drivers. How do I do that?
22:23 <+bridge> <deen> You can find the new drivers on the amd or nvidia website
22:23 <+bridge> <deen> or use older opengl version in settings
23:04 <+bridge> <ryozuki> @Jupeyy_Keks https://www.anandtech.com/show/18915/amd-expands-mi300-family-with-mi300x-gpu-only-192gb-memory
23:04 <+bridge> <ryozuki> lets buy this as ddnet
23:04 <+bridge> <ryozuki> for research purposes
23:04 <+bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1118284816153067560/AMD_DC_AI_Technology_Premiere_Keynote_Deck_for_Press_and_Analysts_63_575px.jpeg
23:16 <+bridge> <learath2> generate ddnet maps with it
23:17 <+bridge> <Voxel> itd only be good at gores
