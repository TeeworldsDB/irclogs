00:59 < bridge> <DefaultO> https://youtu.be/8I4fd_Sap-g
02:05 < wildchancho> hi there
02:41 < bridge> <Cellegen | RiH> yo
03:44 < bridge> <newlesstee> The image of discord presence
05:57 < bridge> <Mr.Gh0s7> it's 7am xD I tryhard too much openscad. Does anyone know any other script/language based 3D CAD software. I just found out (really like 5 mins ago) about libfive <https://libfive.com/>.
05:59 < bridge> <Mr.Gh0s7> ig Ryozuki would use the rust bindings xD https://crates.io/crates/libfive
06:01 < bridge> <Mr.Gh0s7> I'm gonna go to sleep now ðŸ˜‰
07:09 < bridge> <Mr.Gh0s7> Couldn't sleep I started learning Guile/Scheme ```Guile is an implementation of the Scheme programming language. Scheme
07:09 < bridge> <Mr.Gh0s7> (http://schemers.org/) is an elegant and conceptually simple dialect of Lisp, originated
07:09 < bridge> <Mr.Gh0s7> by Guy Steele and Gerald Sussman, and since evolved by the series of reports known as
07:09 < bridge> <Mr.Gh0s7> RnRS (the Revisedn Reports on Scheme).```
07:09 < bridge> <Mr.Gh0s7> Couldn't sleep I started learning Guile/Scheme ```Guile is an implementation of the Scheme programming language. Scheme
07:09 < bridge> <Mr.Gh0s7> (http://schemers.org/) is an elegant and conceptually simple dialect of Lisp, originated
07:09 < bridge> <Mr.Gh0s7> by Guy Steele and Gerald Sussman, and since evolved by the series of reports known as
07:09 < bridge> <Mr.Gh0s7> RnRS (the Revisedn Reports on Scheme).```
07:09 < bridge> <Mr.Gh0s7> <https://www.gnu.org/software/guile/manual/guile.pdf>
13:44 < bridge> <Ewan> wow it is kinda hard to keep this channel's attention haha
13:44 < bridge> <Ewan> pls read
13:48 <+ChillerDragon> read wjat
13:58 < bridge> <0108ben> https://discord.com/channels/252358080522747904/293493549758939136/1078045387228717207
14:04 < bridge> <0108ben> angle speed and position are already in ddrace on the latest versions, in bottom right, i cant really see a need to have any of the others there considering its already on screen, and looking at another part of the screen is pretty easy.. might be useful in some cases but idk
14:04 < bridge> <Ewan> ???
14:04 < bridge> <Ewan> i think you are completely misunderstanding the point
14:05 < bridge> <Ewan> you might not have even read it
14:08 < bridge> <0108ben> ive read it ^^ i just dont see a need for it considering you can see a  whole screen without moving your eyes, its a nice idea, but for me personally i cant see myself using it
14:09 < bridge> <Ewan> not personally
14:09 < bridge> <Ewan> which might be why i prefer it
14:33 < bridge> <Mr.Gh0s7> seems cool but we didn't even add a option for freeze_stars and animations, cause of the burden to maintain the code. So if it gets merged be ready to do some maintaining in the future ;)
18:27 < bridge> <Matodor> trying to run local masterserver
18:27 < bridge> <Matodor> but i got this error
18:27 < bridge> <Matodor> https://pastila.nl/?00827058/0198008796bcd0c732a3f2e74f7c0b7b
18:27 < bridge> <Matodor> when executing POST request to http://127.0.0.1:8080/ddnet/15/register
18:27 < bridge> <Matodor> response is ok (need challenge)
18:27 < bridge> <Matodor> but masterserver dont send challenge token
18:30 < bridge> <Matodor> main.rs:676
18:30 < bridge> <Matodor> https://cdn.discordapp.com/attachments/293493549758939136/1078368229883379712/image.png
18:51 < bridge> <Learath2> UB in rust??? @Ryozuki explain this rn
18:53 < bridge> <Matodor> https://cdn.discordapp.com/attachments/293493549758939136/1078374172465578044/image.png
18:56 < bridge> <Matodor> and master server don't support Content-Type header with charset
18:56 < bridge> <Matodor> ```Content-Type: application/json; charset=utf-8```
18:57 < bridge> <Matodor> i got `{"status":"error","message":"The request's Content-Type is not supported"}` when send with `charset=utf-8`
19:00 <+ChillerDragon> try content type application/json :shrug: random guess xd
19:00 <+ChillerDragon> without charset
19:00 < bridge> <Ryozuki> where
19:00 <+ChillerDragon> why would you need to specify the charset?
19:02 < bridge> <Ryozuki> i mean u get a result with a err and u unwrap it, panicking
19:02 < bridge> <Matodor> because i want write in C#: 
19:02 < bridge> <Matodor> ```
19:02 < bridge> <Matodor> request.Content = JsonContent.Create(_interactor.ServerInfo);
19:02 < bridge> <Matodor> ```
19:02 < bridge> <Matodor> instead of 
19:02 < bridge> <Matodor> ```
19:02 < bridge> <Matodor> request.Content = JsonContent.Create(_interactor.ServerInfo, mediaType: new MediaTypeHeaderValue("application/json")
19:02 < bridge> <Matodor>             {
19:02 < bridge> <Matodor>                 CharSet = null,
19:02 < bridge> <Matodor>             });
19:02 < bridge> <Matodor> ```
19:02 < bridge> <Matodor> by default it sends with  charset
19:03 < bridge> <Ryozuki> @Matodor i googled and found this answer
19:03 < bridge> <Ryozuki> "Just had this problem. Turns out my hard drive was full..."
19:03 < bridge> <Ryozuki> lmao
19:03 < bridge> <Matodor> :kek:
19:03 < bridge> <Ryozuki> is ur disk full
19:03 < bridge> <Matodor> no
19:03 < bridge> <Matodor> https://cdn.discordapp.com/attachments/293493549758939136/1078376639077032129/image.png
19:03 < bridge> <Ryozuki> idk how to interpret that letters
19:04 < bridge> <Matodor> just see white space in bars ðŸ˜„
19:04 < bridge> <Ryozuki> > Found it. The address used as the local endpoint for the socket, in SetupLocalSocket(), used a similarly naive method of getting the address; by resolving the local host and getting the first address. That first address, more often than not, is an IPv6 address, not the IPv4 address that was obviously expected. So, I had it look for the first IPv4 address in the list and use that as the endpoint, and it worked.
19:04 < bridge> <Alloyd> free of
19:04 < bridge> <Ryozuki> another answer
19:05 < bridge> <Ryozuki> @Alloyd of what
19:05 < bridge> <Ryozuki> terabytes?
19:05 < bridge> <Ryozuki> xd
19:05 < bridge> <Ryozuki> 1 cookie free of cookies
19:05 < bridge> <Alloyd> gigabytes
19:05 < bridge> <Matodor> Ð“Ð‘ = gb
19:05 < bridge> <Matodor> Ð¢Ð‘ = tb
19:06 < bridge> <Ryozuki> more like ub this looks correctly handled by tokio
19:06 < bridge> <Ryozuki> ur doing something odd and the os gives u that error
19:07 < bridge> <Ryozuki> btw what version of tokio u using
19:08 < bridge> <Matodor> what is tokio?
19:08 < bridge> <Matodor> i just install rustup and execute 'cargo build.....'
19:08 < bridge> <Matodor> dont have experience with rust
19:10 < bridge> <Matodor> I'll try to run it on other ports now, maybe some one is really used
19:11 < bridge> <Ryozuki> tokio is a rust library
19:11 < bridge> <Ryozuki> that provides a async runtime
19:16 < bridge> <BetA> Hi, I'm trying to code something called "Spectator-mode" on the server side, it's supposed to disable all collisions with a player and all weapon hits, including hooks. but I have a question, for example, let's say I want to disable the influence of grenades with m_GrenadeHitDisabled = true, the player marked as "spectator" will not be able to interact with others because the nades will pass through others (desired behavior), but the other players wil
19:18 < bridge> <Matodor> just check player for "Spectator" mode enabled when grenade hit him? ðŸ¤”
19:38 < bridge> <random developer> @noby i guess this message is for you! :))
19:38 < bridge> <random developer> https://cdn.discordapp.com/attachments/293493549758939136/1078385331520417842/teeworlds_owner.mp3
19:38 < bridge> <random developer> https://cdn.discordapp.com/attachments/293493549758939136/1078385331956629584/teeworlds_co_owner.mp3
19:43 < bridge> <Learath2> @Matodor I wouldn't be surprised if it was never tested on windows, so maybe wait for @heinrich5991 to show up, he can help you debug it
19:43 < bridge> <bencie> this just sounds like a bot promotion
19:43 < bridge> <random developer> the co owner sounds better then owner
19:45 < bridge> <Ryozuki> oh ye it probs wont work on windows
19:45 < bridge> <Ryozuki> well idk
19:46 < bridge> <Izanagi> did i just hear hard r n word
19:46 < bridge> <random developer> hes black
19:46 < bridge> <random developer> and no
19:46 < bridge> <bencie> and im a billionaire
19:46 < bridge> <random developer> WHY U FUCKING HERE THEN
19:46 < bridge> <Ryozuki> just ban this troll
19:46 < bridge> <random developer> GET A FUCKIGN TOP G
19:46 < bridge> <random developer> KRX IS THE BEST
19:46 < bridge> <random developer> nigger
19:47 < bridge> <random developer> download krx now
19:47 < bridge> <Izanagi> damn
19:47 < bridge> <bencie> byee
19:50 < bridge> <Ewan> i'd like to learn more about ddnet's build system
19:50 < bridge> <Learath2> top g nuked
19:50 < bridge> <Ewan> there's obviously some other stuff in here than cmake
19:50 < bridge> <Ewan> cargo
19:50 < bridge> <Learath2> CMake directs it all
19:50 < bridge> <Ewan> well yeah
19:51 < bridge> <Learath2> cargo is called by cmake when needed
19:51 < bridge> <Ewan> when is it needed
19:51 < bridge> <Ewan> does it handle cpp deps too?
19:51 < bridge> <Learath2> When compiling rust modules of which we don't have any yet
19:51 < bridge> <Ewan> hmm
19:52 < bridge> <Ryozuki> we have one
19:52 < bridge> <Ryozuki> it prints the rust version xd
19:52 < bridge> <Ewan> LOL
19:52 < bridge> <Ewan> that is awesome
19:52 < bridge> <Ewan> what are you going for with the rust interop
19:52 < bridge> <Ewan> equivalent API exposure to cpp or specialized stuff
19:52 < bridge> <Ryozuki> idk
19:52 < bridge> <ReiTW> I should take a look at ddnet's rust binding
19:53 < bridge> <Ryozuki> if im real, its quite the effort to do anything with rust due to the ffi
19:53 < bridge> <Ryozuki> or maybe its me cuz im lazy
19:53 < bridge> <Ryozuki> (in the context of ddnet i mean)
19:53 < bridge> <Ewan> yeah
19:53 < bridge> <Ewan> i think many of the safeties involved in rust are kind of null and void when working with a codebase like this anyway
19:53 < bridge> <Ewan> an existing bug trap
19:53 < bridge> <Ryozuki> they arent void
19:53 < bridge> <Ewan> but it is cool
19:53 < bridge> <Ryozuki> its just that they are a bit useless cuz c++ exists
19:53 < bridge> <Ewan> yeah
19:54 < bridge> <Learath2> Honestly I'm thinking maybe we should have waited until there was a usecase with rust :/
19:54 < bridge> <Learath2> Maybe I'll rewrite the authmanager in rust just so it's not completely useless
19:54 < bridge> <Ewan> ðŸ¤”
19:55 < bridge> <Learath2> heinrich was looking into doing the network in rust but replacing such a core part of the code turned out not so easy to do with ffi iirc
20:01 < bridge> <ReiTW> Use AF_XDP sockets for ddnet :giga_chad:
20:01 < bridge> <Ryozuki> https://blog.rust-lang.org/inside-rust/2023/02/23/keyword-generics-progress-report-feb-2023.html
20:02 < bridge> <Ryozuki> > In our previous post we introduced the placeholder async<A> syntax to describe the concept of a "function which is generic over its asyncness". We always knew we wanted something that felt lighter weight than that, so in for our current design we've chosen to drop the notion of a generic parameter for the end-user syntax, and instead picked the ?async notation. We've borrowed this from the trait system, where for example + ?Sized indicates that s
20:02 < bridge> <Ryozuki> Interesting read
20:04 < bridge> <Ryozuki> Also this for const
23:33 < bridge> <heinrich5991> you want `RUST_BACKTRACE=1`, generally btw
23:33 < bridge> <heinrich5991> not full
23:39 < bridge> <heinrich5991> maybe the problem is that windows sockets are ipv6 only?
