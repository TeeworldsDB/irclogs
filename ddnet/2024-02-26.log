00:37 < bridge> <chillerdragon> Which mod? :)
00:37 < bridge> <chillerdragon> Also btw the latest version is 0.7 not 0.6 :p
00:52 < bridge> <Dusquoes> Yes this is my second question, on 06 are more people, tho 07 is the latest version, but there are servers that are playable with 06 and 07 (idk is there some library or idk to include that this is possible?)  what do you people think should i do? this is the mod: https://www.teeworlds.com/forum/viewtopic.php?id=5973 this is the mod
00:53 < bridge> <Dusquoes> Yes this is my second question, on 06 are more people, tho 07 is the latest version, but there are servers that are playable with 06 and 07 (idk is there some library or idk to include that this is possible?)  what do you people think should i do? this is the mod: https://www.teeworlds.com/forum/viewtopic.php?id=5973
00:55 < bridge> <chillerdragon> Woah i didn’t know the mod. I’m such a 0.6 newfag
00:56 < bridge> <chillerdragon> If you want both 0.6 and 0.7 I recommend to base your code on ddnet. It’s servers support both versions. So that’s the only library there is.
00:57 < bridge> <chillerdragon> If it is team and instagib based I can recommend the ddnet-insta fork as a base to get you started
00:59 < bridge> <chillerdragon> https://github.com/ZillyInsta/ddnet-insta
00:59 < bridge> <chillerdragon> 
00:59 < bridge> <chillerdragon> The current master branch sadly has a crashbug so you want to use the hotfix\_map\_reload branch
01:01 < bridge> <chillerdragon> BTW @heinrich5991 that crashbug‘s solution depends on wether a pr gets merged in ddnet that is marked as depends on \#7777 any chance we could merge or decline just that pr? Or somehow move forward \#7777?
02:46 < bridge> <miguilim> xd
02:48 < bridge> <miguilim> what about me doing teeframe for 0.6?
02:48 < bridge> <miguilim> :pepeW:
02:51 < bridge> <miguilim> how the server send to the client that someone is chatting?
02:52 < bridge> <miguilim> nvmd its on obj_character
02:52 < bridge> <miguilim> wait, the client known every other tee health, armor, ammo count?
03:01 < bridge> <Ewan> can u make windows builds of edlang
03:01 < bridge> <Ewan> bad for discovery when u only have linux build
03:23 < bridge> <chillerdragon> It sends 0 values unless it’s sent to the connection that owns the tee
03:24 < bridge> <meloƞ> Nah He should Just openly brag about Linux Superiority and Hit everyone with the: try it Out with WSL2!!!!
03:24 < bridge> <chillerdragon> What about it? You do Teeframe for an outdated version.
03:24 < bridge> <meloƞ> (joking btw)
03:26 < bridge> <chillerdragon> I think
03:26 < bridge> <chillerdragon> Not 100% sure
03:27 < bridge> <chillerdragon> I think spectators get the info too. Spectators and owners
03:48 < bridge> <Ewan> i think u can still build it on windows very easily
03:48 < bridge> <Ewan> but tbh i can see him cutting off windows support in the future
03:48 < bridge> <Ewan> which would be bad
03:49 < bridge> <Ewan> sorry again about your api key melon
03:50 < bridge> <Ewan> i used it a little bit but apparently it forgot or something lol
03:50 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1211505498713489428/image.png?ex=65ee716b&is=65dbfc6b&hm=7bd86b5c341838e1fceee9a1485acabdaa81e879b8033664619331fc0674606c&
04:03 < bridge> <meloƞ> :kek: no worries
04:10 < ws-client> <ChillerDragon> @Ewan need windows download? Here you go https://downloads.teeworlds.com/solidfiles.com/17358/DDRace_Windows.rar
04:10 < ws-client> <ChillerDragon> ddrace_windows.rar served by downloads.teeworlds.com lmao
04:15 < bridge> <Ewan> lol thanks
04:15 < bridge> <Ewan> but we were talking about edlang
04:15 < bridge> <Ewan> maybe u can't see the reply
04:16 < ws-client> <ChillerDragon> @heinrich5991 does deprecated mean you are going to delete that directory? https://heinrich5991.de/teeworlds/maps//maps_deprecated_with_crc/ or just not update?
04:53 < bridge> <Ewan> it boots to desktop in like 15 seconds tho
05:10 < bridge> <Ewan> <https://www.clearlinux.org/clear-linux-documentation/tutorials/nvidia>
05:10 < bridge> <Ewan> this is kinda rough tho
08:00 < bridge> <ryozuki> i want to but its honestly hard and no win  machine
08:00 < bridge> <Ewan> mingw is rly ez to use
08:00 < bridge> <Ewan> wait i forgot its rust
08:00 < bridge> <Ewan> xddd
08:00 < bridge> <ryozuki> yeah
08:00 < bridge> <Ewan> cross compiling on rust is so ez though...
08:00 < ws-client> <ChillerDragon> til this works in teeworlds ``./teeworlds teeworlds:127.0.0.1`` as an alternative to ``./teeworlds "connect 127.0.0.1"`` thats so weird
08:00 < bridge> <ryozuki> ye the thing is not that
08:01 < bridge> <Ewan> testing?
08:01 < bridge> <ryozuki> i havent tried but apparently i have to use the same llvm version as rust? but not sure
08:01 < bridge> <ryozuki> also idk how the linker works
08:02 < bridge> <Ewan> i guess you have to have the language support it too
08:02 < bridge> <Ewan> i forgot
08:02 < bridge> <Ewan> should still be fine tbh
08:02 < bridge> <ryozuki> https://gitlab.com/taricorp/llvm-sys.rs
08:02 < bridge> <ryozuki> Windows
08:02 < bridge> <ryozuki> You must use a version of Rust that uses the same compiler as you build LLVM
08:02 < bridge> <ryozuki> with, either MSVC or MinGW. Fortunately, a mismatch like this will cause errors
08:02 < bridge> <ryozuki> at compile-time when llvm-config provides options which are supported by only
08:02 < bridge> <ryozuki> one of them, so if you're using the other it will cause the build to fail.
08:03 < bridge> <ryozuki> weird shit
08:12 < bridge> <Ewan> bizarre
08:12 < bridge> <milkeeycat> chillerdragon why couldn't u import twlib.copy_tree as copy_tree?
08:15 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1211572195906555964/IMG_4952.jpg?ex=65eeaf89&is=65dc3a89&hm=be9a9bf5d11b5fc55863f1c26b627588989542f8e5775b60ee5997a6a5683a28&
08:15 < bridge> <Ewan> soon we will see how quickly these 3 machines can work together to compile ddnet
08:22 < bridge> <ryozuki> ima try to do edlang windows
08:30 < bridge> <ryozuki> so american
08:30 < bridge> <ryozuki> smol table
08:30 < bridge> <Ewan> table is big
08:30 < bridge> <Ewan> it just has topper
08:55 < bridge> <Jupstar ✪> Wtf that's some interesting layered setup
09:01 < bridge> <teero777> Held up by clamps xddd
09:03 < bridge> <Ewan> Yea dude
09:03 < bridge> <Ewan> i can put my laptop and smaller keyboard behind the keyboard too
09:03 < bridge> <Ewan> under the main platform
09:03 < bridge> <teero777> But you still have no mouse space xxd
09:04 < bridge> <teero777> Are you playing high sens?
09:07 < bridge> <Ewan> Not really playing
09:13 < bridge> <ryozuki> woah i hate windows
09:13 < bridge> <ryozuki> such a dev hostile OS
09:20 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1211588623842148412/GHNVGIhbMAAK9CV.png?ex=65eebed6&is=65dc49d6&hm=2d9e9c2356880c6bad939a0dc4c4f24edab18fdadf7fc47f7b21246769860510&
09:25 < bridge> <Jupstar ✪> Replace Dev with user 😬
09:27 < bridge> <teero777> replace user with ""
09:28 < bridge> <teero777> replace user with '08'
09:28 < bridge> <teero777> replace user with (char)(08)
09:29 < bridge> <teero777> replace user with (char)(8)
09:48 < bridge> <ryozuki> https://alfter.us/2023/09/29/cheatsheet-install-debloated-windows-11-on-qemu/
09:48 < bridge> <ryozuki> @mpft im trying but i already hating myself
09:49 < bridge> <teero777> @ryozuki what for?
09:50 < bridge> <ryozuki> edlang for winshit
09:50 < bridge> <teero777> uff
09:50 < bridge> <ryozuki> :fuckyousnail:
09:50 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1211596156300169306/image.png?ex=65eec5da&is=65dc50da&hm=22aeb946d31e10635593fb890994bdf89e2c84f3ad7ca5955ce2d810cc03ba60&
09:50 < bridge> <teero777> I'd just install windows on a different drive
09:51 < bridge> <teero777> Atleast that's what I do for gaming windows shit
09:51 < bridge> <ryozuki> i dont want windows
09:51 < bridge> <ryozuki> just doing this to compile
09:51 < bridge> <ryozuki> i tried making my dockerfile but i suck
09:52 < bridge> <teero777> Neither do I but if protondb says its impossible to emulate....
09:52 < bridge> <ryozuki> i dont play the game then
09:52 < bridge> <teero777> What about GitHub actions?
09:52 < bridge> <ryozuki> that will be when i get this working
09:52 < bridge> <ryozuki> ci driven development is the worst
09:53 < bridge> <ryozuki> tbh if this takes me more than some hours i will pass
09:53 < bridge> <ryozuki> edlang for linux only
09:53 < bridge> <teero777> But I really wanna play lost ark
09:53 < bridge> <Ewan> i thought you knew better than to install visual studio
09:53 < bridge> <ryozuki> its rustup
09:53 < bridge> <teero777> Just install mingw xd
09:53 < bridge> <Ewan> you're still using msvc
09:53 < bridge> <ryozuki> and no i dont know better
09:53 < bridge> <ryozuki> and i dont want to learn windows shit
09:54 < bridge> <Ewan> lol
09:54 < bridge> <ryozuki> angry developer moment
09:54 < bridge> <ryozuki> xd
09:54 < bridge> <teero777> https://www.msys2.org/
09:55 < bridge> <teero777> Install mingw64 and cmake and you should be good to go
09:56 < bridge> <ryozuki> no im definitly not good to go
09:56 < bridge> <ryozuki> im not doing ddnet stuff
09:56 < bridge> <kekomonter> Maybe already posted here, idk xd
09:56 < bridge> <kekomonter> https://cdn.discordapp.com/attachments/293493549758939136/1211597571055947787/IMG_20240226_090851_250.jpg?ex=65eec72b&is=65dc522b&hm=bdff9c96d1887961a2184c43bfc59f6024c5e0d82c36cc5509bf137734d153d8&
09:56 < bridge> <teero777> tf?
09:57 < bridge> <ryozuki> funny winget only has llvm 15
09:57 < bridge> <ryozuki> more outdated cant be
09:57 < bridge> <Ewan> wdym
09:57 < bridge> <Ewan> why does that matter
09:58 < bridge> <teero777> Compiler is compiler no matter what project it is xd. Except its not cpp
09:58 < bridge> <Ewan> msys2 is still good setup for rust
09:58 < bridge> <teero777> yea
09:59 < bridge> <Ewan> u can get rust from msys repos or add your C:\Users\ryozuki\.cargo\bin to your MSYS path
09:59 < bridge> <Ewan> either in /etc/profile or ~/.profile or ~/.config/fish/config.fish if ur using a good shell
09:59 < bridge> <Ewan> then it's like linux ish
09:59 < bridge> <ryozuki> it matters cuz it needs to match what llvm was compield with
09:59 < bridge> <ryozuki> and as i said idc i dont wanna learn winshit
09:59 < bridge> <Ewan> you can't get a mingw build of llvm ?
10:00 < bridge> <ryozuki> idk
10:00 < bridge> <ryozuki> i definitly dont want to build llvm in a vm
10:01 < bridge> <Ewan> weak
10:02 < bridge> <ryozuki> haha weak is using windows
10:02 < bridge> <Ewan> 🥱
10:12 < bridge> <heinrich5991> the connectionless stuff is only needed for lan servers nowadays. serverinfo for internet servers doesn't go through connless packets anymore
10:18 < bridge> <heinrich5991> where do I find this?
10:18 < bridge> <ryozuki> https://ddstats.org/events
10:21 < bridge> <heinrich5991> ChillerDragon: currently just not update. what do you use it for?
10:22 < bridge> <heinrich5991> cool 🙂 source?
10:22 < bridge> <heinrich5991> I considered doing something like that for the client once, for live-updates of the serverlist
10:22 < bridge> <ryozuki> check the link in the website
10:22 < bridge> <heinrich5991> https://github.com/edg-l/teeobserver
10:22 < bridge> <ryozuki> or read it
10:23 < bridge> <ryozuki> yes
10:26 < bridge> <ryozuki> https://doc.rust-lang.org/cargo/reference/overriding-dependencies.html
10:27 < bridge> <meloƞ> Milkeye????? Wtffff actual useful commit huh ?? You sick or smth
10:31 < bridge> <heinrich5991> what about it? 🙂
10:31 < bridge> <heinrich5991> I use it for testing the fixes in the crates I depend on
10:31 < bridge> <heinrich5991> very useful for that
10:32 < bridge> <ryozuki> yeah
10:32 < bridge> <ryozuki> @mpft no edlang for windows for now
10:32 < bridge> <heinrich5991> what does it depend on? some LLVM shenanigans?
10:32 < bridge> <ryozuki> just llvm library
10:32 < bridge> <ryozuki> but its a pain
10:32 < bridge> <Ewan> rip
10:33 < bridge> <Ewan> distcc tricky to set up across OSes
10:33 < bridge> <ryozuki> cuz the prebuilt llvm doesnt have  llvm-config which is a tool it tells u the llvm version and library paths
10:33 < bridge> <ryozuki> and llvm-sys depends on it
10:33 < bridge> <ryozuki> and i dont want to waste more time on a propietary thing
10:33 < bridge> <ryozuki> it makes me angry xD
10:33 < bridge> <ryozuki> so to get llvm-config i would need to build llvm on windows myself
10:33 < bridge> <ryozuki> = lose 2 hours
10:33 < bridge> <meloƞ> Go See FISHYYYYYYYYYYYYS If angry ryo - they Help!
10:33 < bridge> <heinrich5991> ^^
10:33 < bridge> <meloƞ> Lmao my Phone autocorrected that
10:34 < bridge> <meloƞ> I Just Typed fishies
10:34 < bridge> <ryozuki> macos support is easy tho
10:34 < bridge> <ryozuki> its just windows is so special
10:35 < bridge> <Jupstar ✪> do you even need support for anything other than ryoos? 😏
10:35 < bridge> <ryozuki> for now ill only support FOSS operating systems
10:35 < bridge> <ryozuki> nobody will use this anyway
10:36 < bridge> <Jupstar ✪> xd
10:36 < bridge> <ryozuki> gotta check openbsd
10:36 < bridge> <Jupstar ✪> u never know
10:36 < bridge> <ryozuki> well then my goal will be to make such a good programming language  it will entice ppl to come to linux
10:36 < bridge> <ryozuki> isnt that what windows does with games?
10:36 < bridge> <ryozuki> :owo:
10:38 < bridge> <milkeeycat> https://discord.com/channels/252358080522747904/745926398140612678/1211381450587246672
10:38 < bridge> <meloƞ> :KEKW: :gigachad:
10:43 < bridge> <milkeeycat> Did my pr just got merged in main repo? :santatrollet:
10:43 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1211609513174769664/IMG_20240226_114248.jpg?ex=65eed24a&is=65dc5d4a&hm=4ac0d73ee85864ba41319cfe766c45b072c3c66c812f15d34bdec17063011ec8&
10:56 < bridge> <diariesvexar> 😄
10:57 < bridge> <milkeeycat> I thought u just edit to "contribute code" xd
10:58 < bridge> <milkeeycat> But having dev role feels good
11:00 < bridge> <Ewan> it's a lot harder for windows-exclusive game devs to target Linux than it is for you to target windows lol
11:00 < bridge> <Ewan> though i understand the frustration of having to compile stupid shit
11:01 < bridge> <Ewan> rn im compiling llvm-mingw on my old 6 core i5 because it doesn't have a build for my distro
11:03 < bridge> <Ewan> also congrats milkyboy
11:03 < bridge> <milkeeycat> I didn't code anything ;-;
11:06 < bridge> <gerdoe> :trollet:
11:07 < bridge> <Jupstar ✪> if you feel bad about that, just change it? 😄
11:10 < bridge> <milkeeycat> Yea.. i should
11:12 < bridge> <gerdoe> try to find out how to save teams on map change
11:12 < bridge> <gerdoe> good feature but naive implementation sucks
11:49 < bridge> <bencie.> am I a dev then aswell :justatest:
11:53 < bridge> <teero777> wait wait wait. you now have dev role?!
11:54 < bridge> <bencie.> yippee
11:54 < bridge> <teero777> im still chilling as normal user
11:54 < bridge> <teero777> .....
12:15 < bridge> <Jupstar ✪> That didn't age well
12:15 < bridge> <gerdoe> xd
12:15 < bridge> <Ewan> someone is feeling generous
12:16 < bridge> <gerdoe> my ages since 2020 i suppose
12:17 < bridge> <milkeeycat> 😏
12:18 < bridge> <teero777> Cool I have a Dev role now but I don't feel worthy yet. Guess I'll have to fix some things
12:19 < bridge> <zhn> @blaiszephyr
12:32 < bridge> <Jupstar ✪> Write a tool for my ide that can auto fix it. Else its just style bitching
12:33 < bridge> <chillerdragon> fix\_style.py should be enough
12:33 < bridge> <Jupstar ✪> Conventions that are enforced theoretically are useful for programmers
12:33 < bridge> <chillerdragon> No ide integration needed
12:33 < bridge> <Jupstar ✪> I disagree
12:33 < bridge> <Jupstar ✪> Without ide support it still results in force pushes which slow down the working process
12:35 < bridge> <Jupstar ✪> https://doc.rust-lang.org/std/collections/struct.BTreeMap.html
12:36 < bridge> <Jupstar ✪> Not even rust follows its own rules
12:36 < bridge> <Jupstar ✪> Btree should be one word in their logic
12:36 < bridge> <chillerdragon> Send pic with tw open and I can include it in ma new YouTube video c:
12:36 < bridge> <Jupstar ✪> The module is also called like that
12:37 < bridge> <Jupstar ✪> @heinrich5991 statement
12:37 < bridge> <ChillerDragon> For writing tests and documentation for the 0.6.4 protocol. I found it easier to work with crc maps for that.
12:38 < bridge> <heinrich5991> if you want permalinks, use the sha256
12:38 < bridge> <ChillerDragon> I have a compilation of pcap files and python tests and html files etc where i would like to reference that this is downloading map xyz with crc so and so and it can be downloaded from this heinrich5991.de url
12:39 < bridge> <ChillerDragon> but 0.6.4 uses crc
12:39 < bridge> <heinrich5991> then mention the sha256 of the maps that were downloaded
12:39 < bridge> <heinrich5991> to get a permalink
12:40 < ws-client> <ChillerDragon> its more complicated to verify then https://chillerdragon.github.io/teeworlds-protocol/06/system_messages.html#NETMSG_MAP_DATA
12:40 < ws-client> <ChillerDragon> here it sends a crc
12:40 < ws-client> <ChillerDragon> crc is shorter to type creates shorter file names in my pcap collection
12:40 < ws-client> <ChillerDragon> and i do not need to translate the sha to crc 
12:40 < bridge> <heinrich5991> all the wrong reasons. if it motivates you, I can delete the crc endpoint
12:41 < ws-client> <ChillerDragon> nah just keep one forever :p 
12:41 < ws-client> <ChillerDragon> its annoying to use sha when the whole thing is about crc
12:41 < ws-client> <ChillerDragon> just feels wrong
12:42 < bridge> <heinrich5991> sha256 is just another file checksum
12:42 < bridge> <heinrich5991> (that is actually secure)
12:42 < ws-client> <ChillerDragon> yes i understand
12:42 < ws-client> <ChillerDragon> but its still additional complexity where i really do not want it
12:42 < ws-client> <ChillerDragon> for no gains
12:42 < bridge> <heinrich5991> the gains are that people can actually verify they got the correct map
12:42 < ws-client> <ChillerDragon> its fine i can just build my own crc mirror then i guess
12:43 < ws-client> <ChillerDragon> crc is good enough for that in a sample map
12:43 < bridge> <heinrich5991> it's usual, even without any protocol shenanigans, to provide sha256 hashes of files
12:43 < ws-client> <ChillerDragon> yes i know
12:43 < bridge> <heinrich5991> see e.g. https://ddnet.org/downloads/sha256sums.txt
12:43 < ws-client> <ChillerDragon> but crc is baked into the protocol
12:43 < ws-client> <ChillerDragon> so thats the interesting value
12:43 < bridge> <heinrich5991> and you can *additionally* specify the sh256
12:43 < ws-client> <ChillerDragon> when i am documenting the protocl
12:43 < bridge> <heinrich5991> and you can *additionally* specify the sha256
12:44 < ws-client> <ChillerDragon> then the url is still non obivious
12:44 < ws-client> <ChillerDragon> because it does not match
12:44 < bridge> <heinrich5991> then build your own mirror, please
12:44 < ws-client> <ChillerDragon> ye k
12:44 < bridge> <Jupstar ✪> I'm still in trouble about if I prefer blake2 or 3 vs sha3
12:44 < bridge> <Jupstar ✪> Chiller opinion?
12:45 < bridge> <heinrich5991> what do you want to optimize for?
12:45 < bridge> <heinrich5991> I heard blake3 is good for speed
12:45 < bridge> <Jupstar ✪> Yes
12:45 < bridge> <Jupstar ✪> But not standard
12:45 < ws-client> <ChillerDragon> it didnt use it yet for anything was just thinking about doing so @heinrich5991 so from my side you can delete the crc folder but i always liked using that for testing etc. Espeically since many clients still only print crc in the logs
12:45 < bridge> <Jupstar ✪> But sha3 adaption sucks too
12:46 < ws-client> <ChillerDragon> i dont even know blake
12:46 < bridge> <Jupstar ✪> So speed might be more convincing xd
12:46 < ws-client> <ChillerDragon> i use sha1 mostly trololol
12:46 < ws-client> <ChillerDragon> because it is installed on most systems
12:46 < bridge> <heinrich5991> you could use sha256 if you want to have a standard thing
12:46 < ws-client> <ChillerDragon> ``sha1sum``
12:46 < bridge> <Jupstar ✪> But I heard sha3 can be extremely fast too on fpga
12:46 < bridge> <Jupstar ✪> Old is always bad
12:46 < ws-client> <ChillerDragon> sha256sum is always trouble on figuring out where to install it from and then you have to think about portability for other ppl
12:47 < ws-client> <ChillerDragon> as someone who uses shell as their main language xd
12:47 < bridge> <Jupstar ✪> Only the newest of the newest is good enough
12:47 < bridge> <heinrich5991> soo, we should move to teeworlds 0.7 protocol?
12:47 < bridge> <heinrich5991> no, newest is not always best
12:47 < ws-client> <ChillerDragon> now
12:47 < bridge> <Jupstar ✪> How is that new?
12:47 < ws-client> <ChillerDragon> im ready
12:47 < bridge> <Jupstar ✪> It's like 10 years old
12:47 < ws-client> <ChillerDragon> ipv6
12:48 < bridge> <heinrich5991> afaik NIST did not create a new hash function because the old one was obsolete
12:48 < bridge> <Jupstar ✪> But in case of it getting unstable
12:48 < ws-client> <ChillerDragon> arbeitsbeschaffungsmaßnahme
12:48 < ws-client> <ChillerDragon> some1 was bored and built new hash
12:48 < bridge> <Jupstar ✪> As backup
12:48 < bridge> <heinrich5991> yes. just like sha2 might be there if sha3 gets broken
12:49 < bridge> <Jupstar ✪> So Blake it shall be u say?😏
12:49 < ws-client> <ChillerDragon> why do you need standard in your case?
12:49 < bridge> <heinrich5991> blake is also parallelizable
12:49 < bridge> <heinrich5991> so you can use all your cores to compute it
12:49 < bridge> <Jupstar ✪> I don't need it
12:49 < ws-client> <ChillerDragon> if its fastest and u have a good lib in rust for it that you can ship to client and server it seems like the best fit for ddpg2
12:50 < bridge> <Jupstar ✪> It's just an pro argument
12:50 < bridge> <Jupstar ✪> Not a decision making argument
12:50 < bridge> <Jupstar ✪> OK boss
12:51 < ws-client> <ChillerDragon> im so curious if u ever reach playable state
12:51 < ws-client> <ChillerDragon> that would be crazy
12:51 < ws-client> <ChillerDragon> ryo released a full programming language already axaxax
12:51 < ws-client> <ChillerDragon> and there is no alpha rls of jupjapjapsti-net2
12:52 < bridge> <Jupstar ✪> Why should I not
12:52 < bridge> <Jupstar ✪> But only vanilla as first step
12:52 < ws-client> <ChillerDragon> idk its big project
12:52 < bridge> <Jupstar ✪> But the engine is almost done
12:52 < ws-client> <ChillerDragon> pog
12:53 < bridge> <Jupstar ✪> Vanilla itself is actually not lot of code
12:53 < bridge> <Jupstar ✪> I just hate it xd
12:53 < ws-client> <ChillerDragon> rude
12:53 < bridge> <Jupstar ✪> But thanks to zwelf I have a new door open
12:53 < ws-client> <ChillerDragon> wot
12:53 < ws-client> <ChillerDragon> u use his lib?
12:53 < ws-client> <ChillerDragon> isnt there license issues?
12:53 < bridge> <Jupstar ✪> I can break some tw "physics" without breaking ddnet physics
12:53 < ws-client> <ChillerDragon> woah
12:54 < ws-client> <ChillerDragon> 0.5 wall hammer
12:54 < bridge> <Jupstar ✪> And I explicitly don't mean core physics
12:54 < bridge> <Jupstar ✪> Yeah the way projectiles are handled and stuff
12:54 < bridge> <Jupstar ✪> It frustrats me a bit
12:54 < bridge> <Jupstar ✪> Not yet
12:55 < bridge> <Jupstar ✪> License is a kinda problem
12:55 < ws-client> <ChillerDragon> lawyer jopsti moment
12:55 < bridge> <Jupstar ✪> I think it would be nice if ppl can still base mods based on ddnet physics
12:55 < bridge> <Jupstar ✪> But generally physics are completely separated
12:55 < bridge> <Jupstar ✪> So u could say it will simply not live in the main repo
12:56 < ws-client> <ChillerDragon> this all sounds very annoying already
12:56 < bridge> <Jupstar ✪> I agree
12:56 < ws-client> <ChillerDragon> BSD masterrace
12:56 < bridge> <Jupstar ✪> Easiest would be to not use copyleft
12:56 < ws-client> <ChillerDragon> yes
12:56 < ws-client> <ChillerDragon> using copyleft is supporting peophelia
12:56 < bridge> <Jupstar ✪> Xd
12:57 < ws-client> <ChillerDragon> omg i typoed that word hard
12:57 < ws-client> <ChillerDragon> probably for the better
12:57 < bridge> <Jupstar ✪> It's just so complicated to understand
12:57 < ws-client> <ChillerDragon> ye
12:57 < bridge> <Jupstar ✪> Ofc proprietary is not better xd
12:57 < bridge> <Jupstar ✪> Or even worse
12:57 < ws-client> <ChillerDragon> iirc BSD was literally created to not deal with any legal questions
12:58 < bridge> <heinrich5991> I'd like to have a citation for that
12:58 < ws-client> <ChillerDragon> for what=
12:58 < bridge> <heinrich5991> > [iirc] BSD was literally created to not deal with any legal questions
12:58 < ws-client> <ChillerDragon> "iirc"
12:58 < ws-client> <ChillerDragon> idk where i heard that
12:58 < bridge> <heinrich5991> yes. do you remember correctly?
12:58 < bridge> <heinrich5991> I'm interested in that
12:58 < bridge> <heinrich5991> ok
12:58 < ws-client> <ChillerDragon> usually not
13:01 < ws-client> <ChillerDragon> I did a quick search didn't find anything. I think i heard that in some tech talk about one of the BSD operating systems like OpenBSD or FreeBSD
13:02 < ws-client> <ChillerDragon> Something about the devs wanting to be let alone and just publish their code
13:05 < bridge> <Jupstar ✪> U could probably argue that using BSD license means you also care less about the legal consequences
13:05 < bridge> <Jupstar ✪> I doubt smone with BSD would try to sue u. Or is less motivated than a GPL guy
13:05 < bridge> <heinrich5991> afaik linux hasn't sued anyone
13:06 < bridge> <Jupstar ✪> Epyc
13:06 < bridge> <heinrich5991> couldn't find anything quickly using "linux epyc" or "linux epyc lawsuit"
13:07 < bridge> <heinrich5991> do you have a link?
13:07 < bridge> <Jupstar ✪> Epyc future human moment
13:07 < bridge> <Jupstar ✪> Try that
13:23 < bridge> <reitw> Ddnet has a bsd build?
13:26 < bridge> <chillerdragon> lmao
13:27 < bridge> <chillerdragon> I am not a lawyer. But I’d say ddnets license is close to bsd
13:28 < bridge> <Jupstar ✪> Zlib license
13:29 < bridge> <chillerdragon> Thanks lawyer jopsti
13:29 < bridge> <chillerdragon> Whatever the diff between zlib and bsd is
13:36 < bridge> <Jupstar ✪> I think that's hard to say. Zlib is not very common. So I guess you'll not find many answers on that
13:44 < bridge> <teero777> Chiller when are you gonna release chillerdragores16?
14:13 < bridge> <ryozuki> @mpft got new speakers
14:13 < bridge> <ryozuki> these have better lows im sure
14:13 < bridge> <ryozuki> and they like 2x bigger xD
14:13 < bridge> <Ewan> awesome
14:13 < bridge> <Ewan> which speakers
14:13 < bridge> <ryozuki> im sure u will say they bad
14:13 < bridge> <ryozuki> @mpft i didnt know these speakers used cable  directly
14:13 < bridge> <ryozuki> to connect each other
14:14 < bridge> <ryozuki> u know like bare cable
14:14 < bridge> <Ewan> yea
14:14 < bridge> <Ewan> i hope that isn't a problem for u
14:14 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1211662558801690716/PXL_20240226_130329035.jpg?ex=65ef03b1&is=65dc8eb1&hm=e744d53acc852be5f61560f7c3901a53bb70c8b940633867733c1a114b1d0e85&
14:14 < bridge> <ryozuki> nope it works
14:14 < bridge> <Ewan> oh you got actual monitors
14:14 < bridge> <Ewan> awesome
14:14 < bridge> <ryozuki> what does that mean
14:14 < bridge> <archimede67> When go DM
14:14 < bridge> <ryozuki> i also bought a table xD
14:14 < bridge> <ryozuki> wanted to dabble a bit
14:14 < bridge> <Ewan> table looks cool
14:15 < bridge> <ryozuki> no
14:15 < bridge> <ryozuki> i mean dj one
14:15 < bridge> <ryozuki> not the wood table
14:15 < bridge> <ryozuki> xd
14:15 < bridge> <Ewan> uhh
14:15 < bridge> <Ewan> like a turntable?
14:15 < bridge> <ryozuki> mixing table
14:15 < bridge> <ryozuki> i thin its the name
14:15 < bridge> <Ewan> WTF
14:15 < bridge> <ryozuki> u know
14:15 < bridge> <ryozuki> idk bro
14:15 < bridge> <ryozuki> its 100 €
14:15 < bridge> <ryozuki> nothing fancy
14:15 < bridge> <Ewan> fotos?
14:16 < bridge> <ryozuki> this one
14:16 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1211662977892098048/PXL_20240226_130334154.jpg?ex=65ef0415&is=65dc8f15&hm=bad2cfbaab7726abbb2ec9ec1ed8476a5e97ca893d05d67540713af11dd33c2c&
14:16 < bridge> <ryozuki> it works with mixxx
14:16 < bridge> <Ewan> oh like a cdj
14:17 < bridge> <Ewan> nice
14:17 < bridge> <Ewan> do you do any pro audio stuff already
14:17 < bridge> <ryozuki> what do u consider pro audio stuff
14:17 < bridge> <ryozuki> i mixed a bit before (or tried)
14:17 < bridge> <ryozuki> with software
14:17 < bridge> <ryozuki> mixxx
14:17 < bridge> <Ewan> i see
14:18 < bridge> <ryozuki> @mpft looked before and made sure this table  was full usb midi compliant or smth
14:18 < bridge> <Ewan> cool man
14:18 < bridge> <ryozuki> so it works with linux
14:18 < bridge> <Ewan> nice
14:18 < bridge> <Ewan> ive never used mixxx before so idk
14:19 < bridge> <ryozuki> i think its nice
14:19 < bridge> <ryozuki> its open source
14:19 < bridge> <Ewan> i never mixed as like a standalone thing
14:19 < bridge> <Ewan> always other parts involved
14:19 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1211663817600270386/image.png?ex=65ef04dd&is=65dc8fdd&hm=c0c4a2f853f73ad5eca9607e68b6f4cc4cee177d12ea972c6683a6bfaa25637f&
14:20 < bridge> <Ewan> i see
14:20 < bridge> <Ewan> i just use fl studio mixer
14:20 < bridge> <Ewan> it’s goated…
14:21 < bridge> <ryozuki> isnt it more to produce music?
14:21 < bridge> <ryozuki> idk but fl sutdio is propietary
14:21 < bridge> <ryozuki> im a free software dj
14:21 < bridge> <ryozuki> :gigachad:
14:22 < bridge> <ryozuki> https://github.com/LMMS
14:29 < bridge> <Ewan> vile piece of software
14:33 < bridge> <patiga> ```rust
14:33 < bridge> <patiga> trait Trait {
14:33 < bridge> <patiga>     fn abs(self) -> Self;
14:33 < bridge> <patiga> }
14:33 < bridge> <patiga> 
14:33 < bridge> <patiga> impl Trait for i64 {
14:33 < bridge> <patiga>     fn abs(self) -> Self {
14:33 < bridge> <patiga>         2 * self
14:33 < bridge> <patiga>     }
14:33 < bridge> <patiga> }
14:33 < bridge> <patiga> 
14:33 < bridge> <patiga> fn main() {
14:33 < bridge> <patiga>     let x = 42;
14:33 < bridge> <patiga>     println!("{}", x.abs());
14:33 < bridge> <patiga>     println!("{}", x.abs());
14:33 < bridge> <patiga>     println!("{}", x.abs());
14:33 < bridge> <patiga> }
14:33 < bridge> <patiga> ```
14:33 < bridge> <patiga> New Rust riddle 🎉 with non-suggestive print calls: What will this program output?
14:34 < bridge> <patiga> ah forget the second and third print for a sec
14:35 < bridge> <ryozuki> 42 * 2 ?
14:35 < bridge> <ryozuki> default int is i64 iirc
14:35 < bridge> <ryozuki> or was it i32
14:35 < bridge> <patiga> default is i32
14:35 < bridge> <ryozuki> i32 ye
14:35 < bridge> <ryozuki> so its 42
14:35 < bridge> <ryozuki> xd
14:36 < bridge> <patiga> and now ofc: not all print statements print the same xd
14:36 < bridge> <ryozuki> or maybe print makes some cast
14:36 < bridge> <ryozuki> ra says its i64
14:36 < bridge> <patiga> well casts would need to be explicit in Rust
14:36 < bridge> <ryozuki> im sure the print makes it change
14:36 < bridge> <ryozuki> the infered type
14:37 < bridge> <ryozuki> ```rust
14:37 < bridge> <ryozuki> #![feature(prelude_import)]
14:37 < bridge> <ryozuki> #[prelude_import]
14:37 < bridge> <ryozuki> use std::prelude::rust_2021::*;
14:37 < bridge> <ryozuki> #[macro_use]
14:37 < bridge> <ryozuki> extern crate std;
14:37 < bridge> <ryozuki> trait Trait {
14:37 < bridge> <ryozuki>     fn abs(self) -> Self;
14:37 < bridge> <ryozuki> }
14:37 < bridge> <ryozuki> impl Trait for i64 {
14:37 < bridge> <ryozuki>     fn abs(self) -> Self {
14:37 < bridge> <ryozuki>         2 * self
14:37 < bridge> <ryozuki>     }
14:37 < bridge> <ryozuki> }
14:37 < bridge> <ryozuki> fn main() {
14:37 < bridge> <ryozuki>     let x = 42;
14:37 < bridge> <ryozuki>     {
14:37 < bridge> <ryozuki>         ::std::io::_print(format_args!("{0}\n", x.abs()));
14:37 < bridge> <ryozuki>     };
14:37 < bridge> <ryozuki>     {
14:37 < bridge> <ryozuki>         ::std::io::_print(format_args!("{0}\n", x.abs()));
14:37 < bridge> <ryozuki>     };
14:37 < bridge> <ryozuki>     {
14:37 < bridge> <ryozuki>         ::std::io::_print(format_args!("{0}\n", x.abs()));
14:37 < bridge> <ryozuki>     };
14:37 < bridge> <ryozuki> }
14:37 < bridge> <ryozuki> 
14:37 < bridge> <ryozuki> ```
14:38 < bridge> <ryozuki> i think format args is compiler builtin
14:38 < bridge> <patiga> Answer:
14:38 < bridge> <patiga> || 84 42 42 ||
14:39 < bridge> <patiga> Relevant Rust issue (contains spoiler):
14:39 < bridge> <patiga> ||https://github.com/rust-lang/rust/issues/121453||
14:42 < bridge> <ryozuki> damn
14:44 < bridge> <Ewan> awesome
14:44 < bridge> <ryozuki> subscribed
14:44 < bridge> <Jupstar ✪> Oh, ||all 42|| would probably still make sense
14:44 < bridge> <ryozuki> ye
14:44 < bridge> <ryozuki> its a inference bug
14:45 < bridge> <ryozuki> "bug"
14:45 < bridge> <ryozuki> idk if they consider it a bug
14:45 < bridge> <ryozuki> I guess the type infer cause first x.abs() call search abs method and Trait::abs is found. Once the type of x is inferred to be i64, then it will use core::num::abs.
14:45 < bridge> <ryozuki> > I guess the type infer cause first x.abs() call search abs method and Trait::abs is found. Once the type of x is inferred to be i64, then it will use core::num::abs.
14:46 < bridge> <patiga> imo this is clearly a bug ^^
14:46 < bridge> <Jupstar ✪> Well I don't even understand why it's casted to i64
14:46 < bridge> <ryozuki> u dont specify a type
14:46 < bridge> <ryozuki> its never casted
14:46 < bridge> <ryozuki> its infered
14:46 < bridge> <Jupstar ✪> I'd have expected i32::abs to be called
14:47 < bridge> <ryozuki> it infers it to be i64 because it sees a possible trait method i think
14:47 < bridge> <ryozuki> and then not and it uses i32 abs
14:47 < bridge> <ryozuki> weird stuff
14:47 < bridge> <ryozuki> idk
14:47 < bridge> <patiga> it uses i64 abs after
14:47 < bridge> <ryozuki> > It seems only the first call in a block will be resolved to Trait::abs and all the calls after in the same block to the latter.
14:48 < bridge> <Jupstar ✪> I still find that behavior weird
14:48 < bridge> <patiga> yea, once iti s infered as i64, it uses i64::abs
14:48 < bridge> <patiga> *its
14:48 < bridge> <patiga> yea def a bug
14:48 < bridge> <Jupstar ✪> Before changing to i64 I expected it to search all i32 traits
14:48 < bridge> <Jupstar ✪> And then i32::abs would be found
14:49 < bridge> <patiga> or, alternatively, the trait method all the way
14:49 < bridge> <ryozuki> @patiga thanks for posting always interesting this kind of things
14:49 < bridge> <ryozuki> and i quizzed my coworkers
14:49 < bridge> <ryozuki> kek
14:49 < bridge> <patiga> 👍 nice ^^
15:28 < bridge> <ryozuki> @mpft do u know any good dac/amp with rca out
15:29 < bridge> <ryozuki> since this speakers have separate left right rca
15:29 < bridge> <ryozuki> the fioo i have doesnt have rca
15:29 < bridge> <ryozuki> what u think of Fosi Audio K5 Pro
15:32 < bridge> <ryozuki> iFi ZEN DAC V2 looks good too
15:43 < bridge> <ryozuki> ok got some already
16:52 < bridge> <Jupstar ✪> @milkeeycat ur time to shine
16:52 < bridge> <Jupstar ✪> 🧙‍♂️
16:52 < bridge> <milkeeycat> I spent 3 hours in editor code and an ready to kms
16:52 < bridge> <Jupstar ✪> Yesterday you said tomorrow
16:53 < bridge> <Jupstar ✪> Stop giving up
16:53 < bridge> <milkeeycat> Nah, tomorrow xd
16:55 < bridge> <milkeeycat> U wanna help me? :owo:
16:55 < bridge> <milkeeycat> I know what the problem is, u just need to fix it
16:56 < bridge> <ryozuki> https://tenor.com/view/dancing-ferris-rust-programming-gif-22216348
16:58 < bridge> <archimede67> *please don't touch editor code too much*
16:59 < bridge> <milkeeycat> I wrote more dbg_msg in that bich than in my entire life
16:59 < bridge> <milkeeycat> I wrote more dbg_msg's in that bich than in my entire life
17:00 < bridge> <Jupstar ✪> Is the convex hull our bezier curves always inside the time frame between two animation points?
17:00 < bridge> <Jupstar ✪> Is the convex hull of our bezier curves always inside the time frame between two animation points?
17:12 < bridge> <zhn> :poggers2:
18:21 < bridge> <milkeeycat> what is this black magic.
18:21 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1211724699671732324/image.png?ex=65ef3d91&is=65dcc891&hm=fdcd1ff080c556abcf53264319b85a61ca14bc2474298fc87121927457692e92&
18:21 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1211724700636414072/image.png?ex=65ef3d91&is=65dcc891&hm=0429f308d80f23c30147e2d76fe01998677a15213be82b5080f46ab2fc8b09d9&
18:24 < bridge> <zhn> ub?
18:27 < bridge> <robyt3> Maybe the vector already has capacity so it's not technically out-of-bounds of the underlying array, or it doesn't crash immediately if you only try to print from an invalid address
18:27 < bridge> <kdaniel> if you working in scoreworker.cpp
18:27 < bridge> <kdaniel> `if(w == Write::NORMAL){}`
18:27 < bridge> <kdaniel> I always see it but never cant interpret it 100%. Is this something like Post trigger? like `NORMAL_SUCCEEDED` and `NORMAL_FAILED` are self explained
18:29 < bridge> <kdaniel> this is cpp not js
18:30 < bridge> <kdaniel> but to be fair im doing to too like that xD
18:31 < bridge> <milkeeycat> i can write to it as well
18:31 < bridge> <milkeeycat> ill call it a feature and go back to writing hello world in c++
18:54 < bridge> <meloƞ> Damn - should we bother ?
18:55 < bridge> <kdaniel> lol gg wp
19:01 < bridge> <ryozuki> @mpft https://www.youtube.com/watch?v=5QHVvJsn2Ug
19:01 < bridge> <ryozuki> listen to this
20:07 < bridge> <learath2> Did you know protobuf does not have fixed size array support?
20:08 < bridge> <learath2> Why would anyone make a binary packing format and not have a way of including a fixed size array?
20:11 < bridge> <learath2> With the release of electron, I think I just ended up on the wrong side of a multiverse split
20:17 < bridge> <learath2> There is no u8 either, I simply do not get modern software at all nor do I get the mindset in which it is designed
20:21 < bridge> <meloƞ> oh is that the: redirect players on map change thingie?
20:23 < bridge> <meloƞ> i wish someone would finally update the script so it works with clang-format 19, clang-format 10, its not even supported by most package manager's anymore :OHNOOOO:
20:26 < bridge> <learath2> We are trying to avoid large formatting commits and I think current clangformat also misformats some of our code
20:29 < bridge> <meloƞ> what about just shipping ddnet with a standalone version of clang-format 10 that it refers to?, or will that interfere with IDE's ?
20:30 < bridge> <learath2> https://github.com/muttleyxd/clang-tools-static-binaries this is where I refer people to and there is an AUR package that installs these into `/opt/`
20:30 < bridge> <meloƞ> idk if i should refer to clang-format 10 as a stand-alone tool or a lib
20:30 < bridge> <meloƞ> oh this is.. nice - thanks :D
20:34 < bridge> <learath2> https://capnproto.org/ I found an alternative built by a person that is actually sane
20:34 < bridge> <learath2> Not at all surprised that they work at cloudflare, seems to be the last bastion of good engineering these days
21:23 < bridge> <ryozuki> we talked about this several times in this channel xd
21:23 < bridge> <ryozuki> @learath2 the author made or used to do protobuf at google
21:23 < bridge> <ryozuki> but was fired iirc
21:23 < bridge> <ryozuki> idk
21:24 < bridge> <learath2> He used to work in the protobuf team indeed
21:24 < bridge> <learath2> He was probably too sensible for google
22:15 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1211783621342527519/GHQQCArWkAADRb_.png?ex=65ef7471&is=65dcff71&hm=40c4bab49ec2b79049b038440e88d94ecd5a73ad485da82ea605db33e6f1b908&
22:25 < bridge> <reitw> youtube having hard time
22:25 < bridge> <reitw> kek
23:51 < bridge> <learath2> who is this memer
23:56 < bridge> <chillerdragon> lmao why? I forgot which one that was do you even know it? I think it got rejected. Only maps I’m working on these days are ChillerDragores2 and ChillerDragores6
23:59 < bridge> <chillerdragon> lmao
