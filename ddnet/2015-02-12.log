04:13 < Nimda> DDNet CHN went down!
04:14 < Nimda> DDNet CHN went back online!
04:16 < Nimda> DDNet CHN went down!
04:17 < Nimda> DDNet CHN went back online!
05:07 < Nimda> DDNet Chile went down!
05:09 < Nimda> DDNet Chile went back online!
10:08 < Nimda> DDNet Chile went down!
10:09 < Nimda> DDNet Chile went back online!
13:12 <@deen> Learath2: i think http download with some file names doesn't work, like [School] Hammer
14:54 < Learath2> deen: will take a look in like 2 hours
14:55 < Learath2> knew some names might fail
14:55 <@deen> i noticed while playing in china
14:55 <@deen> took some time to download that map^^
15:00 < ddnet-commits> [ddnet] Learath2 opened pull request #145: Actually remove the function (DDRace64...pr_cleanup) http://git.io/NWqd
15:00 < Learath2> this pull is for a git interactive add fail
15:00 < Learath2> not the filename thing
15:01 <@deen> didn't i do that already?
15:01 <@deen> https://github.com/def-/ddnet/commit/dd3fae069bb0a18fc4678fff6e45573ad51392c4
15:02 < ddnet-commits> [ddnet] def- closed pull request #145: Actually remove the function (DDRace64...pr_cleanup) http://git.io/NWqd
15:02 < Learath2> i pullreq'd but apparently git didnt feel like adding the 3rd commit for that branch
15:02 < Learath2> oh you did 
15:02 < Learath2> deen: would you mind firing up a server with [School] Hammer
15:05 <@deen> Learath2: done
15:14 < Learath2> deen: nginx is sending 400 Bad Request thats why its failing no idea why tho
15:14 <@deen> yes, because those are invalid characters
15:14 <@deen> you have to url-encode them
15:14 <@deen> [ and ]
15:14 <@deen> (i guess)
15:15 < Learath2> yeah thats the reason 
15:15 < Learath2> raw spaces
15:15 < Learath2> and stuff
15:20 < ddnet-commits> [ddnet] def- pushed 2 new commits to DDRace64: http://git.io/NWCq
15:20 < ddnet-commits> ddnet/DDRace64 62a1a36 def: Cleanup
15:20 < ddnet-commits> ddnet/DDRace64 2b32b4a def: Add fire delay tunings
15:29 < Learath2> curl needs a handle to escape a string
15:29 < Learath2> y so weird
17:29 < o_be_one> hi
17:40 <@deen> hi
17:56 < BeaR_> hey (:
17:56 <@deen> hi BeaR_ 
18:46 < Nimda> Caventure by Meliodafu just released on Moderate at 2015-02-12 18:44
18:49 < BeaR_> newcomer and gameplay award ^^?
18:49 <@deen> no idea^^
18:49 < BeaR_> did you add this :p?
18:50 <@deen> nope
18:51 < ddnet-commits> [ddnet] def- pushed 1 new commit to DDRace64: http://git.io/N8Oe
18:51 < ddnet-commits> ddnet/DDRace64 4a1d142 def: Add generic_unhookable (+0.7) rules by hi_leute_gll
19:00 < ddnet-commits> [ddnet] Learath2 opened pull request #146: Escape the filenames. (DDRace64...pr_Escape) http://git.io/N8ZR
19:00 < Learath2> deen: did fix the filename thing but dont quite like how it looks
19:01 < Learath2> didnt really want to expose libcurl to client.cpp also didnt want client.cpp having to call somekind of fetcher->free to free the string returned
19:01 <@deen> !ddnetpeak
19:01 < Nimda> Current players on DDNet : 579
19:01 < Nimda> Current DDNet peak : 711 users online at 2014-12-21 20:13:02
19:02 <@deen> thanks, Learath2 
19:15 <@deen> !ddnetpeak
19:15 < Nimda> Current players on DDNet : 593
19:15 < Nimda> Current DDNet peak : 711 users online at 2014-12-21 20:13:02
19:15 < Learath2> deen: feel free to either merge or fix it then merge
19:20 <@deen> i did already
19:20 <@deen> the github bot just sometimes doesn't like to write
19:25 <@deen> this new map is popular
19:25 <@deen> !ddnetpeak
19:25 < Nimda> Current players on DDNet : 604
19:25 < Nimda> Current DDNet peak : 711 users online at 2014-12-21 20:13:02
19:29 < eeeee> Learath2: u mad
19:29 < Learath2> eeeee: y?
19:30 < eeeee> i think fetcher shouldn't expose any Escape to end user
19:30 < eeeee> and somehow deal with that internally
19:33 < Learath2> eeeee: tried that couldnt figure out what to escape
19:34 < eeeee> i'd escape everything except the '/'
19:35 < eeeee> unless '.' and ':' are also subject to escaping, in which case i'd pass in protocol and host separately in QueueAdd
19:35 < Learath2> libcurl does escape the / tho
19:35 < eeeee> map names can't possibly contain / tho
19:36 < Learath2> i tried passing the whole url to curl_easy_escape that also escaped the /'s
19:36 < eeeee> so i'd split the path string on '/' and escape each path
19:36 < eeeee> each part*
19:37 < eeeee> hmm maybe you don't even have to do that
19:38 < eeeee> i think it might work with escaped /
19:38 < Learath2> didnt work when i escaped the whole url tho
19:38 < eeeee> yeah if you escape the / in "http://" then obv it wouldnt work
19:39 < Learath2> maybe i should just let fetcher append that 
19:39 < eeeee> yeah so you might want to just pass them separately
19:39 < Learath2> i think i shouldnt let the user pass the protocol
19:39 < eeeee> why not
19:40 < eeeee> what if someone would host maps using LDAPS or Gopher
19:40 < Learath2> eeh the QueueAdd call already is huge
19:41 < eeeee> put protocol+host in one argument?
19:42 < Learath2> eeeee: hao2?
19:44 < eeeee> like right now you have aUrl, instead you'd have aProtocolAndHostMixedNotStirred and aPath
19:45 < eeeee> also maybe QueueAdd can create a new CFetcherTask for you and return it
19:45 < eeeee> so that you don't have to pass it in
19:45 < Learath2> eeeee: thats what i did first
19:46 < Learath2> but i have no idea when to free it that way
19:46 < eeeee> how is this different?
19:47 < eeeee> also you should lern2unique_ptr
19:47 < eeeee> (not that i know how to properly lvrg it but have heard it's teh shit)
19:48 < Learath2> well client allocated it client has to free it = obv
19:48 < Learath2> fetcher allocated it returned it client has to free it != obv
19:48 < BeaR_> unique_ptr in teeworlds, umad^^?
19:48 < eeeee> unique_ptr all the things!
19:49 < eeeee> well whatever
19:49 < eeeee> Learath2: if it works pls don't fix it :)
19:53 < Learath2> not sure if thats good practice :D
