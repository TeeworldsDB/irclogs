00:02 < bridge> <Jupstar ‚ú™> Leaving resources alive
00:02 < bridge> <heinrich5991> at process exit?
00:02 < bridge> <heinrich5991> got a link?
00:03 < bridge> <Jupstar ‚ú™> It doesn't know about what a process is
00:04 < bridge> <ryozuki> https://en.wikipedia.org/wiki/Very_long_instruction_word
00:05 < bridge> <heinrich5991> would still be interested in a link
00:06 < bridge> <Jupstar ‚ú™> Well it's in the spec as said
00:06 < bridge> <Jupstar ‚ú™> https://registry.khronos.org/vulkan/specs/1.3-extensions/html/vkspec.html#vkDestroyDevice
00:08 < bridge> <heinrich5991> > Prior to destroying a device, an application is responsible for destroying/freeing any Vulkan objects that were created using that device as the first parameter of the corresponding vkCreate* or vkAllocate* command.
00:09 < bridge> <heinrich5991> is that what you're talking about? it seems to talk about not freeing parent objects before freeing all children
00:09 < bridge> <heinrich5991> (like not calling `curl_global_cleanup` while stuff is still running)
00:09 < bridge> <Jupstar ‚ú™> Nope. Read the note
00:10 < bridge> <Jupstar ‚ú™> It does not give you that guarantee
00:10 < bridge> <heinrich5991> > Prior to destroying a device, an application is responsible for destroying/freeing any Vulkan objects that were created using that device as the first parameter of the corresponding vkCreate* or vkAllocate* command.
00:10 < bridge> <heinrich5991> this?
00:11 < bridge> <heinrich5991> it still seems to only say that you need to free children objects before the parentt
00:11 < bridge> <heinrich5991> it still seems to only say that you need to free children objects before the parent
00:11 < bridge> <Jupstar ‚ú™> This is also it. But you quoted the same thing again
00:11 < bridge> <heinrich5991> ah. oops
00:11 < bridge> <Jupstar ‚ú™> Why only?
00:11 < bridge> <Jupstar ‚ú™> You need to do that
00:12 < bridge> <heinrich5991> it doesn't seem to be unambiguous to me
00:13 < bridge> <Jupstar ‚ú™> It's not a matter of opinion. The Vulkan spec says it. If you don't do it it's undefined behavior
00:13 < bridge> <heinrich5991> it is critical to turn off the engine prior to leaving the car to avoid fuel wasting
00:13 < bridge> <heinrich5991> this doesn't tell me to leave the car AFAICT?
00:13 < bridge> <Jupstar ‚ú™> If you don't clean it. It might leak
00:14 < bridge> <Jupstar ‚ú™> Just because our awesome operating systems will be more clever than us doesn't mean it's correct
00:14 < bridge> <heinrich5991> that doesn't seem to be useful
00:15 < bridge> <heinrich5991> the operating system always has to clean up this stuff to function correctly
00:15 < bridge> <heinrich5991> the process might be killed, for example
00:15 < bridge> <Jupstar ‚ú™> Ok. I have sleep to catch. Not worth my time. Night
00:15 < bridge> <heinrich5991> night üôÇ
00:25 < bridge> <ryozuki> @jupeyy_keks @heinrich5991 https://ryhl.io/blog/temporary-shared-mutation/
00:26 < bridge> <heinrich5991> yea, seen it in the stdlib docs
00:28 < bridge> <ryozuki> https://git.kernel.org/pub/scm/linux/kernel/git/netdev/net-next.git/commit/?id=cbe0e415089636170aa6eb540ca4af5dc9842a60
00:28 < bridge> <ryozuki> net: phy: add Rust Asix PHY driver
00:28 < bridge> <ryozuki> This is the Rust implementation of drivers/net/phy/ax88796b.c. The
00:28 < bridge> <ryozuki> features are equivalent. You can choose C or Rust version kernel
00:28 < bridge> <ryozuki> configuration.
00:29 < bridge> <heinrich5991> interesting
00:31 < bridge> <heinrich5991> https://git.kernel.org/pub/scm/linux/kernel/git/netdev/net-next.git/tree/drivers/net/phy/ax88796b_rust.rs?id=cbe0e415089636170aa6eb540ca4af5dc9842a60
00:31 < bridge> <heinrich5991> https://git.kernel.org/pub/scm/linux/kernel/git/netdev/net-next.git/tree/drivers/net/phy/ax88796b.c?id=cbe0e415089636170aa6eb540ca4af5dc9842a60
02:39 < bridge> <gerdoe> thanks for putting effort into upgrading teeroutines :D
09:08 < bridge> <Jupstar ‚ú™> thanks for reminder, i still had a RefCell<bool> in code
09:09 < bridge> <Jupstar ‚ú™> @ryozuki when rust kernel programmer üòè
09:13 < bridge> <ryozuki> xd
09:13 < bridge> <ryozuki> morning
09:16 < bridge> <ryozuki> @jupeyy_keks
09:16 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186220344974000172/image.png?ex=659274c9&is=657fffc9&hm=0a048d018364f331fa9578579722d229d97997bd2f937757381ef35687f898dd&
09:16 < bridge> <ryozuki> vulkan update day
09:18 < bridge> <ryozuki> ü•∂
09:18 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186220920130510902/image.png?ex=65927552&is=65800052&hm=d18ff0daf6c4e133821e7aca81667afc4551c521da482e25254d09519997a2eb&
09:22 < bridge> <ryozuki> 17.4.2 is released
09:22 < bridge> <ryozuki> not even on web
09:22 < bridge> <ryozuki> but it will be now on gentoo guru
09:22 < bridge> <ryozuki> cuz gentoo best
09:23 < bridge> <Ewan> morning
09:23 < bridge> <Ewan> ‚òï üçµ
09:23 < bridge> <Ewan> pick
09:23 < bridge> <ryozuki> coffeee
09:23 < bridge> <ryozuki> ‚òï
09:31 < bridge> <kekomonter> ‚òÄÔ∏è
09:31 < bridge> <kekomonter> https://cdn.discordapp.com/attachments/293493549758939136/1186224185580732416/image.png?ex=6592785c&is=6580035c&hm=125f6b946beca987b6b58be811ca47809725e90f087493fa5451169028129606&
09:32 < bridge> <Jupstar ‚ú™> just directly skip to 17.5, just to show how fast you are as maintainer xd
09:41 < bridge> <ryozuki> xd
09:46 < bridge> <Ewan> im still mourning my minecraft
09:47 < bridge> <Ewan> how could this have happened
09:47 < bridge> <Ewan> i have historically bad luck with my minecraft server files getting lost or corrupted in bullshit ways
09:55 < bridge> <ryozuki> https://rust-ml.github.io/linfa/
10:26 < bridge> <Ewan> cool
10:28 < bridge> <Jupstar ‚ú™> log4j
10:29 < bridge> <Ewan> ?
10:29 < bridge> <Jupstar ‚ú™> ur hacked xd
10:29 < bridge> <Ewan> what
10:29 < bridge> <Ewan> LOL
11:57 < bridge> <gerdoe> same here in kazan, only -2
11:58 < bridge> <gerdoe> ah wait its cold for ya :kek:
11:58 < bridge> <gerdoe> we had like -35 weeks earlier
11:58 < bridge> <gerdoe> nature wants some torture it seems
12:43 < bridge> <kekomonter> Same in Perm
13:51 < bridge> <deen> @cellegenrih Thank you!
13:51 < bridge> <cellegenrih> :owo:
14:18 < ws-client> <ChillerDragon> 100 wowo thanks @cellegenrih uwu
14:18 < bridge> <cellegenrih> üòé
14:31 < bridge> <heinrich5991> https://blog.rust-lang.org/2023/12/18/survey-launch.html
14:42 < bridge> <Jupstar ‚ú™> "how often are you active in the rust community?"
14:42 < bridge> <Jupstar ‚ú™> 
14:42 < bridge> <Jupstar ‚ú™> A: every day, for every single bug anyone encountered, ryozuki reminds me of how epic rust is. He defs the prophet in the community of rust
14:45 < bridge> <ryozuki> :owo:
14:46 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186303363227336704/image.png?ex=6592c21a&is=65804d1a&hm=5b2847992c93d9f47dd2e4444f8c39ed0ebc4315806cae1728cd5fd5e66cf1c3&
14:46 < bridge> <ryozuki> :justatest:
14:47 < bridge> <ryozuki> @jupeyy_keks
14:47 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186303742400802867/image.png?ex=6592c274&is=65804d74&hm=f990d880817cb4e3a56ead8a4cae050040163e15389d844e6fb3cc2546036f86&
14:47 < bridge> <ryozuki> make sure to answer this
14:47 < bridge> <Ewan> lol
14:47 < bridge> <ryozuki> for features
14:47 < bridge> <Ewan> unrelated but this video is very awesome
14:47 < bridge> <Ewan> https://youtu.be/cekP7Gya-EE?si=SO9Com7tBp42kIOo
14:48 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186303877285429318/image.png?ex=6592c294&is=65804d94&hm=1f1402182f0fdd945d599da55f410aef21109daff6e6e9886890117b1b4bf334&
14:48 < bridge> <ryozuki> my answer
14:48 < bridge> <Jupstar ‚ú™> I wrote "pure flex" in the field
14:48 < bridge> <Jupstar ‚ú™> 
14:48 < bridge> <Jupstar ‚ú™> But in missing features i spammed all the shit i wanted xdd
14:48 < bridge> <ryozuki> i want macro metavariables
14:48 < bridge> <ryozuki> i follow the gh issue
14:48 < bridge> <ryozuki> https://github.com/rust-lang/rust/issues/83527
14:50 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186304426529538088/image.png?ex=6592c317&is=65804e17&hm=d06586f2bfdd3512351f253f0ec867f5f9269dddb3ad9e4fc9a57add1d31a5f3&
14:51 < bridge> <Ewan> imagine choosing the second option
14:51 < bridge> <Jupstar ‚ú™> üò¨
14:52 < bridge> <ryozuki> > RFC 3086: macro metavariable expressions, strict_provenance, alloc_layout_extra
14:52 < bridge> <ryozuki> my wishlist
14:52 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186305009227399168/image.png?ex=6592c3a2&is=65804ea2&hm=5777a512006fc50464e362d5bf9d3c3c6e81bfb83654a14570850c0173519e1a&
14:52 < bridge> <ryozuki> this is more important to vote than local gov
14:52 < bridge> <ryozuki> üò¨
14:52 < bridge> <ryozuki> :justatest:
14:53 < bridge> <Jupstar ‚ú™> Async traits. Const eval. Generic variadic. Partial borrowing. Smth like that were mine
14:53 < bridge> <Jupstar ‚ú™> Xddd true
14:54 < bridge> <ryozuki> XD
14:54 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186305374014414888/image.png?ex=6592c3f9&is=65804ef9&hm=42d8b3245d86e2dbc053bb12dc47526f152b7d3f4cb2f7193cf2a8dd50e96b9b&
14:54 < bridge> <Ewan> rust doesnt have consteval?
14:55 < bridge> <Ewan> did u watch the video
14:55 < bridge> <Ewan> it‚Äôs delightful
14:55 < bridge> <ryozuki> it has only stabilized a MVP of const
14:55 < bridge> <Jupstar ‚ú™> üëç
14:55 < bridge> <ryozuki> for few things
14:55 < bridge> <ryozuki> there is const fn
14:55 < bridge> <ryozuki> but its rly limited
14:55 < bridge> <Jupstar ‚ú™> I forgot negative traits. Shit
14:55 < bridge> <Jupstar ‚ú™> Next year
14:56 < bridge> <ryozuki> @jupeyy_keks well 2024 is big for rust
14:56 < bridge> <ryozuki> because 2024 there will be
14:56 < bridge> <Ewan> i love when i accidentally tap near anyone‚Äôs profile picture and the whole app freezes for 2 seconds (and the user profile doesn‚Äôt even show up)
14:56 < bridge> <ryozuki> rust 2024 edition
14:56 < bridge> <ryozuki> a new edition
14:56 < bridge> <ryozuki> its like c++23 but for rust
14:56 < bridge> <Jupstar ‚ú™> Just as for Linux desktop? üò¨
14:56 < bridge> <Jupstar ‚ú™> Oh nice
14:56 < bridge> <ryozuki> XD
14:56 < bridge> <Ewan> limited like can‚Äôt have any non compile time expression ? what else do u want from it
14:56 < bridge> <Ewan> or what cant it do
14:57 < bridge> <Ewan> is it just that a lot of the std lib is not const eval compliant
14:57 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186306162283515934/image.png?ex=6592c4b5&is=65804fb5&hm=b53031d721873bfea216156d3197b05c89d40b6103b89351c00a360302723f18&
14:57 < bridge> <Ewan> stl annoys me with that often
14:57 < bridge> <Ewan> like std math functions still relying on errno
14:57 < bridge> <Ewan> so they can‚Äôt be constexpr
14:57 < bridge> <Jupstar ‚ú™> :brownbear:
14:57 < bridge> <Jupstar ‚ú™> Huge step
14:58 < bridge> <Jupstar ‚ú™> But i need more features.i need them all
14:58 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186306422523306004/image.png?ex=6592c4f3&is=65804ff3&hm=2bfd35d89181eed1fe10f9ba043e19a075ff341aa2e876eed384137c5530064d&
14:58 < bridge> <ryozuki> :justatest:
14:58 < bridge> <Ewan> i think this was fixed by an app reinstall last time
14:58 < bridge> <Ewan> they are probably doing something silly
14:58 < bridge> <Ewan> caching
14:58 < bridge> <Jupstar ‚ú™> Every day, every night. Every breath
14:58 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186306600542150746/image.png?ex=6592c51e&is=6580501e&hm=498982ae8ea5f01732790430d52633b9af32a28ba5f9deb6c3d686f6a477cbce&
14:58 < bridge> <ryozuki> i can put this
14:58 < bridge> <ryozuki> :ez:
14:59 < bridge> <Jupstar ‚ú™> XD
14:59 < bridge> <Ewan> yup reinstalled app and it‚Äôs good again
14:59 < bridge> <Ewan> when answer my q‚Äôs
15:00 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186306957397737502/image.png?ex=6592c573&is=65805073&hm=85735f2f632d43aa2c4bbab4d266701cd8f5ea907e054484ea6865a08aba8cca&
15:00 < bridge> <ryozuki> :ez:
15:00 < bridge> <Ewan> :pepeW:
15:01 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186307226026123304/image.png?ex=6592c5b3&is=658050b3&hm=1f7dc2d2e43391da5f597001a78529e96e3d6dd83ea25b56c192085d3be3386d&
15:01 < bridge> <ryozuki> xd
15:06 < bridge> <Ewan> you need to watch the video
15:06 < bridge> <Ewan> it changed my life
15:13 < bridge> <Jupstar ‚ú™> What video
15:14 < bridge> <Jupstar ‚ú™> This?
15:14 < bridge> <Jupstar ‚ú™> Tf
15:14 < bridge> <Jupstar ‚ú™> This?
15:16 < bridge> <Ewan> hell yeah
15:17 < bridge> <Jupstar ‚ú™> My attention span is not high enough to watch more than 10 seconds
15:18 < bridge> <Ewan> well it‚Äôs a very good video
15:18 < bridge> <Ewan> it tickles my brain
15:19 < bridge> <Ewan> i quite like that sammy exists
15:22 < bridge> <Jupstar ‚ú™> K
15:23 < bridge> <Jupstar ‚ú™> Is his guitar software written in rust?
15:25 < bridge> <Ewan> no he is a real guitar
15:25 < bridge> <Ewan> no software
15:26 < bridge> <cellegenrih> :lol: there is no such option as "all the time"
16:23 < bridge> <rem1x> guys anyone know's what's this error  after compile ddnet, im change map and got crashed with this error
16:23 < bridge> <rem1x> https://cdn.discordapp.com/attachments/293493549758939136/1186327984353849493/image.png?ex=6592d908&is=65806408&hm=7fec7a8e4d4d5fd6715ea3b4cd776a2b7d30cc2dcb72d162ecb06072b4aaedc7&
16:54 < bridge> <patiga> I would like float calculations in const functions (problem is potentially different results during compile and runtime, but maybe only with NaN(?), see: https://github.com/rust-lang/rust/issues/57241)
16:54 < bridge> <patiga> Also const functions in traits would be quite nice, but for me it sounds like they are much further away
17:21 < bridge> <cyberfighter> :troll:
17:38 < bridge> <3x1st_> @headshotnoby answer in dm
18:19 < bridge> <yuphio> 17.4.2 install/upgrade sets off a severe virus threat on Windows 10, btw
18:19 < bridge> <yuphio> https://cdn.discordapp.com/attachments/293493549758939136/1186357122884173985/image.png?ex=6592f42b&is=65807f2b&hm=f2d9f26f7a42ec48c430136d928ff4ebe57c6044a6e8541d35772aac9a5dfdaf&
18:20 < bridge> <yuphio> Installed previous version and no threat. Tried new one again and got the threat again. Recreated a few different ways
18:20 < bridge> <robyt3> :pepeW: Send to Microsoft so they can add it as a false positive
18:23 < bridge> <robyt3> Some behavior seems to trigger the "Defense Evasion" tactic, no idea how the detection works I suppose they don't make it public on purpose https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/client-behavioral-blocking
18:24 < bridge> <ryozuki> another fix is to switch to linux
18:24 < bridge> <ryozuki> @heinrich5991 did u do the survey yet
18:28 < bridge> <yuphio> i'll try on Windows 11 and see what happens since ig that is the new standard
18:29 < bridge> <_voxeldoesart> the teejan (tee trojan)
18:29 < bridge> <ryozuki> https://lwn.net/SubscriberLink/954787/41470c731eda02a4/
18:29 < bridge> <ryozuki> > A lot of care is being put into gccrs not becoming a "superset" of Rust, as Cohen put it. The project wants to make sure that it does not create a special "GNU Rust" language, but is trying instead to replicate the output of rustc ‚Äî bugs, quirks, and all. Both the Rust and GCC test suites are being used to accomplish this.
18:31 < bridge> <ryozuki> >  Rustc uses some intrinsics provided by LLVM that are not supported by GCC, which means the gccrs team needs to spend time implementing them in GCC.
18:31 < bridge> <ryozuki> > In the GNU Cauldron talk, Patry also mentioned that gccrs had more than 800 commits waiting to be upstreamed to GCC.
18:33 < bridge> <ryozuki> > Cohen mentioned that "C programmers have been forgetting to close their file descriptors for 40 years, [so] there are a lot of plugins to catch that". Gccrs intends to enable Rust programmers to use existing GCC plugins and static analyzers to catch bugs in unsafe code.
18:33 < bridge> <ryozuki> xddd
18:34 < bridge> <_voxeldoesart> rust fans have a strong vendetta against c / c++ and its users
18:36 < bridge> <ryozuki> > Polonius, on the other hand, was integrated long ago. It's not enabled by default, but that is supposed to replace current borrow checker in Rust 2024.
18:36 < bridge> <ryozuki> @jupeyy_keks rust 2024 will most likely have polonius
18:36 < bridge> <ryozuki> the improved borrow checker
18:40 < bridge> <Jupstar ‚ú™> nice directly update all Cargo.toml when it hits
18:59 < ChillerDragon> @robyt3 how exactly do std::functions look like for chat commands? Do you in place mix command name, helptext and method definition?
18:59 < ChillerDragon> seems a bit messy compared to the current ddracechat.h and ddracechat.cpp with one clear overview and one file just with the implementations
19:40 < bridge> <robyt3> Yeah, I would. The lambda should be the last parameter then. In my opinion it's less messy if you don't need to edit 3 different locations to add a chat command. The expected 3k line diff is not great though. Probably better to open an issue so others can also comment on this before you commit to it.
19:46 < bridge> <heinrich5991> ofc üòâ
19:52 < bridge> <ryozuki> @learath2 https://www.amazon.co.jp/dp/4844334158
19:53 < bridge> <ryozuki> title: "i am a fox, but eveb i know llvm"
19:53 < bridge> <ryozuki> title: "i am a fox, but even i know llvm"
19:53 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1186380685531959316/914C0P1XdEL.png?ex=65930a1d&is=6580951d&hm=2c763e310934da6c5866e3dcf8f7d8b858878144fde75c756119bdb6f5426a5c&
19:55 < bridge> <ryozuki> > LLVM that even a fox can understand ~ A guidebook for creating your own compiler
19:57 < bridge> <heinrich5991> I can confirm that this is what's written there üòÑ
20:02 < bridge> <heinrich5991> > from frontend to backend, extensive explanations in japan's first technical book on LLVM
20:02 < bridge> <heinrich5991> my attempt at the remainder of the text
20:08 < bridge> <Mr.Gh0s7> :O learning Japanese and LLVM in one go
20:10 < bridge> <ryozuki> https://blog.rust-lang.org/2023/12/15/2024-Edition-CFP.html
20:10 < bridge> <ryozuki> @jupeyy_keks
20:21 < bridge> <Jupstar ‚ú™> merge all nightlies
20:30 < bridge> <ryozuki> https://github.com/ronnychevalier/cargo-multivers
20:31 < bridge> <Jupstar ‚ú™> that's cool üòÑ
20:31 < bridge> <ryozuki> xd ye
20:31 < bridge> <ryozuki> i should have  shared it on friday
20:31 < bridge> <ryozuki> rip
20:32 < bridge> <ryozuki> https://github.com/calebzulawski/multiversion
20:41 < bridge> <ryozuki> https://store.steampowered.com/app/2628450/Times_of_Progress
20:41 < bridge> <ryozuki> made with bevy engine
20:42 < bridge> <ryozuki> <https://store.steampowered.com/app/2198150/Tiny_Glade/>
20:42 < bridge> <ryozuki> aparently this one too but using custom render engine
20:42 < bridge> <ryozuki> it looks rly good
20:49 < bridge> <_voxeldoesart> i forgot bevy was a thing
20:52 < bridge> <ryozuki> bevy has lot of potential
20:53 < bridge> <ryozuki> currently they overhauling the ui framework
20:53 < bridge> <ryozuki> then they will make a editor with it
20:53 < bridge> <ryozuki> dogfooding
20:53 < bridge> <ryozuki> and then hopefully it will be amazing
20:53 < bridge> <ryozuki> i already love the ecs they have
20:53 < bridge> <ryozuki> and its perfomant by nature
20:53 < bridge> <ryozuki> design*
21:29 < bridge> <Ewan> morning
23:11 < bridge> <Jupstar ‚ú™> learath is motivated üòÆ
23:22 < bridge> <Ewan> nice
23:23 < bridge> <Ewan> how did u do it lerato
23:28 < bridge> <chillerdragon> I am not planning to do it for ddnet sounds like too much work for too little gain. But I am currently building a new command system from scratch in a mod might do it there. I just don‚Äôt know if I like giving up the clean overview with one command per line. Having the callback in there even at the end would make it multi line and thus messy
23:29 < bridge> <chillerdragon> poggies ‚Äûlerato‚Äú is finally established
23:44 < bridge> <_voxeldoesart> learath
