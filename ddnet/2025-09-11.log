08:00 < bridge> <chillerdragon> @sollybunny: was rejected upstream :/
08:01 < bridge> <blazulite> hi chillerdragon
08:01 < bridge> <blazulite> how you doing
08:02 < bridge> <chillerdragon> Hungover
08:02 < bridge> <chillerdragon> U?
08:03 < bridge> <milkeeycat> morning
08:04 < bridge> <manikoo> morning hungover
08:08 < bridge> <blazulite> doing great
08:08 < chillerbot12> Elo @Assa I just wanted to remind you that: test if long map setup times cause client getting stuck in loading screen waiting for server response
08:08 < bridge> <blazulite> messing around with ddnet-insta
08:13 < bridge> <chillerdragon> !remind 40 fix ddrace teams
08:13 < chillerbot12> Helo chillerdragon I will remind you at Thu Sep 11 2025 08:53:39 GMT+0200 (Central European Summer Time) about your matter again.
08:53 < chillerbot12> Elo @chillerdragon I just wanted to remind you that: fix ddrace teams
09:32 < bridge> <Assa> good bot 🙂
09:32 < bridge> <DDNet> :heartw:
09:47 < bridge> <Assa> 20 seconds for map loading, server still responds, can't confirm that this is an issue
09:48 < bridge> <Assa> I don't know if the client sends keep alives or something
10:12 < bridge> <ryozuki> damn
10:12 < bridge> <ryozuki> getting SMP is haaard
10:13 < bridge> <milkeeycat> Survival Multiplayer? :justatest:
10:21 < bridge> <ryozuki> somehow the scheduler from core 1 dies after a few runs
10:21 < bridge> <robyt3> 20 seconds isn't very long, may add delays manually and try multiple minutes :justatest: I tested using very long map map download and couldn't reproduce the issue
10:26 < bridge> <Assa> I wonder if the callback does anything else except swap in the graphic backend and updating the UI. Maybe it breaks if a single layer takes to long? 🤔
10:27 < bridge> <robyt3> The RenderLoading doesn't do networking I think
10:42 < bridge> <Assa> okay after 100 seconds you fly out for too weak connection xD
10:46 < bridge> <filoqcus> :brownbear:
10:57 < bridge> <Solly (bun bun)> @chillerdragon wwhhyyy
10:58 < bridge> <ryozuki> germans
10:58 < bridge> <ryozuki> check ur phones in 2 mins
10:58 < bridge> <ryozuki> im gonna hack em and play a loud sound
11:03 < bridge> <Assa> you hacked my BOS Melder as well I assume
11:11 < ws-client> **<ChillerDragon>** @ryozuki i saw a coffee machine being affected that is not connected to the internet <:tee_thinking:478629518358085653>
11:11 < ws-client> **<ChillerDragon>** how did you hack into an airgapped device watfak
11:12 < ws-client> **<ChillerDragon>** @Solly (bun bun) wat why? you mean my commit msg nitpick?
11:13 < ws-client> **<ChillerDragon>** I would like to strictly enforce conventional commits for change log layout consistency and filtering. Also helps to differentiate between ddnet and ddnet-insta commits in the log. And helps reads to ignore things they dont care about.
11:13 < bridge> <Solly (bun bun)> Haha wrong reply
11:13 < bridge> <Solly (bun bun)> Why was it rejected upstream
11:14 < ws-client> **<ChillerDragon>** shiet failed reply guess, i fell off
11:14 < ws-client> **<ChillerDragon>** because heinrich
11:14 < ws-client> **<ChillerDragon>** https://github.com/ddnet/ddnet/issues/9877
11:36 < bridge> <rehoboamrulit> Who knows how to make sure that in the game, if the player has registered /spec, then he disappears from the map while he is watching , it is in the ddnet or opengores code
11:43 < bridge> <Solly (bun bun)> `sv_pauseable 1`
11:44 < ws-client> **<ChillerDragon>** ew spec
11:45 < bridge> <Solly (bun bun)> bro im fucking blind
11:45 < bridge> <Solly (bun bun)> it says "char" nor "chat"
11:54 < bridge> <Solly (bun bun)> @chillerdragon  btw we are repeating work by kaizo-insta
11:54 < bridge> <Solly (bun bun)> 
11:54 < bridge> <Solly (bun bun)> it woulda been easier to steal from them then redo the entire thing and they will have 2 of the same gamemode now so weve wasted their work
11:54 < bridge> <Solly (bun bun)> i dont care if the one we have is comparably good
11:55 < bridge> <Solly (bun bun)> credit is not required as they didnt create foot
11:55 < bridge> <Solly (bun bun)> credit for who originally did maybes
11:55 < bridge> <Solly (bun bun)> like ryo for tsmash
11:55 < bridge> <Solly (bun bun)> also in ddnet-insta i cant /spec
11:55 < ws-client> **<ChillerDragon>** ah so you just talk about wasted time hm yes
11:56 < ws-client> **<ChillerDragon>** but the damage is already done we cant revert time now, can we?
11:56 < bridge> <Solly (bun bun)> nop!
11:56 < ws-client> **<ChillerDragon>** so what are you suggesting we do now?
11:56 < bridge> <Solly (bun bun)> replying to: "i dont care if the one we have is comparably good"
11:56 < bridge> <Solly (bun bun)> which is why .
11:56 < bridge> <Solly (bun bun)> my msg on the github was just informing as i didnt previously know kaizo had a foot
11:56 < ws-client> **<ChillerDragon>** well we all knew xd
11:57 < bridge> <Solly (bun bun)> i didnt!
11:57 < ws-client> **<ChillerDragon>** u must be new here
11:57 < bridge> <Solly (bun bun)> i am!
11:57 < ws-client> **<ChillerDragon>** ok so what now
11:57 < bridge> <Solly (bun bun)> continue as previosuly
11:57 < ws-client> **<ChillerDragon>** ok
11:57 < bridge> <Solly (bun bun)> annoiy kaizo person a bit
11:57 < ws-client> **<ChillerDragon>** not sure if it annoys him
11:57 < ws-client> **<ChillerDragon>** i think he might have hard forked already
11:58 < bridge> <Solly (bun bun)> oh true
11:58 < bridge> <Solly (bun bun)> did pull from ddnet instead of ddnet-insta
11:58 < ws-client> **<ChillerDragon>** if he cares he can let me know and i am ready to bend my self in any direction to make his fork life easier
11:58 < bridge> <Solly (bun bun)> 👻
11:58 < bridge> <Solly (bun bun)> spec broken in insta
11:58 < ws-client> **<ChillerDragon>** whats broken about it
11:58 < bridge> <Solly (bun bun)> 🥺
11:59 < bridge> <Solly (bun bun)> command not found
11:59 < ws-client> **<ChillerDragon>** in which mode?
11:59 < bridge> <Solly (bun bun)> ddrace
11:59 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1415637822412689519/image.png?ex=68c3eef6&is=68c29d76&hm=e879c9bc49eaef312073ad03c31b1004e0639d3e2ee9f2184f71b5e1eb872e7a&
11:59 < ws-client> **<ChillerDragon>** seems like a bug indeed
11:59 < ws-client> **<ChillerDragon>** could you open an issue?
11:59 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1415637918231433289/image.png?ex=68c3ef0c&is=68c29d8c&hm=bf79587caa8edad05dc7988d09a6c90b4817407f2b27dc90b755c45cfd4f77a5&
11:59 < bridge> <Solly (bun bun)> urmm
11:59 < bridge> <Solly (bun bun)> did i ef something
11:59 < bridge> <Solly (bun bun)> or is that just cuz i have test cmds on
12:00 < ws-client> **<ChillerDragon>** i assume `aGameType[16]` is your problem 
12:00 < bridge> <Solly (bun bun)> oh i meant the fact it is test
12:00 < bridge> <Solly (bun bun)> not the being cutoff
12:00 < ws-client> **<ChillerDragon>** a
12:00 < bridge> <Solly (bun bun)> i think everyone deals with that
12:00 < ws-client> **<ChillerDragon>** do you have testings cmds
12:01 < bridge> <Solly (bun bun)> yis
12:01 < bridge> <Solly (bun bun)> with another server
12:01 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1415638388328890409/image.png?ex=68c3ef7d&is=68c29dfd&hm=679cb87fa1eac855b54349391ab38ad09779b3fc7e6da2f09a58b4867a692e3f&
12:01 < bridge> <Solly (bun bun)> and /spec works
12:05 < bridge> <Solly (bun bun)> @chillerdragon free merge right
12:05 < bridge> <Solly (bun bun)> https://github.com/ddnet/ddnet/pull/10885
12:05 < bridge> <Solly (bun bun)> once ci clears
12:05 < bridge> <Solly (bun bun)> these are the important ones tho
12:05 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1415639468680937566/image.png?ex=68c3f07e&is=68c29efe&hm=38d15e91a3b3a724743edb4301014fe009a29b6540281f6130882c8a4a427436&
12:05 < bridge> <Solly (bun bun)> so idk
12:11 < bridge> <rehoboamrulit> What parameter is needed when starting the DDNet Server to load the server.cfg config In the directory with the DDNet server itself
12:12 < bridge> <chillerdragon> -f or exec
12:12 < bridge> <chillerdragon> I also recommend deleting system wide configs to avoid confusion
12:13 < bridge> <chillerdragon> @sollybunny: spec availability is not related to test or not. This is a bug introduced by PvP modes. Go send issue
12:13 < bridge> <Solly (bun bun)> i did
12:14 < bridge> <chillerdragon> Thank
12:14 < bridge> <Solly (bun bun)> s
12:14 < bridge> <chillerdragon> native btw
12:14 < bridge> <Solly (bun bun)> idk what this means, me being native shouldnt imply that i have perfect spelling grammer and punctuation
12:14 < bridge> <Assa> I think I found the worst performing map :pepeW:
12:14 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1415641758293033022/screenshot_2025-09-11_12-14-32.png?ex=68c3f2a0&is=68c2a120&hm=6143e16abad148c27ad00ff019298ea76668dcb5db83240a425402722aed31c3&
12:15 < bridge> <Assa> snap limit reached
12:15 < bridge> <Solly (bun bun)> it just means all my life ive heard and spoke english how other people have spoken english
12:22 < bridge> <Assa> @kebscs this is caused by dragger prediction, not even by the laser head
12:23 < bridge> <Assa> it directly points me to `int CCollision::IntersectNoLaser(vec2 Pos0, vec2 Pos1, vec2 *pOutCollision, vec2 *pOutBeforeCollision)` :pepeW:
12:25 < bridge> <kebscs> i can check why but i didnt add dragger prediction
12:26 < bridge> <kebscs> i can check why, but i didnt add dragger prediction
12:28 < bridge> <kebscs> collision code is shared and prediction looks same as on server
12:28 < bridge> <Assa> why is clamp an offender here oO
12:28 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1415645246175576064/Unbenannt.png?ex=68c3f5e0&is=68c2a460&hm=68247ffe0c98b87312448d26db0500b1fbb8ca9b546e208750febd8d21285063&
12:28 < bridge> <kebscs> so idk without possibly changing server physics
12:30 < bridge> <Solly (bun bun)> well if this is the only thing in a tight loop ofc it is
12:32 < bridge> <Solly (bun bun)> you may be able to take out the clamp and have special behaviour for if the sides are oob
12:37 < ws-client> **<ChillerDragon>** std bloat hitting again
12:37 < ws-client> **<ChillerDragon>** i rather have an std in my pants than in my c++
12:39 < bridge> <Solly (bun bun)> the previous clamp we had was an std::clamp wrapper
12:39 < bridge> <Solly (bun bun)> given std::.. is just wrappers for what we already have it only effects compile time not performance
12:39 < bridge> <Solly (bun bun)> and insentivies using expensive constructs but eh
12:43 < bridge> <Assa> it's actually a good idea to move part of this out of this loop
12:43 < bridge> <Assa> multiplying a fixed NX/NY with a might be much faster
13:06 < bridge> <Assa> I guess if I fix this, I am changing physics again ._.
13:07 < bridge> <Solly (bun bun)> if u just take the clamp out without accounting for this you do change fixes
13:07 < bridge> <Solly (bun bun)> if u just take the clamp out without accounting for this you do change physics
13:07 < bridge> <teero777> stop
13:07 < bridge> <Solly (bun bun)> but u dont have to
13:07 < bridge> <Solly (bun bun)> the extra behaviour for oob is cold path anyway
13:08 < bridge> <Solly (bun bun)> why gh trolling
13:08 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1415655243731046491/image.png?ex=68c3ff2f&is=68c2adaf&hm=35b8b0eb60a73d191b0ad81ad45c1cea441316f439b6e698dc50d920cf11050f&
13:14 < bridge> <Assa> technically this would need a proper grid traversal algorithm and not this bullshit, but changing this may cause other physics, because tiles may not be skipped that previously have been
13:14 < bridge> <Assa> yeye I stop Teero don't worry
13:15 < bridge> <Solly (bun bun)> you can even be lazy about it, if oob do old code, if not oob do new code
13:16 < bridge> <teero777> yea if we actually decide to change the shit line intersection and movebox i'd like to be part of it xD
13:16 < bridge> <Solly (bun bun)> oh yeah teero upstream tas code B)
13:16 < bridge> <teero777> those are the main bottlenecks for the physics (not including multi-tee)
13:16 < bridge> <teero777> :feelsbadman:
13:17 < bridge> <teero777> maybe i should break physics as much as possible to achieve max performance without any notable visual/gameplay changes
13:17 < bridge> <Solly (bun bun)> that would be nice
13:18 < bridge> <Solly (bun bun)> do everything in fixed so theres no weird float shenangns (apart from prediction)
13:18 < bridge> <teero777> okay, what about quantization?
13:19 < bridge> <Solly (bun bun)> what does thine mean
13:19 < bridge> <Solly (bun bun)> velocity and position can only be units of 1/32 already right?
13:19 < bridge> <Solly (bun bun)> velocity and position can only be units of 1/32 of a block already right?
13:19 < bridge> <teero777> https://github.com/ddnet/ddnet/blob/c3b10b56df901707034db6f42739bc63a21134d2/src/game/gamecore.cpp#L695-L700
13:20 < bridge> <totar> this is hard to do while keeping corner edges
13:20 < bridge> <totar> if you ignore than 1 thing then you can optimize fully
13:21 < bridge> <teero777> yea they're not needed, fuck them. there will be more major changes lmao xd
13:21 < bridge> <totar> well
13:21 < bridge> <Solly (bun bun)> why couldnt you keep them
13:21 < bridge> <totar> you could actually do them on purpose
13:21 < bridge> <teero777> also it's mostly used by bots/tas anyways so its just for cheaters imo
13:21 < bridge> <Solly (bun bun)> you can do fast block collision for seeing if you are inside them at all then do a slow manual check
13:21 < bridge> <teero777> actually yea wait
13:21 < bridge> <totar> just say that the tiniest 1% of the corner is allowed to pass through
13:21 < bridge> <Solly (bun bun)> (i dont think its that slow)
13:22 < bridge> <Solly (bun bun)> (corner edges are going slightly into freeze?)
13:22 < bridge> <teero777> yea just return if you find 2 freeze px xd
13:23 < bridge> <teero777> @totar do i keep the global distance field? XD its kinda very expensive rn
13:23 < bridge> <totar> for what
13:23 < bridge> <teero777> for line intersection
13:23 < bridge> <totar> right
13:23 < bridge> <teero777> the precompute
13:23 < bridge> <melon> Teero care this isn't safe space™!
13:23 < bridge> <totar> for hypothetical upstream physics or in your library
13:24 < bridge> <totar> also what melon said
13:24 < bridge> <totar> but I don't think your library is supposed to be secret?
13:24 < bridge> <totar> I don't think ddnet should calculate and store a distance field lol, not worth
13:24 < bridge> <melon> oh is this a DDNet physics in c99 talk? I didn't pay attention
13:25 < bridge> <totar> making the line intersection formula correct is already like 10 times fastert
13:25 < bridge> <melon> :justatest:
13:25 < bridge> <totar> making the line intersection formula correct is already like 10 times faster
13:25 < bridge> <totar> making the line intersection formula correct is already like 10 times faster, if you're accepting physics changes
13:25 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1415659455596724304/image.png?ex=68c4031b&is=68c2b19b&hm=68ae9e81da9bcb5f49c59e300b562c324542a11775f3205f2eebff36c9340d27&
13:25 < bridge> <totar> AI?
13:25 < bridge> <chillerdragon> sus
13:25 < bridge> <Solly (bun bun)> wheres libteero
13:25 < bridge> <chillerdragon> Botters hijacked \#developer again
13:26 < bridge> <totar> libteero is sharp and difficult to handle, be careful
13:26 < bridge> <Solly (bun bun)> libteero isnt public
13:26 < bridge> <totar> idk I don't control that
13:27 < bridge> <teero777> what is this lmao
13:27 < bridge> <totar> if it was me I would make a much less optimized library for general use
13:27 < bridge> <Solly (bun bun)> your very official tiktok content
13:27 < bridge> <teero777> @totar but adding back the clamps and max velocity and moving pickups would be bad
13:27 < bridge> <teero777> but if i can just mess up the ordering
13:27 < bridge> <teero777> then i dont car
13:27 < bridge> <teero777> then i dont care
13:28 < bridge> <totar> you can keep your library cutting edge, it's ok
13:28 < bridge> <totar> I didn't say YOU should do it
13:28 < bridge> <teero777> i wanna tho
13:28 < bridge> <teero777> still not at 10mil tbh xD
13:28 < bridge> <teero777> 9.89 or smth
13:28 < bridge> <totar> bot clients will need the best performance possible, a noble cause
13:28 < bridge> <teero777> xd
13:29 < bridge> <Solly (bun bun)> dont worry no one cares about tas runs anymore
13:29 < bridge> <Solly (bun bun)> its killing the game, but their ability to make good tasses doesnt effect how fast it kills the game
13:29 < bridge> <totar> also if we break the physics to make them more optimized then you need 2 versions of prediction for all vanilla and all the old ddnet servers
13:29 < bridge> <teero777> the music XDDDDDDDDDD
13:30 < bridge> <Solly (bun bun)> just update everything to ddnet-insta
13:30 < bridge> <totar> #UpstreamDDNet-insta
13:30 < bridge> <totar> (I have no idea what's in it)
13:30 < bridge> <teero777> (everything i think)
13:30 < bridge> <Solly (bun bun)> all the vanilla gamemodes and the common mod gamemodes
13:31 < bridge> <Solly (bun bun)> i added tsmash
13:31 < bridge> <totar> is the code bad tho
13:31 < bridge> <Solly (bun bun)> in my honest opinion
13:31 < bridge> <Solly (bun bun)> a bit
13:31 < bridge> <Solly (bun bun)> theres some weird inheritance stuff going on
13:32 < bridge> <totar> I'm not opposed to upstreaming ddnet-insta in theory and we completely reverse #7777, but the issue is that then you need to PR against ddnet instead of ddnet-insta which is probably much harder
13:32 < bridge> <DDNet> https://github.com/ddnet/ddnet/issues/7777
13:32 < bridge> <totar> fuck I didn't mean to do that
13:32 < bridge> <Solly (bun bun)> do what?
13:32 < bridge> <totar> huh?
13:32 < bridge> <Solly (bun bun)> huh
13:32 < bridge> <totar> mustve been the wind
13:33 < bridge> <Solly (bun bun)> adding stuff to ddnet-insta is much easier than ddnet
13:33 < bridge> <Solly (bun bun)> probloom is that you cant do split maintaining because vulnrabilities exist and i dont think other maintainers would be happy handing over ddnet-insta chunk just to chiller
13:34 < bridge> <Solly (bun bun)> get their grimey hands all over the vanilla they threw away
13:34 < bridge> <Solly (bun bun)> i dont think having ddnet-insta seperate is that bad
13:34 < bridge> <totar> if only the server and client physics were factored into a single library, it would be so good for moddability and maintability. utopia for all
13:34 < bridge> <Solly (bun bun)> ik
13:34 < bridge> <Solly (bun bun)> thats what ddnet-rs does right
13:34 < bridge> <totar> it's even better
13:34 < bridge> <totar> the physics is a module that the server sends to the client
13:34 < bridge> <Solly (bun bun)> excoose me
13:34 < bridge> <Solly (bun bun)> isnt that
13:34 < bridge> <Solly (bun bun)> bad
13:34 < bridge> <totar> WASM
13:34 < bridge> <Solly (bun bun)> o
13:34 < bridge> <teero777> nuh uh
13:35 < bridge> <totar> but one step at a time
13:35 < bridge> <totar> we don't need that
13:36 < bridge> <totar> (also wasm is slow, so we can pretend this is important)
13:36 < bridge> <Solly (bun bun)> (confirmation bias)
13:36 < bridge> <teero777> man
13:37 < bridge> <teero777> fzcj i need to complete skin rendering for tas tool finally so i can have my own client to test the physics directly xd
13:37 < bridge> <Solly (bun bun)> ^ hacker
13:37 < bridge> <Solly (bun bun)> [ban](https://cdn.discordapp.com/emojis/892423037046128702.webp?size=48&name=ban)
13:37 < bridge> <teero777> since if i am not doing proper physics anyways it will be hard to test if things work
13:38 < bridge> <teero777> unless i use the tool i already have in my cleint
13:38 < bridge> <teero777> but thats annoying
13:38 < bridge> <totar> but you don't need skin rendering, manually create a circle, and some ovals for feat/eyes.
13:38 < bridge> <teero777> cuz rendering is only half complete there
13:38 < bridge> <totar> good enough
13:38 < bridge> <teero777> ok
13:38 < bridge> <teero777> doing right now
13:39 < bridge> <Solly (bun bun)> build failed ):
13:39 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1415663151592116266/image.png?ex=68c4068d&is=68c2b50d&hm=2d6d694e38d453bb6a457058a9692536926bad7424a4d9d157e4af9e5fdaf299&
13:40 < bridge> <totar> omg you have that turned on
13:40 < bridge> <Solly (bun bun)> it just goes into a label i ignore
13:40 < bridge> <totar> fair
13:40 < bridge> <Solly (bun bun)> [cat_uwu](https://cdn.discordapp.com/emojis/1230626195649990696.webp?size=48&name=cat_uwu)
13:40 < bridge> <Solly (bun bun)> oh yeah i need to do
13:40 < bridge> <Solly (bun bun)> tater stuff
13:40 < bridge> <Solly (bun bun)> oh yeah i need to do tater
13:40 < bridge> <totar> :justatest:
13:40 < bridge> <Solly (bun bun)> so u can release
13:41 < bridge> <totar> yes
13:41 < bridge> <Solly (bun bun)> hehe
13:41 < bridge> <totar> wait
13:41 < bridge> <Solly (bun bun)> thats so funny
13:41 < bridge> <totar> you edited that message
13:41 < bridge> <Solly (bun bun)> to make it more funny
13:41 < bridge> <Solly (bun bun)> what is ur time
13:41 < bridge> <totar> we don't talk about it
13:41 < bridge> <Solly (bun bun)> no
13:41 < bridge> <Solly (bun bun)> as in what time is it
13:41 < bridge> <totar> refer
13:41 < bridge> <Solly (bun bun)> er
13:42 < bridge> <Solly (bun bun)> 742 am?
13:42 < bridge> <Solly (bun bun)> 0742 am?
13:42 < bridge> <Solly (bun bun)> (everyone lives in new york)
13:42 < bridge> <Solly (bun bun)> ```cpp
13:42 < bridge> <Solly (bun bun)> constexpr std::string VersionNumberToString(int Version)
13:42 < bridge> <Solly (bun bun)> {
13:42 < bridge> <Solly (bun bun)>     return std::format("{}.{}.{}", Version / 1000, (Version / 100) % 10, Version % 10);
13:42 < bridge> <Solly (bun bun)> }
13:42 < bridge> <Solly (bun bun)> 
13:42 < bridge> <Solly (bun bun)> constexpr std::pair<std::string, std::string>[] DOMAINS = {
13:42 < bridge> <Solly (bun bun)>     {"DDNet", VersionNumberToString(DDNET_VERSION_NUMBER)},
13:42 < bridge> <Solly (bun bun)>     {"TClient", TCLIENT_VERSION},
13:42 < bridge> <Solly (bun bun)> };
13:42 < bridge> <Solly (bun bun)> ```
13:42 < bridge> <Solly (bun bun)> no constexpr std::format
13:43 < bridge> <Solly (bun bun)> that is wack
13:43 < bridge> <totar> lol
13:43 < bridge> <totar> is cpp version not high enough
13:43 < bridge> <Solly (bun bun)> its not constexpr ever
13:43 < bridge> <Solly (bun bun)> https://en.cppreference.com/w/cpp/utility/format/format.html
13:44 < bridge> <totar> are there any contexpr string manipulation things
13:44 < bridge> <Solly (bun bun)> idk
13:44 < bridge> <totar> are there any constexpr string manipulation things
13:44 < bridge> <Solly (bun bun)> i think i might be overengineering
13:44 < bridge> <Solly (bun bun)> checking a file for a string
13:44 < bridge> <totar> that's scaring me
13:45 < bridge> <Solly (bun bun)> ```cpp
13:45 < bridge> <Solly (bun bun)> DDNet 19.5.0
13:45 < bridge> <Solly (bun bun)> TClient 10.4.0
13:45 < bridge> <Solly (bun bun)> ```
13:45 < bridge> <Solly (bun bun)> am looking for ^
13:45 < bridge> <totar> oh are you fixing the cmake version mess
13:45 < bridge> <Solly (bun bun)> mm no
13:45 < bridge> <totar> ok
13:45 < bridge> <Solly (bun bun)> im trying to make it so if u update only DDNet.exe it tells u u are an idiot
13:45 < bridge> <Solly (bun bun)> and making it so you could theoretically upstream this
13:46 < bridge> <totar> I regret bumping tclient major version so many times, if I keep doing it then it will catch up to ddnet version. Which would be confusing unless we fly past it and keep bumping.
13:47 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1415664954551566347/image.png?ex=68c4083a&is=68c2b6ba&hm=84874be8a6d5fb8acc3b55b6799f4a76bd52134f7b216d48bba600cd8968da2b&
13:47 < bridge> <Solly (bun bun)> why do u major version bump?
13:47 < bridge> <totar> idk, I was doing it for major features, but I never expected to reach 10
13:47 < bridge> <Solly (bun bun)> we could keep up with ddnet versions
13:47 < bridge> <Solly (bun bun)> and just use patch
13:47 < bridge> <Solly (bun bun)> since ddnet rarely uses it
13:47 < bridge> <Solly (bun bun)> and we rarely patch
13:47 < bridge> <totar> it make sense when the major version doubled the number of custom features
13:47 < bridge> <totar> it made sense when the major version doubled the number of custom features
13:48 < bridge> <totar> idk what you mean
13:48 < bridge> <Solly (bun bun)> ddnet 19.5.0  = tclient 19.5.0
13:48 < bridge> <totar> eh
13:48 < bridge> <totar> that's how it was for a while
13:48 < bridge> <Solly (bun bun)> its a bit of a pain due to nightly version bump
13:49 < bridge> <totar> it's good enuf, we're probably not going to reach 19
13:49 < bridge> <Solly (bun bun)> we would have to do the deen make a branch for the version
13:49 < bridge> <totar> if we get close then we can just change the format so it doesn't look so similar
13:49 < bridge> <Solly (bun bun)> 0.4.10
13:49 < bridge> <Solly (bun bun)> reverse semvar
13:49 < bridge> <ryozuki> do lik rust software
13:49 < bridge> <ryozuki> 0.0.2
13:49 < bridge> <ryozuki> 0.0.56
13:49 < bridge> <totar> lol
13:49 < bridge> <ryozuki> xd
13:50 < bridge> <ryozuki> https://0ver.org/
13:50 < bridge> <ryozuki> In short, software versioning best practice is like the modern list/array: 0-based.
13:50 < bridge> <totar> sometimes I look at browsers and think "wow their version number is so high they must be irresponsible with it" but actually they're just 20 years old and millions of features
13:51 < bridge> <ryozuki> its just a number
13:51 < bridge> <totar> yeah
13:51 < bridge> <ryozuki> (:justatest: )
13:52 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1415666209696907404/image.png?ex=68c40966&is=68c2b7e6&hm=5719a26766ba05e935ce8566f4c5d75e31e4babbb9aa1e6e84c837146fad3ce1&
13:52 < bridge> <Solly (bun bun)> https://tenor.com/view/caught-in-4k-you-exposed-gif-21379673
13:52 < bridge> <ryozuki> https://tenor.com/view/rip-bozo-gif-22294771
13:52 < bridge> <totar> I'm in another project that somehow does 4 decimal semvar, 1.4.1.3
13:52 < bridge> <ryozuki> thats common in java world
13:52 < bridge> <inv41idu53rn4m3> yet Linux is version 6.16
13:52 < bridge> <ryozuki> and c#
13:52 < bridge> <totar> ok I guess that explains it
13:53 < bridge> <ryozuki> btw terraria is like that
13:53 < bridge> <ryozuki> its c#
13:53 < bridge> <melon> I've seen x.x.x.x versions in a few backends before
13:53 < bridge> <melon> 
13:53 < bridge> <melon> Major, minor, Bugfix, hotfix
13:53 < bridge> <totar> yeah it's C#
13:53 < bridge> <ryozuki> i think last is revision
13:53 < bridge> <melon> Oh?
13:53 < bridge> <totar> we use it like how melon said
13:53 < bridge> <ryozuki> the besty obiously is date based versioning
13:53 < bridge> <totar> 4th is for hotfix
13:53 < bridge> <ryozuki> imho the one conveying most info
13:53 < bridge> <Solly (bun bun)> vs 2069
13:54 < bridge> <ryozuki> just add -beta or -alpha if ur not prod rdy
13:54 < bridge> <Solly (bun bun)> do minecraft and have all 3
13:54 < bridge> <ryozuki> java has snapshots too
13:54 < bridge> <inv41idu53rn4m3> The "I give up" versioning scheme:
13:54 < bridge> <inv41idu53rn4m3> just one number that gets incremented with every release
13:55 < bridge> <pilonpl> I think it's good to have an easy way of knowing if the new version break the API
13:55 < bridge> <totar> if there is an API yes
13:56 < bridge> <totar> it's very easy to version your API, you just follow the rules
13:56 < bridge> <pilonpl> I think it's good to have an easy way of knowing if the new version breaks the API
13:56 < bridge> <inv41idu53rn4m3> Clearly DDNet should only increment major version when the protocol breaks backwards compat
13:56 < bridge> <inv41idu53rn4m3> we still in 1.x
13:56 < bridge> <ryozuki> versioning api depends heavily on the language package manager and rules it uses to select compaatible packages
13:57 < bridge> <ryozuki> semantic versioning basically
13:57 < bridge> <inv41idu53rn4m3> Clearly DDNet should only increment major version when the protocol breaks backwards compat
13:57 < bridge> <inv41idu53rn4m3> we still in 1.x (or maybe a couple versions more idk my history)
13:57 < bridge> <totar> the 1. is implied. Actual version is secretly 1.19.4
13:57 < bridge> <inv41idu53rn4m3> It's like floating point!
13:58 < bridge> <pilonpl> Or maybe it's 0.19.4?
13:58 < bridge> <pilonpl> And 0. Is implied
14:00 < bridge> <totar> how would breaking the ddnet protocol even work. If the server and client support 0.6 then they can always connect. but I guess the extensions would be disabled?
14:01 < bridge> <inv41idu53rn4m3> We remove vanilla support on DDRace servers
14:01 < bridge> <inv41idu53rn4m3> :gigachad:
14:01 < bridge> <totar> well that would certainly be breakings
14:01 < bridge> <totar> well that would certainly be breaking
14:02 < bridge> <pilonpl> Btw it seems like making map settings only writable during a mao load is complicated
14:03 < bridge> <pilonpl> I looked at the code a bit and there isn't an obvious solution
14:03 < bridge> <totar> honestly I'm surprised how easily jupstar did the protocol translation for ddnet-rs. We could probably redesign the entire protocol from scratch and still have a working translation for connecting to old servers.
14:04 < bridge> <inv41idu53rn4m3> What about breaking config files? Like what if a command was removed?
14:05 < bridge> <totar> I think it saves unknown commands now
14:05 < bridge> <totar> so it doesn't break
14:05 < bridge> <totar> idk tho
14:05 < bridge> <totar> haven't tested it
14:05 < bridge> <inv41idu53rn4m3> I meant breaking in the sense that those configs would no longer work
14:06 < bridge> <inv41idu53rn4m3> Major version-worthy?
14:06 < bridge> <totar> idk that's pretty easy, just load the old config format and save it to a new file
14:06 < bridge> <totar> then nothing breaks
14:06 < bridge> <totar> idk that's pretty easy, just load the old config format and save it to a new file with new format
14:06 < bridge> <inv41idu53rn4m3> I meant more like we actually remove a client feature
14:06 < bridge> <Jupstar ✪> Bro mine ringed multiple times, dunno if that was some multisim bug 😂
14:07 < bridge> <totar> removing a config doesn't really break anything, it just gets removed
14:07 < bridge> <totar> it's been done before
14:07 < bridge> <inv41idu53rn4m3> But it breaks expected behaviour that people rely on
14:07 < bridge> <inv41idu53rn4m3> that's the sort of thing that libraries get major version bumps for
14:07 < bridge> <inv41idu53rn4m3> is what I'm arguing
14:07 < bridge> <Solly (bun bun)> i removed a config!
14:08 < bridge> <totar> idk I think server compatibility is the only thing that would justify a real major version
14:08 < bridge> <totar> idk I think server client compatibility is the only thing that would justify a real major version
14:09 < bridge> <totar> but nothing matters, version however you want
14:11 < bridge> <Assa> afaict we are predicting all entities, even the ones that are not on screen?
14:11 < bridge> <totar> if you have showall off the server clips the entities for you
14:12 < bridge> <totar> otherwise yes
14:12 < bridge> <Assa> hmm okay
14:18 < bridge> <Assa> does anyone know the variable where the snaplimit is stored?
14:19 < ChillerDragon> have your tried searching for MAX_SNAP`xd
14:19 < bridge> <Assa> i searched for various combination of snap limit :p
14:20 < bridge> <aegisub> version 2025-09-11
14:21 < ChillerDragon> @Assa editor issue then
14:21 < ChillerDragon> i find MAX_SNAP
14:21 < ChillerDragon> MAX_SNAPSHOT_PACKSIZE 900 in protocol.h
14:26 < bridge> <kebscs> CSnapshot
14:27 < bridge> <kebscs> CSnapshot::MAX_ITEMS?
14:28 < ChillerDragon> so many limits
14:31 < bridge> <Assa> there is no way there are 900 entities, right?
14:32 < bridge> <kebscs> 1 for dragger, 1 for beam so maybe?
14:33 < bridge> <Assa> hmm aren't they handled by the same entitiy?
14:34 < bridge> <kebscs> both beam and dragger have a SnapLaserObject
14:34 < bridge> <kebscs> so im guessing separate
14:37 < bridge> <Assa> I wonder if we should just stop predicting at a certain number of entities
14:37 < bridge> <Assa> like if you have more than 20 doors around you, the prediction has no value anyway
14:37 < bridge> <kebscs> doors prediction is lightweight
14:37 < bridge> <kebscs> it just places tiles once
14:38 < bridge> <Assa> I mean per entity type
14:39 < bridge> <kebscs> draggers are just bad
14:39 < bridge> <kebscs> other entities are limited by snap handling, not prediction
14:42 < ChillerDragon> @Assa snap is smol af
14:43 < ChillerDragon> reaching the limit is quite common if you actually do stuff
14:44 < ChillerDragon> especially with bloated ddnet snap extensions. I feel like after 128pr got merged and all the snap extensions for characters are in you wont be able to see anything on screen anymore
14:47 < bridge> <Solly (bun bun)> if only we had server demos
14:49 < ChillerDragon> we have 
14:51 < bridge> <Solly (bun bun)> tee historian is not server demos
14:52 < bridge> <Solly (bun bun)> firstly only mods can access it xd
14:58 < bridge> <learath2> Why would you want server demos even?
15:02 < bridge> <Solly (bun bun)> because people have terminal didnt record demo, dont want to disconnect, no /showall
15:02 < bridge> <Solly (bun bun)> including me
15:05 < ws-client> **<ChillerDragon>** wdym no way @Assa there is an infinite amount of ways
15:06 < ws-client> **<ChillerDragon>** oh scrolling issue xd
15:06 < bridge> <Assa> ?
15:06 < ws-client> **<ChillerDragon>** replying to ur 900 max statement cuz i scrolled like a goof xd
15:06 < bridge> <Assa> there may be an infinite amount of ways, but all lead to rome 🧠
15:06 < ws-client> **<ChillerDragon>** @Solly (bun bun) we have regular demo demos for the server
15:07 < bridge> <Solly (bun bun)> who is we
15:07 < ws-client> **<ChillerDragon>** we the ddnet
15:07 < ws-client> **<ChillerDragon>** https://github.com/ddnet/ddnet
15:07 < bridge> <Solly (bun bun)> peopel
15:07 < bridge> <Solly (bun bun)> yes i got that
15:07 < ws-client> **<ChillerDragon>** has server side demos
15:07 < bridge> <Solly (bun bun)> oke
15:07 < bridge> <Solly (bun bun)> ermm
15:07 < bridge> <Solly (bun bun)> why ddnet no record
15:07 < ws-client> **<ChillerDragon>** u mean official servers?
15:08 < ws-client> **<ChillerDragon>** because they got pitched by the teehistorian lobby
15:08 < bridge> <Solly (bun bun)> yah
15:08 < bridge> <Solly (bun bun)> well big
15:08 < ws-client> **<ChillerDragon>** one of the teehistorian CEOs actually has a seat in ddnet
15:09 < bridge> <Assa> todays plane counter is already at 5 :justatest:
15:09 < ChillerDragon> assa wat does that mean? xd is this some kind of autism joke? 
15:11 < bridge> <Assa> no, I life near an airbase and I just notice the unusual high amount of noise, like they are very active
15:12 < bridge> <kebscs> training?
15:12 < bridge> <kebscs> over warsaw a lot of black hawk helicopters training today
15:12 < bridge> <kebscs> rly close to buildings
15:13 < bridge> <Assa> no, I am not close to poland. They are probably observing with their special planes. They have an attachement which looks like a shroom
15:13 < bridge> <kebscs> i mean they dont need to train in poland, they can where u live
15:14 < bridge> <kebscs> shroom attachment i would guess a radar?
15:15 < bridge> <Assa> oh yeah, it's the AWACS, it's actually radar
15:20 < bridge> <Assa> 6...
15:20 < bridge> <learath2> We can't possibly store an amount even close to what we have with teehistorian
15:21 < bridge> <kebscs> with radar ofc theyre military, but you can check flightradar where theyre going
15:22 < bridge> <kebscs> if not on radar then probably training or smth
15:23 < bridge> <Assa> it's a single plane driving circles for hours, probably one radar plane observing
15:23 < bridge> <Assa> getting trolled by the military
16:01 < bridge> <Solly (bun bun)> im sure theres stuff that can be cut from demos or stuff added too teehistorian to make either usable
16:01 < bridge> <learath2> Teehistorian is supposed to be what you get if you cut everything you possibly can from the demos
16:02 < bridge> <Solly (bun bun)> i only really care about the a day or 2 in the past for full demos
16:02 < bridge> <learath2> It's the minimum amount of data required to reproduce a demo + 1 redundancy
16:02 < bridge> <Solly (bun bun)> except they dont have chat/secret sauce
16:03 < bridge> <Solly (bun bun)> (do they i thought u said something about recording a bit of secret sauce in teehistorian)
16:15 < bridge> <ryozuki> [0.202709] <cpu-0:fat32-fs-0:k:8> wrote bytes
16:15 < bridge> <ryozuki> [0.203119] <cpu-0:fat32-fs-0:k:8> Content: Ok("hello written")
16:15 < bridge> <ryozuki> [0.203495] <cpu-0:fat32-fs-0:k:8> Kernel heap 8852 kb / 131072 kb
16:15 < bridge> <ryozuki> [1.012563] <cpu-1:test:k:2> hello from cpu 1
16:15 < bridge> <ryozuki> [2.015492] <cpu-1:test:k:2> hello from cpu 1
16:15 < bridge> <ryozuki> [3.018496] <cpu-1:test:k:2> hello from cpu 1
16:15 < bridge> <ryozuki> i got multiple cpus
16:16 < bridge> <ryozuki> ```
16:16 < bridge> <ryozuki> [1.017214] <cpu-3:test:k:5> hello from cpu 1
16:16 < bridge> <ryozuki> [1.017349] <cpu-2:test:k:6> hello from cpu 1
16:16 < bridge> <ryozuki> [1.017796] <cpu-4:test:k:8> hello from cpu 1
16:16 < bridge> <ryozuki> [1.018048] <cpu-1:test:k:9> hello from cpu 1
16:16 < bridge> <ryozuki> [1.021964] <cpu-5:test:k:3> hello from cpu 1
16:16 < bridge> <ryozuki> [2.021159] <cpu-3:test:k:5> hello from cpu 1
16:16 < bridge> <ryozuki> [2.021380] <cpu-2:test:k:6> hello from cpu 1
16:16 < bridge> <ryozuki> [2.021769] <cpu-4:test:k:8> hello from cpu 1
16:16 < bridge> <ryozuki> [2.022037] <cpu-1:test:k:9> hello from cpu 1
16:16 < bridge> <ryozuki> [2.025965] <cpu-5:test:k:3> hello from cpu 1
16:16 < bridge> <ryozuki> [3.025170] <cpu-3:test:k:5> hello from cpu 1
16:16 < bridge> <ryozuki> [3.025325] <cpu-2:test:k:6> hello from cpu 1
16:16 < bridge> <ryozuki> [3.025756] <cpu-4:test:k:8> hello from cpu 1
16:16 < bridge> <ryozuki> [3.025913] <cpu-1:test:k:9> hello from cpu 1
16:16 < bridge> <ryozuki> [3.029956] <cpu-5:test:k:3> hello from cpu 1
16:16 < bridge> <ryozuki> ```
16:16 < bridge> <ryozuki> pog
16:16 < bridge> <ryozuki> (the log 1 is hard coded ignore it xd)
16:17 < bridge> <ryozuki> had to debug with gdb along qemu to find a deadlock
16:17 < bridge> <ryozuki> :justatest:
16:20 < bridge> <Solly (bun bun)> @chillerdragon <https://github.com/ddnet/ddnet/pull/10885> 🥺
16:20 < bridge> <Solly (bun bun)> even chatgpt thinks its a good change
16:21 < bridge> <Solly (bun bun)> sorta
16:22 < bridge> <Solly (bun bun)> thinks that the reassignments are scary
16:22 < bridge> <Solly (bun bun)> but Intra is passed by value and the original is never used
16:23 < bridge> <ryozuki> i wonder how out ancestors made the first kernels, without something like QEMU, insane skill tbh, you could say maybe older arches where simpler, but i doubt a emulator existef when x86-64  first came out
16:23 < bridge> <ryozuki> i wonder how our ancestors made the first kernels, without something like QEMU, insane skill tbh, you could say maybe older arches where simpler, but i doubt a emulator existef when x86-64  first came out
16:23 < bridge> <ryozuki> how do u even debug
16:23 < bridge> <Solly (bun bun)> have a dummy machine with a fake disk which actually just reads a partition in your disk
16:23 < bridge> <Solly (bun bun)> printf spam
16:24 < bridge> <ryozuki> but how u debug, the issues u encontee cant be printed
16:24 < bridge> <Solly (bun bun)> with enough print statements you can debug everything
16:24 < bridge> <Solly (bun bun)> unless the sideeffects of printf get in the way
16:24 < bridge> <Solly (bun bun)> u can always printf to serial
16:25 < bridge> <Solly (bun bun)> or actually just have a small kernal which reads
16:25 < bridge> <Solly (bun bun)> and then runs, a bootloader
16:25 < bridge> <Solly (bun bun)> maybe u can stick debug tools in the bootloader aswell
16:27 < bridge> <learath2> Ah true, no chat. It is the minimum required to reproduce the gameplay is more accurate
16:28 < bridge> <learath2> How old are we talking? If you go back far enough we had debug leds and oscilloscopes 😄
16:31 < bridge> <learath2> A literal step button on the board was also common. You'd step through and look at the leds
16:33 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1415706722521321473/image.png?ex=68c42f21&is=68c2dda1&hm=634bbf39e21c791f8ed420bc89e294ad8b5603393fbca1098dde8e972ab9e831&
16:33 < bridge> <ryozuki> my deadlock was at the serial output i had
16:33 < bridge> <ryozuki> the broadcast had a deadlock cuz 2 internal rwlocks
16:33 < bridge> <ryozuki> i moved it to 1 outer rwlock
16:33 < bridge> <ryozuki> Mutex*
16:34 < bridge> <ryozuki> hmm old when x86-64 (64bit) came out
16:34 < bridge> <ryozuki> like how did first kernel devs for it knew all the tricks
16:34 < bridge> <ryozuki> @learath2 do u know the insanity that is bringing up non bootstrap processors?
16:34 < bridge> <ryozuki> xd
16:34 < bridge> <ryozuki> there is no "standard"
16:35 < bridge> <learath2> 8086 had an ICE, an ICE basically exposed extra pins of the CPU you could use to control the internals and execution
16:35 < bridge> <ryozuki> ohh
16:35 < bridge> <ryozuki> do modern cpus have that?
16:35 < bridge> <ryozuki> can you "freeze" a cpu to inspect like u would with gdb
16:36 < bridge> <learath2> Well we UARTs and JTAG
16:36 < bridge> <learath2> These external things are usually no longer possible. We have onboard debugging now
16:36 < bridge> <ryozuki> btw first i tried to do manually ,after 4 hours i think i had some triple faults cuz stuff, and then i saw limine has a boot request to bring up SMP and u just need to provide a entry point
16:37 < bridge> <ryozuki> someday ill do it the more manual way
16:37 < bridge> <ryozuki> also with rust its a bit hard to do with inline asm cuz rust inline asm doesnt support 16 bit code
16:37 < bridge> <learath2> E.g. whatever gdb does
16:37 < bridge> <ryozuki> i had to hack nasm
16:37 < bridge> <ryozuki> together
16:38 < bridge> <learath2> What do you mean by tricks btw? You usually got an official manual from the vendor detailing how to bring up the cpu and set it up
16:38 < bridge> <ryozuki> try to look at linux openbsd and others
16:38 < bridge> <ryozuki> they dont do it exactly same, some have longer waits or no waits between sipi etc
16:38 < bridge> <ryozuki> small things that may be relevant
16:38 < bridge> <ryozuki> but if u dont know its confusing
16:39 < bridge> <learath2> In the very olden things, it was also much simpler, there was an entrypoint the cpu jumped to and that was that
16:39 < bridge> <ryozuki> well with x86-64 u have to go to long mode xd
16:40 < bridge> <ryozuki> (anyway my struggle is probs mostly cuz im a noob)
16:40 < bridge> <learath2> No, it is very complex to bring up a modern cpu. It's just that the complexity was built over time
16:40 < bridge> <ryozuki> the limine api is beautiful
16:40 < bridge> <learath2> 16bit stuff was absolutely trivial
16:41 < bridge> <learath2> I really need to check it out
16:41 < bridge> <learath2> 64bit upgrade was really where the complexity boomed out of control. So many new quirks needed for the cpu to keep operating properly in legacy mode
16:42 < bridge> <ryozuki> ```x86asm
16:42 < bridge> <ryozuki> ; this code will be relocated to 0x8000, sets up environment for calling a C function
16:42 < bridge> <ryozuki>     .code16
16:42 < bridge> <ryozuki> ap_trampoline:
16:42 < bridge> <ryozuki>     cli
16:42 < bridge> <ryozuki>     cld
16:42 < bridge> <ryozuki>     ljmp    $0, $0x8040
16:42 < bridge> <ryozuki>     .align 16
16:42 < bridge> <ryozuki> _L8010_GDT_table:
16:42 < bridge> <ryozuki>     .long 0, 0
16:42 < bridge> <ryozuki>     .long 0x0000FFFF, 0x00CF9A00    ; flat code
16:42 < bridge> <ryozuki>     .long 0x0000FFFF, 0x008F9200    ; flat data
16:42 < bridge> <ryozuki>     .long 0x00000068, 0x00CF8900    ; tss
16:42 < bridge> <ryozuki> _L8030_GDT_value:
16:42 < bridge> <ryozuki>     .word _L8030_GDT_value - _L8010_GDT_table - 1
16:42 < bridge> <ryozuki>     .long 0x8010
16:42 < bridge> <ryozuki>     .long 0, 0
16:42 < bridge> <ryozuki>     .align 64
16:42 < bridge> <ryozuki> _L8040:
16:42 < bridge> <ryozuki>     xorw    %ax, %ax
16:42 < bridge> <ryozuki>     movw    %ax, %ds
16:42 < bridge> <ryozuki>     lgdtl   0x8030
16:42 < bridge> <ryozuki>     movl    %cr0, %eax
16:42 < bridge> <ryozuki>     orl     $1, %eax
16:42 < bridge> <ryozuki>     movl    %eax, %cr0
16:42 < bridge> <ryozuki>     ljmp    $8, $0x8060
16:42 < bridge> <ryozuki>     .align 32
16:42 < bridge> <ryozuki>     .code32
16:42 < bridge> <ryozuki> _L8060:
16:42 < bridge> <ryozuki>     movw    $16, %ax
16:43 < bridge> <ryozuki>     movw    %ax, %ds
16:43 < bridge> <ryozuki> xd
16:43 < bridge> <ryozuki> osdev is nice but rly outdated, they only do 32 bit stuff tbh
16:43 < bridge> <learath2> At my last soft sec lecture everyone was very confused as to why writing to eax zeros the rest of rax but writing to al doesn't
16:43 < bridge> <ryozuki> anyway now i can go to the fun part
16:43 < bridge> <ryozuki> passing threads across cores and balancing work
16:43 < bridge> <ryozuki> but first i should have a real filesystem i guess
16:43 < bridge> <ryozuki> actually i got fat32 already, with a read cache
16:43 < bridge> <ryozuki> i just need to do the syscalls
16:44 < bridge> <learath2> If you want to see even weirder stuff look at uefi firmware. You have to do things I didn't think were even possible. They set up an execution environment local to the cpu. You set up the L3 cache as temporary RAM
16:44 < bridge> <learath2> Because it's so complicated now to bring up a pc that you need drivers to set up the real ram, and those drivers need an execution environment
16:45 < bridge> <ryozuki> @learath2 btw this rly low level code loves long jumps and things modern devs have fears of at night xd
16:45 < bridge> <learath2> Yep, lots of jumping around needed
16:46 < bridge> <learath2> Oh another very bizarre thing you'd find in early processors is the actual use of segment registers, quite an elegant solution
16:47 < bridge> <ryozuki> @learath2 do u know if riscv or arm is the same?
16:47 < bridge> <ryozuki> i would guess booting is way easier
16:47 < bridge> <ryozuki> and bringing up APs too
16:47 < bridge> <ryozuki> or do they have compat baggagew?
16:47 < bridge> <ryozuki> or do they have compat baggage?
16:47 < bridge> <learath2> Well as far as I know it's not standardized
16:47 < bridge> <ryozuki> :pepeW:
16:49 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1415710829407637515/image.png?ex=68c432f4&is=68c2e174&hm=ee6c5922d61b238c296ca22d7e4ff3339ff4dafc7021bae3e89b408862f3a4be&
16:49 < bridge> <ryozuki> im so proud
16:49 < bridge> <ryozuki> i was about to give up
16:49 < bridge> <ryozuki> xd
16:49 < bridge> <learath2> Wooo
16:50 < bridge> <learath2> Do you have any multitasking set up @ryozuki ?
16:51 < bridge> <ryozuki> no i just have independent scheduler per cores
16:52 < bridge> <ryozuki> i need to setup now scheduler communicatiion
16:52 < bridge> <ryozuki> but its complex
16:52 < bridge> <ryozuki> if i do a new mapping or a user process makes a new mapping
16:52 < bridge> <ryozuki> i need to send the info about this to do a TLB flush
16:52 < bridge> <ryozuki> on other cores
16:52 < bridge> <ryozuki> "shootdown"
16:52 < bridge> <ryozuki> https://stackoverflow.com/questions/3748384/what-is-tlb-shootdown
16:52 < bridge> <ryozuki> > 
16:52 < bridge> <ryozuki> > 
16:52 < bridge> <ryozuki> > A TLB (Translation Lookaside Buffer) is a cache of the translations from virtual memory addresses to physical memory addresses. When a processor changes the virtual-to-physical mapping of an address, it needs to tell the other processors to invalidate that mapping in their caches.
16:52 < bridge> <ryozuki> > 
16:52 < bridge> <ryozuki> > That process is called a "TLB shootdown".
16:52 < bridge> <ryozuki> this
16:53 < bridge> <ryozuki> among a long list of other complex things
16:53 < bridge> <ryozuki> xd
16:53 < bridge> <learath2> Maybe first do preemption
16:53 < bridge> <ryozuki> i do have preemption
16:53 < bridge> <ryozuki> dont u see the logs?
16:53 < bridge> <ryozuki> they are kernel threads
16:53 < bridge> <ryozuki> each with their own stack etc
16:53 < bridge> <ryozuki> they get preempted
16:53 < bridge> <ryozuki> and the image is a user program showing the logs
16:53 < bridge> <ryozuki> which also gets preempted
16:54 < bridge> <ryozuki> (it calls a syscall to get kernel logs)
16:54 < bridge> <learath2> Ah, cool. When you said you don't have multitasking I assumed no preemption either
16:54 < bridge> <ryozuki> i have proper single core multitasking
16:54 < bridge> <ryozuki> ah sorry
16:54 < bridge> <ryozuki> i missunderstood xd
16:54 < bridge> <ryozuki> i dont have multi core multitasking*
16:55 < bridge> <ryozuki> 🙇‍♂️
16:57 < bridge> <learath2> Hm, actually doesn't that also entail context switching? Didn't you already solve the TLB issue then?
17:00 < bridge> <ryozuki> i have context switching, when going from kernel to user, i load the user pml4, which should invalidate the tlb right, but my kernel threads all share the same kernel page (because why not and thats what most kernels do)
17:00 < bridge> <ryozuki> i guess i have it half solved yeah
17:01 < bridge> <ryozuki> also when going from user to kernel i load the kernel page, even tho in user pages i have the higher half mapped like kernel
17:09 < bridge> <rehoboamrulit> What to do, I removed from the config votes for server shutdowns, etc., but they still appear
17:21 < bridge> <ryozuki> @learath2 also my kernel is definitly not memory optimized lol xd
17:21 < bridge> <ryozuki> but ram is free kek
17:21 < bridge> <ryozuki> :justatest:
17:22 < bridge> <learath2> Just download more ram
17:23 < bridge> <ryozuki> instead of dinamyc allocating per cpu data i just reserve space for 64 possible cores xd
17:23 < bridge> <ryozuki> via linker
17:24 < bridge> <ryozuki> instead of dynamic allocating per cpu data i just reserve space for 64 possible cores xd
17:29 < bridge> <ryozuki> @learath2 does qemu support https://en.wikipedia.org/wiki/Zilog_Z80
17:29 < bridge> <ryozuki> can u even make a kernel in this
17:29 < bridge> <learath2> How am I supposed to know? 😄
17:29 < bridge> <ryozuki> u told me to ask u before the gpt xd
17:29 < bridge> <ryozuki> im joking
17:29 < bridge> <ryozuki> ill google
17:29 < bridge> <ryozuki> https://wiki.qemu.org/Features/Z80
17:29 < bridge> <ryozuki> it does lol
17:30 < bridge> <learath2> I wrote some Z80-like assembly but only for gameboy
17:30 < bridge> <ryozuki> ah its separate
17:30 < bridge> <ryozuki> https://repo.or.cz/w/qemu/z80.git
17:30 < bridge> <learath2> Idk what a kernel would entail for a device like that tbh
17:31 < bridge> <learath2> There are no processes to coordinate between, there are no devices that need drivers
17:32 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1415721605153296534/1920px-Zilog_Z-80_Microprocessor_ad_May_1976.png?ex=68c43cfd&is=68c2eb7d&hm=813e1abf1b574833820307a21cc8b632d65da6060bc9f1668c0ba28898b0acb1&
17:32 < bridge> <inv41idu53rn4m3> who's to say there are no devices?
17:32 < bridge> <learath2> I guess you could write an OS for it, like those ancient single user non-preempting ones
17:32 < bridge> <inv41idu53rn4m3> And multitasking is always on the table if you want it enough
17:33 < bridge> <ryozuki> it has interrupt modes
17:33 < bridge> <ryozuki> u cant preempt?
17:33 < bridge> <ryozuki> i guess it lacks a PIC? xd
17:33 < bridge> <learath2> Well usually it's all MMIO back in those days
17:33 < bridge> <inv41idu53rn4m3> So blessed tbh
17:34 < bridge> <inv41idu53rn4m3> We took the wrong path
17:34 < bridge> <learath2> You can, I guess. It's just so weak that I don't think anyone ever bothered with something like multitasking
17:34 < bridge> <inv41idu53rn4m3> I need my cathode rays and blinkenlights
17:35 < bridge> <ryozuki> btw my kernel is kinda modern
17:35 < bridge> <ryozuki> maybe too modern
17:35 < bridge> <ryozuki> i dont support xapic
17:35 < bridge> <ryozuki> only x2apic
17:35 < bridge> <ryozuki> xd
17:35 < bridge> <inv41idu53rn4m3> I want to jack in to share information
17:35 < bridge> <ryozuki> gpt says any processor from 2009 has x2apic
17:36 < bridge> <ryozuki> or was 2006
17:36 < bridge> <ryozuki> idk
17:37 < bridge> <ryozuki> i also expect to have a HPET
17:37 < bridge> <ryozuki> not just a PET
17:37 < bridge> <ryozuki> (im too lazy to put fallbacks)
17:37 < bridge> <ryozuki> (backwards compat is for weaks)
17:38 < bridge> <learath2> It just has a single interrupt line btw. You pull it high, it jumps to the hardcoded interrupt handler address, that's all you have
17:39 < bridge> <inv41idu53rn4m3> Just develop for one single widely available system
17:39 < bridge> <ryozuki> im developing for 2010+
17:39 < bridge> <inv41idu53rn4m3> the old school way of making one OS for one machine
17:40 < bridge> <ryozuki> x86-64 is generic enough i guess
17:40 < bridge> <ryozuki> i also use MSI for pci interrupts
17:40 < bridge> <ryozuki> instead of intx
17:40 < bridge> <learath2> You should disable virtual memory for your OS. Give users the power as god intended
17:40 < bridge> <ryozuki> xdd
17:40 < bridge> <ryozuki> thats a gigachad move
17:41 < bridge> <ryozuki> but i think makes things harder
17:41 < bridge> <ryozuki> i like virtual memory
17:41 < bridge> <ryozuki> i guess msi is fast irl but qemu emulates msi way faster than legacy interrupts
17:41 < bridge> <ryozuki> i got a 2x
17:42 < bridge> <ryozuki> cant wait to put the io thread in another core
17:42 < bridge> <ryozuki> (and the new bugs)
17:44 < bridge> <inv41idu53rn4m3> Multi-core as a requirement? :lol:
17:44 < bridge> <Jupstar ✪> He should design the OS so that it is not needed
17:44 < bridge> <Jupstar ✪> non open surce app run in emulator
17:44 < bridge> <learath2> I actually don't know what that would look like 😄
17:44 < bridge> <Jupstar ✪> rest is full trust
17:44 < bridge> <learath2> Everything is the kernel
17:46 < bridge> <learath2> TempleOS
17:46 < bridge> <Jupstar ✪> I dunno if I want to be shot just bcs I am a christian conservative OS enjoyer
17:46 < bridge> <Jupstar ✪> Does that count as dark humour?
17:47 < ChillerDragon> yes but dark humor is good
17:50 < bridge> <learath2> Too soon
17:50 < bridge> <Jupstar ✪> America is really a shit country tbh xD
17:57 < bridge> <louis> Not nice
17:57 < bridge> <ryozuki> i wont say what i think
17:57 < bridge> <ryozuki> but well lack of gun laws
17:57 < bridge> <ryozuki> ill just say that
18:00 < ChillerDragon> its the second time someone asked me when i finish accounts for ddnet in game. Because they were told i am the only one working on it xd. Who is spreading these fake news!?
18:02 < bridge> <teero777> my camera transforms are not working
18:02 < bridge> <teero777> i hate this shit
18:03 < bridge> <louis> for what
18:03 < bridge> <teero777> idk man ask tater
18:28 < bridge> <pilonpl> America is a continent 🤓
18:28 < bridge> <pilonpl> but yeah i agree
18:28 < bridge> <Jupstar ✪> murica
18:38 < bridge> <blazulite> america = usa
18:38 < bridge> <blazulite> the americas = the continent
18:46 < bridge> <Assa> that country is honestly in the mud. Just waiting for a civil war tbh
18:46 < bridge> <Assa> maybe they get rid of the 2 party system afterwards
18:57 < bridge> <Assa> my profiler is bugged, I keep profiling old code even after I changed it
18:57 < bridge> <Assa> I don't get it 🙁
19:01 < bridge> <Assa> it kept debugging the debug exe without warning oO man MS eat shit
19:01 < bridge> <Solly (bun bun)> murica?
19:09 < bridge> <Jupstar ✪> You dunno the beloved murica?
19:10 < bridge> <Jupstar ✪> It's the only america
19:10 < bridge> <Jupstar ✪> there is no south america
19:17 < bridge> <Assa> now I profiled the release client, and the slowest function is
19:17 < bridge> <Assa> ```
19:17 < bridge> <Assa> CEntity *CGameWorld::GetEntity(int Id, int EntityType)
19:17 < bridge> <Assa> {
19:17 < bridge> <Assa>     for(CEntity *pEnt = m_apFirstEntityTypes[EntityType]; pEnt; pEnt = pEnt->m_pNextTypeEntity)
19:17 < bridge> <Assa>         if(pEnt->m_Id == Id)
19:17 < bridge> <Assa>             return pEnt;
19:17 < bridge> <Assa>     return nullptr;
19:17 < bridge> <Assa> }
19:17 < bridge> <Assa> ```
19:17 < bridge> <Assa> 
19:17 < bridge> <Assa> for the entity heavy map
19:17 < bridge> <Assa> Now the question: Why is that a linked list D:
19:28 < bridge> <melon> is there any performance impact on having demos/replays enabled?
19:29 < bridge> <manikoo> no
19:29 < bridge> <Jupstar ✪> not in a sense of fps, but it can cause fps spikes when u hit start line or smth
19:30 < bridge> <manikoo> our demo system is awwwww
19:30 < bridge> <manikoo> amazing
19:31 < bridge> <melon> i see, i cant really test it myself since uncapping my fps jumps between 8K-12K fps and i dont notice a thing with it turned on/off, but someone mentioned they had to disable demos because it `lags their PC`
19:33 < bridge> <manikoo> rather a hardware issue, afaik demos made to not load pc as much as possible
19:33 < bridge> <manikoo> never had less fps even on potato pc
19:52 < bridge> <pioooooo> it is what it is
19:54 < bridge> <Assa> I just botched an unorded map over it and it improved performance.
19:54 < bridge> <Assa> I think if I'd do a PR for that, you would tear me appart
19:56 < bridge> <pioooooo> i would not
19:56 < bridge> <Assa> I don't mean you specifically 😄
19:56 < bridge> <pioooooo> i mean me specifically
19:57 < bridge> <pioooooo> i would prefer ordered ones tho
19:59 < bridge> <Assa> I just put the entity ID in it, you don't know when it will be removed and can't really ensure an order, idk
20:00 < bridge> <Assa> @robyt3 I also see the expensive flag check <.<
20:26 < bridge> <tsfreddie> i mean the old teeworlds code was anti-std so ye, a map in this era is probably fine
20:32 < bridge> <Assa> for the flags we are checking all the existing snapshot items which is really bad
20:36 < bridge> <teero777> okay my camera transformations are finally working xd. best attempt at a twinbop
20:36 < bridge> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1415768010492350555/image.png?ex=68c46835&is=68c316b5&hm=7c1f793fc3af5ee051835fc7de1e7b7a4f96fe627034ae5a1969f9082d967b67&
20:40 < bridge> <Jupstar ✪> wicked
20:48 < bridge> <Solly (bun bun)> darn cant team 0
20:48 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1415770944110067742/image.png?ex=68c46af0&is=68c31970&hm=5485cb506c29e6d708d2469c2fed82b41cf24a2c48382480c60091d2533c82a9&
20:48 < bridge> <Solly (bun bun)> plz fuix
20:49 < bridge> <teero777> time to physics
20:54 < bridge> <kebscs> @essigautomat ermm https://github.com/ddnet/ddnet/pull/10864
21:00 < bridge> <robyt3> I did say *I* would optimize this https://discord.com/channels/252358080522747904/293493549758939136/1414690107352682639 :thonk:
21:00 < bridge> <Assa> yeah it is, and robyts PR is better
21:01 < bridge> <Assa> I am mad now 🙁
21:01 < bridge> <Assa> I even reacted to it
21:01 < bridge> <Assa> fuck
21:01 < bridge> <Assa> at least I read deep enough into the issue, that I can savely approve your PR
21:02 < bridge> <Assa> I find it quite interesting, how our implementations diverse
21:03 < bridge> <kebscs> dw :deen_star:
21:04 < bridge> <Ewan> why, they are slower :<
21:04 < bridge> <Ewan Green> tbh element x is pretty good
21:07 < bridge> <pioooooo> you're right i just didn't thought carefully. I guess enumeration isn't needed
21:13 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1415777328054669402/image.png?ex=68c470e2&is=68c31f62&hm=533f17b1677a1cf6c007b4e8e68e35ef5c2dbb1d5954b2676a2142d91bd2a8a5&
21:13 < bridge> <ryozuki> :justatest:
21:15 < bridge> <teero777> are typedefs invalidated by other typedefs?
21:15 < bridge> <teero777> cant i have a single struct with multiple names?
21:16 < bridge> <pioooooo> Why would you want to do that...
21:16 < bridge> <Ewan Green> is it not working
21:16 < bridge> <ryozuki> r u getting a compiler error?
21:17 < bridge> <ryozuki> struct  {} urmom; typedef ..
21:17 < bridge> <ryozuki> i forgot C...
21:17 < bridge> <teero777> ah nvm my lsp was doing weird stuffs
21:17 < bridge> <ryozuki> xd
21:17 < bridge> <Ewan Green> it'd be typedef struct in that format
21:17 < bridge> <Ewan Green> struct Name {} otherwise
21:17 < bridge> <ryozuki> ah ye
21:17 < bridge> <teero777> i had
21:17 < bridge> <teero777> ```cpp
21:17 < bridge> <teero777> typedef struct {
21:17 < bridge> <teero777>   SCollision collision;
21:17 < bridge> <teero777>   SWorldCore world_core;
21:17 < bridge> <teero777> 
21:18 < bridge> <teero777> } physics_handler_t;
21:18 < bridge> <teero777> typedef physics_handler_t ph_t;
21:18 < bridge> <teero777> ```
21:18 < bridge> <teero777> so i dont have to type physics_handler_t for all the function declerations xd
21:18 < bridge> <teero777> and it wouldnt let me use the full one in another file
21:18 < bridge> <teero777> but lsp was just trolling me
21:46 < bridge> <chillerdragon> Oopsies, yes the team bug is fixed now •.•
21:50 < bridge> <pathos3005> I'm trying to host Catch64 https://github.com/AssassinTee/catch64
21:50 < bridge> <pathos3005> It gives me this error: `error while loading shared libraries: libcrypto.so.1.1: cannot open shared object file: No such file or directory`
21:50 < bridge> <pathos3005> Looking at dependencies, I can't tell which one I'm missing: https://github.com/AssassinTee/catch64?tab=readme-ov-file#installing
21:52 < bridge> <teero777> openssl? xd
21:52 < bridge> <teero777> are you sure you have it installed?
21:53 < bridge> <pathos3005> I don't know if I have it installed, but it doesn't say `openssl` in the README
21:53 < bridge> <pathos3005> I'll try it anyway
21:53 < bridge> <teero777> well it def part of openssl.
21:54 < bridge> <teero777> well it#s def part of openssl.
21:54 < bridge> <teero777> well it's def part of openssl.
21:54 < bridge> <pathos3005> Yeah it's already installed
21:54 < bridge> <pathos3005> I mean `openssl`
21:54 < bridge> <Assa> @robyt3 can I get you to take a look at #10732 this week please? After this I only have 2 minor things in mind and I'll be finished with major rendering PRs
21:54 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/10732
21:55 < bridge> <robyt3> Yeah, I'll have more time next week
21:55 < bridge> <Assa> thanks ❤️
21:55 < bridge> <Jupstar ✪> Have you finished animated rotation?
21:55 < bridge> <Assa> I wrote that I want to do this in a followup
21:56 < bridge> <Jupstar ✪> Why
21:56 < bridge> <Jupstar ✪> The bounding box calculation can also be used for non animated ones
21:57 < bridge> <Assa> guess I am just lazy to write code for a layer, which I then need to rewrite again for the quad cluster
21:57 < bridge> <Assa> the bounding box calculation is already done in current master for the full layer for everything except rotating envelopes. This includes non animated ones
21:58 < bridge> <Assa> non animated ones are even better, because they're grouped (like the mona lisa)
21:58 < bridge> <Jupstar ✪> But do you use the same bounding box calculation that I suggested for animated quads?
21:59 < bridge> <Assa> you mean for rotated animated quads? I plan to do that, yes
21:59 < bridge> <Assa> you mean for rotating animated quads? I plan to do that, yes
21:59 < bridge> <pathos3005> Ah shet it seems I have to install older version of openssl
21:59 < bridge> <Jupstar ✪> But why not do it before we merge the PR so the diff is low 😄
21:59 < bridge> <blazulite> @jupeyy_keks btw, Loken said she could try working on animations for ddnet-rs
21:59 < bridge> <pathos3005> I guess I'll do it in Docker
21:59 < bridge> <blazulite> !!
22:00 < bridge> <Jupstar ✪> Cool, I can see on weekend if I make animations importable, then she can change those files.. tho it's probs bit annoying by hand
22:00 < bridge> <Jupstar ✪> Maybe need an editor sooner or later :/
22:00 < bridge> <blazulite> I was thinking we could just use .plist files like geometry dash does
22:00 < bridge> <Assa> the diff won't be low, the envelope extrema will just have a flag "rotating" and we need to calculate over each quad in order to estimate the hitbox. The quad iteration is part of the render layer and this part is also changed a lot in clustered quads
22:01 < bridge> <Assa> let me search the clip calculation for you...
22:01 < bridge> <Jupstar ✪> dunno most stuff is json, but will take a look
22:02 < bridge> <blazulite> iirc adobe animate (The software she uses) can export as that
22:02 < bridge> <blazulite> lemme check rq
22:02 < bridge> <Jupstar ✪> there is no need for such a flag
22:02 < bridge> <Assa> @jupeyy_keks https://github.com/ddnet/ddnet/blob/401874f0642197e055015ab5dd49e6c377ce75a2/src/game/map/render_layer.cpp#L1110
22:02 < bridge> <Assa> 
22:02 < bridge> <Assa> As you may imagine, this also changes for clustered quads
22:02 < bridge> <Jupstar ✪> the rotated bounding box is the maximum for all rotations
22:02 < bridge> <Jupstar ✪> you can completely ignore rotation then
22:03 < bridge> <blazulite> These are the formats something can be exported in Adobe Animate
22:03 < bridge> <blazulite> https://cdn.discordapp.com/attachments/293493549758939136/1415789860970696804/image.png?ex=68c47c8e&is=68c32b0e&hm=586ffc9b4aa908514321cee2c3ffb5ed768d642edcfafcfadd4e79601601121e&
22:03 < bridge> <blazulite> The "Cocos2D v2" is the one I mentioned before
22:04 < bridge> <Jupstar ✪> well the content of a json is not like a standard. so it depends on what they actually export
22:04 < bridge> <Jupstar ✪> if you can give me one exported file i can take a look
22:04 < bridge> <Jupstar ✪> we probs need:
22:04 < bridge> <Jupstar ✪> x,y
22:04 < bridge> <Jupstar ✪> rot
22:04 < bridge> <Jupstar ✪> scale_x,scale_y
22:04 < bridge> <Assa> but the rotation is different for each quad?
22:04 < bridge> <Jupstar ✪> so?
22:05 < bridge> <Assa> I don't get your point
22:05 < bridge> <Jupstar ✪> Bounding box per quad. then calc however you extended your bounding box to include all quads and their env x,y positions (+- size)
22:09 < bridge> <Assa> yes, this needs to be extended a third time if we need to address rotation?
22:09 < bridge> <Jupstar ✪> ne
22:09 < bridge> <Jupstar ✪> no
22:10 < bridge> <Jupstar ✪> the bounding box per square will include all rotations
22:10 < bridge> <Jupstar ✪> rotations are always around the center
22:10 < bridge> <Assa> yes and the center can be outside of the quad, currently only the corners are used for bounding box calculations?
22:11 < bridge> <Assa> by "center" I mean the green point
22:12 < bridge> <Assa> time for paint
22:12 < bridge> <Jupstar ✪> if the center is outside that changes noothing
22:12 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1415792132379115671/image.png?ex=68c47eac&is=68c32d2c&hm=560b7e0c50888e6fa64bfa1ec5ea4ee10960debbf620daadfaf09975cded990b&
22:13 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1415792274163372032/image.png?ex=68c47ece&is=68c32d4e&hm=2291e016f49bc14347a0cb2512776d0146084b9267622f4ba5cd76e059f97455&
22:13 < bridge> <Jupstar ✪> it's after 22
22:13 < bridge> <Jupstar ✪> longest distance to center defines the bounding box size
22:13 < bridge> <Assa> my current bounding box aligns with the white quad itself and is rectangular
22:13 < bridge> <Jupstar ✪> yes, but why do we use bounding boxes
22:13 < bridge> <Assa> so you suggest a bigger more loose bounding box just from the rotation, I get it
22:13 < bridge> <Jupstar ✪> we actually want achsis aligned bounding boxes
22:14 < bridge> <Jupstar ✪> they are the fastest
22:14 < bridge> <Assa> I use axis aligned bounding boxes
22:14 < bridge> <Jupstar ✪> proof to me that wasting cpu is worth it on all your maps
22:14 < bridge> <Jupstar ✪> more than 50fps
22:14 < bridge> <Jupstar ✪> or 100
22:14 < bridge> <Jupstar ✪> or dunno what your benchmarks were
22:14 < bridge> <Jupstar ✪> more than 5%
22:14 < bridge> <Jupstar ✪> xD
22:15 < bridge> <Jupstar ✪> a uglygon cant be axis algined or can it
22:15 < bridge> <Jupstar ✪> it's always a nice rectangle
22:15 < bridge> <Assa> just wait
22:15 < bridge> <Assa> blue is my current bounding box
22:15 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1415792961848999986/Unbenannt.png?ex=68c47f72&is=68c32df2&hm=3c57d9f82bfc346d5583bfb1b99d09d179453f4efcc3f0168c611db6995629f8&
22:16 < bridge> <Assa> idk what you mean by uglygon, this is a rectangle
22:16 < bridge> <Jupstar ✪> yeah yeah fine, just annoying for rotations
22:16 < bridge> <Assa> it's not even done like this, I am just min/maxing X,Y for all quad corner positions 🤷‍♂️ don't know what's ugly about this
22:17 < bridge> <Assa> so, unless the quad layer only has 1 quad, I'll never have a bounding box around a single quad
22:17 < bridge> <Jupstar ✪> well you said the bounding aligns with the white one
22:17 < bridge> <Jupstar ✪> yours is axis aligned
22:17 < bridge> <Jupstar ✪> u can make a white aligned (rotated)
22:18 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1415793574490144901/image.png?ex=68c48004&is=68c32e84&hm=53bcb7cc651f2cc7ca96d2f0aafdfe4d60799fd77bd927440d53c5314f55877d&
22:18 < bridge> <Jupstar ✪> this would be white aligned to me
22:18 < bridge> <Assa> current master is axis aligned
22:18 < bridge> <Jupstar ✪> good, but just try rotated
22:18 < bridge> <Assa> ^
22:18 < bridge> <Jupstar ✪> Then we solved this issue too and see if it's worth it
22:18 < bridge> <Jupstar ✪> without extra code
22:19 < bridge> <Jupstar ✪> Yeah bro but back then I didn't know this information
22:19 < bridge> <Assa> idk, I can just hit you up with a PR which includes rotating quads if you demand
22:19 < bridge> <Jupstar ✪> It was information against information
22:20 < bridge> <Jupstar ✪> can you not simply benchmark it
22:20 < bridge> <Jupstar ✪> That should be insanely easy to change
22:20 < bridge> <Jupstar ✪> your bb
22:21 < bridge> <Assa> ofc, and I'd benchmark it. Might be incredibly map dependend (as you need rotating quads in the first place), but I bet some of the maps in my current benchmark list will see improvements
22:21 < bridge> <Jupstar ✪> Well I am more interested in how much it decreases fps
22:21 < bridge> <Jupstar ✪> E.g. do this rotated bb for all quads
22:22 < bridge> <Assa> it doesn't, this is calculated on map setup time.
22:22 < bridge> <Jupstar ✪> but the bounding box is bigger
22:22 < bridge> <Jupstar ✪> thus the clip region is bigger
22:22 < bridge> <Assa> you just have more bounding boxes that might improve fps
22:22 < bridge> <Jupstar ✪> thus it's potentially more likely to render a quad not actually visible
22:22 < bridge> <Jupstar ✪> Anyway
22:22 < bridge> <Jupstar ✪> Just try and see
22:22 < bridge> <Jupstar ✪> don't write code that doesn't optimize anything
22:23 < bridge> <Jupstar ✪> If we can solve the problem with rotation included lets go with that
22:23 < bridge> <Assa> no it isn't, I'll only calculate it if the env contains rotation. Currently the bounding box for rotating quads is basically infinite
22:23 < bridge> <Jupstar ✪> We can always improve later
22:23 < bridge> <Jupstar ✪> Yes yes yes
22:23 < bridge> <Jupstar ✪> but the non rotated ones
22:23 < bridge> <cellegenrih> bounding boxes would have to store a rotation value as well which not be more efficient
22:23 < bridge> <Jupstar ✪> should use same algorithm
22:23 < bridge> <Jupstar ✪> please
22:23 < bridge> <Jupstar ✪> that's bs
22:23 < bridge> <cellegenrih> what would be the bottleneck?
22:24 < bridge> <Assa> bs. You calculate clip x, clip y, w, h ONCE ON SETUP TIME
22:24 < bridge> <Jupstar ✪> anyway i am off, pulse 390 after 22 is dead
22:24 < bridge> <Assa> please don't die D:
22:24 < bridge> <Assa> good night 🙂
22:24 < bridge> <cellegenrih> well I said might, cuz I wanted to mention what bottlenecks are there? Like, are the bottlenecks about transfer to the GPU?
22:25 < bridge> <cellegenrih> well I said might, cuz I wanted to mention what bottlenecks are there? Like, are the bottlenecks about transfer to the GPU (to shader)?
22:25 < bridge> <blazulite> @jupeyy_keks would it be better if it was 24 fps or just with tweens?
22:26 < bridge> <cellegenrih> or is the boundary box check inefficient?
22:26 < bridge> <Assa> I can't promise that, same as yours? I have no idea what you're doing
22:26 < bridge> <blazulite> oh didnt saw this oops
22:34 < bridge> <teero777> ```
22:34 < bridge> <teero777> radv/amdgpu: The CS has been rejected, see dmesg for more information (-2).
22:34 < bridge> <teero777> [vulkan] Error: VkResult = -4
22:34 < bridge> <teero777> [2]    122616 IOT instruction  ./ddnet_frametee
22:34 < bridge> <teero777> ```
22:34 < bridge> <teero777> i kms
23:15 < bridge> <robyt3> ChillerDragon: In which order should I review your 23 PRs?
23:18 < bridge> <aegisub> haruhi release order
23:27 < bridge> <Solly (bun bun)> split into 23 lesser robys
23:36 < bridge> <Assa> the build in distance function doesn't work really well on integers oO
23:37 < bridge> <Assa> I do the same calculation now on doubles, and the error I had just disappeared
23:39 < bridge> <Assa> proably some overflow
23:42 < bridge> <Assa> time to make benchmarks so jupey is happy
23:54 < bridge> <Solly (bun bun)> https://github.com/torvalds/linux/pull/1290
23:54 < bridge> <Solly (bun bun)> please review
23:54 < bridge> <Assa> @jupeyy_keks none of the maps I benchmark benefit from implementing this 🙁
23:54 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1415817849863147611/Unbenannt.png?ex=68c496a0&is=68c34520&hm=feee0d7a2029135fe98021fbb7ee896eac10ff30cdcbbb2a10afd5c826a6bc7e&
23:55 < bridge> <Assa> the extremly small less fps could be anything, from other changes in nightly, to other compiler, to my PC mining bitconins due to chillerdragon or something
