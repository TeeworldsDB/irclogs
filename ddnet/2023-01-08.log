00:28 <+bridge> <Devinci> do invisible players also count?
00:28 <+bridge> <Devinci> or only players "conected"
02:58 <+bridge> <ÂÖ¨Â¢ì> What is this game? And what is DDNet steam statistics?
03:03 <+bridge> <Patiga> @ÂÖ¨Â¢ì those are the stats from steam as a whole
03:03 <+bridge> <Patiga> https://steamdb.info/app/412220/graphs/
03:03 <+bridge> <Patiga> ^ for ddnet
10:47 <+bridge> <Jupstar ‚ú™> @Robyt3 i think i found a bug:
10:47 <+bridge> <Jupstar ‚ú™> 
10:47 <+bridge> <Jupstar ‚ú™> - go on lan tab -> select a server
10:47 <+bridge> <Jupstar ‚ú™> - go on ddnet tab -> select a server
10:47 <+bridge> <Jupstar ‚ú™> - go back to lan tab -> double click on the already selected server -> it connects to the ddnet server instead bcs server ip is not updated
10:47 <+bridge> <Jupstar ‚ú™> and it must be the same index
10:47 <+bridge> <Jupstar ‚ú™> between both tabs
10:54 <+bridge> <Ryozuki> <https://github.com/Airblader/i3>
10:54 <+bridge> <Ryozuki> ‚ö†Ô∏è i3-gaps has been merged into i3.
10:54 <+bridge> <Ryozuki> @Learath2 poggers
10:55 <+bridge> <Ryozuki> https://news.ycombinator.com/item?id=34293010
11:57 <+bridge> <Jupstar ‚ú™> `(connecting)` players aren't filtered anymore
12:01 <+bridge> <Robyt3> I think they weren't filtered in the server scoreboard before either
12:01 <+bridge> <Robyt3> somehow the flag is also larger for them
12:01 <+bridge> <Robyt3> https://cdn.discordapp.com/attachments/293493549758939136/1061600591517851708/image.png
12:02 <+bridge> <Jupstar ‚ú™> yeah if they dont have a skin they render like before, looks kinda ugly but usually they are filtered. at least i thought so
12:03 <+bridge> <Jupstar ‚ú™> but there is a "filter connecting players" filter
12:03 <+bridge> <Jupstar ‚ú™> so its weird they weren't filtered, it should even be default on
12:03 <+bridge> <Robyt3> yeah, makes sense to hide them from the player list as well, since they are not counted for the total player count with "filter connecting players"
12:07 <+bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1061602143712313404/image.png
12:07 <+bridge> <Jupstar ‚ú™> it suddenly happened
12:08 <+bridge> <Jupstar ‚ú™> on a kog server
12:08 <+bridge> <Jupstar ‚ú™> and it also stopped after that
12:21 <+bridge> <Robyt3> "Count players only" also doesn't affect the server browser scoreboard currently. Not sure it's a good idea to hide the spectators in that list if this setting is enabled.
12:26 <+bridge> <Jupstar ‚ú™> mh ok, questions are:
12:26 <+bridge> <Jupstar ‚ú™> - is it useful to know that there is (connecting) player
12:26 <+bridge> <Jupstar ‚ú™> - should we always render as if there could potentially be a skin, which makes it not use most space available but simplifies the code
12:31 <+bridge> <Robyt3> > - is it useful to know that there is (connecting) player
12:31 <+bridge> <Robyt3> probably not
12:31 <+bridge> <Robyt3> 
12:32 <+bridge> <Robyt3> > - should we always render as if there could potentially be a skin, which makes it not use most space available but simplifies the code
12:32 <+bridge> <Robyt3> would look better/more consistent IMO
12:35 <+bridge> <Jupstar ‚ú™> so be it
13:16 <+bridge> <Jupstar ‚ú™> this seems to be related to lags
13:18 <+bridge> <Robyt3> maybe we should use different return values for all returns in `CSnapshotDelta::UnpackDelta`, so we know which condition caused the unpacking to fail
13:18 <+bridge> <Robyt3> right now we group the failures roughly in a few categories, where -3 means that a value in the delta is invalid
13:32 <+bridge> <chillerdragon> Yes please
13:47 <+bridge> <Jupstar ‚ú™> @Robyt3 in the previous version, when no server was selected e.g. by switching tabs, you could still use arrow keys to navigate (in this case it would start navigation)
13:47 <+bridge> <Jupstar ‚ú™> 
13:47 <+bridge> <Jupstar ‚ú™> now its not working anymore
15:10 <+bridge> <Chairn> @Robyt3 can i cancel #6252 so you can use enums?
15:10 <+bridge> <DDNet> https://github.com/ddnet/ddnet/pull/6252
15:11 <+bridge> <Robyt3> Not sure an enum would help much. We wouldn't use those numbers internally, they are just for understanding console log messages
15:12 <+bridge> <Robyt3> You wouldn't do if(UnpackDelta(...) == -301) anyway
15:12 <+bridge> <Chairn> hmm ok
15:14 <+bridge> <Chairn> we could use enum to string in dbg_msg instead of raw numbers as well
15:15 <+bridge> <heinrich5991> at that point return a string rather than an enum, I guess
15:16 <+bridge> <Chairn> nah, we still need integer data
15:16 <+bridge> <Robyt3> the function normally returns the size of the unpacked delta
15:16 <+bridge> <Chairn> it returns size of data
15:16 <+bridge> <Chairn> and negative for error
15:16 <+bridge> <Robyt3> so any negative value is an error code
15:17 <+bridge> <heinrich5991> hmhmm
15:17 <+bridge> <heinrich5991> what would be the advantage of enums over integers in this case?
15:17 <+bridge> <Chairn> enums are integers anyway
15:18 <+bridge> <Jupstar ‚ú™> only thing i can think of is easier documentation directly inside the enum
15:18 <+bridge> <Chairn> yup, that's the point üôÇ
15:18 <+bridge> <Ryozuki> So bad c++ doesnt have rust style enums
15:18 <+bridge> <heinrich5991> you can have the documentation near the return instead, if you want that
15:19 <+bridge> <heinrich5991> currently, the returns are unique
15:19 <+bridge> <Chairn> some comment you mean?
15:19 <+bridge> <heinrich5991> yea
15:19 <+bridge> <heinrich5991> or wdym by documentation?
15:19 <+bridge> <Robyt3> the intention is that the existing return values are not changed or reused again, otherwise we couldn't interpret old log files easily
15:20 <+bridge> <Chairn> what are rust enums specificities ?
15:20 <+bridge> <heinrich5991> you could have the function return the size OR an error (e.g. a string)
15:20 <+bridge> <Jupstar ‚ú™> do tupple enums have an automatic mode for integers? or do you need to do
15:20 <+bridge> <Jupstar ‚ú™> 
15:20 <+bridge> <Jupstar ‚ú™> enum
15:20 <+bridge> <Jupstar ‚ú™> {
15:20 <+bridge> <Jupstar ‚ú™> A((1, "Whatever error")),
15:20 <+bridge> <Jupstar ‚ú™> B((2, "...")),
15:20 <+bridge> <Jupstar ‚ú™> }
15:20 <+bridge> <Jupstar ‚ú™> 
15:20 <+bridge> <Jupstar ‚ú™> for every entry?
15:20 <+bridge> <Ryozuki> They are sum types, and can hold any type of data within
15:20 <+bridge> <Ryozuki> Result for example
15:20 <+bridge> <Chairn> any type or any integer type?
15:21 <+bridge> <Ryozuki> Any type
15:21 <+bridge> <Chairn> ah that's nice
15:21 <+bridge> <Chairn> or just a boolean pointer as parameter to see if it worked correctly
15:21 <+bridge> <Jupstar ‚ú™> with automatic i mean like start index = -50000 and then rest goes automatic üòÑ
15:22 <+bridge> <heinrich5991> it all seems like overengineering though
15:22 <+bridge> <Ryozuki> ```rust
15:22 <+bridge> <Ryozuki> enum IpAddr {
15:22 <+bridge> <Ryozuki>         V4(u8, u8, u8, u8),
15:22 <+bridge> <Ryozuki>         V6(String),
15:22 <+bridge> <Ryozuki>     }
15:22 <+bridge> <Ryozuki> 
15:22 <+bridge> <Ryozuki>     let home = IpAddr::V4(127, 0, 0, 1);
15:22 <+bridge> <Ryozuki> 
15:22 <+bridge> <Ryozuki>     let loopback = IpAddr::V6(String::from("::1"));
15:22 <+bridge> <Ryozuki> 
15:22 <+bridge> <Ryozuki> ```
15:22 <+bridge> <Ryozuki> @Chairn
15:22 <+bridge> <Chairn> nobody commented on my pr üò¢
15:22 <+bridge> <Chairn> <https://github.com/ddnet/ddnet/pull/6219>
15:22 <+bridge> <heinrich5991> what Robyte did is instantly useful and doesn't change much code
15:22 <+bridge> <Jupstar ‚ú™> but that doesnt help if we talk about integers tho, so answer me rust pro
15:23 <+bridge> <heinrich5991> `return true; // NOLINT(clang-analyzer-unix.Malloc)`? ^^
15:23 <+bridge> <heinrich5991> should we just disable `clang-analyzer-unix.Malloc`? ^^
15:23 <+bridge> <Chairn> otherwise clang-tidy complains about potential leak
15:24 <+bridge> <heinrich5991> why did that change?
15:24 <+bridge> <Chairn> here you got clang-tidy errors <https://github.com/ddnet/ddnet/actions/runs/3841720848/jobs/6542261625>
15:24 <+bridge> <Chairn> probably due to inlining of mem_zero function allowing it to see more things?
15:26 <+bridge> <Ryozuki> Ye
15:26 <+bridge> <Ryozuki> Idk about enums eith values
15:26 <+bridge> <Jupstar ‚ú™> nice is it a macro or smth? i tried to google this before for tupple enums
15:26 <+bridge> <Jupstar ‚ú™> but seems like i suck at googling rust specific stuff
15:26 <+bridge> <Ryozuki> But with enums that look like c its just enum { X = -5000 }
15:27 <+bridge> <Jupstar ‚ú™> i need for enums with values ^^
15:27 <+bridge> <Ryozuki> I have to check it but im outside so its a hassle
15:27 <+bridge> <Ryozuki> Mobilr sucks
15:27 <+bridge> <Jupstar ‚ú™> smth like #[auto_add_convert_into_interger_start_at(0)]
15:27 <+bridge> <Jupstar ‚ú™> would be really useful for me at some specific places
15:27 <+bridge> <heinrich5991> I don't think that exists(?)
15:28 <+bridge> <Chairn> you can define enums to integer conversion
15:28 <+bridge> <Chairn> enums act like classes
15:28 <+bridge> <Jupstar ‚ú™> too bad, bcs it looks like not too hard to do with a macro
15:28 <+bridge> <Ryozuki> https://doc.rust-lang.org/rust-by-example/custom_types/enum/c_like.html
15:39 <+bridge> <Robyt3> Is #6249 ready, @Jupeyy_Keks ? Looks like the run failure is just a macOS fluke
15:39 <+bridge> <DDNet> https://github.com/ddnet/ddnet/pull/6249
15:40 <+bridge> <Jupstar ‚ú™> i cancelled it bcs there was a bug, but its ready
15:45 <+bridge> <heinrich5991> I'm looking into it
15:48 <+bridge> <Jupstar ‚ú™> i didnt even saw you saying this ^ before 5 seconds ago xd
15:49 <+bridge> <Chairn> im a very discrete man üòÑ
15:51 <+bridge> <heinrich5991> what I find a bit weird is that the new `mem_zero` doesn't actually zero the mem in some cases
15:52 <+bridge> <Chairn> because it shouldn't, it has to respect default constructor
15:52 <+bridge> <Chairn> we can rename it to mem_init
15:52 <+bridge> <heinrich5991> yes, it shouldn't because it's UB
15:52 <+bridge> <Chairn> but that's less clear in most cases
15:52 <+bridge> <heinrich5991> perhaps these calls could instead be replaced by calls to the constructor?
15:53 <+bridge> <Chairn> ehm <https://github.com/ddnet/ddnet/pull/5690#pullrequestreview-1056912261>
15:53 <+bridge> <heinrich5991> https://github.com/ddnet/ddnet/blob/a2737de1c5a8f5d06b69222892dbee6757415c12/src/engine/shared/network_console.cpp#L10-L11
15:53 <+bridge> <heinrich5991> for example this ^
15:53 <+bridge> <heinrich5991> this seems to be very misleading after the PR
15:54 <+bridge> <Chairn> it does zero it because there's no constructor and no complex type
15:54 <+bridge> <Jupstar ‚ú™> man this hurts my eyes
15:54 <+bridge> <Chairn> btw, mem_zero in constructor would probably endless loop
16:38 <+bridge> <Learath2> I thiink I like this better too
16:40 <+bridge> <Chairn> running out of time right now, ill review it tonight. Gotta go see Avatar 2 üòõ
16:40 <+bridge> <heinrich5991> have fun üôÇ
16:40 <+bridge> <Learath2> Tho am on phone, so I'll think about it when im hom
17:16 <+bridge> <murpi> TIL Avatar 2 exists
17:20 <+ChillerDragon> ye avatar is surprisingly niche
17:37 <+ChillerDragon> I do get some clang errors did i miss something?
17:37 <+bridge> <Voxel> erm... #off-topic ? ü§ì
17:38 <+ChillerDragon> ../src/base/vmath.h:141:38: error: constexpr function never produces a constant expression [clang-diagnostic-invalid-constexpr]
17:46 <+bridge> <Robyt3> Which version of clang? I added constexpr to more functions in #6244. It works for me locally and in the CI.
17:46 <+bridge> <DDNet> https://github.com/ddnet/ddnet/pull/6244
17:56 <+bridge> <uwu> Uhm actually #developer is offtopic for `@Dev`sü§ì
18:05 <+bridge> <Ryozuki> https://fanpu.io/blog/2023/latex-tips/
18:31 <+ChillerDragon> ``Debian clang version 11.0.1-2``
18:31 <+ChillerDragon> deb11
18:32 <+bridge> <Robyt3> I guess you can just remove as many constexpr as necessary until it compiles for you and then make a PR
18:33 <+ChillerDragon> or maybe its fixed in a later clang version eventho dropping deb11 support sounds bad i think if the github CI passes its okaay
18:33 <+ChillerDragon> deb12 has to release soon anyways
19:04 <+bridge> <arch1t3cht> I like everything in this except that they said to always use `\dots`. Really, you should be using `\dotsc`, `\dotsb`, `\dotsm`, etc
21:31 <+bridge> <Jupstar ‚ú™> @Zwelf will we be able to get accounts based on ddnet domain? üòÑ
21:34 <+bridge> <Jupstar ‚ú™> @Zwelf will we be able to get matrix accounts based on ddnet domain? üòÑ
22:48 <+bridge> <deen> Anyone here got experience with a Docker container not having working DNS lookup? @Miguilim asked me for the Brazil server, but I couldn't find anything weird, and tried removing my iptables rules, but to no effect
22:58 <+bridge> <Learath2> Mh, I had issues with podman and cni, but migrating to netavark fixed all my issues
23:19 <+bridge> <Chairn> sorry, i'll do it this week then
23:22 <+bridge> <ReiTW> @Jupeyy_Keks do u know what could be the cause of a GPU not used much on windows ?
23:23 <+bridge> <ReiTW> have it used 20% only on some big games
23:23 <+bridge> <Ryozuki> i mean its the games code fault
23:23 <+bridge> <Ryozuki> or maybe ur cpu is bottlenecking
23:24 <+bridge> <Jupstar ‚ú™> teeworlds or generally
23:24 <+bridge> <ReiTW> well have a pretty good config, but this game is damn not optimized at all lmao
23:24 <+bridge> <ReiTW> ig only Escape From Tarkov, they released a map and the average FPS for everyone is around 40-60
23:24 <+bridge> <ReiTW> ig only Escape From Tarkov, they released a map and the average FPS for everyone is around 40-50
23:24 <+bridge> <ReiTW> https://cdn.discordapp.com/attachments/293493549758939136/1061772517410340974/image.png
23:24 <+bridge> <ReiTW> :justatest:
23:26 <+bridge> <Ryozuki> xd
23:26 <+bridge> <Jupstar ‚ú™> change first graph to logical cores
23:26 <+bridge> <Jupstar ‚ú™> see if one core is at 100%
23:26 <+bridge> <ReiTW> u mean for cpu? nothing is at 100
23:27 <+bridge> <Zwelf> No for now üòÖ. And it will probably be never be completely open to registration. For now only as a bridge + moderation tool.
23:27 <+bridge> <ReiTW> mayb it bottlenecks cuz of the gpu mem being full
23:28 <+bridge> <Jupstar ‚ú™> possible üòÑ
23:29 <+bridge> <Ryozuki> a 3060 how much has
23:29 <+bridge> <ReiTW> trying mip streaming from unity (yes they did a big game using a game engine not for that)
23:29 <+bridge> <ReiTW> 12G for mine
23:29 <+bridge> <ReiTW> trying mip streaming from unity (yes they did a big game using a game engine not good for that, game would run way better using UE)
23:29 <+bridge> <ReiTW> 12G for mine
23:30 <+bridge> <Ryozuki> my 3080 has 10 xd
23:30 <+bridge> <Ryozuki> i wonder how it using ur full vram tho
23:30 <+bridge> <Ryozuki> kinda insane kek
23:31 <+bridge> <ReiTW> definetly no clue
23:31 <+bridge> <ReiTW> https://cdn.discordapp.com/attachments/293493549758939136/1061774225045733376/image.png
23:32 <+bridge> <Jupstar ‚ú™> but still lot of usage
23:32 <+bridge> <ReiTW> yeah well
23:50 <+bridge> <heinrich5991> does it have a reasonable /etc/resolv.conf?
23:50 <+bridge> <heinrich5991> does dig work?
23:50 <+bridge> <heinrich5991> does `dig` work?
23:52 <+bridge> <deen> dig doesn't work, I tried fixing the /etc/resolv.conf to use 8.8.8.8, but still didn't work, pinging 8.8.8.8 worked though
23:52 <+bridge> <deen> so a bit weird that ICMP goes through but UDP not
23:54 <+bridge> <Miguilim> it seems something related to dnsmasq
23:55 <+bridge> <Miguilim> /etc/resolv.conf only has:
23:55 <+bridge> <Miguilim> /etc/resolv.conf only has:
23:55 <+bridge> <Miguilim> 
23:55 <+bridge> <Miguilim> ```
23:55 <+bridge> <Miguilim> nameserver 127.0.0.1
23:55 <+bridge> <Miguilim> ```
23:58 <+bridge> <deen> That is our local server which we used for ddnet, but it forwards everything. I didn't see that used in docker though
23:59 <+bridge> <Miguilim> I found  this in the official docker documentation https://docs.docker.com/engine/install/troubleshoot/#dns-resolver-issues
