01:44 < bridge> <7mzom alonso> guys anyone help me pls
01:45 < bridge> <7mzom alonso> i am playing on phone i cant join ger 10 white list servers
01:45 < bridge> <7mzom alonso> why this proplem
01:45 < bridge> <Voxel> did you whitelist
01:45 < bridge> <Voxel> on mobile
09:38 <+ChillerDragon> click here http://ger10.ddnet.org/ @7mzom alonso
09:39 <+ChillerDragon> also trol for playing on phone xd
11:21 <+ChillerDragon> @Ryozuki in libtw it says "Huffman compression has an extra byte if the actual end is at a byte boundary." did you know that? for you buggy huffman :)
11:22 < bridge> <Ryozuki> yeah probs
11:22 < bridge> <Ryozuki> ill fix it someday
11:22 <+ChillerDragon> i see my self using ur crate
11:22 <+ChillerDragon> soon(tm)
11:23 <+ChillerDragon> where can i pre order?
11:24 <+ChillerDragon> @heinrich5991 are the first two bits of the packet header unused? I wanted to double check here https://github.com/heinrich5991/libtw2/blob/master/doc/quirks.md but it didnt mention it
11:24 <+ChillerDragon> what a bloated protocol did we waste 2 bits of bandwith for EVERY tw packet ever sent over the network in the last 4 decades?
11:28 < bridge> <Learath2> Yeah, disgraceful
11:50 < bridge> <Ewan> damn
11:50 < bridge> <Ewan> imagine the alternative
11:50 < bridge> <Ewan> bitpacking nightmare
12:10 < bridge> <Ryozuki> https://www.dragonflydb.io/
12:10 < bridge> <Ryozuki> has anyone tried this
12:10 < bridge> <Ryozuki> redit alternative
12:10 < bridge> <Ryozuki> claimingto be way faster
12:10 < bridge> <Ryozuki> sadly its c++
12:11 < bridge> <Ryozuki> this is scaling related so maybe @Avolicious knows the man of scalability
12:17 < bridge> <Ryozuki> @Learath2 is calloc more efficient than malloc + memzeroing?
12:18 < bridge> <Ryozuki> calloc zeroes btw
12:19 < bridge> <Learath2> It should be but you can only know by knowing the exact platform to be deployed on
12:20 < bridge> <Ryozuki> ur lovely x86
12:20 < bridge> <Learath2> Calloc can skip the memset theoretically if the allocator has a piece of memory already zero'd
12:22 < bridge> <Ryozuki> @Learath2 why is there no version of malloc that has the interface of calloc, elements and single element size? is there no possible optimizations knowing more info?
12:22 < bridge> <Learath2> Also if you calloc I think it's also allowed to be lazy and give you a CoW zero'd page
12:23 < bridge> <Ryozuki> malloc(n, size) that  doesnt zero i mean
12:23 < bridge> <Ryozuki> xd
12:23 < bridge> <Learath2> Iirc jemalloc had something of sorts. But honestly afaik even calloc doesn't use that information for anything, atleast as far as I know in x86
12:24 < bridge> <Learath2> Maybe in some exotic platform it can be used for alignment?
12:24 < bridge> <Jupstar ✪> I guess without knowing the data type for e.g. cache lines it's not really optimizable?
12:25 < bridge> <Ryozuki> also do u know what malloc_consolidate is, i have a segfault ystday with llvm
12:25 < bridge> <Ryozuki> i think it happens when everything is doomed
12:25 < bridge> <Jupstar ✪> Maybe a malloc that doesn't guarantee the given size is the size of the returned memory would help
12:25 < bridge> <Ryozuki> `malloc_consolidate(): unaligned fastbin chunk detected`
12:26 < bridge> <Ryozuki> also do u know what malloc_consolidate is, i had* a segfault ystday with llvm
12:28 < bridge> <Ryozuki> another morning with my lovely gentoo
12:28 < bridge> <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1093482242694713344/image.png
12:28 < bridge> <Learath2> If I recall correctly malloc_consolidate is called so unused chunks can be merged back
12:28 < bridge> <Ryozuki> what more pleasure than compiling ur own software
12:28 < bridge> <Jupstar ✪> Why do u even know about it xd
12:28 < bridge> <Learath2> You may have accidentally over or underflowed your allocation corrupting a struct header
12:29 < bridge> <Ryozuki> @Learath2 probably, this is the problem with C, im using a C api that wraps a c++ api and they have  poor docs
12:29 < bridge> <Learath2> I wrote a malloc implementation as an exercise once upon a time. I remember looking into other implementations to see what they do
12:29 < bridge> <Ryozuki> so im not safe like in rust
12:29 < bridge> <Ryozuki> just remake llvm in rust
12:30 < bridge> <Learath2> Yeah, malloc_consolidate is called on free to try merge the newly freed memory into the tail of a previously freed chunk
12:30 < bridge> <Jupstar ✪> Where are the safe llvm wrappers xd
12:30 < bridge> <Ryozuki> xd
12:31 < bridge> <Ryozuki> its hard to make a safe wrapper of such a big api
12:31 < bridge> <Ryozuki> llvm is quite brittle ngl
12:31 < bridge> <Learath2> What are you doing with the llvm api anyway?
12:32 < bridge> <Ryozuki> i use the llvm C api to use it from rust
12:32 < bridge> <Ryozuki> i use it for work and my own language edlang
12:32 < bridge> <Ryozuki> they claim to have a C api so u can make bindings
12:32 < bridge> <Ryozuki> c++ is harder to interop
12:32 < bridge> <Learath2> Ryozooki, why don't you link to rust core for your malloc?
12:32 < bridge> <Ryozuki> but they rly focus more on the c++ side xd
12:33 < bridge> <Ryozuki> @Learath2 i didnt implement any malloc
12:33 < bridge> <Ryozuki> this error was from llvm breaking
12:33 < bridge> <Ryozuki> by me using the api in the wrong way
12:33 < bridge> <Learath2> Ohh, llvm is using the malloc
12:33 < bridge> <Ryozuki> not me executing my compiled program
12:33 < bridge> <Ryozuki> yeah
12:33 < bridge> <Learath2> Anyway, asan should find this extremely easily
12:34 < bridge> <Jupstar ✪> Ryo u a smartass compiler dev now. Just make own llvm in rust
12:35 < bridge> <Ryozuki> this is why i dont code in c
12:35 < bridge> <Ryozuki> i dont wanna use asan absan and ur mom
12:35 < bridge> <Ryozuki> rust just works
12:35 < bridge> <Jupstar ✪> Lmao
12:35 < bridge> <Ryozuki> btw rust has MIR for unsafe
12:36 < bridge> <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1093484245621678130/flow.png
12:36 < bridge> <Ryozuki> miri*
12:36 < bridge> <Ryozuki> ooops
12:36 < bridge> <Ryozuki> https://github.com/rust-lang/miri
12:36 < bridge> <Learath2> Then just don't overflow bozo :yeecool:
12:36 < bridge> <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1093484470738370590/image.png
12:37 < bridge> <Ryozuki> > You can use Miri to emulate programs on other targets, e.g. to ensure that byte-level data manipulation works correctly both on little-endian and big-endian systems. See cross-interpretation below.
12:38 < bridge> <Ryozuki> interesting
12:38 < bridge> <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1093484832547426335/image.png
12:39 < bridge> <Ryozuki> ez
12:40 < bridge> <Ryozuki> @Jupeyy_Keks https://developer.chrome.com/blog/webgpu-release/
12:40 < bridge> <Ryozuki> webgpu name is a misnomer but yeah
12:40 < bridge> <Ryozuki> > WebGPU is a new API for the web, which exposes modern hardware capabilities and allows rendering and computation operations on a GPU, similar to Direct3D 12, Metal, and Vulkan. Unlike the WebGL family of APIs, WebGPU offers access to more advanced GPU features and provides first-class support for general computations on the GPU. The API is designed with the web platform in mind, featuring an idiomatic JavaScript API, integration with promises, su
12:41 < bridge> <Ryozuki> @Jupeyy_Keks https://hothardware.com/news/ddr5-mrdimms-standardized-up-to-17600
12:41 < bridge> <Ryozuki> hot
12:41 < bridge> <Ryozuki> 17,600 MT/s
12:43 < bridge> <Learath2> I think we are way past speeds relevant to the consumer. I bet these are great when you are running 500GB of ram on a caching proxy server at a datacenter
12:43 < bridge> <Jupstar ✪> Epic
12:43 < bridge> <Jupstar ✪> Epic
12:44 < bridge> <Jupstar ✪> considering specs required for ai. We are just getting started. Tho maybe not so much system ram ^^
12:44 < bridge> <Jupstar ✪> I want personal ai ofc
12:45 < bridge> <Learath2> If local ai instances are going to become common place I think we'll be getting ai accelerators
12:45 < bridge> <Jupstar ✪> Yeah but ais will always require lot of ram and good speed
12:45 < bridge> <Learath2> Or at the very least some die space used for matrix extensions on even home cpu/gpus
12:46 < bridge> <Ryozuki> https://news.ycombinator.com/item?id=35458746
12:46 < bridge> <Ryozuki> topkek
12:46 < bridge> <Jupstar ✪> I could have told u that without searching for it
12:47 < bridge> <Jupstar ✪> Windows slowfender
12:47 < bridge> <Jupstar ✪> As soon as we hit speed limits hardware wise the fastest os design wins
12:47 < bridge> <Ryozuki> oh shit
12:47 < bridge> <Ryozuki> psql15 dropped
12:48 < bridge> <Jupstar ✪> In first run this might be Linux. In long run probs smth completely new
13:13 < bridge> <chillerdragon> Isn’t psql15 old news?
13:15 < bridge> <Jupstar ✪> Are u using a rust news client or what
13:15 < bridge> <Jupstar ✪> Ryozuki uses javascript. It takes longer
13:15 < bridge> <Jupstar ✪> But yeah very old news lol
13:28 < bridge> <Ryozuki> ah ye
13:28 < bridge> <Ryozuki> idk i got it on my gentoo
13:28 < bridge> <Ryozuki> or forgot to upgrade
13:28 < bridge> <Ryozuki> xd
13:35 < bridge> <Ryozuki> https://www.reddit.com/r/rust/comments/12cxpsb/rustcs_stablehasher_just_got_a_lot_faster/
13:36 < bridge> <Ryozuki> > What this means: faster incremental builds, since this is the component rustc uses to hash the incremental compilation data.
13:38 < bridge> <Jupstar ✪> I heard gccs unordered map is faster than rusts hashmap
13:38 < bridge> <Jupstar ✪> Did that change now xd
13:49 < bridge> <deen> I started using that at work as a replacement for sanitizers in Rust. It seems a bit slower than sanitizers though, and has some limitations
13:49 < bridge> <Ryozuki> rust uses a conservative hashmap
13:49 < bridge> <Ryozuki> hash *
13:49 < bridge> <Ryozuki> u can change it
13:50 < bridge> <Ryozuki> do u code in rust?
13:50 < bridge> <Ryozuki> yeah i think its pretty in development, and is specially made for rust
13:50 < bridge> <deen> Mostly python, but some of our testing code is Rust
13:51 < bridge> <Ryozuki> i see
13:51 < bridge> <Ryozuki> why testing? xD
13:52 < bridge> <deen> My job is writing code that finds bugs, aka testing 😄
13:52 < bridge> <Ryozuki> ohhh
13:53 < bridge> <Ryozuki> MIRI is like an abstract machine or smth
13:53 < bridge> <Ryozuki> > The implementation of the Rust abstract machine - miri - stops execution of Rust programs when they exhibit undefined behavior.
13:53 < bridge> <Ryozuki> > 
13:53 < bridge> <Ryozuki> > C, C++, etc. don't even have implementations of their abstract machines. They don't have one existing as a goal. And they are happy to make certain operations exhibit undefined behavior even if that implies that it would make an implementation of the abstract machine that traps impossible.
13:53 < bridge> <Ryozuki> > 
13:53 < bridge> <Ryozuki> > This is why even if you were to combine valgrind with address sanitizer, memory sanitizer, thread sanitizer, undefined-behavior-sanitizer, and other existing C and C++ tools, there is still a lot of classes of undefined behavior that these tools can't detect.
13:53 < bridge> <Ryozuki> > 
13:53 < bridge> <Ryozuki> > That's fine in C and C++, but not fine in Rust. In Rust, if we add a new type of undefined behavior, the constraint is that it should be (demonstrably) possible to extend miri to detect it, such that if a user doesn't know whether some program exhibits undefined behavior for some inputs, they can just run it under miri, and miri will precisely pinpoint which part of their code exhibited undefined behavior and why, and how their program execution 
13:57 < bridge> <Ryozuki> can a sanitizer catch access to an invalid union field?
13:59 < bridge> <Voxel> i just entered chat and the first thing i thought was "the code can not unionize"
13:59 < bridge> <Simon'> is it possible to do custom commands instead of binding keys?
14:00 < bridge> <Voxel> define custom commands
14:01 < bridge> <Simon'> for example /command exec file.cfg
14:01 < bridge> <Simon'> no wait
14:01 < bridge> <fokkonaut> xDDD
14:01 < bridge> <Simon'> i want to do bind command exec file.cfg
14:02 < bridge> <Simon'> a whole word instead of just a key
14:03 < bridge> <Voxel> arent those just a long list of binds
14:03 < bridge> <Simon'> yes but im out of keys which i can press fast
14:03 < bridge> <Simon'> mouse only have 5 buttons
14:03 < bridge> <fokkonaut> do multi binds, like one key you can press to cycle throw a list of binds which will then change the command for another key. U only need 2 keys for that. Use echo messages to tell yourself which "mode" is activated right now
14:03 < bridge> <Jupstar ✪> ctrl+k
14:03 < bridge> <fokkonaut> 1 key, x .cfg files, another key for the bind to be executed
14:04 < bridge> <fokkonaut> e.g. `n` will change the command and an echo to tell urself which one is it currently, and `m` will execute it.
14:06 < bridge> <chillerdragon> Yo @Ryozuki what do you work that you build compilers at work?
14:06 < bridge> <Ryozuki> stuff
14:07 < bridge> <Ryozuki> im not sure about sharing more personal details about me xd
14:07 < bridge> <Jupstar ✪> Just stalk his gh
14:07 < bridge> <Ryozuki> chiller tell us
14:07 < bridge> <Ryozuki> what do u work as
14:07 < bridge> <Jupstar ✪> He contributes to some stuff xd
14:07 < bridge> <Ryozuki> or is ur life just staying afk in ddnet
14:07 < bridge> <Jupstar ✪> Chiller is millionaire chilling his life
14:07 < bridge> <Ryozuki> whenver i start ddnet ur there
14:07 < bridge> <Ryozuki> afk
14:08 < bridge> <Ryozuki> and if i talk to u ur bot says ur afk
14:08 < bridge> <Jupstar ✪> Xdd
14:08 < bridge> <fokkonaut> In how far does telling what u work leak ur personal information? I mean we all work as programmers, so much is clear
14:08 < bridge> <chillerdragon> Ok fair same here
14:08 < bridge> <chillerdragon> (@Ryozuki)
14:08 < bridge> <Ryozuki> tell me the name of ur company, website, address, etc
14:09 < bridge> <Ryozuki> in this discord with degens
14:09 < bridge> <fokkonaut> ah, yea no
14:09 < bridge> <fokkonaut> definitely not haha
14:09 < bridge> <Jupstar ✪> CEO.google.com
14:09 < bridge> <fokkonaut> its me
14:09 < bridge> <Ryozuki> well if i worked at google i would say it
14:09 < bridge> <Ryozuki> xd
14:09 < bridge> <chillerdragon> I meant what field you work in and what your current project is that it involves such low level things
14:10 < bridge> <Ryozuki> i dont think its that weird
14:10 < bridge> <Ryozuki> but yeah my company likes to try new stuff
14:10 < bridge> <Ryozuki> honestly im happy im paid to do this interesting stuff
14:10 < bridge> <chillerdragon> I would be ashamed to work for google xd
14:10 < bridge> <Jupstar ✪> I want to join u
14:10 < bridge> <fokkonaut> Google > EA
14:10 < bridge> <chillerdragon> jk it’s a flex. to work at evil corp
14:10 < bridge> <Ryozuki> did u know they write compilers for machine learning
14:10 < bridge> <Ryozuki> and they use this https://mlir.llvm.org/
14:11 < bridge> <Jupstar ✪> Epic
14:11 < bridge> <fokkonaut> Win
14:11 < bridge> <fokkonaut> fortnite
14:11 < bridge> <chillerdragon> cring
14:11 < bridge> <Jupstar ✪> Epic ryo moment
14:11 < bridge> <fokkonaut> Plis bay me sum vbuggs
14:11 < bridge> <Ryozuki> kids dont play fortnite
14:12 < bridge> <Ryozuki> they play roblox
14:12 < bridge> <Ryozuki> its insane
14:12 < bridge> <fokkonaut> no
14:12 < bridge> <Ryozuki> the market
14:12 < bridge> <fokkonaut> roblox is played by 15 year olds
14:12 < bridge> <Ryozuki> much bigger player base
14:12 < bridge> <Ryozuki> fortnite is dying anyway
14:12 < bridge> <fokkonaut> nobody cares anyways
14:12 < bridge> <Ryozuki> Roblox Market Cap
14:12 < bridge> <Ryozuki> Roblox has a market cap or net worth of $27.47 billion as of April 6, 2023. Its market cap has decreased by -8.34% in one year.
14:15 < bridge> <chillerdragon> Roblox has such a cursed look
14:26 < bridge> <Simon'> the cfg file can be a normal text file right?
14:26 < bridge> <Simon'> do i store it in the appdata or in the folder with the ddnet exe?
14:28 < bridge> <Simon'> if i press key to exec the file it just says it failed to open the file
14:30 < bridge> <Dragere> it should be in appdata in the same folder as settings_ddnet.cfg
14:30 < bridge> <Simon'> yes it is
14:30 < bridge> <Simon'> does it have to be the same fily type?
14:31 < bridge> <Jupstar ✪> No
14:31 < bridge> <Jupstar ✪> Can u enable file type in your explorer
14:32 < bridge> <Simon'> yes i got windows
14:32 < bridge> <Jupstar ✪> Then do it
14:32 < bridge> <Jupstar ✪> Then copy the full name and exec the full name
14:33 < bridge> <Jupstar ✪> It's enabled if u see settings_ddnet.cfg as one word
14:33 < bridge> <Jupstar ✪> Including the. Cfg
14:35 < bridge> <Simon'> doesnt work
14:35 < bridge> <Jupstar ✪> Do screenshot of Ur config dir
14:45 < bridge> <Simon'> https://cdn.discordapp.com/attachments/293493549758939136/1093516862870011934/Unbenannt.PNG
14:45 < bridge> <Jupstar ✪> U didn't do this
14:46 < bridge> <Jupstar ✪> U have a file extension twice probably
14:46 < bridge> <Jupstar ✪> .cfg.cfg
14:46 < bridge> <Jupstar ✪> Or .cfg.txt
14:47 < bridge> <Simon'> ahh yes
14:48 < bridge> <Simon'> now it works
16:21 < bridge> <Ryozuki> i think i have to do the yearly thermal paste change
16:22 < bridge> <Ryozuki> got some new fans too including cpu one
16:22 < bridge> <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1093541235551129600/image.png
16:22 < bridge> <Ryozuki> gotta prepare for the summer heat in this world with climate change kek
16:46 < bridge> <Jupstar ✪> why yearly?
16:46 < bridge> <Jupstar ✪> u need to do this maybe all 5 years
16:46 < bridge> <Jupstar ✪> or is ur computer getting so hot lately?
16:48 < bridge> <Ryozuki> i think i added too little last time
16:48 < bridge> <Ryozuki> my cpu is getting at 85C
16:48 < bridge> <Ryozuki> when compiling for a bit
16:48 < bridge> <Jupstar ✪> it shouldnt even get hot without paste
16:48 < bridge> <Jupstar ✪> (hotter than expected)
16:49 < bridge> <Ryozuki> whats the expected for 5800x
16:49 < bridge> <Jupstar ✪> i dunno
16:49 < bridge> <Ryozuki> but my case fans are rly old
16:49 < bridge> <Ryozuki> like 4 or more years old
16:49 < bridge> <Ryozuki> and they are not PWM
16:49 < bridge> <Ryozuki> so i got pwm ones
16:49 < bridge> <Ryozuki> less noise when nothing and more power when full
16:49 < bridge> <Ryozuki> + the noctua fan for the cpu cooler
16:49 < bridge> <Ryozuki> that shit costs 36€ xd
16:50 < bridge> <Ryozuki> 2000rpm
16:50 < bridge> <Jupstar ✪> wow my CPU is almost 4 years old already.. time passed so fast damn
16:50 < bridge> <Ryozuki> yeah
16:51 < bridge> <Ryozuki> the thermal paste is rly important iirc
16:51 < bridge> <Jupstar ✪> i think i seen benchmarks where they used none, it was ok
16:51 < bridge> <Jupstar ✪> but ofc the paste will close the gaps
16:52 < bridge> <Ryozuki> > In general, changing thermal paste every one to two years is a good idea. However, we would not recommend relying solely on timeframes to monitor when you need to change your thermal paste.
16:52 < bridge> <Ryozuki> random website
16:52 < bridge> <Ryozuki> xD
16:52 < bridge> <Jupstar ✪> let me ask chatgpt our lord and savior
16:53 < bridge> <Jupstar ✪> i bet u never changed the thermal paste of your GPU in your life
16:53 < bridge> <Jupstar ✪> 😉
16:53 < bridge> <Ryozuki> i did once
16:54 < bridge> <Ryozuki> for my old r9 390
16:54 < bridge> <Ryozuki> that shit was hot af
16:54 < bridge> <Ryozuki> 90C sometimes
16:54 < bridge> <Ryozuki> xd
16:56 < bridge> <Jupstar ✪> oh gg
16:56 < bridge> <Jupstar ✪> openening a gpu is really struggle xd
16:56 < bridge> <Jupstar ✪> so many cool pats
16:57 < bridge> <Jupstar ✪> gpt says almost the same lmao, it read that website
16:59 < bridge> <Ryozuki> kek
16:59 < bridge> <Jupstar ✪> so many cool pads
