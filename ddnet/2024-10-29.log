00:00 < bridge> <Jupstar ‚ú™> True
00:00 < bridge> <Jupstar ‚ú™> But I kinda imagine that a robot makes different sounds than a cat skin üòõ
00:00 < bridge> <Jupstar ‚ú™> That was kinda my motivation
00:00 < Voxel> Oh. Oh I can see the vision already.
00:00 < Voxel> I think I like your direction more, since it's a lot more modular.
00:01 < Voxel> I was just in the track of cleanliness for what we have now. Where you are going makes this a lot more fun to think about!
00:01 < bridge> <Jupstar ‚ú™> But some stuff is also kinda meh. 
00:01 < bridge> <Jupstar ‚ú™> 
00:01 < bridge> <Jupstar ‚ú™> I added the hit sounds to the skin, because the weapons cannot decide what material a skin is of. A robot hit by a nade sounds different than something out of flesh.
00:01 < bridge> <Jupstar ‚ú™> 
00:01 < bridge> <Jupstar ‚ú™> I think the ultimate goal would be to add proper material "physics"
00:02 < bridge> <Jupstar ‚ú™> xD
00:02 < bridge> <Jupstar ‚ú™> But some stuff is also kinda meh. 
00:02 < bridge> <Jupstar ‚ú™> 
00:02 < bridge> <Jupstar ‚ú™> I added the hit sounds to the skin, because the weapons cannot decide what material a skin is of. A robot hit by a laser* sounds different than something out of flesh.
00:02 < bridge> <Jupstar ‚ú™> 
00:02 < bridge> <Jupstar ‚ú™> I think the ultimate goal would be to add proper material "physics"
00:03 < Voxel> Yeah, you're right. Though doesn't the hit sound come from YOU and not what you're hitting?
00:03 < Voxel> Sounds like an easy fix, but still.
00:04 < bridge> <Jupstar ‚ú™> I dunno, I thought about it more in a physics sense I guess.
00:04 < bridge> <Jupstar ‚ú™> 
00:04 < bridge> <Jupstar ‚ú™> If you are hit by a bullet it collides with you creating some kind of sound
00:04 < bridge> <Jupstar ‚ú™> That's also why I think the ultimate goal would be to go even further and add interaction sounds.
00:04 < bridge> <Jupstar ‚ú™> 
00:04 < bridge> <Jupstar ‚ú™> Iron vs iron simply sounds different than iron vs flesh
00:04 < bridge> <Jupstar ‚ú™> smth like that
00:06 < Voxel> If we were to go all out, and incorperate proper textures, there would need to be sounds for like, Natural blocks, Metallic blocks, Ice blocks, Wood blocks
00:06 < Voxel> Am I thinking too much?
00:10 < Voxel> Then again, it would be funny to be able to add in custom sounds for interacting with blocks, within the map itself
00:11 < Voxel> Like, have a natural override for if a certain block is being touched.
00:23 < bridge> <Jupstar ‚ú™> The hard part is more about implementing all these ideas ^^
00:23 < bridge> <Jupstar ‚ú™> But sounds epyc
00:24 < Voxel> The struggle of an artist
00:24 < Voxel> Who doesn't know how to code for shit
00:25 < Voxel> Like, I'm trying to add in "extras" for tee skins, and what I have right now is this weird thing, where it knows the extras image exists, but doesn't know how to actually overlay it onto the tee instead of just replacing the image
00:27 < bridge> <Jupstar ‚ú™> Even if I completely worked out a concept I often find myself spending months to implement it. So the reality generally is struggle even for a coder xd
00:31 < Voxel> See, that's the problem I'm having. I'm way too incompitent to add in all my ideas I want.
00:32 < Voxel> The best I can do is mockup images, and maybe some after effects magic.
00:32 < Voxel> But then again, that's also really important for any game team, right?
01:47 < Voxel> Thinking about how to start all of this
01:47 < Voxel> First step is just splitting the images
01:47 < Voxel> Second step should be to add in the splitter and merger blocks in the codebase
02:35 < bridge> <forgottenabscat> As for me this name was created only because i think using english is cool(When i was a junior high student)
02:37 < bridge> <forgottenabscat> You know, we speak&read chinese all the time, so maybe use english could be unique
03:17 < bridge> <louis> i offer sound design for assets @voxel+jupstar
03:17 < bridge> <louis> :owo:
03:19 < Voxel> id be fine with that
03:20 < Voxel> i think most ddnet sounds are like, recorded with random objects
03:20 < Voxel> s
03:20 < Voxel> so if you know how to do that then thatd be perfect
04:55 < bridge> <inv41idu53rn4m3> Who's gorp?
04:58 < Voxel> I'm going to try and make more concepts tommorow
04:58 < bridge> <unlucksmcgee> I'm having a CORS issue accessing the player json data. Is this something that needs to be changed on my side or is it on the ddnet server-side?
04:58 < bridge> <unlucksmcgee> 
04:58 < bridge> <unlucksmcgee> The following gives a CORS error:
04:58 < bridge> <unlucksmcgee> ```javascript
04:58 < bridge> <unlucksmcgee> fetch("https://ddnet.org/players/?json2=UnlucksMcGee")
04:58 < bridge> <unlucksmcgee> ```
04:58 < bridge> <unlucksmcgee> 
04:58 < bridge> <unlucksmcgee> Although this one does not:
04:58 < bridge> <unlucksmcgee> ```javascript
04:58 < bridge> <unlucksmcgee> fetch("https://ddnet.org/releases/maps.json")
04:58 < bridge> <unlucksmcgee> ```
04:58 < bridge> <unlucksmcgee> https://cdn.discordapp.com/attachments/293493549758939136/1087859759182512239/image.png?ex=67215c5a&is=67200ada&hm=49945630baf5b71f74a57c4276b14d9450d9be2e464cf5341b011517117d5083&
08:12 < bridge> <ryozuki> morning rust coders and others
08:13 < bridge> <ryozuki> anyone knows how to model ssa ir in code
08:14 < bridge> <milkeeycat> morning intel assembly syntax enjoyers and others
08:14 < bridge> <ryozuki> i agree intel is better
08:14 < bridge> <ryozuki> https://github.com/edg-l/codegen/blob/master/src/ir.rs
08:17 < bridge> <Jupstar ‚ú™> It's more about translating English words into Chinese characters
08:18 < bridge> <forgottenabscat> :think_bot:
08:18 < bridge> <forgottenabscat> You mean some of them using western names but use chinese to express that?
08:19 < bridge> <Jupstar ‚ú™> Yeah
08:21 < bridge> <forgottenabscat> pretty weird, dunno what they think. I guess maybe they wants more people to understand what their names mean?
08:21 < bridge> <Jupstar ‚ú™> But generally speaking. Are using many Chinese characters as name common?. Imagine you have 15 Chinese characters instead of the current limit
08:21 < bridge> <Jupstar ‚ú™> Do you think many Chinese would use it
08:22 < bridge> <forgottenabscat> ah no i seldom see one, if there is a 15character name it must be some meme
08:22 < bridge> <Jupstar ‚ú™> Well it's not about exactly 15 xD
08:23 < bridge> <Jupstar ‚ú™> Currently the limit is like 3 characters
08:23 < bridge> <forgottenabscat> for example one chinese name is "Mom said a name with too many characters can be easily found by others when you hide behind a tree" in English
08:23 < bridge> <forgottenabscat> That's something just to attract attention imo, Or show their personality
08:24 < bridge> <Jupstar ‚ú™> So the current limit is more than enough? Nobody unhappy with it
08:24 < bridge> <forgottenabscat> But ye i seldom see one name over 10 chinese characters, usually 2~7
08:25 < bridge> <Jupstar ‚ú™> Can they even use 7 in the game
08:25 < bridge> <forgottenabscat> in ddnet it's 5 characters
08:25 < bridge> <forgottenabscat> other games
08:29 < bridge> <Jupstar ‚ú™> Â±ë
08:30 < bridge> <forgottenabscat> ‚ùì
08:30 < bridge> <forgottenabscat> üáπüÜóüáØüÜíüá¶
08:36 < bridge> <Jupstar ‚ú™> I guess our multi lingual pro tsfreddie might know which language suffers most under the limit. Dunno how many bytes the avg kanji character uses
08:49 < bridge> <Mr.Gh0s7> Greek names do suffer quite a bit but I think it's ok since there aren't many Greeks (or any :p) and most of use use english nicknames
08:52 < bridge> <Mr.Gh0s7> Greek names do suffer quite a bit but I think it's ok since there aren't many Greeks (or any :p) and most of us use use english nicknames
09:49 < bridge> <Jupstar ‚ú™> - One cool thing I already have in mind is having a custom pickup sound for laser.
09:49 < bridge> <Jupstar ‚ú™>   Currently it shares the same as shotgun.
09:49 < bridge> <Jupstar ‚ú™>   There is also an unused gun pickup sound `sfx_pickup_gun.wv`, but I think it sounds rather bad üòÑ
09:49 < bridge> <Jupstar ‚ú™> 
09:49 < bridge> <Jupstar ‚ú™> - The no-ammo sound, the spawn sound aswell as the switch weapon sound are currently shared among all weapons, I think customizing those would be cool too.
09:49 < bridge> <Jupstar ‚ú™> 
09:49 < bridge> <Jupstar ‚ú™> - The main menu theme generally has a iconic melody, but IMO the instruments are too annoying. I dunno how they are even called, but e.g. the loud noises are too annoying. Something with more harmony would be nice
09:49 < bridge> <Jupstar ‚ú™> 
09:49 < bridge> <Jupstar ‚ú™> - I generally would like to test some kind of non-annoying freeze sound, but maybe it's too annoying, so this isn't the most important thing
09:49 < bridge> <Jupstar ‚ú™> 
09:49 < bridge> <Jupstar ‚ú™> - Heart and shield pickup spawn uses same sound as weapons, should be individual too. Ninja has a spawn sound but unused.. Could be changed if it sounds cool
09:49 < bridge> <Jupstar ‚ú™> 
09:49 < bridge> <Jupstar ‚ú™> - There are quite a few unused sounds, ninja attack, some extra unhook collision sound.
09:49 < bridge> <Jupstar ‚ú™> 
09:49 < bridge> <Jupstar ‚ú™> - Hit sounds for skins could be per weapon. Would make it a bit more unique
09:49 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1300743247949332520/collect.ogg?ex=6721f30c&is=6720a18c&hm=681baaa233de4d898c96abd61fa6e9ca8fe87a68d1d2e2cc5da1f451ab6ce4b0&
09:49 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1300743248456847452/gun.ogg?ex=6721f30d&is=6720a18d&hm=9d30186683c30256ee18ae3ebdc85350f91b59fb820ef90f338e4efb3dfc5873&
10:38 < bridge> <heinrich5991> @learath2 https://blog.toast.cafe/posix2024-xcu#the-nuclear-option
10:38 < bridge> <heinrich5991> posix banning file names with newlines to get around shell limitations ^^
10:47 < bridge> <ryozuki> why would filenames have newlines xd
10:57 < bridge> <heinrich5991> non-windows OSs allow that
11:04 < bridge> <ryozuki> i didnt ask what OSes support it
11:05 < bridge> <milkeeycat> rare windows W? üò¨
11:05 < bridge> <ryozuki> imho filenames should be always valid utf8
11:05 < bridge> <ryozuki> but they arent sadly
11:05 < bridge> <Jupstar ‚ú™> Or simply no utf8
11:05 < bridge> <ryozuki> filenames are not like inode ids or smth, they are meant to be human representable right? they should be visible to the human
11:05 < bridge> <ryozuki> utf8 ensures that
11:05 < bridge> <Jupstar ‚ú™> [A-Za-z0-9_]+
11:06 < bridge> <Jupstar ‚ú™> Ok maybe dots too xd
11:06 < bridge> <cyberfrighter> hello
11:06 < bridge> <Jupstar ‚ú™> Imagine how easy the world would be
11:06 < bridge> <ryozuki> @jupeyy_keks well thats a bit racist against chinese or arabs or non ascii ppl
11:06 < bridge> <ryozuki> :justatest:
11:06 < bridge> <ryozuki> :gigachad:
11:06 < bridge> <Jupstar ‚ú™> I teach them english np
11:07 < bridge> <Jupstar ‚ú™> Hey, wazzup
11:07 < bridge> <cyberfrighter> no cyrillic either
11:07 < bridge> <Jupstar ‚ú™> Just facts
11:07 < bridge> <Jupstar ‚ú™> Just the letters
11:07 < bridge> <Jupstar ‚ú™> The best
11:08 < bridge> <heinrich5991> the bar for racism is low today
11:09 < bridge> <heinrich5991> mostly to exploit shell scripts that did not anticipate it
11:09 < bridge> <Jupstar ‚ú™> @cyberfrighter what is your native lang?
11:09 < bridge> <Jupstar ‚ú™> You from like venezuela or smth right?
11:10 < bridge> <cyberfrighter> thats headshot wtf
11:10 < bridge> <cyberfrighter> im serbian
11:10 < bridge> <Jupstar ‚ú™> Ok ok
11:10 < bridge> <Jupstar ‚ú™> Ah how boring, europe
11:10 < bridge> <heinrich5991> I actually also like that I can use all german letters in filenames
11:10 < bridge> <cyberfrighter> our economy isnt that broken
11:10 < bridge> <Jupstar ‚ú™> üòÇ
11:11 < bridge> <cyberfrighter> is it just me or does rus have the most cheaters
11:12 < bridge> <Jupstar ‚ú™> Dunno, ask Valve support ig
11:12 < bridge> <cyberfrighter> in ddnet
11:12 < bridge> <cyberfrighter> idk what valve would have to do with ddnet
11:13 < bridge> <Jupstar ‚ú™> I guess cs2/csgo gives good stats about such stuff
11:13 < bridge> <Jupstar ‚ú™> In ddnet there are currently like 70% russians
11:13 < bridge> <Jupstar ‚ú™> And mostly newcomers
11:13 < bridge> <Jupstar ‚ú™> So dunno how well stats work xD
11:14 < bridge> <Jupstar ‚ú™> But how do you came to this conclusion in first place?
11:17 < bridge> <cyberfrighter> well a friend made a script for me to find cheaters and like 99% of the time they are rus related
11:18 < bridge> <melo∆û> Russian TikTok, which most of them came from. They show and advertise bot clients, TAS runs etc. on there.
11:18 < bridge> <melo∆û> 
11:18 < bridge> <melo∆û> Not sure if they really hold r1, and I wouldn't want "Russia" to be framed as people who cheat the most. I think it's also hard to compare to other regions because their player base is much higher
11:18 < bridge> <melo∆û> New players are more tempted to cheat, because it's an easy ego boost for them
11:18 < bridge> <melo∆û> I assume New players are more tempted to cheat, because it's an easy ego boost for them
11:23 < bridge> <cyberfrighter> what about china vs rus
11:23 < bridge> <melo∆û> Idunno, ask Freddie or smth I don't touch chinese servers
11:24 < bridge> <cyberfrighter> @syrinok you play a lot of china right
11:25 < bridge> <syrinok> Some, ya
11:25 < bridge> <syrinok> China has far less cheaters
11:30 < bridge> <Jupstar ‚ú™> But we all know which country has the biggest cheater
11:34 < bridge> <cyberfrighter> who? n9?
11:35 < bridge> <Jupstar ‚ú™> He is just a small fish compared to the under-age cheat that I mean
11:35 < bridge> <Jupstar ‚ú™> He is just a small fish compared to the under-age cheater that I mean
11:45 < bridge> <animepdf> noby from the US surely
11:45 < bridge> <animepdf> :YEP:
11:47 < bridge> <Jupstar ‚ú™> So vanilla pros (chillerdragon, zhn). As heino pointed out correctly there is a friendly fire cmd.
11:47 < bridge> <Jupstar ‚ú™> 
11:47 < bridge> <Jupstar ‚ú™> However I have a few problems with it:
11:47 < bridge> <Jupstar ‚ú™> If you hit yourself with a rocket you get half the dmg, but with friendly fire on, you do full dmg to your mates.
11:47 < bridge> <Jupstar ‚ú™> For consistency I'd either increase the self dmg to full when friendly fire is on, or also reduce the team dmg to the same amount as self dmg
11:47 < ws-client> <ChillerDragon> @Jupstar ‚ú™ ``sv_teamdamage 1`` turns on friendly fire
11:48 < bridge> <Jupstar ‚ú™> Yeah
11:48 < ws-client> <ChillerDragon> ah i was in the backlog while you wrote this
11:48 < bridge> <Jupstar ‚ú™> Also your eyes turn into fcking happy if you kill a team mate :lol:
11:48 < bridge> <Jupstar ‚ú™> That is brutal
11:48 < bridge> <heinrich5991> üòÑ
11:49 < ws-client> <ChillerDragon> i think doing half damage to team mates makes more sense
11:50 < bridge> <Jupstar ‚ú™> Oke, that is also what I did for now
11:50 < ws-client> <ChillerDragon> its what CS:GO did and it makes it harder to farm teammates
11:50 < bridge> <Jupstar ‚ú™> I think csgo does that too?
11:50 < bridge> <Jupstar ‚ú™> Yeah
11:51 < ws-client> <ChillerDragon> i am not sure what the reasoning behind no laser selfdamage is
11:51 < bridge> <heinrich5991> there is no difference between grenade/laser there, both laser and grenade can't hit yourself
11:51 < ws-client> <ChillerDragon> ah right
11:51 < bridge> <heinrich5991> since laser doesn't do area damage, you can't damage yourself
11:52 < ws-client> <ChillerDragon> yea that makes sense
11:52 < bridge> <Jupstar ‚ú™> Smart projectiles
11:52 < bridge> <Jupstar ‚ú™> Know their owners
11:52 < ws-client> <ChillerDragon> same as you can also not damage your self with your own gun projectiles
11:52 < bridge> <Jupstar ‚ú™> For that you'd need to travel pretty fast anyway
11:52 < bridge> <Jupstar ‚ú™> Ah good idea for tune test
11:52 < bridge> <Jupstar ‚ú™> Thanks
11:56 < bridge> <Jupstar ‚ú™> I feel like I am in a matrix movie
11:56 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1300775352385278035/matrix.mp4?ex=672210f3&is=6720bf73&hm=5488cb4b6f42574f421cf9b9570a0c3a32b343799d600854964d069d8cd648bc&
12:01 < bridge> <heinrich5991> this implementation of tune zones is cool üôÇ
12:08 < bridge> <melo∆û> :NotLikeKogasa: :NotLikeKogasa:
14:15 < bridge> <inv41idu53rn4m3> The freeze scream is too iconic to change
14:38 < bridge> <Jupstar ‚ú™> Bro sometimes rustfmt is high
14:38 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1300815946096836698/image.png?ex=672236c1&is=6720e541&hm=1ac989c69c8dfb571981a913b4c760aa564135778a76ba8792cf0bba03a2f199&
14:42 < bridge> <learath2> You will use the prescribed format and you will like it
14:43 < bridge> <Jupstar ‚ú™> I've never seen it break so weirdly tbh
14:43 < bridge> <Jupstar ‚ú™> 
14:43 < bridge> <Jupstar ‚ú™> Maybe it's some kind of bug xd
14:44 < bridge> <heinrich5991> looks like it gave up with the maximum width
14:44 < bridge> <Jupstar ‚ú™> I am 3 indentions in
14:44 < bridge> <Jupstar ‚ú™> inside a if block inside a member function
14:45 < bridge> <Jupstar ‚ú™> even with typedefs i still find it kinda bad üòÑ
14:45 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1300817679703085107/image.png?ex=6722385e&is=6720e6de&hm=228fdd873fb6eca55d3e17df98718fd89eba02fb89729a38d0acd90a9d35c4db&
14:45 < bridge> <heinrich5991> yes, but it looks like it doesn't want to break after the `|` and tries to align the parameters
14:45 < bridge> <Jupstar ‚ú™> yeah
14:45 < bridge> <Jupstar ‚ú™> tbh rustfmt generally struggles with long lines
14:45 < bridge> <Jupstar ‚ú™> if i use a long "" text it just doesn't format anything anymore in that file xD
14:46 < bridge> <heinrich5991> you might be able to get away with
14:46 < bridge> <heinrich5991> ```rs
14:46 < bridge> <heinrich5991> let mut fill_for_players = {
14:46 < bridge> <heinrich5991>     |param1: LongType,
14:46 < bridge> <heinrich5991>      param2: LongType| {
14:46 < bridge> <heinrich5991>     }
14:46 < bridge> <heinrich5991> }
14:46 < bridge> <heinrich5991> ```
14:46 < bridge> <heinrich5991> maybe needs a comment before the closure so it doesn't erase the `{}`
14:46 < bridge> <Jupstar ‚ú™> lets try
14:46 < bridge> <heinrich5991> but at this point a formatter has failed IMO
14:46 < bridge> <heinrich5991> if you have to tweak your source to make it readable under the formatter
14:46 < bridge> <Jupstar ‚ú™> nice, actually worked
14:46 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1300818142355914893/image.png?ex=672238cd&is=6720e74d&hm=633e8fad80dc7c2facd2581780d2f1a32e1355264fcf9fee4074b9f5a5037ab1&
14:59 < bridge> <ryozuki> is this inside a macro?
15:00 < bridge> <ryozuki> oh rip
15:00 < bridge> <ryozuki> well feel free to report a bug and contribute
15:06 < bridge> <diariesvexar> It sound like Neo on top of building trying to avoid bullets
15:07 < bridge> <diariesvexar> It's sound like Neo on top of building trying to avoid bullets
15:10 < bridge> <ryozuki> rust 2024 brings new style
15:10 < bridge> <ryozuki> > This will be the first Rust edition that brings with it a new style edition to be applied by rustfmt. That new style edition includes:
15:10 < bridge> <ryozuki> > 
15:10 < bridge> <ryozuki> > Tracking Issue for Rust 2024: rustfmt closure body braces rust#124767
15:10 < bridge> <ryozuki> > Tracking Issue for Rust 2024: rustfmt raw identifier sorting rust#124764
15:10 < bridge> <ryozuki> > Tracking Issue for Rust 2024: rustfmt trailing comment alignment rust#124760
15:10 < bridge> <ryozuki> > Tracking Issue for Rust 2024: rustfmt improve impl generics indentation  rust#124758
15:10 < bridge> <ryozuki> > Tracking Issue for Rust 2024: rustfmt change sort to Unicode-aware "non-lowercase before lowercase" rust#123802
15:10 < bridge> <ryozuki> > Tracking Issue for Rust 2024: rustfmt use version sort rust#123800
15:10 < bridge> <ryozuki> > Tracking Issue for Rust 2024: rustfmt style editions rust#123799
15:10 < bridge> <ryozuki> > Tracking Issue for Rust 2024: rustfmt enable overflow_delimited_expr rust#123751
15:10 < bridge> <ryozuki> https://github.com/rust-lang/rust-project-goals/issues/117#issuecomment-2439733237
15:20 < bridge> <ahmetcanalyuruk> cool
15:22 < bridge> <Jupstar ‚ú™> WAAT
15:22 < bridge> <Jupstar ‚ú™> I need to format my whole repo with that üòÑ
15:23 < bridge> <Jupstar ‚ú™> Bcs ofc I use Rust 2024
15:23 < bridge> <Jupstar ‚ú™> üòè
15:23 < bridge> <heinrich5991> rust 2024 comes out early 2025 ^^
15:23 < bridge> <Jupstar ‚ú™> That is a problem
15:23 < bridge> <Jupstar ‚ú™> It has to release on at latest 31.12.2023 23:59
15:23 < bridge> <Jupstar ‚ú™> 
15:23 < bridge> <Jupstar ‚ú™> Then I have 1 minute to format everything
15:24 < bridge> <Jupstar ‚ú™> It has to release on at latest 31.12.2024 23:59
15:24 < bridge> <Jupstar ‚ú™> 
15:24 < bridge> <Jupstar ‚ú™> Then I have 1 minute to format everything
15:25 < bridge> <heinrich5991> > The Rust 2024 Edition is scheduled to be frozen on 2024-10-17, stabilized on nightly on 2024-11-28, and released as stable with Rust 1.85.0 on 2025-02-20.
15:25 < bridge> <heinrich5991> https://doc.rust-lang.org/edition-guide/rust-2024/
15:28 < bridge> <Jupstar ‚ú™> Does it have any cool feature?
15:28 < bridge> <Jupstar ‚ú™> Something that is related to safety of pointers xd
15:31 < bridge> <Jupstar ‚ú™> Does it have any cool feature?
15:31 < bridge> <Jupstar ‚ú™> Something that is not* related to safety of pointers xd
15:35 < bridge> <heinrich5991> it has more `unsafe` functions: https://doc.rust-lang.org/edition-guide/rust-2024/newly-unsafe-functions.html
15:35 < bridge> <heinrich5991> `unsafe` operations in `unsafe fn`s now want an `unsafe` block
15:38 < bridge> <Jupstar ‚ú™> Oh what
15:38 < bridge> <Jupstar ‚ú™> That sounds like a bit of pain tbh xD
15:38 < bridge> <heinrich5991> it's a lint, you can turn it off
15:39 < bridge> <heinrich5991> I haven't written code with it yet, not sure how annoying it it
15:39 < bridge> <heinrich5991> I haven't written code with it yet, not sure how annoying it is
15:39 < bridge> <Jupstar ‚ú™> I mean I don't have lot of unsafe functions, so I guess I'll survive xd
15:43 < bridge> <learath2> Sounds like a bizarre choice
15:44 < bridge> <learath2> I guess the idea is to push people to isolate the unsafe code as much as humanly possible
15:45 < bridge> <ryozuki> if you load a dynamic library, does it share address space with the main program?
15:45 < bridge> <Jupstar ‚ú™> Well what I'd find cool is if Rust has a `careful` attribute that is basically like unsafe but not for memory safety directly.
15:45 < bridge> <Jupstar ‚ú™> 
15:45 < bridge> <Jupstar ‚ú™> Like logic where extra thinking should be considered.
15:45 < bridge> <Jupstar ‚ú™> 
15:45 < bridge> <Jupstar ‚ú™> But that's 100% a me thing.
15:45 < bridge> <Jupstar ‚ú™> Since I am not the biggest fan of having acces to a  borrow_mut, I can imagine some use cases for that
15:45 < bridge> <ryozuki> specially if its like ffi?
15:46 < bridge> <ryozuki> https://en.wikipedia.org/wiki/Address_space
15:46 < bridge> <Jupstar ‚ú™> Rn the only thing I could do is put it into unsafe trait to discorrage using it directly üòÑ
15:46 < bridge> <ryozuki> hmm maybe the question is weirdly formulatted
15:47 < bridge> <ryozuki> but would it be theorically possible to deallocate memory allocated from Rust in C?
15:47 < bridge> <Jupstar ‚ú™> That's props UB, but if you ask theoretically
15:47 < bridge> <Jupstar ‚ú™> Probably yes
15:48 < bridge> <ryozuki> yeah i mean in non ub way
15:48 < bridge> <ryozuki> e.g i allocate a box in rust and a loaded shared lib in C deallocs it somehow
15:48 < bridge> <Jupstar ‚ú™> I guess only if you allocated it with libc
15:48 < bridge> <ryozuki> i wonder how that somehow would be
15:48 < bridge> <Jupstar ‚ú™> und free it with that
15:48 < bridge> <ryozuki> but if its a complex type that required dropping fields its even more hard
15:48 < bridge> <Jupstar ‚ú™> Then it's UB afaik
15:48 < bridge> <ryozuki> i guess it doesnt make sense
15:49 < bridge> <ryozuki> btw why cant thread locals be external?
15:50 < bridge> <ryozuki> apparently the MLIR LLVM jit doesnt support thread locals
15:50 < bridge> <ryozuki> JIT session error: Symbols not found: [ ___emutls_get_address ]
15:50 < bridge> <ryozuki> or maybe it needs some library idk
15:50 < bridge> <learath2> Accessing eachothers memory is fine(tm). Allocating/deal locating across ffi is not unless you both use the same allocator
15:50 < bridge> <Jupstar ‚ú™> Thread locals are really a pain in rust xD
15:50 < bridge> <Jupstar ‚ú™> 
15:51 < bridge> <Jupstar ‚ú™> But since I hate global variables anyway I rarely used them and only for some WASM stuff
15:51 < bridge> <learath2> So you could in theory load an allocator library, and use it both through rust and through C, that way freeing on the other side is safe, assuming you have the ownership semantics correctly mapped out
15:51 < bridge> <learath2> As in the side freeing the memory "owns" it
15:51 < bridge> <ryozuki> i see
15:52 < bridge> <ryozuki> i wish the world was made entirely in rust
15:52 < bridge> <ryozuki> üò¨
15:52 < bridge> <Jupstar ‚ú™> üòè
15:53 < bridge> <learath2> Wym "external"?
15:54 < bridge> <heinrich5991> yes, you live in the same address space
15:54 < bridge> <ryozuki> external linkage
15:54 < bridge> <ryozuki> xd
15:55 < bridge> <ryozuki> external
15:55 < bridge> <ryozuki> 
15:55 < bridge> <ryozuki>     If none of the above identifiers are used, the global is externally visible, meaning that it participates in linkage and can be used to resolve external symbol references.
15:55 < bridge> <ryozuki> llvm definition
15:55 < bridge> <heinrich5991> what about this is pertaining to rust? ^^ you should always free stuff the same way you allocated it, this also applies to rust
15:55 < bridge> <ryozuki> idk but i wanted to say it, if all is rust u dont have ffi troubles
15:56 < bridge> <ryozuki> i hate/love llvm, the C api is bad, because if you use it bad, but not in a passing nullptr bad, creating a wrong llvm ir bad, it can segfault
15:56 < bridge> <ryozuki> which shouldnt happen
15:57 < bridge> <heinrich5991> hmm, sounds annoying
15:57 < bridge> <ryozuki> but i guess its czu the C api isnt given much focus they care only on c++
15:57 < bridge> <heinrich5991> guess what you need is better C++ interoperability of rust
15:57 < bridge> <ryozuki> for example if u make a function and a block doesnt have a terminator
15:57 < bridge> <ryozuki> sometimes it segfaults
15:57 < bridge> <ryozuki> or for some more intrincate ir speicfic stuff
15:58 < bridge> <ryozuki> like a wrong parameter to a ir instruction
16:02 < bridge> <jxsl13> would probably the exact same shithole as the C++ world
16:02 < bridge> <jxsl13> ._.
16:03 < bridge> <Jupstar ‚ú™> And so jxsl was banned from Ryos brain.
16:03 < bridge> <Jupstar ‚ú™> The end
16:03 < bridge> <jxsl13> In ever paid rent
16:03 < bridge> <jxsl13> never
16:03 < bridge> <jxsl13> evicted
16:05 < bridge> <jxsl13> would probably be the exact same shithole as the C++ world
16:05 < bridge> <jxsl13> I never paid rent
16:05 < bridge> <jxsl13> *evicted*
16:07 < bridge> <learath2> Thread locals don't have a determinate address, so you prolly can't have external linkage for them. However, as long as you take the address at runtime, it's fine to access across threada
16:07 < bridge> <learath2> Thread locals don't have a determinate address, so you prolly can't have external linkage for them. However, as long as you take the address at runtime, it's fine to access across threads
18:12 < bridge> <vovan6340> —Ñ–≤—Ñ–≤—Ñ
18:12 < bridge> <vovan6340> –≤—Ñ–≤—Ñ
18:12 < bridge> <vovan6340> –≤—Ñ–≤
18:12 < bridge> <vovan6340> —Ñ
18:12 < bridge> <vovan6340> –≤—Ñ
18:12 < bridge> <vovan6340> –≤—Ñ
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> —Å—è
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:12 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤–≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <pioooooo> :greenthing:
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤–≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤–≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <milkeeycat> @Discord Mod
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –≤–≤
18:13 < bridge> <vovan6340> –≤
18:13 < bridge> <vovan6340> –∞
18:13 < bridge> <vovan6340> –∞
18:13 < bridge> <vovan6340> –∞
18:14 < bridge> <vovan6340> –∞
18:14 < bridge> <vovan6340> –∞
18:14 < bridge> <vovan6340> –∞
18:14 < bridge> <vovan6340> –≤
18:14 < bridge> <vovan6340> –≤–≤–≤
18:14 < bridge> <vovan6340> –≤—Ñ–≤—Ñ
18:14 < bridge> <vovan6340> –≤
18:14 < bridge> <vovan6340> –∞
18:14 < bridge> <vovan6340> –∞
18:29 < bridge> <cyberfrighter> wifi truly is the worst thing ever
18:29 < bridge> <cyberfrighter> spent 3:30:00 trying to get a rank and i get a rank in 3 mins in lan
20:16 < bridge> <chairn> wait a few billion years, and the universe might end up in big iron, which is the step right before big rust (<https://en.wikipedia.org/wiki/Future_of_an_expanding_universe#Future_without_proton_decay>)
23:49 < bridge> <teero777> Quick question. Is the map data stored in the demo file?
23:49 < bridge> <teero777> can it be stored in the demo file?
23:49 < bridge> <heinrich5991> yes
23:49 < bridge> <teero777> ok cool thx :D
23:50 < bridge> <heinrich5991> the map is simply embedded as a whole into the demo file
