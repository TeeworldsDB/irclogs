08:21 <+bridge> [ddnet] <Tater> Should I be concerned about the ASan & UBSan check failing?
09:16 <+bridge> [ddnet] <Ryozuki> my tooltip reimplementation seems to work
09:16 <+bridge> [ddnet] <Ryozuki> :poggers:
09:32 <+bridge> [ddnet] <deen> no, I have a fix for it, waiting for submit
09:40 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/965517104033976330/unknown.png
09:40 <+bridge> [ddnet] <Ryozuki> troll chillerdragon stuff
09:40 <+bridge> [ddnet] <Ryozuki> :monkaS:
09:40 <+bridge> [ddnet] <Tater> almost issue/pr #5000
09:41 <+bridge> [ddnet] <Ryozuki> > D:\a\ddnet\ddnet\src\game\client\components\tooltips.cpp(39,4): error C7555: use of designated initializers requires at least '/std:c++20' [D:\a\ddnet\ddnet\debug\DDNet.vcxproj]
09:41 <+bridge> [ddnet] <Ryozuki> wat
09:41 <+bridge> [ddnet] <Ryozuki> can u rly not do this
09:41 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/965517470540656640/unknown.png
09:44 <+bridge> [ddnet] <Ryozuki> when c++20
09:44 <+bridge> [ddnet] <Ryozuki> looks like the only least insane c++
09:44 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
09:45 <+ChillerDragon> Who frees this memory? https://github.com/ddnet/ddnet/blob/843acf6a5a80ef445ff134c90bee374212673464/src/engine/shared/console.cpp#L1221
09:47 <+bridge> [ddnet] <Ryozuki> i wonder
09:47 <+bridge> [ddnet] <Ryozuki> console has always been magical
09:48 <+bridge> [ddnet] <Learath2> Not until c++20. Designated initializers are a (superior) C feaure
09:48 <+bridge> [ddnet] <Learath2> Feature*
09:48 <+bridge> [ddnet] <Ryozuki> ah thats why i remember using this before
09:48 <+bridge> [ddnet] <Ryozuki> it was probs c
09:49 <+bridge> [ddnet] <Ryozuki> also even with designated inits
09:49 <+bridge> [ddnet] <Ryozuki> u need to keep the order
09:49 <+bridge> [ddnet] <Ryozuki> which is a bit insane
09:49 <+bridge> [ddnet] <Learath2> C99 gang
09:49 <+bridge> [ddnet] <Ryozuki> in c u dont need to keep the order
09:49 <+bridge> [ddnet] <Ryozuki> iirc
09:49 <+bridge> [ddnet] <Learath2> Yep
09:49 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/965519451720134697/unknown.png
09:49 <+bridge> [ddnet] <Learath2> Truly the language of gods
09:50 <+bridge> [ddnet] <Ryozuki> why this limitation tho?
09:50 <+bridge> [ddnet] <Learath2> I bet the bible was sent to earth written in C
09:51 <+bridge> [ddnet] <Ryozuki> man the ubsan CI check always fails
09:51 <+bridge> [ddnet] <Ryozuki> and its not my fault
09:51 <+bridge> [ddnet] <Learath2> I honestly don't know, maybe you can dig up the initial proposal, but I'd guess to make the compilers job easier, just discard the designators and pretend it's list-initialization
09:53 <+bridge> [ddnet] <Ryozuki> @Not Keks can u review my pr
09:54 <+bridge> [ddnet] <Ryozuki> it shouldnt be long
09:54 <+bridge> [ddnet] <Ryozuki> â˜•
09:54 <+bridge> [ddnet] <Jupstar> deen already merged it
09:54 <+bridge> [ddnet] <Jupstar> xd
09:54 <+bridge> [ddnet] <Ryozuki> ah ok
09:54 <+bridge> [ddnet] <Ryozuki> xd
09:54 <+bridge> [ddnet] <Jupstar> but
09:54 <+bridge> [ddnet] <Jupstar> u forgot a new line
09:54 <+bridge> [ddnet] <Jupstar> in menus.cpp
09:54 <+bridge> [ddnet] <Jupstar> will probs fail
09:54 <+bridge> [ddnet] <Ryozuki> hmm
09:54 <+bridge> [ddnet] <Ryozuki> it passes the fix style
09:54 <+bridge> [ddnet] <Ryozuki> cuz i ran it
09:55 <+bridge> [ddnet] <Jupstar> ok then heinrich will kill u once he pops up again
09:55 <+bridge> [ddnet] <Ryozuki> xd
09:55 <+bridge> [ddnet] <Ryozuki> wait i add it
09:55 <+bridge> [ddnet] <Ryozuki> then u bors retry or smth
09:55 <+bridge> [ddnet] <Jupstar> yes
09:55 <+bridge> [ddnet] <Jupstar> in tooltips.h too
09:55 <+bridge> [ddnet] <Ryozuki> pushed
10:11 <+bridge> [ddnet] <Ryozuki> now we only need physics tests
10:11 <+bridge> [ddnet] <Ryozuki> with the null client
10:12 <+bridge> [ddnet] <Jupstar> ez af
10:12 <+bridge> [ddnet] <Jupstar> soon the CI takes 2h
10:12 <+bridge> [ddnet] <Jupstar> bcs the CI has to play teeworlds
10:13 <+bridge> [ddnet] <Jupstar> to test all features
10:14 <+bridge> [ddnet] <Ryozuki> xd
10:18 <+bridge> [ddnet] <deen> We could use teehistorian replays as end-to-end tests for the server
10:22 <+bridge> [ddnet] <Jupstar> any profiler on linux that splits cleanly between threads?
10:25 <+bridge> [ddnet] <deen> Use `--per-thread` with perf stat?
10:25 <+bridge> [ddnet] <Learath2> I was just about to say that :D
10:25 <+bridge> [ddnet] <Jupstar> ok thanks
11:43 <+bridge> [ddnet] <Jupstar> #5000 ðŸ˜®
11:43 <+bridge> [ddnet] <DDNet> https://github.com/ddnet/ddnet/pull/5000
11:44 <+bridge> [ddnet] <n000b> @Ryozuki is this tooltip that information pops up when aiming at some settings?
11:51 <+bridge> [ddnet] <deen> yes
11:52 <+bridge> [ddnet] <deen> Much better
11:52 <+bridge> [ddnet] <deen> https://cdn.discordapp.com/attachments/293493549758939136/965550372217323560/screenshot-20220418115201.png
12:15 <+bridge> [ddnet] <Ryozuki> Nice
13:01 <+bridge> [ddnet] <deen> And the same for client ^
13:27 <+bridge> [ddnet] <chillerdragon> Ddnet Admin discussing replay bots in public!! @heinrich ban him!!
13:27 <+bridge> [ddnet] <chillerdragon> (@deen)
13:29 <+bridge> [ddnet] <deen> If it's replayed at server side it's not a "replay bot", but a teehistorian to demo converter
13:30 <+bridge> [ddnet] <chillerdragon> I always thought about a simple map with a lot of code coverage when just falling afk at spawn. Like a headless client connects in the CI to the server and falls through start tile into finish tile etc. Then a bash script uses fifo to stop the client. What do you think?
13:30 <+bridge> [ddnet] <chillerdragon> The question is where this map comes from. I am not sure if we want that map file in the ddnet repo.
13:38 <+bridge> [ddnet] <Ryozuki> @Not Keks i cleaned my keyboard and it seems like it doesnt double press anymore
13:38 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
13:38 <+bridge> [ddnet] <Ryozuki> it was rly dirty
13:38 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
13:39 <+bridge> [ddnet] <Ryozuki> good advise: dont let ur cat on ur keyboard
13:59 <+bridge> [ddnet] <Jupstar> xd
14:00 <+bridge> [ddnet] <Jupstar> most effective way to clean dust from hardware:
14:00 <+bridge> [ddnet] <Jupstar> use a compressor
14:00 <+bridge> [ddnet] <Jupstar> e.g. a ball pump ventile on a bicycle pump
14:00 <+bridge> [ddnet] <Jupstar> u wont believe how much shit there is
14:00 <+bridge> [ddnet] <Jupstar> vacuum cleaners suck bcs they only work well when there is a vacuum
14:09 <+bridge> [ddnet] <Ryozuki> doesnt vacum generate static
14:10 <+bridge> [ddnet] <deen> Yes, should be in repo. Just call it something like coverage.map
14:11 <+bridge> [ddnet] <deen> I like the idea
14:24 <+ChillerDragon> I think maybe it would be cleaner to create a full new repo only for integration tests. With some bash scripts and the map. And the CI clones that.
14:32 <+bridge> [ddnet] <deen> makes it annoying when something fails to reproduce it locally
14:32 <+bridge> [ddnet] <deen> tests should be in the same repo as productive code imo
14:41 <+ChillerDragon> ok
14:52 <+bridge> [ddnet] <Ryozuki> congrats on the 5000th pr merged
14:52 <+bridge> [ddnet] <Ryozuki> #5000
14:53 <+bridge> [ddnet] <DDNet> https://github.com/ddnet/ddnet/pull/5000
14:53 <+bridge> [ddnet] <Ryozuki> :poggers:
14:57 <+ChillerDragon> pog
15:02 <+bridge> [ddnet] <Jupstar> do i need to understand the blockworlds problems? xd
15:15 <+bridge> [ddnet] <deen> 5000 is the combined number of prs and issues
15:19 <+bridge> [ddnet] <Ryozuki> ah ok
15:20 <+bridge> [ddnet] <Learath2> https://youtu.be/BFld4EBO2RE I was going to post this in #off-topic but this is probably where it'd be appreciated more
15:21 <+bridge> [ddnet] <Ryozuki> @Learath2 :ban:
15:21 <+bridge> [ddnet] <Ryozuki> holy shit
15:21 <+bridge> [ddnet] <Ryozuki> the shader
15:21 <+bridge> [ddnet] <Ryozuki> looks rly good
15:21 <+bridge> [ddnet] <Ryozuki> https://www.shadertoy.com/view/4ttSWf
15:22 <+bridge> [ddnet] <Ryozuki> 144fps too
15:22 <+bridge> [ddnet] <Ryozuki> xd
15:22 <+bridge> [ddnet] <Learath2> The guy apparently used to work at pixar
15:22 <+bridge> [ddnet] <Learath2> He also explains his process extremely well, so well that I'm tempted to give it a go myself
15:23 <+bridge> [ddnet] <Jupstar> when i see stuff like that i want to use raytracing xd
15:24 <+bridge> [ddnet] <Jupstar> godot will probs only add it in 4.1 <.<
15:24 <+bridge> [ddnet] <Ryozuki> xd
15:24 <+bridge> [ddnet] <Ryozuki> make a ddnet shader
15:24 <+bridge> [ddnet] <Jupstar> yeah i'd love to break map compability with vanilla
15:25 <+bridge> [ddnet] <Jupstar> would give us so much more oppotunities ðŸ˜„
15:25 <+bridge> [ddnet] <Ryozuki> idk why we dont do that yet
15:25 <+bridge> [ddnet] <Ryozuki> vanilla is effectively dead
15:25 <+bridge> [ddnet] <Jupstar> and old ddnet clients too tbf
15:25 <+bridge> [ddnet] <Jupstar> but yeah
15:25 <+bridge> [ddnet] <Ryozuki> im anti anti-updaters
15:25 <+bridge> [ddnet] <Jupstar> xd
15:25 <+bridge> [ddnet] <Jupstar> yeah its annoying
15:25 <+bridge> [ddnet] <Jupstar> and i think mappers also dislike it
15:25 <+bridge> [ddnet] <Jupstar> pipou also wants more control over level of detail
15:26 <+bridge> [ddnet] <Jupstar> understandable
15:26 <+bridge> [ddnet] <Ryozuki> the map format could maybe get improved a lot
15:26 <+bridge> [ddnet] <Learath2> I smell a coup brewing
15:26 <+bridge> [ddnet] <Ryozuki> im sure we can do better than a 15y old map format
15:26 <+bridge> [ddnet] <Jupstar> yes
15:26 <+bridge> [ddnet] <Jupstar> DDNET GOVERNMENT SUCKS xd
15:26 <+bridge> [ddnet] <Ryozuki> XD
15:26 <+bridge> [ddnet] <Ryozuki> konsti incoming
15:26 <+bridge> [ddnet] <Learath2> Hm, what are your concerns with it?
15:26 <+bridge> [ddnet] <Jupstar> its not mod firnedly xd
15:26 <+bridge> [ddnet] <Ryozuki> @Learath2 have u ever tried to write a map parser
15:27 <+bridge> [ddnet] <Jupstar> and it should embedd with PNG
15:27 <+bridge> [ddnet] <Jupstar> not zlib
15:27 <+bridge> [ddnet] <Learath2> Not really, hence I asked what your concerns are
15:27 <+bridge> [ddnet] <Learath2> If we get a new map format, I want uuids for layer types
15:27 <+bridge> [ddnet] <Ryozuki> oh yeah
15:27 <+bridge> [ddnet] <Ryozuki> the mixing of uuid and non uuid
15:27 <+bridge> [ddnet] <Ryozuki> was a weird thing xd
15:28 <+bridge> [ddnet] <Jupstar> yeah lets also break network while at it xD
15:28 <+bridge> [ddnet] <Jupstar> same problem
15:28 <+bridge> [ddnet] <Ryozuki> yes
15:28 <+bridge> [ddnet] <Learath2> protobuf for network?
15:28 <+bridge> [ddnet] <Ryozuki> is protobuf used in games?
15:28 <+bridge> [ddnet] <Ryozuki> we should check how actual games do it
15:28 <+bridge> [ddnet] <Jupstar> but QUIC & encryption for chat
15:28 <+bridge> [ddnet] <Jupstar> would already be a good first step
15:29 <+bridge> [ddnet] <Ryozuki> make a more filter friendly protocol
15:30 <+bridge> [ddnet] <Ryozuki> one optimization that i can think of, maybe its a bit useless, but for example, i think all layers need to have the same size usually as the game layer
15:30 <+bridge> [ddnet] <Ryozuki> but for example
15:30 <+bridge> [ddnet] <Ryozuki> switch layer will have lot of empty wasted space
15:30 <+bridge> [ddnet] <Ryozuki> we could design it to not waste so much
15:30 <+bridge> [ddnet] <Ryozuki> a 10kx10k map is actually 10kx10kxNLAYERS
15:30 <+bridge> [ddnet] <Ryozuki> xd
15:31 <+bridge> [ddnet] <Patiga> only all physics layers need to be the same size, not the tiles layers
15:31 <+bridge> [ddnet] <Ryozuki> a 10kx10k map is actually 10k x 10k x NLAYERS
15:32 <+bridge> [ddnet] <Learath2> I think eeeee used RLE when doing the first emscripten version of ddnet
15:33 <+bridge> [ddnet] <Ryozuki> ye
15:35 <+bridge> [ddnet] <Learath2> Even that should save massive amounts of space on those very sparse layers
15:39 <+bridge> [ddnet] <Robyt3> I think RLE is already used but only to skip empty tiles (and only to skip up to 255 tiles)
15:39 <+bridge> [ddnet] <Patiga> in the 0.7 format each tile stores the count, how many times it should get repeated
15:40 <+bridge> [ddnet] <Patiga> (ddnet pls don't add thats how twmap differentiates ddnet and 0.7 maps rn and I'll need to figure out a better way ðŸ˜…)
15:41 <+bridge> [ddnet] <Ryozuki> i spent 30 mins figuring out why my change didnt work
15:41 <+bridge> [ddnet] <Jupstar> most active ryo since a long time xd
15:41 <+bridge> [ddnet] <Ryozuki> and it didnt work because i forgot to set the server in test mode
15:41 <+bridge> [ddnet] <Ryozuki> stupid waste of time
15:41 <+bridge> [ddnet] <Ryozuki> xd
15:41 <+bridge> [ddnet] <Ryozuki> true xd
15:41 <+bridge> [ddnet] <Ryozuki> im on vacations
15:41 <+bridge> [ddnet] <Ryozuki> which end this wednesday tho
15:41 <+bridge> [ddnet] <Ryozuki> :fuckyousnail:
15:41 <+bridge> [ddnet] <Jupstar> rtip
15:48 <+bridge> [ddnet] <Ryozuki> https://github.com/ddnet/ddnet/issues/4814
15:49 <+bridge> [ddnet] <Ryozuki> @Not Keks do u think we could somehow make teles predictable by e.g when server starts, generate a seed that is then known by the client
15:49 <+bridge> [ddnet] <Ryozuki> xd
15:49 <+bridge> [ddnet] <Jupstar> could also just be tick based
15:49 <+bridge> [ddnet] <Jupstar> doubt we need a seed
15:49 <+bridge> [ddnet] <Ryozuki> true
15:49 <+bridge> [ddnet] <Jupstar> or remove randomness
15:49 <+bridge> [ddnet] <Jupstar> random is never really cool ðŸ˜„
15:49 <+bridge> [ddnet] <Ryozuki> if we remove randomness it may be unfair
15:49 <+bridge> [ddnet] <Ryozuki> to existing runs
15:50 <+bridge> [ddnet] <Jupstar> not if its easier
15:50 <+bridge> [ddnet] <Ryozuki> i think this was discussed
15:50 <+bridge> [ddnet] <Ryozuki> xd
15:50 <+bridge> [ddnet] <Jupstar> just if it gets harder ðŸ˜„
15:50 <+bridge> [ddnet] <Jupstar> i think we shouldnt always think too much about such things.. just do it and fix the 10 maps that are affected by it
15:50 <+bridge> [ddnet] <Ryozuki> xd
16:11 <+bridge> [ddnet] <Ryozuki> @Not Keks is this how its done?
16:11 <+bridge> [ddnet] <Ryozuki> xd
16:16 <+bridge> [ddnet] <Learath2> We discussed making tele predictable on the client, it's not exactly trivial though
16:20 <+bridge> [ddnet] <Learath2> To make it predictable the client needs to know the initial seed AND how far along we are on the generator. So I think it'll have to be a per client prng
16:21 <+bridge> [ddnet] <Ryozuki> just seed it everytime 4heafd
16:21 <+bridge> [ddnet] <Jupstar> ez
16:22 <+bridge> [ddnet] <Learath2> Seeding it with tick idk, does the client even have a way to correctly predict the tick a tele will happen on? I think it'd be better if the destination was set as soon as someone begins a run maybe
16:22 <+bridge> [ddnet] <Jupstar> use 0 as seed
16:22 <+bridge> [ddnet] <Jupstar> problems solved
16:22 <+bridge> [ddnet] <Ryozuki> true
16:22 <+bridge> [ddnet] <Learath2> Or maybe make it windows of 10 sec within which the destination is set
16:23 <+bridge> [ddnet] <Ryozuki> we just need to fake a bit of randomness
16:23 <+bridge> [ddnet] <Ryozuki> so players dont see it
16:23 <+bridge> [ddnet] <Ryozuki> xdxd
16:23 <+bridge> [ddnet] <Jupstar> changing it in any way could already be viewed as breaking old ranks anyway
16:23 <+bridge> [ddnet] <Jupstar> just remove it xD
16:23 <+bridge> [ddnet] <Jupstar> xDDD
16:23 <+bridge> [ddnet] <Jupstar> true
16:23 <+bridge> [ddnet] <Jupstar> the oldschool players are angry else
16:24 <+bridge> [ddnet] <Learath2> The problem isn't the quality of the randomness, whatever "fake" randomness you come up with will have to overcome the same problem
16:24 <+bridge> [ddnet] <Ryozuki> hm now that i did the tooltips, maybe i can implement a guide/tour/tutorial over the settings
16:24 <+bridge> [ddnet] <Ryozuki> xd
16:24 <+bridge> [ddnet] <Ryozuki> with a cute tee by the side
16:24 <+bridge> [ddnet] <Ryozuki> twinbop
16:24 <+bridge> [ddnet] <Learath2> The client needs to know the destination for a telein, it needs to be resistant to packets being dropped
16:27 <+bridge> [ddnet] <Jupstar> ngl would love it
16:27 <+bridge> [ddnet] <Jupstar> fan service
16:27 <+bridge> [ddnet] <Ryozuki> xD
16:45 <+bridge> [ddnet] <c0d3d3v> still better then running the wrong code and wondering why your changes do nothing, reverting your changes and noticing 10min later that you have run the wrong code
16:47 <+bridge> [ddnet] <c0d3d3v> wormup tick could be used for seed, so the tick you step over the start line
16:48 <+bridge> [ddnet] <c0d3d3v> wormup tick could be used for seed, so the tick you step over the start line.
16:50 <+bridge> [ddnet] <c0d3d3v> warm up tick could be used for seed, so the tick you step over the start line.
16:51 <+bridge> [ddnet] <c0d3d3v> warm up tick (m_StartTime) could be used for seed, so the tick you step over the start line.
17:31 <+bridge> [ddnet] <Ravie> animated helper tee let's go :poggers:
17:32 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
17:36 <+bridge> [ddnet] <Voxel> omg are you thinking about making a ddnet clippy
17:36 <+bridge> [ddnet] <Ryozuki> ye
17:36 <+bridge> [ddnet] <Ryozuki> like louis video
20:03 <+bridge> [ddnet] <Ryozuki> im trying i2p
20:03 <+bridge> [ddnet] <Ryozuki> looks like something way better than tor
20:31 <+bridge> [ddnet] <Tater> Could we make the tooltip delay 500ms instead of 1000ms? 1000ms feels like forever
20:31 <+bridge> [ddnet] <Ryozuki> maybe we should make it a setting
20:31 <+bridge> [ddnet] <Jupstar> xD
20:32 <+bridge> [ddnet] <Ryozuki> xd
20:32 <+bridge> [ddnet] <Tater> firefox uses 500ms :)
20:32 <+bridge> [ddnet] <Jupstar> just take 777ms
20:32 <+bridge> [ddnet] <Ryozuki> 666
20:32 <+bridge> [ddnet] <Jupstar> 777 is lucky number xd
20:36 <+bridge> [ddnet] <Chairn> use 0
20:36 <+bridge> [ddnet] <Ryozuki> :deen_ban:
20:36 <+bridge> [ddnet] <Ryozuki> @Not Keks lets add AMD FSR
20:37 <+bridge> [ddnet] <Ryozuki> to get 20k fps
20:37 <+bridge> [ddnet] <Chairn> when you give someone a hammer, everything is a nail
20:38 <+bridge> [ddnet] <Jupstar> does that only work with the devs enabling it?
20:38 <+bridge> [ddnet] <Ryozuki> https://github.com/GPUOpen-Effects/FidelityFX-FSR
20:38 <+bridge> [ddnet] <Jupstar> is there not like a global setting?
20:38 <+bridge> [ddnet] <Ryozuki> no
20:38 <+bridge> [ddnet] <Ryozuki> it has to be implemented
20:38 <+bridge> [ddnet] <Ryozuki> by devs
20:38 <+bridge> [ddnet] <Ryozuki> iirc it has smth to do with shaders
20:39 <+bridge> [ddnet] <Ryozuki> https://github.com/GPUOpen-Effects/FidelityFX-FSR/tree/master/sample/src/VK
20:39 <+bridge> [ddnet] <Ryozuki> here is the vulkan code
20:39 <+bridge> [ddnet] <Ryozuki> (example vulkan code*)
20:40 <+bridge> [ddnet] <Jupstar> we need faster CPUs, worth it more for ddnet xd
20:40 <+bridge> [ddnet] <Ryozuki> xd
20:40 <+bridge> [ddnet] <Ryozuki> ye
20:40 <+bridge> [ddnet] <Ryozuki> also this is wortth more for 3d
20:40 <+bridge> [ddnet] <Ryozuki> xd
20:40 <+bridge> [ddnet] <Ryozuki> but it rly gives shitload of fps
20:40 <+bridge> [ddnet] <Tater> does ddnet even run faster at lower resolutions? I assumed it was cpu capped
20:41 <+bridge> [ddnet] <Ryozuki> eh having a gpu can increase ur fps
20:41 <+bridge> [ddnet] <Ryozuki> if u come from not having one
20:41 <+bridge> [ddnet] <Ryozuki> xd
20:41 <+bridge> [ddnet] <Ryozuki> afterwards it doesnt improve much
20:41 <+bridge> [ddnet] <Ryozuki> i think
20:41 <+bridge> [ddnet] <Tater> that makes sense
20:41 <+bridge> [ddnet] <Ryozuki> maybe if we used rust
20:41 <+bridge> [ddnet] <Ryozuki> we could
20:42 <+bridge> [ddnet] <Ryozuki> safely paralelize the entities and the gameworld
20:42 <+bridge> [ddnet] <Ryozuki> but we live in c++ land
20:42 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
20:42 <+bridge> [ddnet] <Ryozuki> and that would be more complicated
20:43 <+bridge> [ddnet] <Ryozuki> theorically the gameworld, which manages the entities
20:43 <+bridge> [ddnet] <Ryozuki> is like a ECS
20:43 <+bridge> [ddnet] <Ryozuki> and usually ECS are highly paralel
20:43 <+bridge> [ddnet] <Ryozuki> but not here
20:43 <+bridge> [ddnet] <Ryozuki> :feelsbadman:
20:43 <+bridge> [ddnet] <Jupstar> as long it doesnt change pyshics, pls add
20:44 <+bridge> [ddnet] <Ryozuki> i wont do it in c++
20:44 <+bridge> [ddnet] <Ryozuki> i would shoot my foot
20:44 <+bridge> [ddnet] <Jupstar> yes do it in rust
20:44 <+bridge> [ddnet] <Ryozuki> xd
20:44 <+bridge> [ddnet] <Jupstar> i take all perf hehehe
20:44 <+bridge> [ddnet] <Ryozuki> i think teeworlds would fit rly well using bevy
20:44 <+bridge> [ddnet] <Jupstar> rust has something like a packet manager right?
20:44 <+bridge> [ddnet] <Ryozuki> @Not Keks https://bevyengine.org/learn/book/getting-started/ecs/
20:44 <+bridge> [ddnet] <Jupstar> so its ez to use libs
20:44 <+bridge> [ddnet] <Ryozuki> look how the ECS in bevy works
20:44 <+bridge> [ddnet] <Ryozuki> its rly gud
20:45 <+bridge> [ddnet] <Ryozuki> yes cargo
20:45 <+bridge> [ddnet] <Jupstar> yes thats the best actually
20:45 <+bridge> [ddnet] <Jupstar> no excuses anymore to just use libs xd
20:45 <+bridge> [ddnet] <Ryozuki> ye its only c land where deps suck to add
20:45 <+bridge> [ddnet] <Jupstar> well its a windows problem actually
20:45 <+bridge> [ddnet] <Jupstar> if we only target linux its fine
20:45 <+bridge> [ddnet] <Jupstar> imo
20:46 <+bridge> [ddnet] <Jupstar> ok and android, and maybe other os
20:46 <+bridge> [ddnet] <Jupstar> lets say it would work on linux xd
20:46 <+bridge> [ddnet] <Ryozuki> xd
20:46 <+bridge> [ddnet] <Jupstar> but crossplatform packet manager built in is awesome
20:46 <+bridge> [ddnet] <Ryozuki> cargo is awesome ngl
20:47 <+bridge> [ddnet] <Ryozuki> it makes life easier
20:47 <+bridge> [ddnet] <Jupstar> start with server
20:47 <+bridge> [ddnet] <Ryozuki> its too much work
20:47 <+bridge> [ddnet] <Ryozuki> xd
20:47 <+bridge> [ddnet] <Jupstar> bcs i also want to transfer fng to ddnet code
20:47 <+bridge> [ddnet] <Jupstar> just do it xd
20:47 <+bridge> [ddnet] <Ryozuki> xd
20:47 <+bridge> [ddnet] <Jupstar> dont think about it
22:32 <+bridge> [ddnet] <Ravie> can someone tell me how to use the `insert` function from array.h?
22:33 <+bridge> [ddnet] <Ryozuki> r u sure u want to use insert? not add?
22:34 <+bridge> [ddnet] <Ryozuki> insert is for a specific index iirc
22:34 <+bridge> [ddnet] <c0d3d3v> Arguments:
22:34 <+bridge> [ddnet] <c0d3d3v>             item - Item to insert.
22:34 <+bridge> [ddnet] <c0d3d3v>             r - Range where to insert the item
22:34 <+bridge> [ddnet] <c0d3d3v> r is of type range, you can create it like: 
22:34 <+bridge> [ddnet] <c0d3d3v> plain_range(T *begin, T *end)
22:34 <+bridge> [ddnet] <Ravie> add is just at the end, I want it in a specific spot
22:35 <+bridge> [ddnet] <Ryozuki> idk why we dont just use std::array
22:35 <+bridge> [ddnet] <Ryozuki> xd
22:35 <+bridge> [ddnet] <Ravie> basically I'm making duplicating of map layers & groups and it'd be nice to insert next to the original layer and not at the end
22:35 <+bridge> [ddnet] <Chairn> wasn't there a story about pulling stdlib dependency?
22:36 <+bridge> [ddnet] <Matodor> stop dreaming about parallelism and ECS
22:36 <+bridge> [ddnet] <Matodor> make accounts system, skin store and buy anti-DDoS hosting)
22:36 <+bridge> [ddnet] <Matodor> ðŸ¥ºðŸ¥ºðŸ¥º
22:38 <+bridge> [ddnet] <Ryozuki> idk whats more a dream
22:38 <+bridge> [ddnet] <Ryozuki> what i said or urs
22:38 <+bridge> [ddnet] <Ryozuki> xd
22:38 <+bridge> [ddnet] <c0d3d3v> lol I do not even see a reason why r is a range and not a index xD it is used like a index. only the beginning value is changed, so at r.front() is a new value inserted, all other are moved one step
22:38 <+bridge> [ddnet] <Matodor> and server side interaction with user interface, for custom mods ðŸ¥ºðŸ¥ºðŸ¥º
22:38 <+bridge> [ddnet] <Learath2> Ok, let's split the tasks, we make account system, you buy the anti-ddos hosting
22:39 <+bridge> [ddnet] <Matodor> I buy skins in the store - you buy anti-ddos hosting :bluekitty:
22:39 <+bridge> [ddnet] <chillerdragon> @pinkrat
22:39 <+bridge> [ddnet] <Learath2> Since we obviously never tried any ddos protection, we most certainly didn't try all the accesible ones on the market. Maybe with your sage knowledge you can lead us to a better future
22:40 <+bridge> [ddnet] <chillerdragon> Hahaha learath being personally offended and emotional again \:D
22:40 <+bridge> [ddnet] <Learath2> Noo not at all
22:40 <+bridge> [ddnet] <chillerdragon> Nono
22:41 <+bridge> [ddnet] <chillerdragon> You are so toxic Iâ€™m literally laughing out loud
22:41 <+bridge> [ddnet] <Learath2> I as a completely mentally stable human being would never be toxic, I'm kind and nurturing
22:41 <+bridge> [ddnet] <Ryozuki> well that guy is just aasking features like they are free candy
22:41 <+bridge> [ddnet] <Ryozuki> thats toxic
22:41 <+bridge> [ddnet] <chillerdragon> Ikr
22:42 <+bridge> [ddnet] <chillerdragon> But poor learath letâ€™s it get the best of him
22:42 <+bridge> [ddnet] <Ravie> T should be the type of what I'm trying to insert? doesn't look like I can do it with `CLayer*`
22:42 <+bridge> [ddnet] <c0d3d3v> no int
22:42 <+bridge> [ddnet] <c0d3d3v> xD
22:42 <+bridge> [ddnet] <c0d3d3v> I think
22:42 <+bridge> [ddnet] <c0d3d3v> but just without T
22:43 <+bridge> [ddnet] <c0d3d3v> ah I have no idea xD
22:43 <+bridge> [ddnet] <chillerdragon> No offense learath bae I love you! You know that right?
22:44 <+bridge> [ddnet] <Learath2> You want a one item range, the item to insert before. Something like `plain_range(&arr[idx], &arr[idx+1])`
22:44 <+bridge> [ddnet] <c0d3d3v> xD that makes sense
22:45 <+bridge> [ddnet] <c0d3d3v> but I think it should be range not plain_range
22:45 <+bridge> [ddnet] <Chairn> more like passive aggressive
22:45 <+bridge> [ddnet] <Learath2> Could be, I always forget the range classes available
22:46 <+bridge> [ddnet] <Learath2> `typeof(arr)::range` actually
22:47 <+bridge> [ddnet] <Learath2> `array<CLayer *>::range` if you don't like typeof
22:49 <+bridge> [ddnet] <c0d3d3v> Ah I understand now.
22:49 <+bridge> [ddnet] <c0d3d3v> if your array is called "layers" you could do
22:49 <+bridge> [ddnet] <c0d3d3v> 
22:49 <+bridge> [ddnet] <c0d3d3v> range all_layers = layers.all();
22:49 <+bridge> [ddnet] <c0d3d3v> 
22:49 <+bridge> [ddnet] <c0d3d3v> layers.insert(newitem, all_layers.slice(index_to_insert, index_to_insert + 1));
22:50 <+bridge> [ddnet] <c0d3d3v> who the fuck thought this is a good idea, and why is it not used anywhere xD
22:51 <+bridge> [ddnet] <Learath2> I guess a slice is better
22:52 <+bridge> [ddnet] <Learath2> It was an early attempt at creating something like the c++20 ranges, way back in the day
22:54 <+bridge> [ddnet] <c0d3d3v> maybe but why is there then a remove_index(int index) function xD he could also made the function insert_index(const T &item, int index) instead, same effect, less strange
22:56 <+bridge> [ddnet] <Learath2> These early container types weren't exactly very thought out. I bet he found the range interface equally annoying when removing something one day and just added a remove_index
23:00 <+bridge> [ddnet] <c0d3d3v> ah it is used only once, that is for sorted_array in the add() function
23:01 <+bridge> [ddnet] <c0d3d3v> ah it is used only once, that is for sorted_array.h in the add() function
23:03 <+bridge> [ddnet] <Ravie> yep the lack of examples is what makes it so hard to figure out
