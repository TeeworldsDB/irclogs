00:20 < bridge> <jxsl13> I think east is not active in teeworlds anymore
00:22 < bridge> <Ewan> da east
01:24 < bridge> <heinrich5991> just drop all the server info that doesn't conform to your schema
01:24 < bridge> <sans._.> kind of what i've done
01:24 < bridge> <sans._.> yea
01:25 < bridge> <sans._.> it's still there, but it's untyped, and i made a typeguard so you can go back to the usual info you get from official ddnet server
01:25 < bridge> <sans._.> it's still there, but it's untyped, and i made a typeguard so you can go back to the usual info you get from official ddnet servers
01:25 < bridge> <sans._.> it's still there, but it's untyped, and i made a typeguard so you can go back to the usual typed info you get from official ddnet servers
01:27 < bridge> <heinrich5991> https://github.com/Sans3108/DDNet/blob/4f307140fd52373d260858ccba2701078c656ee1/src/Master.ts#L95-L104
01:28 < bridge> <heinrich5991> ```js
01:28 < bridge> <heinrich5991>         community: z
01:28 < bridge> <heinrich5991>           .object({
01:28 < bridge> <heinrich5991>             id: z.string(),
01:28 < bridge> <heinrich5991>             icon: z.string(),
01:28 < bridge> <heinrich5991>             admin: z.array(z.string()),
01:28 < bridge> <heinrich5991>             public_key: z.string(),
01:28 < bridge> <heinrich5991>             signature: z.string()
01:28 < bridge> <heinrich5991>           })
01:28 < bridge> <heinrich5991>           .optional(),
01:28 < bridge> <heinrich5991>         altameda_net: z.boolean().optional()
01:28 < bridge> <heinrich5991> ```
01:28 < bridge> <heinrich5991> that's not from official ddnet servers
01:29 < bridge> <sans._.> probably, the whole thing was made with hopes and prayers, i dont understand the first thing about what is returned by what kind of server so i just used quicktype to try to create some sort of schema
01:30 < bridge> <sans._.> from whatever data the master server returned when i ran the script to make it
01:31 < bridge> <sans._.> probably, the whole Master.ts thing was made with hopes and prayers, i dont understand the first thing about what is returned by what kind of server so i just used quicktype to try to create some sort of schema
01:33 < bridge> <sans._.> I'd love to understand it all, but it's kinda hard when I only know 1 lang and some common and basic programming concepts
02:09 < bridge> <chillerdragon> No insults for being a botter?
02:09 < bridge> <chillerdragon> Indonesia
02:15 < bridge> <sans._.> on chn not really, but on ger and rus server I get accused of using "krx" or something like that whenever i start showing off
04:22 < ws-client> <ChillerDragon> @milkeeycat apparently not the same ._.
04:23 < ws-client> <ChillerDragon> ``mov rax, [SIZEOF_SOCKADDR]`` segfaults while ``lea rax, SIZEOF_SOCKADDR`` does not <:tee_thinking:478629518358085653>
04:54 < ws-client> <ChillerDragon> eh so lea is get reference and brackets is dereference. So its basically opposite not same xd. pointers in C are easier -.- here some good SO https://stackoverflow.com/a/25824111
06:45 < bridge> <maks056819> You have been banned for 10 minutes vpn , I don't use VPN what should I do?
06:59 < bridge> <louis> make an admin mail ticket
07:00 < bridge> <louis> i guess
07:00 < bridge> <louis> #‚úâ-create-a-ticket
07:03 < bridge> <totar> howd you fix this?
07:05 < bridge> <milkeeycat> chillerdragon: did u fix?
07:06 < bridge> <milkeeycat> Coz i did üòè
07:11 < bridge> <milkeeycat> If i understood correctly it was because u had `db` here https://github.com/ChillerDragon/teeworlds-asmr/blob/2050b2bb80e70de58ad7a86e62db399345b564e6/src/teeworlds_asmr.asm#L98 but recvfrom takes pointer to an int, so it was overwriting `ADDR_LOCALHOST`
07:37 < ws-client> <ChillerDragon> No i did not fix it o.O
07:37 < ws-client> <ChillerDragon> poor ppl being banned for vpn falsely what changed? are more servers vpn protected now or is the blacklist stricter?
07:38 < ws-client> <ChillerDragon> @milkeeycat so whats the fix?
07:38 < ws-client> <ChillerDragon> ah "db" is only one byte and the int is 4 bytes?
07:38 < bridge> <milkeeycat> Ye, just slap `dw` there
07:38 < ws-client> <ChillerDragon> oh lol i tried `SIZEOF_SOCKADDR db 128, 0, 0, 0`
07:38 < ws-client> <ChillerDragon> xd
07:41 < ws-client> <ChillerDragon> how long did it take you @milkeeycat ?
07:41 < bridge> <milkeeycat> A few hours :pepeW:
07:41 < ws-client> <ChillerDragon> amazing thanks for this
07:41 < bridge> <milkeeycat> Until I accidentally commented out last 2 args to recvfrom xd
07:41 < bridge> <milkeeycat> And it worked
07:42 < ws-client> <ChillerDragon> i also spend a few hours on a similar path xd but not sure if i would have actually found it
07:42 < ws-client> <ChillerDragon> since i half ruled out that idea since for me the 4 byte allocation did not work
07:42 < ws-client> <ChillerDragon> <:poggers2:1008007455936094328> your fix works perfectly for me! thank you so much @milkeeycat 
07:43 < ws-client> <ChillerDragon> so does my attempt btw -.- xd ``SIZEOF_SOCKADDR db 128, 0, 0, 0``
07:43 < ws-client> <ChillerDragon> but when i tried it i must have had introduced a new bug at the time xd
07:44 < bridge> <milkeeycat> Why is it even 128?
07:44 < bridge> <milkeeycat> Me no understand
07:44 < ws-client> <ChillerDragon> ye same
07:44 < ws-client> <ChillerDragon> did you see the comments?
07:44 < ws-client> <ChillerDragon> should be 16 thats what it is on my machine
07:44 < ws-client> <ChillerDragon> tw uses 128 tho
07:45 < ws-client> <ChillerDragon> and i found i think a even higher number in the source code of the ruby programming language 
07:45 < ws-client> <ChillerDragon> better safe than sorry
07:45 < ws-client> <ChillerDragon> maybe there is some space for ipv6 and nsa backdoor
07:45 < bridge> <milkeeycat> Ok, if it works then it's fine for me xd
07:46 < ws-client> <ChillerDragon> if recvfrom wants to write 128 bytes it can idk
07:46 < ws-client> <ChillerDragon> i got enough ram
07:46 < ws-client> <ChillerDragon> 16 probably works too xd
07:46 < ws-client> <ChillerDragon> but maybe its not as portable
07:46 < bridge> <milkeeycat> GitHub influences earn a lot
07:47 < ws-client> <ChillerDragon> ofc every 10 commits i make has a placement
07:47 < ws-client> <ChillerDragon> i can buy all the ram
07:48 < ws-client> <ChillerDragon> ``git commit -m "Raid Shadow..``
07:51 < ws-client> <ChillerDragon> I wonder if i will ever be able to spawn a tee using assembly
07:52 < bridge> <milkeeycat> you got it xd
07:52 < bridge> <milkeeycat> just check sized u pass 10 times üòÑ
07:52 < ws-client> <ChillerDragon> It feels like the hard part is done xd
07:52 < bridge> <milkeeycat> just check sizes u pass 10 times üòÑ
07:54 < bridge> <milkeeycat> chilllerdragon: ill try to spawn a tee in my programming language xd
07:56 < ws-client> <ChillerDragon> that would be epic
08:46 < bridge> <learath2> What?
08:46 < bridge> <milkeeycat> to connect it to ddnet server?
09:22 < ws-client> <ChillerDragon> eh @milkeeycat `db` is 2 bytes i changed it to `dd` for 4 bytes to match a C int
09:24 < ws-client> <ChillerDragon> @learath2 ye as milkeey said join a server. What ever the definition of "join" or "connect" is idc. It gets interesting and nice to show off as soon as there is a tee visible in the world.
09:25 < bridge> <milkeeycat> chillerdragon: can you send source where you found that `db` is 2 bytes?
09:25 < ws-client> <ChillerDragon> i just realized while watching tsoding vid
09:26 < ws-client> <ChillerDragon> he is walking man page
09:26 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1721978737.png
09:26 < ws-client> <ChillerDragon> i double checked here https://stackoverflow.com/a/10168788
09:26 < ws-client> <ChillerDragon> > DD - Define double word. Generally 4 bytes on a typical x86 32-bit system
09:26 < ws-client> <ChillerDragon> > DW - Define Word. Generally 2 bytes on a typical x86 32-bit system
09:26 < ws-client> <ChillerDragon> im on 64 bit idk if its double there
09:26 < ws-client> <ChillerDragon> maybe dw was already enough
09:32 < ws-client> <ChillerDragon> @milkeeycat ah i did typo xd i mean `dw` is 2 bytes. Thats the thing you suggested right? But we need 4 bytes
09:32 < bridge> <milkeeycat> ok, i have skill issues
09:32 < bridge> <milkeeycat> my bad xd
09:33 < bridge> <milkeeycat> but hey, it worked xdd
09:33 < ws-client> <ChillerDragon> i didnt check the memory
09:33 < ws-client> <ChillerDragon> i assume the 2 less bytes overwritten were good enough xd
09:33 < ws-client> <ChillerDragon> nobody needs the first two bytes of the address struct xd
09:34 < ws-client> <ChillerDragon> ehm thats `AF_INET` should have broke it if you ask me
09:34 < ws-client> <ChillerDragon> unless the thing it overwrote with was also `AF_INET` xd
09:39 < bridge> <Jupstar ‚ú™> no i added virus
09:42 < bridge> <Jupstar ‚ú™> i simply wanted to make clear, that if you use this app, you know what you are doing. for example you cannot install the release version when it's done, bcs you have to manually uninstall the old version.
09:42 < bridge> <Jupstar ‚ú™> this is only a test version for ppl that want to try it out, it should not be spread as the real version
09:49 < bridge> <zhn> #7863
09:49 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/7863
09:51 < bridge> <zhn> ppl don't care obviously :troll:
09:51 < bridge> <ryozuki> i need a nice idea for a simple compiled language
09:51 < bridge> <zhn> make lang for teeui
09:51 < bridge> <zhn> as lerato suggested
09:52 < bridge> <ryozuki> that probs wouldnt be compiled with llvm
09:52 < bridge> <ryozuki> what does it need
09:52 < bridge> <zhn> llvm L
09:52 < bridge> <ryozuki> ?
09:52 < bridge> <zhn> it should be compiled to some byte code that we could translate on both client and server side without any headache
09:55 < bridge> <ryozuki> ok thats ez
09:55 < bridge> <ryozuki> so what are the things it needs
09:55 < bridge> <ryozuki> also if u ask me u know it will be in rust
09:56 < bridge> <ryozuki> some instructions like draw rect at x coords, draw a button, event etc?
09:56 < bridge> <zhn> simple declarative language that looka like literally ui code in tw
09:57 < bridge> <zhn> hsplit vsplit drawquads etc
09:57 < bridge> <ryozuki> i havent dabbled.much in "UI languages"
09:57 < bridge> <zhn> you should take a look in client ui code then :justatest:
09:57 < bridge> <ryozuki> give me a syntax example
09:57 < bridge> <zhn> https://discord.com/channels/252358080522747904/293493549758939136/1258454503196200991
09:57 < bridge> <ryozuki> i did, i documented the hsplit, etc methods
09:58 < bridge> <jxsl13> aaand 1000 people installed it
09:58 < bridge> <ryozuki> i see
09:59 < bridge> <ryozuki> ok u gave me a nice side project
09:59 < bridge> <ryozuki> ill look into it
10:00 < bridge> <zhn> thanks to lerato
10:00 < bridge> <zhn> big brain
10:00 < bridge> <zhn> bigd
10:02 < bridge> <ryozuki> nah thats just a example
10:02 < bridge> <ryozuki> im biased and hate lua Style langs
10:02 < bridge> <ryozuki> ill change the syntax
10:03 < bridge> <ryozuki> but since it will be bytecode there can be diferent lang syntax that compile to the samw bytecode
10:03 < bridge> <ryozuki> ill design the bytecode too
10:11 < bridge> <zaerin__> thanks üëç
10:21 < ws-client> <ChillerDragon> lua pog
10:21 < bridge> <Jupstar ‚ú™> wasm epyc
10:21 < bridge> <archimede67> @timakro Is it possible to update trashmap server version? It is still on `16.2.2`
10:23 < bridge> <Jupstar ‚ú™> chillerdragon: do you plan to run a ddnet server for longer than 292 years at once, without restarting?
10:34 < bridge> <learath2> Careful. I don‚Äôt think heinrich liked my idea very much üòÑ
10:35 < bridge> <learath2> Also I love the proportional space partitioning approach to UI. But idk if people like designing UIs like that. Perhaps you should think about whether you can work in some absolute sizing/positioning too
10:43 < bridge> <Jupstar ‚ú™> let's face the truth, it's time for electron
10:45 < bridge> <learath2> <a:FrierenDies:1198335807686193182>
10:45 < bridge> <Jupstar ‚ú™> yep
10:46 < bridge> <Jupstar ‚ú™> ```asm
10:46 < bridge> <Jupstar ‚ú™> lea rath, 2
10:46 < bridge> <Jupstar ‚ú™> ```
10:47 < bridge> <louis> ah is this the custom mod ui topic
10:48 < bridge> <learath2> Does anyone know whether there is a shorter sequence that achieves this?
10:48 < bridge> <learath2> ```sh
10:48 < bridge> <learath2> git checkout -b mybranch
10:48 < bridge> <learath2> git commit
10:48 < bridge> <learath2> git checkout -b tmp origin/main
10:48 < bridge> <learath2> git cherry-pick mybranch
10:48 < bridge> <learath2> git branch -D mybranch
10:48 < bridge> <learath2> git branch -M tmp mybranch
10:48 < bridge> <learath2> ```
10:49 < bridge> <learath2> The issue is that the original commits got rebased so I can't rebase mybranch directly, it won't just figure out that only 1 commit really happened
10:49 < bridge> <Jupstar ‚ú™> git stash or what
10:50 < bridge> <Jupstar ‚ú™> whenever i have annoying open stuff
10:50 < bridge> <Jupstar ‚ú™> git stash
10:50 < bridge> <Jupstar ‚ú™> 
10:50 < bridge> <Jupstar ‚ú™> do other stuff
10:50 < bridge> <Jupstar ‚ú™> 
10:50 < bridge> <Jupstar ‚ú™> git stash apply
10:50 < bridge> <Jupstar ‚ú™> but maybe i read your thing wrong xd
10:53 < bridge> <learath2> I have branch A with ten new commits on top of main.
10:53 < bridge> <learath2> I have branch B with two new commits on top of A.
10:53 < bridge> <learath2> A gets rebase merged into main.
10:53 < bridge> <learath2> Now I need to rebase B onto the new main.
10:53 < bridge> <learath2> However git is too dumb to figure out that the commits in main are from A, since they got rebased.
10:53 < bridge> <learath2> 
10:53 < bridge> <learath2> So I have to create a temporary branch from main, cherry B~ and B on top, then rename this new tmp branch to B
10:54 < bridge> <learath2> btw, I started stashing less since I found out about `git worktree` it's quite nice. I have some branches permanently checed out in their own folders
10:55 < bridge> <Jupstar ‚ú™> mh that surprises me then.. i can simply fetch the new upstream and rebase
10:56 < bridge> <Jupstar ‚ú™> i never had conflicts even if the commits did not have the same hash
10:56 < bridge> <learath2> For ddnet we don't do rebase merges, that makes it very easy
10:56 < bridge> <learath2> For this repo we use at work I have no idea wtf is going on but the double rebase that happens confuses git very much
10:58 < bridge> <learath2> fwiw B~ and B cleanly apply on top of the new main, but git rebase just tries to apply all 12 commits, which keeps giving conflicts because you are trying to apply a diff that has already been applied
11:02 < bridge> <sedonya> gm
11:04 < bridge> <Jupstar ‚ú™> game master
11:05 < bridge> <learath2> gigamind
11:06 < bridge> <Jupstar ‚ú™> i secound of google revealed:
11:06 < bridge> <Jupstar ‚ú™> https://stackoverflow.com/a/59661816
11:06 < bridge> <Jupstar ‚ú™> i second of google revealed:
11:06 < bridge> <Jupstar ‚ú™> https://stackoverflow.com/a/59661816
11:08 < bridge> <learath2> Aha, `--onto` that's what I'm looking for
11:08 < bridge> <learath2> And the rebase manual has very good examples too, I should have just RTFM
11:10 < bridge> <Jupstar ‚ú™> nais, getting one step closer
11:10 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1266321654653648977/image.png?ex=66a4b971&is=66a367f1&hm=2f27a745bc34d6e3440fe4f4e929aa6c2b2e1f5eda72d70bbc19cdc3eb38792c&
11:14 < bridge> <learath2> I think onto isn't enough as one of the rebase changes makes the commit too different for git to recognize
11:17 < bridge> <Jupstar ‚ú™> :c, do i have to ask chatgpt for you? üò¨
11:18 < bridge> <learath2> Well it did help, I just add an `-i` along with the onto, then I drop the commit I think is duplicated
11:18 < bridge> <learath2> It's much easier than marking all commits drop than marking just a handful that are too different
11:18 < bridge> <Jupstar ‚ú™> nice
11:18 < bridge> <Jupstar ‚ú™> gpt used a temp branch indeed xd
11:19 < bridge> <Jupstar ‚ú™> otherwise it uses -i on the rebase directly
11:23 < bridge> <louis> i fw that top font heavy
11:46 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1266330754548240497/image.png?ex=66a4c1eb&is=66a3706b&hm=d389b8b95bf37ef95d21dc21fe722c4a558c5732a7b6c8973b29b38b408fc749&
11:46 < bridge> <ryozuki> i love debug info on my own lang
11:49 < bridge> <milkeeycat> how much of that llvm provides?
11:54 < bridge> <heinrich5991> how about simply deleting the duplicate commits in the `git rebase -i`?
11:55 < bridge> <learath2> Without the onto I was getting too many
12:15 < bridge> <chillerdragon> No I am planning to die in the next 50 years already so 292 sounds long enough to me.
12:16 < bridge> <jxsl13> planned obsolescence
12:16 < bridge> <jxsl13> classic
12:31 < bridge> <learath2> I'm having some weird connection issues here, periodically it'll just randomly load websites extremely slowly, almost as if it's powersaving misbehaving or sth
12:32 < bridge> <chillerdragon> Yes me too
12:33 < bridge> <chillerdragon> Average island internet for me hehe
12:35 < bridge> <learath2> Turned off power management for a bit, let me see if that helps
12:46 < bridge> <chillerdragon> @learath2: have you tried using windows? I was told it just works
12:47 < bridge> <learath2> it just works but is shit
12:47 < bridge> <chillerdragon> xd
12:52 < bridge> <ryozuki> xd
12:52 < bridge> <ryozuki> man linkers have so many configs
12:52 < bridge> <ryozuki> "driving" a linker in a compiler is some plumber work shit
12:54 < bridge> <ryozuki> https://github.com/edg-l/linkit/blob/master/src/lib.rs
13:03 < bridge> <Jupstar ‚ú™> @louis.place now you just have to convince an admin to update
13:03 < bridge> <Jupstar ‚ú™> and then test if it works xd
13:03 < bridge> <Jupstar ‚ú™> i tested dilate locally, but too lazy to setup the whole bot again
13:06 < bridge> <chillerdragon> When continuous discord bot deployment on new git commits
13:08 < bridge> <chillerdragon> It‚Äôs as easy as writing your kubernetes operator in go and 90 yaml files. Or use a bash oneliner `while :; do git pull && sleep 1m; done`
13:09 < bridge> <Jupstar ‚ú™> yeah, pls write a script chiller
13:09 < bridge> <Jupstar ‚ú™> create some bash scripts for the eternity
13:10 < bridge> <chillerdragon> Already did
13:10 < bridge> <chillerdragon> ddnet++ infrastructure is in bash
13:10 < bridge> <chillerdragon> It boils down to the oneliner I sent and it just works
13:10 < bridge> <Jupstar ‚ú™> xddd
13:10 < bridge> <chillerdragon> Ok tbh it‚Äôs full of bugs and like 5k lines
13:11 < bridge> <chillerdragon> Sadly ddnet infrastructure is closed source
13:12 < bridge> <Jupstar ‚ú™> ddnet infrastructure is old af anyway
13:12 < bridge> <Jupstar ‚ú™> better dont use it
13:12 < bridge> <Jupstar ‚ú™> write a new clean one
13:12 < bridge> <chillerdragon> No it‚Äôs nice
13:12 < bridge> <chillerdragon> Better than kog
13:12 < bridge> <Jupstar ‚ú™> lmao
13:12 < bridge> <Jupstar ‚ú™> maybe less often down for maintance
13:13 < bridge> <chillerdragon> k8 ass
13:13 < bridge> <Jupstar ‚ú™> but i bet avo used some epyc electron proofed supervised ultra epyc containers
13:13 < bridge> <Jupstar ‚ú™> that just magically work
13:13 < bridge> <Jupstar ‚ú™> after you installed 200gb of programms so the containers can be parsed
13:13 < bridge> <chillerdragon> Magic plus lots of work
13:14 < bridge> <chillerdragon> Blazingly fast Gaming through 7 go proxies
13:14 < bridge> <chillerdragon> Gotta have those grafana boards for Kirby game
13:17 < bridge> <thefabirshuaisoserious> [build] mingw32-make[3]:  Waiting for unfinished jobs....
13:17 < bridge> <thefabirshuaisoserious> [build] [ 98%] Building RC object CMakeFiles/game-client.dir/other/manifest/client.rc.obj
13:17 < bridge> <thefabirshuaisoserious> [build] mingw32-make[2]:  [CMakeFiles\Makefile2:499: CMakeFiles/game-client.dir/all] Error 2
13:17 < bridge> <thefabirshuaisoserious> [build] mingw32-make[1]:  [CMakeFiles\Makefile2:506: CMakeFiles/game-client.dir/rule] Error 2
13:17 < bridge> <thefabirshuaisoserious> [build] mingw32-make:  [Makefile:331: game-client] Error 2
13:17 < bridge> <thefabirshuaisoserious> [proc] The command: C:\msys64\ucrt64\bin\cmake.EXE --build c:/Users/QuzzWithDev/Documents/ddnet/build --config Debug --target game-client -j 8 -- exited with code: 2
13:17 < bridge> <thefabirshuaisoserious> [driver] Build completed: 00:02:09.798
13:17 < bridge> <thefabirshuaisoserious> [build] Build finished with exit code 2
13:17 < bridge> <thefabirshuaisoserious> i build ddnet error
13:17 < bridge> <thefabirshuaisoserious> https://cdn.discordapp.com/attachments/293493549758939136/1266353696195743745/image.png?ex=66a4d748&is=66a385c8&hm=eb7b5c3972003b338332808735c3766c3ce38a805cc34f7a66b11e89f0054904&
13:18 < bridge> <learath2> scroll up, the error is probably higher
13:18 < bridge> <thefabirshuaisoserious> https://cdn.discordapp.com/attachments/293493549758939136/1266354073633034301/image.png?ex=66a4d7a2&is=66a38622&hm=af1167288187f0a74d83095518c840fc9d5a57d8251e802ca6f92b1a3dcb5bfb&
13:19 < bridge> <thefabirshuaisoserious> [build] mingw32-make[3]: *** No rule to make target 'debug/libddnet_engine_shared.a', needed by 'DDNet.exe'
13:19 < bridge> <thefabirshuaisoserious> this
13:19 < bridge> <thefabirshuaisoserious> how to fix? i dont know
13:20 < bridge> <thefabirshuaisoserious> how to fix
13:22 < bridge> <thefabirshuaisoserious> how to fix it
13:23 < bridge> <louis> tysm
13:23 < bridge> <louis> @murpi can u update skin bot?
13:24 < bridge> <Jupstar ‚ú™> ` rustup target add x86_64-pc-windows-gnu`
13:24 < bridge> <Jupstar ‚ú™> installed?
13:26 < Tarot> Hi
13:26 < bridge> <thefabirshuaisoserious> no i go to install
13:27 < bridge> <thefabirshuaisoserious> install done try again?
13:27 < bridge> <Jupstar ‚ú™> yes
13:27 < bridge> <thefabirshuaisoserious> Ok
13:27 < bridge> <thefabirshuaisoserious> https://cdn.discordapp.com/attachments/293493549758939136/1266356324237705318/image.png?ex=66a4d9bb&is=66a3883b&hm=e83a112f55493aed0168a42527c445c5737069864e889f8bf5e85879ac3117f0&
13:27 < bridge> <thefabirshuaisoserious> is not work
13:28 < bridge> <Jupstar ‚ú™> maybe remove build dir and try again
13:28 < bridge> <Jupstar ‚ú™> else i dunno,wait for some dev with windows
13:28 < bridge> <Jupstar ‚ú™> i remember you had to manually copy some stuff or smth like that
13:29 < bridge> <thefabirshuaisoserious> i use git clone --recursive https://github.com/ddnet/ddnet
13:29 < bridge> <murpi> @jupeyy_keks Thanks for updating the bot
13:29 < bridge> <murpi> @louis.place done
13:30 < bridge> <louis> ty
13:30 < bridge> <thefabirshuaisoserious> i try this
13:30 < bridge> <louis> @jupeyy_keks heres the big question, now if i go back to the channel and re-upload some skins that werent previously dilated, will the bot rewrite them in the db with the dilated version
13:31 < bridge> <louis> assuming the auto dilate works
13:31 < bridge> <Jupstar ‚ú™> try it out
13:31 < bridge> <Jupstar ‚ú™> do you know a skin that isnt dilated?
13:31 < bridge> <Jupstar ‚ú™> i think the toast once arent
13:31 < bridge> <louis> skeith sent me a bunch of names earlier
13:32 < bridge> <Mr.Gh0s7> Jupstar ty for the ping (i'd had miss it)  :)
13:32 < bridge> <thefabirshuaisoserious> https://cdn.discordapp.com/attachments/293493549758939136/1266357542921961644/image.png?ex=66a4dade&is=66a3895e&hm=5fc9f012a2ef58a346a0aad68f9c12f61e51205f3ffc955c9c5a33fa0096289d&
13:32 < bridge> <thefabirshuaisoserious> does work
13:35 < bridge> <Jupstar ‚ú™> @robyt3 what was the trick again on windows
13:35 < bridge> <heinrich5991> `rustc --version --verbose` please
13:35 < bridge> <milkeeycat> install linux :santatrollet:
13:36 < bridge> <heinrich5991> not helpful
13:36 < bridge> <chillerdragon> It actually is helpful
13:36 < bridge> <Jupstar ‚ú™> it is sad that cross compile to windows from linux is easier tho üòÇ
13:37 < bridge> <chillerdragon> The process is easier on Linux and not everyone knows that Linux exists
13:37 < bridge> <robyt3> I don't know if compiling with mingw+ucrt even works
13:38 < bridge> <robyt3> msys2*
13:38 < bridge> <robyt3> I'd either use MSYS2+MinGW64 or Visual Studio separately
13:38 < bridge> <Jupstar ‚ú™> @thefabirshuaisoserious ^
13:39 < bridge> <Jupstar ‚ú™> try the mingw64 shell
13:40 < bridge> <hamidreza6> Disagree
13:40 < bridge> <robyt3> And set the correct rust toolchain, either `x86_64-pc-windows-gnu` with mingw, or `x86_64-pc-windows-msvc` with Visual Studio
13:40 < bridge> <thefabirshuaisoserious> Wait i try
13:42 < bridge> <heinrich5991> `rustup default x86_64-pc-windows-gnu` or `rustup default x86_64-pc-windows-msvc`, I think
13:42 < bridge> <heinrich5991> to set the toolchain
13:49 < bridge> <thefabirshuaisoserious> https://cdn.discordapp.com/attachments/293493549758939136/1266361633387708457/image.png?ex=66a4dead&is=66a38d2d&hm=fda13b64b9be4430119b969d24525d264ce20f143dfaf024c8efa64fb026c7b9&
13:49 < bridge> <thefabirshuaisoserious> not a package
13:50 < bridge> <jxsl13> this
13:50 < bridge> <thefabirshuaisoserious> https://cdn.discordapp.com/attachments/293493549758939136/1266362096233484363/image.png?ex=66a4df1b&is=66a38d9b&hm=fd29424e7133c43719e51c1a1a8f72d57c87b1b7af67d1ca557c95e0522c6a65&
13:52 < bridge> <heinrich5991> try `rustup default stable-x86_64-pc-windows-gnu`
13:53 < bridge> <learath2> It does. I did it many a time before
13:54 < bridge> <thefabirshuaisoserious> installed
13:57 < bridge> <thefabirshuaisoserious> Can someone tell me what I should do now?
13:58 < bridge> <heinrich5991> can you try the build again?
13:58 < bridge> <hamidreza6> retry I think
13:58 < bridge> <heinrich5991> remove the build directory first though
13:59 < bridge> <thefabirshuaisoserious> i try again
14:02 < bridge> <thefabirshuaisoserious> Work
14:02 < bridge> <thefabirshuaisoserious> Thx
14:02 < bridge> <thefabirshuaisoserious> Thanks to everyone who helped me
14:04 < bridge> <heinrich5991> chillerdragon: I dare say this was easier than installing linux
14:05 < bridge> <chillerdragon> Yes installing Linux is hard
14:05 < bridge> <chillerdragon> But then everything is easier
14:06 < bridge> <chillerdragon> Installing WSL is fool proof tho :p
14:08 < bridge> <chillerdragon> It‚Äôs just not gaming ready
14:08 < bridge> <thefabirshuaisoserious> chose archinstall
14:08 < bridge> <chillerdragon> But I would also say installing windows is hard
14:08 < bridge> <hamidreza6> It's very VERY easier than linux, if I may say :d
14:08 < bridge> <thefabirshuaisoserious> true
14:08 < bridge> <chillerdragon> If you buy a laptop with Linux on it you can compare it to windows
14:08 < bridge> <heinrich5991> it often comes preinstalled
14:09 < bridge> <jxsl13> dunno if troll conversation or should keep arguing.
14:09 < bridge> <chillerdragon> Imo the hardest part is making a bootable stick selecting right drives. Finding the boot menu and so on. From then onwards it‚Äôs just clicking through installers. Choosing a language and so on. On windows 10 you get like a zillion questions. People do rage quit windows installs
14:10 < bridge> <louis> installing linux aint hard, using it is though
14:10 < bridge> <chillerdragon> Disagree
14:10 < bridge> <heinrich5991> let's call it a troll conversation. please don't tell people to "just install linux" when they come with tech support questions
14:10 < bridge> <chillerdragon> What‚Äôs hard about using it @louis.place
14:10 < bridge> <chillerdragon> Or what‚Äôs different than windows even
14:11 < bridge> <heinrich5991> please go to #off-topic for the common flame wars
14:11 < bridge> <jxsl13> nothing, that's why windows is basically the same as windows
14:11 < bridge> <jxsl13> so no need to install it
14:11 < bridge> <chillerdragon> I use emacs BTW
14:11 < bridge> <jxsl13> cuz everything is the same
14:11 < bridge> <jxsl13> as linux
14:11 < bridge> <jxsl13> I meant to say
14:11 < bridge> <jxsl13> here
14:12 < bridge> <louis> you just notice a lot of small thingies that annoy you that aren't as difficult to fix in more 'consumer' os ChillerDragon
14:12 < bridge> <louis> i guess that falls into installing linux though, not exactly using it
14:12 < bridge> <heinrich5991> ‚Üí #off-topic
14:12 < bridge> <louis> day to day use is pretty similar for most things
14:13 < bridge> <melo∆û> i switched to msys2 and mingw64 toolchain
14:13 < bridge> <melo∆û> takes like 5 minutes
14:14 < bridge> <milkeeycat> i didn't reply to the guy, i wrote to jupppey :p
14:22 < bridge> <learath2> There is one weird thing about rust and msys2, you (technically, in practicality it's usually fine) should be using the msys2 linker in ucrt
14:23 < bridge> <ryozuki> why doesnt whathever default the guy had not work?
14:25 < bridge> <heinrich5991> -msvc toolchain vs -gnu toolchain
14:26 < bridge> <heinrich5991> they don't interoperate
14:26 < bridge> <heinrich5991> we should detect this in the CMakeLists.txt
14:26 < bridge> <heinrich5991> https://github.com/ddnet/ddnet/issues/7660
14:37 < bridge> <Jupstar ‚ú™> what is the sense of using prefixes and postfixes for our table names..
14:37 < bridge> <Jupstar ‚ú™> 
14:37 < bridge> <Jupstar ‚ú™> e.g.
14:37 < bridge> <Jupstar ‚ú™> https://github.com/ddnet/ddnet/blob/08f955bff0af6f3e10f09ad233444c7f1cb380bc/src/engine/server/databases/connection.cpp#L11
14:38 < bridge> <heinrich5991> prefix: there used to be a time where hosters charged per DB used ^^
14:38 < bridge> <Jupstar ‚ú™> i see that is usese "backup"
14:38 < bridge> <heinrich5991> postfix: probably fixing some problem of duplicate/not recorded ranks
14:39 < bridge> <Jupstar ‚ú™> ok, but yeah i think i'll port it by moving that part to per database if it's really needed
14:39 < bridge> <heinrich5991> which part?
14:39 < bridge> <Jupstar ‚ú™> the pre and postfixes
14:39 < bridge> <Jupstar ‚ú™> 
14:39 < bridge> <Jupstar ‚ú™> can simply be a different database if somebody needs that
14:40 < bridge> <heinrich5991> I think the postfix thing is used in the code
14:40 < bridge> <Jupstar ‚ú™> it makes all queries much harder to read
14:40 < bridge> <Jupstar ‚ú™> then i simply dont port that code xd
14:40 < bridge> <Jupstar ‚ú™> if it has any sense it can simply get a new db connection
14:41 < bridge> <heinrich5991> I'd guess it's used to solve a problem. this means you'll have to understand the problem and solve it yourself again
14:41 < bridge> <heinrich5991> if you don't do that, you'll create a bug
14:42 < bridge> <Jupstar ‚ú™> that's a bold claim
14:42 < bridge> <Jupstar ‚ú™> 
14:42 < bridge> <Jupstar ‚ú™> in the code it is used for a backup sqlite apparently
14:42 < bridge> <heinrich5991> https://github.com/ddnet/ddnet/pull/5948
14:42 < bridge> <heinrich5991> this looks relevant
14:44 < bridge> <Jupstar ‚ú™> and still, it can simply use a backup database
14:44 < bridge> <Jupstar ‚ú™> there is no reason to bloat all queries
14:44 < bridge> <heinrich5991> I just want to make sure you're not adding bugs by dropping "unused code"
14:44 < bridge> <Jupstar ‚ú™> i never said unused or anything else
14:45 < bridge> <Jupstar ‚ú™> i asked for the reason we do it with post & prefixes in the queries
14:45 < bridge> <Jupstar ‚ú™> you said there was a time where dbs were expensive
14:45 < bridge> <Jupstar ‚ú™> i accept that as argument
14:45 < bridge> <Jupstar ‚ú™> i just dont like it
14:45 < bridge> <Jupstar ‚ú™> end
14:45 < bridge> <heinrich5991> hm. I stated two different things, one for prefixes and one for postfixes
14:46 < bridge> <heinrich5991> you addressed the prefix, I agree that it can probably be dropped
14:46 < bridge> <heinrich5991> the postfix though is used to make ranks more durable
14:46 < bridge> <heinrich5991> and I wanted to say that if you remove the postfixes, you'll need to think about how to maintain that property
14:47 < bridge> <Jupstar ‚ú™> it's used in sqlite.. can aswell be a second db
14:47 < bridge> <Jupstar ‚ú™> 
14:47 < bridge> <Jupstar ‚ú™> maybe a second db is even safer than using the same db with a second table
14:47 < bridge> <heinrich5991> I have no problem with you replacing it with something equally good
14:47 < bridge> <Jupstar ‚ú™> nice
14:48 < bridge> <Jupstar ‚ú™> i have no idea why queries in our version fail anyway
14:48 < bridge> <Jupstar ‚ú™> do we have examples?
14:48 < bridge> <Jupstar ‚ú™> i mean in mysql ofc if the connection drops
14:48 < bridge> <Jupstar ‚ú™> but other than that
14:49 < Tarot> Hey , i have an issue with compiling ddnet source on termux aarch64 linux (android) ~/DDNet-18.4/build $ make game-server                                                           [ 12%] Built target game-shared                                                                 [ 12%] Built target json                                                                        [ 15%] Built target rust-bridge-shared                                      
14:49 < bridge> <Jupstar ‚ú™> can you post the error
14:50 < Tarot> Ok w8
14:51 < Tarot> https://pastebin.com/0RUp3cHb
14:51 < bridge> <melo∆û> cc: ```
14:52 < bridge> <melo∆û> error: no such command: `ndk`                                                                                                                                                                           Did you mean `add`?                                                                                                                                                                             View all installed commands with `cargo --list`              
14:52 < bridge> <melo∆û> ```
14:52 < bridge> <Jupstar ‚ú™> did u follow the android script readme?
14:53 < Tarot> Cant install `cargo-ndk` on android
14:53 < bridge> <Jupstar ‚ú™> then you have to report that to rust i guess?
14:53 < Tarot> I just want ddnet server
14:53 < bridge> <melo∆û> it's a needed dependency, you can't build rust applications without it, why can't you install it?
14:54 < bridge> <melo∆û> it's a needed dependency, you can't build the applications without it, why can't you install it?
14:57 < bridge> <heinrich5991> wait. are you compiling on android? or only for android?
14:58 < Tarot> https://pastebin.com/YMgneN0Z
15:00 < bridge> <chillerdragon> He is on android I assume since he mentioned termux
15:00 < bridge> <melo∆û> cc¬≤: ```
15:00 < bridge> <melo∆û> Compiling cargo-ndk v3.5.4                                                                   error: You cannot build cargo-ndk _for_ Android. Build it for your host OS and run it with cargo.                                                                                                 --> /data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cargo-ndk-3.5.4/src/cargo.rs:21:1                                           
15:00 < bridge> <melo∆û> ```
15:01 < Tarot> Compiling on android @heinrich5991
15:02 < bridge> <robyt3> For which target are you compiling? Compiling for Android on Android is not possible AFAIK.
15:03 < Tarot> game-server
15:03 < bridge> <chillerdragon> He is compiling for windows because it‚Äôs easier than doing it on the pc xaxaxaxa
15:03 < bridge> <chillerdragon> Sori Heinrich I had to
15:04 < bridge> <robyt3> I mean on which system the executable is supposed to run
15:04 < bridge> <melo∆û> `termux aarch64 linux (android)`
15:04 < bridge> <milkeeycat> rip chiller
15:04 < Tarot> Ah , on android 
15:04 < bridge> <robyt3> I don't think that's possible
15:05 < bridge> <heinrich5991> I don't think we support building *on* android
15:05 < bridge> <chillerdragon> I am not sure if ddnet can do much about it
15:05 < bridge> <chillerdragon> Sounds like a termux responsibility
15:05 < Tarot> I compiled teeworlds 0.6.x correctly and i can run that server now.
15:05 < bridge> <chillerdragon> Such a cursed system
15:06 < bridge> <chillerdragon> rust ‚Ä¢.‚Ä¢
15:06 < bridge> <heinrich5991> ah, I guess compiling the server on android for android could work
15:06 < bridge> <heinrich5991> since it's just another linux system
15:06 < bridge> <heinrich5991> but it's probably obstructed by our client support for android
15:07 < bridge> <chillerdragon> It‚Äôs cursed Linux plus cursed Linux
15:07 < bridge> <robyt3> yeah, it shouldn't use cargo-ndk *on* Android I guess
15:07 < bridge> <chillerdragon> Android is Linux but somehow it needs termux to be even more Linux xd
15:08 < Tarot> Is it different between `cargo ndk` and `android-ndk-r26b` `build-ndk` ?
15:10 < Tarot> Chiller me :)
15:12 < bridge> <melon> `cargo ndk` is specifically designed to build rust applications, `android-ndk-r26b` seems to be more generic towards C / C++
15:12 < bridge> <melon> 
15:12 < bridge> <melon> source: 2min google session
15:15 < Tarot> `ln -s /data/data/com.termux/files/home/android-ndk-r26b/ndk-build /data/data/com.termux/files/usr/bin/cargo-ndk` error gone but hang on` [ 15%] Generating release/libddnet_engine_shared.a ` 
15:17 < Tarot> I changed this line `/data/data/com.termux/files/usr/bin/cargo ndk --manifest-path /data/data/com.termux/files/home/DDNet-18.4/Cargo.toml -t -p build --release`
15:22 < bridge> <Jupstar ‚ú™> @zwelf2 so ranks are immediately saved to a sqlite database, (where writing to sqlite and mysql at the same time will probably be easy in rust thanks to `async`).
15:22 < bridge> <Jupstar ‚ú™> 
15:22 < bridge> <Jupstar ‚ú™> Do you think it's actually worth to have a third database?
15:22 < bridge> <Jupstar ‚ú™> Why wouldn't you simply always write to the sqlite database (similar to what is now done in the backup table).
15:22 < bridge> <Jupstar ‚ú™> I can only imagine the risk of having duplicate ranks, but is that really a _huge_ problem? shouldnt it be easy to detect it with a timestamp or smth.
15:22 < bridge> <Jupstar ‚ú™> 
15:22 < bridge> <Jupstar ‚ú™> Or was it mostly bcs it was easier to deal with like that?
15:25 < bridge> <Jupstar ‚ú™> you also mentioned `mostly the reason for the backup table to exist: to prevent double loading`, which is probably related. but not clear from the PR what exactly you did here with the backup table to improve that
15:30 < bridge> <learath2> You know what would be cool? A durable messaging infrastructure that can take responsibility for these messages and transparently handling all the failsafes and once delivery guarantees
15:32 < bridge> <heinrich5991> wouldn't be better than what we currently have, I think
15:32 < bridge> <heinrich5991> currently, you can /save and /load while the global DB is offline
15:34 < bridge> <Jupstar ‚ú™> do we ever structurally do queries on saves currently?
15:34 < bridge> <Jupstar ‚ú™> like select save.cp1 from saves
15:34 < Tarot> @heinrich5991 are you here ?
15:34 < bridge> <Jupstar ‚ú™> i wonder if we can make that easier too
15:34 < bridge> <heinrich5991> no. only on maps/savecodes
15:35 < bridge> <learath2> we can have a local fallback consumer too
15:35 < bridge> <heinrich5991> can you elaborate on how that would work?
15:36 < Tarot> I ask somthing in dm
15:36 < bridge> <heinrich5991> Tarot: DMs don't work
15:36 < Tarot> Irc ?
15:36 < bridge> <chillerdragon> ?xd  CI
15:37 < bridge> <chillerdragon> What happend to dms
15:37 < bridge> <chillerdragon> Any good irc client for android? Tarot
15:38 < Tarot> :/
15:38 < bridge> <heinrich5991> ah. this is IRC. can you simply ask the question in this channel?
15:38 < Tarot> DDNet-irc Client
15:38 < Tarot> :))
15:39 < bridge> <chillerdragon> watafak is ddnet irc client xd
15:39 < bridge> <chillerdragon> That runs on android? Xd
15:40 < bridge> <learath2> Actually now that I think about it this is not a great idea because of race issues :/ I really really really don't want any db implementation in our codebase
15:41 < bridge> <heinrich5991> why not sqlite? I'd like to keep the ability to just start and run a ddnet server
15:42 < bridge> <learath2> It's nasty, engine components being aware of the specifics of the gamemode
15:43 < bridge> <heinrich5991> this mostly says something about our implementation, not about databases
15:44 < bridge> <Jupstar ‚ú™> you want a dedicated database server (not a direct mysql connection or whatefver) that handles requests in a structured way?
15:44 < bridge> <Jupstar ‚ú™> 
15:44 < bridge> <Jupstar ‚ú™> Or what did you try to say
15:44 < bridge> <learath2> It would be so much more peaceful if this mess happened somewhere outside, where we don't have to think about threading
15:44 < bridge> <Jupstar ‚ú™> i dont understand anything u said tbh xd
15:45 < bridge> <heinrich5991> code the replacement in rust :p
15:46 < bridge> <learath2> A separate piece of software that provides a sane interface where you can insert/remove/get ranks without details of database implementations being inside our codebase
15:46 < bridge> <Jupstar ‚ú™> sqlx
15:46 < bridge> <Jupstar ‚ú™> xdd
15:47 < bridge> <heinrich5991> it is unclear to me why this is saner than having it inside the codebase
15:47 < bridge> <learath2> It's just simpler to think about and maintain
15:47 < bridge> <heinrich5991> i.e. what's the difference between having an insert/remove/get ranks API inside our code, or an external one
15:47 < bridge> <heinrich5991> I doubt that part. more moving parts with more processes. e.g. the API thing might be offline. what do you do?
15:49 < bridge> <learath2> It can be coded in some other language where it's much more pleasant to interact with a db
15:49 < bridge> <learath2> by its central nature it can help alleviate all data consistency issues
15:49 < bridge> <Jupstar ‚ú™> if it makes you happy.. since i need to support an interface for wasm, i also kinda had to make an abstraction that makes the underlaying logic go away a bit.
15:49 < bridge> <Jupstar ‚ú™> 
15:49 < bridge> <Jupstar ‚ú™> You still have to write the SQL strings, but other than that it shouldn't bother you so much
15:50 < bridge> <heinrich5991> we can use rust inside our codebase, might be a nice use case
15:50 < bridge> <learath2> There'd always be a local instance
15:50 < bridge> <Jupstar ‚ú™> ah you are mostly about the interaction between sqlite and mysql thing?
15:50 < bridge> <Jupstar ‚ú™> what u dislike
15:50 < bridge> <learath2> That's one of the many things I dislike
15:50 < bridge> <heinrich5991> and that might be down. what do you do?
15:50 < bridge> <Jupstar ‚ú™> mhh other than that a mysql-client already is an abstraction isnt it? xd
15:51 < bridge> <learath2> That's why I wanted a message-queue in there somewhere, that'd just take the rank message and store it in it's local buffer
15:51 < bridge> <Jupstar ‚ú™> like u do a pool of connection and start queries
15:51 < bridge> <Jupstar ‚ú™> but that piece of software would also require to "know" when a mysql connection failed
15:51 < bridge> <heinrich5991> ah yea. that'd work
15:51 < bridge> <Jupstar ‚ú™> or any kind of network
15:51 < bridge> <learath2> but honestly the local instance being down is only going to happen if there is a bug, there can be a bug in the abstraction we have right now too that can also get it stuck
15:51 < bridge> <heinrich5991> but it requires an external process, which I dislike
15:52 < bridge> <learath2> And you can't restart the sql abstraction part of a ddnet server unlike a separate ranks server
15:52 < bridge> <heinrich5991> yes. we want to keep race records in case of bugs ^^ that's the level of durability we have for ranks currently
15:52 < bridge> <Jupstar ‚ú™> i dont understand why this actually solves anything tho
15:52 < bridge> <learath2> Do we? A bug in the sqlite implementation means we lose ranks, that's also a possiblity. I'd say it's about the same likelihood that there is a bug in an external service that we code
15:53 < bridge> <learath2> Message queues take responsibility for the messages they route, so after it leaves the server it would be accounted for until properly delivered to the rank-service
15:53 < bridge> <learath2> Message queues take responsibility for the messages they route, so after it leaves the gameserver it would be accounted for until properly delivered to the rank-service
15:53 < bridge> <Jupstar ‚ú™> then you can also simply disallow loading saves on sqlite
15:54 < bridge> <Jupstar ‚ú™> that is about the same to me
15:54 < bridge> <learath2> This is exactly what heinrich wants preserved
15:54 < bridge> <heinrich5991> external services always add higher error rates
15:55 < bridge> <learath2> Sounds about right, but I'm fairly sure you have no proof of that
15:55 < bridge> <heinrich5991> if we want to change to something like this, we'll need to keep the sqlite3 thing at first
15:56 < bridge> <learath2> I wouldn't really bother with it given the reception it has in here
15:56 < bridge> <learath2> Maybe one day when I make my own ddnet reimplementation like jupeyy I might explore the possiblity
15:56 < bridge> <Jupstar ‚ú™> epyc
15:57 < bridge> <heinrich5991> I have no proof for that
15:57 < bridge> <heinrich5991> but it's what my experience tells me
15:59 < bridge> <ryozuki> where fax
15:59 < bridge> <learath2> I have a similarly sane sounding justification as to why that might not be the case in this instance. It'd still be us coding the "external" service, so it's fair to assume the occurance rate of bugs would be about the same. That leaves only the interprocess communication that can go wrong. How would a unix domain socket even break?
16:00 < bridge> <ryozuki> maybe the socket doesnt break but u can have bugs in the ipc
16:00 < bridge> <ryozuki> but the advantage of separating maybe means cleaner code and less bugs too
16:01 < bridge> <ryozuki> its a balance
16:01 < bridge> <ryozuki> anyway lets do web scale
16:01 < bridge> <ryozuki> mongodb when
16:01 < bridge> <learath2> I absolutely despise the fact that we are spinning up threads all the way in `src/game/server/`. Why is such a high level of the code even aware of threading?
16:01 < bridge> <ryozuki> https://www.youtube.com/watch?v=b2F-DItXtZs
16:02 < bridge> <jxsl13> please don't do messaging queues ._. (nor mongodb). it increases complexity and maintainability by 10x
16:03 < bridge> <jxsl13> or decreases maintainability
16:03 < bridge> <ryozuki> i love the sarcasm isnt noticed
16:03 < bridge> <ryozuki> xd
16:03 < bridge> <jxsl13> just ignored
16:03 < bridge> <jxsl13> ice cold
16:03 < bridge> <jxsl13> x)
16:04 < bridge> <jxsl13> I put parenthesis around mongo
16:04 < bridge> <learath2> Message queues are such a nice abstraction. It's insanely annoying to consider stuff like reachability at the edge node
16:04 < bridge> <Jupstar ‚ú™> @learath2 omg please show me what you want to improve, i am open.
16:04 < bridge> <Jupstar ‚ú™> 
16:04 < bridge> <Jupstar ‚ú™> your local message queue thing defs sound like smth that is possible, but i wonder how well a generic implementation would work for our use cases.
16:04 < bridge> <Jupstar ‚ú™> 
16:04 < bridge> <Jupstar ‚ú™> i also want to see how you imagine getting away from spawning tasks
16:04 < bridge> <ryozuki> https://tenor.com/view/web-development-web-development-web-design-design-gif-22517681
16:04 < bridge> <ryozuki> xd ops
16:04 < bridge> <jxsl13> debugging them is tue biggest pain in the butt. I mean if it's just putting data i to a database, it's ok but more than that, it's literally garbage.
16:04 < bridge> <jxsl13> into
16:04 < bridge> <ryozuki> but message queue or message passing is what google does with golang, it scales the web, memory sharing like rust is bad /s
16:05 < bridge> <louis> whats bad about mongodb
16:05 < bridge> <ryozuki> its not even ACID compliant
16:05 < bridge> <louis> it can be
16:05 < bridge> <zhn> `game/server` just needs a huuuge refactor in general xd
16:06 < bridge> <zhn> why though
16:06 < bridge> <ryozuki> btw i agree i dislike the db code, it tried to be modular but it isnt, cuz the syntax is tied to mysql-like
16:06 < bridge> <ryozuki> u cant add psql easily
16:06 < bridge> <jxsl13> bouncing messages
16:06 < bridge> <learath2> I respectfully disagree. Getting to abstract away stuff like delivery guarantees and retries is so pleasant
16:09 < bridge> <learath2> Currently our servers adopt the fire once, if it's not delivered tough tits approach to message delivery
16:09 < bridge> <learath2> It's very enjoyable spending hours fixing inconsistencies and figuring out where in the chain a connection failed and we lost a command
16:09 < bridge> <Jupstar ‚ú™> i also like that, just the loading saves things doesnt sound easy without a local database in between
16:09 < bridge> <Jupstar ‚ú™> 
16:09 < bridge> <Jupstar ‚ú™> so your abstraction might end up using a sqlite db too, but abstracts away some details or smth xd
16:10 < bridge> <jxsl13> dunno the current architecture, so cannot compare.
16:11 < bridge> <learath2> I was imagining something like a local provider of higher priority providing the `saves`/`ranks` service. But that only works with writing, with a read idk how the router that's supposed to be message agnostic figure out where to route the read message
16:11 < bridge> <learath2> Don't compare, just tell me why you don't like message queues and what you'd replace them with instead
16:12 < bridge> <jxsl13> for simple persistence to db it's ok
16:12 < bridge> <jxsl13> adds a lot of complexity to the code
16:12 < bridge> <jxsl13> transactions and stuff
16:12 < bridge> <ryozuki> do u have to dire past?
16:12 < bridge> <ryozuki> some project example
16:12 < bridge> <ryozuki> that went wrong
16:12 < bridge> <ryozuki> do u have a  dire past?
16:13 < bridge> <jxsl13> tried to do workflow orchestrstration/coordination with messaging queues üòÑ
16:13 < bridge> <jxsl13> just moving data is ok
16:15 < bridge> <ryozuki> i would think of it like a external async engine that processes tasks for you, i dont think its that complex
16:15 < bridge> <learath2> "workflow" as in durable execution?
16:15 < bridge> <ryozuki> for ddnet
16:15 < bridge> <ryozuki> like the job api but externally handled?
16:15 < bridge> <ryozuki> xd
16:15 < bridge> <jxsl13> kind of, I guess
16:15 < bridge> <learath2> Yes, almost like `CJob`s that can run somewhere else
16:16 < bridge> <jxsl13> dunno the exact term durable execution. basically what we currently do with temporal.io
16:16 < bridge> <learath2> Yeah, temporal is an implementation of durable execution
16:17 < bridge> <learath2> I've found it quite pleasant to work with lately. No real ddnet application though so not useful here üòÑ
16:17 < bridge> <ryozuki> this falls into the plan to add more rust code and tie ddnet to rust more :PES_EvilHandRub:
16:17 < bridge> <jxsl13> termoral is amazing
16:17 < bridge> <jxsl13> temporal
16:18 < bridge> <learath2> It just would be so nice if the ddnet server would send information about a rank and then just doesn't have to know anything else. Whether the remote write failed, what to fallback to whether the fallback is working, whether we should retry, or not, or what failure is retryable what failure isn't
16:19 < bridge> <jxsl13> that's out of scope of a messaging queue already
16:21 < bridge> <learath2> All message brokers take responsibility for messages, that already takes care of the "durability". The routing of messages to service providers is the missing part but there are also implementations that dabble in that
16:22 < bridge> <jxsl13> Is there a single consumer service for ranks?
16:23 < bridge> <jxsl13> where multiple servers send to? or how are the ranks collected?
16:23 < bridge> <learath2> Currently there is no message queue, we try to write to mysql, if it fails we write to sqlite
16:23 < bridge> <ryozuki> @heinrich5991 do u think a [u32; 4] and a struct wit 4 fields that have type u32 are laid of the same in memory?
16:23 < bridge> <learath2> no multiple servers supported, no further fallback
16:23 < bridge> <jxsl13> and later on try again?
16:24 < bridge> <learath2> No try again
16:24 < bridge> <jxsl13> maybe that's the missing part
16:24 < bridge> <learath2> We have deen guaranteed durable execution that pushes ranks from sqlite to mysql at midnight
16:24 < bridge> <jxsl13> xD deen guaranteed, deen doing that ?
16:24 < bridge> <learath2> Yes, it's much better than temporal
16:24 < bridge> <jxsl13> xD
16:25 < bridge> <jxsl13> doesn't sleep
16:25 < bridge> <jxsl13> works 24/7
16:25 < bridge> <learath2> Though perhaps he added a cron nowadays to handle the simple case of the mysql server now being able to access the leaf servers
16:25 < bridge> <learath2> a cron which when it fails doesn't log anything or notify anyone probably
16:26 < bridge> <jxsl13> would suggest to actually introduce some thread for trying to push data to db from sqlite
16:26 < bridge> <jxsl13> way easier and decentralized
16:27 < bridge> <learath2> Idk why we didn't do that, perhaps a data race issue with saves that I'm not remembering right now
16:28 < bridge> <jxsl13> we do have a similar approach with our monitoring solution for pushing metric data to our event processing once the event processing api is down.
16:28 < bridge> <jxsl13> one could use in process messaging queues
16:29 < bridge> <jxsl13> for pushing data around and having it processed asynchronously
16:30 < bridge> <jxsl13> rabbitmq occasionally needs to be updated
16:31 < bridge> <Jupstar ‚ú™> mysql for learath is what using global variables is for me xdddd
16:31 < bridge> <jxsl13> rabbitmq occasionally needs to be updated as well
16:31 < bridge> <learath2> Maybe we should just store all ranks in a global variable ü§î
16:31 < bridge> <heinrich5991> version differences e.g.
16:31 < bridge> <Jupstar ‚ú™> perfect
16:32 < bridge> <Jupstar ‚ú™> global as in the earth global
16:32 < bridge> <Jupstar ‚ú™> global variables
16:32 < bridge> <heinrich5991> yea, that sounds not nice, but also not related
16:32 < bridge> <learath2> OH, we should hire a record keeper that just watches the logs and writes down the ranks and saves into a huge ledger
16:33 < bridge> <jxsl13> web3
16:33 < bridge> <jxsl13> AI
16:33 < bridge> <louis> code a custom client that keeps a tee active on every server and grabs ranks from chat
16:33 < bridge> <louis> yw
16:33 < bridge> <jxsl13> global scale
16:33 < bridge> <heinrich5991> not guaranteed unless `#[repr(C)]`
16:33 < bridge> <Jupstar ‚ú™> @louis.place can u try the bot with what we discussed?
16:33 < bridge> <Jupstar ‚ú™> 
16:33 < bridge> <Jupstar ‚ú™> i dont even see it's commands anymore xd
16:33 < bridge> <Jupstar ‚ú™> just try on the toast skins they are defs not dilated
16:34 < bridge> <learath2> @jupeyy_keks do you know tokio-rs?
16:34 < bridge> <Jupstar ‚ú™> https://discord.com/channels/252358080522747904/985717921600929872/1061522670904160367
16:34 < bridge> <louis> i tried doing it on a rly far back skin but the bot broke
16:34 < bridge> <Jupstar ‚ú™> the organisation?
16:34 < bridge> <louis> the uploading msg just disappeared
16:34 < bridge> <Jupstar ‚ú™> üòÆ
16:34 < bridge> <Jupstar ‚ú™> can it not fetch old msgs?
16:35 < bridge> <Jupstar ‚ú™> maybe try to first remove your reaction
16:35 < bridge> <learath2> The tokio runtime in general. I want to know if I can somehow have a thread that never switches tasks
16:35 < bridge> <louis> ye ill try again
16:35 < bridge> <Jupstar ‚ú™> but make sure to remember it xd
16:35 < bridge> <louis> in a min
16:35 < bridge> <heinrich5991> you can IIRC
16:36 < bridge> <Jupstar ‚ú™> i never used smth so specific sry.
16:36 < bridge> <Jupstar ‚ú™> 
16:36 < bridge> <Jupstar ‚ú™> if u want a thread that never switched tasks, use a blocking thread and call all async code sync xd
16:37 < bridge> <Jupstar ‚ú™> nah dunno, if some logic uses tokio::spawn internally that is probably already cheating for you?
16:40 < bridge> <jxsl13> btw, this is where I'm coming from: https://github.com/jxsl13/amqpx in regard to messaging queues.
17:15 < bridge> <learath2> I thought something was wrong with my laptop, my earphone case has a magnet in it and I was getting it too close to the hall effect sensor üòÑ
17:18 < bridge> <jxsl13> do dnsbl services have rate limits?
17:49 < bridge> <totar> I'm already using msys2 and minge64 üò≠
17:49 < bridge> <totar> I'm already using msys2 and mingw64 üò≠
17:54 < bridge> <Jupstar ‚ú™> so? xd
17:54 < bridge> <Jupstar ‚ú™> is the bot even online
18:01 < bridge> <louis> oh oops
18:01 < bridge> <louis> nah still doesn twork
18:02 < bridge> <louis> its weird though
18:02 < bridge> <louis> the message just disappears when i react to smth far back
18:02 < bridge> <Jupstar ‚ú™> @murpi make me skin database crew
18:06 < bridge> <murpi> ok
18:07 < bridge> <murpi> no @chanch0o
18:07 < bridge> <Tsumugi> :pepeW:
18:07 < bridge> <murpi> :kek:
18:08 < bridge> <Tsumugi> ü§ì
18:12 < bridge> <Jupstar ‚ú™> @louis.place mh ok really weird.. kinda looks like a discord client bug
18:12 < bridge> <Jupstar ‚ú™> it just drops it for whatever reason
18:12 < bridge> <Jupstar ‚ú™> dunno if it's some client setting
18:13 < bridge> <Jupstar ‚ú™> can someone clear the cache of cloudflare?
18:13 < bridge> <louis> ok thx so im not going insane üòÖ
18:14 < bridge> <Jupstar ‚ú™> @heinrich5991 maybe when u back
18:27 < bridge> <Jupstar ‚ú™> @murpi u can remove me again, either it worked or not, we'll see üòÑ
18:30 < bridge> <Tsumugi> u can make me also
18:30 < bridge> <Tsumugi> im just gonna test dw
18:31 < bridge> <Tsumugi> @louis.place when are u goin to replace
18:31 < bridge> <Tsumugi> üßê
18:33 < bridge> <louis> i forgot, later
18:36 < bridge> <Tsumugi> see?
18:36 < bridge> <Tsumugi> i would never forgot
18:36 < bridge> <Tsumugi> you should totally make me skin database crew
18:39 < bridge> <heinrich5991> which cloudflare cache?
18:40 < bridge> <louis> its up to admins but sorry, i won't recommend you
18:41 < bridge> <Jupstar ‚ú™> for skins.ddnet.org
18:42 < bridge> <Jupstar ‚ú™> https://ddnet.org/skins/skin/toast_kiinmn.png
18:43 < bridge> <Tsumugi> ye i know ty
18:44 < bridge> <heinrich5991> tried purging everything under https://ddnet.org/skins/skin/. did it work?
18:44 < bridge> <Jupstar ‚ú™> yes thanks
18:45 < bridge> <Jupstar ‚ú™> ok wait the skin is gone
18:45 < bridge> <Jupstar ‚ú™> lol
18:45 < bridge> <Jupstar ‚ú™> ah ok browser bug
18:45 < bridge> <Jupstar ‚ú™> nvm
18:46 < bridge> <heinrich5991> 404 for me oO
18:47 < bridge> <Jupstar ‚ú™> mh weird
18:47 < bridge> <Jupstar ‚ú™> but it also isnt dilated :c
18:47 < bridge> <Jupstar ‚ú™> but that is unrelated
19:04 < bridge> <milkeeycat> i had similar stuff but i broke it a few commits ago and forgot about it xdd
19:32 < bridge> <melo∆û> damn @jupeyy_keks i knew you're a vulkan gigachad, but that GLEW PR you posted? juicy, weird it just got left sad, alone and dusty
19:33 < bridge> <melo∆û> damn @jupeyy_keks i knew you're a vulkan gigachad, but that GLEW PR you posted? juicy... weird it just got left sad, alone and dusty
19:33 < bridge> <Jupstar ‚ú™> i didnt use wayland as argument
19:33 < bridge> <Jupstar ‚ú™> maybe that would convince him xd
19:33 < bridge> <melo∆û> poke the reviewer and mention it
19:33 < bridge> <melo∆û> XD
19:34 < bridge> <Jupstar ‚ú™> but anyway, i am surprised there is now glew-egl package in arch anymore
19:34 < bridge> <Jupstar ‚ú™> i thought i saw that once
19:34 < bridge> <Jupstar ‚ú™> that would fix it
19:34 < bridge> <Jupstar ‚ú™> bcs that is the package to use for wayland users
19:37 < bridge> <melo∆û> isnt that just glew-wayland?
19:37 < bridge> <melo∆û> or was there a specific glew-egl package once?, can't find any in the history
19:37 < bridge> <Jupstar ‚ú™> i thought it was even named like that yeah
19:37 < bridge> <Jupstar ‚ú™> but yeah lets see if glew-wayland works for him
19:37 < bridge> <melo∆û> ye
19:39 < bridge> <Jupstar ‚ú™> i found this:
19:39 < bridge> <Jupstar ‚ú™> https://github.com/nigels-com/glew/pull/216#issuecomment-903655872
19:39 < bridge> <Jupstar ‚ú™> maybe we can actually fix it in our code.. 
19:39 < bridge> <Jupstar ‚ú™> 
19:39 < bridge> <Jupstar ‚ú™> now i remember
19:39 < bridge> <Jupstar ‚ú™> i think i even did it for bundled GLEW
19:39 < bridge> <Jupstar ‚ú™> üòÖ
19:39 < bridge> <melo∆û> :kek:
19:39 < bridge> <Jupstar ‚ú™> ah yeah
19:40 < bridge> <Jupstar ‚ú™> now that few years passed we can maybe enable it default
19:41 < bridge> <Jupstar ‚ú™> wow
19:41 < bridge> <Jupstar ‚ú™> he didnt release a version since then
19:41 < bridge> <Jupstar ‚ú™> xDDDDD
19:41 < bridge> <melo∆û> :KEKW:
19:41 < bridge> <Jupstar ‚ú™> so all linux distros are outdated
19:41 < bridge> <melo∆û> well you can't get more backwards compatible than that!
19:42 < bridge> <APFFF> Hello how can I make cheats like KRX? Thx in advance
19:42 < bridge> <melo∆û> :think_bot:
19:54 < bridge> <heinrich5991> @apfff no mentioning cheat client names
19:57 < bridge> <Jupstar ‚ú™> @blaiszephyr and that is why static linking is master race üò¨
20:02 < Tarot> `~/DDNet-18.4 $ ninja -v game-server ninja: error: '/release/libddnet_engine_shared.a', needed by 'DDNet-Server', missing and no known rule to make it` ? Whats wrong
20:07 < Tarot> Same on `~/DDNet-18.4 $ ninja ninja: error: '/release/libddnet_engine_shared.a', needed by 'libDDNet.so', missing and no known rule to make it`
20:09 < bridge> <melo∆û> are you still trying to build the server on android?
20:09 < bridge> <APFFF> sorry
20:09 < Tarot> No
20:11 < bridge> <melo∆û> what rust toolchain are you using?
21:03 < bridge> <milkeeycat> yikes #general is fucked üò¨
21:03 < bridge> <panix_1> "Msc empire fucked you, get on your knees discord.gg/pon"
21:03 < bridge> <panix_1> "Msc empire fucked you, get on your knees discord.gg/pon"
21:03 < bridge> <panix_1> "Msc empire fucked you, get on your knees discord.gg/pon"
21:03 < bridge> <panix_1> "Msc empire fucked you, get on your knees discord.gg/pon"
21:03 < bridge> <panix_1> "Msc empire fucked you, get on your knees discord.gg/pon"
21:03 < bridge> <panix_1> "Msc empire fucked you, get on your knees discord.gg/pon"
21:03 < bridge> <panix_1> "Msc empire fucked you, get on your knees discord.gg/pon"
21:03 < bridge> <panix_1> "Msc empire fucked you, get on your knees discord.gg/pon"
21:03 < bridge> <panix_1> "Msc empire fucked you, get on your knees discord.gg/pon"
21:03 < bridge> <panix_1> "Msc empire fucked you, get on your knees discord.gg/pon"
21:04 < bridge> <ultramegakrytoychelsuperpro3000> Msc empire fucked you, get on your knees discord.gg/pon
21:04 < bridge> <ultramegakrytoychelsuperpro3000> Msc empire fucked you, get on your knees discord.gg/pon
21:04 < bridge> <ultramegakrytoychelsuperpro3000> Msc empire fucked you, get on your knees discord.gg/pon
21:04 < bridge> <ultramegakrytoychelsuperpro3000> Msc empire fucked you, get on your knees discord.gg/pon
21:04 < bridge> <ultramegakrytoychelsuperpro3000> Msc empire fucked you, get on your knees discord.gg/pon
21:04 < bridge> <ultramegakrytoychelsuperpro3000> Msc empire fucked you, get on your knees discord.gg/pon
21:04 < bridge> <ultramegakrytoychelsuperpro3000> Msc empire fucked you, get on your knees discord.gg/pon
21:04 < bridge> <ultramegakrytoychelsuperpro3000> Msc empire fucked you, get on your knees discord.gg/pon
21:04 < bridge> <dildo_50102> Msc empire fucked you, get on your knees discord.gg/pon
21:05 < bridge> <darktimemonster> Msc empire fucked you, get on your knees discord.gg/pon
21:06 < bridge> <Jupstar ‚ú™> @Discord Mod
21:57 < bridge> <Jupstar ‚ú™> @louis.place i think the dilate worked.. i finally get the new image from ddnet.org
21:59 < bridge> <Jupstar ‚ú™> maybe you can confirm with another skin tho
22:16 < bridge> <vking4> @morpheus_tyler  whatsup digga
23:13 < bridge> <ashalevsi> Hello! Are you continuing to develop a new version of ddnet mobile? Can not wait
23:14 < bridge> <schrodingerzhu> hi
23:14 < bridge> <Jupstar ‚ú™> yes but asking every day wont make it come faster üòâ
23:14 < bridge> <schrodingerzhu> https://github.com/DDNet-WinArm64/ddnet-build/actions/runs/10117505816
23:14 < bridge> <ashalevsi> I wanted to cheer you up
23:14 < bridge> <schrodingerzhu> winarm64 build is ready
23:15 < bridge> <Jupstar ‚ú™> ok, thanks
23:15 < bridge> <ashalevsi> What will you add besides the change of management?
23:16 < bridge> <Jupstar ‚ú™> wat? xd
23:17 < bridge> <ashalevsi> What do you want to add to the new version?
23:17 < bridge> <Jupstar ‚ú™> neat, i guess nobody here except you has ARM64 yet üòÑ
23:17 < bridge> <Jupstar ‚ú™> 
23:17 < bridge> <Jupstar ‚ú™> One important step will be that our devs can compile the ddnet-libs themself (e.g. for updates)
23:17 < bridge> <ashalevsi> Sorry, I'm using a translator
23:18 < bridge> <Jupstar ‚ú™> touch controls.
23:18 < bridge> <Jupstar ‚ú™> 
23:18 < bridge> <Jupstar ‚ú™> Other than that compared to the old version there is a lot of stuff that was added during the years
23:18 < bridge> <schrodingerzhu> should ask qualcomm to donate one dev to your ppl xD
23:18 < bridge> <ashalevsi> Is there anything else?
23:19 < bridge> <Jupstar ‚ú™> did you ever play the PC version?
23:19 < bridge> <schrodingerzhu> it is fairly buildable on x86-64 but bairly testable
23:19 < bridge> <schrodingerzhu> it is fairly buildable on x86-64 but barely testable
23:19 < bridge> <ashalevsi> Yes, but more often I play on the phone because I don‚Äôt have a PC. Played with my brother and friends
23:20 < bridge> <Jupstar ‚ú™> it will be like the PC version.. just with touch controls
23:20 < bridge> <Jupstar ‚ú™> nothing less, nothing more
23:20 < bridge> <ashalevsi> That is, it will be possible to change the controls and that‚Äôs it? Although this is enough for meü•∞
23:21 < bridge> <Jupstar ‚ú™> some day you can also change controls yes
23:21 < bridge> <Jupstar ‚ú™> when exactly is hard to say
23:23 < bridge> <ashalevsi> Well, anyway, I‚Äôll wait for it, and don‚Äôt forget to add the function of using emotions, it‚Äôs not available in the test version))
23:23 < bridge> <ashalevsi> @jupeyy_keks How many people are involved in development?
23:24 < bridge> <Jupstar ‚ú™> the touch controls are made by robyte only
23:24 < bridge> <Jupstar ‚ú™> if that is your question
23:24 < bridge> <Jupstar ‚ú™> but if your question is how many ppl work on ddnet:
23:24 < bridge> <Jupstar ‚ú™> https://github.com/ddnet/ddnet/graphs/contributors
23:25 < bridge> <ashalevsi> Thank you, I won't bother you anymore
23:28 < bridge> <schrodingerzhu> anyway, if devs are not ready to build and test win arm64 versions and other ppls make such demands, you can direct them to the repo. 
23:28 < bridge> <schrodingerzhu> 
23:28 < bridge> <schrodingerzhu> The build procedure itself is free of supply chain attack because everything is built from src without my uploaded binaries. 
23:28 < bridge> <schrodingerzhu> 
23:28 < bridge> <schrodingerzhu> But as unofficial build, I may not be able to always keep synced with upstream changes as I have other responsibilities.
