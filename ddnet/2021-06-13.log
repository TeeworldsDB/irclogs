08:53 < bridge> [ddnet] <Matodor> add pls last timestamp of update into https://master1.ddnet.tw/ddnet/15/servers.json :greenthing:
09:59 < bridge> [ddnet] <heinrich5991> @Matodor it has the "Last-Modified" header
11:00 < bridge> [ddnet] <deen> As heinrich5991 said, you can use the http header. It's just a static file on the server: `curl -s -I -i https://master1.ddnet.tw/ddnet/15/servers.json | grep last-modified`
13:24 < bridge> [ddnet] <Chairn> Is it really necessary to bors r+ for updating translation?
13:24 < bridge> [ddnet] <chillerdragon> good point we need CI for translations \:D
13:25 < bridge> [ddnet] <Chairn> not really, just wanted to point that it sounds useless
13:25 < bridge> [ddnet] <chillerdragon> i assume u can wait for bors on this \:)
13:25 < bridge> [ddnet] <chillerdragon> be patient
13:27 < bridge> [ddnet] <Chairn> its not about waiting, its about energy loss
13:27 < bridge> [ddnet] <chillerdragon> imo deciding on every pr if bors is needed or not is enegery loss
13:34 < bridge> [ddnet] <lynn> @uwu weeb
13:36 < bridge> [ddnet] <Anime.pdf> u
15:02 < bridge> [ddnet] <nuborn> have anyone ported vanilla/ctf to ddnet codebase?
15:37 < bridge> [ddnet] <Learath2> @nuborn not that I'm aware of
15:44 < bridge> [ddnet] <Learath2> @Ryozuki I asked yesterday but you missed it I think, have you ever used `tokio-rs/tracing`?
15:44 < bridge> [ddnet] <Ryozuki> i kinda did
15:44 < bridge> [ddnet] <Ryozuki> basically i just put the # at functions and use the logging functions
15:44 < bridge> [ddnet] <Ryozuki> iirc
15:45 < bridge> [ddnet] <Ryozuki> #[tracing] on functions setups the spans for u
15:45 < bridge> [ddnet] <Ryozuki> #[tracing::instrument]
15:45 < bridge> [ddnet] <Ryozuki> *
15:45 < bridge> [ddnet] <Learath2> Do you like it?
15:46 < bridge> [ddnet] <Ryozuki> i dont know why i need to use tracing over log so idk what to tell u
15:46 < bridge> [ddnet] <Ryozuki> i think tracing is better for async or smth
15:46 < bridge> [ddnet] <Learath2> ah, it's supposed to solve the problem where in async programs it's really hard to figure out where a logging event is coming from
15:46 < bridge> [ddnet] <Ryozuki> i guess the span stuff is good to **trace** where logs come from
15:46 < bridge> [ddnet] <Ryozuki> hehe
15:46 < bridge> [ddnet] <Ryozuki> xd
15:46 < bridge> [ddnet] <Ryozuki> ye
15:46 < bridge> [ddnet] <Ryozuki> that
15:47 < bridge> [ddnet] <Ryozuki> i think the instrument even shows the argument values
15:47 < bridge> [ddnet] <Ryozuki> but im not sure
15:48 < bridge> [ddnet] <Ryozuki> there is also a cache library i found rly interesting
15:48 < bridge> [ddnet] <Ryozuki> https://docs.rs/cached/0.23.0/cached/index.html
15:48 < bridge> [ddnet] <Ryozuki> this is for local cache, not distributed stuff
15:49 < bridge> [ddnet] <Ryozuki> maybe u find it useful
15:49 < bridge> [ddnet] <Ryozuki> for ur bot
15:52 < bridge> [ddnet] <Ryozuki> @Learath2 btw if u ever need to debug print (but debug in the sense of finding a bug and not debug logs), https://doc.rust-lang.org/std/macro.dbg.html  best
15:52 < bridge> [ddnet] <Ryozuki> > Prints and returns the value of a given expression for quick and dirty debugging.
15:52 < bridge> [ddnet] <Ryozuki> xd
15:53 < bridge> [ddnet] <Learath2> oh this is cute, I've just been using `println!` as I always have but this is much better
15:53 < bridge> [ddnet] <Ryozuki> @Learath2 this is why its so useful
15:53 < bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/853633141901492224/unknown.png
15:53 < bridge> [ddnet] <Ryozuki> u can put it everywhere
15:54 < bridge> [ddnet] <Ryozuki> btw if u want to debug the contents of a struct i recommend passing it as & because dbg! moves the value
15:54 < bridge> [ddnet] <Ryozuki> dbg!(&mystruct)
15:55 < bridge> [ddnet] <Ryozuki> > You can also use dbg!() without a value to just print the file and line whenever itâ€™s reached.
15:55 < bridge> [ddnet] <Ryozuki> they rly thought it out
15:55 < bridge> [ddnet] <Ryozuki> i didnt know that last bit
15:55 < bridge> [ddnet] <Ryozuki> xd
18:22 < bridge> [ddnet] <Nouaa> there is not a git command that add every edited file?
18:22 < bridge> [ddnet] <Nouaa> i mean with git add ...
18:23 < bridge> [ddnet] <Nouaa> git add -all doeesn't work :C
18:23 < bridge> [ddnet] <Anime.pdf> git add -A
18:23 < bridge> [ddnet] <deen> git add .
18:24 < bridge> [ddnet] <Nouaa> that what i need thx
18:24 < bridge> [ddnet] <Anime.pdf> git add -A stages all changes
18:24 < bridge> [ddnet] <Anime.pdf> 
18:24 < bridge> [ddnet] <Anime.pdf> git add . stages new files and modifications, without deletions
18:24 < bridge> [ddnet] <Nouaa> ye git add . is perfect
18:25 < bridge> [ddnet] <Ryozuki> i think git add . also adds deletions
18:25 < bridge> [ddnet] <Anime.pdf> not
18:25 < bridge> [ddnet] <Anime.pdf> oh wait in git 2.0 yes
18:26 < bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/853671560774025256/unknown.png
18:26 < bridge> [ddnet] <Ryozuki> what r u using
18:26 < bridge> [ddnet] <Ryozuki> git from 99
18:26 < bridge> [ddnet] <Ryozuki> ?
18:26 < bridge> [ddnet] <Ryozuki> xd
18:26 < bridge> [ddnet] <Anime.pdf> yes
18:26 < bridge> [ddnet] <Anime.pdf> :Alzheimer:
20:17 < bridge> [ddnet] <lynn> git commit -am for the super lazy
23:04 < bridge> [ddnet] <chillerdragon> @Ryozuki\:  hrhrhrhhr https://github.com/teeworlds/teeworlds/issues/2887
