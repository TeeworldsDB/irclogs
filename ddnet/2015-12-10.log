01:04 <@deen> Aaaand GER2 running on o_be_two's Strasbourg server
01:26 <+o_be_two> :D
01:47 <+o_be_two> just bought r0x.tw
01:53 <@deen> haha
01:53 <@deen> i wanted hook.racing
01:54 <+o_be_two> and why you dont get it ?
01:55 <@deen> "already taken"
01:56 <@deen> and hookrace.net is perfectly fine
01:56 <+o_be_two> oh ok
01:57 <+o_be_two> i'll think on what i'll do on r0x.tw, maybe a TW community for blockers, idk atm
01:57 <+o_be_two> just i know that sometime players asks to do that, and some talks to do a r0x team :/
06:11 <@heinrich5991> deen: I see you on the leaderboard as well ^^
06:12 <@heinrich5991> you changed your avatar though
06:14 <@deen> heinrich5991: yeah, wanted to do some Nim advertisement, but I'm too bad again^^
06:14 <@deen> I remember solving this in one of my programming paradigms classes though
06:15 <@heinrich5991> ah. I only heard it as a puzzle before
06:15 <@heinrich5991> like you get the sequence 1, 11, 21, 1211, 111221, 312211, ... and you need to figure out the rule
06:15 <@heinrich5991> (that's really hard btw)
06:16 <@deen> ha, the top one was a a haskell guy today
06:17 <@heinrich5991> 2:30. that wouldn't sound so fast to me if I hadn't tried my best and got way more than twice that
06:18 <@deen> it's trivial if you know the group function, i was looking for that in Nim^^
06:18 <@deen> Are you one of the anonymous users?
06:19 <@heinrich5991> yes. #35077
06:20 <@heinrich5991> oh fun. group is something like counts adjacent elements of the same value?
06:20 <@heinrich5991> s/like/that
06:20 <@deen> group "Mississippi" = ["M","i","ss","i","ss","i","pp","i"]
06:20 <@heinrich5991> ah
06:21 <@deen> let me see if i can find the exercise where we had that
06:21 <@heinrich5991> I didn't know of the existence of such a function
06:21 <@heinrich5991> TIL
06:22 <@deen> http://www.student.kit.edu/~ubcqr/2014w/uebung_pp/1/Runlength.hs
06:23 <@deen> http://www.student.kit.edu/~ubcqr/2014w/uebung_pp/2/Runlength.hs
06:24 <@heinrich5991> fun :)
06:24 <@heinrich5991> run-length encoding?
06:24 <@deen> yep
06:24 <@heinrich5991> ok. filename.
06:24 <@heinrich5991> I should learn how to read :D
06:24 <@deen> your iterative solution looks exactly like mine in Nim^^
06:25 <@heinrich5991> can I see your soution?
06:25 <@deen> i didn't want to commit it because i wanted to rewrite it, should be possible much shorter
06:25 <@heinrich5991> pff. unauthentic :P
06:25 <@deen> haha
06:25 <@heinrich5991> I even record my incorrect attempts
06:26 <@deen> https://github.com/def-/nim-advent-of-code-2015/blob/master/day10.nim
06:26 <@heinrich5991> https://github.com/heinrich5991/adventofcode-2015/commits/master
06:26 <@heinrich5991> ^ see the "attempt #" commits :)
06:27 <@heinrich5991> is $ a stringify operator?
06:27 <@deen> yes
06:28 <@heinrich5991> and the parantheses are necessary because otherwise it would be interpreted as binary operator?
06:28 <@deen> yes
06:30 <@heinrich5991> and x[^1] works like python's x[-1], but at compile-time I guess?
06:30 <@deen> same, but at runtime
06:31 <@deen> in Nim you can also have arrays with a negative range, like var x: array[-100..100, int]
06:31 <@heinrich5991> ah, like in pascal :)
06:31 <@deen> and you can't know the size at compiletime
06:31 <@deen> ^ is the roof-operator :P
06:32 <@heinrich5991> yea, I ment that unlike in python you probably can't do something like idx = 1 if a > 0 else -1; x[idx]
06:32 <@heinrich5991> so you don't incur a runtime penalty (which probably is small though) to check whether your index is negative
06:33 <@heinrich5991> what happens if I feed your function an array of length 0?
06:33 <@heinrich5991> oh, you don't have a funciton
06:33 <@deen> bam, everything breaks
06:33 <@heinrich5991> I mean like, will it be UB or will it break reliably?
06:33 <@deen> in Nim that's your choice^^
06:34 <@deen> it doesn't have the fancy compiletime checks that Rust has
06:34 <@deen> so you can decide to have out-of-bounds checks at runtime or not
06:34 <@deen> if you don't have them, you get UB
06:35 <@heinrich5991> what's the default behavior?
06:35 <@deen> the default behaviour is to have all kinds of checks enabled and unoptimized builds
06:36 <@heinrich5991> +1 for checks enabled by default :)
06:36 <@deen> and then there's a -d:release flag defined, that by default disables all checks :P
06:37 <@deen> https://github.com/nim-lang/Nim/blob/devel/config/nim.cfg#L49-L65
06:37 <@heinrich5991> so everybody builds with that flag? ^^ -- :/
06:38 <@deen> dunno, i guess more people do than should
06:40 <@deen> you can change your own settings for -d:release of course, but haven't seen many people doing that
06:51 <@heinrich5991> I should go to sleep soon :)
08:41 <@EastByte> deen: ovh being funny again, I couldn't see the servers in the list and after I connected to ssh they were prefectly reachable
13:01 <@deen> EastByte: oh, someone else said the samething
13:01 <@deen> well, ok. so much for GER2 then^^
13:55 <@EastByte> Inproperly configured gamefilter probably
13:56 <@EastByte> We had the same issue with the game dedicated server of WolfAlex
17:08 <@deen> heinrich5991: talking about efficient functional code just reminded me, have you seen efficient haskell code? it looks a bit strange to say the least
17:37 <@heinrich5991> deen: I think that's because haskell has lazy evaluation
18:04 < Nimda> Sunburst2 by ŊØṼÅ just released on Solo at 2015-12-10 17:57
19:47 <@deen> o_be_two: any chance to fix the gamefilter?
19:54 <@deen> I checked the lags on GER and Deutsche Telekom users don't have high ping but packet loss every evening
19:54 <@deen> about 1-5%
19:59 <@EastByte> o_be_two: WolfAlex told me you need to set the gamefilter rules on the tw ports to the rule 'other'
20:15 < WolfAlex> EastByte: thats something HE should know :p 
22:00 <@deen> o_be_two: also, the new CAN server seems to have a lot of downtime
22:29 < RafaelFF> Hello there. I've heard that tw will be releasing 0.7 soon, which is not backward compatible with 0.6.  Just wondering if there is any development happening toward 0.7-compatibility and if any manual intervention in the server will be required  (instead of just remotely)
23:08 <+o_be_two> hello
23:08 <+o_be_two> deen: oh ? really ?
23:09 <+o_be_two> hum i'll check this
