00:00 < bridge> <robyt3> `ghosts` folder in the config directory
00:02 < bridge> <robyt3> They should have validation, so feel free to open issues if you find any crashes if you fuzz the format
00:04 < bridge> <robyt3> Did you also enable UBSan when building? You can also discover undefined behavior with fuzzing, which should also be fixed
00:05 < bridge> <davidlovesmath> no but i am using ASAN
00:05 < bridge> <davidlovesmath> but ill also do that then
00:05 < bridge> <Sans> I have an idea about ghosts but idk if it's a good one, what if team races could save ghosts of all the players? But then again there's also demos so idk how useful this would be, aside from being able to compare your current run tho a ghost team run in game
00:06 < bridge> <davidlovesmath> also where is the cmd arg for loading a map in the editor parsed
00:06 < bridge> <robyt3> Should work as long as the client always gets the player info. It's possible the players are too far away to be snapped, then the client couldn't record all ghosts
00:07 < bridge> <robyt3> Search for `static bool UnknownArgumentCallback(const char *pCommand, void *pUser)`
00:07 < bridge> <Sans> Is there a way to allow the client to "see" everyone no matter the distance if playing in a team?
00:08 < bridge> <robyt3> Might already be the default to always see team players. Always showing everyone should be `/showall`
00:09 < bridge> <davidlovesmath> looking at the ghosts code it looks like the ghosts need to be loaded from within a map
00:09 < bridge> <davidlovesmath> witch i mean makes sence
00:09 < bridge> <Sans> everyone in the team* i meant, so that the client can save all the ghosts
00:09 < bridge> <davidlovesmath> should i also fuzz the demo code?
00:10 < bridge> <robyt3> You could host a local server and and then play a ghost with the `gplay` command I think. Or modify the code slightly to make it possible
00:10 < bridge> <robyt3> You could host a local server and then play a ghost with the `gplay` command I think. Or modify the code slightly to make it possible
00:11 < bridge> <robyt3> You could, but the map is usually embedded in demos so you end up fuzzing that mostly
00:11 < bridge> <davidlovesmath> hmm mabey. but then i need to connect to a server making it was slower
00:11 < bridge> <robyt3> You could try limiting fuzzing only to snapshots
00:13 < bridge> <davidlovesmath> wait demos dont requre connecting to a server right?
00:13 < ws-client> <ChillerDragon> @avolicious
00:14 < bridge> <davidlovesmath> also is there a way to speed up the demos playback?
00:14 < bridge> <davidlovesmath> and how do i even save a demo?
00:14 < bridge> <davidlovesmath> @robyt3
00:15 < bridge> <Sans> @robyt3 I don't know which of the top left request review and the one in the pr summary i shouldve used but i've implemented the changes you requested on #9731
00:15 < bridge> <Sans> 
00:15 < bridge> <Sans> I suck at making pr's ðŸ˜©
00:15 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/9731
00:15 < bridge> <Sans> huh, neat
00:16 < bridge> <hectavoxel> i think up/down arrows on your keyboard
00:16 < bridge> <hectavoxel> or if you're using the ui, the up and down chevron symbols
00:19 < bridge> <davidlovesmath> where are the demos stored on linux?
00:21 < bridge> <robyt3> I'll take a look tomorrow
00:21 < bridge> <robyt3> `demos` folder
00:21 < bridge> <davidlovesmath> wheres that?
00:21 < bridge> <robyt3> $configdir
00:21 < bridge> <davidlovesmath> thanks
00:22 < bridge> <robyt3> You could also fuzz using the `demo_extract_chat` tool which doesn't use the map, or write a fuzzing test driver based on that
00:22 < bridge> <davidlovesmath> wait what does the ~ in the path mean
00:22 < bridge> <robyt3> Also look into *persistent mode* fuzzing using a custom test driver, which would be a lot faster
00:22 < bridge> <robyt3> That should be your home folder
00:22 < bridge> <davidlovesmath> ah ok
00:23 < bridge> <davidlovesmath> doesnt seem to work
00:23 < bridge> <davidlovesmath> https://cdn.discordapp.com/attachments/293493549758939136/1343362667779461201/image.png?ex=67bcff7a&is=67bbadfa&hm=76dec73822fb9d87cee064213f02e801c3221f7ca897f310b36283a2f55e45c2&
00:24 < bridge> <davidlovesmath> im probs just missunderstanding what your saying completly tbh
00:25 < bridge> <davidlovesmath> im gonna use deferd initilisason so shouldnt be that much faster
00:31 < bridge> <davidlovesmath> found it
00:31 < bridge> <davidlovesmath> its not in .teeworlds
00:31 < bridge> <davidlovesmath> its in .local/share/ddnet/demos
00:31 < bridge> <davidlovesmath> looks like thats outdated
00:35 < bridge> <oxyzo.> $configdir
00:35 < bridge> <davidlovesmath> oh ok
00:36 < bridge> <davidlovesmath> i missed that new part lol
00:37 < bridge> <fokkonaut> Was the aim bug fixed, when in /pause on "old" servers?
00:37 < bridge> <fokkonaut> the crosshairs rendered
00:43 < furo> You mean #9704? If so yes.
01:17 < bridge> <cyberfrighter> https://cdn.discordapp.com/attachments/293493549758939136/1343376305411981383/image.png?ex=67bd0c2d&is=67bbbaad&hm=c6c26ce43e9d018ef98e58c85c51028607ce0629f91b3298180b53b1d450f9d2&
01:24 < bridge> <hectavoxel> :justatest:
01:30 < bridge> <fokkonaut> @robyt3 I see now, i think. it's the approach where the last player id is used as an empty slot. Maybe you have added a check which doesnt allow rendering if the player object is missing (or smiliar). something like that is being done for that last id, in the player id map
01:30 < bridge> <fokkonaut> no idea what is happening here. i have extended my algorithm to work on 128p client now, and this is the result on the client :D
02:16 < bridge> <vappy19> Wooow
04:10 < bridge> <hectavoxel> i think my github broke
04:10 < bridge> <hectavoxel> https://cdn.discordapp.com/attachments/293493549758939136/1343419698028744747/image.png?ex=67bd3497&is=67bbe317&hm=e43d6a9c0cc3b989dd07572d2a8769d7038043ad64221def67aa62d05b08c8d9&
04:22 < bridge> <Sans> it does that sometimes
04:23 < bridge> <Sans> try viewing any pr's with changes across 10-20 files and your browser will struggle :)
09:41 < bridge> <Solly> Can we get less pixels please
09:41 < bridge> <Solly> But vscode can do it
09:43 < bridge> <Solly> So idk how GitHub struggles so
09:44 < bridge> <Solly> On l440 it just freezes the page forever and doesn't let me close it (unless I drag it into a new window and alt F4) or go back or forwards
09:44 < bridge> <Solly> But it queued all my actions sk
09:45 < bridge> <Solly> Very much good
10:01 < bridge> <protocolhttps> I havent fixed this yet
10:02 < bridge> <protocolhttps> maybe who knows fix? :nouis:
10:17 < bridge> <Solly> That's weird, I assume you are using asan
10:17 < bridge> <Solly> Asan would catch victim being -1 or otherwise oob, so I don't know how it gets past that
10:17 < bridge> <Solly> I assume the "this" is players[victim] anyway, try printing victim out with printf
10:18 < bridge> <Solly> Or using debugger to find the value at crash
10:18 < bridge> <Solly> Or using debugger
12:10 < bridge> <filoqcus> Can I get ClientId from pSelf?
12:10 < bridge> <filoqcus> :nouis:
12:18 < furo> @filoqcus `pSelf` is not a specific class. You will have to tell us which class it is in.
12:24 < bridge> <chillerdragon> But often you canâ€™t. Itâ€™s mostly inside pResult->m\_ClientId
12:24 < bridge> <chillerdragon> 
12:24 < bridge> <chillerdragon> pSelf usually refers to CServer or CGameContext
13:04 < bridge> <ryozuki> https://en.wikipedia.org/wiki/De_Bruijn_index
15:22 < bridge> <ryozuki> @milkeeycat i made a vscode grammar
15:23 < bridge> <milkeeycat> for your lang?
17:00 < bridge> <filoqcus> what is the difference between `m_pPool->Execute` and `ExecPlayerThread`
18:35 < bridge> <Jupstar âœª> @essigautomat are these with clamped valramp?
18:36 < bridge> <Jupstar âœª> or not clamped, but maxed
20:28 < ws-client> <ChillerDragon> @avolicious?
