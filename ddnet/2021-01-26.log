00:12 <+bridge> [ddnet] <heinrich5991> @TsFreddie is there an easy way to determine whether you're behind the great firewall of china? ^^
00:12 <+bridge> [ddnet] <heinrich5991> how would one detect this to change the map server to the one in china
00:40 <+bridge> [ddnet] <Learath2> @heinrich5991 well geoip
00:40 <+bridge> [ddnet] <Learath2> everyone in china is behind the great firewall, no?
00:46 <+bridge> [ddnet] <deen> @Learath2 but the client doesn't necessarily know its own ip address, would have to check that too
00:48 <+bridge> [ddnet] <Learath2> @deen we host the dns, so when they do the request we check the geolocation and give them the correct ip
00:55 <+bridge> [ddnet] <deen> atm cloudflare hosts the dns
01:38 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> @Learath2 U fool cloudflare dns is god only problem is teeworlds does not have hostnames
01:38 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> I saw noby did some rare shizzle with 2 servers ips on 1 server
09:26 <+bridge> [ddnet] <deen> @! é√∏1√∏ ûƒ±∆ùg that does not help at all with the problem that we are facing: Cloudflare only offers servers inside of China to Enterprise customers, so our large player base in China is getting maps very slowly.
10:05 <+ChillerDragon> @timakro there is grep -F for fixed strings but that does not help when you depend on line start. Looks like you have to switch to another tool like awk https://unix.stackexchange.com/a/282446
10:06 <+ChillerDragon> or a manual escaping with sed xd
10:07 <+ChillerDragon> yo bois how do i change the render mode in the client? seems like there is one to render in the world and one for the hud
10:14 <+ChillerDragon> seems like every component has its own MapscreenToGroup func like woot
10:20 <+ChillerDragon> ok got it somewhat working
10:24 <+bridge> [ddnet] <TsFreddie> https://cdn.discordapp.com/attachments/293493549758939136/803556078280900628/YDTJGK53A3R0XFET29F.bmp
10:24 <+bridge> [ddnet] <TsFreddie> https://cdn.discordapp.com/attachments/293493549758939136/803556078490746910/FAWKT2YCITHBGAY9J4.bmp
10:25 <+bridge> [ddnet] <TsFreddie> https://cdn.discordapp.com/attachments/293493549758939136/803556142700691476/unknown.png
10:25 <+bridge> [ddnet] <TsFreddie> https://cdn.discordapp.com/attachments/293493549758939136/803556163101917184/unknown.png
10:25 <+bridge> [ddnet] <Ama> Delete it and redownload
10:25 <+bridge> [ddnet] <TsFreddie> a tmp file existing doesn't allow client to redownload the map i seems
10:25 <+bridge> [ddnet] <Ama> It happens sometimes
10:25 <+bridge> [ddnet] <TsFreddie> it seems*
10:26 <+bridge> [ddnet] <TsFreddie> i know
10:38 <+bridge> [ddnet] <deen> I don't understand these permission problems. Why can't we overwrite a file we previously created ourselves?
10:40 <+ChillerDragon> @deen maybe ddnet client was run as admin before idk i think some win users do that to boost speed or something
10:41 <+ChillerDragon> or does it happen during one client run?
10:41 <+bridge> [ddnet] <deen> For me it never happened, just sometimes people report
10:41 <+ChillerDragon> ye i can also not reproduce
10:50 <+bridge> [ddnet] <TsFreddie> The map error sometimes go away after restart the game. Sometimes it is persistent. It is weird
11:46 <+bridge> [ddnet] <deen> @TsFreddie it might depend on antivirus software being used. maybe it interferes and somehow locks the files
12:49 <+bridge> [ddnet] <Ryozuki> :poggers:
12:50 <+bridge> [ddnet] <TsFreddie> Pog
12:50 <+bridge> [ddnet] <Ryozuki> Champ
12:51 <+bridge> [ddnet] <TsFreddie> Banned
12:51 <+bridge> [ddnet] <Ryozuki> @deen > So how can I build this? Do I need to get the discord libs from somewhere? Or just set DISCORD enabled in cmake for the official builds?
12:51 <+bridge> [ddnet] <Ryozuki> isnt there a pr on ddnet libs
12:51 <+bridge> [ddnet] <Ryozuki> https://github.com/ddnet/ddnet-libs/pull/16
12:52 <+bridge> [ddnet] <Ryozuki> :poggers:
13:16 <+bridge> [ddnet] <Ravie> have we had a not-big release in less than six months? üòÑ
13:17 <+bridge> [ddnet] <deen> Development activity is quite large üòÑ
13:24 <+ChillerDragon> what can i do automatically fix clang-format with the same style guide github action uses?
13:24 <+ChillerDragon> my local one formats tenerays on multiple lines and github actions does not accept it so i have to manually format
13:25 <+bridge> [ddnet] <deen> You'd need clang-format 10. I do it manually when it doesn't fit at the moment :/
13:36 <+ChillerDragon> hm k
13:36 <+ChillerDragon> the new one looks even worse than the current one
13:41 <+bridge> [ddnet] <Ryozuki> @deen why it doesnt build?
14:04 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> Hm
14:05 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> Why not let players download locally
14:17 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> @deen can we get more master servers? ü§°
15:07 <+bridge> [ddnet] <gerdoe> @deen don't forget about translations
15:08 <+bridge> [ddnet] <deen> @gerdoe did you see the failing rescue on freeze/dfreeze?
15:08 <+bridge> [ddnet] <gerdoe> on build checks or what?
15:08 <+bridge> [ddnet] <deen> Videos here: https://github.com/ddnet/ddnet/pull/3343
15:09 <+bridge> [ddnet] <deen> aaah, hammer unfreezes you
15:09 <+bridge> [ddnet] <deen> pretty obvious actually üòÑ
15:09 <+bridge> [ddnet] <gerdoe> whoops
15:10 <+bridge> [ddnet] <Learath2> @heinrich5991 even saw that coming but you said you tested it üòõ
15:10 <+bridge> [ddnet] <Learath2> one-tick unfreezes
15:10 <+bridge> [ddnet] <heinrich5991> ‚ù§Ô∏è
15:12 <+bridge> [ddnet] <gerdoe> okey, i guess it just should have `!m_FreezeTime` condition too
15:12 <+bridge> [ddnet] <Ryozuki> @deen laser too
15:13 <+bridge> [ddnet] <gerdoe> with old ones
15:13 <+bridge> [ddnet] <heinrich5991> what would that help?
15:13 <+bridge> [ddnet] <heinrich5991> you're unfrozen for a tick when you're being hammered
15:15 <+bridge> [ddnet] <gerdoe> > with old ones
15:15 <+bridge> [ddnet] <gerdoe> `IsGrounded() && tile != TILE_FREEZE && tile != TILE_DFREEZE && ftile != TILE_FREEZE && ftile != TILE_DFREEZE && !m_DeepFreeze`
15:15 <+bridge> [ddnet] <gerdoe> it solves heart problem and hammer unfreezes in freeze
15:15 <+bridge> [ddnet] <heinrich5991> I see
15:15 <+bridge> [ddnet] <gerdoe> or should it just check heart position... meh
15:16 <+bridge> [ddnet] <heinrich5991> except if you get hammered inside a heart üòÑ
15:16 <+bridge> [ddnet] <gerdoe> ye
15:16 <+bridge> [ddnet] <gerdoe> > or should it just check heart position... meh
15:16 <+bridge> [ddnet] <gerdoe> so this
15:17 <+bridge> [ddnet] <heinrich5991> or record whether you were frozen the last tick
15:17 <+bridge> [ddnet] <heinrich5991> and only if you're not frozen this tick *and* the last tick, save /r
15:18 <+bridge> [ddnet] <gerdoe> then we can delete old tiles check, hm?
15:18 <+bridge> [ddnet] <heinrich5991> idk, I'm just hoping üòÑ
15:41 <+bridge> [ddnet] <gerdoe> no, seems we shouldn't call it one-tick unfreeze xd
15:45 <+bridge> [ddnet] <Ryozuki> @Learath2 :poggers: i kinda fixed the token stuff
15:45 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/803636796906668083/unknown.png
15:45 <+bridge> [ddnet] <heinrich5991> nice üôÇ
15:48 <+bridge> [ddnet] <Ryozuki> @heinrich5991 i dont like it tho, the way it works for me is first making it a str and then parsing, i would prefer to read directly the integer tho
15:48 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/803637484176670720/unknown.png
15:48 <+bridge> [ddnet] <Ryozuki> the commented code is how i rly want it
15:48 <+bridge> [ddnet] <gerdoe> m_FreezeTick works strange
15:48 <+bridge> [ddnet] <Ryozuki> but it simply doesnt match
15:49 <+bridge> [ddnet] <heinrich5991> well, the number is in a string, no?
15:49 <+bridge> [ddnet] <heinrich5991> it makes sense that you need to call a parse() function
15:49 <+bridge> [ddnet] <Ryozuki> i guess
15:49 <+bridge> [ddnet] <Ryozuki> all the implementations i seen parse strings
15:50 <+bridge> [ddnet] <heinrich5991> well, it *IS* a string that is sent over the network
15:50 <+bridge> [ddnet] <Ryozuki> ah
15:50 <+bridge> [ddnet] <heinrich5991> like "1234\0"
15:50 <+bridge> [ddnet] <Ryozuki> true
15:50 <+bridge> [ddnet] <Ryozuki> i got confused i guess
15:50 <+bridge> [ddnet] <Ryozuki> xdd
15:56 <+bridge> [ddnet] <Ryozuki> > The int type is an integer encoded in the decimal system in a zero-terminated ASCII string.
15:56 <+bridge> [ddnet] <Ryozuki> it says it here but my brain said no
15:56 <+bridge> [ddnet] <Ryozuki> :feelsbadman:
15:57 <+bridge> [ddnet] <heinrich5991> oh, also for your other question from the other day:
15:57 <+bridge> [ddnet] <heinrich5991> > The receiver of such a server info can detect whether it has received the server info completely by comparing the number of players received with the number of players set in the main packet.
15:58 <+bridge> [ddnet] <Ryozuki> number of players
15:58 <+bridge> [ddnet] <Ryozuki> what does represent number of clients btw?
15:58 <+bridge> [ddnet] <heinrich5991> ah, that's probably wrong, should be number of clients* in both cases
15:58 <+bridge> [ddnet] <heinrich5991> players = non-spectator client
15:58 <+bridge> [ddnet] <Ryozuki> i se num of clients in my code rn
15:59 <+bridge> [ddnet] <heinrich5991> +1
15:59 <+bridge> [ddnet] <Ryozuki> use*
16:00 <+bridge> [ddnet] <Ryozuki> @heinrich5991 is it reasonable to expect to only need 1 "more" packet in the foreseeable future?
16:02 <+bridge> [ddnet] <heinrich5991> I get a maximum of 2624 bytes for the player info alone, maximum packet size is 1400, so I wouldn't bet on two packets being enough even today
16:02 <+bridge> [ddnet] <heinrich5991> (12+16+4+6+2+1)*64 = 2624
16:03 <+bridge> [ddnet] <gerdoe> @heinrich5991 nice solution!
16:03 <+bridge> [ddnet] <Ryozuki> ok
16:03 <+bridge> [ddnet] <gerdoe> it works better now
16:04 <+bridge> [ddnet] <heinrich5991> @gerdoe the "now and last tick" variant?
16:04 <+bridge> [ddnet] <gerdoe> yeah, Chr has LastFrozenTick boolean
16:04 <+bridge> [ddnet] <gerdoe> but corner problem is still here
16:04 <+bridge> [ddnet] <heinrich5991> corner?
16:05 <+bridge> [ddnet] <gerdoe> if you will go into freeze from corner your save position will be in freeze
16:05 <+bridge> [ddnet] <gerdoe> known thing?
16:06 <+bridge> [ddnet] <heinrich5991> maybe you need to make that freeze check at a different place
16:06 <+bridge> [ddnet] <heinrich5991> after you evaluated whether you should be frozen at this place
16:11 <+bridge> [ddnet] <Ryozuki> @heinrich5991 you mentioned you used unsafe code in libtw2, did you really need it or is it for perfomance reason? or more easy to do?
16:11 <+bridge> [ddnet] <Ryozuki> curious
17:01 <+bridge> [ddnet] <heinrich5991> you could get around it by allocating
17:02 <+bridge> [ddnet] <heinrich5991> but I don't want to allocate
17:02 <+bridge> [ddnet] <heinrich5991> so I guess you could say it's for performance
18:21 <+bridge> [ddnet] <hussainx3> :ddnet: suggestion:ddnet: 
18:21 <+bridge> [ddnet] <hussainx3> putting special /team 
18:21 <+bridge> [ddnet] <hussainx3> for top 5 
18:21 <+bridge> [ddnet] <hussainx3> or number 1 inside server
18:32 <+bridge> [ddnet] <Ama> @hussainx3 what is your sugestion you want a Command to show team ranks ?
18:40 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> Found a bug
18:40 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> On speedup
18:41 <+bridge> [ddnet] <Ryozuki> speedup is a bug itself
18:42 <+bridge> [ddnet] <Ryozuki> the bug u found is probs used
18:42 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> xD
18:42 <+bridge> [ddnet] <Ryozuki> on maps
18:42 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> All maps
18:42 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> i meant in speedups u can litterally stop moving if u move the other way
18:42 <+bridge> [ddnet] <Ryozuki> yep
18:42 <+bridge> [ddnet] <Ryozuki> its used in maps
18:42 <+bridge> [ddnet] <Ryozuki> there is crazier stuff
18:42 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> No No "Speedup" tile
18:42 <+bridge> [ddnet] <Ryozuki> u can hold momentum
18:43 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> tiles
18:43 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> Wtf
18:43 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> xD do u understand me
18:43 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> i don't mean a map
18:43 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> the tile
18:43 <+bridge> [ddnet] <Ryozuki> ye the tile
18:43 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> Yes
18:43 <+bridge> [ddnet] <Ryozuki> if u move along the speedup tile direction u will stop
18:43 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> why
18:43 <+bridge> [ddnet] <Ryozuki> physics
18:43 <+bridge> [ddnet] <Ryozuki> and its used in maps
18:43 <+bridge> [ddnet] <Ryozuki> to do parts
18:44 <+bridge> [ddnet] <Ryozuki> @Im 'corneum maybe u remember a map
18:44 <+bridge> [ddnet] <Ryozuki> ur the magician
18:44 <+bridge> [ddnet] <Ryozuki> mapgician
18:45 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> Nah
18:45 <+bridge> [ddnet] <m!ki> @! é√∏1√∏ ûƒ±∆ùg u high again?
18:45 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> Yes
18:45 <+bridge> [ddnet] <m!ki> i see
18:45 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> ü§° @m!ki i did not know u are in ddnet discord
18:46 <+bridge> [ddnet] <m!ki> lol im in since 2010
18:46 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> Damn
18:46 <+bridge> [ddnet] <Ama> you can even hold the same way and you stop moving
18:47 <+bridge> [ddnet] <Ama> @Ryozuki https://ddnet.tw/maps/Therapy/
18:47 <+bridge> [ddnet] <Ama> first part of the map is speeder bug
18:49 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> lol
18:49 <+bridge> [ddnet] <! é√∏1√∏ ûƒ±∆ùg> u guys know too much
19:11 <+bridge> [ddnet] <Ryozuki> isnt that what i said xd
19:15 <+bridge> [ddnet] <hussainx3> example /team 1 nobody can go inside Except top 5 and put colors rainbow for the team
19:18 <+bridge> [ddnet] <hussainx3> fun Feature for best one in map or top5
19:19 <+bridge> [ddnet] <hussainx3> fun Feature for best one in server or top5 in map
19:19 <+bridge> [ddnet] <jao> just change name to whoever is r1 lol
19:37 <+bridge> [ddnet] <Ama> i mean we are not fortnite or we would have paid skins and rainbow by now
19:49 <+bridge> [ddnet] <hussainx3> i not sure what you mean but why not?
19:49 <+bridge> [ddnet] <hussainx3> we need something To encourage players to get points or get good rank
19:53 <+bridge> [ddnet] <Ryozuki> data.tw domain would have been epic for the project i want to do
19:53 <+bridge> [ddnet] <Ryozuki> rip its taken
19:54 <+bridge> [ddnet] <Ryozuki> anyone has any domain name idea
19:54 <+bridge> [ddnet] <Ryozuki> related to data and teeworlds/ddnet
19:54 <+bridge> [ddnet] <Ryozuki> hm data seems to be an expensive name to have in ur domain xd
19:55 <+bridge> [ddnet] <gerdoe> datee
19:59 <+bridge> [ddnet] <Ryozuki> not good :feelsbadman:
20:01 <+bridge> [ddnet] <Ryozuki> teedata.tw :monkaS:
20:02 <+bridge> [ddnet] <Ryozuki> finding good domains is always hard
20:02 <+bridge> [ddnet] <jao> edgay.com
20:03 <+bridge> [ddnet] <Ryozuki> haha
20:03 <+bridge> [ddnet] <Ryozuki> so funny
20:09 <+bridge> [ddnet] <Ryozuki> https://github.com/rust-lang/chalk
20:09 <+bridge> [ddnet] <Ryozuki> PROLOG is everywhere
20:09 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
20:17 <+bridge> [ddnet] <gerdoe> ddbase
20:22 <+bridge> [ddnet] <Learath2> Nooo the token is just an int
20:22 <+bridge> [ddnet] <Learath2> 3 bytes sent in big endian order
20:23 <+bridge> [ddnet] <Learath2> Other ints within the serverinfo message are indeed strings though
20:25 <+bridge> [ddnet] <Ryozuki> not sure
20:25 <+bridge> [ddnet] <heinrich5991> @Learath2 I think you mix up receiving and sending
20:26 <+bridge> [ddnet] <Learath2> Either side there is no string parsing, encoding involved
20:26 <+bridge> [ddnet] <heinrich5991> https://github.com/ddnet/ddnet/blob/f08812b06a78156a6d61a0c5470b39e555fec395/src/engine/server/server.cpp#L2081
20:26 <+bridge> [ddnet] <heinrich5991> ADD_INT adds an int encoded as a ASCII string
20:26 <+bridge> [ddnet] <Learath2> We generate a 3byte token. In big endian order its bytes go into extra_token0 extra_token1 and token
20:26 <+bridge> [ddnet] <heinrich5991> yes, that's the serverinfo request
20:27 <+bridge> [ddnet] <heinrich5991> in the response, the token is encoded as an ASCII string that contains a decimal integer
20:27 <+bridge> [ddnet] <Ryozuki> ye
20:27 <+bridge> [ddnet] <Learath2> Ah the response
20:27 <+bridge> [ddnet] <Ryozuki> in rust i generate a u16 and a u8 and send it
20:27 <+bridge> [ddnet] <Ryozuki> and receive this decimal string
20:27 <+bridge> [ddnet] <Ryozuki> xd
20:27 <+bridge> [ddnet] <Learath2> That makes more sense, thought I was going insane there for a sec
20:28 <+bridge> [ddnet] <heinrich5991> @Ryozuki make sure you pack it correctly wrt endianness
20:28 <+bridge> [ddnet] <heinrich5991> üòâ
20:28 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/803708007006863410/unknown.png
20:28 <+bridge> [ddnet] <Ryozuki> hmmmm
20:28 <+bridge> [ddnet] <Learath2> He doesnt need to pack responses does he?
20:29 <+bridge> [ddnet] <heinrich5991> but requests
20:29 <+bridge> [ddnet] <heinrich5991> https://docs.rs/bytes/1.0.1/bytes/buf/trait.BufMut.html#method.put_u16
20:29 <+bridge> [ddnet] <heinrich5991> apparently that is big endian order
20:29 <+bridge> [ddnet] <Learath2> Yeah, and I think in that we only pack the token big endian
20:29 <+bridge> [ddnet] <Ryozuki> network uses big endian right?
20:29 <+bridge> [ddnet] <heinrich5991> I'd have preferred it to be in the method name
20:30 <+bridge> [ddnet] <Ryozuki> i mean the standard is using bend
20:30 <+bridge> [ddnet] <heinrich5991> most network protocols use big endian, yes
20:30 <+bridge> [ddnet] <Ryozuki> https://docs.rs/byteorder/1.4.2/byteorder/
20:30 <+bridge> [ddnet] <Ryozuki> with this u can explicitly do it
20:31 <+bridge> [ddnet] <Learath2> I wonder how this came to be with most cpus being little endian when the protocols were being invented
20:31 <+bridge> [ddnet] <Learath2> An unnecessary cycle waste during a time when cycles were actually a premium
20:32 <+bridge> [ddnet] <Ryozuki> > one point is that in a little-endian system, the address of a given value in memory, taken as a 32, 16, or 8 bit width, is the same.
20:32 <+bridge> [ddnet] <Ryozuki> üëÄ
20:33 <+bridge> [ddnet] <Ryozuki> > So, in short, ‚Äòon little endian systems, casts are a no-op.‚Äô
20:33 <+bridge> [ddnet] <Ryozuki> is this not true on big endian?
20:33 <+bridge> [ddnet] <Ryozuki> https://softwareengineering.stackexchange.com/questions/95556/what-is-the-advantage-of-little-endian-format
20:33 <+bridge> [ddnet] <Learath2> Huh, I thought it was
20:34 <+bridge> [ddnet] <Learath2> Not like you address the ends of values in big endian
20:34 <+bridge> [ddnet] <Ryozuki> its also for addition and substraction
20:35 <+bridge> [ddnet] <Patiga> doesnt the standard library also support the byteorder functionality?
20:35 <+bridge> [ddnet] <Patiga> ah
20:35 <+bridge> [ddnet] <Patiga> > Note that as of Rust 1.32, the standard numeric types provide built-in methods like to_le_bytes and from_le_bytes, which support some of the same use cases.
20:36 <+bridge> [ddnet] <Learath2> Ah I see what they meant about the casts
20:38 <+bridge> [ddnet] <Learath2> The way we define casts is why this happens
20:38 <+bridge> [ddnet] <Learath2> When we cast down we want to discard the most significant bytes
21:04 <+bridge> [ddnet] <heinrich5991> @Ryozuki but addition and subtraction happen in registers, mostly?
21:04 <+bridge> [ddnet] <heinrich5991> registers don't have byte order
21:04 <+bridge> [ddnet] <heinrich5991> https://github.com/ddnet/ddnet/pull/3492#issuecomment-767790313 did you mean that we send both messages to old clients?
21:04 <+bridge> [ddnet] <heinrich5991> @Learath2 ^
21:05 <+bridge> [ddnet] <Learath2> Yes
21:05 <+bridge> [ddnet] <heinrich5991> I wanted to give everyone the opportunity to implement the new protocol
21:05 <+bridge> [ddnet] <heinrich5991> also helps for demos etc.
21:06 <+bridge> [ddnet] <Learath2> Shouldn't they need to bump up the version?
21:07 <+bridge> [ddnet] <heinrich5991> hm. I think I like it more if you can get all the information, see also the demo
21:07 <+bridge> [ddnet] <heinrich5991> the demo saves the new information which makes it easier to write demo parsers if you only care about the new protocol
21:08 <+bridge> [ddnet] <heinrich5991> (note that this wasn't laziness, I could have put the sendmessage in the else branch with no extra effort)
21:08 <+bridge> [ddnet] <Learath2> All the information includes redundant information was my main concern
21:08 <+bridge> [ddnet] <Learath2> But I guess these aren't messages sent all the time, a little redundancy shouldn't matter here
21:09 <+bridge> [ddnet] <Learath2> Wait a demo saved by an old client wouldnt save the new extended message it doesnt recognize, would it?
21:09 <+bridge> [ddnet] <heinrich5991> I think it saves all messages
21:09 <+bridge> [ddnet] <heinrich5991> all game messages
21:09 <+bridge> [ddnet] <heinrich5991> let me check
21:10 <+bridge> [ddnet] <heinrich5991> ye, saves all game messages, before decoding them
21:11 <+bridge> [ddnet] <heinrich5991> https://github.com/ddnet/ddnet/blob/f08812b06a78156a6d61a0c5470b39e555fec395/src/engine/client/client.cpp#L2095-L2103
21:14 <+bridge> [ddnet] <Ryozuki> new protocol?
21:14 <+bridge> [ddnet] <Ryozuki> :poggers:
21:15 <+bridge> [ddnet] <heinrich5991> no, just a couple of messages converted from non-ex messages to ex messages
21:15 <+bridge> [ddnet] <Ryozuki> ah
21:15 <+bridge> [ddnet] <Ryozuki> Sv_DDRaceTime#m_Time
21:15 <+bridge> [ddnet] <Ryozuki> will this allow a nanosecond resolution timer?
21:16 <+bridge> [ddnet] <heinrich5991> sir? üòõ
21:16 <+bridge> [ddnet] <Ryozuki> i mean
21:16 <+bridge> [ddnet] <Ryozuki> ddnet time is in 00.00
21:16 <+bridge> [ddnet] <Ryozuki> why not nanoseconds
21:16 <+bridge> [ddnet] <heinrich5991> ah
21:16 <+bridge> [ddnet] <heinrich5991> well, we only tick 50 times per second, so every 0.02 seconds
21:16 <+bridge> [ddnet] <heinrich5991> we could potentially add random numbers beyond that, by trying to interpolate when exactly you hit the start line/finish line
21:16 <+bridge> [ddnet] <heinrich5991> I think race does that
21:16 <+bridge> [ddnet] <Ryozuki> hmm
21:17 <+bridge> [ddnet] <Ryozuki> trackmania has more resolution
21:17 <+bridge> [ddnet] <Ryozuki> and i dont think it runs at a crazy tickrate
21:17 <+bridge> [ddnet] <heinrich5991> only 0.01 I think?
21:17 <+bridge> [ddnet] <heinrich5991> tmnf at least
21:19 <+bridge> [ddnet] <Ryozuki> i guess ye
22:45 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/803742363272740874/Ii1zae7tWgUklTi6eSE_7YHoENA4ngh5abWIEUrA_jU.png
