00:03 <+bridge> <melo∆û> i'd assume its to determine the data type of the variable at runtime, not compile time maybe
00:05 <+bridge> <melo∆û> or maybe it was done that way and noone wants to refactor 800+ LoC over 50 files  :kek:
00:05 <+bridge> <melo∆û> or maybe it was done that way from the beginning and noone wants to refactor 800+ LoC over 50 files  :kek:
00:42 <+bridge> <learath2> You can't, it's type erasure, the console calls these callbacks and it can't know the type of `pUserData`
02:56 <+bridge> <yrrr_> so its a generic callback signature where the object to be passed is determined at runtime
02:59 <+bridge> <yrrr_> i dont see why though because every callback casts it to CGameContext  *
02:59 <+bridge> <yrrr_> unless i missed some
04:23 <+bridge> <APFFF> hi, whats the best way to check if I have set up my local  ddnet project correctly?
04:32 <+bridge> <Ewan> wdym
05:22 <+bridge> <louis> i guess if you're able to build it without problems and if it's up to date with the master branch of the github
05:22 <+bridge> <louis> what os are you on @apfff ?
05:24 <+bridge> <chillerdragon> What do you need it for? You can use the official client if you don‚Äôt mind editing a bigger C++ code base. Then there is also headless clients in JavaScript, ruby and python.
06:10 <+bridge> <Ewan> hi chiller
06:10 <+bridge> <Ewan> wanna gores
09:16 <+bridge> <fokkonaut> F-DDrace has that:
09:16 <+bridge> <fokkonaut> https://github.com/fokkonaut/F-DDrace/blob/de3299d92ed85bd7c64c1f098ae7990d2b5155d6/src/engine/server/server.cpp#L3844
09:17 <+bridge> <fokkonaut> https://github.com/fokkonaut/F-DDrace/blob/de3299d92ed85bd7c64c1f098ae7990d2b5155d6/src/game/variables.h#L291
09:31 <+bridge> <ryozuki> morning europeans and others
09:31 <+bridge> <ryozuki> vote day :justatest:
09:32 <+bridge> <sedonya> morning
09:34 <+bridge> <fokkonaut> Yea dont remind me
09:34 <+bridge> <fokkonaut> I'll have to drive half an hour just to vote
10:35 <+bridge> <melo∆û> fr? lol - its only like 5 minutes for me
10:39 <+bridge> <jxsl13> fokko living in the woods
10:41 <+bridge> <AssassinTee> voted by letter days ago
10:41 <+bridge> <AssassinTee> then vote by letter, "Briefwahl"?
11:03 <+bridge> <zhn> what day
11:12 <+bridge> <chairn> don't live in the middle of nowhere :trollet:
11:12 <+bridge> <chairn> my vote office is in the same street
11:14 <+bridge> <robyt3> Not right now. See #5797
11:14 <+bridge> <DDNet> https://github.com/ddnet/ddnet/issues/5797
11:19 <+bridge> <fokkonaut> I was too late for Briefwahl, so now I have to drive to my old town in order to grab my confirmation so I can go vote
11:36 <+bridge> <jxsl13> don't need no confirmation. just your ID
11:36 <+bridge> <jxsl13> better with that letter but not necessary
11:48 <+bridge> <imilchshake> Thanks :)
12:08 <+bridge> <jxsl13> Robyt3 is on a killing spree on GitHub üëç
13:00 <@Learath2> Just noticed I broke my update script while messing around with it a couple months ago... Now I have 94 upgrades, 2 new and 73 reinstalls pending :D
13:47 <+bridge> <melo∆û> what kind of update script?
13:53 <+bridge> <learath2> It's my gentoo rolling upgrade script
14:09 <+bridge> <APFFF> Windows
14:10 <+bridge> <yrrr_> i use msys2 for most development on windows. can only recommend
14:12 <+bridge> <APFFF> I barely ever use windows for coding. Usually macOS. Im a little lost
14:12 <+bridge> <APFFF> I had to install Python3 and Rust for this XD
14:12 <+bridge> <yrrr_> msys2 gives you a linux style cli environment with all the tools but its all windows native compiled
14:12 <+bridge> <APFFF> ah cool
14:13 <+bridge> <yrrr_> and it uses pacman as package manager so its easy to get all dependencies
14:13 <+bridge> <APFFF> does this exists as a VS Code extention?
14:13 <+bridge> <yrrr_> i use vscode for editing the code and then compile with the terminal
14:13 <+bridge> <yrrr_> i dont know if there is an extension
14:13 <+bridge> <yrrr_> is just use them in parallel
14:13 <+bridge> <APFFF> Are there no scripts in the ddnet project for building?
14:14 <+bridge> <yrrr_> cmake -B build -S .
14:14 <+bridge> <yrrr_> cmake --build build/ -j
14:23 <@Learath2> I would rather code on my phone with a keyboard before going back to windows
14:23 <+bridge> <APFFF> reddit ahh answer
14:23 <+bridge> <APFFF> true  tho
14:24 <+bridge> <APFFF> first i gotta make cmake work :justatest:
14:53 <+bridge> <TsFreddie> did Lerato dove into the shadow realm.
15:34 <+bridge> <louis> @apfff i would just recommend VS Studio
15:34 <+bridge> <louis> errr not vs studio i guess its' just VS (Visual Studio)
15:35 <+bridge> <milkeeycat> i recommend neovim
15:35 <+bridge> <louis> lots of support since its a widely used ide and as long as you're choosing the correct packages on installation, getting ddnet to compile is super straightforward
15:37 <+bridge> <louis> https://github.com/ddnet/ddnet?tab=readme-ov-file#building-on-windows-with-the-visual-studio-ide
15:39 <+bridge> <louis> then open up visual studio, clone the project if you don't already have it locally installed, then just press the beautiful green button and ur done
15:54 <+bridge> <teero777> on linux its just
15:54 <+bridge> <teero777> install dependencies
15:54 <+bridge> <teero777> `git clone https://github.com/ddnet/ddnet.git && cd ddnet && mkdir build && cd build && cmake .. && make -j$(nproc)`
15:55 <+bridge> <teero777> first you have to install 50gb of VS and then start it up (which takes another 10 min)
15:58 <+bridge> <louis> takes me 10 seconds from windows search to running the project üòÅ
16:00 <+bridge> <peter0x44> As if that's acceptable either
16:02 <+bridge> <louis> ah yes you need it done in 2 seconds so you can use the other 8 seconds thanking richard stallman
16:17 <+bridge> <learath2> Actually 2 seconds thanking stallman, 2 seconds praying to torvalds and the remaining 4 for mocking windows users
16:19 <+bridge> <milkeeycat> uh oh, i was writing code for last 30 mins without checking because I though I "knew" what I was doing. I didn't :pepeW:
16:19 <+bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1249367283420102730/image.png?ex=66670b74&is=6665b9f4&hm=1a927a146ea280171304b63f5ed75d6c4e15cf3f1044ce06b9ca1d16fcb5d2c6&
16:27 <+bridge> <peter0x44> That's not where the slowness ends
17:01 <+bridge> <APFFF> yeah but trouble getting MSVS Build Tools to work
17:37 <+bridge> <APFFF> Does DDNet.exe run the local Client?
17:51 <+bridge> <egyt> :gigachad:
17:59 <+bridge> <APFFF> I got my `build` folder now in VS Code. Can I now build the local client?
18:25 <+bridge> <milkeeycat> aaaay, I almost did basic aah function generation :owo:
18:25 <+bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1249398862116814849/image.png?ex=666728dd&is=6665d75d&hm=9704016ac9f8cf629b5f511d9b6b7c251c09e0f6630ef963db8f98a0469f55b9&
18:25 <+bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1249398862402162758/image.png?ex=666728dd&is=6665d75d&hm=d40dfbd804f7ffd51c3b475ccf590a8944b084c433dcd63478106d5e3ec370b7&
18:59 <+bridge> <melo∆û> im in my first coding session with furo - kinda nervous wish me luck!
19:08 <+bridge> <reitw> damn next doom trailer released, ig magnus still workin at machinegames
19:08 <+bridge> <reitw> DOOM the dark ages
19:15 <+bridge> <APFFF> "couldnt find `libfreetype.dll`" when executing DDNet.exe. Anyone familiar with this Error?
19:15 <+bridge> <APFFF> https://cdn.discordapp.com/attachments/293493549758939136/1249411505007366174/ddnet_client_error1.JPG?ex=666734a3&is=6665e323&hm=6fade51fcebf659ffae2d737f1ea635a2c466b1e2f6a717710c94564e735ae03&
19:15 <+bridge> <APFFF> as well as: `libpng16-16.dll, SDL2.dll, avformat-60.dll`
19:16 <+bridge> <APFFF> "couldnt find `libfreetype.dll`" when executing` DDNet.exe`. Anyone familiar with this Error?
19:16 <+bridge> <APFFF> https://cdn.discordapp.com/attachments/293493549758939136/1249411505007366174/ddnet_client_error1.JPG?ex=666734a3&is=6665e323&hm=6fade51fcebf659ffae2d737f1ea635a2c466b1e2f6a717710c94564e735ae03&
19:20 <+bridge> <melo∆û> are you using msvc? - i had that issue with msvc .. :D
19:22 <+bridge> <APFFF> yes
19:22 <+bridge> <melo∆û> visual studio code i assume?
19:22 <+bridge> <APFFF> VS Code yes
19:22 <+bridge> <APFFF> It seems to build fine tho
19:22 <+bridge> <melo∆û> visual studio / clion will move the deps correctly, the .dll files are built and exist - you just have to put them into the same folder as DDNet
19:22 <+bridge> <melo∆û> i used a script for it - let me see if i can find it
19:23 <+bridge> <APFFF> what folder do they have to be in?
19:23 <+bridge> <APFFF> ah, overread
19:24 <+bridge> <melo∆û> ```python
19:24 <+bridge> <melo∆û> import os
19:24 <+bridge> <melo∆û> import shutil
19:24 <+bridge> <melo∆û> 
19:24 <+bridge> <melo∆û> source_dirs = [
19:24 <+bridge> <melo∆û>     ('c:/Users/Anwender/Projects/ddnet/build/Debug', 'c:/Users/Anwender/Projects/ddnet/build/'),
19:24 <+bridge> <melo∆û> ]
19:24 <+bridge> <melo∆û> 
19:24 <+bridge> <melo∆û> for source_dir, destination_dir in source_dirs:
19:24 <+bridge> <melo∆û>     if not os.path.exists(source_dir):
19:24 <+bridge> <melo∆û>         print(f"Source directory {source_dir} does not exist. Skipping.")
19:24 <+bridge> <melo∆û>         continue
19:24 <+bridge> <melo∆û>     
19:24 <+bridge> <melo∆û>     os.makedirs(destination_dir, exist_ok=True)
19:24 <+bridge> <melo∆û>     
19:24 <+bridge> <melo∆û>     for filename in os.listdir(source_dir):
19:24 <+bridge> <melo∆û>         if filename == 'DDNet.exe' or filename == 'steam_api.dll' or filename == 'DDNet-Server.exe':
19:24 <+bridge> <melo∆û>             source_file = os.path.join(source_dir, filename)
19:24 <+bridge> <melo∆û>             destination_file = os.path.join(destination_dir, filename)
19:24 <+bridge> <melo∆û>             
19:24 <+bridge> <melo∆û>             try:
19:24 <+bridge> <melo∆û>                 shutil.copy(source_file, destination_file)
19:24 <+bridge> <melo∆û>                 print(f"Moved {source_file} to {destination_file}")
19:25 <+bridge> <melo∆û>             except FileExistsError:
19:25 <+bridge> <melo∆û>                 print(f"{destination_file} already exists. Skipping.")
19:25 <+bridge> <melo∆û> 
19:25 <+bridge> <melo∆û> input("Done...")
19:25 <+bridge> <melo∆û> ```
19:25 <+bridge> <melo∆û> 
19:25 <+bridge> <melo∆û> change the source_dirs to yours, the rest should just work
19:25 <+bridge> <melo∆û> (please dont bash the script, i suck at python)
19:25 <+bridge> <melo∆û> (please dont hate onthe script, i suck at python)
19:25 <+bridge> <melo∆û> (please dont hate on the script, i suck at python)
19:25 <+bridge> <APFFF> That script can be executed anywhere?
19:25 <+bridge> <melo∆û> yes, it takes the absolute path
19:29 <+bridge> <melo∆û> im now using msys2, and i highly recommend it for ease of use - (thanks Ewan), no idea how clion and/or visual studio moves them, once i find out i will update the github Readme with neccessary steps lmao
19:30 <+bridge> <APFFF> I'm happy it works xD
19:31 <+bridge> <APFFF> not making changes rn
19:31 <+bridge> <APFFF> thx for the script
19:31 <+bridge> <melo∆û> glad it worked!
19:31 <+bridge> <APFFF> what command do you use to build
19:32 <+bridge> <melo∆û> `cmake ..` and `cmake --build . -j` or `cmake --build . -j --clean-first`
19:32 <+bridge> <APFFF> cmake -B build -S .
19:32 <+bridge> <APFFF> cmake --build build/ -j
19:32 <+bridge> <APFFF> ups
19:33 <+bridge> <melo∆û> just go into the build folder - that way you can remove the -S definition and your cmake --build command looks cleaner :P
19:33 <+bridge> <melo∆û> just go into the build folder - that way you can remove the -S definition and your `cmake --build` command looks cleaner :P
19:33 <+bridge> <melo∆û> but yes
19:34 <+bridge> <APFFF> Just copy pasted those :justatest:
19:34 <+bridge> <APFFF> i have never done anything with cmake ever
19:34 <+bridge> <APFFF> nor have I touched C++ ever
19:34 <+bridge> <APFFF> :owo:
19:34 <+bridge> <melo∆û> :P thats fair ngl - but you followed the readme?
19:34 <+bridge> <APFFF> yeah
19:35 <+bridge> <APFFF> at least for the Building
19:35 <+bridge> <melo∆û> so it still isnt clear enough.. - god damn it!
19:35 <+bridge> <melo∆û> rewrote it twice now!
19:35 <+bridge> <melo∆û> XD
19:35 <+bridge> <APFFF> I had to use a lot of ChatGPT
19:35 <+bridge> <APFFF> getting MSVC Build Tools to work was a little headache
19:36 <+bridge> <melo∆û> :feelsbadman:  mind dropping me a DM for things that were unclear ? (you can type those in german) - so i might update the readme once more if its somethign i can elaborate further
19:36 <+bridge> <APFFF> Some environment PATH variables were wrong
19:36 <+bridge> <melo∆û> oh the installer should set those correctly...
19:36 <+bridge> <melo∆û> :feelsbadman:  mind dropping me a DM for things that were unclear ? (you can type those in german) - so i might update the readme once more if its something i can elaborate further
19:36 <+bridge> <APFFF> omg I already lowkey forgot maybe I can look into my chatgpt logs
19:36 <+bridge> <melo∆û> :kek:
19:36 <+bridge> <APFFF> VS Installer confusing af
19:37 <+bridge> <APFFF> The README for Visual Studio was straight forward tho
19:38 <+bridge> <melo∆û> yeah heinrich suggested i re-add it but it was a little flawed so i rewrote it
19:38 <+bridge> <APFFF> Visual Studio lowkey the worst IDEA I've ever seen
19:39 <+bridge> <APFFF> .dll files still not found
19:39 <+bridge> <APFFF> :/
19:39 <+bridge> <APFFF> even though your script moved them
19:39 <+bridge> <melo∆û> (same imo) :P - but heinrich was right with what he said
19:39 <+bridge> <melo∆û> 
19:39 <+bridge> <melo∆û> > Someone knowing their IDE can already do what they need. The README is for people who need help with the compilation process. I don't think that adding choices is a good idea there.
19:39 <+bridge> <melo∆û> > 
19:39 <+bridge> <melo∆û> > We also don't explain how to set up various IDEs on Linux, we just get the user to a point where they can compile the project.
19:39 <+bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1249417698849587291/image.png?ex=66673a68&is=6665e8e8&hm=5f4837da1586b3691113b1122c605ec22290d679a1b7ee44e9457bfa29d1c64e&
19:40 <+bridge> <melo∆û> o rly? thats odd - are the .dll's and the .exe files in the same directory?
19:40 <+bridge> <melo∆û> maybe the source and destination path is the wrong way
19:40 <+bridge> <APFFF> .exe are in Release
19:41 <+bridge> <melo∆û> oh did you specify build/Release ?
19:41 <+bridge> <melo∆û> or build/Debug
19:41 <+bridge> <melo∆û> i always compile with Debug :P
19:41 <+bridge> <APFFF> ah i did Debug
19:41 <+bridge> <APFFF> whats the difference?
19:42 <+bridge> <APFFF> Does it not log with Release?
19:42 <+bridge> <APFFF> Still not workling
19:42 <+bridge> <melo∆û> from what i know, release it optimized to the point that debugging will/can be harder
19:42 <+bridge> <melo∆û> from what i know, release optimizes it to the point that debugging will/can be harder
19:43 <+bridge> <APFFF> my tree: D:/Coding/DDnet_coding/ddnet/..
19:43 <+bridge> <APFFF> .dll files are actually in ../DDnet_coding/..
19:43 <+bridge> <APFFF> .dll files are actually in ../DDnet_coding
19:44 <+bridge> <melo∆û> but is the .exe in the same directory?
19:44 <+bridge> <melo∆û> the .exe file and the .dll files have to be in the same directory for it to work
19:44 <+bridge> <APFFF> exe is in DDnet_coding/debug
19:44 <+bridge> <APFFF> ok
19:44 <+bridge> <melo∆û> huuuh you have debug AND release? thats odd - move it out to the .dll files
19:45 <+bridge> <APFFF> ima move them manually
19:45 <+bridge> <melo∆û> ye
19:45 <+bridge> <APFFF> yeah
19:45 <+bridge> <zhn> what's wrong with win setup :P
19:46 <+bridge> <APFFF> https://cdn.discordapp.com/attachments/293493549758939136/1249419256077221888/message.txt?ex=66673bdb&is=6665ea5b&hm=727774cc5677ddf43c2cd17c6a1e8f9335a9dcf7b66854722edb72faae2a2a7f&
19:46 <+bridge> <APFFF> there is DIR Release and DIR debug
19:46 <+bridge> <APFFF> both gut executables like DDNet.exe
19:48 <+bridge> <melo∆û> open a terminal in there - do the following:
19:48 <+bridge> <melo∆û> 
19:48 <+bridge> <melo∆û> `rm -Force debug` // change to the folder name debug 
19:48 <+bridge> <melo∆û> `rm -Force Release` // change to the folder name release
19:48 <+bridge> <melo∆û> `mkdir build`
19:48 <+bridge> <melo∆û> `cd build`
19:48 <+bridge> <melo∆û> `cmake ..`
19:48 <+bridge> <melo∆û> `cmake --build . -J`
19:48 <+bridge> <APFFF> in /DDnet_coding ?
19:48 <+bridge> <melo∆û> i guess
19:49 <+bridge> <APFFF> ah whats the windows cmd for rm
19:52 <+bridge> <APFFF> `rmdir /S /Q debug
19:52 <+bridge> <APFFF> rmdir /S /Q release
19:52 <+bridge> <APFFF> mkdir build //already exists
19:52 <+bridge> <APFFF> cd build
19:52 <+bridge> <APFFF> cmake ..
19:52 <+bridge> <APFFF> cmake --build . -j`
19:52 <+bridge> <APFFF> is what i did
19:52 <+bridge> <APFFF> ```rmdir /S /Q debug
19:52 <+bridge> <APFFF> rmdir /S /Q release
19:52 <+bridge> <APFFF> mkdir build //already exists
19:52 <+bridge> <APFFF> cd build
19:53 <+bridge> <APFFF> cmake ..
19:53 <+bridge> <APFFF> cmake --build . -j```
19:53 <+bridge> <APFFF> ```rmdir /S /Q debug
19:53 <+bridge> <APFFF> rmdir /S /Q release
19:53 <+bridge> <APFFF> mkdir build           //already exists
19:53 <+bridge> <APFFF> cd build
19:53 <+bridge> <APFFF> cmake ..
19:53 <+bridge> <APFFF> cmake --build . -j```
19:53 <+bridge> <APFFF> ok what now
19:54 <+bridge> <APFFF> ok, /Release and /Debug are gone now
19:58 <+bridge> <melo∆û> rm is a windows command :o
19:59 <+bridge> <melo∆û> wait build dir exists already? ah gg redo
19:59 <+bridge> <melo∆û> but remove build folder and recreate it
20:06 <+bridge> <APFFF> thats remove tho, right? :justatest:
20:06 <+bridge> <melo∆û> yes
20:06 <+bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1249424505877561394/image.png?ex=666740bf&is=6665ef3f&hm=2d5a964c5a2c48f8120d52827a5df8c9b58ba7443ce3a28af12bd165c6713cc5&
20:08 <+bridge> <APFFF> ```
20:08 <+bridge> <APFFF> PS D:\Coding\DDnet_coding> cmake ..
20:08 <+bridge> <APFFF> CMake Warning:
20:08 <+bridge> <APFFF>   Ignoring extra path from command line:
20:08 <+bridge> <APFFF> 
20:08 <+bridge> <APFFF>    ".."
20:08 <+bridge> <APFFF> 
20:08 <+bridge> <APFFF> 
20:08 <+bridge> <APFFF> CMake Error: The source directory "D:/Coding" does not appear to contain CMakeLists.txt.
20:08 <+bridge> <APFFF> Specify --help for usage, or press the help button on the CMake GUI. ```
20:09 <+bridge> <APFFF> i skipped cmake ..
20:09 <+bridge> <APFFF> i skipped `cmake ..`
20:11 <+bridge> <teero777> powershell xd
20:11 <+bridge> <melo∆û> omg cmd doesnt have rm
20:11 <+bridge> <melo∆û> :kek:
20:22 <+bridge> <toku.kunavara> thx
20:23 <+bridge> <fokkonaut> np
20:25 <+bridge> <Ewan> i told u already it's a powershell alias
20:25 <+bridge> <Ewan> it just wraps powershell's equivalent command
20:25 <+bridge> <Ewan> Remove-Item
20:26 <+bridge> <fokkonaut> hi ewan
20:26 <+bridge> <melo∆û> <a:catxplosion:1082715870893195274>
20:26 <+bridge> <Ewan> hi
20:26 <+bridge> <Ewan> https://media.discordapp.net/attachments/809939890480349184/959927440589856798/Sprite-0001.gif
20:26 <+bridge> <fokkonaut> hi üçà
20:27 <+bridge> <Ewan> üçâ
20:32 <+bridge> <melo∆û> hi fokko
20:32 <+bridge> <melo∆û> https://tenor.com/view/ewan-rare-w-rare-ewan-w-gif-14058647437019477120
20:32 <+bridge> <Ewan> https://tenor.com/view/cat-gif-cat-gif-ewan-brook-cat-gif-8324929138843358060
20:33 <+bridge> <Ewan> why is he bald
20:34 <+bridge> <Ewan> https://www.youtube.com/watch?v=gax35QKkiag
21:38 <+bridge> <fokkonaut> Any ideas what I can do about this?
21:38 <+bridge> <fokkonaut> https://github.com/fokkonaut/F-DDrace/actions/runs/9439012628/job/25996628598
21:40 <+bridge> <zhn> https://stackoverflow.com/questions/27736618/why-are-sem-init-sem-getvalue-sem-destroy-deprecated-on-mac-os-x-and-w
21:40 <+bridge> <zhn> looks liek this
21:40 <+bridge> <zhn> like*
21:41 <+bridge> <fokkonaut> how does ddnet handle this?
21:41 <+bridge> <robyt3> You are somehow compiling for macOS but not `CONF_PLATFORM_MACOS`
21:41 <+bridge> <zhn> better ask why macos doesn't support posix semaphores xddd
21:42 <+bridge> <robyt3> Our implementation of semaphores doesn't use those functions on macOS only on other Unix
21:42 <+bridge> <robyt3> You are somehow compiling for macOS but not setting `CONF_PLATFORM_MACOS`
21:42 <+bridge> <fokkonaut> How can it happen that it's not defined?
21:43 <+bridge> <fokkonaut> ^
21:44 <+bridge> <zhn> something is wrong with cmakelists i guess (sorry for prone answer)
21:45 <+bridge> <robyt3> I'd first try dropping in the latest ddnet system.cpp/h instead
21:45 <+bridge> <fokkonaut> impossible, im based on 0.7
21:49 <+bridge> <robyt3> You mixed `CONF_PLATFORM_MACOSX` and `CONF_PLATFORM_MACOS` macros in your code
21:49 <+bridge> <robyt3> Replace all with `CONF_PLATFORM_MACOS`
21:50 <+bridge> <robyt3> And replace your `detect.h` with ours, I think that should simply work if you do the MACOSX -> MACOS change
21:54 <+bridge> <fokkonaut> Thanks
22:00 <+bridge> <fokkonaut> Any ideas about this one? xD
22:00 <+bridge> <fokkonaut> https://github.com/fokkonaut/F-DDrace/actions/runs/9439097943/job/25996814112
22:02 <+bridge> <robyt3> Copy `str_format_v` from ddnet so you don't need to pragma ignore the warning which doesn't seem to work
22:03 <+bridge> <fokkonaut> its the same
22:03 <+bridge> <robyt3> In particular, copy also the part in the header file and add `GNUC_ATTRIBUTE`
22:03 <+bridge> <robyt3> It's not?
22:03 <+bridge> <fokkonaut> https://github.com/ddnet/ddnet/blob/master/src/base/system.cpp#L2767
22:04 <+bridge> <fokkonaut> wdym?
22:04 <+bridge> <robyt3> And your system.h as additional `pragma clang diagnostic push`, not sure why that causes the warning though
22:04 <+bridge> <robyt3> nvm, about that, looks like you also have the attribute in the header
22:04 <+bridge> <fokkonaut> xd
22:05 <+bridge> <robyt3> ```
22:05 <+bridge> <robyt3> #ifndef __USE_GNU
22:05 <+bridge> <robyt3> #define __USE_GNU
22:05 <+bridge> <robyt3> #endif
22:05 <+bridge> <robyt3> ```
22:05 <+bridge> <robyt3> Looks like you don't have this
22:05 <+bridge> <robyt3> No idea if that's the magic you need
22:06 <+bridge> <fokkonaut> where?
22:06 <+bridge> <robyt3> Same as in upstream
22:06 <+bridge> <robyt3> system.h
22:10 <+bridge> <fokkonaut> Doesnt work
22:10 <+bridge> <fokkonaut> xD
22:10 <+bridge> <robyt3> You also need to add the declaration for `str_format_v` to `system.h`: 
22:10 <+bridge> <robyt3> ```
22:10 <+bridge> <robyt3> int str_format_v(char *buffer, int buffer_size, const char *format, va_list args)
22:10 <+bridge> <robyt3>     GNUC_ATTRIBUTE((format(printf, 3, 0)));
22:10 <+bridge> <robyt3> ```
22:10 <+bridge> <robyt3> With the correct `GNUC_ATTRIBUTE` attribute
22:10 <+bridge> <robyt3> Then you don't need to suppress the warning for clang and the CI shouldn't complain
22:11 <+bridge> <fokkonaut> funny enough, there was no declaration of it at all
22:11 <+bridge> <fokkonaut> haha
22:15 <+bridge> <egyt> Appreciated by Richard Matthew Stallman himself!
22:19 <+bridge> <fokkonaut> https://github.com/fokkonaut/F-DDrace/actions/runs/9439204893/job/25997057320
22:19 <+bridge> <fokkonaut> Do I have to fix all of these?
22:44 <+bridge> <fokkonaut> @robyt3 https://github.com/fokkonaut/F-DDrace/actions/runs/9439360736/job/25997386575
22:44 <+bridge> <robyt3> Would be better I guess since it can find bugs
22:45 <+bridge> <fokkonaut> `ninja: error: 'package_dmg', needed by 'CMakeFiles/package_default', missing and no known rule to make it`
22:46 <+bridge> <robyt3> Looks like you need to `package_dmg` related stuff from ddnet's CMakeLists
22:46 <+bridge> <robyt3> Looks like you need to copy the `package_dmg` related stuff from ddnet's CMakeLists
22:46 <+bridge> <robyt3> It's missing in yours
22:47 <+bridge> <fokkonaut> thanks
22:47 <+bridge> <APFFF> How can I run the tests on my branch?
22:47 <+bridge> <fokkonaut> You need to add `.github/workflows/build.yaml`
22:48 <+bridge> <fokkonaut> but you need to maintain it every once in a while
22:48 <+bridge> <justniceasalways> https://cdn.discordapp.com/attachments/293493549758939136/1249465236252000346/image.png?ex=666766ae&is=6666152e&hm=2aada4e5f9884b82a83d4b002819e467f2fcd7843e25b05710afddec04c354ec&
22:48 <+bridge> <justniceasalways> -17 - 10
22:48 <+bridge> <justniceasalways> -17 ??
22:48 <+bridge> <justniceasalways> Idk how to reproduct it
22:49 <+bridge> <melo∆û> You can enable it on your fork  somewhere @apfff, cant Check myself where exactly tho
22:51 <+bridge> <fokkonaut> Do you know which stuff containing `dmg` I need?
22:53 <+bridge> <robyt3> I'd start by copying every line/block containing `dmg`
22:53 <+bridge> <robyt3> Or look at the diff between your CMakeLists and ddnet
22:53 <+bridge> <fokkonaut> what even is dmg? do i need "dmgbuild"?
22:54 <+bridge> <robyt3> I think it's like an application package
22:54 <+bridge> <robyt3> So like zip file that can be installed with a fancy icon
22:55 <+bridge> <fokkonaut> it's some client stuff no? I could remove it entirely
22:55 <+bridge> <fokkonaut> it's a server repo only
22:55 <+bridge> <fokkonaut> `if(CLIENT AND DMGBUILD)`
22:55 <+bridge> <fokkonaut> that's where it's inside
22:56 <+bridge> <robyt3> Not sure if there's a .dmg separately for the server on macOS
23:00 <+bridge> <fokkonaut> dmg only occurs in scripts/dmg.py and the few lines in my cmakelists.txt
23:00 <+bridge> <fokkonaut> i think it's useless
23:00 <+bridge> <fokkonaut> oh wait
23:00 <+bridge> <fokkonaut> or does the CI need it for packaging?
23:01 <+bridge> <fokkonaut> ^
23:03 <+bridge> <robyt3> `dmg.py` is an old file, ddnet only has `dmgsettings.py`
23:04 <+bridge> <robyt3> maybe still from bam
23:04 <+bridge> <fokkonaut> ah
23:12 <+bridge> <fokkonaut> `pip3 install --break-system-packages dmgbuild`
23:12 <+bridge> <fokkonaut> This probably does the trick
23:12 <+bridge> <reitw> ddnet/other projects should definetly make a virtual env for that lol
23:12 <+bridge> <reitw> instead of doing stuff like that
23:13 <+bridge> <reitw> (I said ddnet, idk if they requires to do that)
23:15 <+bridge> <fokkonaut> ok, did not
23:16 <+bridge> <fokkonaut> https://cdn.discordapp.com/attachments/293493549758939136/1249472258255093841/image.png?ex=66676d38&is=66661bb8&hm=15a6cdcef52521ff24e0a4904168372cb175cf24fbca4bf79110dc555698aa03&
23:17 <+bridge> <robyt3> If you don't want to package dmg files for macOS you should remove the `set(PACKAGE_DEFAULT dmg)`
23:18 <+bridge> <fokkonaut> what does that do? i dont really understand that
23:18 <+bridge> <robyt3> Otherwise you need to add
23:18 <+bridge> <robyt3> ```
23:18 <+bridge> <robyt3> add_custom_target(package_dmg DEPENDS ${CPACK_PACKAGE_FILE_NAME}.dmg)
23:18 <+bridge> <robyt3> list(APPEND PACKAGE_TARGETS package_dmg)
23:18 <+bridge> <robyt3> ```
23:18 <+bridge> <robyt3> and probably more to add the `package_dmg` CMake target if you want to support building dmg files
23:19 <+bridge> <fokkonaut> What is a dmg file
23:19 <+bridge> <fokkonaut> xD
23:19 <+bridge> <robyt3> Like an APK but for macOS
23:19 <+bridge> <robyt3> meant to reply to this
23:19 <+bridge> <fokkonaut> ah
23:19 <+bridge> <robyt3> It's an archive that macOS users can share to distribute the game
23:20 <+bridge> <fokkonaut> ahhh okay
23:20 <+bridge> <fokkonaut> i see
23:20 <+bridge> <fokkonaut> thanks a lot
23:20 <+bridge> <robyt3> This sets a variable, which is used in `add_custom_target(package_default DEPENDS package_${PACKAGE_DEFAULT})` to set the other target as a dependency
23:21 <+bridge> <robyt3> so it depends on `package_dmg` target for macOS, or `package_zip` for Windows
23:22 <+bridge> <fokkonaut> ah okay, i dont own any apple devices. is that convenient? whats the best way to fix it for this server-only repo?
23:22 <+bridge> <fokkonaut> I think adding package_dmg is the way to go
23:23 <+bridge> <fokkonaut> But i'm confused, as it's only used in if(CLIENT) in ddnet
23:23 <+bridge> <fokkonaut> https://github.com/ddnet/ddnet/blob/master/CMakeLists.txt#L3139C1-L3219C1
23:24 <+bridge> <robyt3> I think it bundles client and server into one dmg-file and there are metadata files so a launcher is shown to start either
23:25 <+bridge> <fokkonaut> So if I only have a server, is it required?
23:26 <+bridge> <robyt3> We don't bundle zip files with only server either for ddnet only for client+server. but if you only have server then I guess you should still bundle it
23:26 <+bridge> <fokkonaut> okay
23:27 <+bridge> <fokkonaut> I have no idea how all of that apple stuff works
23:27 <+bridge> <fokkonaut> think i wont figure it out today anymore lol
23:27 <+bridge> <robyt3> I don't have either, I usually look at the diff to ddnet to figure out what's missing üòÑ
23:28 <+bridge> <fokkonaut> :D
23:28 <+bridge> <fokkonaut> i'll just try smth
23:32 <+bridge> <fokkonaut> hmmm
23:32 <+bridge> <fokkonaut> ```if(DMG)
23:32 <+bridge> <fokkonaut>   add_custom_target(package_dmg DEPENDS ${CPACK_PACKAGE_FILE_NAME}.dmg)
23:32 <+bridge> <fokkonaut>   list(APPEND PACKAGE_TARGETS package_dmg)
23:32 <+bridge> <fokkonaut> endif()```
23:32 <+bridge> <fokkonaut> tried adding that but didnt work yxd
23:42 <+bridge> <robyt3> That will add a dependency for a target `${CPACK_PACKAGE_FILE_NAME}.dmg` so you'll also need to add `add_custom_command(OUTPUT ${CPACK_PACKAGE_FILE_NAME}.dmg` etc.
23:48 <+bridge> <fokkonaut> never really touched cmake a lot
23:50 <+bridge> <fokkonaut> can i disable the macos build for now?
23:50 <+bridge> <fokkonaut> without deleting it from build.yaml
23:54 <+bridge> <Ewan> how does build.yaml play into this
23:55 <+bridge> <fokkonaut> I just don't trigger the macOS CI then
23:55 <+bridge> <Ewan> well
23:55 <+bridge> <fokkonaut> windows and linux works
23:55 <+bridge> <Ewan> you can have it silently fail on macos
23:55 <+bridge> <fokkonaut> and apple users probably ‚Ñ¢Ô∏è know how to compile
23:55 <+bridge> <Ewan> but it might fail because there‚Äôs no symbol
23:55 <+bridge> <Ewan> fat chance
23:55 <+bridge> <fokkonaut> xd
23:57 <+bridge> <fokkonaut> i'll just add some comments
23:58 <+bridge> <fokkonaut> https://github.com/fokkonaut/F-DDrace/commit/51f1a230c6248cb13bd85d666120749e61cf5104
23:58 <+bridge> <fokkonaut> how does this still trigger macOS
23:59 <+bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1249483073653969027/IMG_5549.png?ex=6667774b&is=666625cb&hm=e0165ad81b8cc98ce942b711ff066097ac77778b8befb5836436998f24eb4b7c&
23:59 <+bridge> <fokkonaut> OH
