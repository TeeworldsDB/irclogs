05:26 < bridge> <_voxeldoesart> github is trying to shill their dumb ai thing while im trying to read code
05:26 < bridge> <_voxeldoesart> https://cdn.discordapp.com/attachments/293493549758939136/1152083024142409768/image.png
06:32 < bridge> <Ewan> doesn't look particulalry in the way
06:32 < bridge> <Ewan> doesn't look particularly in the way
06:33 < bridge> <pilonpl> Copilot is actually quite useful
06:34 < bridge> <pilonpl> Idk if you can call it an ai
06:35 < bridge> <pilonpl> It works more like advanced autocomplete
07:36 < bridge> <Jupstar ‚ú™> It is basically gpt
07:56 < bridge> <ryozuki> morning
08:38 < bridge> <MilkeeyCat> morning üçµ
09:07 < bridge> <headshotnoby> aye eye
10:26 < bridge> <Jupstar ‚ú™> @ryozuki i don't really have any good question sadly. So i ask a meta question:
10:26 < bridge> <Jupstar ‚ú™> Are you sometimes split  about your feelings while coding:  Fck anything i just do it quick & ugly now.
10:26 < bridge> <Jupstar ‚ú™> And then on the other side you remember how awesome it is, if you carefully planned everything and it works out....
10:26 < bridge> <Jupstar ‚ú™> in rust xd
10:28 < bridge> <ryozuki> oh ye
10:28 < bridge> <ryozuki> i love idiomatic over engineered rust
10:28 < bridge> <ryozuki> thats why on advent of code i do it like that
10:28 < bridge> <ryozuki> xd
10:28 < bridge> <ryozuki> remember?
10:29 < bridge> <Jupstar ‚ú™> i dunno, i dont follow advent of code xd
12:31 < bridge> <teero777> ‚òï
12:31 < bridge> <cyberFighter> imagine waking up and eating soup
12:33 < bridge> <ryozuki> <a:hotcoffee:635654970275921960>
12:33 < bridge> <teero777> What exactly happened to unity?
12:33 < bridge> <ryozuki> they changed their pricing
12:33 < bridge> <ryozuki> im not gonna do a todr
12:34 < bridge> <ryozuki> tldr
12:34 < bridge> <ryozuki> google
12:34 < bridge> <teero777> no.
12:34 < bridge> <ryozuki> but they fcked up big
12:34 < bridge> <ryozuki> thats it
12:34 < bridge> <teero777> k
12:35 < bridge> <teero777> Good thing ddnet doesn't use any game enginr
12:36 < bridge> <ryozuki> it uses teengine
12:36 < bridge> <ryozuki> its powered by slaving tees
12:47 < bridge> <teero777> slavery üëç
12:50 < bridge> <Jupstar ‚ú™> Did somebody call out my lifestyle
12:57 < bridge> <Jupstar ‚ú™> Man i really need the access to teeuniverse GitHub organization xd. I want to use it to host mod code, and have a fancy fitting name
13:21 < bridge> <ryozuki> i remembered i had ryocrater
13:22 < bridge> <ryozuki> my vulkan program
13:22 < bridge> <ryozuki> i feel the urge to make my game engine with it now
13:22 < bridge> <ryozuki> so many urges, nothing finished
13:22 < bridge> <ryozuki> such is life
13:22 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1152202879902416966/image.png
13:22 < bridge> <ryozuki> i made this long ago
13:22 < bridge> <ryozuki> with compute
13:25 < bridge> <Jupstar ‚ú™> True. I'd live to do so much shit, but zero time
13:25 < bridge> <Jupstar ‚ú™> And limits of human xd
13:25 < bridge> <ryozuki> xd
13:26 < bridge> <ryozuki> ```glsl
13:26 < bridge> <ryozuki> #version 460
13:26 < bridge> <ryozuki> 
13:26 < bridge> <ryozuki> layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
13:26 < bridge> <ryozuki> 
13:26 < bridge> <ryozuki> layout(set = 0, binding = 0, rgba8) uniform writeonly image2D img;
13:26 < bridge> <ryozuki> 
13:26 < bridge> <ryozuki> void main() {
13:26 < bridge> <ryozuki>     vec2 norm_coordinates = (gl_GlobalInvocationID.xy + vec2(0.5)) / vec2(imageSize(img));
13:26 < bridge> <ryozuki>     vec2 c = (norm_coordinates - vec2(0.5)) * 2.0 - vec2(1.0, 0.0);
13:26 < bridge> <ryozuki> 
13:26 < bridge> <ryozuki>     vec2 z = vec2(0.0, 0.0);
13:26 < bridge> <ryozuki>     float i;
13:26 < bridge> <ryozuki>     for (i = 0.0; i < 1.0; i += 0.005) {
13:26 < bridge> <ryozuki>         z = vec2(
13:26 < bridge> <ryozuki>             z.x * z.x - z.y * z.y + c.x,
13:26 < bridge> <ryozuki>             z.y * z.x + z.x * z.y + c.y
13:26 < bridge> <ryozuki>         );
13:26 < bridge> <ryozuki> 
13:26 < bridge> <ryozuki>         if (length(z) > 4.0) {
13:26 < bridge> <ryozuki>             break;
13:26 < bridge> <ryozuki>         }
13:26 < bridge> <ryozuki>     }
13:26 < bridge> <ryozuki> 
13:26 < bridge> <ryozuki>     vec4 to_write = vec4(vec3(i), 1.0);
13:26 < bridge> <ryozuki>     imageStore(img, ivec2(gl_GlobalInvocationID.xy), to_write);
13:26 < bridge> <ryozuki> }
13:27 < bridge> <ryozuki> ```
13:36 < bridge> <teero777> We have to fix that issue first then all the others should be doable
13:40 < bridge> <Jupstar ‚ú™> Maybe it makes no fun anymore then xd
13:40 < bridge> <Jupstar ‚ú™> Time for machines
15:23 < bridge> <ryozuki> lmao
15:23 < bridge> <ryozuki> i wanted to share my project on kog @jupeyy_keks
15:23 < bridge> <ryozuki> but u cant send github links
15:23 < bridge> <ryozuki> xd
15:27 < bridge> <heinrich5991> why not?
15:27 < bridge> <Jupstar ‚ú™> xd
15:27 < bridge> <Jupstar ‚ú™> closed source is king
15:28 < bridge> <Jupstar ‚ú™> but maybe they have troubles with bots xd
15:28 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1152234444715999302/F5__1JvW4AAG4RQ.png
15:31 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1152235239284936714/image.png
15:32 < bridge> <heinrich5991> they're probably operating with a whitelist, but sad that github isn't on it yet
15:41 < bridge> <ryozuki> i figured it
15:41 < bridge> <ryozuki> i lacked perms
15:41 < bridge> <ryozuki> xd
15:41 < bridge> <ryumaaaa> Only confirmed members can send stuff
15:41 < bridge> <ryumaaaa> <a:AINTNOWAY:1050211099158511626>
17:01 < bridge> <furooooooooooooooooooooooooooooo> @heinrich5991 Hey, I'm furo from #7181. I kinda have no clue how I would introduce the new server packet. Where would I start?
17:01 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/7181
17:02 < bridge> <heinrich5991> you can check datasrc/network.py
17:02 < bridge> <heinrich5991> add a message at the bottom, you can take a look at the existing messages
17:03 < bridge> <furooooooooooooooooooooooooooooo> I did take a look, could I extend the "Sv_VoteStatus" message? or should I create a new one?
17:03 < bridge> <heinrich5991> the messages that don't have a long name with an @ inside are not ours and shouldn't be extended
17:04 < bridge> <heinrich5991> you can either add a `Sv_VoteStatusEx` at the bottom that contains all these fields plus the one you want to add
17:04 < bridge> <heinrich5991> or just add a `Sv_YourVote` that contains just your vote
17:05 < bridge> <heinrich5991> I'm not sure entirely what's the better option
17:05 < bridge> <heinrich5991> intuitively, I'd guess it's the first one, but not sure
17:10 < bridge> <furooooooooooooooooooooooooooooo> ```python
17:10 < bridge> <furooooooooooooooooooooooooooooo> NetMessageEx("Sv_VoteStatusEx", "votestatus@netmsg.ddnet.tw", [
17:10 < bridge> <furooooooooooooooooooooooooooooo>   NetIntRange("m_Yes", 0, 'MAX_CLIENTS'),
17:10 < bridge> <furooooooooooooooooooooooooooooo>   NetIntRange("m_No", 0, 'MAX_CLIENTS'),
17:10 < bridge> <furooooooooooooooooooooooooooooo>   NetIntRange("m_Pass", 0, 'MAX_CLIENTS'),
17:10 < bridge> <furooooooooooooooooooooooooooooo>   NetIntRange("m_Total", 0, 'MAX_CLIENTS'),
17:10 < bridge> <furooooooooooooooooooooooooooooo>   NetIntRange("m_Voted", -1, 1),
17:10 < bridge> <furooooooooooooooooooooooooooooo> ]),
17:10 < bridge> <furooooooooooooooooooooooooooooo> ```
17:10 < bridge> <furooooooooooooooooooooooooooooo> Kinda like this?
17:12 < bridge> <heinrich5991> yes
17:12 < bridge> <heinrich5991> make it `@netmsg.ddnet.org` though
17:12 < bridge> <heinrich5991> we changed domains
17:12 < bridge> <heinrich5991> sorry, no example of this in the file yet
17:16 < bridge> <furooooooooooooooooooooooooooooo> Sure, next step would be to generate the other files I assume? How would I do that?
17:17 < bridge> <heinrich5991> it happens as part of the build, you don't need to worry about it
17:19 < bridge> <heinrich5991> you can simply start using the message
17:23 < bridge> <ryozuki> i recommend building to get autocomplete tho
17:58 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1152272329745895524/image.png
17:58 < bridge> <ryozuki> @jupeyy_keks
18:00 < bridge> <Jupstar ‚ú™> crab still sucks üò¨
18:04 < bridge> <ryozuki> @jupeyy_keks how to allocate in the host and give to guest
18:05 < bridge> <ryozuki> ```rust
18:05 < bridge> <ryozuki> #[repr(C)]
18:05 < bridge> <ryozuki> struct Game {
18:05 < bridge> <ryozuki>     data: [u8; 32],
18:05 < bridge> <ryozuki> }
18:05 < bridge> <ryozuki> ```
18:05 < bridge> <ryozuki> `  mem.grow(&mut store, bytes(std::mem::size_of::<Game>()));`
18:05 < bridge> <ryozuki> this? xD
18:07 < bridge> <ryozuki> i guess u need to take the offset before growing
18:07 < bridge> <ryozuki> so u know were to write?
18:08 < bridge> <Jupstar ‚ú™> if u did this once, then always write to this offset
18:08 < bridge> <Jupstar ‚ú™> where it grew
18:08 < bridge> <ryozuki> ok
18:10 < bridge> <furooooooooooooooooooooooooooooo> I created `Sv_YourVote` instead, my question now is. How would I support servers that don't send this packet? Do I create a GameInfoFlag?
18:24 < bridge> <kaffeine0> Keep the first vote until you receive Sv_YourVote which can override it.
18:24 < bridge> <kaffeine0> Keep the first vote highlighted until you receive `Sv_YourVote` which can override it.
18:26 < bridge> <kaffeine0> Keep the first vote highlighted until you receive `Sv_YourVote` which can override it. The server can detect DDNet version to decide whether it should (accept re-votes and) send `Sv_YourVote`.
18:26 < bridge> <kaffeine0> A little issue here is that (maybe) you can receive `Sv_YourVote` from a previous vote.
18:26 < bridge> <kaffeine0> Keep the first vote highlighted until you receive `Sv_YourVote` which can override it. The server can check the client DDNet version to decide whether it should (accept re-votes and) send `Sv_YourVote`.
18:26 < bridge> <kaffeine0> A little issue here is that (maybe) you can receive `Sv_YourVote` from a previous vote.
18:26 < bridge> <kaffeine0> Keep the first vote highlighted until you receive `Sv_YourVote` which can override it. The server can check the client DDNet version to decide whether it should (accept re-votes and) send `Sv_YourVote`.
18:27 < bridge> <kaffeine0> Keep the first vote highlighted until you receive `Sv_YourVote` which can override it. This behavior is compatible all old and new servers.
18:27 < bridge> <kaffeine0> The server can check the client DDNet version to decide whether it should (accept re-votes and) send `Sv_YourVote`.
18:27 < bridge> <kaffeine0> Keep the first vote highlighted until you receive `Sv_YourVote` which can override it. This behavior is compatible old and new servers.
18:27 < bridge> <kaffeine0> The server can check the client DDNet version to decide whether it should (accept re-votes and) send `Sv_YourVote`.
18:32 < bridge> <heinrich5991> exactly what Kaffeine said
18:40 < bridge> <kaffeine0> Keep the first vote highlighted until you receive `Sv_YourVote` which can override it. This behavior is compatible with old and new servers.
18:40 < bridge> <kaffeine0> The server can check the client DDNet version to decide whether it should (accept re-votes and) send `Sv_YourVote`.
18:41 < bridge> <ryozuki> @jupeyy_keks
18:41 < bridge> <ryozuki> did u use ExternRef
18:43 < bridge> <Jupstar ‚ú™> no, what does it do
18:43 < bridge> <ryozuki> idk
18:43 < bridge> <ryozuki> An opaque reference to some data. This reference can be passed through Wasm.
18:44 < bridge> <Jupstar ‚ú™> i do it a bit different from what u learn in the examples anyway
18:44 < bridge> <ryozuki> the thing is
18:45 < bridge> <ryozuki> no examples for complex stuff
18:45 < bridge> <ryozuki> such as calling a function passing a non copiable struct
18:45 < bridge> <ryozuki> xd
18:45 < bridge> <Jupstar ‚ú™> yeah.. it's pretty annoying
18:45 < bridge> <Jupstar ‚ú™> to get into it
18:45 < bridge> <ryozuki> in wasm guest
18:45 < bridge> <ryozuki> u make the function accept a offset?
18:45 < bridge> <ryozuki> and u convert it to a ptr?
18:45 < bridge> <ryozuki> ?
18:45 < bridge> <ryozuki> what i do here is
18:45 < bridge> <ryozuki> i have struct X
18:45 < bridge> <ryozuki> i turn this into a ptr u8
18:46 < bridge> <ryozuki> and write it to wasm memory
18:46 < bridge> <ryozuki> i know the offset
18:46 < bridge> <ryozuki> now i have a guest function
18:46 < bridge> <ryozuki> that i want to take this struct
18:46 < bridge> <ryozuki> or a ptr that can be converted to it
18:46 < bridge> <ryozuki> using the same layout
18:46 < bridge> <ryozuki> is the ptr the offset?
18:46 < bridge> <Jupstar ‚ú™> well that is probably the fastest way.. but i think it's a bit harder
18:46 < bridge> <Jupstar ‚ú™> 
18:46 < bridge> <Jupstar ‚ú™> i do it differently:
18:46 < bridge> <Jupstar ‚ú™> i prepare the memory inside the guest, and the guest tells me the ptr
18:46 < bridge> <Jupstar ‚ú™> then i write into the wasm linear memory
18:46 < bridge> <Jupstar ‚ú™> 
18:46 < bridge> <Jupstar ‚ú™> this way i can easily have multiple parameters growing independetly
18:47 < bridge> <Jupstar ‚ú™> sadly this can cause troubles
18:47 < bridge> <Jupstar ‚ú™> 1. 32bit
18:47 < bridge> <Jupstar ‚ú™> 2. no guarantee from rust
18:47 < bridge> <Jupstar ‚ú™> but for testing it's probably enough
18:47 < bridge> <Jupstar ‚ú™> i use a serializer
18:48 < bridge> <ryozuki> https://servo.org/blog/2023/09/15/upcoming-events-and-new-browser-ui/
18:48 < bridge> <ryozuki> well my struct is repr C and packed
18:48 < bridge> <ryozuki> so u cant read uninit padding bytes
18:48 < bridge> <ryozuki> which is ub in rust
18:48 < bridge> <Jupstar ‚ú™> yeah but e.g. usize
18:49 < bridge> <Jupstar ‚ú™> omg would be so cool if servo would be good üòÑ
18:50 < bridge> <Jupstar ‚ú™> i actually just want their HTML + CSS engine xD
18:50 < bridge> <ryozuki> xd
18:50 < bridge> <ryozuki> yeah but the ptr aka offset is u32 anyway
18:50 < bridge> <ryozuki> ima test
18:51 < bridge> <ryozuki> ```rust
18:51 < bridge> <ryozuki> #[derive(Debug, Clone)]
18:51 < bridge> <ryozuki> #[repr(C, packed)]
18:51 < bridge> <ryozuki> pub struct Game {
18:51 < bridge> <ryozuki>     pub data: [u8; 32],
18:51 < bridge> <ryozuki> }
18:51 < bridge> <ryozuki> 
18:51 < bridge> <ryozuki> ```
18:51 < bridge> <ryozuki> i have this in a middle crate "interface"
18:51 < bridge> <ryozuki> ```rust
18:51 < bridge> <ryozuki> let play_game = instance.exports.get_typed_function::<u32, u8>(&store, "play_game")?;
18:51 < bridge> <ryozuki> 
18:51 < bridge> <ryozuki>     let pages: Pages = Bytes(std::mem::size_of::<Game>()).try_into().unwrap();
18:51 < bridge> <ryozuki>     let offset_game = mem.grow(&mut store, pages)?.0;
18:51 < bridge> <ryozuki> 
18:51 < bridge> <ryozuki>     let game = Game {
18:51 < bridge> <ryozuki>         data: [1; 32],
18:51 < bridge> <ryozuki>     };
18:51 < bridge> <ryozuki>     let game_ref = addr_of!(game) as *const u8;
18:51 < bridge> <ryozuki>     let game_ref = unsafe {
18:51 < bridge> <ryozuki>         std::slice::from_raw_parts(game_ref, std::mem::size_of::<Game>())
18:51 < bridge> <ryozuki>     };
18:51 < bridge> <ryozuki> 
18:51 < bridge> <ryozuki> 
18:51 < bridge> <ryozuki>     mem.view(&store).write(offset_game.into(), game_ref)?;
18:51 < bridge> <ryozuki> 
18:51 < bridge> <ryozuki>     let result = play_game.call(&mut store, offset_game)?;
18:51 < bridge> <ryozuki> ```
18:52 < bridge> <ryozuki> my host code to setup the struct ref
18:52 < bridge> <ryozuki> ```rust
18:52 < bridge> <ryozuki> #[no_mangle]
18:52 < bridge> <ryozuki> pub fn play_game(game: *const u8) -> u8 {
18:52 < bridge> <ryozuki>     assert!(!game.is_null());
18:52 < bridge> <ryozuki>     let game: Game = unsafe {
18:52 < bridge> <ryozuki>         std::ptr::read(game as *const _)
18:52 < bridge> <ryozuki>     };
18:52 < bridge> <ryozuki>     game.data[0]
18:52 < bridge> <ryozuki> }
18:52 < bridge> <ryozuki> ```
18:52 < bridge> <ryozuki> guest code
18:53 < bridge> <ryozuki> ok wait
18:53 < bridge> <ryozuki> my guest is wrong probs xd
18:56 < bridge> <ryozuki> ```rust
18:56 < bridge> <ryozuki> #[no_mangle]
18:56 < bridge> <ryozuki> pub unsafe fn play_game(game: *const Game) -> u8 {
18:56 < bridge> <ryozuki>     assert!(!game.is_null());
18:56 < bridge> <ryozuki>     (*game).data[0]
18:56 < bridge> <ryozuki> }
18:56 < bridge> <ryozuki> ```
18:56 < bridge> <ryozuki> ```     
18:56 < bridge> <ryozuki> Running `target/debug/host target/wasm32-unknown-unknown/debug/guest.wasm`
18:56 < bridge> <ryozuki> [host/src/main.rs:56] &result = 1
18:56 < bridge> <ryozuki> ```
18:57 < bridge> <ryozuki> @jupeyy_keks omg
18:57 < bridge> <ryozuki> it worked!
18:57 < bridge> <Jupstar ‚ú™> epic gamer moment
18:57 < bridge> <ryozuki> if i change data to 2
18:57 < bridge> <ryozuki> it prints 2
18:57 < bridge> <ryozuki> @jupeyy_keks but  doesnt ur way make the wasm module allocate everytime its called
18:58 < bridge> <Jupstar ‚ú™> i call resize on a vec<u8>
18:58 < bridge> <Jupstar ‚ú™> 
18:58 < bridge> <Jupstar ‚ú™> so it allocates it only if the vec wasnt big enough yet
18:58 < bridge> <ryozuki> hm
18:58 < bridge> <ryozuki> it works with `game: &Game`
18:58 < bridge> <ryozuki> too
18:58 < bridge> <ryozuki> xd
18:58 < bridge> <ryozuki> but idk if im in ub territory here
18:59 < bridge> <Jupstar ‚ú™> a reference is a pointer
18:59 < bridge> <ryozuki> yeah
18:59 < bridge> <Jupstar ‚ú™> well u could say since u in a wasm module it's not UB xd
18:59 < bridge> <ryozuki> well it would be ub if the host passes a null offset
18:59 < bridge> <ryozuki> or smth that doesnt point to a valid game
19:00 < bridge> <ryozuki> xd
19:00 < bridge> <ryozuki> true
19:00 < bridge> <ryozuki> wasm anti ub
19:01 < bridge> <ryozuki> @jupeyy_keks the memory is not read only on the guest side right
19:01 < bridge> <ryozuki> and no way to do that i guess
19:02 < bridge> <ryozuki> if i would need to rewrite that memory pos every time i call it with the original to be safe
19:03 < bridge> <Jupstar ‚ú™> yes u can modify it as u wish
19:03 < bridge> <ryozuki> yeah
19:03 < bridge> <ryozuki> im asking if there can be read only memory
19:03 < bridge> <Jupstar ‚ú™> externalref sounds like read only memory xd
19:04 < bridge> <Jupstar ‚ú™> but no i think there is no read only memory
19:04 < bridge> <patiga> please send link, sounds fun :)
19:05 < bridge> <Jupstar ‚ú™> 8 days left until summer is over..  where is cs2
19:07 < bridge> <reitw> https://youtu.be/4gzO60GhmW8?si=_YTql2C3IyPtcqlk
19:09 < bridge> <reitw> Well the projects still opens before he finishes
19:09 < bridge> <reitw> But funny he makes this
19:10 < bridge> <patiga> heh I thought you meant opening a medium to big project, hes creating a new project o.o
19:11 < bridge> <reitw> Lmao would work even better
19:21 < bridge> <furooooooooooooooooooooooooooooo> @kaffeine0 @heinrich5991 Thanks for the help, I pushed my changes! :)
19:24 < bridge> <learath2> Did the auto verification for ger10 break somehow?
19:24 < bridge> <Jupstar ‚ú™> it's disabled if there is too much attack afaik
19:48 < bridge> <teroristdata> hello, are there any people who can help me
19:48 < bridge> <_voxeldoesart> dont ask to ask
19:58 < bridge> <ryozuki> @_voxeldoesart http://linuxmafia.com/
19:59 < bridge> <cyberFighter> italian linux
19:59 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1152302780489416755/hugin.png
19:59 < bridge> <ryozuki> the logo is cool
20:07 < bridge> <_voxeldoesart> and whats this supposed to be
20:11 < bridge> <_voxeldoesart> the Dept. of Web-Search Juice is just a giant propaganda page LOL
20:21 < bridge> <ryozuki> xd
22:13 < bridge> <Jupstar ‚ú™> lel
22:13 < bridge> <Jupstar ‚ú™> glitchworld
22:43 < bridge> <cyberFighter> im faster :troll:
