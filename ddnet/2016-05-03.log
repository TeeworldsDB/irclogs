00:54 <@deen> ntpd --slew is fun. It took a week, but it fixed the clock on GER, which was a few minutes wrong
00:54 <@deen> Changing clock quickly makes everyone time out, so that's not an option
01:11 < eeeee> pro
12:01 <@heinrich5991> one could wonder why tw code does that
12:01 <@heinrich5991> (timing everyone out)
12:26 <@deen> if you move time 2 minutes forward, everyone's last confirmed packet is from 2 minutes ago
12:27 <@deen> so that's clearly a timeout situation
14:19 < Savander> Hi ;)
14:32 <@deen> hi Savander 
14:38 < Savander> What's up there?
14:41 <@deen> released the sdl2 client, not sure if you've seen
14:42 < Savander> actually, i'm playing on it
14:42 < Savander> :) Nice step :)
14:42 < Savander> oy helped?
14:48 <@deen> well, oy fixed some bugs for SDL2 in tw master (0.7)
14:48 <@deen> and I took his fixes :P
14:49 < Savander> :o. Stealer! 
15:12 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vw9Fy
15:12 < ddnet-commits> ddnet/master bad26a3 def: Pressing shift makes slider move slower (fixes #455)
16:12 < ddnet-commits> [ddnet] def- closed pull request #458: Added cl_showping (master...pr_showping) https://git.io/vwSkb
19:08 < Henningstone> Do you client crash aswell in CFifo::Shutdown when quitting the game?
19:15 < Henningstone> Oha true, I seem to have found a bug :P
19:18 < ddnet-commits> [ddnet] Henningstone opened pull request #459: Fixed crashbug in fifo.cpp (master...pr-ddnet-fifofix) https://git.io/vwHXA
19:20 < ddnet-commits> [ddnet] def- closed pull request #459: Fixed crashbug in fifo.cpp (master...pr-ddnet-fifofix) https://git.io/vwHXA
20:17 <@deen> I redesigned ddnet-maps a bit: https://github.com/ddnet/ddnet-maps
21:25 < ddnet-commits> [ddnet] def- pushed 2 new commits to master: https://git.io/vwQTh
21:25 < ddnet-commits> ddnet/master a48c69b def: Fix ddnet.tw link
21:25 < ddnet-commits> ddnet/master daf1f3f def: Merge branch 'master' of github.com:ddnet/ddnet
22:41 <@heinrich5991> deen: teeworlds could use a system-time-indepedent clock
23:49 < Henningstone> Hm, got a very stange thing... There are a bunch of maps where doing the following will result in a crash, but shouldn't that be possible to do?
23:49 < Henningstone> Collision()->GetIndex(Collision()->GetWidth()-1, Collision()->GetHeight()-1);
23:50 <@heinrich5991> is that the correct order of Height and Width?
23:51 < Henningstone> the arguments are in the order x, y
23:51 < Henningstone> so it should be correct right?
23:51 <@heinrich5991> ok, then it's correct
23:51 <@heinrich5991> are you sure that it crashes at this point?
23:51 < Henningstone> I even know why it crashes, wait...
23:52 < Henningstone> in the function GetIndex dereferences the m_pTiles array like the following: m_pTiles[Ny*m_Width+Nx]
23:53 < Henningstone> so for me it seems like that array wouldn't be big enough
23:53 < Henningstone> but I wonder how that can be possible
23:53 <@deen> I think I know how
23:54 <@deen> Width and Height are just read from the map, and m_pTiles is filled with the data from Map()->GetData()
23:54 <@deen> so GetData could return something smaller
23:54 <@deen> because of a corrupt map
23:55 <@deen> or intentionally evil map
23:55 <@heinrich5991> but then it should crash anyway
23:55 <@heinrich5991> because TW also trusts that data
23:55 < Henningstone> there are damn many maps where this appies though
23:55 <@deen> it should crash once you interact into that area
23:55 <@deen> maybe something else is wrong, gotta read more of the code
23:57 < Henningstone> I just tried accessing that array at the very last value it *should* have on some random maps, and statistically, all the big maps crash.
23:57 <@deen> sounds strange
