00:36 < bridge_> <heinrich5991> https://github.com/BurntSushi/rebar
00:38 < bridge_> <Ewan> lol
00:39 < bridge_> <teero777> regrets
00:39 < bridge_> <Ewan> i think if you wanted regex in ddnet then pcre would probably be the best option
00:39 < bridge_> <Ewan> but it’s existed for however long and has not needed it
00:39 < bridge_> <Ewan> so
01:17 < bridge_> <_voxeldoesart> this was taken from a marvel movie forgot which one
01:17 < bridge_> <_voxeldoesart> did tony stark code in fucking javascript LOL
01:17 < bridge_> <_voxeldoesart> https://cdn.discordapp.com/attachments/293493549758939136/1126290668705292358/image.png
01:21 < bridge_> <Ewan> what makes u think this is js
01:22 < bridge_> <Ewan> could be c/cpp or js. it’s ambiguous because we don’t see any variable defs or anything
01:22 < bridge_> <heinrich5991> looks JS-y to me, except for the final `boxAnchor + offset`
01:22 < bridge_> <heinrich5991> it'd be weird to declare `ratio` earlier than the first mention
01:22 < bridge_> <heinrich5991> except if it's C89 maybe
01:23 < bridge_> <Ewan> the final thing is the only thing that looks JS-like to me, bcus no semicolon. but it looks like it’s just being typed out in real time and this is just one frame from that
01:24 < bridge_> <Ewan> tho I don’t know where that expression is going lol
01:24 < bridge_> <heinrich5991> https://gist.github.com/Wunkolo/984d73fc0a45b3d5aceb194f15a86923
01:25 < bridge_> <Ewan> damn
01:29 < bridge_> <_voxeldoesart> this was the final frame before a scene change so it probably wasnt rendered in yet
01:29 < bridge_> <_voxeldoesart> you know how hollywood coding is like
01:30 < bridge_> <_voxeldoesart> https://tenor.com/view/code-coding-flying-through-code-e22-hacking-gif-15826314
01:30 < bridge_> <Ewan> yeah I still don’t see why it’s js specifically
01:30 < bridge_> <_voxeldoesart> idk
01:30 < bridge_> <_voxeldoesart> just looks js-ish to me
01:30 < bridge_> <Ewan> everything in the screenshot could be either
01:33 < bridge_> <heinrich5991> https://discord.com/channels/252358080522747904/293493549758939136/1126292141509980241
01:33 < bridge_> <Ewan> you are trying to say it’s a method?
01:34 < bridge_> <Ewan> idk what the ratio there has to do with anything
01:34 < bridge_> <Ewan> unless you’re trying to say that line is declaring it, in js you still need let/var/const
01:34 < bridge_> <heinrich5991> no, I think it works without
01:35 < bridge_> <heinrich5991> maybe it declares a global variable like that?
01:35 < bridge_> <heinrich5991> I don't remember
01:35 < bridge_> <Ewan> mm I don’t think so
01:35 < bridge_> <Ewan> doing var in (toplevel) fn scope would already do that
01:35 < bridge_> <Ewan> because var is broken
01:35 < bridge_> <heinrich5991> no, `var` is function scope, no?
01:35 < bridge_> <heinrich5991> seems to be implicitly global from my googling
01:35 < bridge_> <heinrich5991> when you use a variable without `let`/`var`/`const`
01:36 < bridge_> <Ewan> let is how most other languages do scope. var is messed up
01:36 < bridge_> <Ewan> interesting
01:36 < bridge_> <heinrich5991> python also does the `var` scope
01:36 < bridge_> <Ewan> I don’t rly see why it couldn’t be declared before anyway
01:36 < bridge_> <heinrich5991> it could, but it would be weird
01:36 < bridge_> <Ewan> hmm
01:36 < bridge_> <heinrich5991> (unless it's c89)
01:36 < bridge_> <heinrich5991> except for `except` statements, funnily
01:37 < bridge_> <Ewan> i know pretty much 0 python
02:01 < bridge_> <learath2> Could there exist a pair of numbers (a, b) such that a + b causes twos complement overflow but a subsequent - a doesn’t cause overflow?
02:33 < bridge_> <Ewan> i don’t think that’s possible
03:37 < bridge_> <Ewan> you are pretty much asking if there is a number a where (a + b) - a != b
03:38 < bridge_> <Ewan> the two’s complement part seems irrelevant unless it behaves in a way other than what i know
10:29 < bridge_> <heinrich5991> what @mpft is saying. two's complement signed integers behave the same as unsigned integers modulo 2^bits, so you're essentially asking if there are a, b such that (a+b)-a ≠ b (mod 2^bits), which is impossible
10:48 < bridge_> <learath2> Yeah, that's what I thought too, but someone told me there could be one
10:48 < bridge_> <learath2> Just wasn't sure enough
11:39 < bridge_> <heinrich5991> https://github.com/rust-lang/rfcs/pull/3355
11:49 < bridge_> <cellegenrih> time travel found in javascript :justatest:
11:50 < bridge_> <cellegenrih> Also, would be cool if he did a unique version of javascript
11:50 < bridge_> <cellegenrih> Also, would be cool if he did a unique version of javascript in lore
11:52 < bridge_> <TsFreddie> https://link.springer.com/article/10.1007/s00371-021-02210-6
11:52 < bridge_> <TsFreddie> ~~ddnet being academic~~
11:53 < bridge_> <Ewan> lol
12:10 < bridge_> <ryozuki> ```rs
12:10 < bridge_> <ryozuki> ConfigEntry {
12:10 < bridge_> <ryozuki>         description: "At which FPS the videorecorder should record demos.",
12:10 < bridge_> <ryozuki>         entry_type: Int {
12:10 < bridge_> <ryozuki>             max: 1000,
12:10 < bridge_> <ryozuki>             min: 1,
12:10 < bridge_> <ryozuki>             default: 60,
12:10 < bridge_> <ryozuki>             value: None,
12:10 < bridge_> <ryozuki>         },
12:10 < bridge_> <ryozuki>         flags: CFGFlags(
12:10 < bridge_> <ryozuki>             SAVE | CLIENT,
12:10 < bridge_> <ryozuki>         ),
12:10 < bridge_> <ryozuki>         name: "cl_video_recorder_fps",
12:10 < bridge_> <ryozuki>         symbol: "ClVideoRecorderFPS",
12:10 < bridge_> <ryozuki>     },
12:10 < bridge_> <ryozuki> ```
12:10 < bridge_> <ryozuki> pog pog
12:11 < bridge_> <teero777> Can you actually also set a custom rest?
12:11 < bridge_> <teero777> Can you actually also set a custom resolution ?
12:18 < bridge_> <Ewan> awesome
12:19 < bridge_> <Ewan> in fullscreen i think you can only pick what the backend returns as supported
12:19 < bridge_> <Ewan> which should pretty much be every common resolution at every common fps at every common bit depth
12:23 < bridge_> <teero777> Sad. Would be cool to be able to record at higher res like 4k even if you don't have a monitor like that
12:24 < bridge_> <teero777> On Linux I can just make myself a 4k desktop at will but on windows this would be a useful feature
12:27 < bridge_> <ryozuki> https://github.com/edg-l/teeconfig
12:27 < bridge_> <ryozuki> wip
12:27 < bridge_> <ryozuki> gotta make it load the actual ddnet settings now xd
12:27 < bridge_> <ryozuki> oh its private
12:27 < bridge_> <ryozuki> sec
12:27 < bridge_> <stnwtr> https://cdn.discordapp.com/attachments/293493549758939136/1126459385388990516/1da2rsE9um1Tfw1WvvLTtuBLjVsnmHL21faH8EPeyyZrlf8DbgJ4SzuJtLoAAAAASUVORK5CYII.png
12:27 < bridge_> <ryozuki> https://github.com/edg-l/teeconfig
12:27 < bridge_> <ryozuki> ez
12:28 < bridge_> <ryozuki> ChillerDragon: ^
12:29 < bridge_> <ryozuki> its rly alpha tho
12:29 < bridge_> <ryozuki> gotta make the actual binary too xd
12:29 < bridge_> <ryozuki> grammar to parse the cpp file xd <https://github.com/edg-l/teeconfig/blob/master/src/grammar_cpp.lalrpop>
12:33 < bridge_> <Ewan> does it not support your resolution
12:34 < bridge_> <teero777> Yes it does but I would like a native feature for rendering at higher resolutions that your screen supports
12:34 < bridge_> <teero777> Yes it does but I would like a native feature for rendering at higher resolutions than your screen supports
12:35 < bridge_> <teero777> it does but I would like a native feature for rendering at higher resolutions than your screen supports
12:42 < bridge_> <Ewan> I don’t think your graphics card would agree to that
12:42 < bridge_> <Ewan> without some refactoring beyond just the resolution settings
12:43 < bridge_> <Ewan> why would you want that, anyway? maybe the demo rendering stuff would be helpful for you
13:01 < bridge_> <teero777> yes i ment only for demo rendering. not for usual gameplay
13:51 < bridge_> <ravie_ravie> @ryozuki safe code
13:52 < bridge_> <ravie_ravie> https://cdn.discordapp.com/attachments/293493549758939136/1126480662711500820/image.png
13:53 < bridge_> <Ewan> that’s how i write bitfield enums idk about you lol
13:54 < bridge_> <ravie_ravie> 1 << n
13:55 < bridge_> <ryozuki> its safe
13:56 < bridge_> <patiga> both is fine. in the code snippet its a bit awkward because the numbers aren't aligned and the last entry suddenly messes up the amount of digits
13:56 < bridge_> <ravie_ravie> prone to human error tho especially if u don't align it
13:56 < bridge_> <ryozuki> its still safe
13:56 < bridge_> <ryozuki> memory safe
13:59 < bridge_> <ryozuki> there
13:59 < bridge_> <ryozuki> i made it pretty
13:59 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1126482486977908838/image.png
13:59 < bridge_> <ryozuki> changed it now to u16 too
13:59 < bridge_> <ryozuki> less space
14:00 < bridge_> <ravie_ravie> we need a rust troll emote
14:19 < ChillerDragon> pog ryo
14:23 < bridge_> <fokkonaut> so many mosquito bites all over my ankles
15:03 < ChillerDragon> xd
15:07 < bridge_> <cyberFighter> deserved
15:35 < bridge_> <_voxeldoesart> nuh uh
15:38 < bridge_> <ravie_ravie> glad to hear you're volunteering to make it!
15:38 < bridge_> <_voxeldoesart> who said that
15:40 < bridge_> <ravie_ravie> you by replying to me
15:41 < bridge_> <_voxeldoesart> gonna sleep again
16:15 < bridge_> <ryozuki> @learath2 do u use qemu?
16:15 < bridge_> <ryozuki> and when u do, do u use just cli
16:15 < bridge_> <ryozuki> or a graphical program
16:15 < bridge_> <ryozuki> if so, which?
16:16 < bridge_> <ryozuki> i hope there is one without gtk or qt
16:20 < bridge_> <robyt3> Why not like Pi-versioning? Look how nice all the 1s align: 
16:20 < bridge_> <robyt3> ```
16:20 < bridge_> <robyt3> A = 0b1,
16:20 < bridge_> <robyt3> B = 0b10,
16:20 < bridge_> <robyt3> C = 0b100,
16:20 < bridge_> <robyt3> D = 0b1000,
16:21 < bridge_> <robyt3> ```
16:21 < bridge_> <robyt3> :santatrollet:
16:27 < bridge_> <learath2> Not with any regularity. I did mess around with it before in cli tho
16:28 < bridge_> <ryozuki> somehow compiled it and qemu-system-x86_64  runs with gtk i think xd
16:28 < bridge_> <ryozuki> -nographics is nice tho
16:28 < bridge_> <ryozuki> i think it uses ncurses
16:28 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1126520040091553902/image.png
16:31 < bridge_> <ryozuki> im gonna retake ryoOS
16:31 < bridge_> <ryozuki> but since  idk why it fails im gonna do it again
16:31 < bridge_> <ryozuki> its good cuz i learn again
16:32 < bridge_> <ryozuki> https://os.phil-opp.com/
16:55 < ChillerDragon> @heinrich5991 this is why i wanted to run ddnet in docker :)
16:55 < ChillerDragon> https://zillyhuhn.com/cs/.1688655274.png
16:55 < ChillerDragon> @avolicious hrhrhrhr
16:57 < ChillerDragon> didnt expect this to workout so smoothly
17:00 < bridge_> <ryozuki> is
17:00 < bridge_> <ryozuki> kubernetes
17:00 < bridge_> <ryozuki> propietary?
17:03 < ChillerDragon> nah
17:03 < ChillerDragon> its a bunch of go bloat
17:03 < ChillerDragon> https://github.com/kubernetes/kubernetes/
17:03 < ChillerDragon> even the container runtime is open https://github.com/containerd/containerd/
17:04 < ChillerDragon> its foss cloud
17:44 < bridge_> <avolicious> Chillerdragon, use k3s
17:44 < bridge_> <avolicious> 🙂
17:44 < bridge_> <avolicious> small non bloated kubernetes
17:45 < bridge_> <ryozuki> containers are bloated
17:45 < bridge_> <ryozuki> chiller ur in the wrong path
18:07 < bridge_> <avolicious> Containers arent bloated compared to VMs
18:08 < bridge_> <avolicious> Chiller good path, keep it up
18:08 < bridge_> <avolicious> Cloud Native Citizen First approach
18:08 < bridge_> <avolicious> Good one
18:50 < bridge_> <ryozuki> ye
18:51 < bridge_> <ryozuki> u dont need vms
18:51 < bridge_> <ryozuki> chiller come
18:51 < bridge_> <ryozuki> :catgun:
18:55 < bridge_> <Jupstar ✪> 😬
18:55 < bridge_> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1126557041100595240/image.png
18:55 < bridge_> <Jupstar ✪> so apparently i use safari now xD
19:04 < bridge_> <_voxeldoesart> :justatest:
19:04 < bridge_> <Jupstar ✪> i have weird bug again
19:04 < bridge_> <Jupstar ✪> 
19:04 < bridge_> <Jupstar ✪> when i start my programm from vscode(with debugger), i get more fps than when running it with either
19:04 < bridge_> <Jupstar ✪> cargo run
19:04 < bridge_> <Jupstar ✪> cargo run --release
19:05 < bridge_> <Jupstar ✪> taskmanager shows that its the same executable
19:05 < bridge_> <Jupstar ✪> 😭
19:08 < bridge_> <Jupstar ✪> how can i even debug this shit <.<
19:19 < bridge_> <chillerdragon> Xd vscode makes everything blazingly fast using electron and JavaScript
19:22 < bridge_> <Jupstar ✪> in wayland it works
19:22 < bridge_> <Jupstar ✪> i blame x11
19:22 < bridge_> <Jupstar ✪> sadly they still didnt fix forced vsync
19:49 < bridge_> <rickslambiase20> \> \<@rickslambiase20\:matrix.org\> Just want let you know that I'm  a plug and i got some Top quality Gas🍁 ⛽️ , shrooms🍄, coke, meth &Vapes🥢, Ice capz, Edibles🍪, Chocolate Bars🍫, LSD, Syrups, Skittles, pills , 💊 Glocks 🔫 etc. Both for smokers are patients, Offer at moderate price, and also some polkadot gummies, edibles,road trip available just wanna know if you're interested in grabbing some?
19:49 < bridge_> <rickslambiase20> \> https://t.me/lambiaserickLtdstore
23:36 < bridge_> <ryozuki> https://owen.cafe/posts/six-times-faster-than-c/
23:38 < bridge_> <chillerdragon> Looks like a nice blog on learning asm
23:38 < bridge_> <chillerdragon> I rate this blog 9/10 without reading it thanks for sharing ryo
23:38 < bridge_> <ryozuki> xd
23:40 < bridge_> <chillerdragon> Did the bot in announcement channel really just ask for dms?
23:41 < bridge_> <chillerdragon> Can you dm a bot? Who reads that inbox
