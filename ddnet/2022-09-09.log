01:11 <+bridge> [ddnet] <Voxel> Is this better?
01:11 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017572957599571968/unknown.png
01:11 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017572957838639175/unknown.png
01:15 <+bridge> [ddnet] <Voxel> And about this, it's decided that feet should only flip in AFK state?
01:15 <+bridge> [ddnet] <Voxel> And about this, it's decided that feet should only flip in AFK state for now?
01:52 <+bridge> [ddnet] <Ravie> @Voxel now it just looks like this
01:52 <+bridge> [ddnet] <Ravie> https://cdn.discordapp.com/attachments/293493549758939136/1017583326736957570/unknown.png
01:53 <+bridge> [ddnet] <Voxel> its the people's say :justatest:
01:53 <+bridge> [ddnet] <Ravie> but the weapon is leaning on his head, that can't be comfortable
01:58 <+bridge> [ddnet] <Learath2> How about weapon on the side, in his front?
02:00 <+bridge> [ddnet] <Voxel> you mean like this?
02:00 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017585302535159868/unknown.png
02:01 <+bridge> [ddnet] <Ravie> it should just be pointing where his eyes are like normal
02:02 <+bridge> [ddnet] <Voxel> So no weapon alteration?
02:03 <+bridge> [ddnet] <Ravie> I guess
02:03 <+bridge> [ddnet] <Ravie> hammer position is nice but default might work as well
02:03 <+bridge> [ddnet] <Voxel> I'll wait until the other people comment as well
02:03 <+bridge> [ddnet] <Voxel> Default is too high. If we do default I'd have to at least lower it
02:03 <+bridge> [ddnet] <Ravie> ye maybe
02:29 <+bridge> [ddnet] <Skeith> The way I see it, the weapon is strapped to the tee's back as they rest, not just freely leaning on them
02:30 <+bridge> [ddnet] <Learath2> I meant flat on the ground next to the tee, but rendered in front of the tee
02:31 <+bridge> [ddnet] <Ravie> you mean stuck magnetically? or maybe by static charge
02:32 <+bridge> [ddnet] <Skeith> :happy:  Sure, it's a video game. Why not
02:33 <+bridge> [ddnet] <Skeith> If the weapon is rendered in front, it would cover the feet, making it kind of pointless, no?
02:34 <+bridge> [ddnet] <Ravie> it could also be placed in a way that looks like the tee could possibly be holding it in a hand
02:40 <+bridge> [ddnet] <louis> i thought that was the point
02:41 <+bridge> [ddnet] <louis> like hes restinf on his weapon
02:41 <+bridge> [ddnet] <louis> or yeah like strapped to their back
02:42 <+bridge> [ddnet] <Skeith> Having the weapon strapped to the tee's back is cute, looks fine as well
02:43 <+bridge> [ddnet] <Skeith> Velcro :greenthing:
03:56 <+bridge> [ddnet] <funman> Tees have a kangaroo pouch on their backs
07:26 <+bridge> [ddnet] <fokkonaut> yea, but can you make the weapon render fully normal again (just for a screenshot?
07:43 <+bridge> [ddnet] <Voxel> Oh wait, right. One second
07:47 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017672479071813672/unknown.png
07:52 <+bridge> [ddnet] <Voxel> Ravie did give an idea about there being a binded sit animation, where if you press a button you will be able to sit even if not AFK. But that would involve another packet in the server
07:56 <+bridge> [ddnet] <fokkonaut> That wouldnt be a problem tho, since the sitting animation is only working for new clients anyways, we could easily add such packet
07:56 <+bridge> [ddnet] <fokkonaut> and such information to send to the clients. Voxel, hit me up I can helo you
07:57 <+bridge> [ddnet] <Voxel> Want me to submit the PR as it is now, with the weapons as is?
07:57 <+bridge> [ddnet] <fokkonaut> I think we should maybe keep the weapons normal btw. That would then also fit better to manual sitting
07:58 <+bridge> [ddnet] <Voxel> Alrighty
07:58 <+bridge> [ddnet] <fokkonaut> Probably put it into one PR, as the info for sitting animation would then no longer require the afk info.
07:58 <+bridge> [ddnet] <fokkonaut> Then its polished from the beginning
07:58 <+bridge> [ddnet] <Voxel> Ah cool.
07:59 <+bridge> [ddnet] <Voxel> So I did talk about this, and I think the best key to bind sitting would be **S**
07:59 <+bridge> [ddnet] <Voxel> at least for default
08:01 <+bridge> [ddnet] <fokkonaut> Maybe, but s is taken for hookline
08:01 <+bridge> [ddnet] <fokkonaut> maybe c
08:01 <+bridge> [ddnet] <fokkonaut> at least for default :D
08:02 <+bridge> [ddnet] <Voxel> Yeah, sure
08:02 <+bridge> [ddnet] <fokkonaut> i'll check whether c is free
08:02 <+bridge> [ddnet] <Voxel> It says here what binds are default
08:02 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017676411630276628/unknown.png
08:02 <+bridge> [ddnet] <Voxel> unsure if these are all of them
08:03 <+bridge> [ddnet] <fokkonaut> these are all, was gonna check binds.cpp aswell :D
08:03 <+bridge> [ddnet] <Voxel> s isn't shown as hookline though
08:03 <+bridge> [ddnet] <fokkonaut> SetDDRaceBinds()
08:03 <+bridge> [ddnet] <fokkonaut> check that function
08:03 <+bridge> [ddnet] <fokkonaut> fuck, C is used by a useless command
08:04 <+bridge> [ddnet] <Voxel> ohhh
08:04 <+bridge> [ddnet] <fokkonaut> Wow, so many useless binds
08:04 <+bridge> [ddnet] <fokkonaut> im happy i dont use them
08:04 <+bridge> [ddnet] <Voxel> same
08:05 <+bridge> [ddnet] <fokkonaut> i have my own config file, and the first line says `unbindall`
08:05 <+bridge> [ddnet] <fokkonaut> xD
08:05 <+bridge> [ddnet] <Voxel> xd
08:05 <+bridge> [ddnet] <fokkonaut> Which key would you suggest now toh
08:05 <+bridge> [ddnet] <Voxel> lemme think
08:05 <+bridge> [ddnet] <Voxel> Z is my "lagg!!!" say bind
08:06 <+bridge> [ddnet] <fokkonaut> just for a default, but Z is my team chat (y for qwerty)
08:06 <+bridge> [ddnet] <fokkonaut> you probably mean my Y then right? xD
08:06 <+bridge> [ddnet] <Voxel> yknwo what why not change c bind to n,
08:06 <+bridge> [ddnet] <fokkonaut> the bottom left
08:06 <+bridge> [ddnet] <fokkonaut> true
08:06 <+bridge> [ddnet] <fokkonaut> c fits for crouch
08:06 <+bridge> [ddnet] <fokkonaut> xd
08:07 <+bridge> [ddnet] <Voxel> yea, and even if N and M are my deepfly binds, i think there's a solo button bind somewhere
08:07 <+bridge> [ddnet] <fokkonaut> its just for the default, you can set ur bind however u want
08:10 <+bridge> [ddnet] <fokkonaut> @Voxel have you ever changed code on the server side? Do you want to do this or should I make a commit in your branch, same as for the DDNetLaser?
08:11 <+bridge> [ddnet] <Voxel> Can I try looking at it first? I think it should be rather straight forward and sort of similar to how +fire is treated
08:11 <+bridge> [ddnet] <fokkonaut> of course I am here for quetions
08:12 <+bridge> [ddnet] <fokkonaut> sure, but +fire or +showhookcoll are handled quite a bit differently
08:14 <+bridge> [ddnet] <fokkonaut> I am thinking right now, I think we should implement the `sit` (or similar?) command with an optional parameter 0 or 1, to allow using 0 or 1 for binds. If nothing is entered (as for the default bind), it would simply toggle, I think.
08:15 <+bridge> [ddnet] <Voxel> right\
08:28 <+bridge> [ddnet] <Voxel> @fokkonaut Is this a good start?
08:28 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017682906551963648/unknown.png
08:28 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017682906849738812/unknown.png
08:29 <+bridge> [ddnet] <fokkonaut> You may not edit exisitng NetObjects, as they change network code. This one specifically is even a vanilla object.
08:30 <+bridge> [ddnet] <Ryozuki> welcome to backwards compatibility
08:30 <+bridge> [ddnet] <fokkonaut> DDNet has a system (hey heinrich c:) that extends the normal NetObject system. You have to create a NetObjectEx and give it a paramter m_Sit
08:30 <+bridge> [ddnet] <Voxel> alright ill try thaaaat
08:31 <+bridge> [ddnet] <fokkonaut> @Voxel Look at `MyOwnObject`
08:32 <+bridge> [ddnet] <fokkonaut> ah, sorry
08:32 <+bridge> [ddnet] <fokkonaut> @Voxel NetObjects are only used by the server, they are a snapshot object. Dont use that to communicate client->server
08:32 <+bridge> [ddnet] <fokkonaut> instead, see `Cl_ShowOthers`, its a NetMessageEx
08:34 <+bridge> [ddnet] <Voxel> ah nivr
08:34 <+bridge> [ddnet] <Voxel> ah nice
08:34 <+bridge> [ddnet] <Voxel> tho what does it mean by `# Can't add any NetMessages here!`? Can you not add it below that comment?
08:35 <+bridge> [ddnet] <fokkonaut> Yes, you can, because you add a `NetMessageEx`. That is only meant for the normal `NetMessage`s, as they are limited. You can't have infinite of them. Thats why this extended system was heavily required and is the foundation of what we can do right now. (heinrich!! c:)
08:36 <+bridge> [ddnet] <Voxel> <3
08:38 <+bridge> [ddnet] <fokkonaut> While you are working in network.py right now, you might wanna add a flag to `CharacterFlags`, called `IS_SITTING` or similar
08:38 <+bridge> [ddnet] <fokkonaut> That way we will tell the clients which client is sitting right now
08:39 <+bridge> [ddnet] <Voxel> Alrighty
08:44 <+bridge> [ddnet] <Voxel> okay i think network.py is all set
08:44 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017687028135112774/unknown.png
08:44 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017687028869124136/unknown.png
08:46 <+bridge> [ddnet] <fokkonaut> Looks good, yes
08:52 <+bridge> [ddnet] <Voxel> So now I add `bool m_IsSitting;` into CCharacterCore 
08:52 <+bridge> [ddnet] <Voxel> and then `if(m_Core.m_LiveFrozen)
08:53 <+bridge> [ddnet] <Voxel>         pDDNetCharacter->m_Flags |= CHARACTERFLAG_MOVEMENTS_DISABLED;`
08:53 <+bridge> [ddnet] <Voxel> wait
08:53 <+bridge> [ddnet] <Voxel> So now I add `bool m_IsSitting;` into CCharacterCore 
08:53 <+bridge> [ddnet] <Voxel> and then 
08:53 <+bridge> [ddnet] <Voxel> `if(m_Core.m_IsSitting)
08:53 <+bridge> [ddnet] <Voxel>  pDDNetCharacter->m_Flags |= CHARACTERFLAG_IS_SITTING;` in character.cpp?
08:55 <+bridge> [ddnet] <Voxel> wait nvm those relate to entities i think
08:56 <+bridge> [ddnet] <fokkonaut> You can add it to `CCharacter`
08:56 <+bridge> [ddnet] <fokkonaut> The core does not need this information
08:56 <+bridge> [ddnet] <fokkonaut> Other than that, it was correct, yes
09:02 <+bridge> [ddnet] <fokkonaut> @Voxel make sure to reset m_IsSitting in `CCharacter::DDRaceInit()`
09:03 <+bridge> [ddnet] <fokkonaut> to false*
09:07 <+bridge> [ddnet] <Voxel> Actually wait, would it be better inside `void CCharacter::SnapCharacter(int SnappingClient, int ID)`
09:07 <+bridge> [ddnet] <fokkonaut> What do you mean?
09:07 <+bridge> [ddnet] <Voxel> i don't know, i see a new similar
09:07 <+bridge> [ddnet] <Voxel> one second my brain shut off
09:08 <+bridge> [ddnet] <Voxel> im jjust saying like, since all the m_Flag things are linked to m_Core wouldnt it be weird for one to NOT be m_Core
09:08 <+bridge> [ddnet] <fokkonaut> You should store m_IsSitting in CCharacter, because you are going to modify that variable when the net message arrives.
09:09 <+bridge> [ddnet] <fokkonaut> They are not, it's just that the CCharacterCore is shared code, and if things like m_Super are required in the core, it is defined there
09:09 <+bridge> [ddnet] <fokkonaut> gamecore.cpp is used by the server and the client
09:09 <+bridge> [ddnet] <fokkonaut> But this information is not required there
09:14 <+bridge> [ddnet] <Voxel> okay i broke it off a tiny bit so it's visually better to understand
09:14 <+bridge> [ddnet] <Voxel> (i havent compiled it yet so thats why the IS_SITTING thing isnt blue yet
09:14 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017694349733134336/unknown.png
09:14 <+bridge> [ddnet] <Voxel> or should i not have that extra paragraph
09:15 <+bridge> [ddnet] <fokkonaut> You can simply remove the line, it's not required :)
09:15 <+bridge> [ddnet] <fokkonaut> It's not blue yet because it's not yet generated. Things added to the .py files will generate the matching code once you generate or build
09:15 <+bridge> [ddnet] <Voxel> Yeah I know rthat
09:15 <+bridge> [ddnet] <Voxel> Yeah I know that
09:15 <+bridge> [ddnet] <Voxel> okayyy i removed the line
09:15 <+bridge> [ddnet] <Voxel> i'm thinking about what to do next
09:16 <+bridge> [ddnet] <fokkonaut> I would add the connection from the NetMessage to m_IsSitting now
09:16 <+bridge> [ddnet] <fokkonaut> Then you would have the serverside complete and can focus on the client implementation
09:17 <+bridge> [ddnet] <fokkonaut> You can use Cl_ShowOthers for reference
09:17 <+bridge> [ddnet] <Voxel> okay
09:22 <+bridge> [ddnet] <Voxel> gamecontext.cpp?
09:23 <+bridge> [ddnet] <fokkonaut> Yes
09:23 <+bridge> [ddnet] <Ryozuki> fokkonaut-sensei
09:23 <+bridge> [ddnet] <Ryozuki> :greenthing:
09:23 <+bridge> [ddnet] <fokkonaut> 🤭
09:31 <+bridge> [ddnet] <Voxel> uhh
09:31 <+bridge> [ddnet] <Voxel> rn im just trying to read the entire block of text   and trying to think of where to put thi
09:32 <+bridge> [ddnet] <fokkonaut> just put it below CL_SHOWOTHERS :D
09:32 <+bridge> [ddnet] <fokkonaut> NETMSGTYPE_CL_SHOWOTHERS
09:32 <+bridge> [ddnet] <Voxel> oh
09:32 <+bridge> [ddnet] <Voxel> now i see it
09:33 <+bridge> [ddnet] <fokkonaut> 😄
09:33 <+bridge> [ddnet] <fokkonaut> Thought you found OnMessage() already :D
09:35 <+bridge> [ddnet] <Voxel> i *did*
09:40 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017701120103166012/unknown.png
09:42 <+bridge> [ddnet] <ReiTW> again your issue
09:42 <+bridge> [ddnet] <ReiTW> pChr not initialized
09:42 <+bridge> [ddnet] <ReiTW> (+ the netmsg thingy)
09:42 <+bridge> [ddnet] <ReiTW> (+ the netmsg thingy issue)
09:42 <+bridge> [ddnet] <Voxel> the red squiggles is just because its not built yet
09:43 <+bridge> [ddnet] <ReiTW> Don't forget so to initialize it before using pChr
09:43 <+bridge> [ddnet] <fokkonaut> @Voxel you can simply use pPlayer->GetCharacter()
09:43 <+bridge> [ddnet] <fokkonaut> but you should check it first, so put it in an if case, and after it you can use it to access m_IsSitting
09:43 <+bridge> [ddnet] <fokkonaut> and: pMsg will not have m_Show, instead it will have m_Sit
09:44 <+bridge> [ddnet] <Voxel> oops
09:46 <+bridge> [ddnet] <Voxel> Like this?
09:46 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017702623022952448/unknown.png
09:47 <+bridge> [ddnet] <Voxel> Or do I need to actually create a new if statement around the
09:50 <+bridge> [ddnet] <gerdoe> better do a new packet with netintany for all animations
09:51 <+bridge> [ddnet] <Voxel> i dont think that's needed though. those are just client side animations
09:51 <+bridge> [ddnet] <gerdoe> why do you need pchr->is_sitting
09:51 <+bridge> [ddnet] <gerdoe> check
09:52 <+bridge> [ddnet] <gerdoe> i mean maybe ddnet will have another ones :troll:
09:52 <+bridge> [ddnet] <Voxel> then they can add it themselves
09:52 <+bridge> [ddnet] <gerdoe> another packet?
09:52 <+bridge> [ddnet] <gerdoe> for same thing
09:52 <+bridge> [ddnet] <Voxel> please dont pressure me right now this is hurting my head a bit LOL
09:53 <+bridge> [ddnet] <gerdoe> nah just want to hear other opinions about new packet
09:53 <+bridge> [ddnet] <Voxel> i mean yeah i think the packet can be expanded, but as of right now it should be fine
09:53 <+bridge> [ddnet] <Ryozuki> Like that, but also check that pchr is not null
09:53 <+bridge> [ddnet] <fokkonaut> dont check for m_IsSitting
09:53 <+bridge> [ddnet] <Ryozuki> And remove the if issitting
09:54 <+bridge> [ddnet] <fokkonaut> he does
09:54 <+bridge> [ddnet] <Ryozuki> Tru
09:54 <+bridge> [ddnet] <Ryozuki> Need coffee
09:54 <+bridge> [ddnet] <Ryozuki> <a:CoffeeTime:854328409962446868>
09:54 <+bridge> [ddnet] <gerdoe> gm
09:54 <+bridge> [ddnet] <Ryozuki> And just hit build man
09:54 <+bridge> [ddnet] <Ryozuki> xD
09:54 <+bridge> [ddnet] <Voxel> removed is sitting
09:54 <+bridge> [ddnet] <Ryozuki> Dont u have ocd with red stuff
09:54 <+bridge> [ddnet] <Voxel> removed is sitting check
09:55 <+bridge> [ddnet] <Ryozuki> Ur build doesnt need to succeed
09:55 <+bridge> [ddnet] <Ryozuki> Just do it!
09:55 <+bridge> [ddnet] <Voxel> im worried if i hit build something will go wrong with the servers and itll think im botting
09:55 <+bridge> [ddnet] <Ryozuki> What
09:55 <+bridge> [ddnet] <gerdoe> nope
09:55 <+bridge> [ddnet] <gerdoe> it doesnt work like that :troll:
09:56 <+bridge> [ddnet] <Voxel> ok the red stuff is gone
09:56 <+bridge> [ddnet] <gerdoe> and white is still here
09:56 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017705128435916840/unknown.png
09:57 <+bridge> [ddnet] <fokkonaut> good
09:57 <+bridge> [ddnet] <Ryozuki> :greenthing:
09:57 <+bridge> [ddnet] <gerdoe> is if-let statement a thing in cpp?
09:58 <+bridge> [ddnet] <Ryozuki> Cl sit is a bit ambiguous imho, Cl character sit
09:58 <+bridge> [ddnet] <Ryozuki> Better
09:58 <+bridge> [ddnet] <Ryozuki> Mobile sux
10:02 <+bridge> [ddnet] <fokkonaut> @Voxel now to the client side
10:02 <+bridge> [ddnet] <Voxel> yea
10:02 <+bridge> [ddnet] <Voxel> sec
10:16 <+bridge> [ddnet] <fokkonaut> @Voxel Design question: Should sitting be disabled once you move? You have implemented correct rendering on the clientside already, means a player could simply have IsSitting enabled all the time, and walking/jumping would work fine, until you stand still again then you sit?
10:16 <+bridge> [ddnet] <fokkonaut> or do you want it so that you manually have to enable sitting again after you walked?
10:16 <+bridge> [ddnet] <fokkonaut> i think thats a nicer solution
10:16 <+bridge> [ddnet] <fokkonaut> well, hard to say actually
10:17 <+bridge> [ddnet] <Voxel> I think it would be nicer if it was, if your tee moves from when you're sitting you stand back up
10:17 <+bridge> [ddnet] <Voxel> This also means getting dragged
10:17 <+bridge> [ddnet] <fokkonaut> yes, but imagine you get dragger 1 block :D
10:17 <+bridge> [ddnet] <fokkonaut> dragged*
10:18 <+bridge> [ddnet] <fokkonaut> Maybe stand up as soon as you walk, not as soon as you move in general/get moved?
10:18 <+bridge> [ddnet] <fokkonaut> I think thats good.
10:19 <+bridge> [ddnet] <fokkonaut> yeah, that sounds like a good compromise
10:19 <+bridge> [ddnet] <fokkonaut> @Voxel can you go to the server once again? :D
10:20 <+bridge> [ddnet] <fokkonaut> character.cpp
10:21 <+bridge> [ddnet] <Voxel> alrighty im in
10:21 <+bridge> [ddnet] <fokkonaut> go to OnPredictedInput()
10:21 <+bridge> [ddnet] <fokkonaut> wait
10:21 <+bridge> [ddnet] <fokkonaut> no.
10:22 <+bridge> [ddnet] <fokkonaut> Lets do this in Tick()
10:24 <+bridge> [ddnet] <fokkonaut> actually
10:24 <+bridge> [ddnet] <fokkonaut> @Voxel DDraceTick()
10:24 <+bridge> [ddnet] <Voxel> Is there a  DDraceTick() in character.cpp?
10:24 <+bridge> [ddnet] <fokkonaut> yes
10:25 <+bridge> [ddnet] <fokkonaut> you can ctrl+f it
10:25 <+bridge> [ddnet] <Voxel> its in character.h but not in the cpp file
10:25 <+bridge> [ddnet] <fokkonaut> it is :D
10:25 <+bridge> [ddnet] <fokkonaut> ctrl+left click it
10:25 <+bridge> [ddnet] <Voxel> oh im stupid
10:25 <+bridge> [ddnet] <fokkonaut> :P
10:26 <+bridge> [ddnet] <Voxel> im rly sorry u have to sit through this LOL
10:26 <+bridge> [ddnet] <fokkonaut> okay what you see here is, that when you are frozen it resets your m_Input.m_Direction (left/right)
10:26 <+bridge> [ddnet] <fokkonaut> not yet sitting :P
10:26 <+bridge> [ddnet] <fokkonaut> aswell as hook and fire
10:26 <+bridge> [ddnet] <Voxel> yea i see that
10:26 <+bridge> [ddnet] <fokkonaut> hook and jump*
10:27 <+bridge> [ddnet] <fokkonaut> okay, so, you should add the check we are going to do below this.
10:27 <+bridge> [ddnet] <fokkonaut> So that when you are frozen, and press left or right, it doesnt impact starting to stand uip
10:28 <+bridge> [ddnet] <fokkonaut> I would add something like `if (m_Input.m_Direction != 0) m_IsSitting = false;`
10:28 <+bridge> [ddnet] <fokkonaut> lets do that for now, and later check if its all working, or if we want to adjust smth
10:28 <+bridge> [ddnet] <Voxel> oke
10:29 <+bridge> [ddnet] <fokkonaut> https://github.com/ddnet/ddnet/blob/6f62750833f2d0ed9f08f38d709c9beb609d0ab0/src/game/server/entities/character.cpp#L2049
10:29 <+bridge> [ddnet] <fokkonaut> do it here, or so
10:30 <+bridge> [ddnet] <Voxel> Alright it's in
10:30 <+bridge> [ddnet] <fokkonaut> Ok.
10:30 <+bridge> [ddnet] <fokkonaut> Now lets do the clientside?
10:31 <+bridge> [ddnet] <Voxel> Yea
10:31 <+bridge> [ddnet] <fokkonaut> Have you worked with ddnetCharacter before?
10:31 <+bridge> [ddnet] <fokkonaut> Ah wait, one thing we forgot
10:31 <+bridge> [ddnet] <fokkonaut> where you send the ddnetcharacter flag
10:31 <+bridge> [ddnet] <fokkonaut> You should add a || m_pPlayer->m_Afk check
10:32 <+bridge> [ddnet] <fokkonaut> so `is_sitting` is either sent when afk or manually sitting
10:33 <+bridge> [ddnet] <Voxel> oh right one second
10:34 <+bridge> [ddnet] <Voxel> wait shouldnt it be if Pchr AND if afk?
10:35 <+bridge> [ddnet] <Voxel> or does being AFK override it?
10:35 <+bridge> [ddnet] <fokkonaut> i mean in CCharacter::Snap
10:35 <+bridge> [ddnet] <fokkonaut> where you send the IS_SITTING flag
10:36 <+bridge> [ddnet] <fokkonaut> `if (m_IsSitting || m_pPlayer->m_Afk)`
10:36 <+bridge> [ddnet] <Voxel> yea yea
10:39 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017715855787831306/unknown.png
10:39 <+bridge> [ddnet] <fokkonaut> i think you messed up both things
10:39 <+bridge> [ddnet] <fokkonaut> like
10:39 <+bridge> [ddnet] <fokkonaut> you mixed them together
10:40 <+bridge> [ddnet] <Voxel> fuck
10:40 <+bridge> [ddnet] <fokkonaut> okay so, the first check you have, put that to where you send the CHARACTERFLAG_IS_SITTING
10:40 <+bridge> [ddnet] <fokkonaut> and the direction check you keep in DDraceTick
10:43 <+bridge> [ddnet] <Voxel> okay i did that successfully
10:44 <+bridge> [ddnet] <Voxel> now the next step is to have there be a proper bind to it? or is that already taken care of?
10:44 <+bridge> [ddnet] <fokkonaut> It's not yet
10:44 <+bridge> [ddnet] <fokkonaut> Do you want to start with that, or with actually receiving the Sitting information?
10:45 <+bridge> [ddnet] <Voxel> well itd be better to have it recieve what we want first so
10:45 <+bridge> [ddnet] <Voxel> well itd be better to have it receive what we want first so
10:46 <+bridge> [ddnet] <fokkonaut> alright. you can check where the client receives the ddnetcharacter object
10:46 <+bridge> [ddnet] <fokkonaut> ?
10:46 <+bridge> [ddnet] <heinrich5991> hmm. when designing a game, you try to communicate information to the players
10:47 <+bridge> [ddnet] <heinrich5991> if you add a way to make the player communicate being afk without actually being afk, then that signal loses value, right?
10:47 <+bridge> [ddnet] <fokkonaut> it does not include the afk bubble, and i personally think its a nice touch to be able to just sit down
10:47 <+bridge> [ddnet] <fokkonaut> Could also be used to indicate "hey guys, i go toilet 5 min"
10:47 <+bridge> [ddnet] <fokkonaut> And it suits teeworlds very much
10:47 <+bridge> [ddnet] <heinrich5991> I'd imagine people would spam it like emotes, removing any kind of information from it
10:48 <+bridge> [ddnet] <heinrich5991> bind "+fire;sit"
10:48 <+bridge> [ddnet] <Voxel> good point
10:48 <+bridge> [ddnet] <fokkonaut> Well, the afk emote is not spamable
10:48 <+bridge> [ddnet] <fokkonaut> which is the main indicator for being afk
10:48 <+bridge> [ddnet] <Voxel> "+fire;sit;emote 9"
10:48 <+bridge> [ddnet] <Voxel> i think its 9
10:49 <+bridge> [ddnet] <heinrich5991> I guess maybe it's not as bad as we still have the zzz, and maybe no intention of removing it
10:49 <+bridge> [ddnet] <fokkonaut> + the inverted eyes
10:49 <+bridge> [ddnet] <heinrich5991> the inverted eyes can be bound
10:50 <+bridge> [ddnet] <fokkonaut> you cant bind the open eyes while being frozen tho
10:50 <+bridge> [ddnet] <heinrich5991> yes (although that's more of a bug, I guess)
10:50 <+bridge> [ddnet] <fokkonaut> no, i think thats perfect
10:50 <+bridge> [ddnet] <heinrich5991> (although that happened more accidentally I guess)
10:50 <+bridge> [ddnet] <fokkonaut> it indiciates very good that frozne people are speccing or afk
10:50 <+bridge> [ddnet] <heinrich5991> (although that happened more accidentally I guess, not intentionally)
10:50 <+bridge> [ddnet] <fokkonaut> (which was one of the main intentions)
10:50 <+bridge> [ddnet] <fokkonaut> showing pause in freeze
10:51 <+bridge> [ddnet] <fokkonaut> to avoid fials
10:51 <+bridge> [ddnet] <fokkonaut> foails
10:51 <+bridge> [ddnet] <heinrich5991> you think that it was intentional that you couldn't change your eyes to normal in freeze? ^^
10:51 <+bridge> [ddnet] <fokkonaut> fails
10:51 <+bridge> [ddnet] <fokkonaut> definitely
10:51 <+bridge> [ddnet] <fokkonaut> they were supposed to be closed
10:51 <+bridge> [ddnet] <fokkonaut> or any other custom eyes
10:51 <+bridge> [ddnet] <heinrich5991> it seems very unlikely to me. how could you be so sure of that?
10:52 <+bridge> [ddnet] <fokkonaut> Well, because that is the way it was made :D
10:52 <+bridge> [ddnet] <fokkonaut> And if they would wanted it differently, it would have been done
10:52 <+bridge> [ddnet] <heinrich5991> no, the current way is the "path of least resistance" if you don't think about the implications
10:52 <+bridge> [ddnet] <heinrich5991> you have default eyes where you change everything according to state
10:53 <+bridge> [ddnet] <heinrich5991> and you have non-default eyes where you don't change according to state
10:53 <+bridge> [ddnet] <fokkonaut> anyways, i think the behaviour is absolutely perfect
10:53 <+bridge> [ddnet] <heinrich5991> this has the happy accident of not being able to change your eyes to the open eyes because they're "default"
10:53 <+bridge> [ddnet] <fokkonaut> yea
10:54 <+bridge> [ddnet] <fokkonaut> @heinrich5991 it should definitely not change, it avoids many fails for me personally, cuz i dont hammer out tees with open eyes in frz
10:54 <+bridge> [ddnet] <fokkonaut> huge gameplay+++
10:54 <+bridge> [ddnet] <fokkonaut> since it got implemented
10:55 <+bridge> [ddnet] <Voxel> This now makes me think; was making sitting outside of AFK worth it?
10:55 <+bridge> [ddnet] <heinrich5991> (this is an example of a clear signal, one which cannot be bound)
10:55 <+bridge> [ddnet] <heinrich5991> (and you say it's great that it cannot be forced)
10:55 <+bridge> [ddnet] <fokkonaut> Yes, but sitting is a nice touch as i said, and I think its cool to be able to sit without being afk. as i said, it indicates clearly that you did not move or do not move right now
10:56 <+bridge> [ddnet] <fokkonaut> and: afk is more than visible with the emote
10:56 <+bridge> [ddnet] <fokkonaut> i wasnt the one who suggested manual sitting, just liked the idea since it suits ddnet
10:56 <+bridge> [ddnet] <Voxel> Ravie also mentioned a possible sit cooldown, so people don't make sit bots that force them to sit throughout the entirety of their gameplay
10:56 <+bridge> [ddnet] <fokkonaut> yes, that would belong to the server side
10:56 <+bridge> [ddnet] <fokkonaut> had that in mind too
10:57 <+bridge> [ddnet] <heinrich5991> I mean you could perhaps extend sitting to /pause and you have a clearer indicator of not being able to respond
10:57 <+bridge> [ddnet] <heinrich5991> and you can suddenly "bind" /sit
10:57 <+bridge> [ddnet] <heinrich5991> but you actually can't move during it
10:57 <+bridge> [ddnet] <fokkonaut> i wouldnt do that, if someone throws you somewhere and u want to react, its very bad gameplay
10:58 <+bridge> [ddnet] <Voxel> Jump to quickly get out of sit
10:58 <+bridge> [ddnet] <fokkonaut> currently it would be, that you automatically "stand up" once you move
10:58 <+bridge> [ddnet] <fokkonaut> (walk only)
10:58 <+bridge> [ddnet] <Voxel> Jump to quickly get out of sit, That's my addendum
10:58 <+bridge> [ddnet] <heinrich5991> that's the point; sit indicates you're not able to respond
10:58 <+bridge> [ddnet] <Voxel> Jump to quickly get out of /sit, That's my addendum
10:58 <+bridge> [ddnet] <fokkonaut> I know what you mean, but you go around what players would actually really like
10:58 <+bridge> [ddnet] <heinrich5991> (i.e. the /sit wasn't supposed to be a real command, it's just /pause that also sits)
10:58 <+bridge> [ddnet] <ReiTW> actually
10:58 <+bridge> [ddnet] <heinrich5991> "what players would actually really like"
10:59 <+bridge> [ddnet] <ReiTW> sit being only smth visual when you're really afk or paused is the best
10:59 <+bridge> [ddnet] <heinrich5991> = "what I actually really like" (I'd guess)
10:59 <+bridge> [ddnet] <heinrich5991> real signals are really good
10:59 <+bridge> [ddnet] <heinrich5991> we're trying to design a game
10:59 <+bridge> [ddnet] <fokkonaut> I assume many players would like it, just look at how they liked the emote delay 0 from Chile servers
10:59 <+bridge> [ddnet] <fokkonaut> "it looks like they have so much fun"
10:59 <+bridge> [ddnet] <fokkonaut> people said
11:00 <+bridge> [ddnet] <Voxel> to be honest, having it where you cant manually move out of sit is acceptable in my terms. i think people who just chill in maps like water lily would like just sitting down and everything
11:00 <+bridge> [ddnet] <fokkonaut> yeah, and we still have the afk emote + inverted eyes, which was always enough. I think sitting is just a nice touch to it, which is not a problem to show without being afk/paused
11:01 <+bridge> [ddnet] <fokkonaut> +  u can move ur weapon direction while ur sitting, there is definitely enough difference to actually having the afk flag
11:01 <+bridge> [ddnet] <heinrich5991> we only have inverted eyes for /pause'd players
11:01 <+bridge> [ddnet] <fokkonaut> no
11:01 <+bridge> [ddnet] <Voxel> So what I think I want to happen is:
11:01 <+bridge> [ddnet] <Voxel> You sit when you're AFK, in Pause, or use the Sit command, which is like pause except you aren't spectating the map
11:02 <+bridge> [ddnet] <Voxel> would be useful for if someone is doing a part and you want to sit it out until they're done
11:02 <+bridge> [ddnet] <fokkonaut> yea, but i dont think you should be able to move.
11:03 <+bridge> [ddnet] <fokkonaut> so, walking resets your sitting state and lets you stand up
11:03 <+bridge> [ddnet] <fokkonaut> how we have it right now
11:04 <+bridge> [ddnet] <fokkonaut> I think we should continue like this Voxel, and see other responses. As these design discussions are not much/hard to implement or change later on. They are even serverside mostly, so lets go for it for now I'd say
11:05 <+bridge> [ddnet] <fokkonaut> You can show the differences etc in the PR later on
11:05 <+bridge> [ddnet] <Voxel> Yeah, we'll continue like this and then think about it more once we hear more voices
11:05 <+bridge> [ddnet] <Voxel> Yeah, we'll continue like this and then think about it more once we hear more voices on this
11:05 <+bridge> [ddnet] <fokkonaut> Alright, so you fetched the sitting information already?
11:06 <+bridge> [ddnet] <heinrich5991> thanks for teaching how to do network protocols btw, @fokkonaut
11:06 <+bridge> [ddnet] <fokkonaut> No problem :)
11:06 <+bridge> [ddnet] <Voxel> i think we all learned something LOL
11:07 <+bridge> [ddnet] <Voxel> oh wait u guys r talking about something different
11:07 <+bridge> [ddnet] <fokkonaut> He means the teeworlds network protocol and how it works or how to add new things that are sent over the network
11:07 <+bridge> [ddnet] <fokkonaut> like, without breaking old clients compatibility etc
11:08 <+bridge> [ddnet] <fokkonaut> like right now the client sends whether it wants to sit or stand up, and the server sends information whether a tee is sitting or not
11:10 <+bridge> [ddnet] <ReiTW> breaking compat is a feature
11:10 <+bridge> [ddnet] <ReiTW> :justatest:
11:11 <+bridge> [ddnet] <Voxel> So i know I need to do something with `pDDNetCharacter->m_Flags |= CHARACTERFLAG_IS_SITTING`
11:11 <+bridge> [ddnet] <fokkonaut> Yes, on the clientside though
11:11 <+bridge> [ddnet] <Voxel> So i know I need to do something with `pDDNetCharacter->m_Flags | CHARACTERFLAG_IS_SITTING`
11:11 <+bridge> [ddnet] <fokkonaut> go to gameclient.cpp, and see how other elements of DDNetCharacter are being handled
11:11 <+bridge> [ddnet] <fokkonaut> e.g. `m_HasTelegunLaser `
11:12 <+bridge> [ddnet] <fokkonaut> You add a boolean to the CClientData m_IsSitting, which you then set based on whether the flag is included in the object.
11:19 <+bridge> [ddnet] <Voxel> Did that. Also Removed the now obsolete boolean IsActive and did this, so that the hammer doesn't look too high when you're holding it
11:19 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017725869566988419/unknown.png
11:19 <+bridge> [ddnet] <Voxel> Did that. Also Removed the now obsolete boolean IsActive and did this, so that the hammer doesn't look too high when you're holding it while sitting
11:19 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017725869566988419/unknown.png
11:20 <+bridge> [ddnet] <fokkonaut> I would remove the m_Afk checks around your sitting stuff entirely
11:20 <+bridge> [ddnet] <fokkonaut> Because m_IsSitting is always set to true when you are afk :)
11:20 <+bridge> [ddnet] <fokkonaut> (by the server)
11:21 <+bridge> [ddnet] <Voxel> But would you want the hammer tilted back when you're sitting and not AFK?
11:22 <+bridge> [ddnet] <fokkonaut> Ah, probably not. But then I would still do the checks the other way around. Everthing related to sitting, use m_IsSitting, and for afk specific stuff do a separate m_Afk check
11:22 <+bridge> [ddnet] <fokkonaut> because you can be sitting without being afk. but not being afk without sitting
11:24 <+bridge> [ddnet] <fokkonaut> And make sure to reset m_IsSitting to false in CClientData::Reset
11:24 <+bridge> [ddnet] <Voxel> done
11:25 <+bridge> [ddnet] <binance_id> Win up to $1000 in crypto trading when you invest with just the minimum of $50
11:25 <+bridge> [ddnet] <binance_id> Signup and start investing your crypto with.
11:25 <+bridge> [ddnet] <binance_id> 
11:25 <+bridge> [ddnet] <binance_id> 
11:25 <+bridge> [ddnet] <binance_id> 
11:25 <+bridge> [ddnet] <binance_id> 💎NO STRESS
11:25 <+bridge> [ddnet] <binance_id> 💎NO REFERRAL NEEDED!!
11:25 <+bridge> [ddnet] <binance_id> 💎NO REGISTRATION FEE!!
11:25 <+bridge> [ddnet] <binance_id> 
11:25 <+bridge> [ddnet] <binance_id> https://t.me/Stevecoldham001
11:26 <+bridge> [ddnet] <fokkonaut> so only thing missing is the bind
11:26 <+bridge> [ddnet] <fokkonaut> ?
11:26 <+bridge> [ddnet] <Voxel> Yeah
11:27 <+bridge> [ddnet] <fokkonaut> ok. first add the bind in binds.cpp
11:27 <+bridge> [ddnet] <Voxel> So we agreed it would be key C?
11:28 <+bridge> [ddnet] <fokkonaut> I guess, can also be discussed later
11:28 <+bridge> [ddnet] <Voxel> I'll temporarily move the current C bind to N
11:28 <+bridge> [ddnet] <fokkonaut> sure
11:29 <+bridge> [ddnet] <fokkonaut> How do we call the command?
11:30 <+bridge> [ddnet] <Voxel> hmm
11:32 <+bridge> [ddnet] <fokkonaut> maybe just sit
11:32 <+bridge> [ddnet] <Voxel> `Console()->Register("+sit", "", CFGFLAG_CLIENT, ConKeyInputSet, (void *)&s_Set, "Sit");`
11:33 <+bridge> [ddnet] <heinrich5991> probably without +, it doesn't do anything on key up
11:33 <+bridge> [ddnet] <fokkonaut> thats not correct
11:33 <+bridge> [ddnet] <fokkonaut> @Voxel first, you need to add the bind in binds.cpp i mean
11:34 <+bridge> [ddnet] <fokkonaut> in SetDDraceBinds
11:34 <+bridge> [ddnet] <Voxel> i did
11:34 <+bridge> [ddnet] <fokkonaut> okay, then you can remove this again
11:34 <+bridge> [ddnet] <fokkonaut> Go to gameclient.cpp again, and search for `"kill"`
11:34 <+bridge> [ddnet] <fokkonaut> with the qutoes
11:34 <+bridge> [ddnet] <fokkonaut> We bascially do the same as kill would do too
11:35 <+bridge> [ddnet] <fokkonaut> The kill bind also sends a simple packet telling the server it wants to kill
11:36 <+bridge> [ddnet] <fokkonaut> in the second, empty quotes you wanna add `"?i['0'|'1']"`
11:36 <+bridge> [ddnet] <fokkonaut> that's the optional parameter
11:37 <+bridge> [ddnet] <Voxel> So i put this under kill?
11:37 <+bridge> [ddnet] <fokkonaut> sure, anywhere there
11:38 <+bridge> [ddnet] <fokkonaut> Probably want to put it below cl_menu_map
11:38 <+bridge> [ddnet] <fokkonaut> but it doesnt really matter at all
11:38 <+bridge> [ddnet] <fokkonaut> wait sorry
11:38 <+bridge> [ddnet] <fokkonaut> leave it there
11:39 <+bridge> [ddnet] <Voxel> do I need a ConSit as well?
11:40 <+bridge> [ddnet] <fokkonaut> yes, that will be the function to get called once you execute the command
11:40 <+bridge> [ddnet] <fokkonaut> you need to add a ConSit in gameclient.h, just use ConKill as a preset
11:43 <+bridge> [ddnet] <Voxel> i know
11:44 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017732296226385930/unknown.png
11:45 <+bridge> [ddnet] <fokkonaut> You can remove the clientid parameter
11:48 <+bridge> [ddnet] <fokkonaut> ```c++
11:48 <+bridge> [ddnet] <fokkonaut> if (m_Snap.m_LocalClientID < 0)
11:48 <+bridge> [ddnet] <fokkonaut>   return;
11:48 <+bridge> [ddnet] <fokkonaut> 
11:48 <+bridge> [ddnet] <fokkonaut> CNetMsg_Cl_Sit Msg;
11:48 <+bridge> [ddnet] <fokkonaut> Msg.m_Sit = !m_aClients[m_Snap.m_LocalClientID].m_IsSitting;
11:48 <+bridge> [ddnet] <fokkonaut> 
11:48 <+bridge> [ddnet] <fokkonaut> CMsgPacker Packer(Msg.MsgID(), false);
11:48 <+bridge> [ddnet] <fokkonaut> Msg.Pack(&Packer);
11:48 <+bridge> [ddnet] <fokkonaut> Client()->SendMsg(IClient::CONN_MAIN, &Packer, MSGFLAG_VITAL);
11:48 <+bridge> [ddnet] <fokkonaut>   
11:48 <+bridge> [ddnet] <fokkonaut> if (g_Config.m_ClDummyCopyMoves)
11:48 <+bridge> [ddnet] <fokkonaut>     Client()->SendMsg(IClient::CONN_DUMMY, &Packer, MSGFLAG_VITAL);
11:49 <+bridge> [ddnet] <fokkonaut> ```
11:49 <+bridge> [ddnet] <fokkonaut> 1. We need to manually pack the message here, because there is no function to send an unpacked message as dummy.
11:49 <+bridge> [ddnet] <fokkonaut> 1. We need to manually pack the message here, because there is no function to send an unpacked message as dummy. (thats also how its done for Cl_ShowDistance)
11:50 <+bridge> [ddnet] <fokkonaut> 2. You need to set the m_Sit parameter. I would just toggle it by using the info we got provided by the server.
11:51 <+bridge> [ddnet] <fokkonaut> 3. you should not use a separate function SendSit(), because we need to access the arguments. give me a second
11:53 <+bridge> [ddnet] <fokkonaut> ```c++
11:53 <+bridge> [ddnet] <fokkonaut> void CGameClient::ConSit(IConsole::IResult *pResult, void *pUserData)
11:53 <+bridge> [ddnet] <fokkonaut> {
11:53 <+bridge> [ddnet] <fokkonaut>   CGameClient *pThis = (CGameClient *)pUserData;
11:53 <+bridge> [ddnet] <fokkonaut>   if (pThis->m_Snap.m_LocalClientID < 0)
11:53 <+bridge> [ddnet] <fokkonaut>     return;
11:53 <+bridge> [ddnet] <fokkonaut> 
11:53 <+bridge> [ddnet] <fokkonaut>   CNetMsg_Cl_Sit Msg;
11:53 <+bridge> [ddnet] <fokkonaut>   Msg.m_Sit = pResult->NumArguments() ? pResult->GetInteger(0) : !pThis->m_aClients[m_Snap.m_LocalClientID].m_IsSitting;
11:53 <+bridge> [ddnet] <fokkonaut> 
11:53 <+bridge> [ddnet] <fokkonaut>   CMsgPacker Packer(Msg.MsgID(), false);
11:53 <+bridge> [ddnet] <fokkonaut>   Msg.Pack(&Packer);
11:53 <+bridge> [ddnet] <fokkonaut>   pThis->Client()->SendMsg(IClient::CONN_MAIN, &Packer, MSGFLAG_VITAL);
11:53 <+bridge> [ddnet] <fokkonaut>   
11:53 <+bridge> [ddnet] <fokkonaut>   if (g_Config.m_ClDummyCopyMoves)
11:53 <+bridge> [ddnet] <fokkonaut>       pThis->Client()->SendMsg(IClient::CONN_DUMMY, &Packer, MSGFLAG_VITAL);
11:53 <+bridge> [ddnet] <fokkonaut> }
11:53 <+bridge> [ddnet] <fokkonaut> ```
11:54 <+bridge> [ddnet] <fokkonaut> This should do the trick. What happens now is, that since we have an optional parameter, we check whether there are arguments added to the command, if yes, we set m_Sit to the argument we passed. otherwise send the opposite of our current state.
11:54 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017734716700495992/unknown.png
11:54 <+bridge> [ddnet] <fokkonaut> add pThis-> before
11:54 <+bridge> [ddnet] <Voxel> i did
11:54 <+bridge> [ddnet] <fokkonaut> before m_Snap
11:55 <+bridge> [ddnet] <fokkonaut> these are static functions, so they can get passed as a callback while we Register the command
11:55 <+bridge> [ddnet] <fokkonaut> thats why we cant directly access CGameClient
11:55 <+bridge> [ddnet] <fokkonaut> These callback functions are getting called from the back, when we execute these commands.
11:56 <+bridge> [ddnet] <Voxel> okay did that
11:56 <+bridge> [ddnet] <Voxel> anything else?
11:56 <+bridge> [ddnet] <fokkonaut> I think this should be it for now, try it out
11:56 <+bridge> [ddnet] <fokkonaut> you have to run both, new server & new client
11:57 <+bridge> [ddnet] <fokkonaut> just compile everything, and then start both from the folder
11:59 <+bridge> [ddnet] <Voxel> i **cant** compile, because a bunch of dll files didnt come with my clone fsr
11:59 <+bridge> [ddnet] <fokkonaut> `git submodule update --init --recursive`
12:00 <+bridge> [ddnet] <Voxel> through git bash right
12:00 <+bridge> [ddnet] <Voxel> through git bash right?
12:00 <+bridge> [ddnet] <fokkonaut> yes, from the root of your project
12:00 <+bridge> [ddnet] <fokkonaut> where cmakelists.txt is
12:01 <+bridge> [ddnet] <Voxel> they literally did nothing KEKW
12:01 <+bridge> [ddnet] <fokkonaut> can you show the errors
12:02 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017736669929160724/unknown.png
12:02 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017736670310846504/unknown.png
12:02 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017736670684135444/unknown.png
12:02 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017736671200018512/unknown.png
12:02 <+bridge> [ddnet] <heinrich5991> you can try copying them from the folders in ddnet-libs to the execution directory
12:02 <+bridge> [ddnet] <heinrich5991> (although that should happen automatically?)
12:03 <+bridge> [ddnet] <fokkonaut> @Voxel re generate your code
12:03 <+bridge> [ddnet] <fokkonaut> projectÜ
12:03 <+bridge> [ddnet] <fokkonaut> *
12:04 <+bridge> [ddnet] <fokkonaut> did it compile or not? cuz it looks like it did, and you simply cant open it
12:04 <+bridge> [ddnet] <Voxel> well i cant see the exe
12:05 <+bridge> [ddnet] <fokkonaut> how did you open this then? :D
12:05 <+bridge> [ddnet] <Voxel> there's 2 options in visual studio
12:05 <+bridge> [ddnet] <Voxel> one for ddnet.exe, and one for ddnet.exe install
12:05 <+bridge> [ddnet] <fokkonaut> dont use the install
12:06 <+bridge> [ddnet] <fokkonaut> and try to not build via the Play button, but build via the top menu where you can select "Build" -> build all
12:06 <+bridge> [ddnet] <Voxel> oh wait the server now actually works on
12:06 <+bridge> [ddnet] <Voxel> oh wait the server now actually works ok
12:06 <+bridge> [ddnet] <Voxel> oh  o k
12:06 <+bridge> [ddnet] <fokkonaut> because you need server & client. build all, open them manually from folder
12:09 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017738513845858344/unknown.png
12:09 <+bridge> [ddnet] <Voxel> whee! it works!
12:11 <+bridge> [ddnet] <fokkonaut> walking should stand up, right?
12:11 <+bridge> [ddnet] <Voxel> yes
12:11 <+bridge> [ddnet] <Voxel> now i'm just debugging things
12:11 <+bridge> [ddnet] <fokkonaut> and f1: `sit 0` or `sit 1` should also work?
12:12 <+bridge> [ddnet] <Voxel> yea
12:12 <+bridge> [ddnet] <fokkonaut> Also, did you make sure to render it correctly based on the sitting information, and add additional stuff only related to being afk to the m_Afk condition?
12:13 <+bridge> [ddnet] <Voxel> thats what im doing right onw
12:13 <+bridge> [ddnet] <Voxel> thats what im doing right now
12:13 <+bridge> [ddnet] <fokkonaut> alright, nice
12:13 <+bridge> [ddnet] <fokkonaut> I like the behaviour how it is right now, also that you can move your cursor while sitting, and shoot :)
12:14 <+bridge> [ddnet] <fokkonaut> You could add `|| m_pPlayer->IsPaused()` to the condition on the server, when you send the `CHARACTEFFLAG_IS_SITTING`
12:14 <+bridge> [ddnet] <fokkonaut> heinrich suggested that i think
12:15 <+bridge> [ddnet] <Voxel> yea
12:19 <+bridge> [ddnet] <fokkonaut> Ah, and Voxel, one thing
12:19 <+bridge> [ddnet] <Voxel> huh
12:19 <+bridge> [ddnet] <fokkonaut> We should add a delay of at least 0.25 seconds between sitting/unsitting
12:20 <+bridge> [ddnet] <Voxel> good idea
12:20 <+bridge> [ddnet] <fokkonaut> you can see how its implemented for kill, in gamecontext
12:20 <+bridge> [ddnet] <fokkonaut> search for "CL_KILL"
12:20 <+bridge> [ddnet] <Voxel> i was gonna say im confused as to how to remove the need for m_afk in this segment in this code
12:20 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017741291787931648/unknown.png
12:20 <+bridge> [ddnet] <fokkonaut> how did it look before
12:21 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017741620587806740/unknown.png
12:22 <+bridge> [ddnet] <fokkonaut> what does the m_IsSitting thing do
12:22 <+bridge> [ddnet] <fokkonaut> += 10
12:23 <+bridge> [ddnet] <Voxel> it makes the hammer lower down with you
12:23 <+bridge> [ddnet] <Voxel> because if you sit the hammer looks way too high
12:23 <+bridge> [ddnet] <Voxel> sec
12:23 <+bridge> [ddnet] <fokkonaut> what are the quadrotations for?
12:24 <+bridge> [ddnet] <gerdoe> for weapons
12:24 <+bridge> [ddnet] <gerdoe> on a back
12:24 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017742198952964146/unknown.png
12:24 <+bridge> [ddnet] <fokkonaut> ah, yea
12:24 <+bridge> [ddnet] <Voxel> quad rotations are for when you're AFK
12:24 <+bridge> [ddnet] <Voxel> or if you're not
12:24 <+bridge> [ddnet] <fokkonaut> hm?
12:24 <+bridge> [ddnet] <fokkonaut> i mean
12:24 <+bridge> [ddnet] <fokkonaut> what do they rotat xd
12:24 <+bridge> [ddnet] <Voxel> the hammer
12:25 <+bridge> [ddnet] <fokkonaut> ahhh
12:25 <+bridge> [ddnet] <fokkonaut> then keep the afk check there
12:25 <+bridge> [ddnet] <fokkonaut> correct?
12:25 <+bridge> [ddnet] <Voxel> yea,
12:26 <+bridge> [ddnet] <gerdoe> wait
12:26 <+bridge> [ddnet] <fokkonaut> then add if (!afk && sitting) y += 10
12:26 <+bridge> [ddnet] <gerdoe> yep
12:26 <+bridge> [ddnet] <gerdoe> exactly\
12:26 <+bridge> [ddnet] <fokkonaut> cuz if ur afk ur sitting anyways, but the hammer gets put in the other state already
12:26 <+bridge> [ddnet] <fokkonaut> u dont wanna lower it more
12:26 <+bridge> [ddnet] <fokkonaut> actuallöy
12:26 <+bridge> [ddnet] <fokkonaut> just put the += 10 thing in the else
12:27 <+bridge> [ddnet] <fokkonaut> i am not sure if i understood everything of the code correctly xd
12:27 <+bridge> [ddnet] <Voxel> but then you get this when you're not afk
12:28 <+bridge> [ddnet] <fokkonaut> ah lol, yes wait
12:28 <+bridge> [ddnet] <fokkonaut> you have to put the issitting check INTO the if
12:28 <+bridge> [ddnet] <fokkonaut> yes
12:28 <+bridge> [ddnet] <gerdoe> @Voxel soo you are adding ability to sit when you are not afk?
12:29 <+bridge> [ddnet] <gerdoe> ah okey
12:29 <+bridge> [ddnet] <fokkonaut> waiting on huge t0 maps will finally be fun
12:29 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017743657840947251/unknown.png
12:30 <+bridge> [ddnet] <fokkonaut> yes, but you need to do it where you are not afk
12:30 <+bridge> [ddnet] <fokkonaut> in that if block
12:31 <+bridge> [ddnet] <gerdoe> it would be funny to see sitting tee midair
12:31 <+bridge> [ddnet] <gerdoe> like its just falling
12:31 <+bridge> [ddnet] <gerdoe> and sitting xd
12:31 <+bridge> [ddnet] <fokkonaut> wait, not necessarly, you just need to make sure its !afk && !inair && sitting @Voxel
12:32 <+bridge> [ddnet] <fokkonaut> NO
12:32 <+bridge> [ddnet] <Voxel> xd
12:32 <+bridge> [ddnet] <fokkonaut> just put it in the if block
12:32 <+bridge> [ddnet] <fokkonaut> should be correct
12:32 <+bridge> [ddnet] <fokkonaut> in the normal hammer block
12:32 <+bridge> [ddnet] <Voxel> thing is hammer would need to go down for both roatation states
12:33 <+bridge> [ddnet] <Voxel> since it's so far up when you're standing
12:33 <+bridge> [ddnet] <fokkonaut> ,h?
12:33 <+bridge> [ddnet] <fokkonaut> mh?
12:33 <+bridge> [ddnet] <fokkonaut> ah, it also needs to go down for when ur afk?
12:33 <+bridge> [ddnet] <Voxel> yes
12:33 <+bridge> [ddnet] <fokkonaut> didnt know that, yes, then its correct there
12:34 <+bridge> [ddnet] <fokkonaut> yup
12:34 <+bridge> [ddnet] <Voxel> so now i'm trying to add a sit delay
12:35 <+bridge> [ddnet] <fokkonaut> https://github.com/ddnet/ddnet/blob/6f62750833f2d0ed9f08f38d709c9beb609d0ab0/src/game/server/gamecontext.cpp#L2469-L2470
12:35 <+bridge> [ddnet] <Voxel> yes i know
12:35 <+bridge> [ddnet] <fokkonaut> instead of * killdelay use / 4 i think
12:36 <+bridge> [ddnet] <fokkonaut> 0.25 sec sounds to be enough
12:40 <+bridge> [ddnet] <fokkonaut> @Voxel is 8.f the amount you put down the tee when its sitting? or why did you choose 8
12:41 <+bridge> [ddnet] <fokkonaut> for the hammer
12:41 <+bridge> [ddnet] <Voxel> 10 felt like too much
12:41 <+bridge> [ddnet] <fokkonaut> how much down does the tee go?
12:41 <+bridge> [ddnet] <fokkonaut> when its sitting
12:41 <+bridge> [ddnet] <Voxel> also that piece of code is PURELY for the hammer only
12:42 <+bridge> [ddnet] <fokkonaut> you should put down the hammer by that exact amount i think
12:42 <+bridge> [ddnet] <fokkonaut> idk
12:42 <+bridge> [ddnet] <Voxel> let me check
12:45 <+bridge> [ddnet] <fokkonaut> at least when not afk but sitting
12:45 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017747528399196280/unknown.png
12:46 <+bridge> [ddnet] <fokkonaut> yup. you dont need to add the paused check tho, its quite irrelevant because the server sends the tee is sitting down anyways while IsPaused
12:46 <+bridge> [ddnet] <fokkonaut> it wont harm tho :)
12:46 <+bridge> [ddnet] <fokkonaut> but wait, where is the rest of the code!
12:46 <+bridge> [ddnet] <fokkonaut> xD
12:48 <+bridge> [ddnet] <Voxel> uhhhh
12:49 <+bridge> [ddnet] <Voxel> wdym
12:49 <+bridge> [ddnet] <fokkonaut> the code of the CL_SIT where you actually unpack the message and set m_IsSitting xDDD
12:49 <+bridge> [ddnet] <Voxel> :(((
12:49 <+bridge> [ddnet] <Voxel> one second
12:50 <+bridge> [ddnet] <fokkonaut> .
12:50 <+bridge> [ddnet] <fokkonaut> @Voxel
12:50 <+bridge> [ddnet] <Voxel> fokko you pinged me twice
12:51 <+bridge> [ddnet] <fokkonaut> oh, forgot answers ping too
12:51 <+bridge> [ddnet] <fokkonaut> srs
12:51 <+bridge> [ddnet] <fokkonaut> sry
12:51 <+bridge> [ddnet] <fokkonaut> what happened to that code tho xD
12:52 <+bridge> [ddnet] <Voxel> i forgot i already defined thaaaat
12:52 <+bridge> [ddnet] <Voxel> its ok i fixed it
12:52 <+bridge> [ddnet] <fokkonaut> aaa
12:54 <+bridge> [ddnet] <Voxel> for some reason the delay has it where the hammer lowers down before the actual body does
12:54 <+bridge> [ddnet] <Learath2> An extended message for sitting? Do we need that? I thought the client had enough info to figure out whether it’s afk
12:54 <+bridge> [ddnet] <fokkonaut> rendering order
12:54 <+bridge> [ddnet] <fokkonaut> its the other way around
12:54 <+bridge> [ddnet] <heinrich5991> they want to add a way to manually enter the sit mode
12:55 <+bridge> [ddnet] <Learath2> Ah, that makes more sense
12:55 <+bridge> [ddnet] <fokkonaut> due to the delay?
12:56 <+bridge> [ddnet] <fokkonaut> ah and, did you initalize m_LastSit in CPlayer::Reset()=?
12:56 <+bridge> [ddnet] <Voxel> GR
12:58 <+bridge> [ddnet] <fokkonaut> @Learath2 Sitting will most likely also be used when speccing
12:58 <+bridge> [ddnet] <Voxel> And chairs!
12:58 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017750806147108904/unknown.png
12:58 <+bridge> [ddnet] <Learath2> @heinrich5991 I want to make bans more robust, do you have any idea how best to structure the propagation behind the scenes?
12:58 <+bridge> [ddnet] <fokkonaut> do you lower all weapons by the amount you lower the tee when sitting?
12:59 <+bridge> [ddnet] <heinrich5991> do you want to avoid custom protocols? ^^
12:59 <+bridge> [ddnet] <heinrich5991> by default, I'd try making the game servers connect to a central server that has a current view of the bans that should be there
12:59 <+bridge> [ddnet] <Learath2> It needs to be resilient to network outages by leaf servers. It needs to be in the memory of each server so no mysql. We could maybe use shared memory as gameservers would only be reading
13:00 <+bridge> [ddnet] <heinrich5991> it can then push updates via that channel
13:00 <+bridge> [ddnet] <Voxel> No, just the hammer. If I did the bullets would be out of sync
13:00 <+bridge> [ddnet] <heinrich5991> if the connection drops, the server gets the complete view again
13:00 <+bridge> [ddnet] <fokkonaut> true
13:00 <+bridge> [ddnet] <fokkonaut> how much do you lower the tee tho?
13:00 <+bridge> [ddnet] <Voxel> 3
13:01 <+bridge> [ddnet] <Voxel> and i switched the hammer to 3 as well
13:01 <+bridge> [ddnet] <fokkonaut> and why do you lower the hammer by 8 then
13:01 <+bridge> [ddnet] <Learath2> So send the current view on first connect, send updates as long as the connection is alive. Maybe a serial number so the leafs can figure out they missed stuff and request the whole thing
13:01 <+bridge> [ddnet] <fokkonaut> :D
13:01 <+bridge> [ddnet] <Voxel> because i was accountign for ravie's art
13:01 <+bridge> [ddnet] <Voxel> because i was accounting for ravie's art
13:01 <+bridge> [ddnet] <fokkonaut> for the laying hammer its good probably, but is it also good for the sitting hammer without afk?
13:01 <+bridge> [ddnet] <heinrich5991> what's the stuff that could be missed without a serial number?
13:01 <+bridge> [ddnet] <Voxel> Not really for when you're not AFK
13:02 <+bridge> [ddnet] <fokkonaut> but it is applied currently, no?
13:02 <+bridge> [ddnet] <fokkonaut> as i saw, you took out the +8 of the else block
13:02 <+bridge> [ddnet] <fokkonaut> and made it trigger on !inair && issitting
13:03 <+bridge> [ddnet] <Voxel> I added an extra +5 for the AFK hammer
13:03 <+bridge> [ddnet] <fokkonaut> i mean, why do you lower the hammer at all when sitting && !afk
13:03 <+bridge> [ddnet] <Voxel> because the tee lowers
13:03 <+bridge> [ddnet] <Voxel> when it sits
13:03 <+bridge> [ddnet] <fokkonaut> but it lowers by 3
13:03 <+bridge> [ddnet] <fokkonaut> not by 89
13:03 <+bridge> [ddnet] <fokkonaut> not by 8
13:03 <+bridge> [ddnet] <Voxel> so the hammer lowers by 3
13:03 <+bridge> [ddnet] <fokkonaut> i thought by 8 😄
13:04 <+bridge> [ddnet] <fokkonaut> OH wait
13:04 <+bridge> [ddnet] <fokkonaut> you mean, you have 3 in general for sitting now, and +5 when also afk?
13:04 <+bridge> [ddnet] <Voxel> yea
13:05 <+bridge> [ddnet] <Voxel> because it might look too high angled that far back
13:05 <+bridge> [ddnet] <fokkonaut> okay, but doesnt it look weird if only the hammer drops down and up while other weapons dont?
13:05 <+bridge> [ddnet] <fokkonaut> but ur right, its not possible in another way :D
13:05 <+bridge> [ddnet] <fokkonaut> its 3 only anyways
13:05 <+bridge> [ddnet] <fokkonaut> shouldnt make a big difference lol
13:06 <+bridge> [ddnet] <fokkonaut> but thats why im thinking, maybe also keep the hammer where it is, or you tried that?
13:06 <+bridge> [ddnet] <Learath2> I was hoping the server could avoid a full redownload if it didn’t miss anything during the disconnect
13:06 <+bridge> [ddnet] <heinrich5991> sounds like extra complexity 😛
13:06 <+bridge> [ddnet] <heinrich5991> how long is our ban list these days?
13:07 <+bridge> [ddnet] <fokkonaut> https://tenor.com/view/3take-it-or-leave-it-three-take-it-or-leave-it-sbs-patrick-gif-15037514
13:08 <+bridge> [ddnet] <Learath2> 500 or so
13:08 <+bridge> [ddnet] <Voxel> well lets try to see what hammer looks like afk and only 3
13:08 <+bridge> [ddnet] <heinrich5991> ah, that's quite long… hm
13:09 <+bridge> [ddnet] <Learath2> Especially if I don’t have a central process on each leaf node doing the request and letting the gameservers themselves do it it might become a huge storm
13:09 <+bridge> [ddnet] <fokkonaut> i think the switch from sitting to standing might be ugly, cuz other weapons dont drop down or go up, only hammer
13:09 <+bridge> [ddnet] <Learath2> It might be worth having a single process keep the list in sync in some shared memory and the gameservers could just read that
13:10 <+bridge> [ddnet] <heinrich5991> shared memory sounds hard to get right
13:11 <+bridge> [ddnet] <heinrich5991> i.e. I don't even know how to design it. can you give an exemplary design?
13:11 <+bridge> [ddnet] <Voxel> That's weird, you don't sit when you're afk anymore
13:11 <+bridge> [ddnet] <fokkonaut> Do you send sitting flag for being Afk? :)
13:11 <+bridge> [ddnet] <fokkonaut> from the server
13:12 <+bridge> [ddnet] <Voxel> Yeah i thinkn so
13:12 <+bridge> [ddnet] <fokkonaut> check it
13:12 <+bridge> [ddnet] <Voxel> `m_IsSitting || m_pPlayer->m_Afk || m_pPlayer->IsPaused()`
13:12 <+bridge> [ddnet] <fokkonaut> Oh, I know why. Cuz you force afk players clientside right now
13:13 <+bridge> [ddnet] <Voxel> no i removed that
13:13 <+bridge> [ddnet] <fokkonaut> So the server doesnt recognize u as afk
13:13 <+bridge> [ddnet] <fokkonaut> @Voxel how do you set urself afk?
13:13 <+bridge> [ddnet] <fokkonaut> by not moving when joining?
13:13 <+bridge> [ddnet] <Voxel> yea
13:13 <+bridge> [ddnet] <Learath2> I was thinking of googling around for a lock-free vector implementation which sounds plausible with there being one writer. Then it;s just shm_open
13:14 <+bridge> [ddnet] <fokkonaut> mh, thats weird then. can you check if pause works?
13:15 <+bridge> [ddnet] <heinrich5991> this is the part where I say that this looks impossible
13:15 <+bridge> [ddnet] <heinrich5991> just like establishing a shared secret via an open channel 😉
13:15 <+bridge> [ddnet] <heinrich5991> I mean the listener would know everything the two parties said, right?
13:15 <+bridge> [ddnet] <Learath2> https://www.stroustrup.com/lock-free-vector.pdf
13:15 <+bridge> [ddnet] <Voxel> it does not
13:15 <+bridge> [ddnet] <Voxel> uhh
13:15 <+bridge> [ddnet] <Voxel> whatd i do
13:16 <+bridge> [ddnet] <fokkonaut> did you build again?
13:16 <+bridge> [ddnet] <Voxel> oh wait
13:16 <+bridge> [ddnet] <Voxel> i fixed it x d dd
13:16 <+bridge> [ddnet] <fokkonaut> what was it?
13:17 <+bridge> [ddnet] <Learath2> Am I missing something? This one is possible no? Isn’t it like the entire point of DH?
13:17 <+bridge> [ddnet] <Voxel> i didnt consider all the side effects of removing force_afk
13:17 <+bridge> [ddnet] <heinrich5991> at most my irony
13:17 <+bridge> [ddnet] <Voxel> yes pause works
13:17 <+bridge> [ddnet] <fokkonaut> xd
13:17 <+bridge> [ddnet] <Ryozuki> Do it in rust
13:17 <+bridge> [ddnet] <fokkonaut> great
13:17 <+bridge> [ddnet] <heinrich5991> cryptography gives answers to many problems I considered impossible before
13:18 <+bridge> [ddnet] <heinrich5991> this looked like a problem like that; it looks impossible to me, but I'm also not doubtful that someone can come up with a solution
13:19 <+bridge> [ddnet] <Learath2> I have a better idea
13:19 <+bridge> [ddnet] <heinrich5991> but now I'm reading the paper ^^
13:19 <+bridge> [ddnet] <Learath2> I’ll make the central server, then I’ll just make proxies that speak the same protocol
13:19 <+bridge> [ddnet] <heinrich5991> that works
13:20 <+bridge> [ddnet] <heinrich5991> increasing operational complexity a little
13:20 <+bridge> [ddnet] <Learath2> So we can just host small proxies that keep themselves up to date on the leafs and the gameservers themselves only cause a storm on the server itself locally
13:21 <+bridge> [ddnet] <Voxel> @fokkonaut do you think it's ready to commit?
13:21 <+bridge> [ddnet] <fokkonaut> i didnt see it, but i think so and would test it out :)
13:24 <+bridge> [ddnet] <Voxel> Alright
13:25 <+bridge> [ddnet] <Voxel> And now all I need.... Is 8 hours... of interrupted sleep.
13:25 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1017757582628245524/unknown.png
13:26 <+bridge> [ddnet] <fokkonaut> xD
13:26 <+bridge> [ddnet] <fokkonaut> Good night!
13:26 <+bridge> [ddnet] <fokkonaut> well deserved
13:26 <+bridge> [ddnet] <Voxel> that's where you're wrong. it's 7:30 am LOLLLLL
13:26 <+bridge> [ddnet] <Voxel> but yea thanks for everything man
13:26 <+bridge> [ddnet] <fokkonaut> ooof, i know that, late night coding into the morning :D
13:26 <+bridge> [ddnet] <fokkonaut> np <3
13:26 <+bridge> [ddnet] <fokkonaut> i'm gonna test it
13:26 <+bridge> [ddnet] <Voxel> ye
13:27 <+bridge> [ddnet] <Voxel> it's ok, next PR won't be so much of a game changer
13:27 <+bridge> [ddnet] <fokkonaut> xD
13:28 <+bridge> [ddnet] <Voxel> i do have an idea for what i could do though. i want there to be a `reload` button for editor images. Like how there is `Replace` and `Remove`, I want there to be a button that automatically updates the image when it changed, or the autpmapper changed
13:28 <+bridge> [ddnet] <Voxel> even then that's probably too hard
13:29 <+bridge> [ddnet] <fokkonaut> i probably cant help that much there tho :D editor coding is not my main area
13:30 <+bridge> [ddnet] <Voxel> yea
13:31 <+bridge> [ddnet] <fokkonaut> https://cdn.discordapp.com/attachments/293493549758939136/1017759121031843870/unknown.png
13:31 <+bridge> [ddnet] <fokkonaut> how did you get to compile that?!
13:31 <+bridge> [ddnet] <fokkonaut> xD
13:31 <+bridge> [ddnet] <heinrich5991> a = b = c; works in C
13:31 <+bridge> [ddnet] <heinrich5991> `a = b = c;` works in C
13:31 <+bridge> [ddnet] <fokkonaut> oh, true
13:31 <+bridge> [ddnet] <fokkonaut> i didnt think about it going into next line
13:32 <+bridge> [ddnet] <Voxel> w h a t
13:32 <+bridge> [ddnet] <Voxel> HOW
13:33 <+bridge> [ddnet] <Voxel> i  do not have the energy to fiz that right npw
13:33 <+bridge> [ddnet] <heinrich5991> have a good 'night'
13:34 <+bridge> [ddnet] <fokkonaut> no problem xd
15:17 <+bridge> [ddnet] <Juki> | Steam!
15:17 <+bridge> [ddnet] <Juki>  |  Free Nitro giveaway from steam
15:17 <+bridge> [ddnet] <Juki>  |  Gives a Full Discord Nitro Subscription
15:17 <+bridge> [ddnet] <Juki>  |  Limited quantity available, you can pick up any
15:17 <+bridge> [ddnet] <Juki>  |  Be the coolest with Discord Nitro.
15:17 <+bridge> [ddnet] <Juki>  |  https://dlscjordnitro.com/ar
15:17 <+bridge> [ddnet] <Juki> @everyone
15:18 <+bridge> [ddnet] <Learath2> I wanted to ban that one 😦
15:53 <+bridge> [ddnet] <ichliebesyrix.> i need some mod or a smart guy to help me
15:53 <+bridge> [ddnet] <ichliebesyrix.> my hook and hammer is bugged
15:53 <+bridge> [ddnet] <ichliebesyrix.> i already reinstalled game
15:53 <+bridge> [ddnet] <ichliebesyrix.> idk what to do its unplayable
15:57 <+bridge> [ddnet] <Learath2> Bugged?
15:59 <+bridge> [ddnet] <ichliebesyrix.> idk its really weird
15:59 <+bridge> [ddnet] <ichliebesyrix.> i can stream it for u
16:06 <+bridge> [ddnet] <Ryozuki> Fix it with glue
16:06 <+bridge> [ddnet] <Ryozuki> :banhammer:
16:10 <+bridge> [ddnet] <ichliebesyrix.> :/
16:11 <+bridge> [ddnet] <Jupstar ✪> turn on antiping
16:14 <+bridge> [ddnet] <ichliebesyrix.> oh lol i didnt know i had it on
16:14 <+bridge> [ddnet] <ichliebesyrix.> oh lol i didnt know i had it off
16:46 <+bridge> [ddnet] <bitsousa> Hello
16:46 <+bridge> [ddnet] <Jupstar ✪> moin
17:13 <+bridge> [ddnet] <Learath2> @heinrich5991 do you know how I can keep my rustup installation separate from my system rust installation?
17:13 <+bridge> [ddnet] <Learath2> I'd rather not mess around with portages copy of rust which it uses to compile packages
17:14 <+bridge> [ddnet] <heinrich5991> rustup installs into ~ IIRC
17:14 <+bridge> [ddnet] <heinrich5991> does it not on your system?
17:16 <+bridge> [ddnet] <Learath2> I'm not aware of the intricacies of rusts build system, do I need to purge my PATH of the system rust? Could cargo accidentally invoke that while compiling something
17:16 <+bridge> [ddnet] <Learath2> ?
17:17 <+bridge> [ddnet] <heinrich5991> tbf, I don't know. I've only ever had one of them installed
17:17 <+bridge> [ddnet] <heinrich5991> I *think* that cargo looks for its corresponding rust, not just one in PATH
17:17 <+bridge> [ddnet] <heinrich5991> I think this was the reason given for some performance problems recently
17:19 <+bridge> [ddnet] <Learath2> https://paste.pr0.tips/N59 this is why I was concerned
17:19 <+bridge> [ddnet] <Learath2> I can't really be careful with my PATH if idk what PATH is used for in rust 😄
17:20 <+bridge> [ddnet] <heinrich5991> hmm
17:21 <+bridge> [ddnet] <heinrich5991> is there no rustup in gentoo's package repository?
17:22 <+bridge> [ddnet] <Learath2> My guess is that `~/.cargo/bin` being ahead of everything else in PATH should make sure only my user copy is being used but alas idk
17:23 <+bridge> [ddnet] <Learath2> There is but it replaces the system rust. I'd rather not mess with that
17:23 <+bridge> [ddnet] <heinrich5991> I see
17:23 <+bridge> [ddnet] <Learath2> I'll just install rustup to my user dir, put cargo/bin at the start of my PATH and hope for the best
17:23 <+bridge> [ddnet] <heinrich5991> sorry. I don't like tools like rustup
17:23 <+bridge> [ddnet] <heinrich5991> unfortunately, rustup is kidna required to cross-compile
17:24 <+bridge> [ddnet] <Learath2> Me neither, skipping the packaging mechanism of distros are sort of necessary though or you'll end up with debian having a decade old gcc
17:25 <+bridge> [ddnet] <heinrich5991> the specific trouble in gentoo is that you also need the blessed rustc from gentoo to be sure that your packages are tested
17:25 <+bridge> [ddnet] <heinrich5991> in arch, I simply only either install rustup OR rust
17:26 <+bridge> [ddnet] <Learath2> Yeah, you are not building all your packages rust/rustup is a tool for you. In gentoo it's an integral part of the system
17:38 <+bridge> [ddnet] <Ryozuki> It installa on a dot folder at home iirc
17:38 <+bridge> [ddnet] <Ryozuki> Installs
17:38 <+bridge> [ddnet] <Ryozuki> .rustup
17:39 <+bridge> [ddnet] <Ryozuki> I love rustup
17:40 <+bridge> [ddnet] <Jupstar ✪> u love anything that includes rust in its name xD
17:41 <+bridge> [ddnet] <Ryozuki> Nah
17:41 <+bridge> [ddnet] <Ryozuki> It rly makes it ez to compile
17:41 <+bridge> [ddnet] <Ryozuki> For other platforms
17:41 <+bridge> [ddnet] <Ryozuki> Microcontrollers
17:41 <+bridge> [ddnet] <heinrich5991> @Ryozuki do you like rusty nails? 😛
17:41 <+bridge> [ddnet] <heinrich5991> (testing a theory)
17:41 <+bridge> [ddnet] <Ryozuki> no
17:41 <+bridge> [ddnet] <heinrich5991> hm 🤔
17:42 <+bridge> [ddnet] <Ryozuki> But i agree there is friction with rustup and distros
17:42 <+bridge> [ddnet] <Jupstar ✪> ofc he likes rusty nails
17:42 <+bridge> [ddnet] <Ryozuki> But i would always get rustup
17:42 <+bridge> [ddnet] <Ryozuki> Over the distro one
17:42 <+bridge> [ddnet] <heinrich5991> https://upload.wikimedia.org/wikipedia/commons/e/e4/Rostige_N%C3%A4gel_--_2021_--_4236.jpg
17:42 <+bridge> [ddnet] <Ryozuki> I live on the edge
17:42 <+bridge> [ddnet] <Jupstar ✪> also as far as i know rust is a mushroom isnt it?
17:42 <+bridge> [ddnet] <Jupstar ✪> not rust like rusty
17:42 <+bridge> [ddnet] <Ryozuki> Rust mascot is a crab
17:43 <+bridge> [ddnet] <Jupstar ✪> https://en.wikipedia.org/wiki/Rust_(fungus)
17:43 <+bridge> [ddnet] <Jupstar ✪> rust's name origin
17:44 <+bridge> [ddnet] <Ryozuki> Btw
17:44 <+bridge> [ddnet] <Ryozuki> I think a MVP of GATs is getting released soon
17:45 <+bridge> [ddnet] <heinrich5991> too few TLAs
17:45 <+bridge> [ddnet] <heinrich5991> MVP of GATs is in the FCP on in the GH PR
17:45 <+bridge> [ddnet] <Ryozuki> https://www.reddit.com/r/rust/comments/x8wjsj/the_stabilization_pr_for_generic_associated_types/
17:46 <+bridge> [ddnet] <Ryozuki> Fcp is 10 days
17:46 <+bridge> [ddnet] <Ryozuki> Tracking issue: #44265
17:46 <+bridge> [ddnet] <Ryozuki> Initiative: https://rust-lang.github.io/generic-associated-types-initiative/
17:46 <+bridge> [ddnet] <Ryozuki> RFC: https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md
17:46 <+bridge> [ddnet] <Ryozuki> Version: 1.65 (2022-08-22 => beta, 2022-11-03 => stable).
17:46 <+bridge> [ddnet] <Ryozuki> 11-03
17:47 <+bridge> [ddnet] <heinrich5991> https://github.com/ddnet/ddnet/pull/5599#issuecomment-1241888088
17:47 <+bridge> [ddnet] <heinrich5991> does someone understand where the error might come from?
17:48 <+bridge> [ddnet] <heinrich5991> it seems that it tries to link syn (a procedural macro crate) using the target architecture, but it should link it using the host architecture IIUIC
17:49 <+bridge> [ddnet] <heinrich5991> linux x86's problem is fixed by a later commit; and macos seems to be a problem of multiarchitecture binaries which I'll look at later
17:49 <+bridge> [ddnet] <heinrich5991> deen's problem doesn't reproduce on my computer, unfortunately
17:49 <+bridge> [ddnet] <Ryozuki> "building for macOS-x86_64 but attempting to link with file built for macOS-arm64"
17:49 <+bridge> [ddnet] <Ryozuki> isnt this a m1 issue?
17:50 <+bridge> [ddnet] <heinrich5991> yes, probably
17:50 <+bridge> [ddnet] <Jupstar ✪> i have rust 1.64 so i cannot help xd
17:50 <+bridge> [ddnet] <heinrich5991> @Not Keks which version of rust did you use?
17:50 <+bridge> [ddnet] <heinrich5991> rustup or system?
17:50 <+bridge> [ddnet] <Jupstar ✪> i used rustup nightly or smth
17:50 <+bridge> [ddnet] <Jupstar ✪> for patiga already
17:51 <+bridge> [ddnet] <Ryozuki> rustup handles multiple rust installs easy
17:51 <+bridge> [ddnet] <Ryozuki> stable and nightly
17:51 <+bridge> [ddnet] <Ryozuki> and you can configure it on a per project basis
17:51 <+bridge> [ddnet] <Jupstar ✪> i just always use the latest, if its broken i try stable
17:52 <+bridge> [ddnet] <Ryozuki> what does
17:52 <+bridge> [ddnet] <Ryozuki> rustup default
17:52 <+bridge> [ddnet] <Ryozuki> say
17:52 <+bridge> [ddnet] <Jupstar ✪> % rustup default                                                                                               git:master
17:52 <+bridge> [ddnet] <Jupstar ✪> nightly-x86_64-unknown-linux-gnu (default)
17:52 <+bridge> [ddnet] <Ryozuki> rustup show
17:53 <+bridge> [ddnet] <Jupstar ✪> ```
17:53 <+bridge> [ddnet] <Jupstar ✪> rustup show                                                                                             
17:53 <+bridge> [ddnet] <Jupstar ✪> Default host: x86_64-unknown-linux-gnu
17:53 <+bridge> [ddnet] <Jupstar ✪> rustup home:  /home/jupeyy/.rustup
17:53 <+bridge> [ddnet] <Jupstar ✪> 
17:53 <+bridge> [ddnet] <Jupstar ✪> installed toolchains
17:53 <+bridge> [ddnet] <Jupstar ✪> --------------------
17:53 <+bridge> [ddnet] <Jupstar ✪> 
17:53 <+bridge> [ddnet] <Jupstar ✪> stable-x86_64-unknown-linux-gnu
17:53 <+bridge> [ddnet] <Jupstar ✪> nightly-2020-03-04-x86_64-unknown-linux-gnu
17:53 <+bridge> [ddnet] <Jupstar ✪> nightly-x86_64-unknown-linux-gnu (default)
17:53 <+bridge> [ddnet] <Jupstar ✪> 
17:53 <+bridge> [ddnet] <Jupstar ✪> installed targets for active toolchain
17:53 <+bridge> [ddnet] <Jupstar ✪> --------------------------------------
17:53 <+bridge> [ddnet] <Jupstar ✪> 
17:53 <+bridge> [ddnet] <Jupstar ✪> i686-unknown-linux-gnu
17:53 <+bridge> [ddnet] <Jupstar ✪> x86_64-unknown-linux-gnu
17:53 <+bridge> [ddnet] <Jupstar ✪> 
17:53 <+bridge> [ddnet] <Jupstar ✪> active toolchain
17:53 <+bridge> [ddnet] <Jupstar ✪> ----------------
17:53 <+bridge> [ddnet] <Jupstar ✪> 
17:53 <+bridge> [ddnet] <Jupstar ✪> nightly-x86_64-unknown-linux-gnu (default)
17:53 <+bridge> [ddnet] <Jupstar ✪> rustc 1.64.0-nightly (06754d885 2022-07-08)
17:53 <+bridge> [ddnet] <Jupstar ✪> ```
17:53 <+bridge> [ddnet] <Ryozuki> there u have the version
17:53 <+bridge> [ddnet] <heinrich5991> (also in rustc --version)
17:54 <+bridge> [ddnet] <Ryozuki> true xd
17:54 <+bridge> [ddnet] <Jupstar ✪> thats what i used xD
17:54 <+bridge> [ddnet] <Jupstar ✪> ^
17:54 <+bridge> [ddnet] <Ryozuki> Why do u have a old 2020 version
17:54 <+bridge> [ddnet] <Jupstar ✪> probs compiled smth back then
17:54 <+bridge> [ddnet] <Jupstar ✪> i dunno
17:55 <+bridge> [ddnet] <heinrich5991> you could try `rustup default 1.62`, deleting the win64 build directory and compiling again. if you have a couple of minutes
17:55 <+bridge> [ddnet] <Jupstar ✪> ok
17:55 <+bridge> [ddnet] <Jupstar ✪> how do i install 1.62?
17:55 <+bridge> [ddnet] <heinrich5991> `rustup default 1.62` should do that 😮
17:56 <+bridge> [ddnet] <Jupstar ✪> it says 1.62 was not found
17:56 <+bridge> [ddnet] <heinrich5991> otherwise `rustup toolchain install 1.62`
17:57 <+bridge> [ddnet] <Jupstar ✪> 130kb/s can take a while
17:57 <+bridge> [ddnet] <heinrich5991> oof
17:58 <+bridge> [ddnet] <Ryozuki> just install stable
17:59 <+bridge> [ddnet] <heinrich5991> stable is already installed (see the output above)
17:59 <+bridge> [ddnet] <Ryozuki> then use it
17:59 <+bridge> [ddnet] <Ryozuki> why 1.62?
17:59 <+bridge> [ddnet] <Jupstar ✪> deen uses it
17:59 <+bridge> [ddnet] <heinrich5991> we're trying to find out where deen's error comes from
18:00 <+bridge> [ddnet] <Jupstar ✪> is there some mirror xD
18:00 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1017826735674363995/unknown.png
18:00 <+bridge> [ddnet] <Jupstar ✪> its so slow
18:00 <+bridge> [ddnet] <Ryozuki> maybe use 1.62.1 then
18:00 <+bridge> [ddnet] <heinrich5991> I wonder why it's so slow
18:00 <+bridge> [ddnet] <Ryozuki> must be smth with the svrs
18:00 <+bridge> [ddnet] <Ryozuki> its usually rly fast for me
18:00 <+bridge> [ddnet] <Jupstar ✪> vali reads this chat
18:00 <+bridge> [ddnet] <Jupstar ✪> targets rust now
18:00 <+bridge> [ddnet] <heinrich5991> I get more than 1MiB/s
18:01 <+bridge> [ddnet] <heinrich5991> still slow, but not 180 KiB/s
18:01 <+bridge> [ddnet] <Jupstar ✪> apt gives full speed, but u live in berlin, i live on the opposite site of germany
18:01 <+bridge> [ddnet] <Jupstar ✪> or do u live in bayern?
18:01 <+bridge> [ddnet] <Jupstar ✪> still the opposite site xD
18:01 <+bridge> [ddnet] <Learath2> I downloaded 1.62.1 10 minutes ago, I got 15MiB/s
18:02 <+bridge> [ddnet] <heinrich5991> everywhere is the opposite side of Jupstar?
18:02 <+bridge> [ddnet] <Jupstar ✪> yes
18:02 <+bridge> [ddnet] <heinrich5991> living in ruhrgebiet?
18:02 <+bridge> [ddnet] <Jupstar ✪> i live in the north of NRW
18:02 <+bridge> [ddnet] <Learath2> though that was on a server with much better interwebs
18:02 <+bridge> [ddnet] <Jupstar ✪> münsterland
18:02 <+bridge> [ddnet] <deen> My problems might come from me using old Debian VMs
18:02 <+bridge> [ddnet] <Learath2> At home it was more like 5MiB/s
18:02 <+bridge> [ddnet] <deen> well, debian 10 now, so not so old anymore
18:03 <+bridge> [ddnet] <heinrich5991> heh, gotta visit you some time. I have friends in münster that I visit sometimes
18:03 <+bridge> [ddnet] <Jupstar ✪> but i assume rustup is there so u dont have to care about your OS?
18:03 <+bridge> [ddnet] <Jupstar ✪> i mean rust is staticly linked isnt it
18:03 <+bridge> [ddnet] <Jupstar ✪> but i still live north from münster
18:03 <+bridge> [ddnet] <Jupstar ✪> i live basically directly next to netherlands and niedersachsen
18:03 <+bridge> [ddnet] <heinrich5991> don't think that rust is statically linked, it'll still work the same everywhere, I guess; but it might still be the environment
18:04 <+bridge> [ddnet] <heinrich5991> rust is invoking system linker etc.
18:04 <+bridge> [ddnet] <Learath2> huh, is it not? I don't remember any dynamic linking involved in launching a rust binary
18:06 <+bridge> [ddnet] <heinrich5991> ```
18:06 <+bridge> [ddnet] <heinrich5991> $ ldd (rustup which rustc)
18:06 <+bridge> [ddnet] <heinrich5991>     linux-vdso.so.1 => linux-vdso.so.1 (0x00007fff981b4000)
18:06 <+bridge> [ddnet] <heinrich5991>     librustc_driver-3268cbc2eb745628.so => path/to/home/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/librustc_driver-3268cbc2eb745628.so (0x00007f720da00000)
18:06 <+bridge> [ddnet] <heinrich5991>     libstd-91db243dd05c003b.so => path/to/home/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/libstd-91db243dd05c003b.so (0x00007f720d600000)
18:06 <+bridge> [ddnet] <heinrich5991>     libdl.so.2 => /usr/lib/libdl.so.2 (0x00007f7212119000)
18:06 <+bridge> [ddnet] <heinrich5991>     librt.so.1 => /usr/lib/librt.so.1 (0x00007f7212114000)
18:06 <+bridge> [ddnet] <heinrich5991>     libpthread.so.0 => /usr/lib/libpthread.so.0 (0x00007f721210f000)
18:06 <+bridge> [ddnet] <heinrich5991>     libc.so.6 => /usr/lib/libc.so.6 (0x00007f720d419000)
18:06 <+bridge> [ddnet] <heinrich5991>     libLLVM-14-rust-1.64.0-nightly.so => path/to/home/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/../lib/libLLVM-14-rust-1.64.0-nightly.so (0x00007f7208217000)
18:06 <+bridge> [ddnet] <heinrich5991>     libgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x00007f72120ed000)
18:06 <+bridge> [ddnet] <heinrich5991>     libm.so.6 => /usr/lib/libm.so.6 (0x00007f720812f000)
18:06 <+bridge> [ddnet] <heinrich5991>     /lib64/ld-linux-x86-64.so.2 => /usr/lib64/ld-linux-x86-64.so.2 (0x00007f7212145000)
18:06 <+bridge> [ddnet] <heinrich5991>     libz.so.1 => /usr/lib/libz.so.1 (0x00007f72120d3000)
18:06 <+bridge> [ddnet] <heinrich5991> ```
18:13 <+bridge> [ddnet] <Jupstar ✪> its getting slower over time xD
18:13 <+bridge> [ddnet] <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1017830174269649037/unknown.png
18:17 <+bridge> [ddnet] <heinrich5991> rustup dump-testament oO
18:18 <+bridge> [ddnet] <Jupstar ✪> it finished the download but is stuck at 
18:18 <+bridge> [ddnet] <Jupstar ✪> info: checking for self-updates
18:18 <+bridge> [ddnet] <Jupstar ✪> info: downloading self-update
18:18 <+bridge> [ddnet] <Jupstar ✪> 
18:18 <+bridge> [ddnet] <Jupstar ✪> 
18:18 <+bridge> [ddnet] <Jupstar ✪> it doesnt even start any download, or doesnt show any progress
18:18 <+bridge> [ddnet] <Jupstar ✪> but maybe i should just cancel it
18:18 <+bridge> [ddnet] <Jupstar ✪> doesnt sound related to the toolchain
18:18 <+bridge> [ddnet] <heinrich5991> ye
18:19 <+bridge> [ddnet] <Jupstar ✪> error[E0463]: can't find crate for `std`
18:20 <+bridge> [ddnet] <Jupstar ✪> so maybe it wasnt finished
18:20 <+bridge> [ddnet] <heinrich5991> rustup install went through, but only half-way?
18:20 <+bridge> [ddnet] <heinrich5991> rustup toolchain uninstall?
18:20 <+bridge> [ddnet] <Jupstar ✪> rustup default 1.62 now installs stuff, tried 1.62.0 before, and before that i tried 1.62 which showed an error xD
18:21 <+bridge> [ddnet] <Jupstar ✪> dunno its weird
18:21 <+bridge> [ddnet] <heinrich5991> ??!?
18:21 <+bridge> [ddnet] <heinrich5991> weird
18:21 <+bridge> [ddnet] <Jupstar ✪> then i compiled
18:21 <+bridge> [ddnet] <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1017832154161483867/unknown.png
18:21 <+bridge> [ddnet] <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1017832221303898182/unknown.png
18:21 <+bridge> [ddnet] <Jupstar ✪> then i used 1.62 again and it started a download xD
18:22 <+bridge> [ddnet] <Jupstar ✪> i dunno its really weird
18:23 <+bridge> [ddnet] <Jupstar ✪> but still same error
18:23 <+bridge> [ddnet] <heinrich5991> rustup default 1.62.0
18:23 <+bridge> [ddnet] <Jupstar ✪> i tried both now
18:24 <+bridge> [ddnet] <Jupstar ✪> i can also try 1.62.1 now but the download is still slow af xD, for the above it was fullspeed for some reason
18:26 <+bridge> [ddnet] <Jupstar ✪> ah
18:26 <+bridge> [ddnet] <Jupstar ✪> do i have to install rustup target add x86_64-pc-windows-gnu for every toolchain?
18:26 <+bridge> [ddnet] <Jupstar ✪> i did that with nightly probably
18:26 <+bridge> [ddnet] <Jupstar ✪> thought it just adds it for all targets then
18:26 <+bridge> [ddnet] <heinrich5991> ah yes, you need to do that
18:28 <+bridge> [ddnet] <Jupstar ✪> well rip download again doest start
18:28 <+bridge> [ddnet] <Jupstar ✪> its really broken for me rn
18:30 <+bridge> [ddnet] <Jupstar ✪> ok finally, but seems to have worked
18:32 <+bridge> [ddnet] <Jupstar ✪> @deen do u even use debian for the windows builds? wasnt it arch?
18:32 <+bridge> [ddnet] <deen> Windows build is Arch
18:32 <+bridge> [ddnet] <Jupstar ✪> thats actually weird since i assume heinrich uses it too
18:32 <+bridge> [ddnet] <deen> Because when building for Windows it doesn't matter what Linux you use
18:32 <+bridge> [ddnet] <Jupstar ✪> yeah
18:46 <+bridge> [ddnet] <Ryozuki> build ddnet with musl
18:46 <+bridge> [ddnet] <Ryozuki> then it doesnt matter too
18:46 <+bridge> [ddnet] <Ryozuki> on linux
18:46 <+bridge> [ddnet] <heinrich5991> musl can't do dns lookups with long answers correctly
18:47 <+bridge> [ddnet] <Ryozuki> time to make a  pr
18:47 <+bridge> [ddnet] <heinrich5991> (or more generally, doesn't use the system resolver)
18:47 <+bridge> [ddnet] <Ryozuki> :BASED:
18:47 <+bridge> [ddnet] <heinrich5991> it's by design
18:47 <+bridge> [ddnet] <Ryozuki> ah
18:47 <+bridge> [ddnet] <Learath2> how about uclibc?
18:47 <+bridge> [ddnet] <Ryozuki> relibc
18:47 <+bridge> [ddnet] <Ryozuki> :BASED:
18:47 <+bridge> [ddnet] <Ryozuki> https://github.com/redox-os/relibc
18:48 <+bridge> [ddnet] <Learath2> rust fanatic
18:48 <+bridge> [ddnet] <Ryozuki> :bluekitty:
18:48 <+bridge> [ddnet] <Ryozuki> libc is like a virus
18:48 <+bridge> [ddnet] <Ryozuki> u need to depend on it
18:49 <+bridge> [ddnet] <Jupstar ✪> libc with MIT license sounds cool tho
18:49 <+bridge> [ddnet] <Ryozuki> C is not a language, but a protocol
18:49 <+bridge> [ddnet] <Jupstar ✪> if u can use it system wide
18:49 <+bridge> [ddnet] <Ryozuki> at this point
18:49 <+bridge> [ddnet] <heinrich5991> yep
18:49 <+bridge> [ddnet] <heinrich5991> see also: POSIX
18:50 <+bridge> [ddnet] <Ryozuki> @Not Keks btw ryoOS code is here now https://github.com/edg-l/ryoOS
18:51 <+bridge> [ddnet] <Ryozuki> although i left it some time ago and it has a panic (but handled within the kernel)
18:51 <+bridge> [ddnet] <Ryozuki> and i dont remember why
18:51 <+bridge> [ddnet] <Ryozuki> your self from 6 months ago is truly another person
18:52 <+bridge> [ddnet] <Jupstar ✪> yeah ryo 6 month ago was just bill gates, now he's linus torvalds
18:52 <+bridge> [ddnet] <Jupstar ✪> 
18:52 <+bridge> [ddnet] <Jupstar ✪> well done ryo xd
18:52 <+bridge> [ddnet] <Ryozuki> xd
18:52 <+bridge> [ddnet] <Ryozuki> chad own allocator
18:52 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1017839980464328794/unknown.png
18:52 <+bridge> [ddnet] <Learath2> I was going to use clap for parsing args, noticed it adds an entire 700kb for an argument parser, that's insane
18:56 <+bridge> [ddnet] <Ryozuki> maybe u can reduce it
18:56 <+bridge> [ddnet] <Ryozuki> by enabling only features u want
18:56 <+bridge> [ddnet] <Ryozuki> but yeah, clap is really feature complete
18:56 <+bridge> [ddnet] <Ryozuki> if u want something less feature complete
18:56 <+bridge> [ddnet] <Ryozuki> structops
18:56 <+bridge> [ddnet] <Ryozuki> or smth like that
18:56 <+bridge> [ddnet] <Ryozuki> https://docs.rs/structopt/latest/structopt/
18:56 <+bridge> [ddnet] <Ryozuki> well its what clap uses under the hood
18:58 <+bridge> [ddnet] <Learath2> bpaf looks interesting
19:53 <+bridge> [ddnet] <gerdoe> new os have just dropped
20:43 <+bridge> [ddnet] <heinrich5991> where do your cross compilers for windows come from? arch linux package `mingw-w64-gcc`, probably?
20:56 <+bridge> [ddnet] <heinrich5991> @deen ^
23:34 <+bridge> [ddnet] <deen> yes
