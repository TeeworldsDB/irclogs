00:59 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1035326994667294720/unknown.png
01:04 <+bridge> [ddnet] <deen> Should we periodically clear symbols for old releases? They are taking 12 GB already: https://ddnet.org/downloads/symbols/
01:07 <+bridge> [ddnet] <Anime.pdf> This video is so true
01:09 <+bridge> [ddnet] <uwu> This message was not shown in matrix ðŸ‘‰ ðŸ‘ˆ
07:17 <+bridge> [ddnet] <Jupstar âœª> I guess the nightly symbols from over weeks ago are not that useful
07:24 <+bridge> [ddnet] <Ryozuki> Didnt even know that existed
07:56 <+bridge> [ddnet] <Ryozuki> perfection
07:56 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1035431958626455623/unknown.png
08:26 <+bridge> [ddnet] <Ryozuki> https://github.com/dandavison/delta
08:28 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1035439841061646396/unknown.png
08:28 <+bridge> [ddnet] <Ryozuki> my neovim getting better
08:40 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1035442879839080448/unknown.png
09:07 <+bridge> [ddnet] <Jupstar âœª> @deen  how much telemetry data does steam offer?
09:07 <+bridge> [ddnet] <Jupstar âœª> 
09:07 <+bridge> [ddnet] <Jupstar âœª> Like does it say which GPUs are used by players of ddnet?
09:10 <+bridge> [ddnet] <Ryozuki> https://deck-24abcd.netlify.app/
09:10 <+bridge> [ddnet] <Ryozuki> this is cool AF
09:11 <+bridge> [ddnet] <Jupstar âœª> oh nice, a friend even plays this card game ðŸ˜„
09:12 <+bridge> [ddnet] <Ryozuki> Css only
09:12 <+bridge> [ddnet] <Ryozuki> duh its pokemon xd
09:12 <+bridge> [ddnet] <Jupstar âœª> i know
09:12 <+bridge> [ddnet] <Jupstar âœª> but its defs not the greatest TCG XD
09:12 <+bridge> [ddnet] <Jupstar âœª> its very luck based
09:21 <+bridge> [ddnet] <Ryozuki> I guess  never played it
09:22 <+bridge> [ddnet] <Jupstar âœª> what is yours all moral standpoint to basic telemetry?
09:22 <+bridge> [ddnet] <Jupstar âœª> 
09:22 <+bridge> [ddnet] <Jupstar âœª> gpu, cpu, ram
09:22 <+bridge> [ddnet] <Jupstar âœª> integer config variables
09:23 <+bridge> [ddnet] <Jupstar âœª> for string config variables only if they differ from the default, so nothing leaked (some expcetion e.g. gfx_backend)
09:24 <+bridge> [ddnet] <Jupstar âœª> and operating system xdd
09:28 <+bridge> [ddnet] <Ryozuki> xd
09:29 <+bridge> [ddnet] <Ryozuki> If its opt in its ok
09:29 <+bridge> [ddnet] <Ryozuki> If its opt out not
09:30 <+bridge> [ddnet] <Jupstar âœª> opt in is useless lets face it
09:30 <+bridge> [ddnet] <Ryozuki> no
09:30 <+bridge> [ddnet] <Jupstar âœª> i mean who searches the option
09:30 <+bridge> [ddnet] <Ryozuki> Just a popout on first open
09:30 <+bridge> [ddnet] <Jupstar âœª> and clicks on send crash reports
09:30 <+bridge> [ddnet] <Ryozuki> I do for steak
09:30 <+bridge> [ddnet] <Jupstar âœª> thats smth different
09:30 <+bridge> [ddnet] <Ryozuki> Steam
09:30 <+bridge> [ddnet] <Ryozuki> Its opt in
09:30 <+bridge> [ddnet] <Jupstar âœª> its both at the same time xD
09:31 <+bridge> [ddnet] <Ryozuki> I dont want a system that silently has telemetry on by def
09:31 <+bridge> [ddnet] <Ryozuki> And u dont know it
09:33 <+bridge> [ddnet] <Jupstar âœª> we actually already have some kind of telemetry anyway
09:33 <+bridge> [ddnet] <Jupstar âœª> 
09:33 <+bridge> [ddnet] <Jupstar âœª> the username is sent to the ddnet http info requests
09:33 <+bridge> [ddnet] <Jupstar âœª> for the finishes
09:33 <+bridge> [ddnet] <Jupstar âœª> that leaks more personal information than any of my above stuff
09:34 <+bridge> [ddnet] <Jupstar âœª> how much data is inside the http headers sent by curl?
09:54 <+bridge> [ddnet] <Ryozuki> Probs not much
09:55 <+bridge> [ddnet] <Jupstar âœª> anyway non ideologicly
09:55 <+bridge> [ddnet] <Jupstar âœª> ddnet rn has your username & all ingame chat unencrypted, all input data ever made
09:55 <+bridge> [ddnet] <Jupstar âœª> 
09:55 <+bridge> [ddnet] <Jupstar âœª> vs
09:55 <+bridge> [ddnet] <Jupstar âœª> 
09:55 <+bridge> [ddnet] <Jupstar âœª> i just want some information that helps for development and contains no private data
10:03 <+bridge> [ddnet] <Jupstar âœª> https://feedback.wildfiregames.com/
10:03 <+bridge> [ddnet] <Jupstar âœª> 
10:03 <+bridge> [ddnet] <Jupstar âœª> they have quite a bit of insight, but mostly linux users play that game. and for some reason most linux users seem to use intel computers apparently xD
10:08 <+bridge> [ddnet] <Jupstar âœª> i also dont trust the data too much. GL_VERSION might report the gl version requested by the game not the one supported at max
10:13 <+bridge> [ddnet] <Ryozuki> @Not Keks im sure our windows users are happy to say yes to telemetry
10:13 <+bridge> [ddnet] <Ryozuki> :BASED:
10:13 <+bridge> [ddnet] <Jupstar âœª> the problem is really that the word itself triggers ppl
10:14 <+bridge> [ddnet] <Jupstar âœª> i understand that u dont want to leak all shit so its sold to google
10:14 <+bridge> [ddnet] <Ryozuki> Just state clearly what is gathered
10:14 <+bridge> [ddnet] <Ryozuki> Being honest is the best here
10:14 <+bridge> [ddnet] <Jupstar âœª> yes
10:15 <+bridge> [ddnet] <Ryozuki> Most ppl will say yes, i wanna flex my 4090 gpu to the stats
10:15 <+bridge> [ddnet] <Ryozuki> :BASED:
10:15 <+bridge> [ddnet] <Jupstar âœª> lmao
10:15 <+bridge> [ddnet] <Jupstar âœª> this is always my motivation when steam hardware survey pops up
10:15 <+bridge> [ddnet] <Jupstar âœª> lets make linux great xD
10:15 <+bridge> [ddnet] <Ryozuki> xd
10:18 <+bridge> [ddnet] <Jupstar âœª> man i'd really love to drop all backends other than vk
10:18 <+bridge> [ddnet] <Jupstar âœª> 
10:18 <+bridge> [ddnet] <Jupstar âœª> i have some cool ideas that would be easier to develop if i wont need to change all other backends too and test all shit xD
10:19 <+bridge> [ddnet] <Ryozuki> @Not Keks can u just add features exclusive to vulkan?
10:20 <+bridge> [ddnet] <Jupstar âœª> yes but its hard to keep it clean
10:20 <+bridge> [ddnet] <Ryozuki> Sadge
10:20 <+bridge> [ddnet] <Jupstar âœª> the higher lvl code always has to do ifs like (backend supports this and that) ..
10:21 <+bridge> [ddnet] <Ryozuki> Stupid old hardware
10:21 <+bridge> [ddnet] <Ryozuki> :BASED:
10:27 <+bridge> [ddnet] <Jupstar âœª> @Ryozuki how much disk space does ur new OS use btw?
10:27 <+bridge> [ddnet] <Jupstar âœª> 
10:27 <+bridge> [ddnet] <Jupstar âœª> i am already out of disk space again xD
10:27 <+bridge> [ddnet] <Jupstar âœª> 
10:27 <+bridge> [ddnet] <Jupstar âœª> 1.5 TB SSD are simply not enough
10:29 <+bridge> [ddnet] <Ryozuki> Idk
10:29 <+bridge> [ddnet] <Ryozuki> But it has to fetch src when installing so
10:29 <+bridge> [ddnet] <Ryozuki> I got 2x m2 500gb  and a 2tb sss
10:29 <+bridge> [ddnet] <Ryozuki> Ssd
10:32 <+bridge> [ddnet] <Learath2> You might want to delete your distfiles every once in a while
11:19 <+bridge> [ddnet] <Ryozuki> `Quad::new(50 * 2i32.pow(15), 30 * 2i32.pow(15))` 
11:19 <+bridge> [ddnet] <Ryozuki> @Patiga i had this in twmap 0.6 but on 0.9 it uses some weird integer with fractional bits
11:19 <+bridge> [ddnet] <Ryozuki> do you know how to use it? xD im confused
11:20 <+bridge> [ddnet] <Ryozuki> https://docs.rs/twmap/0.7.0/twmap/struct.Quad.html#method.new vs https://docs.rs/twmap/latest/twmap/struct.Quad.html#method.new
11:22 <+bridge> [ddnet] <Learath2> Looks like a fixed point number, which is what we use in the actual data anyway
11:24 <+bridge> [ddnet] <Ryozuki> i see
11:24 <+bridge> [ddnet] <Ryozuki> maybe twmap could reexport the "fixed" crate
11:24 <+bridge> [ddnet] <Ryozuki> anyway i imported it for the types
11:24 <+bridge> [ddnet] <Ryozuki> `Quad::new(Default::default(), Point::new(50.into(), 30.into()))`
11:24 <+bridge> [ddnet] <Ryozuki> seems to work
11:24 <+bridge> [ddnet] <Ryozuki> (well didnt test ingame)
11:24 <+bridge> [ddnet] <Learath2> Do you even need the intos?
11:25 <+bridge> [ddnet] <Learath2> Oh, you probably do
11:25 <+bridge> [ddnet] <Ryozuki> Yes because the new doesnt accept Into<I17F15>
11:25 <+bridge> [ddnet] <Ryozuki> But rather the I17F15 itself
11:26 <+bridge> [ddnet] <Ryozuki> A pr maybe would be worth
11:26 <+bridge> [ddnet] <Ryozuki> xd
11:27 <+bridge> [ddnet] <Ryozuki> If only it was on github
11:28 <+bridge> [ddnet] <Ryozuki> `Quad::new(Default::default(), Point::new(I17F15::from_num(50), I17F15::from_num(30)))`
11:28 <+bridge> [ddnet] <Ryozuki> ok it needs to be this
11:58 <+bridge> [ddnet] <heinrich5991> probably not. minetest? mindustry?
12:01 <+bridge> [ddnet] <Jupstar âœª> ddnet is good in one thing, keeping players playing
12:01 <+bridge> [ddnet] <Jupstar âœª> mindustry has only 300 players currently on steam
12:03 <+bridge> [ddnet] <Learath2> Does `From<i32>` do `from_bits`? That's a bit of a sad api choice on their part
12:04 <+bridge> [ddnet] <Learath2> Going from an integer to a fixed point I'd expect a 0 fractional part and my integer, but I guess that'd need to be a `TryFrom` because it may be out of range
12:04 <+bridge> [ddnet] <uwu> cuz you can download mindustry for free from itch.io or github
12:04 <+bridge> [ddnet] <Jupstar âœª> bcs the average player does that xD
12:04 <+bridge> [ddnet] <Jupstar âœª> ok maybe indeed bcs it cost
12:05 <+bridge> [ddnet] <Jupstar âœª> but i'd still assume he made most money mobile?
12:05 <+bridge> [ddnet] <Jupstar âœª> mobile players buy stuff and then dont use it xd
12:05 <+bridge> [ddnet] <uwu> indeed :justatest:
12:05 <+bridge> [ddnet] <Jupstar âœª> but now i am interested in their player counts
12:06 <+bridge> [ddnet] <Jupstar âœª> the problem with games like mindustry is that they get boring after a while ðŸ˜„
12:34 <+bridge> [ddnet] <deen> Over a million players on Steam got DDNet (but only 860k started it)
12:34 <+bridge> [ddnet] <deen> https://cdn.discordapp.com/attachments/293493549758939136/1035501774875918366/Screenshot_2022-10-28_at_12.34.00.png
12:35 <+bridge> [ddnet] <Jupstar âœª> oh nice still very impressive
12:35 <+bridge> [ddnet] <deen> I'm trying to load the Hardware survey page, but it just hangs so far
12:37 <+bridge> [ddnet] <Ryozuki> Damn
12:38 <+bridge> [ddnet] <deen> Now it loaded but Firefox crashed during screenshot ðŸ˜„
12:38 <+bridge> [ddnet] <deen> https://cdn.discordapp.com/attachments/293493549758939136/1035502860416335943/Screenshot_2022-10-28_at_12.38.31.png
12:39 <+bridge> [ddnet] <deen> Do people have to opt into the Hardware Survey? If so, then it's pretty useless
12:40 <+bridge> [ddnet] <deen> Of course people with better hardware will opt in more often
12:40 <+bridge> [ddnet] <Ryozuki> On steam yes
12:40 <+bridge> [ddnet] <Ryozuki> Still steam survey is one of the best data out there
12:42 <+bridge> [ddnet] <deen> @Not Keks Does it help as a screenshot?
12:42 <+bridge> [ddnet] <deen> https://cdn.discordapp.com/attachments/293493549758939136/1035503720861016094/Screenshot_2022-10-28_at_12-41-37_Steam_Hardware_Survey_-_DDraceNetwork_owners_-_September_2022.png
12:45 <+bridge> [ddnet] <Jupstar âœª> yeah good enough thx
12:58 <+bridge> [ddnet] <Jupstar âœª> yeah some interesting stats
12:58 <+bridge> [ddnet] <Jupstar âœª> 
12:58 <+bridge> [ddnet] <Jupstar âœª> ~40% laptop users.. thats quite high
12:58 <+bridge> [ddnet] <Jupstar âœª> 
12:58 <+bridge> [ddnet] <Jupstar âœª> RAM <4GB 1%
12:58 <+bridge> [ddnet] <Jupstar âœª> VRAM <1GB 4.53%
12:58 <+bridge> [ddnet] <Jupstar âœª> SSE3 100%
12:58 <+bridge> [ddnet] <Jupstar âœª> 
12:58 <+bridge> [ddnet] <Jupstar âœª> around 5.4 with GPUs that are really old, ivy bridge, haswell, some old ATI cards etc.
12:58 <+bridge> [ddnet] <Jupstar âœª> yeah some interesting stats
12:58 <+bridge> [ddnet] <Jupstar âœª> 
12:58 <+bridge> [ddnet] <Jupstar âœª> ~40% laptop users.. thats quite high
12:58 <+bridge> [ddnet] <Jupstar âœª> 
12:58 <+bridge> [ddnet] <Jupstar âœª> RAM <4GB 1%
12:58 <+bridge> [ddnet] <Jupstar âœª> VRAM <1GB 4.53%
12:58 <+bridge> [ddnet] <Jupstar âœª> SSE3 100%
12:58 <+bridge> [ddnet] <Jupstar âœª> 
12:58 <+bridge> [ddnet] <Jupstar âœª> around 5.4% with GPUs that are really old, ivy bridge, haswell, some old ATI cards etc.
12:58 <+bridge> [ddnet] <Ryozuki> Do we compile with sse3
12:59 <+bridge> [ddnet] <Ryozuki> ?
13:00 <+bridge> [ddnet] <Jupstar âœª> do we have a usecase? i'd assume some libraries we use do it
13:02 <+bridge> [ddnet] <Jupstar âœª> on the other hand i think clang does some vectorization with o2 already if i remember correctly but gcc doesnt
13:02 <+bridge> [ddnet] <Jupstar âœª> 
13:02 <+bridge> [ddnet] <Jupstar âœª> tho i dunno which instructions this results in
13:03 <+bridge> [ddnet] <heinrich5991> depends on the target architecture it's compiling for
13:03 <+bridge> [ddnet] <Jupstar âœª> yeah i mean for x64 ofc
13:03 <+bridge> [ddnet] <deen> I can see the benefit of laptops, even as someone who never moves their computer. They are much lower power consumption and nowadays easily fast enough.
13:04 <+bridge> [ddnet] <Jupstar âœª> well depends what u want to do xD
13:04 <+bridge> [ddnet] <deen> I'd probably get a mobile CPU instead of some desktop beast that goes to > 5 GHz
13:04 <+bridge> [ddnet] <Jupstar âœª> i consider laptops as insanly slow, especially the GPUs are really bad
13:04 <+bridge> [ddnet] <Jupstar âœª> yes single threaded laptops are quite ok
13:04 <+bridge> [ddnet] <deen> Sure, but DDNet runs fine ðŸ˜„
13:05 <+bridge> [ddnet] <heinrich5991> it still depends. there are multiple targets for x86-64, depending on the level of support you want
13:05 <+bridge> [ddnet] <Learath2> I mean even relatively they aren't THAT slow, insanely is a bit of an overreach, no? ðŸ˜„
13:06 <+bridge> [ddnet] <Jupstar âœª> depends i guess, if u ok with 720p gaming on mid graphics
13:06 <+bridge> [ddnet] <Jupstar âœª> 
13:06 <+bridge> [ddnet] <Jupstar âœª> or not being able to run blender well enough
13:06 <+bridge> [ddnet] <Ryozuki> I need my fast cpu
13:06 <+bridge> [ddnet] <Ryozuki> Laptops are so slow
13:06 <+bridge> [ddnet] <Learath2> gpu wise yes, I was thinking cpu
13:06 <+bridge> [ddnet] <Jupstar âœª> for me personally a fast GPU is important. its annoying if stuff doesnt run well
13:06 <+bridge> [ddnet] <Jupstar âœª> and programs tend to use GPUs more and more
13:06 <+bridge> [ddnet] <Jupstar âœª> more workload is shifted to the GPU i mean
13:07 <+bridge> [ddnet] <Ryozuki> I compile a lot of rust so i like having a beefy cpu
13:07 <+bridge> [ddnet] <Ryozuki> :BASED:
13:08 <+bridge> [ddnet] <Ryozuki> And noise isnt a problem to me
13:08 <+bridge> [ddnet] <Ryozuki> My headset cancels noise passively
13:08 <+bridge> [ddnet] <Ryozuki> And i put music
13:08 <+bridge> [ddnet] <Ryozuki> :greenthing:
13:09 <+bridge> [ddnet] <Learath2> I took a quick look at 4th gen just as an example. The flagship i7 turbos up to 4.4GHz. The flagship i7 mobile turbos up to 4.0GHz. It's just a 400MHz difference. It's even better in 10th gen
13:09 <+bridge> [ddnet] <Learath2> Mobile gpus though yeah, not the best honestly but if you want workstation performance there are beastly laptops too, if you are ok with carrying them around
13:10 <+bridge> [ddnet] <Jupstar âœª> another problem is that laptops are quite expensive for what they can do
13:10 <+bridge> [ddnet] <Ryozuki> They rly are
13:10 <+bridge> [ddnet] <Jupstar âœª> for 500 bucks i get 16 core desktop cpu
13:10 <+bridge> [ddnet] <Ryozuki> And thry often come with just 500gb
13:11 <+bridge> [ddnet] <deen> I'd probably get a laptop CPU in a desktop case if that is still possible ðŸ˜„ Used to be easy, but no sockets on laptops for a while now :/
13:11 <+bridge> [ddnet] <Jupstar âœª> oh ok
13:11 <+bridge> [ddnet] <Jupstar âœª> u can simply undervolt and downclock
13:11 <+bridge> [ddnet] <Jupstar âœª> if its such a problem ðŸ˜„
13:11 <+bridge> [ddnet] <Learath2> There is that one chinese guy that solders BGA laptop cpus to adapters and sells them ðŸ˜„
13:11 <+bridge> [ddnet] <Jupstar âœª> most of the time CPUs run idle anyway ðŸ˜„
13:11 <+bridge> [ddnet] <Ryozuki> Why do u want a slower cpu?
13:11 <+bridge> [ddnet] <Jupstar âœª> so the 5GHz are just nice to have
13:12 <+bridge> [ddnet] <Jupstar âœª> my cpu runs under 7W in idle
13:12 <+bridge> [ddnet] <deen> even the idle power consumption of recent desktop CPUs is pretty high
13:12 <+bridge> [ddnet] <Jupstar âœª> my gpu similar
13:14 <+bridge> [ddnet] <Learath2> I'd probably keep a normal desktop but I can definitely see the value proposition of a laptop, being able to move around is just great/10
13:14 <+bridge> [ddnet] <deen> German article, but idle CPU power of 20 W is bad
13:14 <+bridge> [ddnet] <deen> https://cdn.discordapp.com/attachments/293493549758939136/1035511783596757072/Screenshot_2022-10-28_at_13.13.50.png
13:14 <+bridge> [ddnet] <Jupstar âœª> u shouldnt underestimate one thing
13:14 <+bridge> [ddnet] <Jupstar âœª> 
13:14 <+bridge> [ddnet] <Jupstar âœª> new GPUs have much more cores, so they can do more with less energy
13:14 <+bridge> [ddnet] <Jupstar âœª> 
13:14 <+bridge> [ddnet] <Jupstar âœª> the problem is at around 80% usage.. .then desktop stuff gets inefficient
13:14 <+bridge> [ddnet] <Jupstar âœª> why?
13:14 <+bridge> [ddnet] <Jupstar âœª> 20 is nothing
13:14 <+bridge> [ddnet] <Jupstar âœª> use a train one time and u wasted more energy than 1 year running this idle
13:15 <+bridge> [ddnet] <deen> The train isn't outputting its waste heat into my hot summer apartment though ðŸ˜„
13:15 <+bridge> [ddnet] <Jupstar âœª> mhh 20W is not lot of heat
13:15 <+bridge> [ddnet] <Learath2> Run the AC 4head
13:15 <+bridge> [ddnet] <Jupstar âœª> the processor is like 3cm big
13:15 <+bridge> [ddnet] <Jupstar âœª> its not enough to heat a 1mÂ² of a room
13:15 <+bridge> [ddnet] <Learath2> Size of the CPU mattereth not actually, 20W is 20W
13:16 <+bridge> [ddnet] <Jupstar âœª> yes but its still not lot of heat on 1mÂ²
13:16 <+bridge> [ddnet] <deen> It's not just the CPU, mainboard etc have also increased in power consumption in recent years
13:16 <+bridge> [ddnet] <Jupstar âœª> 20W on the full room is nothing anyway
13:17 <+bridge> [ddnet] <Learath2> Yeah, 20W isn't much heat. Just wanted to say the cpu size isn't a factor
13:17 <+bridge> [ddnet] <Jupstar âœª> my point was really more about where the heat is
13:17 <+bridge> [ddnet] <Learath2> The thing about heat is that it doesn't like staying where it is
13:17 <+bridge> [ddnet] <Jupstar âœª> air is a pretty good isolastion
13:17 <+bridge> [ddnet] <Jupstar âœª> air is a pretty good isolation
13:18 <+bridge> [ddnet] <deen> Anyway, I don't like that desktops went from idling at ~25 Watt to 50 Watt in the last 6 years
13:20 <+bridge> [ddnet] <Learath2> Air will not conduct heat well, but it will heat up, the 20W of heat has to go somewhere
13:20 <+bridge> [ddnet] <Jupstar âœª> yeah but it will not heat the full room
13:21 <+bridge> [ddnet] <Jupstar âœª> heat tends to go to the top
13:21 <+bridge> [ddnet] <Jupstar âœª> as soon as its dark outside in germany it will cool again xD
13:23 <+bridge> [ddnet] <Learath2> As far as my understanding of thermodynamics goes, the universe really doesn't like heat gradients, warm air and cold air will exchange heat until equilibrium. Now whether the amount of temperature change due to the heat is negligible or not, that's up to you
13:23 <+bridge> [ddnet] <Jupstar âœª> turn off your light and u save 30Watt
13:23 <+bridge> [ddnet] <Jupstar âœª> remove the sunlight and u probs save over 20Watts
13:23 <+bridge> [ddnet] <Learath2> I use leds, those are like 6W
13:24 <+bridge> [ddnet] <Learath2> Can't remove the sun, it'd be great though
13:24 <+bridge> [ddnet] <Jupstar âœª> remove your body and u probs save over 100watt
13:24 <+bridge> [ddnet] <Jupstar âœª> close the whatever u have at your window
13:24 <+bridge> [ddnet] <Learath2> Can't remove body either, humans can't be uploaded to the cloud ye
13:24 <+bridge> [ddnet] <Jupstar âœª> your room light has 6watt?
13:24 <+bridge> [ddnet] <Jupstar âœª> then gg
13:24 <+bridge> [ddnet] <Jupstar âœª> thats not enough for me ðŸ˜„
13:25 <+bridge> [ddnet] <Learath2> Radiation still heats the windows and my walls
13:26 <+bridge> [ddnet] <Jupstar âœª> anyway
13:26 <+bridge> [ddnet] <Jupstar âœª> u also have to take the difference anyway
13:26 <+bridge> [ddnet] <Jupstar âœª> a laptop also uses 5watts or smth
13:26 <+bridge> [ddnet] <Learath2> Really? These modern 7W bulbs are like equivalent to 60W incandescents
13:26 <+bridge> [ddnet] <Jupstar âœª> so we already at 15W
13:26 <+bridge> [ddnet] <Jupstar âœª> yeah dunno i think mine is like 18watts, the transformator also looses some energy
13:28 <+bridge> [ddnet] <deen> protip: run your lightbulb underpowered too, then it lasts much longer
13:28 <+bridge> [ddnet] <deen> and is more efficient, less waste heat
13:28 <+bridge> [ddnet] <Jupstar âœª> ^^ez
13:29 <+bridge> [ddnet] <Learath2> Anyway, as I said. I'd probably keep a desktop cpu aswell. Just saying no matter the wattage the size of the cpu, there is heat being output and it'll heat the room
13:29 <+bridge> [ddnet] <Jupstar âœª> anyway, for me as said its not even so much about the CPU, but GPU, and desktop GPUs are like mini computers, with own mainboards etc. so i have to accept they use extra energy
13:29 <+bridge> [ddnet] <deen> 3 W bulbs can be 60 W incandescent  equivalent like that: https://www.youtube.com/watch?v=klaJqofCsu4
13:30 <+bridge> [ddnet] <Learath2> I was just about to say have you seen those dubai bulbs ðŸ˜„
13:30 <+bridge> [ddnet] <Jupstar âœª> i can ensure my room light isnt the most efficient xD
13:30 <+bridge> [ddnet] <Learath2> I can get 7W =~ 60W ones in europe, they get cool 3W ones
13:31 <+bridge> [ddnet] <deen> I do something similar for a long time. I got SceneSwitch LEDs and rarely run them at their full brightness level, so far none have failed.
13:31 <+bridge> [ddnet] <Learath2> I haven't had a led lamp fail in 4 years I think even at full power
13:32 <+bridge> [ddnet] <Learath2> I seem to have gotten lucky on the silicone lottery
13:32 <+bridge> [ddnet] <deen> Yeah, only some designs are bad and easily overheat
13:33 <+bridge> [ddnet] <Jupstar âœª> just judge yourself @Learath2 xD
13:33 <+bridge> [ddnet] <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1035516681457520731/photo1666956789.jpeg
13:33 <+bridge> [ddnet] <Jupstar âœª> but my lamp also has different lighting modes
13:35 <+bridge> [ddnet] <Jupstar âœª> my gpu uses around 30W in ddnet with 1400fps
13:35 <+bridge> [ddnet] <Jupstar âœª> thats not nothing but an old laptop could not do it at 30W
13:37 <+bridge> [ddnet] <Jupstar âœª> the good thing here is:
13:37 <+bridge> [ddnet] <Jupstar âœª> the desktop GPUs have much more shader cores than laptop GPUs (except maybe M1 Max)
13:37 <+bridge> [ddnet] <Jupstar âœª> 
13:37 <+bridge> [ddnet] <Jupstar âœª> so they dont have to clock so high to archive the same goal
13:37 <+bridge> [ddnet] <Jupstar âœª> since my gpu is <20% usage its pretty efficient
13:39 <+bridge> [ddnet] <deen> Yeah, GPUs are not at 5 GHz (yet), but CPUs have been going crazy recently just to get 5% faster FPS than the other side
13:40 <+bridge> [ddnet] <Cellegen | RiH> me: just make the maps less gpu heavy lol
13:40 <+bridge> [ddnet] <Cellegen | RiH> :justatest:
13:41 <+bridge> [ddnet] <Jupstar âœª> just drop old hardware and force vulkan, set a good limit that suits your needs
13:41 <+bridge> [ddnet] <Jupstar âœª> and be happy
13:43 <+bridge> [ddnet] <Learath2> Honestly, I'm happy as long as I get stable framerates around my refresh rate. It just looks good to me, maybe I just don't have good eyes ðŸ˜„
13:44 <+bridge> [ddnet] <Learath2> One of the reasons I upgrade my system so slowly. Things just don't look that bad to me with almost any stable fps
13:44 <+bridge> [ddnet] <Jupstar âœª> when i read phoronix and see all the progress for new software technology i actually wonder when the old hardware will be dropped, or will they always fall back to software rendering? ðŸ˜„
13:44 <+bridge> [ddnet] <Jupstar âœª> i mean the maintainance cant be worth it for old stuff
13:45 <+bridge> [ddnet] <Cellegen | RiH> didn't intel announced something about saving money?
13:46 <+bridge> [ddnet] <Learath2> I guess the fact that old hardware just doesn't change makes it better maintenance cost wise
13:46 <+bridge> [ddnet] <Jupstar âœª> i wish i'd have av1 encoding on my GPU :/
13:46 <+bridge> [ddnet] <Learath2> Now that'd be sth I'd upgrade for
13:47 <+bridge> [ddnet] <Jupstar âœª> next amd will have it, rtx 4090 also has it
13:47 <+bridge> [ddnet] <Learath2> get an arc gpu and use it just to decode/encode av1
13:47 <+bridge> [ddnet] <Jupstar âœª> xd
13:48 <+bridge> [ddnet] <Ryozuki> Xd
13:50 <+bridge> [ddnet] <Learath2> Actually, I think arc would be a great fit for you @Not Keks
13:51 <+bridge> [ddnet] <Learath2> It's so extremely opinionated that it refuses to work well with old gfx APIs
13:51 <+bridge> [ddnet] <Jupstar âœª> i fear intels drivers
13:51 <+bridge> [ddnet] <Jupstar âœª> i am on the dark side then
13:51 <+bridge> [ddnet] <Learath2> I heard it's quickly getting better after the release
13:52 <+bridge> [ddnet] <Jupstar âœª> tbh, if i have a good vulkan driver, i have all drivers
13:52 <+bridge> [ddnet] <Jupstar âœª> dxvk, zink
13:52 <+bridge> [ddnet] <Jupstar âœª> i can even run my window manager under zink already
13:52 <+bridge> [ddnet] <Jupstar âœª> minecraft worked good enough
13:52 <+bridge> [ddnet] <Jupstar âœª> maybe 80% of native GL driver
14:03 <+bridge> [ddnet] <Ryozuki> Run the arc on a server to encode av1 solely
14:04 <+bridge> [ddnet] <Jupstar âœª> i need it for streaming my desktop xd
14:04 <+bridge> [ddnet] <Jupstar âœª> h264 struggles with high refresh rates
14:04 <+bridge> [ddnet] <Learath2> You can just have an extra arc for av1
14:04 <+bridge> [ddnet] <Jupstar âœª> or vaapi is it
14:04 <+bridge> [ddnet] <Jupstar âœª> yeah ez money boy
14:05 <+bridge> [ddnet] <Jupstar âœª> ddnet gives me so much money per month
14:05 <+bridge> [ddnet] <Jupstar âœª> i buy rtx 4090 every day
14:05 <+bridge> [ddnet] <Learath2> What is a little money in pursuit of more fps? Cmon, just donâ€™t eat
14:05 <+bridge> [ddnet] <Jupstar âœª> good idea actually learath
14:05 <+bridge> [ddnet] <Jupstar âœª> vulkan has multi gpu support
14:06 <+bridge> [ddnet] <Jupstar âœª> imagine u could render demos in the background
14:06 <+bridge> [ddnet] <Jupstar âœª> would be cool
14:07 <+bridge> [ddnet] <Learath2> Itâ€™d be nice if I could render headless from the terminal
14:07 <+bridge> [ddnet] <Jupstar âœª> mhhh yeah
14:07 <+bridge> [ddnet] <Jupstar âœª> but would still require a vk instance, just without a surface
14:08 <+bridge> [ddnet] <Learath2> Thatâ€™s fine I guess
14:09 <+bridge> [ddnet] <Jupstar âœª> guess i should think about it
14:09 <+bridge> [ddnet] <Ryozuki> Do it
14:09 <+bridge> [ddnet] <Jupstar âœª> at some point i have to add framebuffer rendering anyway at least for vulkan
14:09 <+bridge> [ddnet] <Jupstar âœª> its simply too annoying to have the ddnet window open all the time
14:09 <+bridge> [ddnet] <Ryozuki> Can u have a vk instance without a gpu?
14:09 <+bridge> [ddnet] <Jupstar âœª> well cpu rendering
14:09 <+bridge> [ddnet] <Ryozuki> To make a server to render demos
14:09 <+bridge> [ddnet] <Ryozuki> Ok
14:09 <+bridge> [ddnet] <Ryozuki> Future service
14:10 <+bridge> [ddnet] <Ryozuki> Now just need top 10 rank demos auto published
14:10 <+bridge> [ddnet] <Jupstar âœª> that would be cool indeed
14:10 <+bridge> [ddnet] <Jupstar âœª> if we'd finally have teehistorian to demo
14:10 <+bridge> [ddnet] <Jupstar âœª> it would motivate me
14:16 <+bridge> [ddnet] <Jupstar âœª> mhh is it safe to call Localize whenever i want to?
14:17 <+bridge> [ddnet] <Jupstar âœª> kinda feels weird to call it inside the backend tho
14:17 <+bridge> [ddnet] <Jupstar âœª> maybe i should enumerize the errors and give them text only in the higher level components^^
14:19 <+bridge> [ddnet] <Learath2> This probably is the correct way to do this
14:19 <+bridge> [ddnet] <Jupstar âœª> yeah just lot of work ðŸ˜„
14:19 <+bridge> [ddnet] <Jupstar âœª> 54 different errors in vulkan backend
14:19 <+bridge> [ddnet] <Jupstar âœª> <<
14:36 <+bridge> [ddnet] <Ryozuki> rust Result
14:36 <+bridge> [ddnet] <Ryozuki> Imagine not having sum types smh
14:46 <+bridge> [ddnet] <Jupstar âœª> how does that fix my problem
14:47 <+bridge> [ddnet] <Jupstar âœª> i am thinking about a Localizable function that is empty and only there so the translation script can find the string of the backend too
14:50 <+bridge> [ddnet] <Jupstar âœª> @deen u ok with this? then we can also remove all the comments like // Locaize("...")
14:56 <+bridge> [ddnet] <Jupstar âœª> ```python
14:56 <+bridge> [ddnet] <Jupstar âœª> matches = re.findall(r"Localize\s*\(\s*\"([^\"]+)\"(?:\s*,\s*\"([^\"]+)\")?\s*\)", fileobj.read())
14:56 <+bridge> [ddnet] <Jupstar âœª> ```
14:56 <+bridge> [ddnet] <Jupstar âœª> 
14:56 <+bridge> [ddnet] <Jupstar âœª> ui, that's what i call a regexc
14:57 <+bridge> [ddnet] <Jupstar âœª> ```python
14:57 <+bridge> [ddnet] <Jupstar âœª> matches = re.findall(r"Localize\s*\(\s*\"([^\"]+)\"(?:\s*,\s*\"([^\"]+)\")?\s*\)", fileobj.read())
14:57 <+bridge> [ddnet] <Jupstar âœª> ```
14:57 <+bridge> [ddnet] <Jupstar âœª> 
14:57 <+bridge> [ddnet] <Jupstar âœª> ui, that's what i call a regex
15:09 <+bridge> [ddnet] <uwu> :justatest:
15:34 <+bridge> [ddnet] <iISAF7> @Not Keks man
15:34 <+bridge> [ddnet] <iISAF7> i change the file with name Teeworlds and
15:35 <+bridge> [ddnet] <iISAF7> i start the game and every thing get Change and i change the file name to Teeworlds again and i didnt get my old game
15:35 <+bridge> [ddnet] <iISAF7> still everything new
15:36 <+bridge> [ddnet] <Jupstar âœª> it now uses DDnet file
15:37 <+bridge> [ddnet] <Jupstar âœª> always close client before you do stuff like this
15:38 <+bridge> [ddnet] <iISAF7> i did
15:39 <+bridge> [ddnet] <Jupstar âœª> normally it uses teeworlds directory first, then ddnet
15:39 <+bridge> [ddnet] <Jupstar âœª> 
15:39 <+bridge> [ddnet] <Jupstar âœª> if u renamed teeworlds to ddnet it used ddnet
15:39 <+bridge> [ddnet] <Jupstar âœª> what did u name it?
17:23 <+bridge> [ddnet] <deen> What is it good for?
17:25 <+bridge> [ddnet] <Jupstar âœª> i can use strings in backend without needing to localize them there
17:40 <+bridge> [ddnet] <heinrich5991> that doesn't work for formatted strings, I think
17:40 <+bridge> [ddnet] <heinrich5991> I don't know if you need those
17:42 <+bridge> [ddnet] <Jupstar âœª> i dont need them
17:42 <+bridge> [ddnet] <Jupstar âœª> its just that i dont want to add a // Localize("...") comment to every string
17:43 <+bridge> [ddnet] <Jupstar âœª> and handling all errors by enums just to convert them to strings later is lot of coding and also kinda code dublication
17:43 <+bridge> [ddnet] <Jupstar âœª> since they arent really error types, but more like error descriptions
17:50 <+bridge> [ddnet] <Ryozuki> @deen how often is the sqlite db download updated on ddnet stats page?
17:50 <+bridge> [ddnet] <Ryozuki> Using the mysql db is not feasible for me
17:51 <+bridge> [ddnet] <Ryozuki> Takes way too long on my pc with a good cpu, cant image on a vps
17:51 <+bridge> [ddnet] <Ryozuki> Oh
17:52 <+bridge> [ddnet] <Ryozuki> Maybe i should use csv
17:52 <+bridge> [ddnet] <Ryozuki> And polars
17:52 <+bridge> [ddnet] <Ryozuki> Did you know the rust csv library is one of the best out there
17:52 <+bridge> [ddnet] <Ryozuki> Surpasing in speed the c++ ones
17:55 <+bridge> [ddnet] <Ryozuki> <https://github.com/pola-rs/polars> <https://github.com/BurntSushi/rust-csv>
17:55 <+bridge> [ddnet] <deen> every night
17:56 <+bridge> [ddnet] <Ryozuki> nice
17:56 <+bridge> [ddnet] <Ryozuki> @heinrich5991 do u know if its more worth to use csv or sqlite when perfoming read only queries?
17:57 <+bridge> [ddnet] <Ryozuki> i wonder if polars is faster than sqlite itself making queries
18:03 <+bridge> [ddnet] <Ryozuki> Probs csv
18:26 <+bridge> [ddnet] <Ryozuki> https://blog.rust-lang.org/2022/10/28/gats-stabilization.html
18:26 <+bridge> [ddnet] <Ryozuki> As of Rust 1.65, which is set to release on November 3rd, generic associated types (GATs) will be stable â€” over six and a half years after the original RFC was opened. This is truly a monumental achievement; however, as with a few of the other monumental features of Rust, like async or const generics, there are limitations in the initial stabilization that we plan to remove in the future.
18:32 <+bridge> [ddnet] <Mr.Gh0s7> I moved them here. It seems like they are getting ignored. Any ideas why?
18:32 <+bridge> [ddnet] <Mr.Gh0s7> https://cdn.discordapp.com/attachments/293493549758939136/1035591780680335391/DDNetSpikes.png
18:32 <+bridge> [ddnet] <Jupstar âœª> why should they magically work
18:32 <+bridge> [ddnet] <Jupstar âœª> is the server using the same slots?
18:33 <+bridge> [ddnet] <Mr.Gh0s7> I made the neccesary changes to the code
18:33 <+bridge> [ddnet] <Jupstar âœª> the client filters invalid tiles
18:33 <+bridge> [ddnet] <Jupstar âœª> maplayers.cpp
18:34 <+bridge> [ddnet] <Mr.Gh0s7> It's a server side issue currently
18:34 <+bridge> [ddnet] <Jupstar âœª> ah no, we moved it to mapimages.cpp
18:34 <+bridge> [ddnet] <Jupstar âœª> IsValidGameTile
18:34 <+bridge> [ddnet] <Mr.Gh0s7> I added this line ```(Index >= TILE_SPIKE_FIRST && Index <= TILE_SPIKE_LAST) ||
18:34 <+bridge> [ddnet] <Mr.Gh0s7> ```
18:34 <+bridge> [ddnet] <Mr.Gh0s7> in mapites.cpp
18:34 <+bridge> [ddnet] <Mr.Gh0s7> in mapitems.cpp
18:35 <+bridge> [ddnet] <Mr.Gh0s7> and these lines on mapitems.h ```    TILE_SPIKE_RED = TILE_SPIKE_FIRST,
18:35 <+bridge> [ddnet] <Mr.Gh0s7>     TILE_SPIKE_ORANGE,
18:35 <+bridge> [ddnet] <Mr.Gh0s7>     TILE_SPIKE_YELLOW,
18:35 <+bridge> [ddnet] <Mr.Gh0s7>     TILE_SPIKE_GREEN,
18:35 <+bridge> [ddnet] <Mr.Gh0s7>     TILE_SPIKE_LBLUE,
18:35 <+bridge> [ddnet] <Mr.Gh0s7>     TILE_SPIKE_BLUE,
18:35 <+bridge> [ddnet] <Mr.Gh0s7>     TILE_SPIKE_PURPLE,
18:35 <+bridge> [ddnet] <Mr.Gh0s7>     TILE_SPIKE_PINK,
18:35 <+bridge> [ddnet] <Mr.Gh0s7>     TILE_SPIKE_WHITE,
18:35 <+bridge> [ddnet] <Mr.Gh0s7>     TILE_SPIKE_BLACK,
18:35 <+bridge> [ddnet] <Mr.Gh0s7>     TILE_SPIKE_LAST = TILE_SPIKE_BLACK,
18:35 <+bridge> [ddnet] <Mr.Gh0s7> ```
18:35 <+bridge> [ddnet] <Alexander> hey guys quick question:
18:35 <+bridge> [ddnet] <Alexander> how many requests can i make to `https://master1.ddnet.org/ddnet/15/servers.json` in what amount of time so i don't get ratelimited/blacklisted
18:37 <+bridge> [ddnet] <Ryozuki> Check cloudflare limits
18:37 <+bridge> [ddnet] <Ryozuki> Cuz its behind that
18:38 <+bridge> [ddnet] <Jupstar âœª> and ur server acts as ddrace server?
18:38 <+bridge> [ddnet] <Mr.Gh0s7> yeah
18:39 <+bridge> [ddnet] <Jupstar âœª> just look with a debugger why its not inside i guess
18:40 <+bridge> [ddnet] <Mr.Gh0s7> the previous tile positions worked (the previous shared image), so I thought it may be a blacklist tileissue or smt like that?
18:40 <+bridge> [ddnet] <Jupstar âœª> if(n == MAP_IMAGE_ENTITY_LAYER_TYPE_GAME && !IsValidGameTile((int)TileIndex))
18:40 <+bridge> [ddnet] <Jupstar âœª>                                         ValidTile = false;
18:40 <+bridge> [ddnet] <Mr.Gh0s7> the previous tile positions worked (the previous shared image from tile 114), so I thought it may be a blacklist tileissue or smt like that?
18:40 <+bridge> [ddnet] <Jupstar âœª> if it doesnt meet the  condition
18:40 <+bridge> [ddnet] <Jupstar âœª> it should work
18:41 <+bridge> [ddnet] <Alexander> thanks
18:44 <+bridge> [ddnet] <deen> There is no ratelimit, once per second I wouldn't mind, everything more often seems excessive
18:44 <+bridge> [ddnet] <deen> We archive it every 2 seconds our selves
18:45 <+bridge> [ddnet] <Mr.Gh0s7> That is in the client code I am having problem with the server code. The tee doesn't die on the tile/the tile doesn't get printed on HandleTiles on character.cpp under server/entities
18:45 <+bridge> [ddnet] <Alexander> so im safe if i do something like 1 refresh per 5 seconds
18:45 <+bridge> [ddnet] <deen> yes
18:45 <+bridge> [ddnet] <Alexander> great, thanks
18:45 <+bridge> [ddnet] <Mr.Gh0s7> That is in the client code I am having problem with the server code. The tee doesn't die on the tile/the tile doesn't get printed on HandleTiles on character.cpp under server/entities
18:45 <+bridge> [ddnet] <Mr.Gh0s7> Maybe it's considered another layer?
18:45 <+bridge> [ddnet] <heinrich5991> what are you doing with it? @Alexander_
18:46 <+bridge> [ddnet] <Alexander> im showing 3 servers on a website and their player count and if they are online
18:46 <+bridge> [ddnet] <Alexander> here is a preview
18:46 <+bridge> [ddnet] <Jupstar âœª> dunno the ddrace code but in vanilla some tiles are simply filtered in collisions.cpp
18:46 <+bridge> [ddnet] <Alexander> https://cdn.discordapp.com/attachments/293493549758939136/1035595433004769400/unknown.png
18:46 <+bridge> [ddnet] <Alexander> https://cdn.discordapp.com/attachments/293493549758939136/1035595537384214618/unknown.png
18:47 <+bridge> [ddnet] <Jupstar âœª> why not make it client side?
18:47 <+bridge> [ddnet] <Alexander> currently it doesn't auto refresh but im planning on doing it every 5 seconds if viable
18:47 <+bridge> [ddnet] <Jupstar âœª> https://aliveclan.de/#home
18:48 <+bridge> [ddnet] <Jupstar âœª> 
18:48 <+bridge> [ddnet] <Jupstar âœª> here ^ it just downloads the json
18:48 <+bridge> [ddnet] <Jupstar âœª> the server json allows cors
18:48 <+bridge> [ddnet] <Alexander> i don't understand what you mean by client side
18:48 <+bridge> [ddnet] <Jupstar âœª> and an interval with 5 seconds is ez in js
18:48 <+bridge> [ddnet] <Alexander> it's already client side?
18:48 <+bridge> [ddnet] <Jupstar âœª> ah ok
18:49 <+bridge> [ddnet] <Alexander> basically a javascript fetch function fetching servers.json and then filtering for specific servers by finding the ip address
18:49 <+bridge> [ddnet] <heinrich5991> I don't know. my guess would be sqlite
18:49 <+bridge> [ddnet] <Alexander> if it doesnt find the ip address then it's offline
18:49 <+bridge> [ddnet] <Jupstar âœª> yeah i see
18:49 <+bridge> [ddnet] <Jupstar âœª> but then you shouldnt mind too much
18:49 <+bridge> [ddnet] <Jupstar âœª> the fetch only happens if smone visits your site
18:50 <+bridge> [ddnet] <Alexander> yes, exactly
18:50 <+bridge> [ddnet] <Alexander> but i dont want them or me while developing to be blacklisted by ddnet
18:50 <+bridge> [ddnet] <Jupstar âœª> i guess its mostly cloudflares decision anyway isnt it
18:50 <+bridge> [ddnet] <Jupstar âœª> if they consider it ddos they filter the traffic
18:51 <+bridge> [ddnet] <Alexander> yeah but you could set your own parameters for ratelimiting in cloudflare so that's why i asked if you guys set any
18:52 <+bridge> [ddnet] <Jupstar âœª> just try it out, jkjk
19:01 <+bridge> [ddnet] <heinrich5991> there's not much point for us to set rate limits
19:02 <+bridge> [ddnet] <heinrich5991> cloudflare handles the requests
19:02 <+bridge> [ddnet] <heinrich5991> we don't get hit by your 10,000 requests per second
19:05 <+bridge> [ddnet] <Cellegen | RiH> :justatest:
19:06 <+bridge> [ddnet] <Cellegen | RiH> conditionally
19:09 <+bridge> [ddnet] <Ryozuki> @Alexander_ 1 req per second is fine
19:09 <+bridge> [ddnet] <Ryozuki> Probs 10 too
19:09 <+bridge> [ddnet] <Ryozuki> But no need
19:10 <+bridge> [ddnet] <heinrich5991> please no
19:10 <+bridge> [ddnet] <heinrich5991> 1 per 5 seconds is plenty
19:10 <+bridge> [ddnet] <Ryozuki> Cloudflare caches it
19:10 <+bridge> [ddnet] <Alexander> i'd rather do 5 because the client needs time to download the json file and if i overdo it then it would probably break
19:10 <+bridge> [ddnet] <Jupstar âœª> yeah its also not really useful to generate more traffic than needed really
19:11 <+bridge> [ddnet] <Alexander> even 5 is too much
19:11 <+bridge> [ddnet] <Ryozuki> Im just saying that cloudflare wont ban u for 1, 10 or 30 req per second, not that u should
19:11 <+bridge> [ddnet] <Alexander> ah okay okay
19:11 <+bridge> [ddnet] <Alexander> yeah cloudflare is pretty stronk
19:14 <+bridge> [ddnet] <heinrich5991> have you tried?
19:14 <+bridge> [ddnet] <heinrich5991> preferably not against ddnet.org
19:16 <+bridge> [ddnet] <Ryozuki> @heinrich5991 not rly,but i often see ratelimits on most apis at 30 reqs per second
19:18 <+bridge> [ddnet] <Ryozuki> To identify a general threshold for Cloudflare Rate Limiting, divide 24 hours of uncached website requests by the unique visitors for the same 24 hours. Then, divide by the estimated average minutes of a visit.  Finally, multiply by 4 (or larger) to establish an estimated threshold per minute for your website. A value higher than 4 is fine since most attacks are an order of magnitude above typical traffic rates.
19:18 <+bridge> [ddnet] <Ryozuki> 
19:18 <+bridge> [ddnet] <Ryozuki> To identify URL rate limits for specific URLs, use 24 hours of uncached requests and unique visitors for the specific URL.  Adjust thresholds based on user reports and your own monitoring.
19:18 <+bridge> [ddnet] <Ryozuki> Idk xd
19:19 <+bridge> [ddnet] <Ryozuki> https://support.cloudflare.com/hc/en-us/articles/115001635128-Configuring-Cloudflare-Rate-Limiting
19:22 <+bridge> [ddnet] <Jupstar âœª> but since we all good programmers we dont do it
19:22 <+bridge> [ddnet] <Jupstar âœª> now back to normal business
19:22 <+bridge> [ddnet] <Jupstar âœª> 
19:22 <+bridge> [ddnet] <Jupstar âœª> any new rust libs @Ryozuki ?
19:25 <+bridge> [ddnet] <Ryozuki> Yes, rustyman
19:25 <+bridge> [ddnet] <Ryozuki> I wonder who made it
19:25 <+bridge> [ddnet] <Mr.Gh0s7> Thanks that was it. It was in TileExists().
19:25 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
19:26 <+bridge> [ddnet] <Ryozuki> This is bigger news
19:26 <+bridge> [ddnet] <Jupstar âœª> when do i get virtual functions to overrid
19:26 <+bridge> [ddnet] <Jupstar âœª> when do i get virtual functions to override
19:27 <+bridge> [ddnet] <Ryozuki> Ew no
19:27 <+bridge> [ddnet] <Ryozuki> Use traits
19:29 <+bridge> [ddnet] <Jupstar âœª> but a dyn trait is basically that?
19:29 <+bridge> [ddnet] <Jupstar âœª> on asm level
19:49 <+bridge> [ddnet] <Ryozuki> @Not Keks well dyn trait is used for dynamic dispatch
19:50 <+bridge> [ddnet] <Ryozuki> > We use dyn Trait over (data, vtable) for the same reason we use, references over pointers, Rc over (pointer_data, pointer_counter), Box over malloc/free. It's a safe abstraction which can be proven to not cause errors.
19:50 <+bridge> [ddnet] <Ryozuki> https://users.rust-lang.org/t/dyn-trait-vs-data-vtable/36127
19:53 <+bridge> [ddnet] <Jupstar âœª> yeah i am fine with that
19:53 <+bridge> [ddnet] <Jupstar âœª> i just need the functionality
19:53 <+bridge> [ddnet] <Ryozuki> its just that rust doesnt have OOP as in inheritance
19:53 <+bridge> [ddnet] <Ryozuki> it favors composition
19:54 <+bridge> [ddnet] <Ryozuki> with the trait model
19:54 <+bridge> [ddnet] <Ryozuki> and its something generally good
19:54 <+bridge> [ddnet] <Jupstar âœª> i just hope it doesnt create too much more code
19:54 <+bridge> [ddnet] <Ryozuki> the cat and dog classes that plague java
19:54 <+bridge> [ddnet] <Ryozuki> thats too much code xd
19:54 <+bridge> [ddnet] <Ryozuki> i dont feel im overly verbose in rust
19:55 <+bridge> [ddnet] <Ryozuki> @Not Keks if u code in a "rusty" way it lends itself i would say
19:55 <+bridge> [ddnet] <Ryozuki> u shouldnt force a java oop style on rust
19:55 <+bridge> [ddnet] <Ryozuki> u will end up with unidiomatic code
19:55 <+bridge> [ddnet] <Ryozuki> did u read the rust book yet?
19:55 <+bridge> [ddnet] <Ryozuki> u rly should
19:56 <+bridge> [ddnet] <Ryozuki> the rust book is a web btw
19:56 <+bridge> [ddnet] <Ryozuki> https://doc.rust-lang.org/book/
19:56 <+bridge> [ddnet] <Ryozuki> this
19:56 <+bridge> [ddnet] <Jupstar âœª> i dont feel like i want or need this
19:56 <+bridge> [ddnet] <Jupstar âœª> i just need a project and then start
19:56 <+bridge> [ddnet] <Ryozuki> thats sad
19:56 <+bridge> [ddnet] <Ryozuki> u rly need this
19:56 <+bridge> [ddnet] <Ryozuki> i would say
19:57 <+bridge> [ddnet] <Ryozuki> also its pretty interesting
19:57 <+bridge> [ddnet] <Jupstar âœª> yeah dunno xD
19:57 <+bridge> [ddnet] <Jupstar âœª> i hate reading books
19:57 <+bridge> [ddnet] <Ryozuki> i also hate reading books
19:57 <+bridge> [ddnet] <Ryozuki> though this to mee didnt feel like a book
19:57 <+bridge> [ddnet] <Ryozuki> more like a introduction to the language
19:57 <+bridge> [ddnet] <Ryozuki> its not a 200 page c++ book
19:58 <+bridge> [ddnet] <Jupstar âœª> anyway, i dont think its worth it, u usually dont get a feeling for the abstractions if u just read
19:58 <+bridge> [ddnet] <Ryozuki> i think u do in this case
19:58 <+bridge> [ddnet] <Ryozuki> but its not just abstractions
19:58 <+bridge> [ddnet] <Ryozuki> rust introduces new things u are not used to
19:58 <+bridge> [ddnet] <Ryozuki> lifetimes
19:58 <+bridge> [ddnet] <Ryozuki> borrowing
19:58 <+bridge> [ddnet] <Jupstar âœª> also sometimes i look how u'd do stuff in rust, when i feel like that could be hard without unsafe rust
19:59 <+bridge> [ddnet] <Ryozuki> like what?
19:59 <+bridge> [ddnet] <Jupstar âœª> well we discussed this before, especially thread related stuff
19:59 <+bridge> [ddnet] <Ryozuki> not rly
19:59 <+bridge> [ddnet] <Ryozuki> the thing i like the mosti s rust thread safety
20:00 <+bridge> [ddnet] <Ryozuki> but i remember u said some weird obscure edge case
20:00 <+bridge> [ddnet] <Ryozuki> i dont remember much tho xd
20:00 <+bridge> [ddnet] <Jupstar âœª> yeah but every abstraction comes with a restriction
20:00 <+bridge> [ddnet] <Ryozuki> yeah these restrictions rule out all unsafe abstractions and probably some valid use cases
20:00 <+bridge> [ddnet] <Ryozuki> but more and more less valid use cases are ruled out
20:01 <+bridge> [ddnet] <Ryozuki> as rust improves
20:01 <+bridge> [ddnet] <Jupstar âœª> i can also write a game in javascript
20:01 <+bridge> [ddnet] <Jupstar âœª> its not like i cannot imagine it
20:01 <+bridge> [ddnet] <Voxel> u right, its a 200 page rust book
20:01 <+bridge> [ddnet] <Jupstar âœª> and rust is nice bcs it has a better idea than all the trash langauges like java
20:01 <+bridge> [ddnet] <Jupstar âœª> for me its not so much about if its possible or not. More about if its actually more elegant of solution
20:02 <+bridge> [ddnet] <Ryozuki> i find rust way more elegant than c++ way often
20:02 <+bridge> [ddnet] <Ryozuki> this is due to algebraic data types
20:02 <+bridge> [ddnet] <Ryozuki> rust enums are just godly
20:03 <+bridge> [ddnet] <Ryozuki> and try to find something as good as serde
20:03 <+bridge> [ddnet] <Ryozuki> the serde author truly is a genius
20:03 <+bridge> [ddnet] <Ryozuki> https://serde.rs/
20:03 <+bridge> [ddnet] <Voxel> the thing that scares me about rust is how you need to do like 9000 things just to get something down
20:03 <+bridge> [ddnet] <Ryozuki> vague
20:04 <+bridge> [ddnet] <Ryozuki> > Where many other languages rely on runtime reflection for serializing data, Serde is instead built on Rust's powerful trait system. A data structure that knows how to serialize and deserialize itself is one that implements Serde's Serialize and Deserialize traits (or uses Serde's derive attribute to automatically generate implementations at compile time). This avoids any overhead of reflection or runtime type information. In fact in many 
20:05 <+bridge> [ddnet] <Voxel> also like, you want to edit someones project? you need to find like 3 dlls and put them in a folder.
20:05 <+bridge> [ddnet] <Ryozuki> @Not Keks there are many cases where serde json serializer is faster than a hand written one xd
20:05 <+bridge> [ddnet] <Jupstar âœª> yes it sounds really great if you want an ez powerful solution
20:06 <+bridge> [ddnet] <Ryozuki> its ez and really configurable, and not limited to e.g 1 json serializer implementation
20:06 <+bridge> [ddnet] <Ryozuki> in fact there are multiple,
20:06 <+bridge> [ddnet] <Ryozuki> serde_json simd_json
20:06 <+bridge> [ddnet] <Ryozuki> all serde compatible
20:06 <+bridge> [ddnet] <Jupstar âœª> in this case i'd for example ask what if i want to do this:
20:06 <+bridge> [ddnet] <Jupstar âœª> 
20:06 <+bridge> [ddnet] <Jupstar âœª> load only have data, and start processing these data in another thread
20:06 <+bridge> [ddnet] <Jupstar âœª> then continue loading rest
20:06 <+bridge> [ddnet] <Jupstar âœª> i had use cases for such situations
20:06 <+bridge> [ddnet] <Jupstar âœª> so i end up in an own impl ðŸ˜„
20:07 <+bridge> [ddnet] <Jupstar âœª> not for json tho
20:07 <+bridge> [ddnet] <Ryozuki> i mean u can do that yeah
20:07 <+bridge> [ddnet] <Jupstar âœª> anyway generally making it ez is better anyway
20:07 <+bridge> [ddnet] <Ryozuki> serde doesnt handle how u load the data in any way
20:07 <+bridge> [ddnet] <Ryozuki> i think u rly dont know how serde works xd
20:07 <+bridge> [ddnet] <Jupstar âœª> if smth is perf hit u can still optimize it later
20:07 <+bridge> [ddnet] <Jupstar âœª> if ur solution is stable
20:08 <+bridge> [ddnet] <Ryozuki> also it allows parsing in a streaming way by passing a reader
20:08 <+bridge> [ddnet] <Jupstar âœª> sounds to me like it handles datatype loading itself
20:08 <+bridge> [ddnet] <Ryozuki> no
20:08 <+bridge> [ddnet] <Ryozuki> it just handles parsing
20:08 <+bridge> [ddnet] <Ryozuki> u pass it the data
20:09 <+bridge> [ddnet] <Ryozuki> ```rust
20:09 <+bridge> [ddnet] <Ryozuki> use serde::{Deserialize, Serialize};
20:09 <+bridge> [ddnet] <Ryozuki> use serde_json::Result;
20:09 <+bridge> [ddnet] <Ryozuki> 
20:09 <+bridge> [ddnet] <Ryozuki> #[derive(Serialize, Deserialize)]
20:09 <+bridge> [ddnet] <Ryozuki> struct Person {
20:09 <+bridge> [ddnet] <Ryozuki>     name: String,
20:09 <+bridge> [ddnet] <Ryozuki>     age: u8,
20:09 <+bridge> [ddnet] <Ryozuki>     phones: Vec<String>,
20:09 <+bridge> [ddnet] <Ryozuki> }
20:09 <+bridge> [ddnet] <Ryozuki> 
20:09 <+bridge> [ddnet] <Ryozuki> fn typed_example() -> Result<()> {
20:09 <+bridge> [ddnet] <Ryozuki>     // Some JSON input data as a &str. Maybe this comes from the user.
20:09 <+bridge> [ddnet] <Ryozuki>     let data = r#"
20:09 <+bridge> [ddnet] <Ryozuki>         {
20:09 <+bridge> [ddnet] <Ryozuki>             "name": "John Doe",
20:09 <+bridge> [ddnet] <Ryozuki>             "age": 43,
20:09 <+bridge> [ddnet] <Ryozuki>             "phones": [
20:09 <+bridge> [ddnet] <Ryozuki>                 "+44 1234567",
20:09 <+bridge> [ddnet] <Ryozuki>                 "+44 2345678"
20:09 <+bridge> [ddnet] <Ryozuki>             ]
20:09 <+bridge> [ddnet] <Ryozuki>         }"#;
20:09 <+bridge> [ddnet] <Ryozuki> 
20:09 <+bridge> [ddnet] <Ryozuki>     // Parse the string of data into a Person object. This is exactly the
20:09 <+bridge> [ddnet] <Ryozuki>     // same function as the one that produced serde_json::Value above, but
20:09 <+bridge> [ddnet] <Ryozuki>     // now we are asking it for a Person as output.
20:09 <+bridge> [ddnet] <Ryozuki>     let p: Person = serde_json::from_str(data)?;
20:09 <+bridge> [ddnet] <Ryozuki> 
20:09 <+bridge> [ddnet] <Ryozuki>     // Do things just like with any other Rust data structure.
20:09 <+bridge> [ddnet] <Ryozuki>     println!("Please call {} at the number {}", p.name, p.phones[0]);
20:09 <+bridge> [ddnet] <Ryozuki> 
20:09 <+bridge> [ddnet] <Jupstar âœª> and whats so genius about it then?
20:09 <+bridge> [ddnet] <Ryozuki> that it parses this without any runtime reflection
20:10 <+bridge> [ddnet] <Ryozuki> and its rly ergonomic
20:10 <+bridge> [ddnet] <Jupstar âœª> mh
20:10 <+bridge> [ddnet] <Jupstar âœª> but then its just constexpr
20:10 <+bridge> [ddnet] <Jupstar âœª> i meant a different scenario
20:11 <+bridge> [ddnet] <Ryozuki> it handles dynamic not known data too
20:11 <+bridge> [ddnet] <Ryozuki> in serde_json it would be a Value
20:11 <+bridge> [ddnet] <Jupstar âœª> but if u load it from disk?
20:11 <+bridge> [ddnet] <Ryozuki> yeah same
20:12 <+bridge> [ddnet] <Ryozuki> the program works if u load the data from disk
20:12 <+bridge> [ddnet] <Jupstar âœª> so it has some overhead in memory consumption?
20:12 <+bridge> [ddnet] <Jupstar âœª> or does it save it as binary?
20:12 <+bridge> [ddnet] <Ryozuki> ```rust
20:12 <+bridge> [ddnet] <Ryozuki> use serde::Deserialize;
20:12 <+bridge> [ddnet] <Ryozuki> 
20:12 <+bridge> [ddnet] <Ryozuki> use std::error::Error;
20:12 <+bridge> [ddnet] <Ryozuki> use std::fs::File;
20:12 <+bridge> [ddnet] <Ryozuki> use std::io::BufReader;
20:12 <+bridge> [ddnet] <Ryozuki> use std::path::Path;
20:12 <+bridge> [ddnet] <Ryozuki> 
20:12 <+bridge> [ddnet] <Ryozuki> #[derive(Deserialize, Debug)]
20:12 <+bridge> [ddnet] <Ryozuki> struct User {
20:12 <+bridge> [ddnet] <Ryozuki>     fingerprint: String,
20:12 <+bridge> [ddnet] <Ryozuki>     location: String,
20:12 <+bridge> [ddnet] <Ryozuki> }
20:12 <+bridge> [ddnet] <Ryozuki> 
20:12 <+bridge> [ddnet] <Ryozuki> fn read_user_from_file<P: AsRef<Path>>(path: P) -> Result<User, Box<dyn Error>> {
20:12 <+bridge> [ddnet] <Ryozuki>     // Open the file in read-only mode with buffer.
20:12 <+bridge> [ddnet] <Ryozuki>     let file = File::open(path)?;
20:12 <+bridge> [ddnet] <Ryozuki>     let reader = BufReader::new(file);
20:12 <+bridge> [ddnet] <Ryozuki> 
20:12 <+bridge> [ddnet] <Ryozuki>     // Read the JSON contents of the file as an instance of `User`.
20:12 <+bridge> [ddnet] <Ryozuki>     let u = serde_json::from_reader(reader)?;
20:13 <+bridge> [ddnet] <Ryozuki> 
20:13 <+bridge> [ddnet] <Ryozuki>     // Return the `User`.
20:13 <+bridge> [ddnet] <Ryozuki>     Ok(u)
20:13 <+bridge> [ddnet] <Ryozuki> }
20:13 <+bridge> [ddnet] <Ryozuki> 
20:13 <+bridge> [ddnet] <Ryozuki> fn main() {
20:13 <+bridge> [ddnet] <Ryozuki>     let u = read_user_from_file("test.json").unwrap();
20:13 <+bridge> [ddnet] <Ryozuki>     println!("{:#?}", u);
20:13 <+bridge> [ddnet] <Ryozuki> }
20:13 <+bridge> [ddnet] <Ryozuki> ```
20:13 <+bridge> [ddnet] <Ryozuki> it can do 0 copy parsing
20:13 <+bridge> [ddnet] <Ryozuki> idk what u on about abotu saving
20:13 <+bridge> [ddnet] <Ryozuki> i think we are not understanding each other xd
20:13 <+bridge> [ddnet] <Jupstar âœª> yes u say it has zero cost basically?
20:13 <+bridge> [ddnet] <Ryozuki> well u can make it this way
20:13 <+bridge> [ddnet] <Ryozuki> in the case shown its not cuz its using owned strings
20:13 <+bridge> [ddnet] <Ryozuki> https://serde.rs/lifetimes.html
20:14 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1035617496155299851/unknown.png
20:17 <+bridge> [ddnet] <Ryozuki> well brb eating
20:46 <+bridge> [ddnet] <heinrich5991> on what rust project did that happen? hasn't been my experience so far
20:46 <+bridge> [ddnet] <heinrich5991> I only had that experience with non-rust projects, actually
20:47 <+bridge> [ddnet] <Voxel> cipy sent me something and when i tried to run it it was like, yelling at me for missing files or smth
20:47 <+bridge> [ddnet] <Voxel> so i had to like, go get the files and place them in some rust folder in my pc
20:48 <+bridge> [ddnet] <heinrich5991> weird
20:48 <+bridge> [ddnet] <Ryozuki> weird indeed
20:48 <+bridge> [ddnet] <Ryozuki> i nevern eeded any file
20:49 <+bridge> [ddnet] <Voxel> wtf
20:49 <+bridge> [ddnet] <Jupstar âœª> probs some c bindings
20:50 <+bridge> [ddnet] <Jupstar âœª> but yeah rust compiles staticly which i really like ^^
20:52 <+bridge> [ddnet] <Ryozuki> statically by default *
20:52 <+bridge> [ddnet] <Ryozuki> https://doc.rust-lang.org/reference/linkage.html
23:15 <+bridge> [ddnet] <Smetanolub> i have 100 fps after i do alt tab
23:15 <+bridge> [ddnet] <Smetanolub> usually i have 5000
23:28 <+bridge> [ddnet] <Jupstar âœª> press "restart" in windows
23:28 <+bridge> [ddnet] <Smetanolub> it helps
23:28 <+bridge> [ddnet] <Smetanolub> but i need to altab and i cant play after it
23:29 <+bridge> [ddnet] <Jupstar âœª> no i mean press restart
23:29 <+bridge> [ddnet] <Jupstar âœª> in windows
23:29 <+bridge> [ddnet] <Jupstar âœª> not restart the client
23:30 <+bridge> [ddnet] <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1035666875130052659/unknown.png
23:30 <+bridge> [ddnet] <Smetanolub> I UNDERSTAND
23:30 <+bridge> [ddnet] <Smetanolub> i said yes it helps
23:30 <+bridge> [ddnet] <Smetanolub> but i cant restart 9999999 times
23:31 <+bridge> [ddnet] <Jupstar âœª> install latest GPU drivers
23:31 <+bridge> [ddnet] <Jupstar âœª> and restart
23:31 <+bridge> [ddnet] <Jupstar âœª> ^^
23:31 <+bridge> [ddnet] <Jupstar âœª> do you use vulkan or opengl ?
23:31 <+bridge> [ddnet] <Jupstar âœª> 
23:31 <+bridge> [ddnet] <Jupstar âœª> settings -> graphics -> renderer in client
23:31 <+bridge> [ddnet] <Smetanolub> yes i do
23:31 <+bridge> [ddnet] <Jupstar âœª> ^ try what you dont use
23:31 <+bridge> [ddnet] <Jupstar âœª> its not a boolean question
23:31 <+bridge> [ddnet] <Jupstar âœª> which one do you use
23:32 <+bridge> [ddnet] <Smetanolub> 1.0.0
23:32 <+bridge> [ddnet] <Jupstar âœª> try opengl then
23:32 <+bridge> [ddnet] <Jupstar âœª> 3.3
23:32 <+bridge> [ddnet] <Smetanolub> less fps
23:32 <+bridge> [ddnet] <Alexander> can't have it all
23:33 <+bridge> [ddnet] <Jupstar âœª> then install latest drivers
23:33 <+bridge> [ddnet] <Jupstar âœª> whats ur GPU, what is your driver?
23:33 <+bridge> [ddnet] <Smetanolub> 3080ti
23:33 <+bridge> [ddnet] <Jupstar âœª> latest driver from nvidia.com?
23:33 <+bridge> [ddnet] <Smetanolub> drivers from 07 2022
23:33 <+bridge> [ddnet] <Jupstar âœª> try the current one
23:34 <+bridge> [ddnet] <Jupstar âœª> https://www.nvidia.com/download/index.aspx?lang=en-us
23:35 <+bridge> [ddnet] <Alexander> How do I change renderer btw
23:35 <+bridge> [ddnet] <Alexander> like not in game
23:35 <+bridge> [ddnet] <Alexander> from game files
23:37 <+bridge> [ddnet] <Jupstar âœª> gfx_backend
23:37 <+bridge> [ddnet] <Jupstar âœª> OpenGL
23:37 <+bridge> [ddnet] <Jupstar âœª> Vulkan
23:37 <+bridge> [ddnet] <Alexander> Thanks
23:37 <+bridge> [ddnet] <Jupstar âœª> on linux GLES
23:37 <+bridge> [ddnet] <Smetanolub> is there vulkan 2.0.0?
23:37 <+bridge> [ddnet] <Jupstar âœª> no
23:37 <+bridge> [ddnet] <Alexander> opengl 3.3.0 doesnt work for me
23:37 <+bridge> [ddnet] <Jupstar âœª> there is vulkan 1.3
23:37 <+bridge> [ddnet] <Jupstar âœª> probs amd gpu
23:37 <+bridge> [ddnet] <Smetanolub> how do i use it ingame
23:37 <+bridge> [ddnet] <Alexander> yeye
23:37 <+bridge> [ddnet] <Jupstar âœª> the beta drivers are buggy
23:37 <+bridge> [ddnet] <Alexander> i dont think im using beta
23:37 <+bridge> [ddnet] <Jupstar âœª> there is no vulkan 1.3 implementation
23:37 <+bridge> [ddnet] <Alexander> but latest
23:38 <+bridge> [ddnet] <Jupstar âœª> but vulkan 1.3 is downward compatible
23:38 <+bridge> [ddnet] <Smetanolub> https://tenor.com/view/sad-troll-face-depressed-trollface-gif-25126675
23:38 <+bridge> [ddnet] <Jupstar âœª> so u basically using vulkan 1.3
23:43 <+bridge> [ddnet] <Jupstar âœª> amd calls them optional, but they also call them beta
23:43 <+bridge> [ddnet] <Jupstar âœª> 
23:44 <+bridge> [ddnet] <Jupstar âœª> and for some reason they promote them more than their stable drivers on their website xD
23:44 <+bridge> [ddnet] <Jupstar âœª> dunno what their reasoning is
23:44 <+bridge> [ddnet] <Alexander> ah so amd = :nouis:
23:44 <+bridge> [ddnet] <Jupstar âœª> yes
23:44 <+bridge> [ddnet] <Alexander> and i download them cause i think that they are better to have
23:45 <+bridge> [ddnet] <Jupstar âœª> yeah its not your fault, i'd do that too ðŸ˜„
23:45 <+bridge> [ddnet] <Alexander> when in reality it means more unstable driver
23:45 <+bridge> [ddnet] <Jupstar âœª> and if i wouldnt know its buggy for ddnet, i'd also recommend it
23:45 <+bridge> [ddnet] <Alexander> there is also another thing that is happening to me that didn't happen before (before i reinstalled windows)
23:46 <+bridge> [ddnet] <Alexander> https://cdn.discordapp.com/attachments/293493549758939136/1035670959316803704/Gx3fk1.webm
23:46 <+bridge> [ddnet] <Alexander> there is a gap when showing the taskbar
23:46 <+bridge> [ddnet] <Alexander> there is a gap when showing and hiding the taskbar
23:47 <+bridge> [ddnet] <Alexander> and I can't find anyone else talking about it on the internet
23:48 <+bridge> [ddnet] <Jupstar âœª> here nvidia for example doesnt even show it, except you explicity search for beta drivers ðŸ˜„
23:48 <+bridge> [ddnet] <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1035671353610743808/unknown.png
23:48 <+bridge> [ddnet] <Jupstar âœª> is that also if u dont have a dynamic taskbar?
23:48 <+bridge> [ddnet] <Alexander> dynamic taskbar?
23:48 <+bridge> [ddnet] <Jupstar âœª> it always goes away
23:49 <+bridge> [ddnet] <Alexander> it doesn't happen since there is no animation then
23:49 <+bridge> [ddnet] <Alexander> but i don't like seeing the taskbar always
23:49 <+bridge> [ddnet] <Jupstar âœª> weird stuff
23:50 <+bridge> [ddnet] <Alexander> i know its the drivers since its not happening when im updating it (it disables it for a moment)
23:51 <+bridge> [ddnet] <Jupstar âœª> its just weird that this is caused by the GPU driver, but maybe its some weird interpolation inaccuracy in the rendering
23:51 <+bridge> [ddnet] <Alexander> It's weird to me that it didn't happen before i reinstalled windows
23:52 <+bridge> [ddnet] <Alexander> But I probably had an old version of the driver
23:52 <+bridge> [ddnet] <Alexander> But I probably had an older version of the driver
23:52 <+bridge> [ddnet] <Jupstar âœª> i mean u can simply downgrade ðŸ˜„
23:52 <+bridge> [ddnet] <Alexander> I think I would if it was that easy
23:52 <+bridge> [ddnet] <Alexander> I'd have to try a lot of driver versions before I find the one that works
23:53 <+bridge> [ddnet] <Alexander> And the process of installing is long
23:53 <+bridge> [ddnet] <Jupstar âœª> i see
23:53 <+bridge> [ddnet] <Jupstar âœª> replace directx.dll with directx.dll from dxvk
23:53 <+bridge> [ddnet] <Jupstar âœª> ez
23:53 <+bridge> [ddnet] <Alexander> Can you explain what would that do
23:54 <+bridge> [ddnet] <Alexander> I feel like you are joking
23:54 <+bridge> [ddnet] <Jupstar âœª> i have no idea if that works with windows
23:54 <+bridge> [ddnet] <Jupstar âœª> but in theory
23:54 <+bridge> [ddnet] <Jupstar âœª> 
23:54 <+bridge> [ddnet] <Jupstar âœª> windows probs uses directx to render their window manager
23:54 <+bridge> [ddnet] <Jupstar âœª> 
23:54 <+bridge> [ddnet] <Jupstar âœª> dxvk is basically, directx on vulkan
23:54 <+bridge> [ddnet] <Jupstar âœª> so all dx calls are translated to vk
23:54 <+bridge> [ddnet] <Jupstar âœª> if u have some old game and want more FPS, u can try it out
23:54 <+bridge> [ddnet] <Jupstar âœª> they usually easily beat dx9 drivers
23:55 <+bridge> [ddnet] <Alexander> Okay but would it work for windows
23:55 <+bridge> [ddnet] <Jupstar âœª> i dunno i never tested it
23:55 <+bridge> [ddnet] <Jupstar âœª> but in theory nothing speaks against it probs
23:55 <+bridge> [ddnet] <Alexander> I trust you so im gonna try it xd
23:56 <+bridge> [ddnet] <Jupstar âœª> but i cannot say what exactly needs to be replaced
23:56 <+bridge> [ddnet] <Jupstar âœª> 
23:56 <+bridge> [ddnet] <Jupstar âœª> windows uses dxgi for all rendering, quite possible that they hacked in some microsoft exclusive stuff ðŸ˜„
23:56 <+bridge> [ddnet] <Jupstar âœª> better google first xD
23:56 <+bridge> [ddnet] <Alexander> I am xd
23:57 <+bridge> [ddnet] <Jupstar âœª> https://en.wikipedia.org/wiki/Desktop_Window_Manager#:~:text=DWM%20uses%20DirectX%20to%20perform,screen%20buffers%20to%20the%20display.
23:57 <+bridge> [ddnet] <Jupstar âœª> "DWM uses DirectX to perform the function of compositing and rendering in the GPU, freeing the CPU of the task of managing the rendering from the off-screen buffers to the display. "
23:57 <+bridge> [ddnet] <Jupstar âœª> so maybe its actually possible
23:58 <+bridge> [ddnet] <Jupstar âœª> but i cannot find any post about someone trying it ðŸ˜„
23:59 <+bridge> [ddnet] <Alexander> lets see if i can find the right file
