00:07 < bridge> <louis> can someone review #9465
00:07 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/9465
00:13 < bridge> <kebscs> cursor moving without input feels bad, original video is better
00:14 < bridge> <louis> but then it adds new features
00:14 < bridge> <kebscs> like?
00:15 < bridge> <louis> i dont mind either way but idk being able to snap between a preset angle and a 45* angle sounds like bad news
00:16 < bridge> <kebscs> idk i prefer the first one
00:22 < bridge> <louis> its nicer but rly chotty
00:29 < bridge> <TsPiggy> Probably avoid introducing new features with that angles PR. God knows what people discovers "creative" new uses for it
00:29 < bridge> <kebscs> ui code is such a mess, buttons have seperate functions for game, then same thing but in editor but different params
00:29 < bridge> <kebscs> ui code is such a mess, buttons have seperate functions for game, then same thing in editor but different params
00:29 < bridge> <kebscs> so many times editor button has corners specified in flag params by mistake
00:29 < bridge> <kebscs> so many times editor buttons have corners specified in flag params by mistake
00:30 < bridge> <TsPiggy> Well that's what we get for not sharing codes between editor and game
00:34 < bridge> <kebscs> game buttons had no flags, editor have a single flag which is just hasContext
00:34 < bridge> <kebscs> but every single button have to specify 0 flag anyway üòÜ
01:24 < bridge> <APFFF> What does this track?
01:24 < bridge> <APFFF> 1. Total time spent on DDNet servers
01:24 < bridge> <APFFF> 2. None AFK time spent on DDNet servers
01:24 < bridge> <APFFF> 3. Total time spent beating maps (aka added up time of map completions)
01:24 < bridge> <APFFF> https://cdn.discordapp.com/attachments/293493549758939136/1344465114350223402/image.png?ex=67c10236&is=67bfb0b6&hm=f2435d07b175974da1a364ff4f0de88ef668fe356c793e3dc9bf7db7bb9332b6&
01:25 < bridge> <APFFF> What does this track?
01:25 < bridge> <APFFF> 1. Total time spent on DDNet servers
01:25 < bridge> <APFFF> 2. None AFK time spent on DDNet servers
01:25 < bridge> <APFFF> 3. Total time spent beating maps (aka sum of map completion times)
01:25 < bridge> <APFFF> https://cdn.discordapp.com/attachments/293493549758939136/1344465114350223402/image.png?ex=67c10236&is=67bfb0b6&hm=f2435d07b175974da1a364ff4f0de88ef668fe356c793e3dc9bf7db7bb9332b6&
01:26 < bridge> <davidlovesmath> well now thats a new error ive never seen before
01:26 < bridge> <davidlovesmath> https://cdn.discordapp.com/attachments/293493549758939136/1344465771165782046/image.png?ex=67c102d2&is=67bfb152&hm=a2398fb874ba614e823ab9829fc1c1a926450a880809d343c008c62abe5428f3&
01:27 < bridge> <davidlovesmath> yep its consistent not just a out of memory bug
01:27 < bridge> <davidlovesmath> (im fuzzing the map format(
01:27 < bridge> <davidlovesmath> (im fuzzing the map format)
01:29 < bridge> <davidlovesmath> yea thats more what i was exspecting. more of the most commen bug it found
01:29 < bridge> <davidlovesmath> https://cdn.discordapp.com/attachments/293493549758939136/1344466343415779349/image.png?ex=67c1035b&is=67bfb1db&hm=3f220d1a619fd3fc940666563e88b5019f3ed08edf4924ad88a2c95e910442eb&
01:31 < bridge> <Sans> Seems to be the latter
01:31 < bridge> <Sans> https://github.com/ddnet/ddnet-scripts/blob/8cc6949be1a7d0b2780553da6afcf44074dbc8ed/servers/scripts/players.py#L110-L122
01:31 < bridge> <APFFF> Damn, thanks for in-depth search
01:32 < bridge> <Sans> I already knew where to look, been here before :heh:, just wanted to pass you a reference cuz idk sql
01:32 < bridge> <APFFF> @sans._. btw. are fine with me asking you question about your skin-renderer here and there?
01:32 < bridge> <Sans> sure, go for it
01:35 < bridge> <Sans> @apfff I based it mostly on [this document](<https://github.com/heinrich5991/libtw2/blob/master/doc/tee_rendering.md>) by Patiga, with a few touchups here and there
01:36 < bridge> <APFFF> omfg thats exactly what I was looking for haah
01:36 < bridge> <APFFF> omfg thats exactly what I was looking for haha
01:36 < bridge> <Sans> :owo:
01:37 < bridge> <APFFF> btw. do you know if theres an easy way to access the SVG files instead of ripping the PNGs from ddnet.org/skins?
01:37 < bridge> <Sans> svg?
01:37 < bridge> <Sans> from where
01:38 < bridge> <Sans> Ah, those are not svg's
01:38 < bridge> <APFFF> ah nvm I got confused with a different project. there is no svgs xD
01:38 < bridge> <Sans> yeah, they're rendered
01:38 < bridge> <Sans> with canvas
01:39 < bridge> <APFFF> I was just wondering how they got such high quality renderings, but I guess they use the 4k versions
01:39 < bridge> <APFFF> Canvas?
01:39 < bridge> <Sans> https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API
01:40 < bridge> <APFFF> crazy how opening this url made it switch to /zh-TW/ (I'm german)
01:40 < bridge> <APFFF> https://cdn.discordapp.com/attachments/293493549758939136/1344469197064900638/image.png?ex=67c10603&is=67bfb483&hm=7396ab3dfecb894e04e05ded69c888a0bf93ad76d31e2de3c05893f051fb3587&
01:40 < bridge> <Sans> lol
01:41 < bridge> <APFFF> it wont even let me access the english path?
01:41 < bridge> <Sans> top right
01:41 < bridge> <Sans> https://cdn.discordapp.com/attachments/293493549758939136/1344469493346467860/image.png?ex=67c1064a&is=67bfb4ca&hm=21245939b7778a255853df5d455afbb70d86f3e10b15829f9d97742d3cc3ea40&
01:42 < bridge> <APFFF> It seems to be a Firefox thing. Works with Chrome
01:42 < bridge> <APFFF> That worked but manually editing the path didnt (?)
01:42 < bridge> <Sans> ¬Ø\_(„ÉÑ)_/¬Ø
01:43 < bridge> <Sans> mdn is on some good stuff apparently
01:43 < bridge> <APFFF> anyways, thanks for the ressources
01:43 < bridge> <Sans> np
01:43 < bridge> <APFFF> my lazy ass would have never done that research
01:54 < bridge> <davidlovesmath> are assetsions enabled on the build on steam
01:54 < bridge> <davidlovesmath> are assetsions enabled on the build on steam?
01:56 < bridge> <davidlovesmath> @robyt3
01:57 < bridge> <davidlovesmath> i need to know if i should report this or not
01:57 < bridge> <davidlovesmath> as if the anser is no then i should report it and if the anser is yes then i shouldnt
02:08 < bridge> <Sans> When you have time I wanna give a bit more details about this pls :)
02:08 < bridge> <Sans> 
02:08 < bridge> <Sans> It randomly popped in my head again and I wanna try to find solutions
02:10 < bridge> <Sans> When you have time I wanna get a bit more details about this pls :)
02:10 < bridge> <Sans> 
02:10 < bridge> <Sans> It randomly popped in my head again and I wanna try to find solutions
02:15 < bridge> <Ewan> tl;dr people here probably generally don't want new & fancy chat features unless there's a good case made for them
02:15 < bridge> <Ewan> it's all a big scam to make you eat pig ham
02:32 < bridge> <Sans> its basically this, but with anything you want
02:32 < bridge> <Sans> present your data more nicely
02:33 < bridge> <Sans> instead the great text wall of china‚Ñ¢Ô∏è
02:33 < bridge> <Sans> +also you get to customize stuff
02:33 < bridge> <davidlovesmath> I FOUND A OOB WRITE YIPPY!!!!!! ill report it once i find the cause and mabey make a proof of consept!
02:33 < bridge> <Sans> There's also functionality that can be added
02:34 < bridge> <Sans> you found a what now?
02:34 < bridge> <Sans> <a:HUH:1178720004980605089>
02:34 < bridge> <davidlovesmath> a oob write
02:34 < bridge> <Sans> what's that
02:35 < bridge> <davidlovesmath> sadly its on the heap so unlikely to be exsplotable but ill try at least
02:35 < bridge> <Sans> instead of the great text wall of china‚Ñ¢Ô∏è
02:35 < bridge> <Sans> am confoos
02:43 < bridge> <davidlovesmath> basicly it means that you might be able to hack someone if they join your server
02:43 < bridge> <davidlovesmath> is basicly what that means
02:43 < bridge> <davidlovesmath> @sans._.
02:43 < bridge> <davidlovesmath> mabey
02:43 < bridge> <davidlovesmath> i need to look into it more
02:44 < bridge> <Sans> that's scary :heh:
02:44 < bridge> <happyfray> and the ddnet folder is more or less empty did someone of you killed the beta version? Cause when i check for missing files it says everything is there.
02:44 < bridge> <happyfray> normal version works but nightly doesnt.
02:44 < bridge> <happyfray> https://cdn.discordapp.com/attachments/293493549758939136/950325874199261234/unknown.png?ex=67c0dab0&is=67bf8930&hm=4482c60fcc0fc32fc6b6f194b22b1d38f7470b0523c8d839f417cfb27b2dfaaf&
02:45 < bridge> <Ewan> out of bounds memory write
02:45 < bridge> <davidlovesmath> yea
02:45 < bridge> <Ewan> in languages like cpp without intrinsic memory safety it goes uncaught
02:45 < bridge> <Ewan> it's the entry point for the majority of CVEs i see
02:45 < bridge> <davidlovesmath> indded
02:46 < bridge> <davidlovesmath> for most CVEs that result in rce espesaly
02:47 < bridge> <Ewan> is this relevant
02:47 < bridge> <Ewan> <https://bsky.app/profile/protowlf.bsky.social/post/3lixv2djlek2f>
02:50 < bridge> <davidlovesmath> step 1: turn this into a OOB write primitive. so basicly contual what gets overiten and where
02:50 < bridge> <davidlovesmath> well ok step 1 is to understand the cause of the bug
02:51 < bridge> <Ewan> ye xd
02:54 < bridge> <davidlovesmath> this is exsiting!
02:54 < bridge> <davidlovesmath> my first real exsplote is forming!
03:03 < bridge> <davidlovesmath> wait acsualy i should reboot my pc and try agien just to be sure
03:10 < bridge> <davidlovesmath> ok yep that didnt break it good its not dependent on the memory layout
03:13 < bridge> <Ewan> that's awesome man
03:14 < bridge> <Ewan> resume worthy item
03:14 < bridge> <Ewan> if u can fix it üòé
03:57 < bridge> <Sans> i wasnt even aware that's a thing wtf
03:58 < bridge> <Sans> i got no counter to that
03:58 < bridge> <Ewan> it's the train of thought
03:58 < bridge> <Ewan> it's just extra
03:58 < bridge> <Ewan> imo
03:58 < bridge> <Ewan> and i think that's probably the sentiment of others who don't want it
03:59 < bridge> <Sans> i mean
03:59 < bridge> <Ewan> less is more
03:59 < bridge> <Sans> i dont want _that_ specifically
03:59 < bridge> <Sans> but external apps are a cool idea
03:59 < bridge> <Sans> and very useful
04:00 < bridge> <Ewan> @tsk.xp LMFAO i see u
04:00 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1344504422855610468/image.png?ex=67c126d2&is=67bfd552&hm=3b6461b55c54d8d64405b77939efad23888ebfe735ddda05f364da92f56f809d&
04:01 < bridge> <Sans> This is just something I whipped up out of boredom a while ago, but imagine instead of this there's literally anything, a PR, docs on something, a saved message etc.
04:01 < bridge> <Sans> https://cdn.discordapp.com/attachments/293493549758939136/1344504574756524052/image.png?ex=67c126f6&is=67bfd576&hm=f066ca0c106cd9e4ba9077c183f3b819a45aa57e5e4dc7ac5980bae3bb620a2b&
04:01 < bridge> <Sans> But image generation and other bs, yikes
04:01 < bridge> <Ewan> ~~i think they'd sooner add it to the ddnet bot~~
04:01 < bridge> <Ewan> that's why bots are good
04:02 < bridge> <Ewan> because the server admins can opt into them
04:02 < bridge> <Ewan> they can't control anything about external apps
04:02 < bridge> <Sans> I'm more than happy to re-write the bot in typescript but everyone is a python fanatic around here
04:02 < bridge> <Sans> :heh:
04:02 < bridge> <Ewan> sorry but the logic isn't so unique it requires the rest of the bot to be ported
04:03 < bridge> <Ewan> u could do it with magick super ez
04:03 < bridge> <Sans> python is weird tho üò©
04:03 < bridge> <Ewan> it's just an implementation detail
04:03 < bridge> <Sans> no idea whats that
04:03 < bridge> <Ewan> imagemagick
04:03 < bridge> <Ewan> python lib & super duper common CLI image manipulation utility
04:04 < bridge> <Sans> eh
04:04 < bridge> <Sans> i used npm/sharp for image manip
04:05 < bridge> <Ewan> im sure u did
04:05 < bridge> <Ewan> u dont linux do u
04:05 < bridge> <Sans> i used to, until valorant hit me like a horse
04:05 < bridge> <Ewan> omg
04:05 < bridge> <Ewan> relapsing over valorant is insane
04:05 < bridge> <Sans> the good news is
04:05 < bridge> <Ewan> maybe i made fun of you for it already sorry üòì
04:05 < bridge> <Sans> i switched to cs2 :kek:
04:05 < bridge> <Ewan> W
04:05 < bridge> <Ewan> so go back
04:06 < bridge> <Ewan> tell bill gates what's what
04:06 < bridge> <Sans> i will, too lazy to make backups rn tho
04:06 < bridge> <Ewan> excuses
04:06 < bridge> <Sans> i've got about 800gb of stuff i need to sort through
04:07 < bridge> <Ewan> ive basically just happened to buy more drives as i need them & now my pc is full of backup drives
04:07 < bridge> <Ewan> it's not very efficient
04:07 < bridge> <Sans> wdym, that's very nice
04:07 < bridge> <Sans> i wish i had more than 1 drive (aside from my boot drive)
04:07 < bridge> <Sans> i wish i had more than 1 drive (excluding from my boot drive)
04:07 < bridge> <Sans> i wish i had more than 1 drive (excluding my boot drive)
04:08 < bridge> <Sans> i'd be able to sort stuff better
04:08 < bridge> <Sans> and even dedicate a drive to windows for god knows when i might need it
04:08 < bridge> <Ewan> if i had thought any of this out i'd use a NAS for all but boot/root/home drives & games
04:09 < bridge> <Ewan> having all the devices mounted & even plugged in will have a minor effect on the rest of the system
04:09 < bridge> <Ewan> less is more often times
04:10 < bridge> <Sans> :heh: you dont wanna know how many random tech stuff i'd buy and set up and manage just because
04:10 < bridge> <Sans> if only i had the budged
04:10 < bridge> <Sans> if only i had the budget
04:11 < bridge> <Sans> brain happy when many seemingly complicated things work perfectly in unison, i understand what they do and how everything works, and i can manage stuff from any of the screens
04:11 < bridge> <Sans> <a:nod:604500081114087434>
04:13 < bridge> <Ewan> yea
04:14 < bridge> <Ewan> it‚Äôs cooler once it spreads to your LAN
04:14 < bridge> <Ewan> imo
04:14 < bridge> <Ewan> u got a whole network of cool shit
04:15 < bridge> <Ewan> instead of just one computer
04:15 < bridge> <Ewan> i used to host shit on my pc all the time & never turned it off but as i got older i started to notice the heat/fan noise/whatever
04:15 < bridge> <Ewan> which is why it‚Äôs cool to have smth else so you can still treat your desktop like a normal computer lol
04:15 < bridge> <Sans> eh thats not too much of a bother
04:16 < bridge> <Sans> what you should be crying about is the power bill :kekw:
04:16 < bridge> <Ewan> haha well
04:16 < bridge> <Ewan> that‚Äôs why i only run one pc now
04:16 < bridge> <Ewan> at our old place utilities were shared among all tenants
04:16 < bridge> <Sans> you must've been adored by everyone
04:16 < bridge> <Ewan> they don‚Äôt know
04:17 < bridge> <Ewan> of the 200+ tenants
04:17 < bridge> <Sans> they don't need to know
04:17 < bridge> <Ewan> ü§∑‚Äç‚ôÇÔ∏è
04:18 < bridge> <Sans> anyway, back to linux vs windows
04:18 < bridge> <Sans> what distro would you recommend
04:18 < bridge> <Sans> aside from arch, im not touching that rabbit hole
04:18 < bridge> <Sans> or anything based on it really
04:18 < bridge> <Sans> depends
04:21 < bridge> <davidlovesmath> i mean depends on what you mean "fix"
04:21 < bridge> <davidlovesmath> if crashing it in a non-rce way counts as a "fix" then yes i could fix it
04:21 < bridge> <davidlovesmath> in fact i can fix it by just making the game close imeditly. that fixes any crashes
04:22 < bridge> <Ewan> eliminate the potential for the oob write
04:22 < bridge> <Ewan> within the code
04:22 < bridge> <Ewan> lol
04:22 < bridge> <davidlovesmath> yea thats simple enough
04:22 < bridge> <davidlovesmath> ok ill make the game exit as soon as it loads is that good?
04:22 < bridge> <Ewan> am i misunderstanding something
04:23 < bridge> <davidlovesmath> im saying ill make the game close as soon as the game loads
04:23 < bridge> <davidlovesmath> basicly making it into a usless progam that does basicly nothing
04:23 < bridge> <davidlovesmath> then unless theres a bug in libc or something no more oob writes
04:23 < bridge> <davidlovesmath> simple
04:24 < bridge> <Ewan> that‚Äôs not exactly what i had in mind but you do you
04:24 < bridge> <davidlovesmath> lol
04:24 < bridge> <davidlovesmath> i mean it would work
04:24 < bridge> <davidlovesmath> also can you exsplane the save format to me?
04:24 < bridge> <Ewan> this purple color on my name means fairly little
04:24 < bridge> <Ewan> idk anything about that
04:42 < bridge> <Ewan> i'm partial to nixos but i'm also probably autistic
04:43 < bridge> <Ewan> just get something that's easy and common enough that you won't run into weird packaging lapses & breaks that come from that
04:43 < bridge> <Sans> the only thing that scary about nix is programming stuff in the lang
04:43 < bridge> <Sans> might give it a shot tbh
04:43 < bridge> <Ewan> ~~oh no, it isn't~~
04:44 < bridge> <Ewan> this aint no typescript compiler bwoiah
04:45 < bridge> <Ewan> in all seriousness there are some fairly hard to diagnose issues that come from basic things
04:45 < bridge> <Ewan> many langs looks easy until you factor in the overall development experience and then it's not so simple
04:45 < bridge> <Ewan> it also tends to take its time & in general it's pretty hard on your disk, i'd imagine
04:58 < bridge> <tsk.xp> <a:8730kissyou:1318763305883533362>
06:35 < bridge> <Jupstar ‚ú™> @davidlovesmath why do you always write some English words incorrectly. Judging your overall grammar skills it kinda looks you do it on purpose. Are you some sub kind of analphabet?
06:37 < bridge> <davidlovesmath> no im just very bad at spelling
06:46 < bridge> <kollpotato> or dyslexic
06:47 < bridge> <davidlovesmath> can anyone exsplane the map format to me?
07:10 < bridge> <ryozuki> gentoo
07:11 < bridge> <ryozuki> can you try to look up docs online a bit? some minimum effort
07:11 < bridge> <davidlovesmath> wait theres docs?
07:12 < bridge> <milkeeycat> https://github.com/heinrich5991/libtw2/blob/master/doc/map.md
07:12 < bridge> <davidlovesmath> thanks sorry
07:12 < bridge> <ryozuki> https://wiki.ddnet.org/wiki/Development#External_resources
07:12 < bridge> <ryozuki> https://ddnet.org/libtw2-doc/
07:14 < bridge> <ryozuki> @davidlovesmath also just in case u know, most devs are in EU and its 7 in the morning so ur lucky to get answers now xd
07:15 < bridge> <ryozuki> just woke up
07:15 < bridge> <ryozuki> ‚òï
07:15 < bridge> <davidlovesmath> ah so thats why its so inactive atm
07:15 < bridge> <davidlovesmath> lol
07:15 < bridge> <davidlovesmath> thanks
07:15 < bridge> <ryozuki> where u from?
07:16 < bridge> <davidlovesmath> usa
07:16 < bridge> <ryozuki> üá∫üá∏
07:16 < bridge> <davidlovesmath> also is there any tools to read the datafiles easaly
07:16 < bridge> <ryozuki> in rust yes
07:16 < bridge> <ryozuki> twmap
07:16 < bridge> <ryozuki> https://docs.rs/twmap/0.12.5/twmap/
07:16 < bridge> <ryozuki> well idk if its low level for data files
07:17 < bridge> <ryozuki> https://docs.rs/twmap/0.12.5/twmap/datafile/index.html
07:17 < bridge> <ryozuki> looks like its there
07:17 < bridge> <ryozuki> do u know rust? good time to learn
07:17 < bridge> <davidlovesmath> not yet but ig its a good time to learn yea lol
07:17 < bridge> <ryozuki> otherwise u can check the tools/ in ddnet
07:18 < bridge> <ryozuki> and see how the map related ones handle it
07:18 < bridge> <ryozuki> in c++
07:18 < bridge> <davidlovesmath> i assume it lets me edit the fealds drectly?
07:18 < bridge> <ryozuki> but imho twmap is clean
07:18 < bridge> <ryozuki> "This crate provides a library for safe parsing, editing and saving "
07:18 < bridge> <ryozuki> idk if it lets u do invalid things
07:19 < bridge> <ryozuki> maybe with this https://docs.rs/twmap/0.12.5/twmap/datafile/struct.RawDatafile.html
07:20 < bridge> <ryozuki> yeah that one should do the trick
07:20 < bridge> <ryozuki> it has a load and save and all fields are public
07:20 < bridge> <ryozuki> but idk if ur goal is to find issues with the c++ code if u will find the same with rust
07:21 < bridge> <ryozuki> since rust is safe against lot more memory issues
07:21 < bridge> <ryozuki> and i think this crate doesnt use unsafe
07:22 < bridge> <ryozuki> @davidlovesmath u probs can get more done without knowing rust with this https://github.com/ddnet/ddnet/blob/master/src/tools/map_resave.cpp
07:22 < bridge> <ryozuki> i recommend making ur own tool there
07:23 < bridge> <davidlovesmath> i already found a oob write atm im trying to detemen the cause and mabey make a poc rce exsplote that opens caculator
07:24 < bridge> <ryozuki> is the write from an invalid map?
07:24 < bridge> <davidlovesmath> yea
07:24 < bridge> <ryozuki> would be cool to try it with the rust lib
07:24 < bridge> <ryozuki> im sure rust will shine
07:24 < bridge> <ryozuki> send the map when u can xd
07:25 < bridge> <davidlovesmath> id rather not untill i report the bug offisaly. dont want anyone stealing my bug lol
07:25 < bridge> <ryozuki> oh ok xD
07:25 < bridge> <davidlovesmath> ie on github
07:26 < bridge> <davidlovesmath> also given its a oob write i might or might not disclose it privately with the staff in #‚úâ-create-a-ticket
07:26 < bridge> <ryozuki> https://github.com/ddnet/ddnet/security/advisories?state=Triage
07:26 < bridge> <ryozuki> can u see this?
07:26 < bridge> <davidlovesmath> as id rather not have 10 servers that hack you as soon as you join it lol
07:26 < bridge> <ryozuki> i enabled private security reports
07:26 < bridge> <ryozuki> so u can send it there when u find it
07:26 < bridge> <davidlovesmath> ok
07:26 < bridge> <davidlovesmath> well i found it im just looking for the cause
07:28 < bridge> <ryozuki> ok, back to making my codegen intermediate layer for compilers
08:03 < bridge> <Ewan> i love this response tbh
08:06 < bridge> <Ewan> sounds cool
08:06 < bridge> <Ewan> how is your lang going
08:06 < bridge> <Ewan> either one ig lol
08:37 < bridge> <ryozuki> this one is not a lang
08:37 < bridge> <ryozuki> but a tool to build langs in rust easier
08:37 < bridge> <ryozuki> like some kind of layer before llvm
08:37 < bridge> <ryozuki> i call it IRVM
08:37 < bridge> <ryozuki> the lang im making, im implementing enums rn
08:37 < bridge> <ryozuki> but enums like rust
08:56 < bridge> <TsPiggy> I should get out of bed
10:21 < bridge> <protocolhttps> how to change font in text render? if possible only for one text(not for full game)
11:33 < bridge> <ryozuki> ```rust
11:33 < bridge> <ryozuki> let mut module = Module::new("example");
11:33 < bridge> <ryozuki> 
11:33 < bridge> <ryozuki> let mut func = Function::new("main", &[Parameter::new(Type::Int(32))], Type::Int(32));
11:33 < bridge> <ryozuki> 
11:34 < bridge> <ryozuki> let param = func.param(0)?;
11:34 < bridge> <ryozuki> let entry_block = func.entry_block;
11:34 < bridge> <ryozuki> 
11:34 < bridge> <ryozuki> let value = func.blocks[entry_block].instr_add(&param, &Operand::const_i32(4))?;
11:34 < bridge> <ryozuki> 
11:34 < bridge> <ryozuki> let then_block = func.add_block(&[]);
11:34 < bridge> <ryozuki> let else_block = func.add_block(&[]);
11:34 < bridge> <ryozuki> let final_block = func.add_block(&[Type::Int(32)]);
11:34 < bridge> <ryozuki> 
11:34 < bridge> <ryozuki> let cond = func.blocks[entry_block].instr_icmp(
11:34 < bridge> <ryozuki>     IcmpCond::Eq,
11:34 < bridge> <ryozuki>     value.clone(),
11:34 < bridge> <ryozuki>     Operand::const_i32(6),
11:34 < bridge> <ryozuki> )?;
11:34 < bridge> <ryozuki> 
11:34 < bridge> <ryozuki> func.blocks[entry_block].instr_cond_jmp(then_block, else_block, &cond, &[], &[]);
11:34 < bridge> <ryozuki> 
11:34 < bridge> <ryozuki> {
11:34 < bridge> <ryozuki>     let value = func.blocks[then_block].instr_add(&value, &Operand::const_i32(2))?;
11:34 < bridge> <ryozuki>     func.blocks[then_block].instr_jmp(final_block, &[value]);
11:34 < bridge> <ryozuki> }
11:34 < bridge> <ryozuki> 
11:34 < bridge> <ryozuki> {
11:34 < bridge> <ryozuki>     let value = func.blocks[else_block].instr_add(&value, &Operand::const_i32(6))?;
11:34 < bridge> <ryozuki>     func.blocks[else_block].instr_jmp(final_block, &[value]);
11:34 < bridge> <ryozuki> }
11:34 < bridge> <ryozuki> the block arguments are to handle PHI nodes in SSA automagically
11:34 < bridge> <ryozuki> i do it internally in the lowering :poggers2:
11:35 < bridge> <ryozuki> like MLIR
11:35 < bridge> <ryozuki> ```rust
11:35 < bridge> <ryozuki>  let preds = ctx.func.find_preds_for(block_idx);
11:35 < bridge> <ryozuki>         let mut block_args = Vec::new();
11:35 < bridge> <ryozuki> 
11:35 < bridge> <ryozuki>         if !preds.is_empty() {
11:35 < bridge> <ryozuki>             let operand_len = preds.first().unwrap().1.len();
11:35 < bridge> <ryozuki> 
11:35 < bridge> <ryozuki>             for i in 0..(operand_len) {
11:35 < bridge> <ryozuki>                 let phy_ty = lower_type(ctx.ctx, preds.first().unwrap().1[i].get_type());
11:35 < bridge> <ryozuki>                 let phi_node = core::LLVMBuildPhi(ctx.builder, phy_ty, c"".as_ptr());
11:35 < bridge> <ryozuki>                 let mut blocks = Vec::new();
11:35 < bridge> <ryozuki>                 let mut values = Vec::new();
11:35 < bridge> <ryozuki>                 for (pred_block_idx, operands) in &preds {
11:35 < bridge> <ryozuki>                     let value = lower_operand(ctx, &operands[i]);
11:35 < bridge> <ryozuki>                     let pred_ptr = ctx.blocks.get(&pred_block_idx.to_idx()).unwrap();
11:35 < bridge> <ryozuki> 
11:35 < bridge> <ryozuki>                     blocks.push(*pred_ptr);
11:35 < bridge> <ryozuki>                     values.push(value);
11:35 < bridge> <ryozuki>                 }
11:36 < bridge> <ryozuki> 
11:36 < bridge> <ryozuki>                 assert_eq!(values.len(), values.len());
11:36 < bridge> <ryozuki> 
11:36 < bridge> <ryozuki>                 core::LLVMAddIncoming(
11:36 < bridge> <ryozuki>                     phi_node,
11:36 < bridge> <ryozuki>                     values.as_mut_ptr().cast(),
11:36 < bridge> <ryozuki>                     blocks.as_mut_ptr().cast(),
11:36 < bridge> <ryozuki>                     blocks.len() as u32,
11:36 < bridge> <ryozuki>                 );
11:36 < bridge> <ryozuki>                 block_args.push(phi_node);
11:36 < bridge> <ryozuki>             }
11:36 < bridge> <ryozuki>         }
11:38 < bridge> <ryozuki> actually found a bug the else doesnt do anything xd
11:40 < bridge> <ryozuki> ```llvm
11:40 < bridge> <ryozuki> ; ModuleID = 'example'
11:40 < bridge> <ryozuki> source_filename = "example"
11:40 < bridge> <ryozuki> 
11:40 < bridge> <ryozuki> define i32 @main(i32 %0) {
11:40 < bridge> <ryozuki> entry:
11:40 < bridge> <ryozuki>   %1 = add i32 %0, 4
11:40 < bridge> <ryozuki>   %2 = icmp eq i32 %1, 6
11:40 < bridge> <ryozuki>   br i1 %2, label %bb0_true_1, label %bb0_false_2
11:40 < bridge> <ryozuki> 
11:40 < bridge> <ryozuki> bb0_true_1:                                       ; preds = %entry
11:40 < bridge> <ryozuki>   %3 = add i32 %1, 2
11:40 < bridge> <ryozuki>   br label %bbbr
11:40 < bridge> <ryozuki> 
11:40 < bridge> <ryozuki> bb0_false_2:                                      ; preds = %entry
11:40 < bridge> <ryozuki>   %4 = add i32 %3, 6
11:40 < bridge> <ryozuki>   br label %bbbr
11:40 < bridge> <ryozuki> 
11:40 < bridge> <ryozuki> bbbr:                                             ; preds = %bb0_false_2, %bb0_true_1
11:40 < bridge> <ryozuki>   %5 = phi i32 [ %3, %bb0_true_1 ], [ %3, %bb0_false_2 ]
11:40 < bridge> <ryozuki>   ret i32 %5
11:40 < bridge> <ryozuki>   ret i32 %5
11:40 < bridge> <ryozuki> }
11:40 < bridge> <ryozuki> ```
11:40 < bridge> <ryozuki> easy fix
11:40 < bridge> <ryozuki> ```llvm
11:40 < bridge> <ryozuki> ; ModuleID = 'example'
11:40 < bridge> <ryozuki> source_filename = "example"
11:41 < bridge> <ryozuki> 
11:41 < bridge> <ryozuki> define i32 @main(i32 %0) {
11:41 < bridge> <ryozuki> entry:
11:41 < bridge> <ryozuki>   %1 = add i32 %0, 4
11:41 < bridge> <ryozuki>   %2 = icmp eq i32 %1, 6
11:41 < bridge> <ryozuki>   br i1 %2, label %bb0_true_1, label %bb0_false_2
11:41 < bridge> <ryozuki> 
11:41 < bridge> <ryozuki> bb0_true_1:                                       ; preds = %entry
11:41 < bridge> <ryozuki>   %3 = add i32 %1, 2
11:41 < bridge> <ryozuki>   br label %bbbr
11:41 < bridge> <ryozuki> 
11:41 < bridge> <ryozuki> or not xD
11:41 < bridge> <Ewan> lovely
11:55 < bridge> <robyt3> `dbg_assert`s are always enabled
11:58 < bridge> <milkeeycat> epyc
13:05 < bridge> <kollpotato> what's the difference between irvm and inkwell?
13:08 < bridge> <ryozuki> @kollpotato inkwell api sucks and it segfaults on a invalid gep, which is why its marked unsafe
13:09 < bridge> <ryozuki> i detach completly the ir and ir builder from llvm and provide lowering backends like llvm it
13:09 < bridge> <ryozuki> but the lowering is like a atomic unit so its way easier to deal with ffi ownership and lifetimes
13:09 < bridge> <ryozuki> and i can lower to other backends like qbe
13:10 < bridge> <ryozuki> my goal is to make a rly nice api
13:31 < bridge> <Assa> @jupeyy_keks if we don't know, who renders a map, why do tune layer numbers appear in the editor and not ingame (with entities enabled) (without tilebuffer)? I am wondering if this is deliberately or a bug.
13:32 < bridge> <Jupstar ‚ú™> I dunno, I assume it simply never was implemented
13:36 < bridge> <Assa> can I turn on the tilebuffer for ingame rendering?
13:37 < bridge> <Jupstar ‚ú™> you can, there is overlay count which is set per physics layer
13:37 < bridge> <Jupstar ‚ú™> and probably left out for tunes
13:38 < bridge> <Assa> can you tell me how, I just want to check üôà
13:38 < bridge> <Jupstar ‚ú™> maplayers.cpp
13:38 < bridge> <Jupstar ‚ú™> see how tele layer is made or smth
13:39 < bridge> <Assa> yes I understand, that the tune layer is missing the overlay. I am just wondering, if I can turn on different behavior ingame. You said yesterday it was backend dependend, but not matter what backend I choose I still don't have tilebuffering enabled
13:40 < bridge> <Assa> Otherwise Editor is alsways tielbuffered and ingame is not, making it possible to do options for different cases
13:40 < bridge> <Jupstar ‚ú™> it's simply not implemented for tune layers
13:40 < bridge> <Jupstar ‚ú™> editor is never buffered
13:44 < bridge> <Assa> uh yes I mean the other way around: Ingame is always tilebuffered and editor is never, is that true?
13:44 < bridge> <Jupstar ‚ú™> ingame is buffered if the backend supports it
13:44 < bridge> <Jupstar ‚ú™> else it falls back to the same rendering as editor
13:45 < bridge> <Assa> Back to my question, how do I disable tilebuffering ingame?
13:45 < bridge> <Jupstar ‚ú™> use opengl 1
13:45 < bridge> <Assa> I already did this, and the tune numbers are also not rendered, so that can't be it. Do you understand what I mean?
13:46 < bridge> <Jupstar ‚ú™> I already told you tune numbers were simply never implemented xD
13:46 < bridge> <Assa> they are in the editor? Whats the difference if they are rendering the same????
13:47 < bridge> <Jupstar ‚ú™> all numbers in phy layers are a extra draw call
13:47 < bridge> <Jupstar ‚ú™> has nothing todo with the layer itself
14:08 < bridge> <Assa> [Here](<https://github.com/AssassinTee/ddnet/blob/33ae91335044b95bf28d9b753e6c8a20baa04eeb/src/game/editor/mapitems/layer_tiles.cpp#L171>) is the only call on RenderTuneOverlay, which means, that this functions get called by the editor sperately for physics layers
14:08 < bridge> <Assa> Thank you
15:37 < bridge> <protocolhttps> how to change font in text render? if possible only for one text(not for full game)
15:41 < bridge> <Solly> https://cdn.discordapp.com/attachments/293493549758939136/1344680783222280304/image.png?ex=67c1cb11&is=67c07991&hm=baa29cb0dc2d35b7dd408f327174c4b315597005ff7357e6b07c1652d7a69acd&
15:41 < bridge> <Solly> average cpp error
15:41 < bridge> <ryozuki> kek
15:42 < bridge> <Solly> ```cpp
15:42 < bridge> <Solly>         TextRender()->SetFontPreset(EFontPreset::ICON_FONT);
15:42 < bridge> <Solly>         // create text container, or just draw text
15:42 < bridge> <Solly>         TextRender()->SetFontPreset(EFontPreset::DEFAULT_FONT);
15:42 < bridge> <Solly> ```
15:48 < bridge> <Solly> darn chatgpt doesnt let u make it shut up when it goes on a wrong tangent
15:48 < bridge> <Solly> https://cdn.discordapp.com/attachments/293493549758939136/1344682604179361946/image.png?ex=67c1ccc3&is=67c07b43&hm=75514b25b9e1a7e81a61cb38f767bed1a8ada95687ef12717351252af87a3417&
15:48 < bridge> <robyt3> I assume the tune numbers are not really useful to see ingame. You'd just have a bunch of numbers everywhere for the whole tune zone without any explanation what they mean unless you look in the editor or in debug HUD to figure out the settings of each tune zone. See #6134 which is about displaying the actual tune settings for tune zones.
15:48 < bridge> <DDNet> https://github.com/ddnet/ddnet/issues/6134
16:07 < bridge> <protocolhttps> how can i add custom font? i added to /fonts and to index.json
16:26 < bridge> <Solly> ah im not sure, if you just want to be able to change font globally tclient does that
16:26 < bridge> <Solly> look for references to EFontPreset::ICON_FONT maybe you can add it there
16:58 < bridge> <Assa> I see that as well and I agree, that they'd be useless
16:59 < bridge> <Assa> I also have the opinion, that the switch numbers are useless
16:59 < bridge> <Assa> I don't even know what they do
16:59 < bridge> <Assa> (ingame)
17:01 < bridge> <Assa> When i am working on the speedtile color shader, maybe we could do a tune shader as well, but not with a gradient, so that different tune zones have different colors
17:01 < bridge> <Assa> but one after the other, I am already working on too many things üòÑ
17:09 < bridge> <chairn> more like link error given it's only .o files
17:13 < bridge> <Assa> @kebscs I managed to decouple text_entities for ingame and editor fully ü•≥ Thank you @jupeyy_keks for leading me to the right place, the rendering logic is partly a bit tideous
17:14 < bridge> <Jupstar ‚ú™> partly? it sucks xDD
17:14 < bridge> <Assa> I just didn't want to shit too much on it xD
17:15 < bridge> <learath2> It's a decade old spaghetti
17:15 < bridge> <Assa> still better, then the old speedtile code üò†
17:16 < bridge> <learath2> The old tile code in general is extremely sad
17:18 < bridge> <zerolacqua> can anyone look into #9762, i think its a bug
17:18 < bridge> <DDNet> https://github.com/ddnet/ddnet/issues/9762
17:29 < bridge> <Assa> since I am working on activating/deactivating this for each physics type anyway, should we may add it and make it off by default? Maybe interesting for debugging mappers
17:34 < bridge> <Assa> I think this is out of scope, I would have to change code I am not yet understanding, wtf is TileLayerCounter
17:35 < bridge> <Jupstar ‚ú™> It counts tile layers
17:35 < bridge> <Assa> hmm wait
17:41 < bridge> <Assa> so for tune we would need to
17:41 < bridge> <Assa> - add a new layer
17:41 < bridge> <Assa> - make sure to offset the old layer by -1
17:41 < bridge> <Assa> - add logic to set Index for RenderTileLayer to the tune zone ID
17:41 < bridge> <Assa> - hope that render magic does it's thing
17:41 < bridge> <Assa> Gotcha
17:41 < bridge> <Assa> so for tune we would need to
17:41 < bridge> <Assa> - add a ~~new layer~~ TileLayerCounter
17:41 < bridge> <Assa> - make sure to offset the old layer by -1
17:41 < bridge> <Assa> - add logic to set Index for RenderTileLayer to the tune zone ID
17:41 < bridge> <Assa> - hope that render magic does it's thing
17:41 < bridge> <Assa> Gotcha
18:10 < bridge> <Solly> oh yeah mb
18:54 < bridge> <ryozuki> https://en.wikipedia.org/wiki/Heisenbug
18:54 < bridge> <ryozuki> who doesnt love these?
18:57 < bridge> <ryozuki> https://en.wikipedia.org/wiki/Single-event_upset
18:58 < bridge> <Assa> Worst thing I ever had to debug was a heisenbug occuring on different thread timings if the order of operations was a bit scuffed ...
19:20 < bridge> <Assa> can sb. help me with #9767 ?
19:20 < bridge> <Assa> The tune layer renders arrows, because I am probably missing a TextureSet or something similar somewhere. This works in editor, which means that the error must be somewhere here: <https://github.com/ddnet/ddnet/pull/9767/files#diff-3139c99b7ed3b99518d6b597a2652b49938ec31306d96dbe8e92bba913d4da2aR1810> But I don't see what's wrong. I use GetOverlayCenter like teleporters do
19:20 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/9767
19:22 < bridge> <robyt3> This adds `OVERLAYRENDERFLAG_TEXT` but it's never passed as an argument
19:23 < bridge> <Assa> OVERLAYRENDERFLAG_TEXT maybe should be a bool
19:24 < bridge> <Assa> I call the function with it, it's just  `g_Config.m_ClTextEntitiesTune` which is either 0 or 1
19:24 < bridge> <Assa> I am talking about the bottom part btw, where I use RenderTileLayer
19:42 < bridge> <Assa> with opengl 1.0 this works btw
19:42 < bridge> <Assa> with opengl 1.0 this works btw (like in the editor because tile buffering)
19:48 < bridge> <robyt3> That should at least mean you only have to look at branches where `IsTileBufferingEnabled()` return true
19:49 < bridge> <Assa> Which is the branch that calls RenderTileLayer for everything
19:52 < bridge> <Assa> I always get the arrows in the tune layer, no matter what I configure with ClTextEntities*
20:17 < bridge> <Assa> I found out, that I can reproduce this bug only on one map, which I probably destroyed üò¶
20:19 < bridge> <teero777> "kein backup kein mitleid" xddd
20:19 < bridge> <Assa> backups existieren
20:20 < bridge> <teero777> nice
20:27 < bridge> <Assa> I don't get it I completly destroyed the rendering
20:28 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1344752965373788221/screenshot_2025-02-27_20-27-41.png?ex=67c20e4b&is=67c0bccb&hm=d14762118b1bfd49ff3986257056c565f52b08440bf263132225d47ed57af736&
20:59 < bridge> <Assa> asking for a review of #9763 (speedboost limiting)
20:59 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/9763
21:02 < bridge> <teero777> Btw if you place too many old speeders they disappear
21:04 < bridge> <teero777> @essigautomat this also affects the y velocity even tho that is not affected by the ramp right?
21:05 < bridge> <Assa> yes
21:11 < bridge> <learath2> I'm a little unconvinced this should be a tune, could you justify why you think that should be the case?
21:12 < bridge> <learath2> Do you think there is some other creative use this could be used for?
21:12 < bridge> <Solly> should it be possible to have only your own namepalte shown
21:12 < bridge> <learath2> Do you think there is some other creative use for this tune?
21:12 < bridge> <Solly> doing this is very easy with bitwise magic, not so if i have to exclude "own"
21:12 < bridge> <Solly> https://cdn.discordapp.com/attachments/293493549758939136/1344764122360975442/image.png?ex=67c218af&is=67c0c72f&hm=655f50d0ad599a18b47fe76c9d63df36edd8296a1bc876ddd820c3a2e52313d8&
21:12 < bridge> <teero777> ah right why should this be specific to speed boosts and not a global speed limit?
21:13 < bridge> <Assa> I don't understand the question. Adding a global speed limit would be breaking probably all maps
21:13 < bridge> <teero777> The tune
21:14 < bridge> <learath2> I can also put these in a comment, I just asked here since you are online and there might be something I'm missing that you can clarify quickly
21:14 < bridge> <Assa> because this value depends on velramp, why should this be NOT a tune?
21:14 < bridge> <Assa> do you want this to be a constexpr instead?
21:16 < bridge> <learath2> Well there is a single correct value for this at any given combination of velramp values. Unless you think there are other uses for it, it probably should be calculated
21:17 < bridge> <Assa> This is a very good question. If you find a good form to calculate it immediately go ahead
21:17 < bridge> <teero777> I would make it only active for the x velocity and make it a toggle. It should auto calculate the correct max speed
21:17 < bridge> <Assa> (as you have seen on github) here is the formula https://www.wolframalpha.com/input?i=maximize+y+%3D+%281+%2F+1.4%5E%28%28x+*+50+-+550%29+%2F+2000%29%29+*+x
21:18 < bridge> <Assa> where 1.4 is velramp curvature, 50 is tickspeed, 550 is velramp start and 2000 is that other velramp value
21:19 < bridge> <learath2> Well it should be trivial, no? The first derivative is trivial to find roots for
21:20 < bridge> <learath2> It should be x = 2000/(50 log(1.4))
21:21 < bridge> <learath2> So `x = othervelrampvalue/(tick_speed * log(curvature))
21:21 < bridge> <Assa> to be nitpicky, log2 üòõ
21:21 < bridge> <learath2> So `x = othervelrampvalue/(tick_speed * log(curvature))`
21:21 < bridge> <learath2> No, natural log, loge
21:21 < bridge> <Assa> okay, I'll update the code and remove the tuning value
21:21 < bridge> <Assa> to be nitpicky, ln üòõ
21:22 < bridge> <learath2> I think that's better if there is no use for it otherwise
21:22 < bridge> <Assa> the other use for it is to turn it off
21:23 < bridge> <Assa> I know it's debatable if we want that or not, since we have that functionality with the old speedtiles (unlimited uncapped)
21:23 < bridge> <learath2> There is one concern I guess, you'll need to make sure you recalculate it everywhere a velramp tune change happens
21:23 < bridge> <Assa> yes, you'd need to recalulate it on every tick
21:23 < bridge> <Assa> yes, you'd need to recalculate it on every tick
21:23 < bridge> <learath2> on every tick? really?
21:24 < bridge> <learath2> othervelrampvalue, tick_speed and curvature don't change every tick, do they?
21:25 < bridge> <Assa> usually not, they change when you change the tune zone or an admin enters a tune command
21:26 < bridge> <Assa> you see where this is going?
21:27 < bridge> <learath2> So I'd expect it to be recalculated when one of those things happen
21:28 < bridge> <Assa> is that calculation really that expensive, because it's just one line. For other things we would need to add way more logic
21:29 < bridge> <learath2> To be fair good point, I actually don't know, just do it every tick see if there is perceptible performance degradation
21:30 < bridge> <learath2> I imagine `std::log` isn't too optimized, but we can replace that with some approximate log if needed, a taylor series approximation should be pretty accurate and cheap if needed
21:30 < bridge> <learath2> We don't need it extremely precise anyway
21:31 < bridge> <Assa> this can probably be branch optimized as well by the cpu, and if you compare the new speedtile code with the old one, don't complain about complexity or performance xDDD
21:31 < bridge> <learath2> I'm fairly sure it's not cheap enough to do per speedtile though
21:31 < bridge> <teero777> bre this is going to be called once per tick per player right?
21:32 < bridge> <teero777> Compared to all the other shit in the DDNet codebase that is allowed this doesn't take any performance xdd
21:32 < bridge> <learath2> Yeah, I'd imagine so, probably still fine and if it shows up in a profile an approximation is a way to optimize it out
21:32 < bridge> <teero777> Have you ever looked at any of the collision functions?
21:32 < bridge> <teero777> This won't even show up on any profiler...
21:33 < bridge> <Assa> in python i could just add a `@cached` for lookup xD
21:33 < bridge> <Assa> would still be slower, becaue python
21:33 < bridge> <Assa> would still be slower, because python
21:35 < bridge> <learath2> Honestly if `std::log` is more optimized than I think, a cache-miss would instantly make it slower, so caching is not the best idea
21:38 < bridge> <Assa> also what do we do if we play with values and get a negative log or devide by 0?
21:39 < bridge> <learath2> Can you even set the curvature negative for the velramp?
21:40 < bridge> <Assa> curvature just needs to be 1, because log(1) = 0? (Can't remember if this is true for ln)
21:40 < bridge> <learath2> divide by zero is only possible with the curvature at 1, but then the velramp becomes just a straight line towards infinity
21:41 < bridge> <learath2> I guess then the max is indeed infinite, idk what even happens when you set these things, does the game still work? üòÑ
21:42 < bridge> <Assa> setting curvature 1.0 would be the perfect fix for ddnet 2
21:42 < bridge> <Assa> setting curvature 1.0 would be the perfect fix for ddnet 2, so we don't need to do this at all
21:42 < bridge> <learath2> With curvature 1 I think there is no drag at all, you just keep going faster and faster as you rocket üòÑ
21:43 < bridge> <learath2> Anyway, I actually don't know what to do with the degenerate cases which happen for `curvature <= 0`
21:44 < bridge> <Assa> Do you think it's own tuning value is maybe a bit better in this case? üòÑ
21:45 < bridge> <teero777> no just clamp it? xd
21:46 < bridge> <learath2> curvature <= 1 actually, the values between 0 and 1 are also funky, you get exponentially faster as you go faster
21:46 < bridge> <Assa> xDDD
21:46 < bridge> <Assa> I think clamping is a good option
21:47 < bridge> <learath2> Yeah, I'd say find a minimum that is still sane and don't allow anything below it
21:47 < bridge> <learath2> like 1.1 or sth a little closer to 1
21:48 < bridge> <Assa> what if tickspeed is 0? /s
21:48 < bridge> <learath2> Oh I guess you could just clamp it for this calculation only, that'd only add an arbitrary limit to the speed tiles operating at extremely bizarre curvature values
21:56 < bridge> <teero777> The function won't be called then.
22:27 < bridge> <chairn> you don't need that, log2 is really easy to compute and then just a multiplication
22:28 < bridge> <Assa> interesting that velramp start doesn't matter at all
22:29 < bridge> <Assa> should be probably max( formula above, velramp_start / 50)
22:34 < bridge> <Assa> @learath2 @teero777 this would be my next code for this:
22:34 < bridge> <Assa> ```
22:34 < bridge> <Assa>                 float MaxRampSpeed = GetTuning(m_TuneZone)->m_VelrampRange/(50 * log(maximum(GetTuning(m_TuneZone)->m_VelrampCurvature, 1.01f)));
22:34 < bridge> <Assa>                 MaxSpeed = maximum(MaxRampSpeed, GetTuning(m_TuneZone)->m_VelrampStart / 50) * MaxSpeedScale;
22:34 < bridge> <Assa> ```
22:37 < bridge> <davidlovesmath> ok good that means thats safe.
22:57 < bridge> <learath2> Probably, I wouldn't really assert it without benching but sounds reasonable
