00:18 < bridge> <ryozuki> @jupeyy_keks https://github.com/PCSX2/pcsx2/pull/10179
00:18 < bridge> <ryozuki> > Disables Wayland, it's super broken/buggy in basically every scenario. KDE isn't too buggy, GNOME is a complete disaster.
00:18 < bridge> <ryozuki> > 
00:18 < bridge> <ryozuki> >     Stupid obsession with CSD in Gnome => inconsistency
00:18 < bridge> <ryozuki> >     Inability to position windows => window position saving doesn't work, log window attaching (not merged yet) doesn't work
00:18 < bridge> <ryozuki> >     Hacks in render-to-main because WL craps itself otherwise
00:18 < bridge> <ryozuki> >     Despite said hacks, game list still glitches after stopping emulation, happens more often in gnome
00:19 < bridge> <ryozuki> >     NVIDIA just crashes in swap chain creation under Wayland
00:19 < bridge> <ryozuki> >     Broken global menus
00:19 < bridge> <ryozuki> >     and many others
00:19 < bridge> <ryozuki> > 
00:19 < bridge> <ryozuki> > Until they sort their s**t out, which is unlikely, since there's been very little progress over the last decade, just keep it disabled. For the Flatpaks, users can re-enable it with flatseal if they really want the crappy experience.
00:19 < bridge> <ryozuki> lmao
00:21 < bridge> <ryozuki> > Quoting @stenzek
00:21 < bridge> <ryozuki> > 
00:21 < bridge> <ryozuki> > > But Wayland is just broken, and everyone would rather sit around arguing with each other instead of actually addressing the design flaws.
00:21 < bridge> <ryozuki> > 
00:21 < bridge> <ryozuki> > > It's not the first time such a proposal has been put forward. Something that developers need for their applications to work properly on WL (particularly multi-window applications), and it gets vetoed. Every other OS manages this fine. But apparently we're in the wrong for not conforming to some warped view of how applications should be, despite our applications working fine on every other platform.
00:21 < bridge> <ryozuki> > 
00:21 < bridge> <ryozuki> > This is so damn true. Wayland lacks a Linus-style BDFL saying that the kern... the compositor is for applications, and not the other way around. We won't have nice things until Wayland maintainers stop thinking about what their end users must or must not do, and start closing feature gaps with X and compositors/window managers on other OSes. Right now they're reinventing the wheel while making it square.
00:28 < bridge> <Jupstar ✪> When I have to scroll to see the ping,i know it was ryo xddd
00:28 < bridge> <Jupstar ✪> Xdd for every broken no joke
00:29 < bridge> <ryozuki> xd
00:30 < bridge> <Mr.Gh0s7> is wayland that bad?
00:31 < bridge> <Jupstar ✪> Under kde it's quite ok. But for some reason there are driver bugs extremely often when i try it out
00:32 < bridge> <Jupstar ✪> And it's faster than x11
00:32 < bridge> <Jupstar ✪> That's ofc argument for me :brownbear:
00:38 < bridge> <Jupstar ✪> But it's true they always take like twenty years to implement stuff. And the maintainers are pretty based. Tearing took like two years until it was merged and then another year to be merged into the graphics drivers
08:11 < bridge> <Ewan> gm
08:11 < bridge> <Ewan> maybe
08:11 < bridge> <Ewan> for early birds
09:14 < bridge> <teero777> Hewo
09:15 < bridge> <Ewan> wawa
09:38 < bridge> <ryozuki> morning
09:43 < bridge> <Ewan> morning
11:23 < bridge> <Ewan> dashcam expensive
11:23 < bridge> <Ewan> grug
11:52 < bridge> <ryozuki> hi
11:52 < bridge> <ryozuki> https://edgarluque.com/blog/mlir-with-rust/
11:52 < bridge> <ryozuki> new blog post
13:48 < bridge> <ryozuki> @learath2 rust does the abs with the asm i told u
13:48 < bridge> <ryozuki> https://godbolt.org/z/cTr57beWx
13:51 < bridge> <learath2> I think that's how llvm has it in general
13:52 < bridge> <learath2> Gcc with generic x86 or amd generates it that way too
13:52 < bridge> <learath2> Only for intel does gcc fall back to xor-sub for some reason
13:53 < bridge> <ryozuki> they use cmovs
13:53 < bridge> <ryozuki> i used cmovl
13:53 < bridge> <ryozuki> but i guess both work
13:53 < bridge> <ryozuki> maybe cmovs is cheaper
13:54 < bridge> <ryozuki> @learath2 what u up to btw
13:54 < bridge> <ryozuki> u looking for a job
13:54 < bridge> <ryozuki> ?
14:07 < bridge> <learath2> I'm relearning how to code, after which I plan to apply to stuff yeah
14:08 < bridge> <learath2> 2 years of only stupid engineering classes has taken a toll on my ability to code
14:11 < bridge> <ryozuki> rly?
14:11 < bridge> <ryozuki> so its true universities dont produce good coders
14:12 < bridge> <ryozuki> but why learn python
14:12 < bridge> <ryozuki> u looking for a easy python job?
14:13 < bridge> <chairn> depends what you look for
14:13 < bridge> <learath2> It's an insurance policy of sorts. See I need to practice my algorithms a bit, if I do it in Python I also will have a language with much broader job opportunities. Just in case I don't find something in a language I actually like
14:13 < bridge> <ryozuki> i rly doubt u lost programming skills
14:13 < bridge> <ryozuki> maybe u just need to refresh some syntax from x languages
14:14 < bridge> <chairn> it's a good scripting tool 🙂
14:14 < bridge> <learath2> It also depends on how you study. If you are a responsible student you'll have time to keep up with your coding too
14:14 < bridge> <ryozuki> what i mean is
14:14 < bridge> <ryozuki> university doesnt teach u how to "master" coding, as in what we do here, programming a game
14:14 < bridge> <ryozuki> they focus on theorics
14:14 < bridge> <ryozuki> so u need to do this by urself
14:15 < bridge> <ryozuki> and im sure 80% of students still dont develop autonomy
14:15 < bridge> <ryozuki> to study something out of their own will
14:15 < bridge> <learath2> Well mostly I lost throughput. It's like riding a bike, you don't really completely forget it 😄
14:15 < bridge> <ryozuki> its a rare skill i would say
14:15 < bridge> <ryozuki> self learning
14:15 < bridge> <chairn> though, Learath2 did engineering, not informatics study, so that's why he hadn't the opportunity to code that much
14:16 < bridge> <ryozuki> i still think the same
14:16 < bridge> <ryozuki> no matter the branch
14:16 < bridge> <chairn> but informatics curriculum are a lot about theory, but the language is just a tool
14:16 < bridge> <chairn> so they should be good in most language
14:16 < bridge> <ryozuki> but they tend not to be
14:17 < bridge> <Jupstar ✪> modern universities aren't really that useful anymore anyway
14:17 < bridge> <ryozuki> i think its like being a plane driver, u can know all theory but im sure u will be a noob without practice
14:17 < bridge> <Jupstar ✪> u get ur tasks u have to do
14:17 < bridge> <learath2> If you pick computer engineering instead of science it's even worse. I think the courses I took are more suited for people trying to develop the first iteration of smart munitions for the second world war
14:17 < bridge> <Jupstar ✪> no time for self exploring
14:17 < bridge> <ryozuki> yes that what i mean
14:17 < bridge> <ryozuki> u dont do out of ur own
14:17 < bridge> <learath2> I had a single theoretical computer course
14:18 < bridge> <ryozuki> AND locking u to the language the uni uses
14:18 < bridge> <ryozuki> is ANTI-exploring
14:18 < bridge> <ryozuki> self learning
14:18 < bridge> <ryozuki> etc
14:18 < bridge> <ryozuki> anyway im just a undergrad kek, if thats the correct word
14:18 < bridge> <learath2> The word you are looking for is "pilot" 😄
14:18 < bridge> <Jupstar ✪> i mean it probs depends on the uni. but to me university was like 90% like school
14:18 < bridge> <ryozuki> xd ye i forgot the word
14:18 < bridge> <Jupstar ✪> and that's why i hated it xD
14:18 < bridge> <learath2> Did you even do a bachelors?
14:18 < bridge> <ryozuki> i went to 1 year of uni
14:18 < bridge> <ryozuki> ok im bad with names
14:19 < bridge> <ryozuki> is bachelors the 4 year degree
14:19 < bridge> <ryozuki> then i dont have it
14:19 < bridge> <ryozuki> what does undergrad mean then
14:19 < bridge> <ryozuki> ah it means ur not a doctor?
14:19 < bridge> <ryozuki> xd
14:19 < bridge> <ryozuki> kek
14:19 < bridge> <ryozuki> its just titles after all
14:19 < bridge> <learath2> Undergraduates are bachelors students that haven't gotten their degrees yet
14:20 < bridge> <ryozuki> at no point did school help me improve myself as a programmer
14:20 < bridge> <ryozuki> not even 1st year of uni
14:20 < bridge> <learath2> I think "student" is necessary there
14:20 < bridge> <ryozuki> it was all myself
14:20 < bridge> <ryozuki> but its true i lack stuff in places
14:20 < bridge> <ryozuki> specially theories etc
14:20 < bridge> <ryozuki> its weird cuz i llike reading all about it
14:20 < bridge> <learath2> University successfully made me an objectively worse coder. Thanks university
14:20 < bridge> <Jupstar ✪> yeah, you either fit the system or you'll be unhappy..
14:20 < bridge> <Jupstar ✪> That simple
14:21 < bridge> <ryozuki> but on university i hated everything
14:21 < bridge> <ryozuki> im always sharing stupid wiki articles xd
14:21 < bridge> <Jupstar ✪> time for a super AI
14:21 < bridge> <Jupstar ✪> that helps you to go you own way
14:21 < bridge> <ryozuki> @learath2 did u learn this at uni btw? https://en.wikipedia.org/wiki/ABA_problem
14:21 < bridge> <learath2> Ofc not. That's too complicated
14:21 < bridge> <ryozuki> lol
14:22 < bridge> <learath2> The only thing we learned about multithreading was semaphores and mutexes
14:22 < bridge> <ryozuki> i see
14:22 < bridge> <ryozuki> im glad i didnt do uni
14:22 < bridge> <ryozuki> xd
14:22 < bridge> <chairn> that's why they don't focus on any language
14:22 < bridge> <ryozuki> the projects u do are probs
14:22 < bridge> <ryozuki> and its where u learn to apply what u learnt
14:22 < bridge> <learath2> They won't teach you one but they will usually pick one and use it
14:22 < bridge> <ryozuki> its where u learn most
14:23 < bridge> <Jupstar ✪> i was forced to use the languages my profs wanted
14:23 < bridge> <Jupstar ✪> u could take optional classes for other languages
14:23 < bridge> <ryozuki> no rust  right
14:23 < bridge> <Jupstar ✪> c
14:23 < bridge> <Jupstar ✪> xD
14:23 < bridge> <ryozuki> xd
14:23 < bridge> <ryozuki> i find rust can be a very good educational language
14:23 < bridge> <ryozuki> it makes explaining some stuff easier
14:23 < bridge> <Jupstar ✪> i take anything that isnt java and pyson
14:24 < bridge> <learath2> C is the very best educational language if you intend to make actual software people
14:24 < bridge> <learath2> Python is great if you want to make theory people
14:25 < bridge> <chairn> as a teacher, we have no choice to teach C so that students know what's going on under the hood
14:25 < bridge> <chairn> we also teach some assembly
14:25 < bridge> <ryozuki> i think a good route would be: python (to teach basics like loops) -> C (to learn basic memory management, pointers) -> Rust (to learn from all the errors u made coding in C) -> assembly (to learn the true low level bit,s calling conventions, stack frames, etc)
14:25 < bridge> <chairn> especially regarding memory safety
14:25 < bridge> <chairn> more over, in engineering school, you have to teach what companies require
14:25 < bridge> <learath2> Assembly is practically a must imo if there is any course about architecture
14:25 < bridge> <ryozuki> yeah
14:25 < bridge> <chairn> so we don't have 100% freedom either
14:26 < bridge> <ryozuki> i learnt so much re-learning assembly lately
14:26 < bridge> <Jupstar ✪> imo reverse engineering should be a must have.
14:26 < bridge> <Jupstar ✪> 
14:26 < bridge> <Jupstar ✪> That teaches you how higher level languages implement stuff like vptrs, structures etc.
14:26 < bridge> <learath2> This requirement practically forced several of my courses to use MATLAB
14:26 < bridge> <ryozuki> revverse engineering with debug symbols*
14:27 < bridge> <ryozuki> reverse engineering obfuscated software is a different beast
14:27 < bridge> <ryozuki> its like a detective magician
14:27 < bridge> <learath2> This is imo too niche for an undergraduate course. More a graduate elective imo
14:27 < bridge> <Jupstar ✪> but fun too xd
14:27 < bridge> <chairn> well, matlab is nice for control theory, signal processing and image filtering
14:27 < bridge> <Jupstar ✪> i only want the elite coders
14:27 < bridge> <chairn> not for anything else i think
14:27 < bridge> <ryozuki> same
14:27 < bridge> <ryozuki> i have yet to find someone as motivated as me at work xd
14:27 < bridge> <chairn> without*, put them in real life situation
14:27 < bridge> <chairn> and use ghidra
14:27 < bridge> <learath2> Well what else would you want?
14:28 < bridge> <ryozuki> but he wants to do RE without having learn assembly first
14:28 < bridge> <Jupstar ✪> that sadly only works if you identify with your work
14:28 < bridge> <ryozuki> thats why i said with debug
14:28 < bridge> <ryozuki> to learn assembly from generated code
14:28 < bridge> <chairn> then it's useless?
14:28 < bridge> <Jupstar ✪> i guess most of your coworkers are simply not nerdy enough
14:28 < bridge> <learath2> Even with debug symbols you can't reverse engineer shit if you don't know atleast some assembly
14:28 < bridge> <ryozuki> 99% of coders just code at work
14:28 < bridge> <chairn> i know very few people who look at the assembly generated for their code
14:28 < bridge> <ryozuki> its fun to do!
14:28 < bridge> <ryozuki> godbolt is godsent
14:29 < bridge> <learath2> Ghidra with it's amazing decompiler isn't even close to generating perfect C
14:29 < bridge> <chairn> actually, it's not that hard, the assembly is very human friendly
14:29 < bridge> <chairn> add is self explanatory
14:29 < bridge> <ryozuki> isnt IDA the true state of the art
14:29 < bridge> <ryozuki> but its paid
14:29 < bridge> <Jupstar ✪> 1 year of university should be reimplementing teeworlds
14:29 < bridge> <chairn> not enough time 😄
14:30 < bridge> <ryozuki> teeworlds was the best educational project for me
14:30 < bridge> <chairn> there are other courses too
14:30 < bridge> <learath2> Well compiled code rarely has these very simple instructions. You need to learn patterns to be good at reverse engineering
14:30 < bridge> <Jupstar ✪> i bet with you in 10 years u forgot most stuff u know today xDD
14:30 < bridge> <ryozuki> RE is detective work
14:30 < bridge> <Jupstar ✪> even from your doctor stuff
14:30 < bridge> <ryozuki> i admire any good RE engineer
14:30 < bridge> <ryozuki> i think i may do RE when im older
14:30 < bridge> <ryozuki> xd
14:30 < bridge> <ryozuki> and got more time
14:30 < bridge> <ryozuki> or if a job makes me do it
14:30 < bridge> <chairn> -O3 is undecipherable imo, -O0 for literal translation, so starts with easy level
14:31 < bridge> <ryozuki> -O3 + LTO + BOLT
14:31 < bridge> <chairn> why 10 years, i've already forgotten most of my control theory classes 😄
14:31 < bridge> <ryozuki> ez
14:31 < bridge> <Jupstar ✪> -Ofast -flto
14:31 < bridge> <Jupstar ✪> 
14:31 < bridge> <Jupstar ✪> no grace
14:31 < bridge> <Jupstar ✪> lmao
14:31 < bridge> <learath2> We do some reverse engineering here at ddnet inc. come work with us
14:31 < bridge> <ryozuki> i wish
14:31 < bridge> <ryozuki> when make ddnet company
14:31 < bridge> <chairn> there's a job for that in a french cybersecurity company
14:31 < bridge> <ryozuki> ah u RE bot clients right
14:31 < bridge> <ryozuki> i should do it somewhen
14:31 < bridge> <Jupstar ✪> -Ofast -flto
14:31 < bridge> <Jupstar ✪> 
14:32 < bridge> <Jupstar ✪> no mercy
14:32 < bridge> <ryozuki> i tried to RE final fantasy 14
14:32 < bridge> <ryozuki> actually got a bit out of it
14:32 < bridge> <Jupstar ✪> @chairn u probs already told me, but are you a teacher in school or university, or where exactly?
14:32 < bridge> <chairn> im in an engineering school, but it's part of university
14:32 < bridge> <ryozuki> this reminds me i have to write a blog post about my nasm learnings
14:33 < bridge> <Jupstar ✪> i c
14:33 < bridge> <learath2> If you want to sew how annoying -O3 code can get look at how std::to_chars handles an int. It's absolutely unreadable
14:33 < bridge> <chairn> and i teach, assembly, computer architectures, and chip design
14:33 < bridge> <learath2> see*
14:33 < bridge> <chairn> it's probably badly optimized, no?
14:34 < bridge> <learath2> Iiit's actually not too bad, it far outperforms any naive attempt at it
14:34 < bridge> <learath2> It's absolutely undecipherable assembly though
14:34 < bridge> <ryozuki> did u do arm64 asm? its the same as aarch64 right
14:34 < bridge> <ryozuki> after  i do a bit ox x64 ill learn arm
14:34 < bridge> <ryozuki> after  i do a bit of x64 ill learn arm
14:35 < bridge> <learath2> What flavour of assembly do you teach? 8086?
14:35 < bridge> <chairn> nah, RISC-V 😄
14:35 < bridge> <ryozuki> @chairn https://www.zachtronics.com/exapunks/
14:35 < bridge> <ryozuki> show this game to ur students
14:35 < bridge> <ryozuki> to motivate them about assembly
14:35 < bridge> <chairn> but i could do arm64, x86 or atmel
14:35 < bridge> <ryozuki> :justatest:
14:36 < bridge> <learath2> If I were teaching a beginners class in assembly I probably would go for something like 6502
14:36 < bridge> <ryozuki> 8bit
14:36 < bridge> <learath2> Nice and simple, good old days
14:36 < bridge> <learath2> No pipelining, no weird cache coherency mess
14:36 < bridge> <chairn> assembly is lab work part of computer architecture class
14:37 < bridge> <ryozuki> do u use a white coat when programming assembly in the lab?
14:37 < bridge> <ryozuki> sry i just find it too funny
14:37 < bridge> <ryozuki> :owo:
14:37 < bridge> <learath2> And an amazing platform to teach computer architecture on IMO
14:38 < bridge> <learath2> Risc-v also sounds like a good idea though
14:38 < bridge> <ryozuki> is risc-v 64bit?
14:38 < bridge> <ryozuki> it touted having a simple arch right
14:38 < bridge> <ryozuki> isa
14:38 < bridge> <ryozuki> *
14:38 < bridge> <ryozuki> language
14:38 < bridge> <ryozuki> whathever
14:38 < bridge> <ryozuki> idk the word
14:39 < bridge> <learath2> RiscV iirc doesn't mandate any size of the address bus
14:39 < bridge> <ryozuki> im always confused cuz in nasm a quad word is 64bit
14:39 < bridge> <ryozuki> but in risc-v its 128?
14:39 < bridge> <ryozuki> i guess its cuz x86 has 8bit "words"
14:39 < bridge> <ryozuki> x64*
14:39 < bridge> <learath2> I remember there is even 128bit variants of riscv but chairn would know better
14:39 < bridge> <ryozuki> oh yeah
14:39 < bridge> <ryozuki> hwo was it named
14:40 < bridge> <ryozuki> CHIRP
14:40 < bridge> <learath2> I only dabbled in riscv to mess around with the ISA
14:40 < bridge> <ryozuki> mentioned in rust pointer provenance
14:40 < bridge> <ryozuki> ok maybe its not chirp?
14:40 < bridge> <ryozuki> i forgot name
14:41 < bridge> <learath2> What are you looking for? 😄
14:41 < bridge> <ryozuki> let me look at my urls
14:42 < bridge> <ryozuki> found it
14:42 < bridge> <ryozuki> its CHERI
14:42 < bridge> <ryozuki> https://www.cl.cam.ac.uk/research/security/ctsrd/cheri/
14:43 < bridge> <ryozuki> >  CHERI is a hybrid capability architecture in that it is able to blend architectural capabilities with conventional MMU-based architectures and microarchitectures, and with conventional software stacks based on virtual memory and C/C++. This approach allows incremental deployment within existing software ecosystems, which we have demonstrated through extensive hardware and software prototyping.
14:43 < bridge> <ryozuki> > 
14:43 < bridge> <ryozuki> > CHERI interacts with the design of the full hardware-software stack. We have developed:
14:43 < bridge> <ryozuki> > 
14:43 < bridge> <ryozuki> >     An abstract CHERI protection model that introduces architectural capabilities, hardware-supported descriptions of permissions that can be used, in place of integer virtual addresses, to refer to data, code, and objects in protected ways;
14:43 < bridge> <ryozuki> >     A set of ISA extensions to 64-bit MIPS, 32-bit RISC-V, 64-bit RISC-V, and (in collaboration with Arm) 64-bit Armv8-A, showing that the model is applicable to a range of contemporary ISA designs.
14:43 < bridge> <ryozuki> >     New microarchitecture demonstrating that capabilities can be implemented efficiently in hardware, including capability compression and tagged memory to protect capabilities in memory; and
14:43 < bridge> <ryozuki> >     Formal models of these ISA extensions enabling mechanised statements and proofs of their security properties, automatic test generation, and automatic construction of executable ISA-level simulators.
14:43 < bridge> <chairn> RISC-V is both 32 and 64 bits
14:43 < bridge> <chairn> risc-v in itself is just the isa, it does not say anything about the implementation
14:43 < bridge> <ryozuki> > We may end up with 128-bit pointers even without a "true" 128-bit architecture. For example, CHERI has 128-bit pointers with 64-bit address space and 64 bits of metadata to crash harder on memory bugs in C and C++:
14:43 < bridge> <learath2> Why no RISC-V for 8 and 16bit?
14:43 < bridge> <chairn> you are free to do whatever you want as long as you respect the isa
14:43 < bridge> <ryozuki> @learath2 cheri has pointer metadata
14:44 < bridge> <learath2> What would one even have in there? Type information?
14:44 < bridge> <chairn> no idea, probably more niche and harder to fit the requirements of the isa
14:44 < bridge> <ryozuki> do u know about pointer provenance
14:44 < bridge> <ryozuki> https://www.ralfj.de/blog/2020/12/14/provenance.html
14:44 < bridge> <avolicious> Hello rust devs in here,
14:44 < bridge> <avolicious> 
14:44 < bridge> <avolicious> just a quick question. I would like to move some parts of our network from golang to rustlang. Is tokio-rs still the state-of-the-art tech?
14:44 < bridge> <ryozuki> https://www.ralfj.de/blog/2018/07/24/pointers-and-bytes.html
14:44 < bridge> <learath2> No, let me see
14:45 < bridge> <ryozuki> > This “extra information” that distinguishes different pointers to the same address is typically called provenance. This post is another attempt to convince you that provenance is “real”, by telling a cautionary tale of what can go wrong when provenance is not considered sufficiently carefully in an optimizing compiler. The post is self-contained; I am not assuming that you have read the first one. There is also a larger message here about
14:45 < bridge> <ryozuki> > just because two pointers point to the same address, does not mean they are equal in the sense that they can be used interchangeably.
14:45 < bridge> <learath2> Ahh, this thing. Yeah I know. I forgor the name
14:45 < bridge> <learath2> It's the same problem `std::launder` solves
14:46 < bridge> <ryozuki> TIL
14:46 < bridge> <learath2> @ryozuki would know better but as far as I know, yes
14:46 < bridge> <ryozuki> yes
14:46 < bridge> <ryozuki> but beware
14:47 < bridge> <ryozuki> with golang u can do half cooperative preemption
14:47 < bridge> <ryozuki> or smth like that
14:47 < bridge> <ryozuki> tokio is fully coop preemptive
14:47 < bridge> <learath2> Async in rust is still a bit, rusty 🥁
14:47 < bridge> <ryozuki> ok i used bad wording
14:47 < bridge> <ryozuki> golang is partially preemptive
14:47 < bridge> <ryozuki> cuz the gc
14:48 < bridge> <ryozuki> anyway unless u need to do weird stuff its fine
14:48 < bridge> <avolicious> Just for our internal networking
14:48 < bridge> <learath2> Huh, why is tokio different in that aspect?
14:48 < bridge> <learath2> Both can only preempt at function calls, no?
14:48 < bridge> <ryozuki> > // A goroutine can be preempted at any safe-point. Currently, there
14:48 < bridge> <ryozuki> > 
14:48 < bridge> <ryozuki> > // are a few categories of safe-points:
14:48 < bridge> <ryozuki> > 
14:48 < bridge> <ryozuki> > //
14:48 < bridge> <ryozuki> > 
14:48 < bridge> <ryozuki> > // 1. A blocked safe-point occurs for the duration that a goroutine is
14:48 < bridge> <ryozuki> > 
14:48 < bridge> <ryozuki> > //    descheduled, blocked on synchronization, or in a system call.
14:49 < bridge> <ryozuki> > 
14:49 < bridge> <ryozuki> > //
14:49 < bridge> <ryozuki> > 
14:49 < bridge> <ryozuki> > // 2. Synchronous safe-points occur when a running goroutine checks
14:49 < bridge> <ryozuki> > 
14:49 < bridge> <ryozuki> > //    for a preemption request.
14:49 < bridge> <ryozuki> > 
14:49 < bridge> <ryozuki> > //
14:49 < bridge> <ryozuki> > 
14:49 < bridge> <ryozuki> > // 3. Asynchronous safe-points occur at any instruction in user code
14:49 < bridge> <ryozuki> > 
14:49 < bridge> <ryozuki> > //    where the goroutine can be safely paused and a conservative
14:49 < bridge> <ryozuki> > 
14:49 < bridge> <ryozuki> > //    stack and register scan can find stack roots. The runtime can
14:49 < bridge> <ryozuki> > 
14:49 < bridge> <ryozuki> > //    stop a goroutine at an async safe-point using a signal.
14:49 < bridge> <ryozuki> i think tokio can only preempty on await points
14:49 < bridge> <ryozuki> i think tokio can only preempt on await points
14:49 < bridge> <learath2> You'll be fine, these are all very small niche things anyway 😄
14:49 < bridge> <ryozuki> yeah xd
14:49 < bridge> <learath2> Ah. That would make sense with how rust implements async
14:49 < bridge> <avolicious> Okay, thanks!
14:49 < bridge> <ryozuki> @avolicious u will be fine, faster, more memory efficient ,and above all, lightning fast and cool
14:50 < bridge> <ryozuki> if u need a http server
14:50 < bridge> <ryozuki> i recommend axum
14:50 < bridge> <ryozuki> if u need to do queries
14:50 < bridge> <ryozuki> sqlx
14:50 < bridge> <learath2> @avolicious how was your experience with go? Is it enjoyable to use?
14:50 < bridge> <ryozuki> go is the modern java, but a bit better
14:50 < bridge> <ryozuki> its SO simple u can learn it in 1 day
14:50 < bridge> <avolicious> Its still in use for gRPC stuff, but I wanted to try out rustlang with gRPC
14:50 < bridge> <ryozuki> its the perfect language for a corporate company drone
14:51 < bridge> <avolicious> We use this library https://gnet.host
14:51 < bridge> <learath2> I'd bet it's much better at concurrency than Java
14:52 < bridge> <ryozuki> probs idk
14:52 < bridge> <ryozuki> modern java is going at fast pace
14:52 < bridge> <ryozuki> but yeah golang is known for good asynnc
14:52 < bridge> <ryozuki> but yeah golang is known for good async
14:52 < bridge> <ryozuki> doesnt protect u from data races tho
14:53 < bridge> <learath2> I don't mean performance btw. I just meant as in usability
14:53 < bridge> <ryozuki> ah yeah
14:53 < bridge> <ryozuki> its built in the language after all
14:53 < bridge> <ryozuki> goroutines
14:53 < bridge> <ryozuki> https://github.com/hyperium/tonic
14:54 < bridge> <avolicious> Yeah, in our case we need some sort of gRPC proxy 😄
14:54 < bridge> <avolicious> Because the teeworlds server is communicating over gRPC with a local endpoint to exchange data
14:54 < bridge> <ryozuki> ```toml
14:54 < bridge> <ryozuki> [profile.release]
14:54 < bridge> <ryozuki> lto = true
14:54 < bridge> <ryozuki> codegen-units = 1
14:54 < bridge> <ryozuki> ```
14:54 < bridge> <ryozuki> add this to ur cargo toml
14:54 < bridge> <ryozuki> when making release binaries
14:54 < bridge> <ryozuki> for max perf
14:55 < bridge> <ryozuki> also
14:55 < bridge> <ryozuki> ```toml
14:55 < bridge> <ryozuki> [target.x86_64-unknown-linux-gnu]
14:55 < bridge> <ryozuki> linker = "clang"
14:55 < bridge> <ryozuki> rustflags = ["-Clink-arg=-fuse-ld=mold"]
14:55 < bridge> <ryozuki> ```
14:55 < bridge> <ryozuki> on .cargo/config.toml if u wanna use mold
14:55 < bridge> <ryozuki> and
14:55 < bridge> <ryozuki> `RUSTFLAGS='-C target-cpu=native'`
14:55 < bridge> <ryozuki> to use native march
14:57 < bridge> <ryozuki> of its for kogh
14:57 < bridge> <ryozuki> i thought it was for ur company
14:57 < bridge> <ryozuki> sadge
14:57 < bridge> <avolicious> Yeah its for KoG
14:58 < bridge> <ryozuki> become a rust monk at ur company
14:58 < bridge> <ryozuki> add it
14:58 < bridge> <ryozuki> :justatest:
14:58 < bridge> <avolicious> No, company builds stuff with PHP 😄
14:58 < bridge> <ryozuki> xD
14:58 < bridge> <avolicious> They wont change
14:58 < bridge> <avolicious> But I would like to showcase them how we did gRPC on KoG
14:58 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1178696388876456046/image.png?ex=6577158e&is=6564a08e&hm=ea4b2928e3b14f0a4740cc73e6c8b362b686cef16ac9ed172bfe112cfb450a64&
14:58 < bridge> <ryozuki> mom im famous
14:59 < bridge> <avolicious> but rustlang tonic looks promising
14:59 < bridge> <ryozuki> https://tokio.rs/blog/2023-11-27-announcing-axum-0-7-0
15:19 < bridge> <ryozuki> is anyone here a lobste.rs user
15:19 < bridge> <ryozuki> can u invite me thanks
15:25 < bridge> <ryozuki> https://www.uiua.org/
16:18 < bridge> <ryozuki> > By the age of eight, von Neumann was familiar with differential and integral calculus, and by twelve he had read and understood Borel's Théorie des Fonctions.
16:18 < bridge> <ryozuki> @learath2 just be like Vonn Neumann!
16:18 < bridge> <ryozuki> :4Head:
16:18 < bridge> <ryozuki> > Von Neumann was reportedly able to memorize the pages of telephone directories. He entertained friends by asking them to randomly call out page numbers; he then recited the names, addresses and numbers therein.
16:22 < bridge> <ryozuki> >  Von Neumann was a child prodigy who at six years old could divide two eight-digit numbers in his head and could converse in Ancient Greek. When the six-year-old von Neumann caught his mother staring aimlessly, he asked her, "What are you calculating?"
16:27 < bridge> <ryozuki> > During this time he became a "superstar" defense scientist at the Pentagon. His authority was considered infallible at the highest levels of the US government and military.
16:27 < bridge> <murpi> @ryozuki try the :huh: emoji
16:27 < bridge> <ryozuki> he was the chaddest of all
16:27 < bridge> <ryozuki> :HUH:
16:27 < bridge> <murpi> from this server
16:27 < bridge> <ryozuki> @murpi this? xD
16:28 < bridge> <Jupstar ✪> :huh:
16:28 < bridge> <ryozuki> <a:huh:1178717973616283758>
16:28 < bridge> <ryozuki> its a bit cropped
16:28 < bridge> <murpi> Yes, sucks
16:28 < bridge> <ryozuki> or is it meant to be like this
16:28 < bridge> <ryozuki> https://tenor.com/view/cat-huh-meme-gif-27557281
16:28 < bridge> <ryozuki> i can hear the sound
16:28 < bridge> <ryozuki> so many instagram stories with this shit
16:29 < bridge> <Jupstar ✪> https://cdn.discordapp.com/emojis/1178717973616283758.webp?size=96&quality=lossless
16:29 < bridge> <Jupstar ✪> lol
16:29 < bridge> <Jupstar ✪> discord nobos
16:29 < bridge> <Jupstar ✪> now i have nitro too
16:29 < bridge> <murpi> Can't find a good one with transparent background and under 254kb filesize
16:30 < bridge> <Jupstar ✪> @murpi create a tee-ish one
16:30 < bridge> <Jupstar ✪> they cooler
16:30 < bridge> <murpi> Have you ever seen a tee turning it's head? 👀
16:30 < bridge> <Jupstar ✪> 3d tee
16:30 < bridge> <Jupstar ✪> xd
16:32 < bridge> <milkeeycat> huh twinbop would be cool asf
16:33 < bridge> <milkeeycat> huh twinbop would be cool asf :justatest:
16:38 < bridge> <Jupstar ✪> where our 3d artists
16:43 < bridge> <ryozuki> @jupeyy_keks impoverished by AI
16:43 < bridge> <ryozuki> @jupeyy_keks i wish we had a rly active game artist
16:43 < bridge> <ryozuki> we got devs so why not artists
16:44 < bridge> <Jupstar ✪> well anything besides devs is hard to get for open source stuff
16:44 < bridge> <ryozuki> but artists arent like devs, they dont like the idea of fully free software but for art
16:44 < bridge> <ryozuki> yeah
16:44 < bridge> <Jupstar ✪> devs future humans
16:44 < bridge> <Jupstar ✪> ok and we paid very well xdd
16:44 < bridge> <ryozuki> xd
16:44 < bridge> <ryozuki> my sister is paid better than me 😬
16:45 < bridge> <Jupstar ✪> xdd
16:46 < bridge> <ryozuki> https://without.boats/blog/poll-next/
16:46 < bridge> <milkeeycat> ask her to draw a twerking twinbop :justatest:
16:46 < bridge> <ryozuki> :justatest:
16:47 < bridge> <ryozuki> she draws anime stuff 😬
16:47 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1178723672962388088/F-w2BNmXEAALLcp.png?ex=65772ef7&is=6564b9f7&hm=78d298ff9e43e4fc03093c3fba0ca2699108a377d585e27d9e2ea8d9037524da&
16:47 < bridge> <Jupstar ✪> her job is probably not the most secure tho. dunno how fast u can loose fame on platforms like patreon.. in 5 years it might be over already
16:47 < bridge> <ryozuki> wow discord compression rly makes everything ugly
16:47 < bridge> <ryozuki> i doubt, she is that good
16:47 < bridge> <ryozuki> she has now 400k twitter followers
16:48 < bridge> <ryozuki> been at it for 4 years i think now
16:48 < bridge> <ryozuki> or more
16:48 < bridge> <Jupstar ✪> i c
16:48 < bridge> <ryozuki> good talent doesnt go stale
16:48 < bridge> <Jupstar ✪> that is true, but i doubt she is more talented than other artists
16:48 < bridge> <Jupstar ✪> she simply is more fame
16:48 < bridge> <ryozuki> idk
16:48 < bridge> <ryozuki> she puts lot of time on this
16:48 < bridge> <ryozuki> probs like 10h a day sometimes
16:49 < bridge> <ryozuki> and i know other artists regard her as rly good
16:49 < bridge> <ryozuki> (other aristy ppl i talked to)
16:49 < bridge> <ryozuki> (other artisty ppl i talked to)
16:49 < bridge> <Jupstar ✪> ok
16:49 < bridge> <Jupstar ✪> but there are probably so many insane OSS devs that aren't fame
16:50 < bridge> <Jupstar ✪> the dark numbers are always higher than u expect
16:50 < bridge> <ryozuki> @jupeyy_keks yes
16:50 < bridge> <ryozuki> but the nice thing about art is
16:50 < bridge> <ryozuki> you always share art
16:50 < bridge> <ryozuki> its visible
16:50 < bridge> <ryozuki> normal ppl can say "its pretty"
16:50 < bridge> <ryozuki> but normal ppl dont understand complexities of software
16:50 < bridge> <ryozuki> devs are doomed to be invisible
16:51 < bridge> <Jupstar ✪> there is so much "stolen" art
16:51 < bridge> <Jupstar ✪> click on any yt video
16:51 < bridge> <ryozuki> unless u are rly pro like carmack
16:51 < bridge> <ryozuki> @jupeyy_keks well yeah but u follow artists on social media
16:51 < bridge> <Jupstar ✪> anyway, i have no doubt she is good
16:51 < bridge> <ryozuki> they post often so u know they are real
16:51 < bridge> <ryozuki> same style etc
16:51 < bridge> <Jupstar ✪> i simply bet there are so many good devs that are not fame
16:51 < bridge> <Jupstar ✪> maybe they work for television
16:51 < bridge> <ryozuki> @jupeyy_keks we, u got 2 ppl here as an example
16:51 < bridge> <ryozuki> you and me
16:51 < bridge> <Jupstar ✪> or for movies
16:51 < bridge> <ryozuki> 😬
16:51 < bridge> <Jupstar ✪> all the disney artists
16:51 < bridge> <Jupstar ✪> name me 10
16:51 < bridge> <Jupstar ✪> xD
16:51 < bridge> <ryozuki> @jupeyy_keks ye, u got 2 ppl here as an example
16:52 < bridge> <ryozuki> v
16:52 < bridge> <ryozuki> 😬
16:52 < bridge> <Jupstar ✪> i simply bet there are so many good artists that are not fame
16:53 < bridge> <Jupstar ✪> 😏
16:53 < bridge> <ryozuki> @jupeyy_keks i can share u in dm
16:53 < bridge> <Jupstar ✪> we'll change the world when the world is ready for us
16:53 < bridge> <ryozuki> if u want
16:53 < bridge> <ryozuki> its +18 tho
16:53 < bridge> <ryozuki> u can judge
16:53 < bridge> <Jupstar ✪> it's ok, i am not into manga porn so much xd
16:54 < bridge> <Jupstar ✪> u can keep it secret
16:54 < bridge> <ryozuki> kek
16:54 < bridge> <ryozuki> mostly americans
16:54 < bridge> <ryozuki> pay
16:54 < bridge> <ryozuki> patreon
16:54 < bridge> <Jupstar ✪> xD
16:54 < bridge> <ryozuki> 😬
16:54 < bridge> <ryozuki> she mostly gets dollar
16:54 < bridge> <Jupstar ✪> the land of dreams
16:55 < bridge> <Jupstar ✪> imagine learath's potential when he overcome his depression
16:57 < bridge> <ryozuki> xd
17:01 < bridge> <Jupstar ✪> but u can give me her phone number ofc
17:01 < bridge> <Jupstar ✪> 😏
17:01 < bridge> <Jupstar ✪> i come into ur family brother
17:01 < bridge> <Jupstar ✪> 😬
17:01 < bridge> <Jupstar ✪> ok enough cringe
17:01 < bridge> <Jupstar ✪> cya
17:04 < bridge> <Jupstar ✪> lol
17:04 < bridge> <Jupstar ✪> just randomly found out that when u hold click on sides of youtube it plays it faster
17:04 < bridge> <Jupstar ✪> is that new? xd
17:15 < bridge> <learath2> Suffering is eternal
17:30 < ChillerDragon> @avolicious when kog bridge so i dont have to use ddnet discord to report kog stuff?
17:31 < ChillerDragon> @avolicious anyways i realized some sus times on the name ChillerDragon i assume all top5 under the name ChillerDragon are botted or the other person using the name ChillerDragon suddenly became top1 gores pro xd
17:31 < ChillerDragon> but he is super inactive and more grenade player than gores
17:58 < bridge> <reitw> Does anyone knows what wm supports NVIDIA ?
18:09 < bridge> <Jupstar ✪> kwin i guess
18:09 < bridge> <Jupstar ✪> xd
18:46 < bridge> <ryozuki> wm?
18:46 < bridge> <ryozuki> window manager?
18:46 < bridge> <ryozuki> weird question
18:46 < bridge> <ryozuki> isnt it about whether x11 supports nvidia
18:46 < bridge> <ryozuki> every wm supports nvidia
18:47 < bridge> <reitw> dunno, on debian page sway doesn't support nvidia for example
18:47 < bridge> <reitw> but ig i'll switch to manjaro at work cuz frozen packages are annoying af
18:48 < bridge> <ryozuki> sway uses wayland
18:48 < bridge> <ryozuki> xd
18:48 < bridge> <ryozuki> use i3
18:48 < bridge> <ryozuki> i have a 3080
19:29 < bridge> <teero777> when do we get a mod that has more accurate positioning?
19:29 < bridge> <teero777> so 128 or 256 instead of 32 blocks
19:32 < bridge> <Jupstar ✪> when u coded it
19:33 < bridge> <teero777> kk
19:33 < bridge> <teero777> towers are gonna be wayyyy harder
19:35 < bridge> <Jupstar ✪> what about non pixel perfect towers
19:36 < bridge> <teero777> very hard
19:36 < bridge> <Jupstar ✪> but yeah i guess they also harder
19:36 < bridge> <teero777> imagine making it like 4 XD
19:37 < bridge> <teero777> you think it would change gameplay alot?
19:39 < bridge> <Jupstar ✪> I'm not even sure if the gameplay will work at all
19:40 < bridge> <Jupstar ✪> at least more ticks can completely break the physics
19:40 < bridge> <Jupstar ✪> 200 ticks are so much that the quantizising is too huge (bigger than the difference in position), so you end up staying in the same position
19:42 < bridge> <reitw> make jelly tees
19:43 < bridge> <Jupstar ✪> bbrace
19:43 < bridge> <Jupstar ✪> body bounce race
19:43 < bridge> <robyt3> Make Teetris :monkalaugh:
19:43 < bridge> <Jupstar ✪> that already exists
19:43 < bridge> <Jupstar ✪> from matricks himself
19:44 < bridge> <Jupstar ✪> but i like the name
19:44 < bridge> <robyt3> ah, but yeah the capsule like game
19:44 < bridge> <Jupstar ✪> ^ 😬
19:44 < bridge> <robyt3> not exactly teetris but yeah
19:44 < bridge> <Jupstar ✪> Teepop
19:45 < bridge> <_voxeldoesart> oh wait i thought teetow made that
19:45 < bridge> <Jupstar ✪> i dunno who made it
19:45 < bridge> <_voxeldoesart> shrug
19:45 < bridge> <Jupstar ✪> but it has security vulnerables
19:45 < bridge> <Jupstar ✪> 😬
19:45 < bridge> <_voxeldoesart> uh ohhhh
19:46 < bridge> <_voxeldoesart> @cyberfighter ur gonna get wormed by teepop
19:46 < bridge> <_voxeldoesart> isnt teepop closed sourse
19:46 < bridge> <robyt3> https://www.teeworlds.com/forum/viewtopic.php?pid=79822#p79822
19:46 < bridge> <robyt3> I think this means matricks made it
19:49 < bridge> <Jupstar ✪> ah yeah
19:49 < bridge> <Jupstar ✪> it's open source
19:49 < bridge> <Jupstar ✪> someone posted some swedish forum link
19:50 < bridge> <Jupstar ✪> https://www.sweclockers.com/forum/trad/536357-teepop-source-en-tidig-julklapp
19:50 < bridge> <Jupstar ✪> over wayback machine i found it
19:50 < bridge> <Jupstar ✪> https://web.archive.org/web/20070101135315/http://teewars.com/~kma/teepop_src.tgz
19:52 < bridge> <_voxeldoesart> gg
19:55 < bridge> <cyberfighter> its fiine
19:55 < bridge> <cyberfighter> (copium)
19:56 < bridge> <_voxeldoesart> xd
22:14 < bridge> <_voxeldoesart> !sh uptime
22:14 < chillerbot> bash: uptime: command not found
22:14 < bridge> <YADDB> Command not found!
22:14 < bridge> <_voxeldoesart> damn
22:14 < bridge> <_voxeldoesart> WHAT
22:14 < bridge> <_voxeldoesart> ITS STILL GOING????
22:15 < bridge> <_voxeldoesart> !sh help
22:15 < bridge> <YADDB> Command not found!
22:15 < chillerbot> bash: help: command not found
22:27 < bridge> <Mr.Gh0s7> 🥼 🎩 soon™
22:27 < bridge> <Mr.Gh0s7> https://cdn.discordapp.com/attachments/293493549758939136/1178809453986975875/ghostsareintheair.mp4?ex=65777edb&is=656509db&hm=6af3a54382694c4ff3bd84c831a2ac4ca53f6da32235cd7ce30be81fc170e357&
22:28 < bridge> <Jupstar ✪> soon 3d teeworlds
22:28 < bridge> <Jupstar ✪> self written
22:28 < bridge> <Jupstar ✪> epic
22:28 < bridge> <Mr.Gh0s7> soon™
22:29 < bridge> <Jupstar ✪> :brownbear:
22:44 < bridge> <louis> send
22:46 < bridge> <Jupstar ✪> i can pm u if u want
22:46 < bridge> <louis> i need to break cyberfighters computer next time i play with him
22:46 < bridge> <Jupstar ✪> if u skilled enough xd
23:00 < bridge> <cyberfighter> cuz u cant beat me in the game
23:00 < bridge> <cyberfighter> noob
23:20 < bridge> <Jupstar ✪> @ryozuki 
23:20 < bridge> <Jupstar ✪> https://twitter.com/harukaze5719/status/1727935880277684527
23:20 < bridge> <Jupstar ✪> Apparently the code names imply zen 4
23:20 < bridge> <Jupstar ✪> So no zen 5 next Gen
23:20 < bridge> <Jupstar ✪> Sad
23:20 < bridge> <ryozuki> zen 4 is new no?
23:20 < bridge> <ryozuki> am4
23:20 < bridge> <ryozuki> am5
23:21 < bridge> <Jupstar ✪> Zen 4 is the current
23:21 < bridge> <Jupstar ✪> For 7000
23:22 < bridge> <Jupstar ✪> But that means no real architectural improvement. Only scaling down of current Zen 4 to 3 or 4 nm
23:25 < bridge> <ryozuki> well it makes sense right
23:25 < bridge> <ryozuki> 7000 is first cpu in zen 4
23:25 < bridge> <ryozuki> ?
23:25 < bridge> <ryozuki> they gotta use those zens xd
