00:06 <+bridge> [ddnet] <Ryozuki> oh i missed some sweet drama
00:07 <+bridge> [ddnet] <Ryozuki> i still the opinion that if you cant code it urself, the only thing you are entitled to is to ask a person one time if they are willing to do it
00:07 <+bridge> [ddnet] <Ryozuki> otherwise you dont belong to the open source community
00:08 <+bridge> [ddnet] <Ryozuki> this article is even relevant after this lmao
00:09 <+bridge> [ddnet] <Ryozuki> maybe there would be, but less quality ones
00:10 <+bridge> [ddnet] <Ryozuki> i just find it so hilarious she was a lot into this is a open source community etc, but she barely tried to learn to code and do stuff
00:12 <+bridge> [ddnet] <Tater> you would get more noobs but also you get people who have tons of experience modding C# games for many years. If you are a C# modder you can make mods for almost any unity game and many do
00:12 <+bridge> [ddnet] <Voxel> idk i feel bad after all of this but, it might be better for my mental state
00:12 <+bridge> [ddnet] <Ryozuki> btw this is not true, its normal to feel overwhelmed by a big codebase when starting, i remember this myself back in 2015, but here i am
00:12 <+bridge> [ddnet] <Cipy29> ctrl+f "rust"   'no matches'  ctrl+w
00:12 <+bridge> [ddnet] <Ryozuki> i learned to code thanks to ddnet mostly
00:12 <+bridge> [ddnet] <Ryozuki> i became a better dev
00:13 <+bridge> [ddnet] <Tater> I actually like big codebases, you can do more with less effort
00:13 <+bridge> [ddnet] <Ryozuki> today i saw a c# dev laugh about rust, guess thats why im bitter
00:13 <+bridge> [ddnet] <Ryozuki> let them enjoy their .net microsoft telemetrics
00:14 <+bridge> [ddnet] <Ryozuki> > 
00:14 <+bridge> [ddnet] <Ryozuki> >     To follow the path:
00:14 <+bridge> [ddnet] <Ryozuki> >     look to the master,
00:14 <+bridge> [ddnet] <Ryozuki> >     follow the master,
00:14 <+bridge> [ddnet] <Ryozuki> >     walk with the master,
00:14 <+bridge> [ddnet] <Ryozuki> >     see through the master,
00:14 <+bridge> [ddnet] <Ryozuki> >     become the master.
00:14 <+bridge> [ddnet] <Ryozuki> :BASED:
00:14 <+bridge> [ddnet] <Voxel> I think my first solo coding project is going to be a tee renderer/animation handler. Though I don't know where to start in terms of setting everything up.
00:15 <+bridge> [ddnet] <Ryozuki> sounds hard
00:15 <+bridge> [ddnet] <Ryozuki> you should aim for simpler stuff first
00:15 <+bridge> [ddnet] <Tater> like you're actually putting fortnite dances in teeworld?
00:15 <+bridge> [ddnet] <Tater> I thought it was a joke
00:15 <+bridge> [ddnet] <Cipy29> maybe try to do it in sdl2
00:15 <+bridge> [ddnet] <Cipy29> https://sunjay.dev/learn-game-dev/getting-started.html
00:16 <+bridge> [ddnet] <Ryozuki> i recommend not using sdl2 if you use rust
00:16 <+bridge> [ddnet] <Voxel> Not really. I just want to streamline a part of a PR i'm doing, which right now involves changing 1 varable, waiting for it all to compile and then watching a demo to take notes
00:16 <+bridge> [ddnet] <Ryozuki> winit is good and rust native
00:16 <+bridge> [ddnet] <Ryozuki> https://github.com/rust-windowing/winit
00:17 <+bridge> [ddnet] <Tater> oh so you mean a more advanced demo editor?
00:17 <+bridge> [ddnet] <Ryozuki> egui is the perfect fit for a external editor
00:17 <+bridge> [ddnet] <Tater> like SFM?
00:17 <+bridge> [ddnet] <Ryozuki> <https://github.com/emilk/egui
00:17 <+bridge> [ddnet] <Ryozuki> <https://github.com/emilk/egui>
00:18 <+bridge> [ddnet] <Voxel> Let me explain.
00:18 <+bridge> [ddnet] <Voxel> I'm planning on making a running animation in DDNet. Though how the run code is set up, it's hard to make it where it looks... Good
00:18 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1014298015273586788/Run_Anim_Alpha.mp4
00:18 <+bridge> [ddnet] <Ryozuki> @Voxel but i tell you, getting into renderer stuff when you are just starting to code is like trying to make a complicated dish when u only know how to do scrambled eggs
00:18 <+bridge> [ddnet] <Ryozuki> and you will only meet frustration
00:18 <+bridge> [ddnet] <Ryozuki> and get less motivated to code
00:19 <+bridge> [ddnet] <Tater> I see
00:19 <+bridge> [ddnet] <Ryozuki> oh
00:19 <+bridge> [ddnet] <Ryozuki> in ddnet
00:19 <+bridge> [ddnet] <Voxel> That's fair. All i really want is to make it so I instantly **see** the changes during this code
00:19 <+bridge> [ddnet] <Ryozuki> animations are done with somee python code iirc
00:19 <+bridge> [ddnet] <Voxel> i know
00:19 <+bridge> [ddnet] <Voxel> i know, im the one editing it LOL
00:19 <+bridge> [ddnet] <Ryozuki> xD
00:20 <+bridge> [ddnet] <Ryozuki> figuring how it works is another thing
00:20 <+bridge> [ddnet] <Voxel> I mean, I know how it works. All I need to do now is position everything where it looks decent. But I can't really time and position things by hand and memory
00:21 <+bridge> [ddnet] <Voxel> I don't know what matricks was on when he made the walking animation and how he did it so good
00:22 <+bridge> [ddnet] <Voxel> Currently the run looks like this. Still flawed, and I know I'm gonna spend another week on it without an animation tool xd
00:22 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1014299061605638225/MultiFAT_running.demo.mp4
04:00 <+bridge> [ddnet] <Tater> I wonder how reasonable it would be to use Steam datagram relays to prevent DoS attacks. I think it would work but you probably need to have the client running through steam to use it. https://partner.steamgames.com/doc/features/multiplayer/steamdatagramrelay
04:01 <+bridge> [ddnet] <Tater> oh wait
04:02 <+bridge> [ddnet] <Tater> they do offer it for non-steam players, but it's not guaranteed to work forever
04:02 <+bridge> [ddnet] <Tater> https://cdn.discordapp.com/attachments/293493549758939136/1014354483079282750/unknown.png
04:07 <+bridge> [ddnet] <Tater> I don't wanna ping deen but I wonder if he has considered this before
08:14 <+bridge> [ddnet] <fokkonaut> This is the underlying network protocol, without the relaying
08:14 <+bridge> [ddnet] <fokkonaut> https://github.com/ValveSoftware/GameNetworkingSockets
08:15 <+bridge> [ddnet] <fokkonaut> Well, we dont need this one though, Teeworlds has it's logic to make sure packets arrive
08:18 <+bridge> [ddnet] <ReiTW> vse attacks, efficient if u don't have a protection
08:21 <+bridge> [ddnet] <ReiTW> didn't know about those relays tho
08:26 <+bridge> [ddnet] <ReiTW> but Ig there's always easier ways to prevent DoS, such as re-thinking the netcode (idk if this can be considered as it'll 100% break vanilla compat + 0.7)
08:37 <+bridge> [ddnet] <fokkonaut> not only that, also compatibility to all previous ddnet versions
08:37 <+bridge> [ddnet] <fokkonaut> and we have some compatibility nazis in here hehe
08:38 <+bridge> [ddnet] <fokkonaut> the netcode definitely has some points that can and should be heavily improved
08:46 <+bridge> [ddnet] <Anime.pdf> ddnet2 when
08:53 <+bridge> [ddnet] <Voxel> Just a quick question: Is this an intuitive way of checking the speed of a tee? Located in players.cpp
08:53 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1014427790898118666/unknown.png
09:10 <+bridge> [ddnet] <fokkonaut> This is not in the code, did you make that?
09:12 <+bridge> [ddnet] <Voxel> Yeah, for this
09:13 <+bridge> [ddnet] <Voxel> I'm making the tee have a run animation if it reaches a fast enough speed
09:13 <+bridge> [ddnet] <fokkonaut> How should that look
09:13 <+bridge> [ddnet] <fokkonaut> I think it's hard to say at which speed a tee is running
09:20 <+bridge> [ddnet] <Voxel> I mean it's going good so far... but one problem:
09:20 <+bridge> [ddnet] <Voxel> Out of bounds does this for some reason
09:20 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1014434482675257374/this_isnt_supposed_t.mp4
09:21 <+bridge> [ddnet] <Cipy29> Feature, not a bug, ship it now
09:21 <+bridge> [ddnet] <Voxel> LMFAO
09:21 <+bridge> [ddnet] <Cipy29> I need this
09:37 <+bridge> [ddnet] <fokkonaut> it doesnt look too different, does it?
09:37 <+bridge> [ddnet] <fokkonaut> You probably do some positions checks, or the rendering does, and here the positions Pos.x < 0
09:39 <+bridge> [ddnet] <fokkonaut> The video just made my day tho, perfect music, in a map i havent seen before, and this bug, nice emoticons
09:39 <+bridge> [ddnet] <Learath2> It would help, but we can't have the open source version connect to this as the code that authenticates the packet for the relay is closed source
09:44 <+bridge> [ddnet] <Voxel> Oh yeah, i completely forgot about that check for the RunTime
09:45 <+bridge> [ddnet] <Voxel> btw, the map is run_jellyfish_fields
09:46 <+bridge> [ddnet] <Voxel> Oh yeah, i completely forgot about that check for the RunTime. Easy fix!
09:53 <+bridge> [ddnet] <fokkonaut> think i watched the video like at least 5 times now
09:54 <+bridge> [ddnet] <Voxel> Cant believe I made a bug showcase that has comedic timing
09:55 <+bridge> [ddnet] <fokkonaut> :justatest:
09:55 <+bridge> [ddnet] <k2d222> add some progressive audio distortion color sa
09:55 <+bridge> [ddnet] <k2d222> add some progressive audio distortion color saturation and post it on yt
09:56 <+bridge> [ddnet] <Voxel> Anyways, I think after maybe a sit idle animation I'll submit this as a PR
09:56 <+bridge> [ddnet] <fokkonaut> can u show a 1:1 comparison
09:56 <+bridge> [ddnet] <Voxel> Yea sure
09:57 <+bridge> [ddnet] <fokkonaut> sit idle animation? you mean with feet up? x
09:57 <+bridge> [ddnet] <fokkonaut> d
09:59 <+bridge> [ddnet] <Voxel> Yea, I think that'd be cute for both if you're AFK/Timeout or on a specific tile used for  chairs
09:59 <+bridge> [ddnet] <Voxel> Top is no animation
09:59 <+bridge> [ddnet] <Voxel> Bottom is yes animation
09:59 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1014444367924174888/Run_View_No_Anim.mp4
09:59 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1014444368456847370/Run_View_Yes_Anim.mp4
10:00 <+bridge> [ddnet] <fokkonaut> well, ok, in slow mo it actually looks dope
10:01 <+bridge> [ddnet] <Voxel> Looking at it now, maybe the run animation is a bit wide in its current state
10:02 <+bridge> [ddnet] <fokkonaut> and put away the weapon while setting haha :D or put it like on the back, so that players can still see what weapon the other person is holding
10:04 <+bridge> [ddnet] <Voxel> You mean like this?
10:04 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1014445628966846464/unknown.png
10:05 <+bridge> [ddnet] <fokkonaut> basically yea
10:05 <+bridge> [ddnet] <fokkonaut> or the feet mirrored
10:05 <+bridge> [ddnet] <fokkonaut> symetrical
10:05 <+bridge> [ddnet] <fokkonaut> idk
10:05 <+bridge> [ddnet] <fokkonaut> but this is dope
10:06 <+bridge> [ddnet] <fokkonaut> anyways
10:06 <+bridge> [ddnet] <Voxel> Maybe mirrored, so it takes less space in content.py
10:06 <+bridge> [ddnet] <fokkonaut> i think thats not a problem
10:06 <+bridge> [ddnet] <Voxel> but that would involve overwriting the renderer to have both feet in front
10:06 <+bridge> [ddnet] <fokkonaut> you rely on afk state for that, sent by the server? or you do it when a tee is just standing still already?
10:07 <+bridge> [ddnet] <fokkonaut> true, then do it like ur picture
10:08 <+bridge> [ddnet] <Voxel> The plan is that you would stand still normally everywhere, but when the server clarifies you as AFK, you're not at the sitting down state. I could also go the extra mile and have it where if you're midair and afk the weapon is still on the back
10:08 <+bridge> [ddnet] <Voxel> The plan is that you would stand still normally everywhere, but when the server clarifies you as AFK, you're now at the sitting down state. I could also go the extra mile and have it where if you're midair and afk the weapon is still on the back
10:08 <+bridge> [ddnet] <fokkonaut> yea, definitely dont make it grounded onl
10:08 <+bridge> [ddnet] <fokkonaut> yea, definitely dont make it grounded only
10:08 <+bridge> [ddnet] <fokkonaut> grounded should only make the feet sitting
10:09 <+bridge> [ddnet] <fokkonaut> but when ur in air just keep the weapon on the back and make it render the inair feet
10:09 <+bridge> [ddnet] <Voxel> yea. midair feet still applies, just weapon is different position
10:09 <+bridge> [ddnet] <fokkonaut> ye
10:09 <+bridge> [ddnet] <fokkonaut> it looks dope imo
10:09 <+bridge> [ddnet] <Voxel> thanks! i'll try to make it a reality tommorow!
10:09 <+bridge> [ddnet] <fokkonaut> but anyways u know i am a big fan of ur sketches
10:10 <+bridge> [ddnet] <Voxel> i'm flattered! it's really just a quick way to get my ideas out fast. one image can mean 1000 words.
10:10 <+bridge> [ddnet] <fokkonaut> i know but i am so bad at drawing
10:10 <+bridge> [ddnet] <fokkonaut> cant even draw a stickman that doesnt look terrible
10:10 <+bridge> [ddnet] <fokkonaut> :justatest:
10:13 <+bridge> [ddnet] <Voxel> RIP. For me, these type of sketches don't have to even be perfect. They just need to get the point across.
10:13 <+bridge> [ddnet] <Voxel> Example in #off-topic
10:45 <+bridge> [ddnet] <ReiTW> Can it be possible that in a near future ddnet might break compatibility to improve the netcode?
10:51 <+bridge> [ddnet] <deen> probably looks better with high refresh rate screens too
10:52 <+bridge> [ddnet] <deen> Since we control server and client, can do, just have to keep compat. for the old version, so not sure how much is won by that
11:08 <+bridge> [ddnet] <gerdoe> macroquad supremacy
11:54 <+bridge> [ddnet] <Learath2> That smells fishy, we have a longjmp in the code now?
11:55 <+bridge> [ddnet] <Learath2> http://www.libpng.org/pub/png/libpng-1.2.5-manual.html bizzarely enough they actually want you to do this. Weird design choice
11:58 <+bridge> [ddnet] <deen> Yeah, Jupeyy said so too, weird design. And what if you have C++ code with exceptions? Didn't expect this in libpng
11:59 <+bridge> [ddnet] <Chairn> good thing we don't use exceptions 🙂
11:59 <+bridge> [ddnet] <Learath2> Is libpng even C++ aware? I thought it was C only
12:01 <+bridge> [ddnet] <Learath2> Why would they have a fatal error function in a library anyway? Shouldn't the decision to kill the program be left to the user of the library?
12:01 <+bridge> [ddnet] <Learath2> Just return something like LIBPNG_FATAL
12:25 <+bridge> [ddnet] <Jupstar ✪> I also thought u just set your error state there. It even accepts a user pointer to store such information. That makes it even weirder imo ^^
13:04 <+bridge> [ddnet] <ThatFeed> is the map finishing symbnol not available at sw 16.1 ?
13:07 <+bridge> [ddnet] <deen> in the serverbrowser? should work
13:07 <+bridge> [ddnet] <deen> but only in ddnet tab
13:07 <+bridge> [ddnet] <ThatFeed> hmm ok then i got different problem
13:54 <+bridge> [ddnet] <0x526f6d656f> that sounds very rough for a first coding project ngl
13:59 <+bridge> [ddnet] <Learath2> If you are going to do it without relying on tw code at all this will be a very very hard starter project. You'll need good knowledge of both the tw codebase and know a thing or two about coding your own renderer
14:00 <+bridge> [ddnet] <Learath2> If you do however pull it off you'll have learned a lot along the way, at the risk of getting burnout and abandoning it in the middle
14:23 <+bridge> [ddnet] <Cellegen | RiH> https://youtu.be/5aHhmRiVpZI
14:23 <+bridge> [ddnet] <Cellegen | RiH> I got inspiration on this
15:48 <+bridge> [ddnet] <pilonpl> His videos are great
15:48 <+bridge> [ddnet] <Ryozuki> https://doc.rust-lang.org/std/sync/struct.Mutex.html#method.get_mut
15:48 <+bridge> [ddnet] <Ryozuki> 
15:48 <+bridge> [ddnet] <Ryozuki> > Returns a mutable reference to the underlying data.
15:48 <+bridge> [ddnet] <Ryozuki> > 
15:48 <+bridge> [ddnet] <Ryozuki> > Since this call borrows the Mutex mutably, no actual locking needs to take place – the mutable borrow statically guarantees no locks exist.
15:48 <+bridge> [ddnet] <Ryozuki> epic
16:42 <+bridge> [ddnet] <ThatFeed> tw complett down
16:42 <+bridge> [ddnet] <ThatFeed> what happend
16:55 <+bridge> [ddnet] <bomba2834> probably just a temporary ~~skill issue~~ downtime
16:59 <+bridge> [ddnet] <Voxel> i dont need this anymore. i already accomplished what i needed.
18:01 <+bridge> [ddnet] <archimede67> This dude is amazing
19:51 <+bridge> [ddnet] <briggssaint4> Thank me later. https://t.me/+lD4Ec_gRjCljYjNk
19:52 <+bridge> [ddnet] <Cellegen | RiH> @Discord Mod mind checking it out if it's not just sceme?
20:23 <+bridge> [ddnet] <Erik van Velzen> https://fnwf.ieee.org/ipv6-based-5g-iot-cloud-computing-and-blockchain/
20:24 <+bridge> [ddnet] <Erik van Velzen> The next move for ipv6
20:30 <+bridge> [ddnet] <Cellegen | RiH> Yo who the hell's idea was to make hook states like this, especially conditional hook scripts?
20:31 <+bridge> [ddnet] <Cellegen | RiH> basically almost 100 lines of code for hook, not involving serverside stuff
20:31 <+bridge> [ddnet] <Learath2> Probably no one touched that code since matricks
20:31 <+bridge> [ddnet] <Cellegen | RiH> :justatest: oh boy
20:32 <+bridge> [ddnet] <Learath2> 100 lines does sound reasonable to me though
20:32 <+bridge> [ddnet] <Cellegen | RiH> only client side
20:32 <+bridge> [ddnet] <Cellegen | RiH> not mentioning serverside hook restrictions and stuff
20:33 <+bridge> [ddnet] <Cellegen | RiH> and conditional hooking does no good for customization, with only 6 variables, which 3 are velocity and other 3 are states
20:34 <+bridge> [ddnet] <Cellegen | RiH> (also idk why hook tick is a thing as I saw the code, but ok)
20:34 <+bridge> [ddnet] <Learath2> hook isn't instant, I'm guessing the tick handles that
20:34 <+bridge> [ddnet] <Cellegen | RiH> so, no lerping involved, I got frustrated about it 😄
20:35 <+bridge> [ddnet] <Learath2> There is probably a lerp somewhere to make the animation smooth
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> ```
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>  what is erorr ? 
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> ```
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> ```
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> CMake Deprecation Warning at C:/Users/ASUS/Desktop/DDNet/googletest-src/CMakeLists.txt:1 (cmake_minimum_required):
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   Compatibility with CMake < 2.8.12 will be removed from a future version of
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   CMake.
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   Update the VERSION argument <min> value or use a ...<max> suffix to tell
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   CMake that the project does not need compatibility with older versions.
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> CMake Deprecation Warning at C:/Users/ASUS/Desktop/DDNet/googletest-src/googlemock/CMakeLists.txt:42 (cmake_minimum_required):
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   Compatibility with CMake < 2.8.12 will be removed from a future version of
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   CMake.
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   Update the VERSION argument <min> value or use a ...<max> suffix to tell
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   CMake that the project does not need compatibility with older versions.
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:46 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> CMake Deprecation Warning at C:/Users/ASUS/Desktop/DDNet/googletest-src/googletest/CMakeLists.txt:49 (cmake_minimum_required):
21:47 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   Compatibility with CMake < 2.8.12 will be removed from a future version of
21:47 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   CMake.
21:47 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:47 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   Update the VERSION argument <min> value or use a ...<max> suffix to tell
21:47 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   CMake that the project does not need compatibility with older versions.
21:47 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:47 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> ```
21:47 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> https://cdn.discordapp.com/attachments/293493549758939136/1014622567065190420/Screenshot_2022-09-01_001717.png
21:47 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> @deen
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> ```
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   Compatibility with CMake < 2.8.12 will be removed from a future version of
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   CMake.
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   Update the VERSION argument <min> value or use a ...<max> suffix to tell
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   CMake that the project does not need compatibility with older versions.
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> CMake Deprecation Warning at CMakeLists.txt:21 (cmake_policy):
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   The OLD behavior for policy CMP0072 will be removed from a future version
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   of CMake.
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   The cmake-policies(7) manual explains that the OLD behaviors of all
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   policies are deprecated and that a policy should be set to OLD only under
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   specific short-term circumstances.  Projects should be ported to the NEW
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   behavior and not rely on setting a policy to OLD.
21:48 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:49 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:49 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> CMake Warning at E:/Library for ddnet/cmake-3.24.1-windows-x86_64/cmake-3.24.1-windows-x86_64/share/cmake-3.24/Modules/Platform/Windows-GNU.cmake:224 (message):
21:49 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   Disabling CMAKE_GNUtoMS option because CMAKE_GNUtoMS_VCVARS is not set.
21:49 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> Call Stack (most recent call first):
21:49 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   E:/Library for ddnet/cmake-3.24.1-windows-x86_64/cmake-3.24.1-windows-x86_64/share/cmake-3.24/Modules/Platform/Windows-GNU-C-ABI.cmake:1 (__windows_compiler_gnu_abi)
21:49 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   E:/Library for ddnet/cmake-3.24.1-windows-x86_64/cmake-3.24.1-windows-x86_64/share/cmake-3.24/Modules/CMakeCInformation.cmake:71 (include)
21:49 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ>   CMakeLists.txt:34 (project)
21:49 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> 
21:49 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> ```
22:17 <+bridge> [ddnet] <gerdoe> update ur cmake
22:17 <+bridge> [ddnet] <gerdoe> btw u can generate project
22:17 <+bridge> [ddnet] <gerdoe> these are warnings
23:01 <+bridge> [ddnet] <murpi> Thank me later. https://t.me/+test
23:22 <+deen> Thanks murpi
23:37 <+bridge> [ddnet] <murpi> lol ^^
23:42 <+bridge> [ddnet] <murpi> test https://t.me/scamlinkhere test
