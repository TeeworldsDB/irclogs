10:26 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/954309756229652510/r7lpvhtnx1o81.png
11:14 <+bridge_> [ddnet] <c0d3d3v> like this: https://github.com/C0D3D3V/ddnet/commit/d7bbf944223f139bba66697a465de60a5aa9a55c
11:17 <+bridge_> [ddnet] <Jupstar> yes
11:21 <+bridge_> [ddnet] <c0d3d3v> What was the intention to allow also the 0.7 quads? Couldn't we commit to one design?
11:21 <+bridge_> [ddnet] <Jupstar> do you mean the ninja bar?
11:24 <+bridge_> [ddnet] <c0d3d3v> no for the Armor, Ammo and Health display, extra quads were created that are slightly larger, 2 units to be exact. Which are used when using a 0.7 game.png (with the ninja bar)
11:24 <+bridge_> [ddnet] <c0d3d3v> I think Chillerdragon introduced that.
11:25 <+bridge_> [ddnet] <Jupstar> ah for the grenade maybe?
11:26 <+bridge_> [ddnet] <c0d3d3v> See https://github.com/ddnet/ddnet/commit/263fdbd8e17fb589f1d7ae2949a609cc85bfcb48
11:29 <+bridge_> [ddnet] <Jupstar> // special case for 0.7 grenade
11:29 <+bridge_> [ddnet] <Jupstar> rest are just quads for the new stuff in game.png i assume
11:29 <+bridge_> [ddnet] <Jupstar> implemented for future use xd
11:30 <+bridge_> [ddnet] <c0d3d3v> Well special case for everything, each of the displays is 2 units larger in width and height. We might as well take the same quads if we agree on a size.
11:30 <+bridge_> [ddnet] <Jupstar> or are they already used?
11:30 <+bridge_> [ddnet] <Jupstar> well anyway, that's bcs game.png is different for 0.7
11:30 <+bridge_> [ddnet] <c0d3d3v> They are used when you use a 0.7 game.png.
11:30 <+bridge_> [ddnet] <Jupstar> yes, guess 0.7 changed it a bit
11:31 <+bridge_> [ddnet] <c0d3d3v> Yes the shields and hearts are one unit smaller in the PNG so they decided to just make the quads bigger -.- oh man
11:32 <+bridge_> [ddnet] <c0d3d3v> Well, no matter, it's just another compatibility layer...
11:33 <+bridge_> [ddnet] <Jupstar> well vanilla has alot of weird flaws that are annoying xd
11:33 <+bridge_> [ddnet] <c0d3d3v> Yes the shields and hearts are one unit on all sides smaller in the PNG so they decided to just make the quads bigger -.- oh man
11:37 <+bridge_> [ddnet] <c0d3d3v> Mh I was wrong, only looked at first glance as if they are smaller, actually they are the same size, the reason was the https://github.com/teeworlds/teeworlds/issues/1624
11:37 <+bridge_> [ddnet] <c0d3d3v> Mh I was wrong, only looked at first glance as if they are smaller, actually they are the same size, the reason was this https://github.com/teeworlds/teeworlds/issues/1624
11:38 <+bridge_> [ddnet] <Jupstar> yeah but we still need the compability
11:38 <+bridge_> [ddnet] <Jupstar> the 0.6 game.png looks too oversized else i think
11:45 <+bridge_> [ddnet] <c0d3d3v> ok
11:48 <+bridge_> [ddnet] <c0d3d3v> ok, you are right looks really strange
14:56  * seemslegit slaps ChillerDragon around a bit with a large fishbot
14:57 <+seemslegit>                               
16:20 <+bridge_> [ddnet] <c0d3d3v> @Robyt3 
16:20 <+bridge_> [ddnet] <c0d3d3v> You once told me to use pointers instead of copying data, wouldn't that apply here as well or do you think there was a reason for that?
16:20 <+bridge_> [ddnet] <c0d3d3v> https://github.com/ddnet/ddnet/blob/971f839c1792563b52fe65bd5d6de4495374cdcd/src/game/client/components/players.cpp#L87-L90
16:21 <+bridge_> [ddnet] <c0d3d3v> @Robyt3 
16:21 <+bridge_> [ddnet] <c0d3d3v> You once told me to use pointers instead of copying data, wouldn't that apply here as well or do you think there was a reason for that?
16:21 <+bridge_> [ddnet] <c0d3d3v> https://github.com/ddnet/ddnet/blob/971f839c1792563b52fe65bd5d6de4495374cdcd/src/game/client/components/players.cpp#L87-L90
16:21 <+bridge_> [ddnet] <c0d3d3v> 
16:21 <+bridge_> [ddnet] <c0d3d3v> in RenderPlayer() too
16:25 <+bridge_> [ddnet] <Robyt3> I think the copies of the CNetObj_Character objects could be avoided, as the objects are not being modified, but the CTeeRenderInfo is changed so it needs to be a copy
16:29 <+bridge_> [ddnet] <chillerdragon> Yea i still occasionally join until i get in a beef with staff and rq. Thats why I was suprised i can not remember you. Its probably the length of your name that is to blame.
16:29 <+bridge_> [ddnet] <chillerdragon> (@f.)
17:28 <+bridge_> [ddnet] <ËªäÈ≠Ñ> https://cdn.discordapp.com/attachments/293493549758939136/954415979499245598/korean.txt
17:28 <+bridge_> [ddnet] <ËªäÈ≠Ñ> I edited the Korean translation file that I posted last time
17:30 <+bridge_> [ddnet] <ËªäÈ≠Ñ> Could you developers pull request it?
17:30 <+bridge_> [ddnet] <deen> Thank you, will add it
17:30 <+bridge_> [ddnet] <ËªäÈ≠Ñ> Thankss
19:01 <+bridge_> [ddnet] <c0d3d3v> Is there actually a reason why we no longer predict the gameworld, including character, in a demo playback? I have tried a few demos and see no reason not to predict the world.
19:01 <+bridge_> [ddnet] <c0d3d3v> 
19:01 <+bridge_> [ddnet] <c0d3d3v> https://github.com/ddnet/ddnet/blob/940032ef269e6d98772f8d867367e63c1b8bfab7/src/game/client/gameclient.cpp#L1671-L1672
19:01 <+bridge_> [ddnet] <c0d3d3v> 
19:01 <+bridge_> [ddnet] <c0d3d3v> This would be helpful e.g. the plan in the new HUD is to display the available jumps and the information is only available in the predicted characters.
19:54 <+bridge_> [ddnet] <deen> Why do you need to predict something when you have all the data?
20:11 <+bridge_> [ddnet] <Alexander> svg assets support when‚Ñ¢Ô∏è?
20:15 <+bridge_> [ddnet] <Voxel> when there are enough assets for it
20:15 <+bridge_> [ddnet] <Voxel> aka all of mapres
20:15 <+bridge_> [ddnet] <Voxel> and i do Not want to do tilesets man ;_;
20:35 <+bridge_> [ddnet] <c0d3d3v> Ah only with server demos there is no character data, with client demos is unclear whether the data is complete, I'm still looking, well one takes what one gets üòÑ
21:01 <+bridge_> [ddnet] <JSaurusRex> does anybody here know how to enable "true ping"?
21:01 <+bridge_> [ddnet] <JSaurusRex> im working on something network related, that seems helpfull
21:03 <+bridge_> [ddnet] <Dr.Funmanteddy> to explain it better this is what he wants enabled
21:03 <+bridge_> [ddnet] <Dr.Funmanteddy> https://cdn.discordapp.com/attachments/293493549758939136/954470082065612850/ping.PNG
21:03 <+bridge_> [ddnet] <Dr.Funmanteddy> the number in the top right
21:05 <+bridge_> [ddnet] <JSaurusRex> `cl_showpred` figured it out
21:41 <+bridge_> [ddnet] <c0d3d3v> Since only tees in the own team have a CCharacter, (and also only if they are not solo) these have also only the m_JumpedTotal set. Not even specteated tees get a CCharacter and therefore have no m_JumpedTotal value.
21:41 <+bridge_> [ddnet] <c0d3d3v> 
21:41 <+bridge_> [ddnet] <c0d3d3v> How about if we transfer m_JumpedTotal in the CNetObj_DDNetCharacter to the client?
21:41 <+bridge_> [ddnet] <c0d3d3v> 
21:41 <+bridge_> [ddnet] <c0d3d3v> Can I just do that?
22:30 <+bridge_> [ddnet] <c0d3d3v> I think it makes sense to have the data (m_JumpedTotal) in the client, I now understand that once you go into spec the whole gameworld is no longer predicted and therefore the values (m_JumpedTotal) are not there for other players.
22:30 <+bridge_> [ddnet] <c0d3d3v> 
22:30 <+bridge_> [ddnet] <c0d3d3v> Whether we want the display at the end is another question, I have now watched the jumps display a few hours while debugging and I'm pretty sure some people will find it annoying üòÑ but I'm only there to implement the display. The discussion about the new display will come later
23:36 <+bridge_> [ddnet] <deen> Couldn't we keep track of m_JumpedTotal in client?
23:54 <+bridge_> [ddnet] <c0d3d3v> We would have to execute every gametick in the gameworld for every player (just calculate the tick for CCharacterCore with user input would be enough) that we spectate. And actually we would need to do this before we spectate him, to make the display already correct when we jump into the spectating view. We do not do that at the moment. Are so edge cases that are then messy. If you want to see the HUD with the jump display of other teems, 
