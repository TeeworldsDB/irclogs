01:06 <+bridge> [ddnet] <ReiTW> there's a discord for that
01:06 <+bridge> [ddnet] <ReiTW> https://cdn.discordapp.com/attachments/293493549758939136/1007062409669771426/unknown.png
12:53 <+bridge> [ddnet] <master Gyleu> hi guys I have a question why haven't I been unban yet even though I should have been unban 20 minutes ago
14:26 <+bridge> [ddnet] <Ryozuki> https://docs.hetzner.com/general/others/price-adjustment/
14:26 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1007263852485951678/unknown.png
14:27 <+bridge> [ddnet] <Ryozuki> https://news.ycombinator.com/item?id=32423080
14:28 <+bridge> [ddnet] <Ryozuki> > While the pricing is interesting, I think the fact it is driven by the input costs of electricity is even more telling.
14:28 <+bridge> [ddnet] <Ryozuki> > 
14:28 <+bridge> [ddnet] <Ryozuki> > The fact that electricity costs is the dominating cost of cloud computing basically means that:
14:28 <+bridge> [ddnet] <Ryozuki> > 
14:28 <+bridge> [ddnet] <Ryozuki> > 1) We're up against physical barriers to lowering the cost (and ecological impact) of our clouds.
14:28 <+bridge> [ddnet] <Ryozuki> > 
14:28 <+bridge> [ddnet] <Ryozuki> > 2) Optimizing for less compute will pay multi-fold dividends over the next few years where we can expect energy prices to continue rising.
14:28 <+bridge> [ddnet] <Ryozuki> > 
14:28 <+bridge> [ddnet] <Ryozuki> > 3) Building more power-efficient chips is a big deal, and I'm glad to see more general ARM deployment, given their efficiency gains.
14:28 <+bridge> [ddnet] <Ryozuki> interesting
14:29 <+bridge> [ddnet] <Jupstar> I call it bad management
14:29 <+bridge> [ddnet] <Chairn> air conditioning rate?
14:29 <+bridge> [ddnet] <Jupstar> It was to be expected. Now customer pays this ridiculous prices
14:31 <+bridge> [ddnet] <Ryozuki> ?
14:31 <+bridge> [ddnet] <Ryozuki> well hetzner offers the lowest prices among most
14:32 <+bridge> [ddnet] <Ryozuki> the fact that electricity in germany costs more than double in finland is interesting
14:32 <+bridge> [ddnet] <Chairn> what's air conditioning rate ? Do they pay for cool air from other company ?
14:32 <+bridge> [ddnet] <Chairn> coal vs hydroelectricity
14:32 <+bridge> [ddnet] <Jupstar> Bcs they are lieing. In Germany they never pay that much for electricity. Only households pay the full price of 30 cents plus
14:32 <+bridge> [ddnet] <Ryozuki> i rly doubt hetzner is lyinh
14:33 <+bridge> [ddnet] <Ryozuki> lying
14:33 <+bridge> [ddnet] <Chairn> 0,1546 â‚¬ in France
14:34 <+bridge> [ddnet] <Chairn> or 0.1740 â‚¬, i find so many different results
14:34 <+bridge> [ddnet] <Ryozuki> 0.327 U.S. Dollar per kWh spain
14:34 <+bridge> [ddnet] <Chairn> since when USA has colonized Spain?
14:35 <+bridge> [ddnet] <Ryozuki> xd
14:35 <+bridge> [ddnet] <Ryozuki> google assumes im murican
14:35 <+bridge> [ddnet] <Ryozuki> cuz i have english browser
14:36 <+bridge> [ddnet] <Ryozuki> idk
14:36 <+bridge> [ddnet] <Ryozuki> still if u compare the price of AWS to hetzner
14:36 <+bridge> [ddnet] <Ryozuki> its ridiculous
14:36 <+bridge> [ddnet] <Ryozuki> aws is like 100x costlier
14:37 <+bridge> [ddnet] <Jupstar> Yeah insane
14:39 <+bridge> [ddnet] <Jupstar> I'd prefer they show some transparency tho. Like we increase the price but also heavily invest in green energy now or smth. Else it's just another living with the status quo
14:59 <+bridge> [ddnet] <Izanagi> @c0d3d3v i like this but the only thing i want to it is a transperency option
14:59 <+bridge> [ddnet] <Izanagi> https://cdn.discordapp.com/attachments/293493549758939136/1007271950340608070/unknown.png
15:05 <+bridge> [ddnet] <c0d3d3v> transperency of the rectangle or the text?
15:07 <+bridge> [ddnet] <Izanagi> of the rectangle
15:07 <+bridge> [ddnet] <Izanagi> because the transperency of the rectangle is slighty darker than the transperency of the top time rectangles
15:08 <+bridge> [ddnet] <Izanagi> https://cdn.discordapp.com/attachments/293493549758939136/1007274208570650675/unknown.png
15:08 <+bridge> [ddnet] <c0d3d3v> That was already requested... maybe you could make an issue for that on github. The request was that you should be able to configure all round rectangles in the game HUD (so also the mini score hud, chat background?, timer, recording stuff) ... like transparency color, also position was reqested but that is unrealisitc
15:08 <+bridge> [ddnet] <c0d3d3v> transparency is the same it is only diffrent color
15:08 <+bridge> [ddnet] <Chairn> one day, json or xml customization ðŸ˜„
15:09 <+bridge> [ddnet] <c0d3d3v> transparency is the same it is only diffrent color (at least I have it in mind like that)
15:09 <+bridge> [ddnet] <Izanagi> hmm i don't use github so idk if i can make an issue
15:09 <+bridge> [ddnet] <c0d3d3v> just create an account...
15:10 <+bridge> [ddnet] <c0d3d3v> That would at least make sure that the request gets not lost, especially the discussion about it.
15:14 <+bridge> [ddnet] <Izanagi> alright will do
17:26 <+bridge> [ddnet] <ReiTW> best car
17:26 <+bridge> [ddnet] <ReiTW> https://cdn.discordapp.com/attachments/293493549758939136/1007309049047560252/unknown.png
21:15 <+bridge> [ddnet] <Cellegen | RiH> :pepedead:
21:31 <+bridge> [ddnet] <Ryozuki> https://blog.rust-lang.org/2022/08/11/Rust-1.63.0.html
21:31 <+bridge> [ddnet] <Ryozuki> @ReiTW
21:31 <+bridge> [ddnet] <Ryozuki> ðŸ‘€
21:31 <+bridge> [ddnet] <Ryozuki> quite the big update
21:31 <+bridge> [ddnet] <Ryozuki> > Scoped threads
21:31 <+bridge> [ddnet] <Ryozuki> you no longer need arc for some simple threads
21:32 <+bridge> [ddnet] <Ryozuki> > Now, with 1.63.0, the standard library is adding scoped threads, which allow spawning a thread borrowing from the local stack frame. The std:ðŸ§µ:scope API provides the necessary guarantee that any spawned threads will have exited prior to itself returning, which allows for safely borrowing data. Here's an example:
21:32 <+bridge> [ddnet] <Ryozuki> lmao stupid discord emojifying
21:32 <+bridge> [ddnet] <Ryozuki> > The Condvar::new, Mutex::new, and RwLock::new functions are now callable in const contexts, which allows avoiding the use of crates like lazy_static for creating global statics with Mutex, RwLock, or Condvar values. This builds on the work in 1.62 to enable thinner and faster mutexes on Linux.
21:32 <+bridge> [ddnet] <Ryozuki> this is poggers too
21:33 <+bridge> [ddnet] <Ryozuki> no more lazy_static
21:33 <+bridge> [ddnet] <ReiTW> I really need to work more with threads
21:33 <+bridge> [ddnet] <ReiTW> already had hard time trying to learn threads in C, ig it's easier in Rust
21:34 <+bridge> [ddnet] <Ryozuki> in rust its easier as in you are forced to do it the correct way more or less
21:34 <+bridge> [ddnet] <Ryozuki> note that rust doesnt prevent deadlocks
21:35 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1007371660984324126/unknown.png
21:35 <+bridge> [ddnet] <Ryozuki> https://doc.rust-lang.org/stable/std/array/fn.from_fn.html
21:36 <+bridge> [ddnet] <Ryozuki> ```rust
21:36 <+bridge> [ddnet] <Ryozuki> let array = core::array::from_fn(|i| i);
21:36 <+bridge> [ddnet] <Ryozuki> assert_eq!(array, [0, 1, 2, 3, 4]);
21:36 <+bridge> [ddnet] <Ryozuki> ```
21:36 <+bridge> [ddnet] <Ryozuki> rust type inference sure is crazy
21:36 <+bridge> [ddnet] <Ryozuki> it generates that cuz it infers from the array in assert that N is 5
21:36 <+bridge> [ddnet] <Ryozuki> a more normal example is `let array: [u32; 5] = core::array::from_fn(|i| i);` tho xd
21:39 <+bridge> [ddnet] <k2d222> quantum rust: the array is in a superposition of all possible lengths before you observe it
21:39 <+bridge> [ddnet] <Ryozuki> :BASED:
22:50 <+bridge> [ddnet] <Ravie> when ryozuki finds rust on his car: it runs safer
