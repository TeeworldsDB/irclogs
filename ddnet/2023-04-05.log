00:27 < bridge> <ReiTW> use windows u noob
01:17 < bridge> <Anime.pdf> #developer rule #1: don't mention windows as usable operating system
01:17 < bridge> <Anime.pdf> üíÄ
03:16 < bridge> <Ewan> is there a way to ensure drawing is clipped inside of its corner radius
03:16 < bridge> <Ewan> is there a way to ensure drawing is clipped inside of its parent's corner radius
03:16 < bridge> <Ewan> is there a way to ensure drawing of a rect is clipped inside of its parent's corner radius
03:18 < bridge> <Ewan> so i can avoid this
03:18 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1092981483213426789/image.png
04:33 < bridge> <Ewan> is there a way to ensure drawing of a rect is clipped inside of its parent scroll region‚Äôs corner radius
04:38 < bridge> <M é…π „Ç∑> IGraphics::ClipEnable
04:38 < bridge> <M é…π „Ç∑> Or smth like that
04:58 < bridge> <Ewan> thanks
05:02 < bridge> <Ewan> unfortunately this does not consider corner radius
08:39 < bridge> <Learath2> I think we can only have rectangular clips. Properly handling round corners probably requires some feature that's not available in gl1
08:41 < bridge> <ReiTW> why that, no bugs :giga_chad:
08:41 < bridge> <ReiTW> (don't ban me)
09:15 < bridge> <M é…π „Ç∑> Oh oke
12:27 < bridge> <Ewan> i just reduced both radii
12:27 < bridge> <Iza> Linux users when their in a room with windows
12:27 < bridge> <Iza> Linux users when they‚Äôre in a room with windows
12:28 < bridge> <Ewan> technically it‚Äôs wrong but not wrong enough to be super noticeable
15:24 < bridge> <Ryozuki> the world is wrong
15:24 < bridge> <Ryozuki> even in llvm
15:25 < bridge> <Ryozuki> i depend on C for malloc
15:25 < bridge> <Ryozuki> god help me get liberated from C
15:27 < bridge> <Jupstar ‚ú™> But doesn't it depend on the os
15:29 < bridge> <Ryozuki> @Jupeyy_Keks making raw sys calls via llvm-ir is a big bother
15:29 < bridge> <Ryozuki> idk how actually but its possible probs
15:30 < bridge> <Ryozuki> even rust, uses libc for the bare ops
15:30 < bridge> <Ryozuki> such as malloc
15:30 < bridge> <Ryozuki> i think golang doesnt depend on libc
15:30 < bridge> <Jupstar ‚ú™> Let's create a new os
15:30 < bridge> <Ryozuki> but they had bugs due to this
15:30 < bridge> <Ryozuki> cuz its not easy to do
15:43 < bridge> <Ewan> maybe a different sort of wrong
15:43 < bridge> <Ewan> but still wrong
15:43 < bridge> <Ewan> previously i had the outer rect at 10.0 radius & the inner ones at 5.0, with 5.0 margins
15:44 < bridge> <Ewan> i've halved the radii but not the margins
15:44 < bridge> <Ewan> which is a no-no for uniformity's sake
15:45 < bridge> <Ewan> but it is better than this
15:45 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1093169508526588006/image.png
15:45 < bridge> <Ewan> pretty much anything is better than that
16:05 < bridge> <Chairn> @Ryozuki https://faultlore.com/blah/c-isnt-a-language/
16:06 < bridge> <Chairn> i believe it was already posted here though
16:12 < bridge> <Ryozuki> i did
16:12 < bridge> <Ewan> this is making me cringe pretty hard
16:14 < bridge> <Jupstar ‚ú™> Nani
16:14 < bridge> <Ryozuki> what is
16:14 < bridge> <Ryozuki> this girl or guy knows more c than u
16:14 < bridge> <Ewan> the contents of this post
16:14 < bridge> <Ewan> and probably true
16:14 < bridge> <Ewan> but that doesn't mean their delivery isn't obnoxious
16:15 < bridge> <Ryozuki> truth hurts
16:15 < bridge> <Jupstar ‚ú™> I rarely see **nee** projects written in c anymore
16:15 < bridge> <Ryozuki> she is quite a big contributor
16:15 < bridge> <Ryozuki> she wrote this https://doc.rust-lang.org/nightly/nomicon/
16:15 < bridge> <Jupstar ‚ú™> I rarely see **new** projects written in c anymore
16:16 < bridge> <Ryozuki> "Master's Thesis: You Can't Spell Trust Without Rust"
16:16 < bridge> <Ryozuki> lmaoo true
16:16 < bridge> <Jupstar ‚ú™> Xd
16:16 < bridge> <Jupstar ‚ú™> The rust gang
16:17 < bridge> <Ryozuki> i wonder if was her who wrote the pointer provenance thing
16:17 < bridge> <Ryozuki> i forgot
16:17 < bridge> <Ryozuki> it was a interesting blog
16:17 < bridge> <Ryozuki> yep
16:17 < bridge> <Ryozuki> https://faultlore.com/blah/fix-rust-pointers/
16:17 < bridge> <Ryozuki> https://faultlore.com/blah/tower-of-weakenings/
16:19 < bridge> <Ryozuki> and now i got derailed on what iw as doing
16:19 < bridge> <DefaultO> oh I know that furry
16:28 < bridge> <cyberfighter> https://cdn.discordapp.com/attachments/293493549758939136/1093180347539275978/image.png
16:28 < bridge> <cyberfighter> what does this mean
16:28 < bridge> <cyberfighter> the ramp
16:29 < bridge> <Ewan> that's an error lol
16:29 < bridge> <Ewan> a bug
16:29 < bridge> <Ewan> fucked up format on a float
16:30 < bridge> <Ewan> unrelated q, it's kinda hard to tell with the config macros. how big are config strings & are they malloc'd or static size
16:30 < bridge> <Ewan> for sizeof() purposes
16:31 < bridge> <deen> static size, every MACRO_CONFIG_STR defines the length
16:31 < bridge> <deen> so sizeof works
16:32 < bridge> <deen> https://github.com/ddnet/ddnet/blob/e47f54d168e89ea2d2c68ae5ecb156e2ea89c8d5/src/engine/shared/config.h#L28
16:33 < bridge> <Ewan> thanks
16:42 < bridge> <cyberfighter> its from tune velramp_curvature 0 xd, but it also makes you very glitchy and move at like 5 fps i wonder why though
16:43 < bridge> <Ewan> do you want to know what the ramp is used for or why it looks like that
16:43 < bridge> <Ewan> this is the use
16:43 < bridge> <Ewan> `DisplaySpeedX *= VelocityRamp(VelspeedLength, m_pClient->m_aTuning[g_Config.m_ClDummy].m_VelrampStart, m_pClient->m_aTuning[g_Config.m_ClDummy].m_VelrampRange, m_pClient->m_aTuning[g_Config.m_ClDummy].m_VelrampCurvature);`
16:43 < bridge> <Ewan> this is the use
16:43 < bridge> <Ewan> ```cpp
16:43 < bridge> <Ewan> float DisplaySpeedX = VelspeedX / 32;
16:43 < bridge> <Ewan> DisplaySpeedX *= VelocityRamp(VelspeedLength, m_pClient->m_aTuning[g_Config.m_ClDummy].m_VelrampStart, m_pClient->m_aTuning[g_Config.m_ClDummy].m_VelrampRange, m_pClient->m_aTuning[g_Config.m_ClDummy].m_VelrampCurvature);
16:43 < bridge> <Ewan> ```
16:44 < bridge> <cyberfighter> why its 5 fps movement
16:44 < bridge> <Ewan> idk what u mean
16:44 < bridge> <Ewan> under what circumstances is it going 5 fps
16:44 < bridge> <cyberfighter> well if u have ramp curvature at 0 and start moving/jumping around
16:45 < bridge> <Ewan> why do u have it at 0
16:45 < bridge> <cyberfighter> so i would see what happens
16:45 < bridge> <cyberfighter> just curious
16:46 < bridge> <Ewan> in the curvature function
16:46 < bridge> <Ewan> `return 1.0f / powf(Curvature, (Value - Start) / Range);`
16:46 < bridge> <Ewan> i'd assume having Curvature at near-zero makes the exponent way more expensive
16:47 < bridge> <Ewan> and this is being called every frame
17:12 < bridge> <Learath2> I love how most arguments against C boil down to "I invoked UB, it did something unexpected, send hewp"
17:12 < bridge> <Learath2> Just from how this line is written I can tell this person isn't a C enjoyer `struct Meow* p_cat = (struct Meow*)malloc(sizeof(struct Meow));`
17:13 < bridge> <Ewan> yeah
17:13 < bridge> <Learath2> `struct Meow *p_cat = malloc(sizeof *p_cat);` is how any C enjoyer would put it
17:17 < bridge> <Learath2> > All someone has to do is strip the build of -Werror -Wall -Wpedantic and you‚Äôll be off to the races in committing multithreading, read-only, and hardware register crimes.
17:17 < bridge> <Learath2> No sane C developer goes without at least `-Wall`
17:18 < bridge> <Learath2> I honestly have grown tired of these articles that just hold it wrong and say it's bad. We are here to code, not pentest compilers. Yes if you don't use the safeties provided by the compiler you can make mistakes, who would have guessed
17:20 < bridge> <DefaultO> Learath you should start your own blog then praising C
17:21 < bridge> <Learath2> I would do a better job as a critique, there are things that are bad about C, no need to slander it
17:23 < bridge> <Learath2> Though I did enjoy the actual idea in this article, yes C as an FFI isn't the greatest thing ever. I did not enjoy the articles it linked to
17:45 < bridge> <Ryozuki> ```
17:45 < bridge> <Ryozuki> llvm/source/llvm-project-16.0.0.src/llvm/include/llvm/ADT/SmallVector.h:298: llvm::SmallVectorTemplateCommon::const_reference llvm::SmallVectorTemplateCommon<std::optional<mlir::TypeConverter::SignatureConversion::InputMapping>>::operator[](llvm::SmallVectorTemplateCommon::size_type) const [T = std::optional<mlir::TypeConverter::SignatureConversion::InputMapping>]: Assertion `idx < size()' failed.
17:45 < bridge> <Ryozuki> Aborted
17:45 < bridge> <Ryozuki> ```
17:45 < bridge> <Ryozuki> constant pain in life
18:36 < bridge> <Ryozuki> i fixed this but foudn smth even better
18:36 < bridge> <Ryozuki> `error: 'llvm.getelementptr' op expected as many dynamic indices as specified in 'rawConstantIndices'`
18:37 < bridge> <Ryozuki> imagine having docs kek
18:40 < bridge> <Jupstar ‚ú™> yeah fix llvm pls
19:16 < bridge> <Ewan> are there enums for mouse buttons in the UI
19:16 < bridge> <Ewan> all ui mouse button fns take raw ints
19:26 < bridge> <Robyt3> no, there's no enum for UI mouse buttons yet
19:37 < bridge> <KDaniel> Hey can i change map from downloadmaps? 
19:37 < bridge> <KDaniel> like "sv_map downloadedmaps/testmap.map"
20:06 < bridge> <Jupstar ‚ú™> well u can edit the storage.cfg
20:06 < bridge> <Jupstar ‚ú™> 
20:06 < bridge> <Jupstar ‚ú™> add_path <path>downloadedmaps
20:06 < bridge> <Jupstar ‚ú™> well u can edit the storage.cfg
20:06 < bridge> <Jupstar ‚ú™> 
20:06 < bridge> <Jupstar ‚ú™> add_path <path>/downloadedmaps
20:06 < bridge> <Jupstar ‚ú™> and then change_map testmap
20:10 < bridge> <KDaniel> mhh not optimal solution for TaterClient üòÑ i will look forward it
20:10 < bridge> <KDaniel> mhh not optimal solution for TaterClient üòÑ i will look forward it but thanks ‚ù§Ô∏è
20:25 < bridge> <gerdoe> should add gametype register for highlightings xd
20:35 < bridge> <Dragere> https://cdn.discordapp.com/attachments/293493549758939136/1093242575722381444/62292e67f9e04cee.png
20:37 < bridge> <Chairn> Allman for every developer
20:39 < bridge> <Voxel> allman üî•
20:41 < bridge> <Ewan> kernighan & ritchie
20:41 < bridge> <Ewan> clang-format google preset
20:41 < bridge> <Learath2> agreed
20:41 < bridge> <gerdoe> calling ryozuki
20:42 < bridge> <Learath2> I use a modified form of K&R
20:42 < bridge> <Learath2> K&R, no huddled else and no opening brace on function definitions
20:42 < bridge> <gerdoe> kind of trolling :troll:
20:53 < bridge> <Ryozuki> i kind of agree with the pic
20:54 < bridge> <Ryozuki> k&r works nice in rust
20:54 < bridge> <Ryozuki> the holy grail is just rustfmt anyway
20:54 < bridge> <Learath2> I bet you just defer to clippy, weak willed
20:54 < bridge> <Ryozuki> no need for names
20:54 < bridge> <Ryozuki> no, for formatting its rustfmt
20:54 < bridge> <Ryozuki> clippy is warnings
20:55 < bridge> <Learath2> True
20:55 < bridge> <Ryozuki> clippy with pedantic warnings as errors
20:55 < bridge> <Ryozuki> base rust format config
20:55 < bridge> <Ryozuki> https://github.com/edg-l/sitewriter/blob/master/src/lib.rs#L68-L73
20:56 < bridge> <Ryozuki> ```rust
20:56 < bridge> <Ryozuki> #![forbid(unsafe_code)]
20:56 < bridge> <Ryozuki> #![deny(missing_docs)]
20:56 < bridge> <Ryozuki> #![deny(warnings)]
20:56 < bridge> <Ryozuki> #![deny(clippy::nursery)]
20:56 < bridge> <Ryozuki> #![deny(clippy::pedantic)]
20:56 < bridge> <Ryozuki> #![deny(clippy::all)]
20:56 < bridge> <Ryozuki> ```
21:06 < bridge> <ReD> I once did a wrapper class for vector, so it throws an exception what the index, size and type of vector was for these kind of pains
21:06 < bridge> <ReD> I once did a wrapper class for vector, so it throws an exception what the index, size and type of vector was for these kind of pains
21:06 < bridge> <Ryozuki> hack llvm for that
21:06 < bridge> <Ryozuki> but i found the solution
21:07 < bridge> <ReiTW> no, missing @noby 's coding style
21:07 < bridge> <Ryozuki> and the assert rly didnt made  it easier
21:07 < bridge> <Ryozuki> its cuz i was returning a value while the function signature that noo return value
21:07 < bridge> <Ryozuki> or smth like that
21:07 < bridge> <Ryozuki> its cuz i was returning a value while the function signature had no return value
21:07 < bridge> <Ryozuki> in the generated MLIR code
21:16 < bridge> <teqq> who can come race on multeasy map
21:17 < bridge> <teqq> why
21:17 < bridge> <Voxel> This is where we talk about the develoupment of the game. If you're looking for someone to play with, feel free to request in #looking-for-group
21:32 < bridge> <—Å—É–¥–Ω—ã–π –¥–µ–Ω—å.> good idea asking for racing on multeasy in #developer
21:32 < bridge> <Voxel> i already told him that
21:34 < bridge> <—Å—É–¥–Ω—ã–π –¥–µ–Ω—å.> i wanted to joke but as you can see my sense of humour is trash
21:35 < bridge> <Voxel> sorry my bad
21:35 < bridge> <Voxel> LOL
21:35 < bridge> <—Å—É–¥–Ω—ã–π –¥–µ–Ω—å.> no its alright
21:49 < bridge> <Learath2> https://dukope.com/devlogs/papers-please/mobile/
