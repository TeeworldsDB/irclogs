00:05 < bridge> <Ryozuki> i wonder whats going on
00:05 < bridge> <Ryozuki> will check some day
00:05 < bridge> <Ryozuki> hopium
00:15 < bridge> <heinrich5991> https://gstreamer.freedesktop.org/releases/1.22/
00:15 < bridge> <heinrich5991> > 33% of GStreamer commits are now in Rust
00:45 < bridge> <Learath2> Hm, I guess the more important percentage would be the amount of code in rust
08:30 < bridge> <fokkonaut> nice documentation chillerdragon
08:34 < bridge> <chillerdragon> Sänks \:)
08:34 < bridge> <Ryozuki> looks nice
08:34 < bridge> <Ryozuki> if it was for the 0.6 it would be cool to have it on the wiki
08:35 < bridge> <Ryozuki> style wise, i think u are missing some margins in places, like after tables xd
08:41 < bridge> <chillerdragon> It is linked on the wiki twice \:D
08:41 < bridge> <chillerdragon> 
08:41 < bridge> <chillerdragon> Most of the 0.7 protocol is relevant/used in ddnet since it’s so close to 0.6But yea you are right. I sometimes do a  Tag after tables and sometimes not. I think I put margin\: 0 on everything. Good catch will probably fix that later thanks!
08:41 < bridge> <chillerdragon> But yea if I manage to finish one day I’ll continue with 0.6 then ddnet specific extensions
09:04 < bridge> <heinrich5991> yes, very interesting documentation 🙂
09:07 < bridge> <heinrich5991> wait for approval, basically
10:03 < bridge> <chillerdragon> This is a reply to some rust stuff right?
10:03 < bridge> <chillerdragon> (@heinrich5991)
10:06 < bridge> <Learath2> No. It was a reply to a new dev asking if they need to do anything more on their PR
10:13 <+ChillerDragon> o thank
11:35 < bridge> <Faulty> btw, could you reply pls in PR thread when you have time (https://github.com/ddnet/ddnet/pull/6293)
11:59 < bridge> <Itachi-kun> https://cdn.discordapp.com/attachments/293493549758939136/1068122986068062258/rn_image_picker_lib_temp_f70a2369-c9bf-4f2a-9e2b-260982a82593.jpg
11:59 < bridge> <Itachi-kun> How i can delete this options on my server
12:03 < bridge> <MilkeeyCat> In your config file? Maybe?
12:18 < bridge> <Ryozuki> @Jupeyy_Keks did u check if its not reported or if its the case that its reported using the 0.7 protocol?
12:19 < bridge> <Ryozuki> the layour changes `if(!Server()->IsSixup(ID))` depending on this
12:19 < bridge> <Ryozuki> on a per player basis
12:19 < bridge> <Ryozuki> the layout changes `if(!Server()->IsSixup(ID))` depending on this
12:20 < bridge> <JOHN William> Do you need financial support? Are you tired living from paycheck to paycheck… wanna say goodbye to 9to5? Wanna make $2000 daily $5000 weekly before your next pay check arrives? 
12:20 < bridge> <JOHN William> 
12:20 < bridge> <JOHN William> THEN ASK HOW....📥
12:20 < bridge> <JOHN William> https://t.me/+KuOs8q7WfH8zZGZk
12:20 < bridge> <Ryozuki> `if(!m_apPlayers[ID])` there is also this check, which should always pass i guess xd
12:20 < bridge> <Ryozuki> `if(!m_apPlayers[ID]) return` there is also this check, which should always pass i guess xd
12:20 < bridge> <Jupstar ✪> I've no idea. I added it where the other json stuff was parsed.. so I assume that it's already check if it's 0.6
12:21 < bridge> <Ryozuki> no it doesnt check
12:21 < bridge> <Jupstar ✪> Return sounds like it must be continue
12:21 < bridge> <Ryozuki> u gotta check it urself
12:21 < bridge> <JOHN William> Do you need financial support? Are you tired living from paycheck to paycheck… wanna say goodbye to 9to5? Wanna make $2000 daily $5000 weekly before your next pay check arrives? 
12:21 < bridge> <JOHN William> 
12:21 < bridge> <JOHN William> THEN ASK HOW....📥
12:21 < bridge> <JOHN William> https://t.me/+KuOs8q7WfH8zZGZk
12:21 < bridge> <Jupstar ✪> Mh weird, so it randomly parses 0.6 and 00.7 stuff in the client?
12:21 < bridge> <Jupstar ✪> Thought 0.7 registry is a complete new entry
12:22 < bridge> <Ryozuki> game/server/gamecontext.cpp:4315 for the json creation
12:22 < bridge> <Mahdiyar> go to the autoexec_server.cfg and  Search Line Vote Delete This Code In CFG
12:22 < bridge> <Ryozuki> @Jupeyy_Keks it doesnt randomly parse it, it just that the server reports a json object however it wants to the master
12:22 < bridge> <JOHN William> Do you need financial support? Are you tired living from paycheck to paycheck… wanna say goodbye to 9to5? Wanna make $2000 daily $5000 weekly before your next pay check arrives?THEN ASK HOW....📥
12:22 < bridge> <JOHN William> https://t.me/+KuOs8q7WfH8zZGZk
12:22 < bridge> <JOHN William> (@Jupeyy_Keks)
12:22 < bridge> <Ryozuki> and the ddnet server parse it
12:22 < bridge> <Ryozuki> i guess
12:22 < bridge> <Ryozuki> cc @heinrich5991
12:23 < bridge> <Ryozuki> u can check if the skin is 0.6 by checking for the existance of the `color_body` key iirc
12:23 < bridge> <Ryozuki> also a player may be 0.6 and another 0.7
12:23 < bridge> <Ryozuki> i would just display a default tee for 0.7
12:24 < bridge> <Ryozuki> for now
12:25 < bridge> <Ryozuki> another thing may be that the buffer is too small for the data
12:25 < bridge> <Ryozuki> i havent rly calculated exactly
12:26 < bridge> <Ryozuki> each player has a buffer of 512 bytes char aExtraPlayerInfo[512];
12:26 < bridge> <Ryozuki> total for server info is `16384`
12:27 < bridge> <Jupstar ✪> Mh yeah I dunno. If that's the case I'd expect that the master server warns about it
12:27 < bridge> <Jupstar ✪> But maybe our impl doesn't.
12:27 < bridge> <Ryozuki> yeah i would guess the master would reject invalid json
12:27 < bridge> <Ryozuki> which probs does if it uses serde
12:28 < bridge> <Ryozuki> anyway, the server is free to report whathever it wants
12:28 < bridge> <Jupstar ✪> And then it uses vanilla fetching instead, which obv has no skins?
12:28 < bridge> <Ryozuki> within a size limit idk which one is rn
12:28 < bridge> <Ryozuki> idk, i think it fetches with json from the server, and if its invalid its vanilla?
12:29 < bridge> <Ryozuki> heinrich should know
12:35 < bridge> <JOHN William> Do you need financial support? Are you tired living from paycheck to paycheck… wanna say goodbye to 9to5? Wanna make $2000 daily $5000 weekly before your next pay check arrives? 
12:35 < bridge> <JOHN William> 
12:35 < bridge> <JOHN William> THEN ASK HOW....📥
12:35 < bridge> <JOHN William> https://t.me/+KuOs8q7WfH8zZGZk
13:32 < bridge> <JOHN William> Do you need financial support? Are you tired living from paycheck to paycheck… wanna say goodbye to 9to5? Wanna make $2000 daily $5000 weekly before your next pay check arrives? 
13:32 < bridge> <JOHN William> 
13:32 < bridge> <JOHN William> THEN ASK HOW....📥
13:32 < bridge> <JOHN William> https://t.me/+KuOs8q7WfH8zZGZk
15:35 < bridge> <Ryozuki> ```csharp
15:35 < bridge> <Ryozuki> Span<int> numbers = stackalloc int[length];
15:35 < bridge> <Ryozuki> ```
15:35 < bridge> <Ryozuki> till u can stack allocate on c#
15:35 < bridge> <Ryozuki> i wonder if u can do that in java rn
15:36 < bridge> <heinrich5991> I don't quite get what you're asking
15:37 < bridge> <heinrich5991> if the server doesn't provide valid json, the register request is rejected
15:37 < bridge> <Ryozuki> @heinrich5991 if the server reports invalid json to the master, does it instead fetch using the vanilla protocol
15:37 < bridge> <heinrich5991> only accidentally
15:37 < bridge> <Ryozuki> do u have logs of this
15:37 < bridge> <Ryozuki> specifically from ddnet official servers
15:37 < bridge> <Ryozuki> if they reported invalid json
15:38 < bridge> <Ryozuki> would be useful to know if this is the cause
15:38 < bridge> <heinrich5991> not sure, probably not
15:38 < bridge> <Ryozuki> the problem is apparentl sometimes skins arent reported
15:38 < bridge> <Ryozuki> according to jupstar
15:39 < bridge> <heinrich5991> you can check whether it's vanilla server info
15:39 < bridge> <heinrich5991> by checking e.g. for the presence of the map sha256
15:39 < bridge> <heinrich5991> ah yea
15:39 < bridge> <heinrich5991> you could do that for the historic server info
15:39 < bridge> <heinrich5991> I should make sure to never request legacy server info for servers registering on https masters
15:58 < bridge> <JOHN William> Do you need financial support? Are you tired living from paycheck to paycheck… wanna say goodbye to 9to5? Wanna make $2000 daily $5000 weekly before your next pay check arrives?THEN ASK HOW....📥
15:58 < bridge> <JOHN William> https://t.me/+KuOs8q7WfH8zZGZk
15:58 < bridge> <JOHN William> (@heinrich5991)
16:03 < bridge> <JOHN William> Do you need financial support? Are you tired living from paycheck to paycheck… wanna say goodbye to 9to5? Wanna make $2000 daily $5000 weekly before your next pay check arrives? 
16:03 < bridge> <JOHN William> 
16:03 < bridge> <JOHN William> THEN ASK HOW....📥
16:03 < bridge> <JOHN William> https://t.me/+KuOs8q7WfH8zZGZk
16:36 < bridge> <Itachi-kun> Everyone can use /r how can I fix this
16:38 < bridge> <Ryozuki> https://www.calligrapher.ai/
16:38 < bridge> <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1068193249166098573/image.png
16:38 < bridge> <Ryozuki> this looks rly gud
16:41 < bridge> <deen> https://ddnet.org/settingscommands/ `sv_practice 0` in your server config
16:47 < bridge> <heinrich5991> does someone know a good buffer ringbuffer library for rust?
16:47 < bridge> <heinrich5991> I want to have a 2048 byte buffer
16:47 < bridge> <heinrich5991> and read network packets into it
16:47 < bridge> <Ryozuki> hmm
16:47 < bridge> <Ryozuki> stack?
16:47 < bridge> <heinrich5991> and then remove them again and pass them to the application
16:48 < bridge> <Ryozuki> iirc a vecdeque can do
16:48 < bridge> <heinrich5991> it seems I can't get a reference to the uninitialized part with vecdeque
16:48 < bridge> <heinrich5991> which I need for reading from the network
16:49 < bridge> <Jupstar ✪> Vecdequeue is a growable Ringbuffer
16:49 < bridge> <Jupstar ✪> But I assume u mean static sized
16:49 < bridge> <heinrich5991> dynamic is fine
16:50 < bridge> <heinrich5991> but I need access to the uninit parts so I can pass it to a `recv` function
16:50 < bridge> <heinrich5991> `let read: usize = recv(ringbuffer.uninit_part()); ringbuffer.assume_written(read);`
16:51 < bridge> <heinrich5991> I suppose I could write it myself if I can't find a library
16:52 < bridge> <Jupstar ✪> I also didn't find a multiset like cpp offers
16:52 < bridge> <heinrich5991> what's a multiset?
16:52 < bridge> <heinrich5991> ah, hashmap<something, int>?
16:52 < bridge> <Jupstar ✪> A set that allows dublipcate keys
16:52 < bridge> <Jupstar ✪> But sorted
16:53 < bridge> <Ryozuki> hmm what about a vec of maybeuninit that u transmute
16:53 < bridge> <Ryozuki> or smth
16:53 < bridge> <Ryozuki> https://doc.rust-lang.org/nightly/std/mem/union.MaybeUninit.html#initializing-an-array-element-by-element
16:53 < bridge> <heinrich5991> https://doc.rust-lang.org/std/vec/struct.Vec.html#method.spare_capacity_mut
16:53 < bridge> <heinrich5991> vec allows access to uninitialized parts
16:54 < bridge> <Ryozuki> and vecdeque not?
16:54 < bridge> <heinrich5991> not as far as I can see
16:54 < bridge> <Jupstar ✪> Saddest
16:55 < bridge> <heinrich5991> so ima roll my own I guess
16:55 < bridge> <Jupstar ✪> Ez
16:56 < bridge> <Ryozuki> @heinrich5991 doesnt recv accept a writer?
16:56 < bridge> <Ryozuki> isnt that better
16:56 < bridge> <heinrich5991> recv usually doesn't accept a writer
16:56 < bridge> <Jupstar ✪> I can give u cpp version of u want to port
16:56 < bridge> <heinrich5991> gimme
16:57 < bridge> <Jupstar ✪> In 45 min I'm home
16:57 < bridge> <heinrich5991> @Ryozuki https://doc.rust-lang.org/std/net/struct.TcpStream.html#method.read-1
16:57 < bridge> <Jupstar ✪> Or i give u access to my gitlab
16:57 < bridge> <heinrich5991> secret jupstar projects?
16:57 < bridge> <heinrich5991> sign me up
16:58 < bridge> <Jupstar ✪> Yes xd
16:58 < bridge> <Jupstar ✪> Give me 5min
16:58 < bridge> <heinrich5991> user is https://gitlab.com/heinrich5991
16:58 < bridge> <Jupstar ✪> It's self hosted. I'll pm u
16:59 < bridge> <gerdoe> is it necessary to separate proc-macro crates?
17:00 < bridge> <gerdoe> like i can't do this in one file
17:00 < bridge> <gerdoe> can i?
17:04 < bridge> <Ryozuki> correct  me if im wrong, but once the ringbuffer is filled, u wouldnt get more data
17:04 < bridge> <Ryozuki> what u trying to make exactly?
17:04 < bridge> <Ryozuki> u can always have the vecdeque, and a stack array where u recv from and then u push it to the deque
17:06 < bridge> <Ryozuki> https://github.com/rust-lang/rust/pull/102689
17:06 < bridge> <Ryozuki> next release
17:11 < bridge> <Ryozuki> why secret
17:11 < bridge> <Ryozuki> are u hiding the next gen graphic algorithms? xd
17:12 < bridge> <Jupstar ✪> In the past I wrote a game engine
17:12 < bridge> <Jupstar ✪> Now I'm free and believe in open source
17:12 < bridge> <Jupstar ✪> But it's not educational anyway
17:12 < bridge> <Jupstar ✪> Even if I wrote few games xd
17:18 < bridge> <Jupstar ✪> But it's i consider it educational anyway
17:19 < bridge> <Ryozuki> https://blog.rust-lang.org/2023/01/26/Rust-1.67.0.html
17:19 < bridge> <Jupstar ✪> But i consider it educational anyway
17:19 < bridge> <Jupstar ✪> I hope some nightly features are in xd
17:19 < bridge> <Jupstar ✪> I use way to many
17:20 < bridge> <Ryozuki> std::sync::mpsc implementation updated
17:20 < bridge> <Ryozuki> 
17:20 < bridge> <Ryozuki> Rust's standard library has had a multi-producer, single-consumer channel since before 1.0, but in this release the implementation is switched out to be based on crossbeam-channel. This release contains no API changes, but the new implementation fixes a number of bugs and improves the performance and maintainability of the implementation.
17:20 < bridge> <Ryozuki> --
17:20 < bridge> <Ryozuki> something unbelievable in the c++ world
17:20 < bridge> <Learath2> Well nowadays it is believable. Bug wg21 would give it a new name 😄
17:21 < bridge> <Ryozuki> https://github.com/rust-lang/rust/blob/stable/RELEASES.md#version-1670-2023-01-26
17:21 < bridge> <Jupstar ✪> But it has no API change
17:21 < bridge> <Learath2> So you'd end up with `std::sync::mpsc_ng` or sth
17:21 < bridge> <Ryozuki> no, but it improves perf
17:21 < bridge> <Jupstar ✪> But why should cpp not allow that
17:21 < bridge> <Ryozuki> ABI
17:21 < bridge> <Learath2> Some C++ containers have complexity requirements in the standard
17:22 < bridge> <Ryozuki> https://cor3ntin.github.io/posts/abi/
17:22 < bridge> <Ryozuki> i remembered this xd
17:22 < bridge> <Learath2> So you are stuck with a specific implementation of unordered_map 😛
17:22 < bridge> <Jupstar ✪> But i assume only if u want strict standard?
17:23 < bridge> <Jupstar ✪> GCC can wrap their impl in agcc namespace and still link it
17:23 < bridge> <Learath2> Which is what all the compilers implement. There have rarely been intentional departures from the standard
17:23 < bridge> <Ryozuki> this one seems important for ffi https://github.com/rust-lang/rust/pull/97971/
17:23 < bridge> <Ryozuki> was added
17:24 < bridge> <Jupstar ✪> Isn't there a GCC standard
17:24 < bridge> <Learath2> The only one I can remember off the top of my head is the SSO until it became allowed
17:24 < bridge> <Ryozuki> oh look
17:24 < bridge> <Ryozuki> since field ordering is rust impl defined
17:24 < bridge> <Ryozuki> they optimized it in this release
17:24 < bridge> <Ryozuki> https://github.com/rust-lang/rust/pull/102750/
17:24 < bridge> <Jupstar ✪> what else does gnu++17 mean?
17:24 < bridge> <Learath2> Yeah, but they usually extend the standard, they don't really override it
17:24 < bridge> <Jupstar ✪> If it's just cpp17
17:25 < bridge> <Learath2> gnu++17 has VLAs like C and a couple other things
17:25 < bridge> <Learath2> I think they also add restrict
17:26 < bridge> <Ryozuki> > The layout of repr(Rust) types now groups m*2^n-sized fields with equivalently aligned ones. This is intended to be an optimization, but it is also known to increase type sizes in a few cases for the placement of enum tags. As a reminder, the layout of repr(Rust) types is an implementation detail, subject to change.
18:23 < bridge> <Jupstar ✪> mhh thats kinda sad imo, i think it would be an easy work around against c++ standard requirements
19:33 < bridge> <Ryozuki> https://news.ycombinator.com/item?id=34532983
19:33 < bridge> <Ryozuki> @deen your old company this time :o
19:33 < bridge> <Ryozuki> not many eu companies laid off but sap did
20:29 < bridge> <heinrich5991> that's correct
20:29 < bridge> <heinrich5991> I'm trying to minimize data copies
20:29 <+ChillerDragon> sap bankrupt since deen is not carrying anymore
20:29 < bridge> <heinrich5991> this introduces more copies which I'm trying to avoid
20:34 < bridge> <Learath2> Why? You should maximize safety
20:34 < bridge> <Learath2> And code prettiness
20:38 < bridge> <Jupstar ✪> @heinrich5991 are u writing a quic backend?
20:42 < bridge> <Chairn> https://www.youtube.com/watch?v=MWBfmmg8-Yo
20:42 < bridge> <Chairn> hmm, two traits that we could use for templated mem_zero and mem_copy 🙂
20:43 < bridge> <heinrich5991> yes
20:44 < bridge> <Jupstar ✪> with quinn?
20:44 < bridge> <heinrich5991> I'm also trying to maintain safety
20:44 < bridge> <heinrich5991> I decided to try quiche
20:44 < bridge> <Jupstar ✪> mh ok, i used quinn
20:45 < bridge> <heinrich5991> what were your considerations on which library to choose
20:45 < bridge> <heinrich5991> ?
20:45 < bridge> <Jupstar ✪> i guess tokio integration? i read some stackoverflow or reddit
20:45 < bridge> <Jupstar ✪> cant remember
20:46 < bridge> <Jupstar ✪> is quiche pure rust?
20:46 < bridge> <heinrich5991> afaict, none of the libraries were pure-rust, unfortunately
20:47 < bridge> <Jupstar ✪> i think quinn is (at least for compiling)
20:47 < bridge> <Jupstar ✪> "Quinn is a pure-rust, async-compatible implementation of the IETF QUIC transport protocol."
20:49 < bridge> <Jupstar ✪> only thing i still dislike is tokio not offering a condition variable xD
20:49 < bridge> <Jupstar ✪> 
20:49 < bridge> <Jupstar ✪> rest was okish i guess
20:49 < bridge> <Jupstar ✪> 
20:49 < bridge> <Jupstar ✪> i also use tokio for async file io
20:49 < bridge> <Ryozuki> i think u need to roll ur own ringbuffer impl
20:49 < bridge> <heinrich5991> it depends on `ring`, which is not pure-rust
20:50 < bridge> <Jupstar ✪> the good thing is that u cannot mix async with normal code, so u kinda force to use async io
20:50 < bridge> <Ryozuki> the good thing is, u can maintain code prettyness and safety thanks to rust encapsulation of unsafety cc @Learath2 😏
20:50 < bridge> <Ryozuki> is it not?
20:50 < bridge> <Ryozuki> i know it has some assembly
20:50 < bridge> <heinrich5991> yep
20:50 < bridge> <Ryozuki> but everything uses ring iirc
20:50 < bridge> <Ryozuki> rustls does right
20:50 < bridge> <Jupstar ✪> "Pluggable cryptography, with a standard implementation backed by rustls and ring"
20:50 < bridge> <Jupstar ✪> u can choose apparently
20:51 < bridge> <Jupstar ✪> i used the rustls from their example
20:51 < bridge> <heinrich5991> > ring exposes a Rust API and is written in a hybrid of Rust, C, and assembly language.
20:51 < bridge> <Ryozuki> ring is audited tho btw
20:51 < bridge> <heinrich5991> I don't see other options
20:51 < bridge> <Ryozuki> why did they mix c there tho
20:51 < bridge> <Ryozuki> oh maybe its cuz its a port from something old?
20:51 < bridge> <Ryozuki> idk
20:51 < bridge> <heinrich5991> yes, openssl
20:51 < bridge> <heinrich5991> → boringssl
20:51 < bridge> <heinrich5991> → ring
20:52 < bridge> <Ryozuki> there is a dalek thing in rust
20:52 < bridge> <Ryozuki> i find it pretty funny
20:52 < bridge> <heinrich5991> because openssl has good and fast implementations of crypto primitives
20:52 < bridge> <Ryozuki> and awesome
20:52 < bridge> <Ryozuki> im a doctor who faan
20:52 < bridge> <Ryozuki> https://dalek.rs/
20:52 < bridge> <heinrich5991> (written in perl, which generates assembly code, **I heard**)
20:53 < bridge> <Ryozuki> https://github.com/dalek-cryptography
20:53 < bridge> <Ryozuki> its awesome
20:53 < bridge> <Jupstar ✪> what do i need to search for in the symbols?
20:53 < bridge> <Jupstar ✪> to check if its linked with my project
20:53 < bridge> <Ryozuki> >  dalek-cryptography is a collection of libraries providing safe, mid-level APIs for cryptographic primitives, aimed at making it faster and easier to implement cryptographic protocols such as key agreement, signatures, anonymous credentials, range proofs, and zero-knowledge proof systems.
20:53 < bridge> <Ryozuki> > 
20:53 < bridge> <Ryozuki> > Other libraries aim to provide well-designed APIs for protocol users, but do not aim to provide well-designed API for protocol implementers. The result is that implementing new protocols often requires using unsafe internal APIs which were never intended for reuse.
20:53 < bridge> <heinrich5991> check Cargo.lock, search for `name = "ring"`
20:54 < bridge> <Ryozuki> try cargo tree
20:54 < bridge> <Jupstar ✪> but if its unused its dead code isnt it
20:54 < bridge> <Ryozuki> cargp tree | grep "ring"
20:54 < bridge> <Jupstar ✪> i'd prefer to check stripped version
20:55 < bridge> <heinrich5991> idk how
20:57 < bridge> <Jupstar ✪> ```
20:57 < bridge> <Jupstar ✪>   _ZN85_$LT$ring..io..writer..LengthMeasurement$u20$as$u20$ring..io..writer..Accumulator$GT$10write_byte17h5028fc7b2b977ff8E
20:57 < bridge> <Jupstar ✪> 00000000000fc4e0 l     F .text  0000000000000004              _ZN85_$LT$ring..io..writer..LengthMeasurement$u20$as$u20$ring..io..writer..Accumulator$GT$11write_bytes17h0a8d19af71ae01d3E
20:57 < bridge> <Jupstar ✪> 00000000000fc4f0 l     F .text  0000000000000035              _ZN74_$LT$ring..io..writer..Writer$u20$as$u20$ring..io..writer..Accumulator$GT$10write_byte17ha0b1ab21820904a2E
20:57 < bridge> <Jupstar ✪> 00000000000fc530 l     F .text  0000000000000060              _ZN74_$LT$ring..io..writer..Writer$u20$as$u20$ring..io..writer..Accumulator$GT$11write_bytes17hddfc4814984ae122E
20:58 < bridge> <Jupstar ✪> 0000000000320018 l     O .data  0000000000000020              _ZN4ring4rand7urandom4fill4FILE17hefd278b0303a3e1cE
20:58 < bridge> <Jupstar ✪> 00000000000fcac0 l     F .text  0000000000000579              _ZN4ring3rsa12verification93_$LT$impl$u20$ring..signature..VerificationAlgorithm$u20$for$u20$ring..rsa..RsaParameters$GT$6verify17h5ff374f4b5b4fe5dE
20:58 < bridge> <Jupstar ✪> 
20:58 < bridge> <Jupstar ✪> ```
20:58 < bridge> <Jupstar ✪> i see some symbols that are probably related to ring, so its in indeed
20:58 < bridge> <Jupstar ✪> ah ok
20:58 < bridge> <Jupstar ✪> but it seems it doesnt expose any dynamic symbols
20:59 < bridge> <Jupstar ✪> these are from debug symbols i assume, after stripping they are gone
21:00 < bridge> <Jupstar ✪> but yeah maybe its static linked
21:00 < bridge> <Jupstar ✪> 
21:00 < bridge> <Jupstar ✪> do ppl ship stuff in crates that requires a c compiler (to build) @heinrich5991 ?
21:00 < bridge> <heinrich5991> yes
21:00 < bridge> <Jupstar ✪> i'd have thought that isnt the nicest style xD
21:00 < bridge> <Jupstar ✪> ok
21:01 < bridge> <Jupstar ✪> thats a bit sad
21:01 < bridge> <heinrich5991> and all rust quic crates fall into that category, as far as I could tell
21:01 < bridge> <heinrich5991> which is annoying
21:01 < bridge> <kio> WHERE ISSSSSSS
21:01 < bridge> <Jupstar ✪> but i guess for quinn its a matter of time? i mean if they already give an alternative
21:01 < bridge> <Jupstar ✪> cant be too hard to get away from ring/ make it optional
21:01 < bridge> <kio> https://cdn.discordapp.com/attachments/293493549758939136/1068259525397860463/image.png
21:02 < bridge> <Ryozuki> ah ye
21:02 < bridge> <Ryozuki> @deen did u update the dns for codedoc?
21:02 < bridge> <kio> :brownbear:
21:02 < bridge> <heinrich5991> famous last words. not really; constant-time code can only be done in assembly, I think
21:02 < bridge> <heinrich5991> I guess you could do them in rust inline assembly
21:02 < bridge> <heinrich5991> that would work
21:03 < bridge> <Jupstar ✪> are such packages somehow flagged in crates?
21:03 < bridge> <Jupstar ✪> i'd like to know if i have other packages like this
21:03 < bridge> <heinrich5991> using C compiler?
21:03 < bridge> <heinrich5991> no
21:03 < bridge> <Ryozuki> @heinrich5991 https://crates.io/crates/subtle
21:03 < bridge> <Ryozuki> made by the dalek guys i told u
21:03 < bridge> <Ryozuki> https://docs.rs/subtle/2.4.1/subtle/
21:03 < bridge> <heinrich5991> break your C compiler and check whether the clean build still works
21:03 < bridge> <heinrich5991> e.g. put a broken C compiler in your path
21:04 < bridge> <Jupstar ✪> no need, i use rustls and they also use ring
21:04 < bridge> <Ryozuki> > This code is a low-level library, intended for specific use-cases implementing cryptographic protocols. It represents a best-effort attempt to protect against some software side-channels. Because side-channel resistance is not a property of software alone, but of software together with hardware, any such effort is fundamentally limited.
21:04 < bridge> <Ryozuki> > 
21:04 < bridge> <Ryozuki> > USE AT YOUR OWN RISK
21:05 < bridge> <JOHN William> Do you need financial support? Are you tired living from paycheck to paycheck… wanna say goodbye to 9to5? Wanna make $2000 daily $5000 weekly before your next pay check arrives? 
21:05 < bridge> <JOHN William> 
21:05 < bridge> <JOHN William> THEN ASK HOW....📥
21:05 < bridge> <JOHN William> https://t.me/+KuOs8q7WfH8zZGZk
21:06 < bridge> <JOHN William> Do you need financial support? Are you tired living from paycheck to paycheck… wanna say goodbye to 9to5? Wanna make $2000 daily $5000 weekly before your next pay check arrives? 
21:06 < bridge> <JOHN William> 
21:06 < bridge> <JOHN William> THEN ASK HOW....📥
21:06 < bridge> <JOHN William> https://t.me/+KuOs8q7WfH8zZGZk
21:08 < bridge> <kio> @deen tell me if u will update :p
21:08 < bridge> <Ryozuki> i cant do nothing from my side
21:08 < bridge> <Ryozuki> cloudflare dns needs to be updated
21:08 < bridge> <Jupstar ✪> is there no pure rust openssl/boringssl alternative?
21:08 < bridge> <Jupstar ✪> 
21:08 < bridge> <Jupstar ✪> i'd have thought thats a good rust use case
21:08 < bridge> <JOHN William> Do you need financial support? Are you tired living from paycheck to paycheck… wanna say goodbye to 9to5? Wanna make $2000 daily $5000 weekly before your next pay check arrives? 
21:08 < bridge> <JOHN William> 
21:08 < bridge> <JOHN William> THEN ASK HOW....📥
21:08 < bridge> <JOHN William> https://t.me/+KuOs8q7WfH8zZGZk
21:08 < bridge> <Ryozuki> @heinrich5991 do u have access too?
21:08 < bridge> <Ryozuki> rustls iirc
21:08 < bridge> <kio> i know
21:08 < bridge> <Jupstar ✪> it depends on ring
21:09 < bridge> <Ryozuki> @Jupeyy_Keks doing something like openssl/ring is a tremendous effort and requires a lot of audit
21:09 < bridge> <Ryozuki> so the only h ope is probs they update ring removing more and more C
21:09 < bridge> <Jupstar ✪> they could start with the most common implementations
21:09 < bridge> <Ryozuki> ring is the closest u have rn i think
21:10 < bridge> <Ryozuki> i mean, doesnt ring do that
21:10 < bridge> <JOHN William> Do you need financial support? Are you tired living from paycheck to paycheck… wanna say goodbye to 9to5? Wanna make $2000 daily $5000 weekly before your next pay check arrives?THEN ASK HOW....📥
21:10 < bridge> <JOHN William> https://t.me/+KuOs8q7WfH8zZGZk
21:10 < bridge> <JOHN William> (@kio)
21:10 < bridge> <Ryozuki> @Jupeyy_Keks well
21:10 < bridge> <Ryozuki> there is the dalek group i sent
21:10 < bridge> <Ryozuki> https://github.com/dalek-cryptography
21:11 < bridge> <Ryozuki> looks like they focus mostly on ellipiptic tho
21:11 < bridge> <Ryozuki> looks like they focus mostly on elliptic tho
21:12 < bridge> <Ryozuki> there is also https://github.com/RustCrypto
21:12 < bridge> <Jupstar ✪> well i just find it weird that its not easy to find out which package uses which compiler 😮
21:12 < bridge> <Ryozuki> which has a lot of stuff
21:12 < bridge> <Jupstar ✪> if i read "pure rust" i'd think its pure rust xD
21:12 < bridge> <Ryozuki> xd
21:13 < bridge> <JOHN William> Do you need financial support? Are you tired living from paycheck to paycheck… wanna say goodbye to 9to5? Wanna make $2000 daily $5000 weekly before your next pay check arrives? 
21:13 < bridge> <JOHN William> 
21:13 < bridge> <JOHN William> THEN ASK HOW....📥
21:13 < bridge> <JOHN William> https://t.me/+KuOs8q7WfH8zZGZk
21:14 < bridge> <Ryozuki> honestly its possible to not use ring
21:14 < bridge> <Ryozuki> just use some stuff from rust-crypto and subtle
21:14 < bridge> <Jupstar ✪> well i hope they get this settled in ~1 year
21:14 < bridge> <Ryozuki> why 1 year xd
21:14 < bridge> <Ryozuki> its just that the stuff is not all in 1 crate
21:14 < bridge> <Ryozuki> but in various
21:15 < bridge> <heinrich5991> I have access
21:15 < bridge> <Jupstar ✪> bcs i want to finish my project in 1 year
21:15 < bridge> <heinrich5991> what do I need to do?
21:15 < bridge> <Ryozuki> i migrated my server so u need to change the codedoc.* ip
21:15 < bridge> <heinrich5991> what project?
21:15 < bridge> <Ryozuki> @heinrich5991 copy it from wiki.ddnet.org
21:15 < bridge> <Ryozuki> A and AAAA
21:16 < bridge> <Ryozuki> ty
21:18 < bridge> <heinrich5991> why do I add both A and AAAA?
21:18 < bridge> <Ryozuki> you update them
21:18 < bridge> <heinrich5991> it's proxied by cloudflare anyway
21:18 < bridge> <Ryozuki> yes
21:18 < bridge> <Ryozuki> u change the proxy xD
21:18 < bridge> <Ryozuki> the dns
21:18 < bridge> <Ryozuki> ?
21:18 < bridge> <heinrich5991> I just wondered why I need to add both IPv4 and IPv6, one would suffice
21:19 < bridge> <Ryozuki> hmm maybe its faster with ipv6 from their side
21:19 < bridge> <Ryozuki> why not?
21:19 < bridge> <Ryozuki> maybe the proxy has even better routing with ipv6 to my server
21:19 < bridge> <heinrich5991> because two entries could get out of sync
21:19 < bridge> <Ryozuki> cmon
21:19 < bridge> <Ryozuki> ur being pedantic
21:20 < bridge> <Ryozuki> anyway i dont care dont wanna argue
21:20 < bridge> <Ryozuki> u do u
21:20 < bridge> <heinrich5991> I add both
21:20 < bridge> <heinrich5991> no worries
21:20 < bridge> <heinrich5991> but it seems weird to me
21:20 < bridge> <Ryozuki> maybe one day i lose the ipv4
21:20 < bridge> <Ryozuki> they expensive these days
21:20 < bridge> <heinrich5991> then we won't notice the problem because we added both
21:21 < bridge> <heinrich5991> only slow site loads, perhaps
21:21 < bridge> <Ryozuki> i need to get a cert on my side for it to work
21:22 < bridge> <Ryozuki> done
21:22 < bridge> <Ryozuki> hmm maybe i lost the old theme xd
21:22 < bridge> <Ryozuki> will do for now i guess
21:23 < bridge> <Ryozuki> i wanna try https://datasette.io/ with the ddnet db
21:23 < bridge> <Ryozuki> tomorrow ill check
21:23 < bridge> <heinrich5991> not sure if you actually needed certificates tbh
21:24 < bridge> <Ryozuki> probs not but on the wiki it didnt work otherwise
21:24 < bridge> <Ryozuki> actually the thing to do here would be u give me a origin cert
21:24 < bridge> <Ryozuki> but 2 lazy anyway
21:25 < bridge> <Ryozuki> @heinrich5991 i think ddnet has the full strict config on cloudflare
21:25 < bridge> <Ryozuki> so proxy - origin needs to be encrypted too
21:25 < bridge> <heinrich5991> no, unfortunately not
21:25 < bridge> <heinrich5991> only "full"
21:26 < bridge> <heinrich5991> I changed it to full (strict)
21:26 < bridge> <heinrich5991> did anything break?
21:27 < bridge> <Ryozuki> ah well its "Encrypts end-to-end, using a self signed certificate on the server"
21:27 < bridge> <Ryozuki> thats why it requires me to have a cert on my side too
21:27 < bridge> <Ryozuki> altho i just use lets encrypt a self signed would work
21:27 < bridge> <Ryozuki> no it works fine
21:27 < bridge> <Ryozuki> i just forgot to port my theme
21:27 < bridge> <Ryozuki> it was dark themed before
21:28 < bridge> <Ryozuki> oh
21:28 < bridge> <Ryozuki> if u change it to full strict wiki and codedoc will break
21:28 < bridge> <Ryozuki> because u havent provided me a origin cert
21:29 < bridge> <Ryozuki> Encrypts end-to-end, but requires a trusted CA or Cloudflare Origin CA certificate on the server
21:29 < bridge> <Ryozuki> ahh
21:29 < bridge> <Ryozuki> wait
21:29 < bridge> <Ryozuki> it doesnt break cuz im  using a trusted CA xd
21:29 < bridge> <heinrich5991> yes
21:29 < bridge> <Ryozuki> im stupid
21:34 < bridge> <Chairn> constant-time code doesn't exist on most, if not all, architectures
21:34 < bridge> <Chairn> memory access on multicore design is non deterministic
21:34 < bridge> <Chairn> interruptions are non deterministic
21:34 < bridge> <Chairn> context switches are non deterministic
21:35 < bridge> <heinrich5991> sounds irrelevant for cryptography
21:35 < bridge> <heinrich5991> the interruptions don't depend on the data
21:35 < bridge> <heinrich5991> memory access does not depend on the data being encrypted
21:36 < bridge> <heinrich5991> context switches don't happen during encryption, except interrupts which don't depend on data
21:43 < bridge> <Chairn> is very relevant for cryptography, that's how most hardware attacks work
21:48 < bridge> <heinrich5991> can you give an example?
21:54 < bridge> <Chairn> https://mimoza.marmara.edu.tr/~msakalli/cse466_09/cache%20timing-20050414.pdf
21:55 < bridge> <Chairn> Substitution boxes are often the target of such attacks
22:06 < bridge> <heinrich5991> is the rest of my argumentation valid?
22:07 < bridge> <heinrich5991> interrupts, context switches?
22:16 < bridge> <Chairn> you need context switches on monocore for timing attacks, context switches are based on timer interruptions
22:16 < bridge> <Chairn> for multicore, you don't need those
22:16 < bridge> <Chairn> but this point is false for AES for instance
22:17 < bridge> <Chairn> depends on implementation, you can do it without lookup table, but then code path is also data dependant
22:27 < bridge> <Chairn> actually, context switches can be triggered by any external event that the OS needs to handle
22:29 < bridge> <heinrich5991> yep
22:29 < bridge> <heinrich5991> but since that doesn't depend on the data, it can't be used to extract the data
22:30 < bridge> <heinrich5991> it needs data-dependent timings from elsewhere
22:30 < bridge> <heinrich5991> it can only be measure to use the data-dependent timings
22:30 < bridge> <heinrich5991> it can only be used to measure the data-dependent timings
23:02 < bridge> <Ryozuki> i proudly present https://ddstats.org/
23:02 < bridge> <Ryozuki> (its not the old project)
23:03 < bridge> <Ryozuki> i setup a instance with datasette
23:03 < bridge> <Ryozuki> so u can do all the queries u want
23:03 < bridge> <Ryozuki> against today ddnet database
23:03 < bridge> <Ryozuki> and generate graphs!
23:06 < bridge> <Jupstar ✪> Epic
23:07 < bridge> <Jupstar ✪> Show some examples xd
23:11 < bridge> <Ryozuki> https://ddstats.org/ddnet-0587c26?sql=select%0D%0A++Map%2C%0D%0A++count%28*%29+as+Count%0D%0Afrom%0D%0A++race%0D%0Agroup+by%0D%0A++Map%0D%0Aorder+by+Count+DESC%0D%0Alimit%0D%0A++20#g.mark=bar&g.x_column=Map&g.x_type=ordinal&g.y_column=Count&g.y_type=quantitative
23:11 < bridge> <Ryozuki> xd
23:11 < bridge> <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1068292199508344862/visualization.png
23:12 < bridge> <Learath2> https://cdn.discordapp.com/attachments/293493549758939136/1068292348037054545/image.png
23:12 < bridge> <Learath2> it won't respect order for some reason
23:12 < bridge> <Ryozuki> you can also query it and it returns json
23:12 < bridge> <Ryozuki> or wiht graphql
23:12 < bridge> <Ryozuki> ye idk why :x
23:13 < bridge> <Ryozuki> if you click "copyable"
23:13 < bridge> <Ryozuki> and then fancy
23:13 < bridge> <Ryozuki> ```
23:13 < bridge> <Ryozuki> ╒═════════════════╤═════════╕
23:13 < bridge> <Ryozuki> │ Map             │   Count │
23:13 < bridge> <Ryozuki> ╞═════════════════╪═════════╡
23:13 < bridge> <Ryozuki> │ Multeasymap     │  847102 │
23:13 < bridge> <Ryozuki> │ Sunny Side Up   │  688313 │
23:13 < bridge> <Ryozuki> │ Tutorial        │  615787 │
23:13 < bridge> <Ryozuki> │ Kobra           │  494704 │
23:13 < bridge> <Ryozuki> │ LearnToPlay     │  398745 │
23:13 < bridge> <Ryozuki> │ Just2Easy       │  273273 │
23:13 < bridge> <Ryozuki> │ 4Beginners      │  256242 │
23:13 < bridge> <Ryozuki> │ Epix            │  250523 │
23:13 < bridge> <Ryozuki> │ Kobra 2         │  238256 │
23:13 < bridge> <Ryozuki> │ run_g6          │  202859 │
23:13 < bridge> <Ryozuki> │ StepByStep      │  169370 │
23:13 < bridge> <Ryozuki> │ Kobra 4         │  162996 │
23:13 < bridge> <Ryozuki> │ Tsunami         │  146537 │
23:13 < bridge> <Ryozuki> │ NUT_short_race6 │  145741 │
23:13 < bridge> <Ryozuki> │ run_ankii       │  145453 │
23:13 < bridge> <Ryozuki> │ run_blue        │  138420 │
23:13 < bridge> <Ryozuki> │ Linear          │  135617 │
23:13 < bridge> <Ryozuki> │ 4Nubs           │  128939 │
23:13 < bridge> <Ryozuki> │ Gold Mine       │  119653 │
23:13 < bridge> <Ryozuki> │ Tangerine       │  117432 │
23:13 < bridge> <Ryozuki> ╘═════════════════╧═════════╛
23:13 < bridge> <Ryozuki> ```
23:13 < bridge> <Ryozuki> easy table
23:14 < bridge> <Ryozuki> https://ddstats.org/ddnet-0587c26.copyable?sql=select%0D%0A++Map%2C%0D%0A++count%28%2A%29+as+Count%0D%0Afrom%0D%0A++race%0D%0Agroup+by%0D%0A++Map%0D%0Aorder+by+Count+DESC%0D%0Alimit%0D%0A++20&_table_format=pretty
23:14 < bridge> <Ryozuki> @deen maybe ur interested in promoting this :D
23:33 < bridge> <Ryozuki> i set it up so it autoupdates everyday
23:43 < bridge> <Ryozuki> i added another visualizer that works kinda better
23:43 < bridge> <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1068300220724686878/image.png
23:44 < bridge> <DefaultO> 🤌
23:45 < bridge> <Ryozuki> gotta purge cache for it to appear tho xd
23:58 < bridge> <heinrich5991> why are the bars of different widths?
