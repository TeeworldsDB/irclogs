00:06 < bridge> <zhn> @fokkonaut hey did you find the way around targetx/y zoom problem?
00:50 < bridge> <chillerdragon> No tell me more
00:50 < bridge> <chillerdragon> I think something went viral a bit which increased player count. deen mentioned that iirc
00:51 < bridge> <chillerdragon> F
01:12 < ws-client> <ChillerDragon> why did you add this btw @jxsl13 https://github.com/teeworlds-go/huffman/blob/b632fb8631af0ef31d72c36a9fed1e1001496b4c/.github/workflows/main.yml#L17-L22
01:14 < bridge> <jxsl13> syntax check on readme.md changes usually not that interesting for compulation
01:15 < bridge> <jxsl13> compilation
01:18 < bridge> <jxsl13> so there is a global variable that is called DefaultDictionary
01:20 < bridge> <jxsl13> that is initialized with the default teeworlds frequencies upon package initialization and is more or less global state which is reused for for every constructor that does not take a custom dictionary.
01:20 < bridge> <jxsl13> that is why the tree/dictionary is not initialized upon every huffmann.Compress/Decompress call.
01:20 < bridge> <chillerdragon> Ah nice
01:21 < bridge> <jxsl13> a pointer is passed around
01:21 < bridge> <chillerdragon> Well the readme was full of bugs so it’s checked in CI too now
01:21 < bridge> <chillerdragon> I don’t see the disadvantage of the default CI what’s the problem of the CI running when just a config or text file was changed?
01:22 < bridge> <jxsl13> wasting resources
01:22 < bridge> <chillerdragon> So you are saving the planet? Xd
01:22 < bridge> <jxsl13> I do my part 😄
01:22 < bridge> <jxsl13> in a rational way
01:22 < bridge> <chillerdragon> Sure fine with me. Just took me 1 CI run to debug why the README.md wasn’t triggering CI
01:24 < bridge> <jxsl13> can you release a new version if possible
01:24 < bridge> <jxsl13> tag
01:25 < bridge> <chillerdragon> Ok
01:25 < bridge> <jxsl13> should not exactly break the api except for the small behavioral change where empty slices are accepted as well
01:25 < bridge> <jxsl13> and init is gone ._.
01:25 < ws-client> <ChillerDragon> wot init
01:26 < bridge> <jxsl13> breaks api lil bit
01:26 < bridge> <jxsl13> the method
01:26 < ws-client> <ChillerDragon> a
01:26 < ws-client> <ChillerDragon> was never user facing
01:26 < bridge> <jxsl13> well
01:26 < bridge> <jxsl13> minor version bump .____.
01:26 < bridge> <jxsl13> btw
01:27 < bridge> <jxsl13> you can click on the godoc reference badge
01:27 < bridge> <jxsl13> and jump straight to docs 😄
01:29 < ws-client> <ChillerDragon> nono we went straight to 2.0.0 @jxsl13 the user never called Init but the api changed
01:29 < ws-client> <ChillerDragon> ye i noticed its cool @jxsl13 
01:29 < bridge> <jxsl13> major updates are slightly harder
01:30 < bridge> <jxsl13> can you remove the tag again
01:30 < ws-client> <ChillerDragon> nope :p 
01:30 < ws-client> <ChillerDragon> why
01:30 < bridge> <jxsl13> add a /v2 suffix in the go.mod
01:30 < ws-client> <ChillerDragon> we can just tag again
01:30 < ws-client> <ChillerDragon> aaaa
01:30 < bridge> <jxsl13> and then add the tag again if I'm not mistaken
01:31 < bridge> <jxsl13> I'm usually below v1 in order to introduce breaking changes whenever I want, cuz lazy
01:31 < bridge> <tsfreddie> <a:catxplosion:1082715870893195274>
01:31 < bridge> <jxsl13> x)
01:31 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1720049474.png
01:31 < ws-client> <ChillerDragon> you mean this?
01:31 < bridge> <tsfreddie> chillerdragon: how do I quit my job
01:31 < bridge> <jxsl13> yes
01:31 < ws-client> <ChillerDragon> axaxaxa @tsfreddie u alr did
01:31 < bridge> <jxsl13> I mean that suffix exactly
01:32 < bridge> <tsfreddie> ok then
01:32 < ws-client> <ChillerDragon> time to send heinrich an email again xd
01:34 < bridge> <jxsl13> eeh
01:34 < bridge> <jxsl13> all imports need also to be fixed
01:34 < bridge> <tsfreddie> what? you can do that?
01:34 < ws-client> <ChillerDragon> i just noticed wtf thats annoying af
01:34 < bridge> <jxsl13> throughout the code to have that /v2 suffix
01:35 < ws-client> <ChillerDragon> thanks for the warning -.-
01:35 < bridge> <jxsl13> that's a major change for you xD
01:35 < ws-client> <ChillerDragon> i guess we ping heinrich again 
01:35 < bridge> <jxsl13> https://go.dev/doc/modules/major-version
01:36 < bridge> <jxsl13> and update the readme D:
01:36 < bridge> <jxsl13> /v2@latest
01:36 < bridge> <jxsl13> ._.
01:37 < bridge> <teroristbaba> Translate yapabiliyormu
01:37 < bridge> <jxsl13> denied
01:37 < bridge> <teroristbaba> Okey
01:39 < ws-client> <ChillerDragon> i will get banned from go  packages one day for sure
01:39 < ws-client> <ChillerDragon> i renamed the protocol repo 3 times on github my lsp auto import was trippin hard
01:39 < ws-client> <ChillerDragon> now i recreated one tag 3 times xd
01:39 < bridge> <jxsl13> ad long as nobody pulled
01:40 < bridge> <jxsl13> is fine xD
01:40 < bridge> <jxsl13> or imported
01:41 < bridge> <jxsl13> ._:
01:41 < ws-client> <ChillerDragon> the latest didnt work sos
01:41 < bridge> <jxsl13> lemme fix the readme
01:41 < ws-client> <ChillerDragon> thank
01:44 < bridge> <jxsl13> I don't even know where that's coming from
01:44 < bridge> <jxsl13> https://cdn.discordapp.com/attachments/293493549758939136/1258206738587582505/Bildschirmfoto_2024-07-04_um_01.43.36.png?ex=668733d6&is=6685e256&hm=9f9de33ff84b3dbe6622574face687235df6680f6f082c7848f18e8fbf970f41&
01:44 < bridge> <jxsl13> xD
01:44 < bridge> <jxsl13> hard tabs
01:44 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1720050267.png
01:44 < ws-client> <ChillerDragon> me neither
01:44 < ws-client> <ChillerDragon> discord banned me from seeing their images
01:45 < bridge> <jxsl13> rip
01:45 < ws-client> <ChillerDragon> common discord L
01:45 < bridge> <jxsl13> gimme rot access to yout image server thingy
01:45 < bridge> <jxsl13> root
01:46 < ws-client> <ChillerDragon> <:justatest:572499997178986510>
01:46 < bridge> <jxsl13> so that I can upload my screenshot
01:46 < ws-client> <ChillerDragon> that is my vps
01:46 < bridge> <jxsl13> xd
01:46 < ws-client> <ChillerDragon> i upload with  `scp`
01:47 < ws-client> <ChillerDragon> i saw now
01:47 < ws-client> <ChillerDragon> ye that is `go fmt` for you @jxsl13 
01:47 < ws-client> <ChillerDragon> if you break format in readme the CI will slap your ass now
01:48 < bridge> <jxsl13> indeed
01:48 < ws-client> <ChillerDragon> your electron editor seems opinionated about tabs vs spaces in a fakin markdown file xd
01:50 < bridge> <jxsl13> that's vs code D:
01:50 < bridge> <jxsl13> I literally don't even know where that's coming from
01:50 < ws-client> <ChillerDragon> have you tried emacs?
01:50 < bridge> <jxsl13> first time seeing
01:50 < bridge> <jxsl13> I heard of emacs
01:51 < bridge> <jxsl13> and then I used sublime text and now vs code
01:51 < bridge> <jxsl13> will not touch anything else for now
01:51 < bridge> <jxsl13> opened a pr
01:51 < ws-client> <ChillerDragon> merged
01:52 < bridge> <jxsl13> ci works, nice
01:52 < bridge> <jxsl13> retag?
01:52 < ws-client> <ChillerDragon> <:poggers2:1008007455936094328>
01:52 < ws-client> <ChillerDragon> no
01:52 < ws-client> <ChillerDragon> its only readme change
01:53 < bridge> <jxsl13> :'/
01:53 < ws-client> <ChillerDragon> the build was already passing on the last commit
01:53 < bridge> <jxsl13> that's godoc relevant readme
01:53 < ws-client> <ChillerDragon> omagawd xd
01:53 < bridge> <jxsl13> it's versionng the docs
01:53 < ws-client> <ChillerDragon> nah we fix it in v3
01:53 < bridge> <jxsl13> pls
01:53 < ws-client> <ChillerDragon> omg i did 
01:53 < bridge> <jxsl13> lord
01:53 < ws-client> <ChillerDragon> so many rlses
01:53 < bridge> <jxsl13> xD
01:53 < ws-client> <ChillerDragon> im brushing my teeth sec
01:54 < bridge> <jxsl13> now let me do my go do url magic
01:54 < bridge> <jxsl13> go doc
01:54 < bridge> <jxsl13> to update go docs
01:55 < bridge> <jxsl13> :'/
01:57 < ws-client> <ChillerDragon> i wonder if heinrich got 5 emails now xd
01:57 < ws-client> <ChillerDragon> rlsd
02:00 < ws-client> <ChillerDragon> @jxsl13 all good now right?
02:00 < ws-client> <ChillerDragon> then ill go find some coffee
02:00 < bridge> <jxsl13> no magic today
02:01 < ws-client> <ChillerDragon> arent u tired jxsl?
02:01 < ws-client> <ChillerDragon> what time is it? 1 am?
02:01 < bridge> <jxsl13> 2am
02:02 < ws-client> <ChillerDragon> woah
02:09 < bridge> <jxsl13> importing works just fine
02:09 < bridge> <jxsl13> https://pkg.go.dev/github.com/teeworlds-go/huffman/v2
02:21 < bridge> <learath2> what are you making teeworlds-go for? just the lulz?
02:26 < bridge> <jxsl13> saw chiller doing it, wanted to help a little bit
02:26 < bridge> <jxsl13> found it cool
02:36 < ws-client> <ChillerDragon> @learath2 im on some mission to spread teeworlds to as many languages as i can before i rq coding
02:36 < ws-client> <ChillerDragon> so ppl can build tw projects in their fav language
02:37 < bridge> <learath2> Noble quest
02:37 < ws-client> <ChillerDragon> do i see that correctly? is the client really storing empty snapshots? xd
02:39 < ws-client> <ChillerDragon> maybe after the 100 robsti refactors ddnet isnt im using tw 0.7
02:40 < bridge> <Ewan> who wants to play some teeworlds of any kind
02:40 < bridge> <Ewan> bored rn
02:40 < bridge> <Ewan> #developer lfg
02:40 < ws-client> <ChillerDragon> but from my dbg prints it looks like it uses the m_aSnapshotIncomingData buffer as payload for snap empty and stores it xd
02:40 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1720053493.png
02:42 < ws-client> <ChillerDragon> i wonder if the server creates deltas against empty snapshots
02:43 < ws-client> <ChillerDragon> i somehow do not want to store empty snapshots with some old payload xd
02:44 < ws-client> <ChillerDragon> also is it weird that the hexdump kinda makes sense to me xd i stared so long at debug prints i can read most (non huffman compressed) tw traffic as hex xd
03:03 < ws-client> <ChillerDragon> Nvm it doesnt use old data. That was a bug in the teeworlds engine xd. It uses the empty snapshot as incoming delta and then does store basically the old snapshot.
03:04 < ws-client> <ChillerDragon> so its wasting a bit of storage imo but at least its not doing anything weird
04:15 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1720059289.png
04:15 < ws-client> <ChillerDragon> is that a bug?
06:19 < bridge> <chillerdragon> i am hitting this assert in my custom fork quite often and its pretty annoying https://github.com/ddnet/ddnet/blob/610381d29e560ec64f2f42f6be9fdddc7f6df0f9/src/engine/shared/http.cpp#L421
06:19 < bridge> <chillerdragon> 
06:19 < bridge> <chillerdragon> am i doing something wrong? its either me having network hiccups or the backend dieing. Either way i dont want my client to crash.
06:19 < bridge> <chillerdragon> not sure if im just using the every changing http code incorrectly https://github.com/chillerbot/chillerbot-ux/blob/a39c3f65f65c4d90c377d68bf893526e2a3ed48f/src/game/client/components/chillerbot/chillerbotux.cpp#L43-L59
06:28 < bridge> <chillerdragon> Ok got it https://github.com/chillerbot/chillerbot-ux/commit/3204a95fd7e137151db0ddbf863692a784265023 i guess i was doing the state handling wrong
06:41 < ws-client> <ChillerDragon> so much chat.zillyhuhn.com downtime these days yikes. Im bakk!
06:41 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1720068089.png
06:48 < bridge> <pouuutre> Забирайте S.T.A.L.K.E.R 2 предзаказ на свой Steam Бесплатно https://tinylinks.ru/i27qq не знаю баг это или нет но я забрал
06:56 < bridge> <fokkonaut> Wdym?
07:31 < bridge> <teero777> gm
07:31 < bridge> <ryozuki> gm
07:32 < bridge> <teero777> TargetXY scales with the zoom nowadays which is very odd since you can hit less angles when zoomed in due to the scaling of integers. So when you zoom in/out your aim changes
07:33 < bridge> <fokkonaut> Ah, yea that thing
07:33 < bridge> <fokkonaut> No, I haven't looked into that since heinrich seems unbothered.
08:20 < ws-client> <ChillerDragon> @teero777 holy shit that sounds bad
08:20 < ws-client> <ChillerDragon> so if i aim lock some nasty edge and then do a quick zooz i might fail the hook?
08:30 < bridge> <Ewan> yes
09:08 < bridge> <Ewan> ddnet fps on my setup sucks so bad
09:08 < bridge> <Ewan> 400-500 fps but feels very choppy
09:09 < bridge> <fokkonaut> There's an issue already
09:09 < bridge> <Ewan> theoretically vsync is disabled and the game is renning in real full-screen mode but it doesn't feel that way
09:09 < bridge> <Ewan> theoretically vsync is disabled and the game is running in real full-screen mode but it doesn't feel that way
09:09 < bridge> <fokkonaut> https://github.com/ddnet/ddnet/issues/8452
09:39 < bridge> <milkeeycat> i dunno how but i made this by shooting once in tp thingy for grenade :justatest:
09:39 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1258326283948003342/image.png?ex=6687a32c&is=668651ac&hm=c164a9f05cf56835ad611ff237c3c0765f57c74c6fbe6dfbd441661bbbb74a6c&
09:41 < bridge> <teero777> Duplicating entities?
09:41 < bridge> <teero777> you only shot once?
09:41 < bridge> <milkeeycat> yes
09:41 < bridge> <teero777> weird
09:42 < bridge> <milkeeycat> but it stops when i look away from tp thingy
09:42 < bridge> <milkeeycat> even though i didn't hold shoot
09:42 < bridge> <milkeeycat> :thonk:
09:45 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1258327879146799157/wot.mp4?ex=6687a4a8&is=66865328&hm=9ea9a89d9beba5ec12042e9602a006938d2a4fca160caddd32e9077fac20936f&
10:32 < bridge> <fokkonaut> antiping? probably the client trying to predict which teleporter next
10:35 < bridge> <milkeeycat> same happens without antiping
10:49 < bridge> <chillerdragon> Classic duplication glitch. Back in 2018 we used to do that with carpets … oh wait wrong game
10:55 < bridge> <heinrich5991> chillerdragon: you can simply keep an empty init function
10:55 < bridge> <heinrich5991> so that there's no breaking change
11:05 < bridge> <milkeeycat> I just held shoot button before pressing spec and it was shooting when I was in spec :pepeW:
11:48 < bridge> <tsfreddie> Does other player see the same thing
11:49 < bridge> <tsfreddie> would be pretty crazy if we really have a duplication glitch which seems pretty unlikely
12:27 < bridge> <zhn> why did anyone want to scale it with zoom as multiplier
12:29 < bridge> <heinrich5991> having it as an unscaled world position is nice for some things
12:30 < bridge> <heinrich5991> the server knows where the client points to
12:31 < bridge> <egyt> Failed to bridge media: attachment too large (48141924 > 20000000)
12:31 < bridge> <egyt> 
12:31 < bridge> <egyt> Yum.
12:34 < bridge> <egyt> Hmmm
12:38 < bridge> <egyt> Do I have something to do now?
12:38 < bridge> <0xdeen> Nope
12:41 < bridge> <egyt> Not even updating a translation?
12:41 < bridge> <egyt> Not even updating the translation?
12:41 < bridge> <0xdeen> no, it's just a bug fix release
12:41 < bridge> <0xdeen> no translation changes
12:41 < bridge> <egyt> Okaay
12:42 < bridge> <heinrich5991> https://github.com/teeworlds/teeworlds/issues/2071
12:42 < bridge> <heinrich5991> was thought to be fixed 5 years ago. but it wasn't ^^
12:44 < bridge> <zhn> is there any chance to revert this change btw?
12:44 < bridge> <heinrich5991> there's a chance to fix the bug
12:44 < bridge> <heinrich5991> but I think it's good that the server knows where the client points to
12:44 < bridge> <zhn> which one?
12:44 < bridge> <heinrich5991> that your angle depends on the zoom level
12:45 < bridge> <zhn> couldn't we just add zoom multiplier as extended attribute in the past xd
12:45 < bridge> <heinrich5991> why should the server do the calculation there?
12:46 < bridge> <heinrich5991> it seems much more well-defined for the client to tell the server where exactly it is pointing
12:46 < bridge> <zhn> why would you need clients sending two different type of targetxy?
12:46 < bridge> <heinrich5991> up-to-date clients only send one type of targetxy, no?
12:46 < bridge> <zhn> yeah but what about other clients huh
12:47 < bridge> <heinrich5991> you can recognize them based on the version number, if you need to
12:48 < bridge> <zhn> anyway its strange to change players input behaviour that old servers can rely on
12:48 < bridge> <heinrich5991> is there a server that relied on that?
12:49 < bridge> <zhn> i bet there was
12:49 < bridge> <zhn> at least fokkonaut was mad when this came out
12:49 < bridge> <heinrich5991> I'd think the situation improved with this change
12:49 < bridge> <heinrich5991> no longer needing to rely on brittle hacks to determine the actual cursor position
12:49 < bridge> <reitw> when will 0.7 support be dropped
12:50 < bridge> <heinrich5991> no plans. why do you ask? @reitw
12:50 < bridge> <reitw> cuz there's no reason to still support a dead game
12:50 < bridge> <zhn> so m_Pos + m_Target is hacky?
12:50 < bridge> <heinrich5991> please take your flamebait elsewhere
12:50 < bridge> <zhn> and m_Zoom multiplier
12:51 < bridge> <reitw> ig there might be features that anyone would love to be implemented that requires breaking the compat with 0.7 ?
12:51 < bridge> <heinrich5991> let's talk about it once we get that hypothetical feature idea
12:51 < bridge> <reitw> not really flamebaits but facts, anyone knows how dead 0.7 is sadly
12:51 < bridge> <heinrich5991> this discussion isn't interesting, we've had it too many times
12:51 < bridge> <zhn> vanilla players try to revive it though
12:52 < bridge> <zhn> by playing only on aeon servers and refusing to enter bridge ones xd
12:52 < bridge> <reitw> there's prob less than 100 or even 50 players
12:52 < bridge> <heinrich5991> please take this discussion to #off-topic if you want to continue it
12:53 < bridge> <heinrich5991> (unless you have new information, which I doubt)
12:53 < bridge> <zhn> yeah true
13:01 < bridge> <reitw> I don't plan to continue, but once there was mentioned stuff like a skeleton for people who wants to use ddnet base for custom mods.
13:01 < bridge> <reitw> without 0.7 ddnet could have easily worked on smth to have server-side content (idk like custom guns, etc..) allowing more cool mods to be developed by the community.
13:01 < bridge> <reitw> or even when you've all talked about the networking improvement part (to allow more efficient protections to be developed around). even if Davide has a workaround the most annoying thing that makes it more difficult to improve is the support to legacy clients
13:02 < bridge> <heinrich5991> > ddnet could have easily worked on smth to have server-side content (idk like custom guns, etc..) allowing more cool mods to be developed by the community.
13:02 < bridge> <heinrich5991> sounds cool, let's do that
13:02 < bridge> <heinrich5991> > even if Davide has a workaround the most annoying thing that makes it more difficult to improve is the support to legacy clients
13:02 < bridge> <heinrich5991> I don't even know if Davide has a workaround for 0.7 clients or not. but if not, that'd be fine
13:03 < bridge> <heinrich5991> I'm not sure what you're talking about. I don't think we had a feature declined because it couldn't work with 0.7
13:03 < bridge> <reitw> recently you've talked about having tcp first for conn handling
13:03 < bridge> <heinrich5991> we can drop 0.7 support if it stands in the way of improvement
13:03 < bridge> <heinrich5991> yes, let's do that
13:04 < bridge> <zhn> and m_Zoom multiplier would do the trick, ddnet wouldn't accept "player input changes" if it would break (ddnet) servers behaviour but this one just got through #8372
13:04 < bridge> <zhn> and m_Zoom multiplier would do the trick, ddnet wouldn't accept "player input changes" if it would break (ddnet) servers behaviour but this one just got through #7512
13:10 < bridge> <learath2> Is there really any benefit to that. Maybe it'll help with some firewall implementations. Do we even know if any of our hosters do it?
13:11 < bridge> <heinrich5991> davide said it'd help him tremendously
13:27 < bridge> <learath2> So we just accept tcp connections then close them? Or do we need it alive?
13:27 < bridge> <heinrich5991> just open a tcp connection and that's it. we can close it immediately
13:27 < bridge> <heinrich5991> like to https://ger10.ddnet.org/
13:28 < bridge> <learath2> Oh doesn't have to be the exact port?
13:28 < bridge> <heinrich5991> no, just somewhere
13:28 < bridge> <heinrich5991> I'd just fire and forget a https request
13:28 < bridge> <heinrich5991> I think we even have an issue
13:28 < bridge> <heinrich5991> I think we even have an issue for it
13:29 < bridge> <learath2> Perhaps we can also make this more generic? Allow servers to advertise a verify link
13:29 < bridge> <heinrich5991> https://github.com/ddnet/ddnet/issues/8210
13:32 < bridge> <learath2> This issue says on the same port
13:33 < bridge> <heinrich5991> @davide55 does the TCP handshake need to be on the same port number as the UDP port number?
13:35 < bridge> <0xdeen> I don't think so, TCP and UDP ports are not related in any way, you can just have each server announce it's tcp-handshake-ip-port-combo
13:36 < bridge> <heinrich5991> I would also not think so, but I'd also not have guessed that a TCP handshake would help at all
13:38 < bridge> <learath2> When I first heard it I assumed it's some bizarre firewall behaviour
13:43 < bridge> <davide55> No
13:45 < bridge> <heinrich5991> fixed it
14:06 < bridge> <chillerdragon> You talkin go Huffman? Well the api changed from an unitialized raw go struct to the weird go styled fake constructor new function. Since I have no users I don’t mind to do breaking changes anyways xd
14:09 < bridge> <chillerdragon> Imo 0.6 should be dropped
14:11 < bridge> <heinrich5991> chillerdragon: the rules also apply to you. go to #off-topic for flamebait topics
14:14 < bridge> <chillerdragon> Yo btw when bridge off-topic?
14:14 < bridge> <learath2> I thought it already was bridged
14:14 < bridge> <heinrich5991> only to matrix
14:14 < bridge> <heinrich5991> he's requesting IRC
14:14 < bridge> <learath2> ah, probably never to irc
14:14 < bridge> <chillerdragon> Matrix cring
14:14 < bridge> <heinrich5991> not on my priority list right now
14:14 < bridge> <heinrich5991> although I agree that having an IRC bridge is kinda cool
14:15 < bridge> <chillerdragon> When leak priority list
14:15 < bridge> <learath2> the bridges are literally only being used by 1 or 2 people for legitimate purposes and is only a tool to dodge moderation on discord
14:16 < bridge> <Souly> why
14:16 < bridge> <chillerdragon> Yes 50% of those 1 or 2 ppl is me and I am a big supporter of no moderation @learath2
14:16 < bridge> <Souly> its really cool
14:16 < bridge> <chillerdragon> Bugged and bloated. IRC is just so much smoother
14:16 < bridge> <learath2> irc is the very best
14:16 < bridge> <Souly> dont tell me you hate matrix bots
14:16 < bridge> <heinrich5991> good point. but I like having at least one non-proprietrary method to access our chat. I guess matrix is good enough for that
14:16 < bridge> <Souly> thats the best part
14:17 < bridge> <chillerdragon> When non proprietary map submissions
14:18 < bridge> <chillerdragon> Matrix.org instance is basically proprietary xd
14:18 < bridge> <cellegenrih> why support an redefined and at the same time, slightly abandoned engine?
14:18 < bridge> <cellegenrih> why support a redefined and at the same time, slightly abandoned engine?
14:18 < bridge> <chillerdragon> I would setup a selfhosted matrix instance but I just don’t like it enough
14:18 < bridge> <heinrich5991> chillerdragon: ddnet matrix isn't hosted on matrix.org
14:19 < bridge> <chillerdragon> Well I am using matrix.org xd
14:19 < bridge> <heinrich5991> that's on you
14:19 < bridge> <chillerdragon> Sent from element on iOS
14:19 < bridge> <chillerdragon> Yes on me
14:20 < bridge> <chillerdragon> @cellegenrih: wat engine xd
14:20 < bridge> <cellegenrih> 0.7
14:20 < bridge> <chillerdragon> Yea it’s frustrating Oy is so inactive lately
14:21 < bridge> <heinrich5991> so inactive "lately"
14:21 < bridge> <Souly> "lately" 💀
14:21 < bridge> <heinrich5991> this isn't a change
14:21 < bridge> <cellegenrih> lately
14:21 < bridge> <chillerdragon> He used to be more active imo
14:21 < bridge> <cellegenrih> brother I havent seen him since 0.7.4
14:21 < bridge> <Souly> bro went missing for over a year
14:21 < bridge> <heinrich5991> https://en.wiktionary.org/wiki/lately
14:22 < bridge> <heinrich5991> "recently" "not too long ago"
14:22 < bridge> <chillerdragon> Yea I don’t recall ever waiting this long for oy return
14:22 < bridge> <Souly> XDDD
14:22 < bridge> <chillerdragon> 4 years ago is still not too long ago right?
14:22 < bridge> <cellegenrih> Then another question, why wait for Oy?
14:22 < bridge> <cellegenrih> we have deen right here :owo:
14:22 < bridge> <cellegenrih> and heinrich
14:22 < bridge> <heinrich5991> because no one can be bothered to maintain teeworlds, including oy
14:23 < bridge> <heinrich5991> or chillerdragon
14:23 < bridge> <chillerdragon> deen and Heinrich don’t merge my 0.7 pr
14:23 < bridge> <cellegenrih> or chiller ye
14:23 < bridge> <Souly> what 0.7 pr
14:23 < bridge> <cellegenrih> vote chiller for next engine creator 2k24
14:23 < bridge> <Souly> you mean 0.7 features in ddnet?
14:23 < bridge> <chillerdragon> 0.7 support for ddnet client
14:23 < bridge> <learath2> He had a sudden burst of activity there for a sec
14:23 < bridge> <chillerdragon> Which sec?
14:24 < bridge> <chillerdragon> You mean last time when he looked at 30% of the prs?
14:24 < bridge> <learath2> I don't remember exact dates but I put in some work into editor2 and added the chat command menu thing
14:24 < bridge> <cellegenrih> oh cool, how would it work?
14:24 < bridge> <heinrich5991> for something to change, you need an active maintainer
14:24 < bridge> <chillerdragon> Bru that was like 2016
14:24 < bridge> <heinrich5991> if there's no one, there's no point in debating this
14:24 < bridge> <cellegenrih> oh cool, how would it work? (nvm)
14:25 < bridge> <heinrich5991> do you volunteer to maintain teeworlds? chillerdragon?
14:25 < bridge> <chillerdragon> Oy could assign some
14:25 < bridge> <heinrich5991> we would need a person first
14:25 < bridge> <chillerdragon> No
14:25 < bridge> <heinrich5991> find a volunteer and if I think they're even half-qualified I'll help you bring teeworlds back alive
14:26 < bridge> <cellegenrih> You guys need someone who knows the engine inside out and is willing to change certain ways the engine could function
14:27 < bridge> <chillerdragon> robsti
14:27 < bridge> <cellegenrih> Obv the 2 creators have different ideas in mind, they would rather just redo the engine from scratch
14:27 < bridge> <heinrich5991> have you asked whether he wants to maintain teeworlds, chillerdragon?
14:27 < bridge> <heinrich5991> this needs to be a volunteer
14:27 < bridge> <heinrich5991> not someone you assign
14:27 < bridge> <chillerdragon> I don’t recall I think we had that discussion before so I guess we don’t have anyone
14:28 < bridge> <cellegenrih> well thats fucked
14:28 < bridge> <heinrich5991> see. there's the problem. try to fix that
14:28 < bridge> <chillerdragon> No need for new teeworlds stuff anyways imo
14:28 < bridge> <chillerdragon> Just finally update ddnet to 0.7 and all good
14:28 < bridge> <cellegenrih> how so? to improve the way the engine could work, it needs to be done
14:29 < bridge> <chillerdragon> The game works well
14:29 < bridge> <heinrich5991> chillerdragon: if you mention porting ddnet to 0.7 without any new content one more time, I'm going to ban you for flamebiat
14:29 < bridge> <cellegenrih> Yes it does work, however it doesn't support things which can make it out of this era (0.6)
14:30 < bridge> <cellegenrih> 0.7 ain't some revolutionary aspect, where we can freely mod things or get more gamemodes without limitations
14:30 < bridge> <cellegenrih> The engine is no exception for this and modders or server devs have a harder time developing their own ideas without reinventing the wheel
14:30 < bridge> <chillerdragon> 0.7 isn’t about revolution or features it’s just keeping up with compatibility
14:31 < bridge> <cellegenrih> I swear to god, if I waited 6 years for a not revolutionary client,
14:31 < bridge> <cellegenrih> then it deserves not to be called a newer "teeworlds"
14:31 < bridge> <chillerdragon> Are you actively waiting?
14:31 < bridge> <cellegenrih> Still, yes, but not from ddnet developers naturally
14:31 < bridge> <chillerdragon> Yea the version breaking changes are a bit unfortunate
14:32 < bridge> <heinrich5991> porting ddnet to 0.7 in the current state of 0.7 is never going to happen
14:32 < bridge> <heinrich5991> I can guarantee you that. no current maintainer wants that
14:32 < bridge> <heinrich5991> it has been discussed with no ends
14:32 < bridge> <cellegenrih> I plan to make a new map editor, another is making a 2d to 3d render on their own engine using server data, one tried to make a rust compatibility
14:32 < bridge> <chillerdragon> Im seriously interested in a approximate priority list of yours @heinrich5991
14:33 < bridge> <chillerdragon> Where can I vote? Xd
14:33 < bridge> <cellegenrih> I plan to make a new map editor, another is making a 2d to 3d render on their own engine using server data, one still tries to make a fully functional rust compatibility
14:33 < bridge> <heinrich5991> chillerdragon: I'm currently extracting the compatibility code of ddnet
14:33 < bridge> <learath2> look at this PR I just made at work, negative line count, still adds an entire feature
14:33 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1258400290357379082/image.png?ex=6687e819&is=66869699&hm=d2a1ac85dedf383a6bbcb4b0a5c00a9cc97b2ca10927e628121c57246407286a&
14:33 < bridge> <heinrich5991> even though my number one priority should be implementing QUIC
14:33 < bridge> <heinrich5991> and then accounts
14:34 < bridge> <chillerdragon> I’d like to give libtw2 snaps, ddnet proxy, ddnet ip redirects, \#7777 some priority votes hehe
14:34 < bridge> <learath2> this is honestly not worth your time imo, the other two are far more important, we worked around the compatibility code for a decade now, we can handle a couple more years 😄
14:34 < bridge> <chillerdragon> I told you to proxy support instead -.-
14:35 < bridge> <heinrich5991> I know, but we're currently getting more compat code which I don't like. on two fronts, even
14:35 < bridge> <cellegenrih> add another decade to the list boys
14:35 < bridge> <heinrich5991> also, this could be reused should we want to integrate it into Jupstar's ddnet
14:35 < bridge> <chillerdragon> 10x developer
14:35 < bridge> <heinrich5991> chillerdragon: I'm accepting 20€/h to temporarily change my priority list
14:36 < bridge> <learath2> btw, how are you planning on doing it? 0.7 and 128p support all require pretty intimate knowledge of the gamestate, will you be hooking in for that or will you be trying to recreate the state on a separate module?
14:36 < bridge> <chillerdragon> Xd
14:36 < bridge> <chillerdragon> Im broke
14:36 < bridge> <heinrich5991> separate module
14:36 < bridge> <chillerdragon> But nice
14:37 < bridge> <learath2> wouldn't that in theory kinda double the work? That's why I avoided it, packing stuff up into packets, then unpacking and trying to figure out what state led to that packet sounded like such a waste of our cpu 😄
14:37 < bridge> <heinrich5991> yes.
14:37 < bridge> <heinrich5991> yes, it'll double the work
14:38 < bridge> <heinrich5991> but it's the only clean solution I see without introducing lots of work on maintenance
14:38 < bridge> <learath2> Have you considered more precise hooks where the module can directly read into the gamestate?
14:38 < bridge> <heinrich5991> optimizations can be done later. I'd prefer to start from a clean slate at first
14:39 < bridge> <learath2> but I feel most of the work you'll be doing can be avoided if we can cleanly use the real state instead of trying to recreate it
14:39 < bridge> <heinrich5991> I feel like this way my work can more easily be reused
14:39 < bridge> <learath2> I mean it's your project, feel free to go about it however you like. I just attempted this before and it really annoyed me 😄
14:40 < bridge> <heinrich5991> because it's just like 5 hooks or so, all straightforward
14:40 < bridge> <avolicious> Sounds like rust it is, no? 😄
14:41 < bridge> <heinrich5991> it's indeed rust
14:41 < bridge> <avolicious> :poggers2:
14:41 < bridge> <heinrich5991> https://cxx.rs/ is actually nice to work with
14:42 < bridge> <avolicious> Never used tho
14:42 < bridge> <avolicious> But I thought aswell of rewriting some of our gRPC/protobuf stuff into rust in ddnet source itself
14:42 < bridge> <avolicious> Currently its cpp
14:42 < bridge> <heinrich5991> it's already integrated into ddnet
14:42 < bridge> <heinrich5991> that made it easy to start
14:42 < bridge> <avolicious> Yeah I've seen that
14:43 < bridge> <chillerdragon> Yea it really is easy to use
14:43 < bridge> <avolicious> But I havent had time to do so, still working on other stuff like new website & dnsbl
14:43 < bridge> <avolicious> I will aswell open source the dnsbl server & api on KoG Github
14:43 < bridge> <avolicious> Maybe someone with rust experience wants to contribute then
14:43 < bridge> <chillerdragon> Kog GitHub wot
14:44 < bridge> <chillerdragon> URL or didn’t happen
14:44 < bridge> <learath2> I have one thing I would contribute to your dnsbl implementation 😄
14:44 < bridge> <avolicious> 👀 In the DNS answer itself?
14:44 < bridge> <learath2> Yes, technically you are supposed to be returning an `NXDOMAIN`, you aren't 😄
14:45 < bridge> <avolicious> I can change that if you need
14:45 < bridge> <learath2> It's not important, it's just something I noticed
14:46 < bridge> <avolicious> But we are not handling it, no?
14:47 < bridge> <avolicious> DDNet Source only checks if there is an A record set
14:47 < bridge> <avolicious> or empty
14:48 < bridge> <learath2> I added a small transparent proxy that allows us to whitelist some ips. While implementing that I assumed you would be sending an NXDOMAIN, took me a couple minutes to figure out what was going on
14:48 < bridge> <avolicious> Oh
14:48 < bridge> <avolicious> Now I am returning NXDOMAIN
14:49 < bridge> <p1mble> lol
14:49 < bridge> <learath2> hopefully I handled that properly 😄
14:49 < bridge> <heinrich5991> hi @p1mble
14:50 < bridge> <avolicious> Tbh I wanted to contribute to DDNet dnsbl for a long time
14:50 < bridge> <avolicious> But had no time to writeup my changes & why
14:50 < bridge> <avolicious> The server-side implementation
14:51 < bridge> <learath2> You could also create an issue for it and maybe one of us would pick it up
14:51 < bridge> <learath2> What are we lacking?
14:51 < bridge> <avolicious> Adding a more fine-grained control for dnsbl returns
14:52 < bridge> <avolicious> https://www.spamhaus.org/resource-hub/dnsbl/using-our-public-mirrors-check-your-return-codes-now./
14:52 < bridge> <avolicious> Big DNSBL provideers like Spamhaus, they add specific 127.xxx.xxx.xxx return codes in A records to give more control in mailserver setups for example
14:54 < bridge> <learath2> I think they also have TXT records right?
14:54 < bridge> <avolicious> So currently I only return the reversed ip, which is in fact compliant. But instead I want to return specific A addresses, so you can say
14:54 < bridge> <avolicious> 
14:54 < bridge> <avolicious> Okay I want to block only cloud providers, but universities I want to allow
14:54 < bridge> <avolicious> You can add status messages to TXT, but A is used for ips 😄
14:55 < bridge> <learath2> I mean to add something like a reason. I remember it being part of "standard"
14:55 < bridge> <avolicious> Mhmmm, ad hoc I cant remember any standard for TXT status reasons
14:55 < bridge> <avolicious> But I can add a reason if needed
14:55 < bridge> <avolicious> But there aswell, where do I get the reasons from? 😄
14:57 < bridge> <learath2> Well idk, it is for if you want to include more information than you can convey in an ip address. The A Record is pretty much allowed to point to any ip so you can use that as a reason/category too
14:58 < bridge> <avolicious> Back in the days, the standard was to use 127.0.0.0/8
14:58 < bridge> <learath2> RFC5782 2.1 paragraph 2 btw. It's technically a SHOULD even 😄
14:59 < bridge> <avolicious> > This RFC was published on the Internet Research Task Force (IRTF) stream. This RFC is not endorsed by the IETF and has no formal standing in the IETF standards process.
14:59 < bridge> <avolicious> 😄
15:00 < bridge> <avolicious> But yeah, I can add TXT aswell
15:00 < bridge> <avolicious> We already support IPv6, but its not used yet
15:01 < bridge> <avolicious> If we support TXT records, shall we output it to the console?
15:01 < bridge> <avolicious> But this could get spammy, no?
15:03 < bridge> <egyt> Richard Stallman is mad at us
15:03 < bridge> <learath2> Hm, it might be fine depending on the amount of blacklisted ips we encounter
15:04 < bridge> <avolicious> its a few millions a month 😄
15:04 < bridge> <egyt> Guess what I am using
15:22 < bridge> <ryozuki> it feels good when u fix a segfault
15:23 < bridge> <ryozuki> (yes i get segfaults with rust, but cuz doing unsafe stuff with llvm compiled programs)
15:23 < bridge> <milkeeycat> you should write C then
15:23 < bridge> <ryozuki> well i would better say, its the compiled program that triggers a segfault not rust
15:23 < bridge> <ryozuki> so i fixed a compiler bug
15:24 < bridge> <ryozuki> nein
15:25 < bridge> <Bota> 🥔
15:25 < bridge> <milkeeycat> my language will be advertised to you as C sprinkled with some convenient shit
15:32 < bridge> <zhn> does it use llvm as backend
15:32 < bridge> <milkeeycat> n..no
15:32 < bridge> <zhn> gg ryo will not use it
15:33 < bridge> <zhn> wait why did you choose to make it translate into nasm and then compile
15:33 < bridge> <zhn> wait why did you choose to make it translating into nasm and then compiling
15:33 < bridge> <milkeeycat> how did I have to do it?
15:34 < bridge> <zhn> using llvm as backend and something like bison as lexer and so on xd
15:35 < bridge> <zhn> llvm would give you a lot of out of the box optimizations and you could concentrate yourself into design of language
15:35 < bridge> <milkeeycat> i wanted to make all the stuff myself
15:36 < bridge> <ryozuki> using nasm is not doing all urself
15:36 < bridge> <ryozuki> but its good tho xd
15:37 < bridge> <milkeeycat> i can make generator which will be spiting out zeroes and ones
15:38 < bridge> <ryozuki> @milkeeycat nasm is not made to be used as a library but
15:38 < bridge> <ryozuki> i have a suggestion that is
15:38 < bridge> <ryozuki> https://www.keystone-engine.org/
15:38 < bridge> <ryozuki> it looks rly good
15:38 < bridge> <ryozuki> and it can be used as a library
15:38 < bridge> <ryozuki> https://www.keystone-engine.org/docs/tutorial.html
15:38 < bridge> <ryozuki> > The following sample code presents how to compile 32-bit assembly instructions of X86 in C language.
15:39 < bridge> <milkeeycat> i can use it however i want 😏
15:39 < bridge> <ryozuki> ok
15:39 < bridge> <learath2> Generating machine code by hand is just a little too much unnecessary work 😄
15:39 < bridge> <ryozuki> was just saying
15:40 < bridge> <ryozuki> yeah but he probs uses nasm in a hacky way
15:40 < bridge> <ryozuki> like making the file etc
15:40 < bridge> <ryozuki> i think keystone is made more to fit what he wants
15:40 < bridge> <ryozuki> ```c
15:40 < bridge> <ryozuki>  /* test1.c */
15:40 < bridge> <ryozuki>   #include <stdio.h>
15:40 < bridge> <ryozuki>   #include <keystone/keystone.h>
15:40 < bridge> <ryozuki>   
15:40 < bridge> <ryozuki>   // separate assembly instructions by ; or \n
15:40 < bridge> <ryozuki>   #define CODE "INC ecx; DEC edx"
15:40 < bridge> <ryozuki>   
15:40 < bridge> <ryozuki>   int main(int argc, char **argv)
15:41 < bridge> <ryozuki>   {
15:41 < bridge> <ryozuki>       ks_engine *ks;
15:41 < bridge> <ryozuki>       ks_err err;
15:41 < bridge> <ryozuki>       size_t count;
15:41 < bridge> <ryozuki>       unsigned char *encode;
15:41 < bridge> <ryozuki>       size_t size;
15:41 < bridge> <ryozuki>   
15:41 < bridge> <ryozuki>       err = ks_open(KS_ARCH_X86, KS_MODE_32, &ks);
15:41 < bridge> <ryozuki>       if (err != KS_ERR_OK) {
15:41 < bridge> <ryozuki>           printf("ERROR: failed on ks_open(), quit\n");
15:41 < bridge> <ryozuki>           return -1;
15:41 < bridge> <ryozuki>       }
15:41 < bridge> <ryozuki>   
15:41 < bridge> <ryozuki>       if (ks_asm(ks, CODE, 0, &encode, &size, &count) != KS_ERR_OK) {
15:41 < bridge> <ryozuki>           printf("ERROR: ks_asm() failed & count = %lu, error = %u\n",
15:41 < bridge> <ryozuki>                  count, ks_errno(ks));
15:41 < bridge> <ryozuki>       } else {
15:41 < bridge> <ryozuki>           size_t i;
15:41 < bridge> <ryozuki>   
15:41 < bridge> <ryozuki>           printf("%s = ", CODE);
15:41 < bridge> <ryozuki>           for (i = 0; i < size; i++) {
15:41 < bridge> <ryozuki>               printf("%02x ", encode[i]);
16:02 < bridge> <zhn> yeah but now i can't map players cursor to their screen surface xd
16:03 < bridge> <heinrich5991> what's the use case for that?
16:03 < bridge> <zhn> ingame interface using motd/broadcasts
16:04 < bridge> <heinrich5991> ah 😦
16:04 < bridge> <zhn> ye that's why i was yapping xd
16:05 < bridge> <meloƞ> @gerdoe so no interface for blockworlds™️ ? :(
16:05 < bridge> <meloƞ> couldnt follow chat, was working
16:05 < bridge> <zhn> in case of broadcasts i can use m_Direction but m_Target is necessary for working motd ui
16:05 < bridge> <heinrich5991> what kind of interface are you building?
16:06 < bridge> <heinrich5991> a selection?
16:06 < bridge> <heinrich5991> a selection, like a list box?
16:06 < bridge> <zhn> yep
16:07 < bridge> <heinrich5991> perhaps you could add a proper UI to ddnet instead?
16:07 < bridge> <heinrich5991> i.e. have the server send a list box, let the client display the UI
16:08 < bridge> <zhn> wanted to support both 0.6 and 0.7 but yeah i think its a proper way of implementing an actual interface
16:08 < bridge> <heinrich5991> you can still hack your way around the 0.7 client like you planned to
16:08 < bridge> <zhn> correct
16:08 < bridge> <zhn> i'll drop it anyway xddd
16:08 < bridge> <zhn> if ddnet will do so
16:09 < bridge> <meloƞ> <a:catxplosion:1082715870893195274>
16:57 < bridge> <jxsl13> makes sense
17:02 < bridge> <jxsl13> chillerdragon wanting 0.7 port while heinrich making 0.7 compatibility code more maintainable. That's more or less the closest one can get to having 0.7 support.
17:03 < bridge> <jxsl13> 👍
17:41 < bridge> <Nouaa> https://cdn.discordapp.com/attachments/944647999529836554/1258060639344136222/bandicam_2024-05-23_23-01-22-026.mp4?ex=6687fd46&is=6686abc6&hm=34ebf8057dcab45b747b3e721df548d19910aea101f12ee2b2fd743317746f36&
17:43 < bridge> <learath2> Took me back to 2012
17:45 < bridge> <Nouaa> probably from 2012 actually
17:45 < bridge> <Nouaa> :kek:
17:54 < bridge> <robyt3> I'd support work on #2875 but should probably be discussed first which use cases we want to support
17:54 < bridge> <DDNet> https://github.com/ddnet/ddnet/issues/2875
17:55 < bridge> <zhn> yeah its actually mind blowing amount of cases you can think of
17:56 < bridge> <zhn> currently im adding server side quad render request and textbox render request with ids so client can send net message with id and action
17:56 < bridge> <zhn> small poc
17:56 < bridge> <robyt3> yeah, using any of our basic UI elements could be possible (text input, checkbox, scrollbar, number input, color input etc.)
17:57 < bridge> <learath2> You'll need to figure out a wireformat to describe a ui aswell, it's a very annoying and tough problem
17:57 < bridge> <zhn> oh yeah
17:57 < bridge> <robyt3> probably would have to differentiate between messages that are places on the map or non-interactive, and interactive UI forms, since you can only have one form/popup at a time
17:58 < bridge> <robyt3> probably would have to differentiate between messages that are places on the map or non-interactive, and interactive UI forms, since you can only have one active form/popup at a time
17:59 < bridge> <zhn> about ingame quads: what do you think of map-patch net object which is actually map with deltas to change "overlaying" server-side managed map
17:59 < bridge> <zhn> that will allow us to reuse map render and it will have less impact on number of netex messages
18:00 < bridge> <zhn> so ui net code will come as completely another part
18:02 < bridge> <learath2> I actually can't imagine anything simple that would allow laying out ui over the wire. Maybe a small bytecode that is intentionally not turing complete with commands like `vsplit` `hsplit` `dotextbox` `docheckbox`
18:02 < bridge> <robyt3> Do you really need to layout UI manually? I would think a linear layout of rows of UI elements would be enough
18:02 < bridge> <zhn> ye sounds better than exploiting netexes xd
18:03 < bridge> <zhn> manual ui will allow server modders make all kind of things and so its better imo
18:03 < bridge> <chillerdragon> You block traffic from millions of ips a month based on some list of known bad IPs? Are you sure there are no false positives? What kind of traffic is that even? Actual players with a real client?
18:08 < bridge> <robyt3> Using json to describe more complex UI layout seems possible :justatest:  Would the maximum packet size be a concern then?
18:08 < bridge> <learath2> ```
18:08 < bridge> <learath2> vsplit 2 4
18:08 < bridge> <learath2> dotext "Login" center
18:08 < bridge> <learath2> end
18:09 < bridge> <learath2> hsplit 1 3 1
18:09 < bridge> <learath2> end
18:09 < bridge> <learath2> vsplit 1 1 1 1 1
18:09 < bridge> <learath2> hsplit 1 2
18:09 < bridge> <learath2> dotext "Username:" left
18:09 < bridge> <learath2> end
18:09 < bridge> <learath2> dotextbox <username>
18:09 < bridge> <learath2> end
18:09 < bridge> <learath2> hsplit 1 2
18:09 < bridge> <learath2> dotext "Password:" left
18:09 < bridge> <learath2> end
18:09 < bridge> <learath2> dotextbox <password>
18:09 < bridge> <learath2> end
18:09 < bridge> <learath2> end
18:09 < bridge> <learath2> end
18:09 < bridge> <learath2> dobutton "Login"
18:09 < bridge> <learath2> end
18:09 < bridge> <learath2> end
18:09 < bridge> <learath2> ```
18:09 < bridge> <zhn> not if server/client will translate it to bytecode :P
18:14 < bridge> <zhn> does ddnet have some doxygen docs instance available online?
18:15 < bridge> <learath2> ```
18:15 < bridge> <learath2> vsplit 2 4
18:15 < bridge> <learath2>     dotext "Login" center
18:15 < bridge> <learath2> end
18:15 < bridge> <learath2>     hsplit 1 3 1
18:15 < bridge> <learath2>     end
18:15 < bridge> <learath2>         vsplit 1 1 1 1 1
18:15 < bridge> <learath2>             hsplit 1 2
18:15 < bridge> <learath2>                 dotext "Username:" left
18:15 < bridge> <learath2>             end
18:15 < bridge> <learath2>                 dotextbox <username>
18:15 < bridge> <learath2>             end
18:15 < bridge> <learath2>         end
18:15 < bridge> <learath2>             hsplit 1 2
18:15 < bridge> <learath2>                 dotext "Password:" left
18:15 < bridge> <learath2>             end
18:15 < bridge> <learath2>                 dotextbox <password>
18:15 < bridge> <learath2>             end
18:15 < bridge> <learath2>         end
18:15 < bridge> <learath2>         end
18:15 < bridge> <learath2>             dobutton "Login"
18:15 < bridge> <learath2>         end
18:15 < bridge> <learath2>         end
18:15 < bridge> <learath2>     end
18:15 < bridge> <learath2>     end
18:15 < bridge> <learath2> end
18:15 < bridge> <learath2> ```
18:15 < bridge> <learath2> https://codedoc.ddnet.org/
18:16 < bridge> <learath2> It's not very documented though
18:16 < bridge> <archimede67> anyone aware of an issue related to loading points/ranks ?
18:17 < bridge> <archimede67> because right now it seems like we can't do /points nor check the ranks
18:19 < bridge> <learath2> hm the db server looks fine this time
18:19 < bridge> <meloƞ> rank won't even be displayed when joining a new empty server with a map you finished before
18:20 < bridge> <archimede67> yeah it seems like nothing loads
18:20 < bridge> <meloƞ> also indicating finish in browser doesnt work
18:24 < bridge> <learath2> OH, the db server is not fine
18:24 < bridge> <learath2> ```
18:24 < bridge> <learath2> Jul 04 18:14:16 ddnetdb2 systemd[1]: mariadb.service: Main process exited, code=killed, status=9/KILL
18:24 < bridge> <learath2> Jul 04 18:14:16 ddnetdb2 systemd[1]: mariadb.service: Failed with result 'oom-kill'.
18:24 < bridge> <learath2> ```
18:24 < bridge> <meloƞ> were you connected via ssh by chance on accident?!
18:24 < bridge> <archimede67> :Kek:
18:25 < bridge> <learath2> @0xdeen perhaps you were a tad too generous with `innodb_buffer_pool_size`
18:32 < bridge> <learath2> Also why didn't systemd in it's infinite wisdom restart this service?
18:36 < bridge> <meloƞ> systemd can be setup to do so `Restart=on-failure`
18:36 < bridge> <learath2> Why do I need to set that up? It never refrained for making decisions for me before
18:37 < bridge> <meloƞ> https://www.freedesktop.org/software/systemd/man/latest/systemd.service.html
18:37 < bridge> <meloƞ> 
18:37 < bridge> <meloƞ> ```
18:37 < bridge> <meloƞ> Restart=
18:37 < bridge> <meloƞ> 
18:37 < bridge> <meloƞ>     Configures whether the service shall be restarted when the service process exits, is killed, or a timeout is reached. The service process may be the main service process, but it may also be one of the processes specified with ExecStartPre=, ExecStartPost=, ExecStop=, ExecStopPost=, or ExecReload=. When the death of the process is a result of systemd operation (e.g. service stop or restart), the service will not be restarted. Timeouts include mis
18:37 < bridge> <meloƞ> 
18:37 < bridge> <meloƞ>     Takes one of no, on-success, on-failure, on-abnormal, on-watchdog, on-abort, or always. If set to no (the default), the service will not be restarted. If set to on-success, it will be restarted only when the service process exits cleanly. In this context, a clean exit means any of the following:
18:37 < bridge> <meloƞ> 
18:37 < bridge> <meloƞ>         exit code of 0;
18:37 < bridge> <meloƞ>         for types other than Type=oneshot, one of the signals SIGHUP, SIGINT, SIGTERM, or SIGPIPE;
18:37 < bridge> <meloƞ>         exit statuses and signals specified in SuccessExitStatus=.
18:37 < bridge> <meloƞ> ```
18:38 < bridge> <meloƞ> https://www.freedesktop.org/software/systemd/man/latest/systemd.service.html
18:38 < bridge> <meloƞ> 
18:38 < bridge> <meloƞ> ```
18:38 < bridge> <meloƞ> Restart=
18:38 < bridge> <meloƞ> 
18:38 < bridge> <meloƞ>     Configures whether the service shall be restarted when the service process exits, is killed, or a timeout is reached. The service process may be the main service process, but it may also be one of the processes specified with ExecStartPre=, ExecStartPost=, ExecStop=, ExecStopPost=, or ExecReload=. When the death of the process is a result of systemd operation (e.g. service stop or restart), the service will not be restarted. Timeouts include mis
18:38 < bridge> <meloƞ> 
18:38 < bridge> <meloƞ>     Takes one of no, on-success, on-failure, on-abnormal, on-watchdog, on-abort, or always. If set to no (the default), the service will not be restarted. 
18:38 < bridge> <meloƞ> 
18:38 < bridge> <meloƞ> If set to on-failure, the service will be restarted when the process exits with a non-zero exit code, is terminated by a signal (including on core dump, but excluding the aforementioned four signals), when an operation (such as service reload) times out, and when the configured watchdog timeout is triggered. If set to on-abnormal, the service will be restarted when the process is terminated by a signal (including on core dump, excluding the aforemen
18:38 < bridge> <meloƞ> ```
18:38 < bridge> <meloƞ> i guess its just that restart is off by default, thats why you have to explicitly tell it to
19:02 < bridge> <0xdeen> ok, reducing
19:02 < bridge> <jxsl13> @chillerdragon, any thought on adding two repos: varint and/or econ ? would like to split up twapi if you are fine with having those in your org?
19:28 < bridge> <cellegenrih> question, is the distance between the map border (white border which you are limited to build in) and the endless death tiles exactly 200 tiles?
19:33 < bridge> <zhn> ```cpp
19:33 < bridge> <zhn> bool CEntity::GameLayerClipped(vec2 CheckPos)
19:33 < bridge> <zhn> {
19:33 < bridge> <zhn>     return round_to_int(CheckPos.x) / 32 < -200 || round_to_int(CheckPos.x) / 32 > GameServer()->Collision()->GetWidth() + 200 ||
19:33 < bridge> <zhn>            round_to_int(CheckPos.y) / 32 < -200 || round_to_int(CheckPos.y) / 32 > GameServer()->Collision()->GetHeight() + 200;
19:33 < bridge> <zhn> }```
19:33 < bridge> <zhn> yep
19:33 < bridge> <cellegenrih> ty for confirming :owo:
21:33 < bridge> <zhn> https://www.teeworlds.com/forum/viewtopic.php?id=2339
21:38 < bridge> <Ewan> LOL
21:39 < bridge> <Ewan> systemctl status
21:42 < bridge> <Ewan> systemd has some restart options in ur unit .service file, some things would rather be restarted by their own means (like the  transmission daemon prefers to be restarted with a specific signal) instead of just killing & spinning the same process up again
21:42 < bridge> <Ewan> also sorry for double ping if I did that
21:42 < bridge> <Ewan> didn't mean it
21:44 < bridge> <meloƞ> :pepeangryping:  systemctl poweroff
21:49 < bridge> <learath2> I really need to add decorations to my ssh'd windows before I cause an incident. I almost did `rm -rf /boot/*` on ddnet.org
21:50 < bridge> <meloƞ> °-°
21:50 < bridge> <meloƞ> use a terminal emulator just for ddnet's ssh sessions
21:51 < bridge> <learath2> Idk wym, I use a terminal emulator for all my terminals. Who even has physical terminals in 2024? 😄
21:52 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1258510764243812503/image0.jpg?ex=66884efc&is=6686fd7c&hm=7cbaf2ba17f2b0752f28373444a148a61dc9b3e7a9f598c4c45399dc93437e14&
21:52 < bridge> <meloƞ> ah i wasnt specific enough, my bad :D
21:52 < bridge> <meloƞ> 
21:52 < bridge> <meloƞ> i meant like, dont use your default emu for ddnet
21:53 < bridge> <meloƞ> (e.g default -> alacritty, ddnet -> gnome's term) or smth xD
21:53 < bridge> <learath2> I'll try to change the background color when I ssh
21:53 < bridge> <learath2> I cba to maintain two different configs
21:54 < bridge> <meloƞ> fair
22:09 < bridge> <Ewan> excellent idea
22:37 < bridge> <heinrich5991> even that sounds more complicated than what I would go for. a simple dialog with a number of buttons would be my start
22:48 < bridge> <learath2> My only issue with that would be that every half measure we introduce has to be supported forever
22:56 < bridge> <heinrich5991> I think sending the client a list of options and the client selecting one (or escaping from the dialog) is straightforward enough that there's no problem in supporting it forever… I think
23:35 < bridge> <heinrich5991> a bad "full" measure might be even more annoying to support in the long term
