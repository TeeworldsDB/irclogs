01:34 < bridge> <.a0040> is it possible to map together with a friend ?
01:34 < bridge> <.a0040> without needing to send the map all the time ?
01:35 < bridge> <reitw> at the same time no
01:35 < bridge> <reitw> but you can still use git :issou:
01:36 < bridge> <melo∆û> :justatest:  Go to sleep rei
01:36 < bridge> <.a0040> thats as fast as sending it to him in discord xD
01:37 < bridge> <reitw> well would be fun a project with an online editor
01:44 < bridge> <animepdf> These is such online editor, but looks like their server is offline
01:44 < bridge> <animepdf> https://tw.thissma.fr/
01:45 < bridge> <.a0040> would be fun af to just have the ability to map together in client. Simulataneous mapping
01:45 < bridge> <.a0040> how did nobody do this yet
01:51 < bridge> <reitw> ^
01:51 < bridge> <reitw> look at anime's message lol
01:54 < bridge> <.a0040> servers offline tho üòÑ
01:58 < bridge> <broso56> strings
01:59 < bridge> <reitw> @k2d222 any idea ?
02:00 < bridge> <reitw> oh lol it's a rust project
02:00 < bridge> <reitw> oh lol it's a rust project (the server)
05:04 < bridge> <enchanted____> Hello its normal i can‚Äôt play on 1080x1080 r√©solutions pls
05:34 < bridge> <Tyrone> I didn‚Äôt realise 1080x1080 was a valid resolution
05:35 < bridge> <totar> I think 5:4 is the narrowest supported aspect ratio
05:40 < bridge> <chillerdragon> Yea 1:1 is not supported
05:43 < bridge> <chillerdragon> @enchanted____: 4:3 should work with a bit of border on the side. Does it?
05:44 < bridge> <chillerdragon> I did it twice and k2d222 is also on it
05:46 < bridge> <chillerdragon> But it‚Äôs not polished yet. I am also not actively working on it
05:53 < ws-client> <ChillerDragon> @.a0040 also git is faster than discord because it skips the step of moving the file into the right place. Unless you set your discord download folder to the the maps folder and let it overwrite existing files somehow.
07:09 < bridge> <louis> 1:1 feels like it should be supported
07:09 < bridge> <louis> the hook is a 1:1 ellipse after all üòÖ
07:19 < bridge> <mian_ku> yo. I compiled DDNet yesterday. It's work well. but today, it's broken with about UTF-8, i delete everything in build folder and make it again. but it's broken with it.
07:19 < bridge> <mian_ku> https://cdn.discordapp.com/attachments/293493549758939136/1273511311124467784/image.png?ex=66bee155&is=66bd8fd5&hm=5f2ed08866fdf9bc8a15b0224472d99fa6067e21c99711286eca0ea2da8b921f&
07:29 < bridge> <chillerdragon> What is in your buildninja directory?
07:29 < bridge> <chillerdragon> Is there a release folder? What‚Äôs in it?
07:30 < bridge> <chillerdragon> Try deleting the entire build folder and then share all commands you run to compile from scratch and their output. Otherwise we have to guess what you did
07:31 < bridge> <chillerdragon> Is it a modified ddnet source code?
07:31 < bridge> <chillerdragon> Do you use git?
07:32 < bridge> <chillerdragon> Do you use the same rust toolchain as yesterday?
07:37 < bridge> <mian_ku> i get some problem when I configuration path, so i put a ninja on my directory
07:38 < bridge> <milkeeycat> Morning neovim enjoyers and others
07:39 < bridge> <mian_ku> yes, is a line of note by chinese, i guess problem from it
07:40 < bridge> <mian_ku> but i delete it after its still get problem
07:41 < bridge> <mian_ku> but i delete it after, its still get problem
07:48 < bridge> <chillerdragon> So what‚Äôs in it
07:48 < bridge> <chillerdragon> I did not ask why you named it ninja but what the contents of it is
07:49 < bridge> <chillerdragon> I can only help you when you respond to my messages
07:55 < bridge> <mian_ku> i mean...   ddnet\buildninja\ninja.exe here
07:58 < bridge> <mian_ku> may its choosed wrong compiler?
08:07 < bridge> <chillerdragon> So the only file in the buildninja directory is ninja.exe?
08:08 < bridge> <chillerdragon> Interesting. I am still waiting for a response to my other questions by the way.
08:37 < bridge> <fokkonaut> back after my week timeout
08:37 < bridge> <fokkonaut> :kek:
08:38 < bridge> <chillerdragon> CensorshipNetwork
08:39 < bridge> <fokkonaut> yep, heino overreactin
08:39 < bridge> <chillerdragon> Pst
08:39 < bridge> <fokkonaut> ups
08:39 < bridge> <chillerdragon> You gonna get banned again
08:40 < bridge> <fokkonaut> then ima have to join irc
08:40 < bridge> <fokkonaut> not gonna wait a week again, LOL
08:40 < bridge> <chillerdragon> Yes it‚Äôs very anarchy over here
08:42 < bridge> <fokkonaut> heino doesnt like talking things out sadly
08:42 < bridge> <chillerdragon> Hows 0.7 dommy going?
08:42 < bridge> <chillerdragon> I really want the nullptr fix on master
08:42 < bridge> <fokkonaut> i can now start working on it, since my ban expired
08:42 < bridge> <chillerdragon> Pog
08:42 < bridge> <fokkonaut> now = later/tomorrow
08:42 < bridge> <chillerdragon> Still good
08:43 < bridge> <fokkonaut> i think i need some help from you tho
08:43 < bridge> <chillerdragon> How can I help
08:43 < bridge> <fokkonaut> tbh, i'm not sure, dunno your translation system too well yet. I thought the translation context for main/dummy should work already
08:44 < bridge> <fokkonaut> and it does, but it's not getting updated correctly
08:44 < bridge> <fokkonaut> so, probably the translation functions where it stores the stuff is not called on the dummy correctly or smth
08:44 < bridge> <fokkonaut> idk
08:44 < bridge> <fokkonaut> maybe also Conn != g_Config.m_ClDummy
08:44 < bridge> <fokkonaut> that might be breaking aswell, didn't check if i used it correctly in all places
08:45 < bridge> <fokkonaut> maybe you can check it out
08:45 < bridge> <chillerdragon> The translation context is only red from if needed
08:45 < bridge> <fokkonaut> the dummy's translation context should always be updated, but not processed
08:45 < bridge> <mian_ku> hey, i try to reclone and do it again. its broken again.
08:46 < bridge> <fokkonaut> i think names etc. seemed to work
08:46 < bridge> <chillerdragon> So if you write new skin data into the translation context but there is no skin change message it won‚Äôt be used
08:46 < bridge> <fokkonaut> but the skin application is still wrong, it has to re-set all skins when switching to dummy/main
08:46 < bridge> <chillerdragon> Then you have to read the translation data on dummy swap
08:46 < bridge> <qweytubnczzx> —Ç—É—Ç –µ—Å—Ç—å —Ä—É—Å—Å–∫–∏–π —á–∞—Ç ?
08:46 < bridge> <chillerdragon> Da
08:46 < bridge> <fokkonaut> mind doing that based on my pr?
08:46 < bridge> <qweytubnczzx> –≥–¥–µ
08:47 < bridge> <chillerdragon> But ruski only in off topic channel
08:47 < bridge> <fokkonaut> i think it's just the skins rn
08:47 < bridge> <chillerdragon> Ja ruski
08:47 < bridge> <fokkonaut> but idk
08:47 < bridge> <qweytubnczzx> —è–µ
08:47 < bridge> <qweytubnczzx> —á–µ
08:47 < bridge> <fokkonaut> afk chiller, lemme know on wire if we can work on it somehow
08:47 < bridge> <chillerdragon> If you keep withholding information this is not going anywhere.
08:48 < bridge> <mian_ku> I want it compile with MSVC, its choose the mingw.
08:48 < bridge> <chillerdragon> Remove mingw from path maybe
08:49 < bridge> <mian_ku> ok, lets me try some.
08:50 < bridge> <learath2> Well you don't have to
08:50 < bridge> <learath2> Well you don't have to
08:52 < bridge> <learath2> You actually don't have to move any of them tbf. Just use from there
09:03 < bridge> <milkeeycat> btw, when `call` instruction is used, it pushes only return address on a stack(8 bytes on x86_64) or smth else?
09:04 < bridge> <mian_ku> thx. I check mingw path before. but I missed a path.
09:05 < ws-client> <ChillerDragon> @fokkonaut why did you wrap applying skin info in a if statement? https://github.com/ddnet/ddnet/pull/8707/files#diff-0fa773edeac2d5ed37ad1d91ad2229553d2642c45b443ec86ab7350c4ade947cR469
09:06 < bridge> <fokkonaut> Because an update to the main tee shouldn't update the skin on client id x when on dummy
09:07 < ws-client> <ChillerDragon> but the name should update on client id x?
09:10 < ws-client> <ChillerDragon> Maybe it would be easier to work with differnent skins per dummy connection if this was an array https://github.com/ddnet/ddnet/blob/6754b5ff457ef0e196c38a377bba0d688479e501/src/game/client/gameclient.h#L452
09:10 < ws-client> <ChillerDragon> @fokkonaut what do you think?
09:10 < bridge> <fokkonaut> idk
09:10 < ws-client> <ChillerDragon> then it can use the [g_Config.m_ClDummy] in the OnRender
09:11 < ws-client> <ChillerDragon> always store everything that comes from the network and render depending on which tee is active sounds like what you want to achieve
09:11 < bridge> <fokkonaut> Could you do that?
09:12 < bridge> <fokkonaut> I'll test it later
09:12 < bridge> <fokkonaut> i have no idea what is correct in that pr yet
09:12 < ws-client> <ChillerDragon> xd
09:12 < ws-client> <ChillerDragon> ill start from scratch 
09:17 < bridge> <fokkonaut> There are not many changes thi
09:17 < bridge> <fokkonaut> tho*
09:17 < ws-client> <ChillerDragon> yes i had a look
09:17 < bridge> <fokkonaut> localclient id is no array anymore because the whole translation context is an array now
09:18 < ws-client> <ChillerDragon> i will give only the skins thing a try and see what happens
09:18 < bridge> <learath2> Just the return adress. Sometimes you may have to align rsp before your call though if it ended up unaligned. You undo that after the call
09:28 < bridge> <milkeeycat> I don't really understand when it can end up unaligned but I'll deal with it when it breaks something xd
09:31 < bridge> <learath2> It should never happen if you keep your rsp increments to multiples of 16
09:31 < bridge> <learath2> (and your first one 8 + a multiple of 16 to get it aligned at the start)
09:31 < bridge> <heinrich5991> he decided to ignore the ABI on that one, wanting obscure errors in the future ^^
09:32 < bridge> <milkeeycat> i didn't ignore anything, pushes and pops stuff as C program -.-
09:32 < bridge> <learath2> As long as he doesn't call into anything that isn't his language it should(tm) work üòÑ
09:32 < bridge> <milkeeycat> i didn't ignore anything, it pushes and pops stuff as C program -.-
09:33 < bridge> <heinrich5991> C programs make sure to keep the stack aligned to 16 bytes
09:33 < bridge> <heinrich5991> do you?
09:34 < bridge> <milkeeycat> https://github.com/MilkeeyCat/meraki/blob/f9b73aad3f61c2cf1085158984123352dd14730d/src/archs/amd64/amd64.rs#L415-L422 yep
09:34 < bridge> <heinrich5991> here ^
09:34 < bridge> <heinrich5991> ah nice
09:35 < bridge> <heinrich5991> https://github.com/MilkeeyCat/meraki/blob/f9b73aad3f61c2cf1085158984123352dd14730d/src/archs/amd64/amd64.rs#L75
09:35 < bridge> <heinrich5991> what's this `alignment` vs the `STACK_ALIGNMENT` in the top?
09:35 < bridge> <milkeeycat> i was using it before in `codegen.rs` but then i moved in `amd64.rs` so i don't need that function
09:38 < bridge> <heinrich5991> is it intentional that you always allocate at least 16 bytes? https://github.com/MilkeeyCat/meraki/blob/f9b73aad3f61c2cf1085158984123352dd14730d/src/archs/amd64/amd64.rs#L415-L421
09:38 < bridge> <heinrich5991> (even if the `offset` is 0)
09:39 < bridge> <milkeeycat> nop, my maffs is wrong xd
09:40 < bridge> <heinrich5991> you probably want this function? https://doc.rust-lang.org/std/primitive.u32.html#method.div_ceil
09:41 < bridge> <milkeeycat> i didn't know such a function existed :monkaS:
09:41 < bridge> <heinrich5991> or even https://doc.rust-lang.org/std/primitive.u32.html#method.next_multiple_of üòÑ
09:42 < bridge> <ryozuki> @learath2 if u compile nodejs dont use mold
09:42 < bridge> <ryozuki> it keeps linking infinitely
09:42 < bridge> <heinrich5991> why is that? is there a bug report?
09:43 < bridge> <learath2> I use boring old ld
09:53 < ws-client> <ChillerDragon> @heinrich5991 i feel stupid xd
09:53 < ws-client> <ChillerDragon> why wouldnt there be a dummy in demos?
09:54 < ws-client> <ChillerDragon> the demo format scares me tbh im more a network dude but you can record demos where you switch from main to dummy so there is a dummy? or what do you mean?
09:56 < ws-client> <ChillerDragon> @fokkonaut my pr should(tm), pls test for me thank, fix skin support. If you confirm it works it could be merged as is and then you can check what is still missing. Maybe we need both prs.
09:56 < bridge> <fokkonaut> It definitely needs my pr aswell, yes
09:56 < bridge> <fokkonaut> But thanks this will probably solve my issue
09:56 < bridge> <fokkonaut> We'll see later
09:56 < ws-client> <ChillerDragon> <:poggers:546812233867329556>
09:57 < ws-client> <ChillerDragon> im too lazy to code a server that sends fake skins so its easy to test
09:59 < bridge> <heinrich5991> ChillerDragon: AFAIK you can't switch between dummy and main tee in demos
09:59 < bridge> <heinrich5991> the demo only contains one view of everything
09:59 < bridge> <louis> did both chn test servers get knocked offline? i tried voting a map and got connection issues, now they're gone from the browser
09:59 < bridge> <heinrich5991> you can switch during dummy recording
09:59 < ws-client> <ChillerDragon> oh hm
09:59 < bridge> <heinrich5991> got IP+port for me?
10:00 < bridge> <louis> 42.194.148.241:8307
10:00 < bridge> <DDNet> 42.194.148.241:8307 is an official DDraceNetwork (Test, Region: üá®üá≥) server.
10:00 < bridge> <DDNet> Quick join: <https://ddnet.org/connect-to/?addr=42.194.148.241:8307/>
10:00 < ws-client> <ChillerDragon> @heinrich5991 then yeah it might be useless. Shouldn't break anything but is probably not needed.
10:01 < bridge> <heinrich5991> shouldn't be part of the API if it's dead code
10:01 < ws-client> <ChillerDragon> yes
10:01 < ws-client> <ChillerDragon> i guess ill code a server then -.-
10:05 < bridge> <heinrich5991> server seems to still run, but mastersrv registration seems stuck
10:05 < bridge> <heinrich5991> ```
10:05 < bridge> <heinrich5991> 2024-08-15 10:02:26 E http: https://master1.ddnet.org/ddnet/15/register failed. libcurl error (28): Operation too slow. Less than 500 bytes/sec transferred the last 5 seconds 
10:05 < bridge> <heinrich5991> 2024-08-15 10:02:26 E register/6/ipv4: error sending request to master
10:05 < bridge> <heinrich5991> ```
10:06 < ws-client> <ChillerDragon> whats the password?
10:06 < ws-client> <ChillerDragon> lol
10:06 < ws-client> <ChillerDragon> still nimrocks
10:06 < bridge> <heinrich5991> idk
10:06 < bridge> <heinrich5991> I tried that, but didn't work for me üòÆ
10:06 < ws-client> <ChillerDragon> yes its nimrocks
10:06 < ws-client> <ChillerDragon> sucks to be u
10:06 < ws-client> <ChillerDragon> worked for me xd
10:06 < bridge> <milkeeycat> xd
10:06 < bridge> <heinrich5991> nvm, mistyped apparently
10:07 < bridge> <louis> shouldnt i still be able to join even if its not registered?
10:07 < ws-client> <ChillerDragon> yes @louis 
10:08 < ws-client> <ChillerDragon> get china firewalled axaxax
10:08 < bridge> <heinrich5991> I was able to join, ChillerDragon, too
10:08 < ws-client> <ChillerDragon> could you just for kicks try updating the server?
10:09 < bridge> <heinrich5991> you see the error above
10:09 < bridge> <heinrich5991> it doesn't look related to anything like that. looks like chinese firewall doing chinese firewall things
10:09 < ws-client> <ChillerDragon> classic
10:09 < bridge> <heinrich5991> maybe a restart would fix it because it'll get a different http client port assigned?
10:10 < ws-client> <ChillerDragon> turning it off and on again always works
10:12 < bridge> <louis> what map is active @heinrich5991 ?
10:13 < bridge> <louis> on the chn test server
10:13 < ws-client> <ChillerDragon> some loading screen
10:13 < bridge> <louis> also can you read #admin-mail-590 when you have time
10:13 < bridge> <louis> can u vote some map in vote menu and see if it works
10:13 < ws-client> <ChillerDragon> whats admin mail 590 xd
10:13 < ws-client> <ChillerDragon> why is there a 590 in the channel name
10:14 < ws-client> <ChillerDragon> i cant connect anymore i guess heinrich shut it down
10:14 < ws-client> <ChillerDragon> ah nvm im bak
10:14 < ws-client> <ChillerDragon> /map is disabled
10:14 < ws-client> <ChillerDragon> bruv
10:14 < bridge> <louis> use vote menu
10:15 < ws-client> <ChillerDragon> i tried i got cp now
10:15 < bridge> <louis> cp?
10:15 < ws-client> <ChillerDragon> connection problems?
10:16 < ws-client> <ChillerDragon> ye same
10:16 < ws-client> <ChillerDragon> map vote gives me cp
10:18 < bridge> <louis> u can't abbreviate stuff to cp when it's not obvious üòπ
10:19 < bridge> <louis> ok, i wonder if that's an error then
10:19 < ws-client> <ChillerDragon> its been obvious to everyone else in the last 10yrs
10:21 < bridge> <louis> never heard it used for connection problems
10:21 < bridge> <louis> only checkpoint in ddnet terms
10:21 < ws-client> <ChillerDragon> weird
10:25 < ws-client> <ChillerDragon> the ddnet server chosing a free port instead of crashing if 8303 is blocked caused me way more headache than it helped me -.-
10:27 < bridge> <milkeeycat> yey, I tried to call C function from my code and it resulted in segfault :pepeW:
10:28 < ws-client> <ChillerDragon> classic C moment
10:29 < ws-client> <ChillerDragon> that means its working @milkeeycat 
10:31 < bridge> <heinrich5991> ChillerDragon: if you configure the port explicitly, it'll not search for an open port
10:32 < ws-client> <ChillerDragon> ye "if"
10:32 < ws-client> <ChillerDragon> but good idea i will do that now at least on my laptop
10:32 < ws-client> <ChillerDragon> the the surprise will be even bigger when its not happening on my desktop xd
10:45 < bridge> <ryozuki> morning
10:46 < bridge> <ryozuki> i didnt find any but for me it kept linking for 40 mins
10:46 < bridge> <ryozuki> for the record these are my compile times
10:46 < bridge> <ryozuki> 
10:46 < bridge> <ryozuki> ```
10:46 < bridge> <ryozuki>      Fri Apr 26 09:29:20 2024 >>> net-libs/nodejs-20.12.1
10:46 < bridge> <ryozuki>        merge time: 5 minutes and 46 seconds.
10:46 < bridge> <ryozuki> 
10:46 < bridge> <ryozuki>      Fri Jul  5 13:51:37 2024 >>> net-libs/nodejs-22.3.0
10:46 < bridge> <ryozuki>        merge time: 9 minutes and 28 seconds.
10:46 < bridge> <ryozuki> 
10:46 < bridge> <ryozuki>      Thu Aug 15 09:41:23 2024 >>> net-libs/nodejs-22.4.1-r1
10:46 < bridge> <ryozuki>        merge time: 10 minutes and 40 seconds.
10:46 < bridge> <ryozuki> ```
10:46 < bridge> <ryozuki> last is without mold, i think it uses ldd
10:47 < bridge> <heinrich5991> ldd isn't a linker, is it?
10:47 < bridge> <ryozuki> lld
10:47 < bridge> <ryozuki> sorry xd
10:48 < bridge> <ryozuki> :gigachad:
10:48 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1273563875194961963/image.png?ex=66bf1249&is=66bdc0c9&hm=03deb7396cd706a0ed9f6125af379917db540e081b39c6a46e1d6a8c81a438d9&
10:50 < bridge> <milkeeycat> Let's goooo
10:50 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1273564446098456668/image.png?ex=66bf12d1&is=66bdc151&hm=1f3c289c34223d745979150e7e1d7d1120033461b3e25d37cafdb3be90ba6390&
11:26 < bridge> <learath2> You already have ffi? üí™
11:27 < bridge> <milkeeycat> it should work with any amount of integer class params]
11:27 < bridge> <milkeeycat> it should work with any amount of integer class params
11:27 < bridge> <milkeeycat> i will try to pass a pointer to a struct and hope to not see segfault xd
11:28 < bridge> <learath2> Are your structs laid out in the c way?
11:28 < bridge> <milkeeycat> they should be
11:28 < bridge> <learath2> Do you respect padding?
11:28 < bridge> <milkeeycat> ye
11:28 < bridge> <milkeeycat> idk about nested structs tho
11:29 < bridge> <milkeeycat> but im 50% sure it should work
11:29 < bridge> <learath2> now pass a float
11:30 < bridge> <milkeeycat> naaah, i don't fuck with floats
11:30 < bridge> <milkeeycat> they're hard
11:42 < bridge> <milkeeycat> @learath2 i tried dis and it returns `178` xd
11:42 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1273577430551892052/image.png?ex=66bf1ee9&is=66bdcd69&hm=87ad8a0e5062e4425ba55a19f81cd466f624920281e3851c303306962d9f0cca&
11:42 < bridge> <milkeeycat> at least not a segfault xdddd
11:43 < bridge> <learath2> Well that's correct
11:43 < bridge> <learath2> y disappointed?
11:43 < bridge> <learath2> y disappointed tone?
11:44 < bridge> <milkeeycat> wot, shouldn't it be 690? -.-
11:45 < bridge> <learath2> How do you want it to fit 690 into an uint8?
11:45 < bridge> <milkeeycat> ok, fair :kek:
11:45 < bridge> <learath2> It just got truncated `690 mod 256 = 178`
11:45 < bridge> <milkeeycat> ok, it actually works :poggers2: holly shit
11:46 < bridge> <learath2> Try weird stuff with alignment
11:46 < bridge> <milkeeycat> add u64?
11:47 < bridge> <learath2> u8, u64, u8
11:47 < bridge> <learath2> should cause padding
11:48 < bridge> <learath2> or u16 if you don't have u64 still
11:48 < bridge> <milkeeycat> i added 32/64 bit integers
11:49 < bridge> <learath2> and you didn't let me know? wtf
11:49 < bridge> <milkeeycat> i added 32/64 bit integers btw :justatest:
11:49 < bridge> <learath2> :Celebrate:
11:50 < bridge> <milkeeycat> returns `84` üòè
11:50 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1273579454081404948/image.png?ex=66bf20cb&is=66bdcf4b&hm=e369831a1a815e33eb4ed401513b1af51a9af3706fb74f0181eee726b230c533&
11:53 < bridge> <learath2> Nicely done
11:56 < bridge> <milkeeycat> i have a cursed idea how to call `printf` xd
11:56 < bridge> <milkeeycat> lemme try
11:57 < bridge> <learath2> Careful, varargs are passed differently
11:57 < bridge> <milkeeycat> ok, i don't have an idea anymore
11:58 < bridge> <milkeeycat> is format passed like a regular argument?
12:01 < bridge> <learath2> Actually, with your limitation of just integer arguments you might be fine
12:01 < bridge> <heinrich5991> thanks @louis.place
12:07 < ws-client> <ChillerDragon> @milkeeycat dont call printf start with ``puts``
12:08 < ws-client> <ChillerDragon> Imo every C hello world tutorial out there is wrong. They all do ``printf("hello world\n");`` when it should be ``puts("hello world");``
12:08 < bridge> <milkeeycat> ```
12:08 < bridge> <milkeeycat> void printf(u8 *format);
12:08 < bridge> <milkeeycat> 
12:08 < bridge> <milkeeycat> u8 main() {
12:08 < bridge> <milkeeycat>     u8 end;
12:08 < bridge> <milkeeycat>     end = 0;
12:08 < bridge> <milkeeycat>     u8 d;
12:08 < bridge> <milkeeycat>     d = 100;
12:08 < bridge> <milkeeycat>     u8 l;
12:08 < bridge> <milkeeycat>     l = 108;
12:08 < bridge> <milkeeycat>     u8 r;
12:08 < bridge> <milkeeycat>     r = 114;
12:08 < bridge> <milkeeycat>     u8 o;
12:08 < bridge> <milkeeycat>     o = 111;
12:08 < bridge> <milkeeycat>     u8 w;
12:08 < bridge> <milkeeycat>     w = 119;
12:08 < bridge> <milkeeycat>     u8 space;
12:08 < bridge> <milkeeycat>     space = 32;
12:08 < bridge> <milkeeycat>     u8 comma;
12:08 < bridge> <milkeeycat>     comma = 44;
12:08 < bridge> <milkeeycat>     u8 o2;
12:08 < bridge> <milkeeycat>     o2 = o;
12:08 < bridge> <milkeeycat>     u8 l2;
12:09 < bridge> <milkeeycat>     l2 = l;
12:09 < bridge> <milkeeycat>     u8 l3;
12:09 < bridge> <milkeeycat>     l3 = 108;
12:09 < bridge> <milkeeycat>     u8 e;
12:09 < bridge> <milkeeycat>     e = 101;
12:09 < bridge> <milkeeycat>     u8 H;
12:09 < bridge> <milkeeycat>     H = 72;
12:09 < bridge> <milkeeycat> 
12:09 < bridge> <milkeeycat> xd
12:09 < ws-client> <ChillerDragon> LGTM
12:09 < ws-client> <ChillerDragon> why backwards tho
12:10 < bridge> <heinrich5991> ChillerDragon: gcc optimizes `printf("hello world\n")` to `puts("hello world")`
12:11 < bridge> <milkeeycat> because it doesn't work other way around xd
12:11 < ws-client> <ChillerDragon> @heinrich5991 yes so? they are still wrong 
12:12 < ws-client> <ChillerDragon> if you want a newline and no format arguments the way to go is puts and gcc knows that but the ppl doing C tutorials apparently dont
12:13 < ws-client> <ChillerDragon> @milkeeycat lol
12:14 < bridge> <heinrich5991> hmm I can understand it
12:14 < bridge> <louis> @jupeyy_keks maybe you are interested in this since you do the skindb bot
12:14 < bridge> <heinrich5991> I'd probably also reach for `printf` instead of `puts` in the general case
12:15 < bridge> <heinrich5991> even if I have a newline
12:15 < bridge> <heinrich5991> since it's more general
12:15 < bridge> <heinrich5991> and I guess the C tutorials think the same. no need to teach two functions when people will need `printf` anyway
12:16 < bridge> <Jupstar ‚ú™> sounds interesting, but also not trivial enough to do it in an hour
12:16 < bridge> <Jupstar ‚ú™> @heinrich5991 what is author list?
12:16 < bridge> <louis> i think he means author becomes a list of string instead of a string
12:16 < bridge> <Jupstar ‚ú™> and what is the diff to what you want? üòÑ
12:16 < bridge> <Jupstar ‚ú™> simply that it is alawys a list?
12:17 < bridge> <louis> mine separates the last editor by making it the author, and all previous editors who need attribution as a list of string
12:17 < bridge> <heinrich5991> either have author=Jupstar contributors=[whis], or authors=[Jupstar, whis]
12:17 < bridge> <Jupstar ‚ú™> ah
12:17 < bridge> <milkeeycat> :justatest:
12:17 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1273586293552451624/image.png?ex=66bf272a&is=66bdd5aa&hm=d1ea64a7ab7eee3811973064f8e398344b43613c604bea21f3d43bbc3df1fd19&
12:17 < bridge> <Jupstar ‚ú™> yeah i guess just a list is easier
12:17 < bridge> <milkeeycat> it's 200 :justatest:
12:17 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1273586293552451624/image.png?ex=66bf272a&is=66bdd5aa&hm=d1ea64a7ab7eee3811973064f8e398344b43613c604bea21f3d43bbc3df1fd19&
12:17 < bridge> <Jupstar ‚ú™> we can alawys but the main author of the change in front
12:17 < bridge> <louis> from my github reply:
12:17 < bridge> <louis> > Then you have to solve unwanted edits showing up in the author profiles of original creators
12:17 < bridge> <louis> > A way of making that work is to assume the first author is always the most recent creator, easier for skin creators but a bit jank otherwise
12:17 < bridge> <Jupstar ‚ú™> if that matters
12:17 < bridge> <louis> ye
12:18 < bridge> <learath2> What's with the extra mess at the end?
12:18 < bridge> <Jupstar ‚ú™> yeah but tbh, i dont think i do that any time soon. bcs i have to touch php & python
12:18 < bridge> <louis> üòπ
12:18 < bridge> <Jupstar ‚ú™> that is a downer
12:18 < bridge> <Jupstar ‚ú™> :lol:
12:18 < bridge> <milkeeycat> it's `%d` part
12:19 < bridge> <milkeeycat> xd
12:19 < bridge> <milkeeycat> and i passed 200
12:19 < bridge> <learath2> You obviously didn't, duh
12:19 < bridge> <milkeeycat> ```    printf(&H, 200);
12:19 < bridge> <milkeeycat> ```
12:19 < bridge> <learath2> Pass 200 a couple times I'm curious what happens
12:19 < bridge> <milkeeycat> different values xd
12:20 < bridge> <learath2> No like `printf(&H, 200, 200, 200)`
12:21 < bridge> <milkeeycat> im passing it 5 times and still garbage value
12:21 < bridge> <milkeeycat> it's a feature
12:21 < bridge> <milkeeycat> random number generator
12:22 < bridge> <learath2> Now I'm curious where the garbage value is coming from, is it random garbage?
12:22 < bridge> <learath2> Is your rsp aligned properly before your call instruction?
12:22 < bridge> <milkeeycat> who knows :justatest:
12:23 < bridge> <learath2> check them rn
12:24 < bridge> <milkeeycat> ```.section .text
12:24 < bridge> <milkeeycat> .global main
12:24 < bridge> <milkeeycat> main:
12:24 < bridge> <milkeeycat>     push rbp
12:24 < bridge> <milkeeycat>     mov rbp, rsp
12:24 < bridge> <milkeeycat>     sub rsp, 16
12:24 < bridge> <milkeeycat>     mov byte ptr [rbp - 1], 0
12:24 < bridge> <milkeeycat>     mov byte ptr [rbp - 2], 100
12:24 < bridge> <milkeeycat>     mov byte ptr [rbp - 3], 37
12:24 < bridge> <milkeeycat>     mov byte ptr [rbp - 4], 32
12:24 < bridge> <milkeeycat>     lea r15, [rbp - 2]
12:24 < bridge> <milkeeycat>     mov r14b, byte ptr [r15]
12:24 < bridge> <milkeeycat>     mov byte ptr [rbp - 5], r14b
12:24 < bridge> <milkeeycat>     mov byte ptr [rbp - 6], 108
12:24 < bridge> <milkeeycat>     mov byte ptr [rbp - 7], 114
12:24 < bridge> <milkeeycat>     mov byte ptr [rbp - 8], 111
12:24 < bridge> <milkeeycat>     mov byte ptr [rbp - 9], 119
12:24 < bridge> <milkeeycat>     lea r15, [rbp - 4]
12:24 < bridge> <milkeeycat>     mov r14b, byte ptr [r15]
12:24 < bridge> <milkeeycat>     mov byte ptr [rbp - 10], r14b
12:25 < bridge> <milkeeycat>     mov byte ptr [rbp - 11], 44
12:25 < bridge> <milkeeycat>     lea r15, [rbp - 8]
12:25 < bridge> <milkeeycat>     mov r14b, byte ptr [r15]
12:25 < bridge> <milkeeycat>     mov byte ptr [rbp - 12], r14b
12:25 < bridge> <milkeeycat>     lea r15, [rbp - 6]
12:25 < bridge> <milkeeycat>     mov r14b, byte ptr [r15]
12:25 < bridge> <milkeeycat>     mov byte ptr [rbp - 13], r14b
12:25 < bridge> <milkeeycat>     mov byte ptr [rbp - 14], 108
12:25 < bridge> <milkeeycat>     mov byte ptr [rbp - 15], 101
12:25 < bridge> <milkeeycat>     mov byte ptr [rbp - 16], 72
12:25 < bridge> <milkeeycat>     lea r14, [rbp - 16]
12:25 < bridge> <heinrich5991> need `mov r15, 200`
12:25 < bridge> <heinrich5991> otherwise you'll get some garbage from the upper bytes of r15
12:26 < bridge> <heinrich5991> ```py
12:26 < bridge> <heinrich5991> >>> -361604408 & 0xff
12:26 < bridge> <heinrich5991> 200
12:26 < bridge> <heinrich5991> ```
12:27 < bridge> <milkeeycat> whoopsie daisy
12:27 < bridge> <learath2> bug found in codegen
12:28 < bridge> <milkeeycat> it's a random number generator feature*
12:28 < bridge> <milkeeycat> but sadly i have to disable it
12:29 < bridge> <milkeeycat> ok, fixed xd
12:30 < ws-client> <ChillerDragon> @heinrich5991 you are just tutorial brainwashed. `puts` is goated.
12:31 < bridge> <learath2> Actually is it a codegen issue?
12:32 < bridge> <learath2> I think you are just printing it with the wrong specifier, no?
12:32 < bridge> <milkeeycat> ye, it had harcoded register size xd
12:32 < bridge> <learath2> Shouldn't it be `%hhd` to print an 8bit integer?
12:32 < bridge> <milkeeycat> ```
12:32 < bridge> <milkeeycat>     mov r15b, 200
12:32 < ws-client> <ChillerDragon> %hhu
12:32 < bridge> <milkeeycat>     movzx rsi, r15b
12:32 < bridge> <milkeeycat> ```
12:32 < bridge> <milkeeycat> now it generated this and it works üòÑ
12:33 < bridge> <learath2> Why is it in two steps anyway?
12:33 < bridge> <milkeeycat> ```
12:33 < bridge> <milkeeycat>     mov r15b, 200
12:33 < bridge> <milkeeycat>     movzx rsi, r15b
12:33 < bridge> <milkeeycat> ```
12:33 < bridge> <milkeeycat> now it generates this and it works üòÑ
12:33 < bridge> <milkeeycat> because it always loads literals in a register xd
12:38 < bridge> <learath2> That sounds like a bit of a waste üòÑ
12:38 < bridge> <milkeeycat> my main goal it to make it work
12:38 < bridge> <milkeeycat> and it does :poggers2:
12:39 < bridge> <milkeeycat> (passing structs by value for noobs)
12:39 < bridge> <learath2> When adding strings?
12:39 < bridge> <milkeeycat> is null terminated string good
12:39 < bridge> <milkeeycat> is null terminated string good?
12:39 < bridge> <milkeeycat> is null terminated strings good?
12:39 < bridge> <milkeeycat> are null terminated strings good?
12:40 < bridge> <learath2> If you want your strings to work with C, yes
12:40 < bridge> <milkeeycat> i think it wont be that hard xd
12:41 < bridge> <milkeeycat> i already have `u8` type, should I just make a `char` type an alias for `u8`? :\
12:42 < bridge> <jxsl13> -char +byte
12:42 < bridge> <jxsl13> >:D
12:43 < bridge> <jxsl13> native utf8 support, when?
12:43 < bridge> <milkeeycat> ascii is all you need
12:43 < bridge> <jxsl13> :banhammer:
12:43 < bridge> <Jupstar ‚ú™> üòè
12:45 < bridge> <milkeeycat> i think ill add typedefs first
12:45 < bridge> <Jupstar ‚ú™> make a feature that allows typedefs but the new type is handled as different type
12:45 < bridge> <milkeeycat> like in golang?
12:45 < bridge> <Jupstar ‚ú™> then you could e.g. make width and height both u32 but handled as new type
12:46 < bridge> <Jupstar ‚ú™> is it like this there?
12:46 < bridge> <Jupstar ‚ú™> i never really used go
12:46 < bridge> <enchanted____> the 4:3 works perfectly without the borders but in 1080x1080 I have a gray bar at the bottom of the screen
12:46 < bridge> <Jupstar ‚ú™> 1:1 is not supported
12:48 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1273594097134862448/image.png?ex=66bf2e6e&is=66bddcee&hm=0b80ec3a1ea78d570f7c07a940bc24de2b09dcb9a2bdd2e5f96c9e1107fcf12f&
12:48 < bridge> <Jupstar ‚ú™> ah cool
12:49 < bridge> <milkeeycat> and I wont make `type` word a keyword
12:49 < bridge> <milkeeycat> i have so many variables called `type_` and it's ugly :pepeW:
12:52 < bridge> <Jupstar ‚ú™> call them `ty`
12:52 < bridge> <Jupstar ‚ú™> is shorter
12:52 < bridge> <Jupstar ‚ú™> and if u always do it it's consistent
12:53 < bridge> <milkeeycat> i just don't like `_` at the end of the name xd
12:53 < bridge> <Jupstar ‚ú™> yes xd
12:54 < bridge> <enchanted____> Why
12:54 < bridge> <milkeeycat> if i add strings and arrays, it will be possible to make something cool in da lang
12:55 < bridge> <Jupstar ‚ú™> bcs the ui breaks in 1:1, so it was decided to not do it
12:55 < bridge> <milkeeycat> im sure it's possible even now but it will be not fun to work with arrays
12:55 < bridge> <Jupstar ‚ú™> there are no 1:1 monitors
12:55 < bridge> <Jupstar ‚ú™> arrays can be hard, true xd
12:56 < bridge> <milkeeycat> hm, i don't really know what will be hard about them but if it is i will find out :justatest:
12:56 < bridge> <milkeeycat> i wanna connect a tee to ddnet server xd
12:59 < bridge> <milkeeycat> oh, i still don't have control flow statements...
13:27 < bridge> <learath2> make it a keyword, but allow keywords as labels shadowing the actual keyword, total chaos
13:28 < bridge> <learath2> It'll also make your language not context-free, even more mess
13:28 < bridge> <milkeeycat> :monkaStop:
13:29 < bridge> <milkeeycat> ill probably use `typedef` keyword xd
14:20 < bridge> <animepdf> I have sixup enabled, but looks like server won't even try to register on 0.7 master, what setting should I twist?
14:20 < bridge> <heinrich5991> you need to have a 0.7 map, I think
14:20 < bridge> <heinrich5991> in maps7/
14:20 < bridge> <heinrich5991> have you checked the logs?
14:21 < bridge> <animepdf> yep, logs have only `register/6/ipv4` lines, there should be `register/7` right?
14:22 < bridge> <heinrich5991> do the log say anything about disabling 0.7 support?
14:22 < bridge> <heinrich5991> could you paste the logs somewhere?
14:22 < bridge> <zhn> `kind`
14:22 < bridge> <zhn> :justatest:
14:22 < bridge> <milkeeycat> kind is not the same for me xd
14:23 < bridge> <heinrich5991> usually works, but in this case it's about actual programming language types
14:23 < bridge> <heinrich5991> would be weird to call those "kinds"
14:23 < bridge> <zhn> id use more context for name then, like `variable_type`
14:23 < bridge> <zhn> ye kind misused there xd
14:24 < bridge> <animepdf> maps are probably the issue, i have like 0 0.7 maps for my current ones.
14:24 < bridge> <animepdf> here are the logs: https://pastebin.com/wKuj6m38
14:28 < bridge> <heinrich5991> hmmm, can you try running with `stdout_output_level 1`?
14:28 < bridge> <heinrich5991> I think we have a log with bad severity‚Ä¶
14:31 < bridge> <animepdf> looks identical
14:31 < bridge> <heinrich5991> hmmmmmmmmmm
14:32 < bridge> <heinrich5991> no "disabling 0.7 compatibility" log message?
14:32 < bridge> <animepdf> Nope
14:33 < bridge> <animepdf> I mean, if I was missing maps, it would probably log it, but it says nothing at all
14:35 < bridge> <heinrich5991> can you check the value of `sv_sixup` on the running server?
14:36 < bridge> <animepdf> hm, its 0
14:37 < bridge> <heinrich5991> but you set it to 1, right?
14:37 < bridge> <animepdf> yes
14:38 < bridge> <heinrich5991> so it probably got disabled by https://github.com/ddnet/ddnet/blob/6754b5ff457ef0e196c38a377bba0d688479e501/src/engine/server/server.cpp#L2588-L2596
14:38 < bridge> <heinrich5991> I don't get why you don't see the log message though
14:40 < bridge> <animepdf> Even if I enable `sv_sixup` while server is up, it doesn't show any errors, but fails to register for sure
14:40 < bridge> <animepdf> ```
14:40 < bridge> <animepdf> ...
14:41 < bridge> <animepdf> sv_sixup 1 > fifo
14:41 < bridge> <animepdf> ...
14:41 < bridge> <animepdf> 2024-08-15 12:38:07 I register/7/ipv4: registering...-
14:41 < bridge> <animepdf> 2024-08-15 12:38:07 I console: executing 'types/anime/flexreset.cfg'
14:41 < bridge> <animepdf> 2024-08-15 12:38:07 I console: executing 'reset.cfg'
14:41 < bridge> <animepdf> 2024-08-15 12:38:07 I tuning: laser_bounce_num changed to 1000.00
14:41 < bridge> <animepdf> 2024-08-15 12:38:07 I tuning: grenade_lifetime changed to 2.00
14:41 < bridge> <animepdf> 2024-08-15 12:38:07 I tuning: laser_reach changed to 800.00
14:41 < bridge> <animepdf> 2024-08-15 12:38:07 I console: executing 'types/anime/flexname.cfg'
14:41 < bridge> <animepdf> 2024-08-15 12:38:07 I console: executing 'types/anime/flexvotes.cfg'
14:41 < bridge> <animepdf> 2024-08-15 12:38:07 I server: option '‚Ää' already exists
14:41 < bridge> <animepdf> 2024-08-15 12:38:07 I console: executing 'types/anime/votes.cfg'
14:41 < bridge> <animepdf> 2024-08-15 12:38:07 I teehistorian: recording to 'teehistorian/72779fd8-d74d-499c-a20b-f2a2b9c9f37d.teehistorian'
14:41 < bridge> <animepdf> 2024-08-15 12:38:07 I sql: failed to open wordlist, using fallback
14:41 < bridge> <animepdf> 2024-08-15 12:38:07 I sql: [4] load best time done on read database 0
14:41 < bridge> <animepdf> ```
14:41 < bridge> <animepdf> weird thingie, but thanks!
14:41 < bridge> <Jupstar ‚ú™> hav u verified u on latest master
14:41 < bridge> <heinrich5991> why is there a `-` at the end of the registering‚Ä¶ log line?
14:42 < bridge> <heinrich5991> I think this is a different problem. the problem from yesterday affected 0.6 registering, not 0.7 registering
14:42 < bridge> <animepdf> sorry, probably missclick, does not present in logs
14:43 < bridge> <Jupstar ‚ú™> it must be before starting the server or not xd
14:45 < bridge> <animepdf> I think it doesn't matter, you can enable it on-fly
14:45 < bridge> <Jupstar ‚ú™> mh k. few years ago it was pretty picky
14:46 < bridge> <animepdf> just updated to lastest commit, message does not present
14:48 < bridge> <animepdf> Even if I enable `sv_sixup` while server is up, it doesn't show any errors, but fails to register for sure
14:48 < bridge> <animepdf> ```
14:48 < bridge> <animepdf> ...
14:48 < bridge> <animepdf> sv_sixup 1 > fifo
14:48 < bridge> <animepdf> ...
14:48 < bridge> <animepdf> 2024-08-15 12:45:55 I register/7/ipv4: registering...
14:48 < bridge> <animepdf> 2024-08-15 12:45:55 I console: executing 'types/anime/flexreset.cfg'
14:48 < bridge> <animepdf> 2024-08-15 12:45:55 I console: executing 'reset.cfg'
14:48 < bridge> <animepdf> 2024-08-15 12:45:55 I tuning: laser_bounce_num changed to 1000.00
14:48 < bridge> <animepdf> 2024-08-15 12:45:55 I tuning: grenade_lifetime changed to 2.00
14:48 < bridge> <animepdf> 2024-08-15 12:45:55 I tuning: laser_reach changed to 800.00
14:48 < bridge> <animepdf> 2024-08-15 12:45:55 I console: executing 'types/anime/flexname.cfg'
14:48 < bridge> <animepdf> 2024-08-15 12:45:55 I console: executing 'types/anime/flexvotes.cfg'
14:48 < bridge> <animepdf> 2024-08-15 12:45:55 I server: option '‚Ää' already exists
14:48 < bridge> <animepdf> 2024-08-15 12:45:55 I console: executing 'types/anime/votes.cfg'
14:48 < bridge> <animepdf> 2024-08-15 12:45:55 I teehistorian: recording to 'teehistorian/474246fd-7af9-4cd3-be81-28c2fb042fc2.teehistorian'
14:48 < bridge> <animepdf> 2024-08-15 12:45:55 I sql: failed to open wordlist, using fallback
14:48 < bridge> <animepdf> 2024-08-15 12:45:55 I sql: [4] load best time done on read database 0
14:48 < bridge> <animepdf> ```
14:48 < bridge> <Jupstar ‚ú™> tja
14:49 < bridge> <heinrich5991> but have you tried on tomorrow's master yet? :p
14:49 < bridge> <animepdf> what's that :justatest:
14:50 < bridge> <heinrich5991> with the PR I just opened üòÑ
14:53 < bridge> <animepdf> Yes! It works perfectly
14:55 < bridge> <heinrich5991> it tells you that it disables 0.7 support?
14:57 < bridge> <animepdf> Exactly
14:58 < bridge> <Jupstar ‚ú™> mh when standing still, cpp version is really almost unbeatable in network traffic. (21 tees comparision)
14:58 < bridge> <Jupstar ‚ú™> 
14:58 < bridge> <Jupstar ‚ú™> when all tees are active, then it can be beaten.
14:58 < bridge> <Jupstar ‚ú™> 
14:58 < bridge> <Jupstar ‚ú™> I guess that is almost related to the fact that compression algos like zstd are better the bigger the packets get
14:59 < bridge> <Jupstar ‚ú™> mh when standing still, cpp version is really almost unbeatable in network traffic. (21 tees comparision)
14:59 < bridge> <Jupstar ‚ú™> 
14:59 < bridge> <Jupstar ‚ú™> when all tees are active, then it can be beaten.
14:59 < bridge> <Jupstar ‚ú™> 
14:59 < bridge> <Jupstar ‚ú™> I guess that is mostly related to the fact that compression algos like zstd are better the bigger the packets get
15:07 < bridge> <heinrich5991> do you have a dictionary for the zstd compression?
15:07 < bridge> <Jupstar ‚ú™> nope
15:07 < bridge> <Jupstar ‚ú™> but i do snapshot diffing
15:07 < bridge> <heinrich5991> the dictionary might make a difference, you could try that
15:07 < bridge> <Jupstar ‚ú™> there is use a older snapshot as dict
15:08 < bridge> <Jupstar ‚ú™> yeah, some day. in development it's too much effort, since it will break anyway
15:08 < bridge> <heinrich5991> ah, you compress the new snapshot using the old?
15:08 < bridge> <Jupstar ‚ú™> but i am generally open for it
15:08 < bridge> <Jupstar ‚ú™> yes
15:08 < bridge> <heinrich5991> in some sense, the C++ implementation has such a custom dictionary
15:08 < bridge> <heinrich5991> since it has a huffman coding trained on teeworlds traffic
15:09 < bridge> <Jupstar ‚ú™> ah, that is defs cool
15:10 < bridge> <Jupstar ‚ú™> with 64 active tees, the rust version beats the cpp version by around 16%
15:10 < bridge> <Jupstar ‚ú™> with only 1 active tee however it looses by like 60% xD
15:11 < bridge> <heinrich5991> dictionaries are especially important on short data
15:11 < bridge> <Jupstar ‚ú™> and standing still also still performs better in cpp version.
15:11 < bridge> <Jupstar ‚ú™> 
15:11 < bridge> <Jupstar ‚ú™> but maybe i could also improve the snapshots i create.. maybe i create too much useless increasing ticks
15:11 < bridge> <heinrich5991> so I guess you might win everywhere with a dict
15:11 < bridge> <heinrich5991> ah yea, the c++ version tries to avoid ticks, I think(?)
15:12 < bridge> <Jupstar ‚ú™> yeah, would be cool üòÑ
15:12 < bridge> <Jupstar ‚ú™> 
15:12 < bridge> <Jupstar ‚ú™> i am thinking about having some kind of dict downloader. so it's not bound to one.
15:12 < bridge> <Jupstar ‚ú™> But not sure yet
15:12 < bridge> <Jupstar ‚ú™> I am happy that it's at least not too bad considering the snapshots are binary data for the server and not a known format
15:12 < bridge> <Jupstar ‚ú™> it has many tricks
15:13 < bridge> <heinrich5991> uh nice
15:13 < bridge> <heinrich5991> that's amazing
15:14 < bridge> <Jupstar ‚ú™> one thing i hope that scales, is not having any tricks with ticks etc. but have a game state similar to a json object, which really defines the full game, without any knowledge of previous ticks
15:14 < bridge> <Jupstar ‚ú™> all the custom formats like demo and here snapshot sending can ofc still create snap diffs to save space
15:15 < bridge> <Jupstar ‚ú™> early tests show that the demo format is around 300% more efficient
15:15 < bridge> <Jupstar ‚ú™> 
15:15 < bridge> <Jupstar ‚ú™> well or other way around 3x smaller in size
15:15 < bridge> <Jupstar ‚ú™> but ofc i also don't code ddnet rn, so it's not entirely fair
15:15 < bridge> <Jupstar ‚ú™> vanilla doesnt keep so much state.. i dunno the change of states in ddnet related code
15:18 < bridge> <heinrich5991> your demo format or ddnet's?
15:18 < bridge> <heinrich5991> your demo format or ddnet's is smaller?
15:19 < bridge> <Jupstar ‚ú™> yeah the new format is smaller.. but let's be honest, ddnet uses zlib or smth that alone is already bad xD
15:19 < bridge> <Jupstar ‚ú™> if i locally compress using lzma2 the file size decreases insanely too
15:19 < bridge> <Jupstar ‚ú™> for ddnet ones
15:22 < bridge> <heinrich5991> ddnet doesn't even use deflate/zlib for demos
15:22 < bridge> <heinrich5991> does your format support seeking?
15:23 < bridge> <Jupstar ‚ú™> it saves a index that allows to seek a group of snapshots basically
15:23 < bridge> <Jupstar ‚ú™> ah wait
15:24 < bridge> <Jupstar ‚ú™> ah ok nvm
15:24 < bridge> <Jupstar ‚ú™> xD
15:24 < bridge> <Jupstar ‚ú™> u mean like going to the mid of the demo right?
15:24 < bridge> <Jupstar ‚ú™> if that's what u mean then yes it supports it
15:24 < bridge> <heinrich5991> yes
15:24 < bridge> <heinrich5991> (preferably without having to read and decompress everything that came before that)
15:25 < bridge> <Jupstar ‚ú™> yes it basically saves chunks of snapshots
15:25 < bridge> <Jupstar ‚ú™> so it does decompress a few snapshots it doesnt need
15:25 < bridge> <Jupstar ‚ú™> in terms of time, it happens in under 1ms
15:25 < bridge> <Jupstar ‚ú™> (on my pc)
15:34 < bridge> <Jupstar ‚ú™> well anyway, maybe i'd need some kind of tick trick for standing tees, e.g. idle tees that bounce create annoying diff. on the other hand side, my snapshots currently as so simple. just collect stuff and serialize it to binary.. rest happens automatically.
15:34 < bridge> <Jupstar ‚ú™> 
15:34 < bridge> <Jupstar ‚ú™> It's really the question how much traffic pressure we realistically have. bcs you can also simply send snapshots less often. sending it every forth tick ofc decreases the rate significantly already.
15:34 < bridge> <Jupstar ‚ú™> 
15:34 < bridge> <Jupstar ‚ú™> Only component that suffers from this is demos üòÑ
15:36 < bridge> <Jupstar ‚ú™> tsfreddie already did tests once:
15:36 < bridge> <Jupstar ‚ú™> https://github.com/ddnet/ddnet/pull/3562
15:39 < bridge> <Jupstar ‚ú™> well anyway, maybe i'd need some kind of tick trick for standing tees, e.g. idle tees that bounce create annoying diff. on the other hand side, my snapshots currently are so simple. just collect stuff and serialize it to binary.. rest happens automatically.
15:39 < bridge> <Jupstar ‚ú™> 
15:39 < bridge> <Jupstar ‚ú™> It's really the question how much traffic pressure we realistically have. bcs you can also simply send snapshots less often. sending it every forth tick ofc decreases the rate significantly already.
15:39 < bridge> <Jupstar ‚ú™> 
15:39 < bridge> <Jupstar ‚ú™> Only component that suffers from this is demos üòÑ
17:38 < bridge> <learath2> I wonder if I'm the first person to compile a new kernel in the middle of the sea üôÉ
18:14 < bridge> <jxsl13> Above or under water?
19:00 < bridge> <k4_6u_56834> hi im new in the server can any one do a speed run with me
19:06 < bridge> <exosphere___endosphere> is it possible to add a timer to the hook?
19:10 < bridge> <Jupstar ‚ú™> possible yes. but wont happen
19:11 < bridge> <w_sa.> I have a problem, why is the png 188 and yesterday it was 70 or 80 and also the game gets interrupted even though my device is powerful? What are the reasons?
19:11 < bridge> <Jupstar ‚ú™> maybe your internet or the internet from server is laggy today
19:11 < bridge> <Jupstar ‚ú™> $ddos
19:11 < bridge> <DDNet> This command was not found.
19:11 < bridge> <Jupstar ‚ú™> ./ddos shows current ddos of servers
19:12 < bridge> <w_sa.> /ddos shows current ddos of servers
19:12 < bridge> <w_sa.> So when is the solution?
19:13 < bridge> <Jupstar ‚ú™> hope that the ddos stops
19:13 < bridge> <Jupstar ‚ú™> try a different server
19:13 < bridge> <w_sa.> This ping only in kog
19:13 < bridge> <Jupstar ‚ú™> $kog
19:14 < bridge> <w_sa.> There are no two servers in Kog, which has a great number and the last ping is very bad
19:15 < bridge> <Jupstar ‚ú™> $kog
19:15 < bridge> <Jupstar ‚ú™> ask on kog discord
19:15 < bridge> <Jupstar ‚ú™> nothing we can do
19:15 < bridge> <Jupstar ‚ú™> but if their servers lag and there is no other location that sounds bad
19:15 < bridge> <w_sa.> ok thx
19:17 < bridge> <k4_6u_56834> :brownbear:
19:17 < bridge> <k4_6u_56834> :ouch:
19:18 < bridge> <Jupstar ‚ú™> @k4_6u_56834 this is dev chat. ask in #general for other players to play with you üòÑ
19:18 < bridge> <k4_6u_56834> :mmm:
19:18 < bridge> <k4_6u_56834> ok
19:18 < bridge> <Jupstar ‚ú™> or simply join a ingame server and ask ppl üòÑ
19:18 < bridge> <k4_6u_56834> ok
19:18 < bridge> <k4_6u_56834> i have a skin in ddnet
19:19 < bridge> <k4_6u_56834> i will show it to you
19:19 < bridge> <k4_6u_56834> https://cdn.discordapp.com/attachments/293493549758939136/1273692583989874749/image.png?ex=66bf8a28&is=66be38a8&hm=b2bd7a7690a3f3fc1bc29cbe4f04019f3936fc84707fd6133a449ec9ce246e61&
19:19 < bridge> <k4_6u_56834> is it good or no
19:20 < bridge> <Jupstar ‚ú™> looks like a 3 years old discovered paint
19:20 < bridge> <k4_6u_56834> omg:cammo:
19:20 < bridge> <Jupstar ‚ú™> soz
19:20 < bridge> <Jupstar ‚ú™> i am no artist
19:20 < bridge> <k4_6u_56834> is it good
19:20 < bridge> <Jupstar ‚ú™> maybe i don't understand what masterful things are in there
19:21 < bridge> <Jupstar ‚ú™> maybe you tried to create the akatsuki logo
19:21 < bridge> <k4_6u_56834> are you a ronot
19:21 < bridge> <k4_6u_56834> robot
19:21 < bridge> <Jupstar ‚ú™> :think_bot:
19:21 < bridge> <k4_6u_56834> or a real person
19:21 < bridge> <Jupstar ‚ú™> you are talking to ChatGPT 8
19:21 < bridge> <Jupstar ‚ú™> Welcome
19:21 < bridge> <k4_6u_56834> hahahahahaha
19:22 < bridge> <k4_6u_56834> ok
19:22 < bridge> <k4_6u_56834> can i add my skin in ddnet
19:22 < bridge> <k4_6u_56834> https://cdn.discordapp.com/attachments/293493549758939136/1273693298443423764/image.png?ex=66bf8ad2&is=66be3952&hm=a184d6f5546f8555fd7608bb96734c0c8af3d49f623a16da48165f9230e8987d&
19:22 < bridge> <Jupstar ‚ú™> #üì¨submit-skins #üìçinfo
19:22 < bridge> <k4_6u_56834> pls
19:22 < bridge> <k4_6u_56834> thanks
19:22 < bridge> <Jupstar ‚ú™> but dont expect others like it xd
19:22 < bridge> <k4_6u_56834> ok
19:59 < bridge> <melo∆û> why are relative paths not allowed when importing go modules
19:59 < bridge> <melo∆û> i feel scammed
20:00 < bridge> <jxsl13> use a workspace
20:00 < bridge> <jxsl13> tho, I don't like them personally
20:01 < bridge> <jxsl13> https://go.dev/doc/tutorial/workspaces
20:01 < bridge> <jxsl13> might wanna tell what you want to do
20:01 < bridge> <jxsl13> or rather why
20:02 < bridge> <melo∆û> i just wanted to clean up my main.go a bit :kekw:
20:02 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1273703475502514308/grafik.png?ex=66bf944c&is=66be42cc&hm=9684c77556eac9ba816630af0eb8f576edbd623500a12ab2eb2f821116506629&
20:03 < bridge> <jxsl13> D:?
20:03 < bridge> <jxsl13> it's just too long of an import?
20:03 < bridge> <jxsl13> you can name your module wurst in the go.mod
20:03 < bridge> <melo∆û> how can i import a single file, golang confusing
20:04 < bridge> <jxsl13> let me explain
20:04 < bridge> <jxsl13> open your go.mod
20:04 < bridge> <melo∆û> yes m'lord
20:04 < bridge> <jxsl13> at the top you have a module name
20:04 < bridge> <melo∆û> yes m'lord
20:05 < bridge> <milkeeycat> why is your `main.go` not in `cmd` D:
20:05 < bridge> <jxsl13> for libraries it's better to be called whatever the url is for importing it and for an actual application that is not supposed to be used as a library, you can call it whatever you want, e.g. wurst
20:05 < bridge> <jxsl13> so you wurst is the root path of your import
20:06 < bridge> <jxsl13> wurst/logfile
20:06 < bridge> <jxsl13> would import logfile
20:06 < bridge> <jxsl13> if the module in go.mod is called github.com/melon/wurst
20:06 < bridge> <jxsl13> the the import path would be github.com/melon/wurst/logfile
20:07 < bridge> <jxsl13> then
20:07 < bridge> <jxsl13> main packages cannot be imported
20:08 < bridge> <melo∆û> given whatever my module is called i can import and use anything under it's structure huh
20:08 < bridge> <melo∆û> neat
20:09 < bridge> <jxsl13> yes
20:09 < bridge> <jxsl13> a little bit like python, I guess
20:12 < bridge> <.puch> hello guys do you know how to setup a gctf server with the bridge???
20:12 < bridge> <.puch> cause I just did one but with 0.7 :/
20:13 < bridge> <jxsl13> you mean chiller's mod?
20:13 < bridge> <.puch> i'd like the server could be accessible by ddnet and 0.7
20:13 < bridge> <jxsl13> called ddnet-insta
20:13 < bridge> <jxsl13> found on github
20:13 < bridge> <jxsl13> does exactly that
20:13 < bridge> <jxsl13> I also host them
20:13 < bridge> <jxsl13> chiller as well
20:15 < bridge> <jxsl13> https://github.com/ddnet-insta/ddnet-insta
20:15 < bridge> <.puch> i need to compile it?
20:16 < bridge> <jxsl13> I would suggest you compile it
20:16 < bridge> <jxsl13> the latest release is somewhat outdated
20:16 < bridge> <jxsl13> are you on ubuntu or debian?
20:17 < bridge> <.puch> idk I can change anyway
20:17 < bridge> <.puch> i just setup a ubuntu 20.04
20:18 < bridge> <jxsl13> there are dependency installation instructions seemingly for most in the official ddnet repo
20:18 < bridge> <jxsl13> https://github.com/ddnet/ddnet
20:18 < bridge> <jxsl13> ```
20:18 < bridge> <jxsl13> sudo apt install build-essential cargo cmake git glslang-tools google-mock libavcodec-extra libavdevice-dev libavfilter-dev libavformat-dev libavutil-dev libcurl4-openssl-dev libfreetype6-dev libglew-dev libnotify-dev libogg-dev libopus-dev libopusfile-dev libpng-dev libsdl2-dev libsqlite3-dev libssl-dev libvulkan-dev libwavpack-dev libx264-dev python3 rustc spirv-tools`
20:18 < bridge> <jxsl13> ```
20:18 < bridge> <jxsl13> will take a while
20:19 < bridge> <jxsl13> theoretically you don't need to install client dependencies but it's easier to build everything, so just install all dependencies
20:20 < bridge> <jxsl13> after the installation finished
20:20 < bridge> <.puch> so I need to install ddnet then ddnet-insta?
20:21 < bridge> <jxsl13> ```
20:21 < bridge> <jxsl13> git clone --recursive https://github.com/ddnet-insta/ddnet-insta
20:21 < bridge> <jxsl13> cd ddnet-insta
20:21 < bridge> <jxsl13> mkdir build
20:21 < bridge> <jxsl13> cd build
20:21 < bridge> <jxsl13> cmake ..
20:21 < bridge> <jxsl13> make -j$(nproc)
20:21 < bridge> <jxsl13> ```
20:21 < bridge> <jxsl13> no
20:21 < bridge> <jxsl13> use these commands
20:21 < bridge> <.puch> ok ty
20:21 < bridge> <jxsl13> you just use the ddnet build instructions to build ddnet-insta
20:21 < bridge> <jxsl13> chiller is referencing these in his README.md
20:22 < bridge> <jxsl13> so in ddnet-insta there are no build instructions
20:22 < bridge> <.puch> ah yes ok i see: Building on Linux and macOS
20:22 < bridge> <.puch> To compile DDNet yourself, execute the following commands in the source root:
20:22 < bridge> <.puch> 
20:22 < bridge> <.puch> mkdir build
20:22 < bridge> <.puch> cd build
20:22 < bridge> <.puch> cmake ..
20:22 < bridge> <.puch> make -j$(nproc)
20:22 < bridge> <jxsl13> yes
20:22 < bridge> <.puch> still upgrading everything currently ^^
20:23 < bridge> <jxsl13> that's a big download
20:23 < bridge> <.puch> yeah
20:23 < bridge> <jxsl13> for configuring gctf
20:23 < bridge> <.puch> i just do a normal cfg file?
20:23 < bridge> <jxsl13> https://github.com/ddnet-insta
20:23 < bridge> <jxsl13> there are multiple repos there
20:24 < bridge> <jxsl13> one of the repos is maps, one of them is cfg
20:24 < bridge> <jxsl13> you can basically us ethe cfg repo for configuration
20:24 < bridge> <jxsl13> you can basically use the cfg repo for configuration
20:24 < bridge> <jxsl13> I'm personally using the cfg repo with a few small modifications
20:24 < bridge> <.puch> ok ty
20:25 < bridge> <.puch> anyway ty @jxsl13
20:26 < bridge> <.puch> it's sad we have 2 different tw now üò¢
20:29 < bridge> <jxsl13> https://cdn.discordapp.com/attachments/293493549758939136/1273710100476989543/Bildschirmfoto_2024-08-15_um_20.28.13.png?ex=66bf9a78&is=66be48f8&hm=a82bb55a705089ca934c336fa574d9fb46d0b97bcc800f88766f82f35c443881&
20:30 < bridge> <.puch> crazy cfg xd
20:30 < bridge> <jxsl13> just 01 and 02 are running
20:30 < bridge> <jxsl13> t0x is for tournament
20:30 < bridge> <jxsl13> that's roughly the layout if oyu want to somewhat easily use the cfg repo
20:31 < bridge> <jxsl13> that's roughly the layout if you want to somewhat easily use the cfg repo
20:31 < bridge> <.puch> im building rn
20:31 < bridge> <melo∆û> @jxsl13 why in the **insert slur here** do i have to make global variables start with a Capital letter :kekw:
20:31 < bridge> <melo∆û> my lsp didnt say anything and i was so confused
20:32 < bridge> <.puch> before everything was easier for servers üòí
20:32 < bridge> <jxsl13> you don't
20:32 < bridge> <jxsl13> Go's public/private field modifiers(?) are bases on name capitalization
20:33 < bridge> <jxsl13> if you want to access the global variable from outside of a package, you'd have to make the first letter uppercased
20:33 < bridge> <jxsl13> same with struct fields
20:33 < bridge> <jxsl13> and function names, method names, types, etc
20:34 < bridge> <melo∆û> yeah that's what i meant, sorry, but why :kekw:
20:34 < bridge> <jxsl13> dunno
20:34 < bridge> <jxsl13> maybe compilation speed? who knows
20:34 < bridge> <zhn> nah, it was pain in ass back then
20:34 < bridge> <zhn> a lot easier
20:34 < bridge> <zhn> its a lot easier now
20:34 < bridge> <jxsl13> bam for the win
20:34 < bridge> <jxsl13> ._: not
20:34 < bridge> <.puch> i mean you just dl an exe and 1 cfg or more
20:35 < bridge> <.puch> what was complicated xd
20:35 < bridge> <jxsl13> you can download an outdated version
20:35 < bridge> <jxsl13> it's precompiled
20:35 < bridge> <jxsl13> would not recommend
20:35 < bridge> <jxsl13> @chillerdragon, release a new ddnet-insta version
20:35 < bridge> <melo∆û> :kekw: - go wtf
20:35 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1273711686909431859/2024-08-15_20-32-08.mkv?ex=66bf9bf2&is=66be4a72&hm=31b79194ab992f4a664d1da019e4fd35da7f19f81e84404ea64cf94c9c56d5c4&
20:35 < bridge> <zhn> i rarely saw linux builds of mods on teeworlds.com
20:35 < bridge> <melo∆û> :kekw: - go wtf
20:35 < bridge> <melo∆û> gg
20:35 < bridge> <melo∆û> .mkv moment
20:35 < bridge> <jxsl13> video is gone
20:36 < bridge> <zhn> check irc
20:36 < bridge> <jxsl13> link pls D:
20:36 < bridge> <jxsl13> gimme web client
20:37 < bridge> <melo∆û> just a video where i blame go with that
20:37 < bridge> <melo∆û> wdym path isnt available?!?!? 
20:37 < bridge> <melo∆û> 
20:37 < bridge> <melo∆û> OOhh it needs to be Path
20:37 < bridge> <jxsl13> you will like the lsp
20:37 < bridge> <jxsl13> when you start questioning your life
20:37 < bridge> <melo∆û> :D
20:37 < bridge> <jxsl13> because there is a syntax error 300 lines below
20:38 < bridge> <Jupstar ‚ú™> go to python
20:38 < bridge> <jxsl13> and your auto completion and everything else is broken
20:38 < bridge> <melo∆û> gg
20:38 < bridge> <jxsl13> due to that syntax error
20:38 < bridge> <zhn> sux
20:38 < bridge> <melo∆û> tbf, `gopls` as my neovim LSP is pretty decent
20:38 < bridge> <jxsl13> might wanna invest some bucks into Goland
20:38 < bridge> <jxsl13> if you want to fight that problem with money xD
20:38 < bridge> <jxsl13> or learn to live with it
20:39 < bridge> <jxsl13> ._: <-- see the third eye
20:39 < bridge> <Jupstar ‚ú™> alias gopls='sudo shutdown'
20:39 < bridge> <jxsl13> vscode's auto import is shit
20:40 < bridge> <jxsl13> sometimes it's guessing imports from your local module cache
20:40 < bridge> <jxsl13> modules that are not even defined as dependencie sin your go.mod
20:40 < bridge> <Jupstar ‚ú™> what are imports?
20:40 < bridge> <Jupstar ‚ú™> never heard of that
20:40 < bridge> <jxsl13> main.go master race
20:41 < bridge> <jxsl13> me neither üòõ
20:41 < bridge> <Jupstar ‚ú™> car.go
20:41 < bridge> <melo∆û> this is to complicated, will just write a 5K LoC main.go file
20:41 < bridge> <jxsl13> a perfect Go application: https://github.com/jxsl13/teeworlds-start/blob/master/main.go
20:42 < bridge> <jxsl13> the first and last one
20:44 < bridge> <.puch> build done
20:44 < bridge> <jxsl13> there is not a DDNet-Server
20:44 < bridge> <jxsl13> now
20:44 < bridge> <.puch> ?
20:44 < bridge> <chillerdragon> you mean create a git tag with release and stuff or what? I will do a release after the gctf tournament probably. That became some kind of tradition
20:44 < bridge> <jxsl13> that's the server
20:45 < bridge> <jxsl13> poor puch needs to compile from scratch
20:45 < bridge> <jxsl13> there is now a DDNet-Server executable in your build folder
20:45 < bridge> <chillerdragon> Oh you need binaries
20:45 < bridge> <.puch> yes I see it
20:45 < bridge> <chillerdragon> GitHub actions have binaries
20:45 < bridge> <jxsl13> that's the server
20:45 < bridge> <.puch> ok ty
20:46 < bridge> <jxsl13> indeed but those ar enot cached indefinitly
20:46 < bridge> <jxsl13> :'/
20:46 < bridge> <jxsl13> poor Puch
20:47 < bridge> <.puch> especially now im shit with linux building things and stuff like that
20:47 < bridge> <.puch> xd
20:48 < bridge> <chillerdragon> This reminds me of my infrastructure xd. The name cfg-secrets and Watafak even server.cnf
20:48 < bridge> <jxsl13> that is your infrastructure
20:48 < bridge> <jxsl13> :hackerman:
20:49 < bridge> <chillerdragon> oh no I got haxxxed by jiggsel
20:49 < bridge> <jxsl13> I'm using your git repo and changing as little as possible in order to stay up to date with a simple git stash, git pull, git stash pop
20:49 < bridge> <.puch> xd
20:50 < bridge> <chillerdragon> Git conflict driven development as deen would call it
20:50 < bridge> <chillerdragon> Big fan
20:50 < bridge> <jxsl13> works 9/10
20:50 < bridge> <jxsl13> would recommend
20:53 < bridge> <chillerdragon> Bit nasty to use a dirty work tree and stack tho xd. You can just commit and merge or rebase
20:54 < bridge> <jxsl13> meh
20:54 < bridge> <jxsl13> too lazy
20:55 < bridge> <chillerdragon> @.puch: are you the OG vanilla player btw?
20:55 < bridge> <.puch> yes
20:56 < bridge> <chillerdragon> pog
20:56 < bridge> <.puch> how are you? üôÇ
20:56 < bridge> <chillerdragon> Remember me?
20:56 < bridge> <.puch> ofc bro
20:56 < bridge> <chillerdragon> Good good
20:56 < bridge> <chillerdragon> I didn‚Äôt expect you to still play
20:56 < bridge> <.puch> we did vanille cup together
20:56 < bridge> <chillerdragon> Nice to see you alive
20:59 < bridge> <.puch> ty you too
20:59 < bridge> <.puch> I got a son few days ago
20:59 < bridge> <.puch> ‚ù§Ô∏è
21:00 < bridge> <jxsl13> you now gctf main?
21:00 < bridge> <.puch> i will participate to the gctf tourni
21:00 < bridge> <.puch> üôÇ
21:00 < bridge> <.puch> with 0.7 maybe who knows haha
21:01 < bridge> <jxsl13> I see you in the pic community discord üôÇ
21:01 < bridge> <.puch> yes ^^
21:02 < bridge> <soulyvevo> anyone wants to play instashield? now that 0.7 connections are possible
21:03 < bridge> <chillerdragon> Woah congrats
21:03 < bridge> <jxsl13> good luck üòÆ
21:04 < bridge> <soulyvevo> im gonna force people to play it i swear
21:04 < bridge> <jxsl13> I don't play anymore
21:04 < bridge> <jxsl13> so sadly a no from me
21:05 < bridge> <soulyvevo> @jxsl13 hop on instashield
21:05 < bridge> <jxsl13> access denied
21:05 < bridge> <soulyvevo> hop on instashield
21:05 < bridge> <jxsl13> wrong password, please try again
21:05 < bridge> <soulyvevo> why do you not play anyone
21:06 < bridge> <jxsl13> sitting 8 hours a day in front of a pc
21:06 < bridge> <jxsl13> guess that's why
21:06 < bridge> <soulyvevo> you can now sit 9th hour and spend it on instashield
21:06 < bridge> <soulyvevo> its a fair deal
21:06 < bridge> <jxsl13> fair for you
21:06 < bridge> <.puch> 2024-08-15 19:06:12 I assert: /home/ubuntu/ddnet-insta/src/engine/server/register.cpp(539): curl version < 7.77.0 does not support registering via both IPv4 and IPv6, set `sv_register ipv6` or `sv_register ipv4`
21:07 < bridge> <jxsl13> not for me
21:07 < bridge> <.puch> wow wow wow
21:07 < bridge> <.puch> almost done
21:07 < bridge> <jxsl13> use ipv4
21:09 < bridge> <.puch> ok it's working
21:10 < bridge> <.puch> server is on üòÑ
21:10 < bridge> <.puch> ty guys
21:10 < bridge> <jxsl13> np
21:10 < bridge> <chillerdragon> Wtf
21:11 < bridge> <soulyvevo> chillerdragon: hop on instashield
21:12 < bridge> <chillerdragon> Dude I‚Äôm in 300 ping Indonesian island and it‚Äôs 3 am
21:12 < bridge> <soulyvevo> who asked
21:12 < bridge> <soulyvevo> hop on instashield
21:12 < bridge> <chillerdragon> .\_.
21:12 < bridge> <soulyvevo> im waiting
21:12 < bridge> <melo∆û> https://tenor.com/view/hop-on-ddrace-ddracenetwork-ddnet-ddracenet-gif-11768662929723861806
21:14 < bridge> <jxsl13> haven't played in the last like 3-4 years
21:14 < bridge> <jxsl13> nothing new
21:14 < bridge> <soulyvevo> @blaiszephyr hop on instashield
21:14 < bridge> <.puch> and to get discord results is there anything to do?
21:14 < bridge> <.puch> i think it's more complicated
21:14 < bridge> <melo∆û> no, i'm learning golang atm
21:14 < bridge> <chillerdragon> Woah didn‚Äôt we play zCatch in 2020
21:14 < bridge> <jxsl13> might be the case
21:14 < bridge> <chillerdragon> Oh wait 2020 is ages ago
21:14 < bridge> <jxsl13> that's why 3-4 years
21:14 < bridge> <soulyvevo> you make me really sad right now
21:15 < bridge> <jxsl13> and not 4 years
21:15 < bridge> <jxsl13> we got him
21:15 < bridge> <milkeeycat> cool email template
21:15 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1273721804686622794/image.png?ex=66bfa55e&is=66be53de&hm=13d2c2184343a53785ef09d87f5243f096def3215d73fa15709567fbdb072b30&
21:15 < bridge> <chillerdragon> It‚Äôs in the readme
21:15 < bridge> <jxsl13> create discord webhook
21:16 < bridge> <jxsl13> set webhook in server config
21:17 < bridge> <.puch> ok i'll do that later
21:18 < bridge> <.puch> i gonna eat something
21:18 < bridge> <.puch> cu later guys üòâ
21:18 < bridge> <melo∆û> bye Puch!
21:18 < bridge> <jxsl13> ```
21:18 < bridge> <jxsl13> # 0=csv 1=psv 2=ascii table 3=markdown table 4=json
21:19 < bridge> <jxsl13> sv_round_stats_format 1
21:19 < bridge> <jxsl13> sv_round_stats_discord_webhook "https://discord.com/api/webhooks/123456789/...."
21:19 < bridge> <jxsl13> ```
21:22 < bridge> <Ewan> gm
21:23 < bridge> <Jupstar ‚ú™> grand master, game master, ewan, good morning
21:23 < bridge> <Ewan> I'm trolling
21:23 < bridge> <Ewan> I actually just got out of a meeting
21:23 < bridge> <Ewan> but how are u fellas today
21:24 < bridge> <Jupstar ‚ú™> why r u ewan green and @milkeeycat is alex white
21:24 < bridge> <Jupstar ‚ú™> r u like cousins
21:24 < bridge> <Jupstar ‚ú™> xd
21:24 < bridge> <chillerdragon> Xd
21:24 < bridge> <Jupstar ‚ú™> is that some auto generated name thing xddd
21:25 < bridge> <milkeeycat> color surnames rocks
21:25 < bridge> <chillerdragon> Yes white masterrace
21:25 < bridge> <chillerdragon> Eh wops
21:26 < bridge> <Ewan> idk
21:26 < bridge> <jxsl13> 23anme will tell you
21:26 < bridge> <jxsl13> 23andme will tell you
21:27 < bridge> <jxsl13> milk is also white
21:27 < bridge> <Ewan> true
21:27 < bridge> <jxsl13> so alex white is pretty fitting
21:27 < bridge> <chillerdragon> lol
21:27 < bridge> <jxsl13> for MilkeyCat
21:27 < bridge> <Ewan> eey
21:27 < bridge> <jxsl13> for MilkeeyCat
21:27 < bridge> <Ewan> üòÅ
21:28 < bridge> <Ewan> I want my :steamhappy:
21:28 < bridge> <Ewan> is just my name
21:28 < bridge> <Ewan> irl name
21:29 < bridge> <Jupstar ‚ú™> my irl name is john brown
21:29 < bridge> <jxsl13> mine is also john
21:29 < bridge> <chillerdragon> Ewan and catto dox
21:29 < bridge> <jxsl13> but not generated
21:29 < bridge> <chillerdragon> Mine is Jonathan blow
21:29 < bridge> <Jupstar ‚ú™> chillers is mint yellow
21:29 < bridge> <jxsl13> chillers name is Jonathan Frakes
21:30 < bridge> <Jupstar ‚ú™> but robyte is also fake.
21:30 < bridge> <Jupstar ‚ú™> 
21:30 < bridge> <Jupstar ‚ú™> his name is like the most german name ever
21:30 < bridge> <chillerdragon> So German it‚Äôs probably fake
21:30 < bridge> <Jupstar ‚ú™> yeah
21:31 < bridge> <Ewan> nobody believes me when I say it's my real name
21:31 < bridge> <Jupstar ‚ú™> i believe you
21:31 < bridge> <chillerdragon> I think oy‚Äòs name was similar cliche
21:31 < bridge> <Jupstar ‚ú™> do you know oy irl?
21:31 < bridge> <chillerdragon> We go bowling‚Äôs on Tuesdays
21:31 < bridge> <jxsl13> stalkerdragon in action
21:32 < bridge> <Jupstar ‚ú™> in indonesia? XD
21:32 < bridge> <chillerdragon> -.-
21:32 < bridge> <chillerdragon> I saw his git commit author ‚Ä¶
21:32 < bridge> <jxsl13> what did it say
21:32 < bridge> <chillerdragon> I forgot
21:32 < bridge> <chillerdragon> Sorry oy
21:33 < bridge> <chillerdragon> I fan I swear
21:33 < bridge> <jxsl13> I'd guess: Peter Pettigrew
21:33 < bridge> <chillerdragon> It was something super German like robsit I think
21:34 < bridge> <Jupstar ‚ú™> here is my wikipedia:
21:34 < bridge> <Jupstar ‚ú™> https://de.wikipedia.org/wiki/Kamehameha_I.
21:34 < bridge> <Jupstar ‚ú™> in german ofc
21:34 < bridge> <Ewan> ofc
21:34 < bridge> <jxsl13> Oy Mittelberg
21:34 < bridge> <jxsl13> german town
21:34 < bridge> <chillerdragon> Kamehamhehsva what
21:34 < bridge> <Jupstar ‚ú™> kamehameha
21:34 < bridge> <jxsl13> dbz is based on real ppl
21:35 < bridge> <jxsl13> impossible
23:17 < bridge> <rutujek> https://tenor.com/bo05X.gif
