01:49 < bridge_> <zhn> can you create a topic on teeworlds.com too?
02:45 < bridge_> <Ewan> are you talking about dynamic libs (compiled alongside DDNet) or shared libs (on the system)?
02:46 < bridge_> <Ewan> this should typically be handled as an install step. whatever environment you’re using with mingw should be smart enough to load the dependencies without any fuss
02:47 < bridge_> <Ewan> for Windows deployment this is tricky because there’s no expectation that the libs will exist on target systems. generally when you “deploy” you should also copy the relevant DLLs over. Copying stuff like that should not be the job of the build system
02:48 < bridge_> <Ewan> I use this script https://gist.github.com/ewancg/de0b47f55b9894b9dc5a7b8609150186
02:48 < bridge_> <Ewan> do you really want make making unneeded copies of all of the system DLLs?
02:50 < bridge_> <Ewan> this should typically be handled as an install step. whatever environment you’re using with mingw should be smart enough to load the dependencies without any fuss as you run it
02:51 < bridge_> <Ewan> for Windows deployment this is tricky because there’s no expectation that the libs will exist on target systems. generally when you “deploy” you should also copy the relevant DLLs over. Copying stuff like that should not be the job of the build system (at compile time)
02:52 < bridge_> <Ewan> @blaiszephyr i forgot if i pinged you with the initial reply... forgive the dupe if so
02:52 < bridge_> <Ewan> as far as the latter is concerned, it should typically be handled as an install step. whatever environment you’re using with mingw should be smart enough to load the dependencies without any fuss as you run it
02:53 < bridge_> <Ewan> this is also a licensing can of worms. you're essentially creating a build with all the contents of a static build, which has its own considerations (some libraries you are restricted from linking statically by license)
03:23 < ws-client> <ChillerDragon> That CI fail is suspicious. https://github.com/ddnet/ddnet/actions/runs/8825297278/job/24229302734?pr=8236
03:23 < ws-client> <ChillerDragon> the pr added an unused method that is never called. And the CI failed in the admin integration test. Are the integration tests getting unstable?
05:37 < bridge_> <vappy19> Melon
05:39 < bridge_> <meloƞ> Solely talking about dynamic libs (sqlite, steamapi, avformat, sdl2) - i'll Check If i can modify my cmakelists to do that for me. Thanks ❤️
05:39 < bridge_> <meloƞ> Yes?
05:40 < bridge_> <vappy19> I Saw u typing :)
05:40 < bridge_> <meloƞ> :angy:
05:40 < bridge_> <meloƞ> I Just woke Up
05:40 < bridge_> <vappy19> :owo:
05:40 < bridge_> <meloƞ> Its 5:40 AM
05:40 < bridge_> <meloƞ> Help
05:41 < bridge_> <vappy19> Yeeeh me 2, sometimes i awake at midnight hahaha
05:43 < bridge_> <meloƞ> Maybe with a Post_build Copy ? Hmm Coffee and 10 hours Work before in can Check :monkaStop: :monkaStop:
06:02 < bridge_> <Ewan> same deal
06:02 < bridge_> <Ewan> environment should handle it and an install/deploy step should be responsible for copying it into the build dir
06:03 < bridge_> <Ewan> if you're using MSYS2 you should be able to start it through you env's terminal because it has /*/lib and whatnot added to the library search paths
06:03 < bridge_> <Ewan> and then use a separate deploy step
06:03 < bridge_> <Ewan> those DLLs are not built alongside ddnet
10:20 < bridge_> <meloƞ> I'll Just add a Script to move the necessary Files to my build folder, Just annoying i have to Launch a Script every time i Clean rebuild. I wanna get rid of IDE's, they take to much work off of me and i feel like i know nothing about the actual process when you have a program doing it for you
10:23 < bridge_> <ryozuki> im not single anymore :justatest:
10:24 < bridge_> <teero777> yo since when does the ddnet server kick you when the unused bits of the playerflag inputs are non-zero? xD
10:26 < bridge_> <teero777> lmao
10:39 < bridge_> <ryozuki> https://www.phoronix.com/news/NVK-Implicit-Pipeline-Caching
10:48 < bridge_> <ryozuki> @learath2 btw my coworker, aided by our findings found the issue
10:48 < bridge_> <ryozuki> the issue was that some structs were misaligned, we use the Layout from rust to know the sizes and aligns of the data we create, but made a wrong assumption, we needed to also pad to align at the end of structs
10:49 < bridge_> <ryozuki> tldr, we thought 28 was the correct size for example but llvm assumed 32
10:51 < bridge_> <learath2> So was it that you were allocating the wrong stack size as I hypothesized?
10:52 < bridge_> <ryozuki> yep
10:52 < bridge_> <ryozuki> u hit the nail
10:58 < bridge_> <learath2> :Celebrate:
