06:53 < bridge> <woidless> How can I open a tas file?
07:02 < bridge> <Ewan> [pxcollagecollective](https://cdn.discordapp.com/emojis/849746785290158140.webp?size=48&name=pxcollagecollective)
07:06 < bridge> <totar> send it to me
07:06 < bridge> <totar> I open it for you :)
08:36 < ws-client> <ChillerDragon> aoc is op in utc+8
08:37 < ws-client> <ChillerDragon> https://adventofcode.com/2024/leaderboard/private/view/677828 
08:37 < bridge> <tsfreddie> chillerdragon: good morning
08:38 < ws-client> <ChillerDragon> its almost 4 fred
08:38 < bridge> <tsfreddie> i just woke up
08:38 < bridge> <Ewan> it‚Äôs morning for me
08:38 < bridge> <Ewan> 12:38
08:38 < ws-client> <ChillerDragon> wtf
08:38 < bridge> <Ewan> :brownbear:
08:38 < ws-client> <ChillerDragon> @tsfreddie fix your sleep
08:38 < bridge> <jao187> :justatest:
08:39 < bridge> <Ewan> hoping he just moved back to canada
08:39 < bridge> <tsfreddie> :pepeW: making pr for ddnet exhausted me
08:39 < bridge> <Ewan> ‚úÖ
08:39 < bridge> <tsfreddie> now im hungry
08:40 < bridge> <tsfreddie> ill get cookin, later guys
08:48 < bridge> <Ewan> pce
09:05 < bridge> <woidless> ChillerDragon
09:05 < bridge> <woidless> Where is the Player Search API located in Teedata?
10:25 < ws-client> <ChillerDragon> @woidless https://teedata.net/docs
10:26 < ws-client> <ChillerDragon> https://teedata.net/api/user/read?name=ChillerDragon
10:27 < bridge> <Solly> @robyt3 im not sure how to make the text the same size
10:27 < bridge> <Solly> i removed the mapping thingy for the preview and its not the same
10:28 < ws-client> <ChillerDragon> brand new ddnet protocol support just dropped on my website https://twnet.zillyhuhn.com/?v=6&d=00+06+02+42+0d+05+28+43+68+69+6c+6c+65+72+44+72+61+67+6f+6e+00+7c+2a+4b+6f+47+2a+7c+00+80+01+67+72+65+65+6e+73+77+61+72+64+00+00+87+c5+8d+0e+8e+ab+9e+02+40+0c+06+23+63+72+61+73+68+6d+65+70+6c+78+00+3d+e3+94+8d
10:28 < bridge> <tsfreddie> i want to remove yourself from spectator menu
10:28 < bridge> <Solly> no :D
10:30 < bridge> <tsfreddie> it feels confusing when new player accidentally do that and pause/unpause don't give enough visual changes to indicate what is happening.
10:30 < bridge> <tsfreddie> SpectateCloest already filters out yourself, not sure why it is not enforced everywhere else
10:50 < bridge> <robyt3> Discussion of cheats including bots and TAS is not allowed
10:51 < bridge> <robyt3> You probably need to the `MapScreenToInterface` as ingame
10:51 < bridge> <Solly> ?
10:51 < bridge> <robyt3> You probably need the same `MapScreenToInterface` as ingame
10:52 < bridge> <Solly> ```
10:52 < bridge> <Solly> // create nameplates at standard zoom
10:52 < bridge> <Solly>         This.Graphics()->GetScreen(&ScreenX0, &ScreenY0, &ScreenX1, &ScreenY1);
10:52 < bridge> <Solly>         This.RenderTools()->MapScreenToInterface(This.m_pClient->m_Camera.m_Center.x, This.m_pClient->m_Camera.m_Center.y);
10:52 < bridge> <Solly> ```
10:53 < bridge> <robyt3> hmmm, looks like `CNamePlates::OnRender` just uses the screen size from the previous component
10:53 < bridge> <robyt3> maybe try to print the screen size there and also use it for the preview? I guess that would break the positioning though :/
10:56 < bridge> <Jupstar ‚ú™> Yeah it's the commit i posted, i guess we could restore old behavior by making sure NaNs are not created in a different way.
10:56 < bridge> <Jupstar ‚ú™> 
10:56 < bridge> <Jupstar ‚ú™> But it's kinda annoying to test it for a huge range of skins by just changing the code randomly, so either the dev has to understand it or we need some test setup üòÑ
10:57 < bridge> <Jupstar ‚ú™> nice
10:59 < bridge> <Jupstar ‚ú™> lol, looks interesting
11:05 < bridge> <melo∆û> Welcome back baby ‚ù§Ô∏è
11:06 < bridge> <Jupstar ‚ú™> Yeah I am directly super sick, almost didn't sleep today.
11:06 < bridge> <Jupstar ‚ú™> 
11:06 < bridge> <Jupstar ‚ú™> Perfect come back
11:06 < bridge> <melo∆û> :monkaStop:
11:08 < bridge> <Jupstar ‚ú™> at least we are among adults here now
11:10 < bridge> <tsfreddie> :pepeW: poor juppy, what happened
11:11 < bridge> <Jupstar ‚ú™> I dunno, I can't control when I get sick xd
11:12 < bridge> <Jupstar ‚ú™> > what is the 3 people icon?
11:12 < bridge> <Jupstar ‚ú™> That is simply an "explore communities"
11:12 < bridge> <Jupstar ‚ú™> I think kaffine once showed how he imagined communities, and I think an overview could be quite ok, similar to discord discovery thing
11:13 < bridge> <Jupstar ‚ú™> The settings are on the left mostly, bcs the navigation for the settings are on the left now too
11:26 < bridge> <soulyvevo> are you sure it only happens for specific skins?
11:27 < bridge> <Jupstar ‚ú™> not sure, no. do you assume it's all skins?
11:30 < bridge> <soulyvevo> i think it does even for darker ones
11:30 < bridge> <soulyvevo> its just less noticable
11:30 < bridge> <Jupstar ‚ú™> probably all skins where the calculation created NaNs or smth like that
11:36 < bridge> <soulyvevo> skin code cursed for real
11:36 < bridge> <Jupstar ‚ú™> I honestly also don't understand the idea behind that code
11:37 < bridge> <Jupstar ‚ú™> it's also only applied to the body, which is weird too xd
11:37 < bridge> <soulyvevo> do we really need it to be that weird?
11:38 < bridge> <soulyvevo> i thought its maybe something for teamcolors but nah
11:38 < bridge> <Jupstar ‚ú™> it's some form of grayscaling
11:40 < bridge> <Jupstar ‚ú™> e.g. the question is: would it be bad to completely remove that code
11:40 < bridge> <tsfreddie> sodium nitride
11:40 < bridge> <Jupstar ‚ú™> and only use the gray scaled version
11:42 < bridge> <Jupstar ‚ú™> how is the bicycle game doin
11:42 < bridge> <tsfreddie> :cammo:
11:43 < bridge> <tsfreddie> can't tune a control that i like
11:47 < bridge> <soulyvevo> well there are skins like whis where it would be even better probably
11:47 < bridge> <soulyvevo> https://cdn.discordapp.com/attachments/293493549758939136/1312731918294581268/screenshot_2024-12-01_11-46-39.png?ex=674d905e&is=674c3ede&hm=43c2c559bc32681da0a69d748df05ff9dab5490aa4107645f337b871aa0e0f25&
11:48 < bridge> <soulyvevo> https://cdn.discordapp.com/attachments/293493549758939136/1312731918696976404/screenshot_2024-12-01_11-46-42.png?ex=674d905e&is=674c3ede&hm=12302b384233d8ef3533706c2d04418fa73109cb547a61e306cca6130475582c&
11:48 < bridge> <soulyvevo> could achieve more vibrant custom colors
12:03 < bridge> <milkeeycat> I almost did first part of today's AOC in my language but I cant call `qsort`, it segfaults :feelsbadman:
12:07 < bridge> <melo∆û> :(
12:07 < bridge> <melo∆û> WAIT I ALMOST FORGOT AOC
12:07 < bridge> <melo∆û> AAAAAAAA
12:08 < bridge> <chillerdragon> Where have you been?
12:10 < bridge> <Jupstar ‚ú™> Just afk few days
12:10 < bridge> <Jupstar ‚ú™> And what about you?
12:11 < bridge> <tsfreddie> @jupeyy_keks do you know if anyone has decided to implement account into ddnet yet?
12:11 < bridge> <tsfreddie> can i just add the auth part in client without touching server first. üëÄ
12:11 < bridge> <Jupstar ‚ú™> @soulyvevo not perfect yet, but I'd like to have a test setup like this
12:11 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1312737930661593160/image.png?ex=674d95f8&is=674c4478&hm=f999bc96e564b7881ece7a8f52fb106b6f1a304c78db2c2d4083603fd3723f99&
12:12 < bridge> <tsfreddie> this is art #showroom
12:12 < bridge> <Jupstar ‚ú™> The account system itself is kinda finished:
12:12 < bridge> <Jupstar ‚ú™> https://github.com/ddnet/ddnet-accounts
12:12 < bridge> <Jupstar ‚ú™> 
12:12 < bridge> <Jupstar ‚ú™> We need secure connection and we still need the client side impl in cpp version
12:13 < bridge> <Jupstar ‚ú™> You can actually already test it in dd-pg
12:13 < bridge> <melo∆û> let me yoink that and post it in the town hall thingie
12:13 < bridge> <woidless> jupstar
12:13 < bridge> <woidless> hi
12:13 < bridge> <tsfreddie> :greenthing: so can i implement it cpp in ddnet
12:13 < bridge> <inv41idu53rn4m3> SAME
12:13 < bridge> <inv41idu53rn4m3> I need to come up with a good gimmick to use this year
12:14 < bridge> <Jupstar ‚ú™> It's actually not even news üòÑ
12:14 < bridge> <melo∆û> i think i can even do the first question in nixlang
12:14 < bridge> <Jupstar ‚ú™> Hi eve, i totally missed you
12:14 < bridge> <inv41idu53rn4m3> I could try for artistic Haskell solutions but I feel like I could pick something more original
12:15 < bridge> <inv41idu53rn4m3> Try to learn one of the APL-like languages maybe?
12:15 < bridge> <chillerdragon> I was here. Real afk in the real world? Or just inactive in \#developer
12:15 < bridge> <inv41idu53rn4m3> Haskell might as well be an average commonly used language when compared to those
12:16 < bridge> <chillerdragon> Did you do something exciting?
12:16 < bridge> <Jupstar ‚ú™> I have no real life
12:16 < bridge> <chillerdragon> So how do you afk then
12:16 < bridge> <Jupstar ‚ú™> I spent few hours per day getting stuff in dd-pg done, and the rest I was doing random things
12:16 < bridge> <Jupstar ‚ú™> afk from discord xd
12:17 < bridge> <chillerdragon> Oh nice the ddpg grind
12:17 < bridge> <chillerdragon> Good progress?
12:17 < bridge> <Jupstar ‚ú™> Let's say it like this:
12:17 < bridge> <Jupstar ‚ú™> I am surprised how fast a month passes
12:17 < bridge> <Jupstar ‚ú™> Would have liked to have more progress tbh
12:18 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1312739510072774686/image.png?ex=674d9770&is=674c45f0&hm=9bac1ad85c84ae1987f9690a8fd3afd2ac7aca0ec8cac35447f26a6ca18da567&
12:18 < bridge> <chillerdragon> Few hours ddpg and random things sounds like you have lots of free time
12:19 < bridge> <Jupstar ‚ú™> Well sadly I cannot go to the beach every day like you :c
12:19 < bridge> <inv41idu53rn4m3> Speaking of skin colouring, there could be value to having an option to not grayscale skins but hue shift them instead
12:19 < bridge> <chillerdragon> Beach was really nice today!
12:20 < bridge> <Jupstar ‚ú™> This is the current default, now I build one with greyscale only
12:21 < bridge> <inv41idu53rn4m3> there are many cases where that would look better, since a bit of colour variation would look more natural than the monochromatic result you get with grayscaling and multiplying
12:22 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1312740673522499595/image.png?ex=674d9886&is=674c4706&hm=108a37628534fdaccf94b2150e2857b8f9a07e2b4fa6a214cc66bea14be20623&
12:22 < bridge> <Jupstar ‚ú™> sadly i forgot to sort the skins
12:23 < bridge> <Jupstar ‚ú™> but still looks pretty different
12:23 < bridge> <Jupstar ‚ú™> oh wait
12:23 < bridge> <Jupstar ‚ú™> they are sorted
12:23 < bridge> <Jupstar ‚ú™> nice
12:23 < bridge> <inv41idu53rn4m3> sort by average luminosity for a fun gradient
12:23 < bridge> <ryozuki> ```ocaml
12:23 < bridge> <ryozuki> let input = open_in "inputs/day1_p1.txt" in
12:23 < bridge> <ryozuki> try
12:23 < bridge> <ryozuki>   let lines = In_channel.input_lines input in
12:23 < bridge> <ryozuki>   let parse_line x =
12:23 < bridge> <ryozuki>     List.map int_of_string
12:23 < bridge> <ryozuki>     @@ List.filter (fun x -> x <> "")
12:23 < bridge> <ryozuki>     @@ String.split_on_char ' ' @@ String.trim x
12:23 < bridge> <ryozuki>   in
12:23 < bridge> <ryozuki>   let values = List.map parse_line lines in
12:24 < bridge> <ryozuki>   let lhs, rhs =
12:24 < bridge> <ryozuki>     List.split
12:24 < bridge> <ryozuki>     @@ List.filter_map
12:24 < bridge> <ryozuki>          (fun value ->
12:24 < bridge> <ryozuki>            match value with [x; y] -> Option.Some (x, y) | _ -> Option.None )
12:24 < bridge> <ryozuki>          values
12:24 < bridge> <ryozuki>   in
12:24 < bridge> <ryozuki>   let lhs = List.fast_sort Int.compare lhs in
12:24 < bridge> <ryozuki>   let rhs = List.fast_sort Int.compare rhs in
12:24 < bridge> <ryozuki>   let result =
12:24 < bridge> <ryozuki>     List.map (fun (x, y) -> Int.abs (y - x)) @@ List.combine lhs rhs
12:24 < bridge> <ryozuki>   in
12:24 < bridge> <ryozuki>   let result = List.fold_left ( + ) 0 result in
12:24 < bridge> <ryozuki>   let () = print_int result in
12:24 < bridge> <ryozuki>   let () = print_newline () in
12:24 < bridge> <ryozuki>   close_in input
12:24 < bridge> <ryozuki> with e -> close_in_noerr input ; raise e
12:24 < bridge> <ryozuki> ```
12:24 < bridge> <ryozuki> part 1 
12:24 < bridge> <ryozuki> learning ocaml which is also kinda my first functional lang so im going slow af
12:24 < bridge> <Jupstar ‚ú™> @soulyvevo so i guess the idea behind the code is that the body isn't so dark.
12:24 < bridge> <Jupstar ‚ú™> 
12:24 < bridge> <Jupstar ‚ú™> Bcs as you can see greyscale only is quite dark xd
12:25 < bridge> <inv41idu53rn4m3> greyscale and then a normalization based on the brightest pixel would give you the best customization
12:25 < bridge> <Jupstar ‚ú™> i guess the code kinda does that, i just don't understand it xd
12:25 < bridge> <Jupstar ‚ú™> but it finds sequences where the values are > 128
12:25 < bridge> <Jupstar ‚ú™> of 255
12:25 < bridge> <melo∆û> i'm cooking something in nixlang rn, it's not as easy as i thought it would be, who would've guessed :kek:
12:26 < bridge> <Jupstar ‚ú™> so it tries to find light colors ig
12:26 < bridge> <Jupstar ‚ú™> it kinda looks like a list of pokemon lmao
12:27 < bridge> <melo∆û> :monkaStop:
12:27 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1312741871956660244/image.png?ex=674d99a3&is=674c4823&hm=fb1bac5ce9829b84141174368d7cbb3980eeb7d27377449fbf6c22510535c06c&
12:27 < bridge> <chillerdragon> @ryozuki: what was the ddnet aoc invite code again? Is melon in there?
12:27 < bridge> <melo∆û> special group ??? no i'm not!
12:28 < bridge> <ryozuki> Others can join it using the code 677828-82ec4df2. Up to 200 users can join, including yourself.
12:28 < bridge> <ryozuki> https://adventofcode.com/2024/leaderboard/private/view/677828
12:29 < bridge> <ryozuki> @blaiszephyr i guess its cuz i dont know functional programming good yet, but it feels like my productivity is 1% xd
12:29 < bridge> <soulyvevo> does that result in some skins having sharp pixels?
12:29 < bridge> <melo∆û> me coding in nix is having 3 wiki tabs open rn, i feel you @ryozuki :kek:
12:29 < ws-client> <ChillerDragon> who is dragere
12:29 < bridge> <soulyvevo> like in that aoe skin when you enable colors
12:29 < bridge> <ryozuki> lol i had 15 tabs open with ocaml docs
12:29 < bridge> <melo∆û> :kekw:
12:29 < bridge> <ryozuki> one thing i already dislike is it has bad tooling ngl
12:29 < bridge> <ryozuki> im just so used to god like tooling of rust
12:30 < bridge> <ryozuki> u can make a bad lang but if u have good tooling its good
12:30 < bridge> <ryozuki> imho xd
12:31 < bridge> <melo∆û> @milkeeycat hear that? add good tooling or your lang is shit! /jk
12:31 < bridge> <milkeeycat> I will :santatrollet:
12:32 < bridge> <ryozuki> for example "dune fmt" wont work unless you dune build first, and it wont work if u havent made a .ocamlformat file first, and the dune init proj X doesnt make a .ocamlformat file
12:32 < bridge> <ryozuki> its all bad decisions
12:32 < bridge> <ryozuki> bad ux
12:32 < bridge> <ryozuki> oh and the lsp doesnt work unless you dune build first on new files
12:33 < bridge> <melo∆û> :kek: oh god
12:33 < bridge> <ryozuki> and ofc dune config files are S expressions
12:33 < bridge> <ryozuki> why not toml
12:33 < bridge> <melo∆û> "builtins.genList" expected a string... wait what
12:33 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1312743308656644106/image.png?ex=674d9afa&is=674c497a&hm=8597e1e762afa047264273962436b66812027af6964ab5db9403ca483212610d&
12:33 < bridge> <ryozuki> ```
12:33 < bridge> <ryozuki> (lang dune 3.16)
12:33 < bridge> <ryozuki> 
12:33 < bridge> <ryozuki> (name aoc2024)
12:33 < bridge> <ryozuki> 
12:33 < bridge> <ryozuki> (generate_opam_files true)
12:33 < bridge> <ryozuki> 
12:33 < bridge> <ryozuki> (source
12:33 < bridge> <ryozuki>  (github edg-l/aoc2024-ocaml))
12:33 < bridge> <ryozuki> 
12:33 < bridge> <ryozuki> (authors "Edgar Luque")
12:33 < bridge> <ryozuki> 
12:33 < bridge> <ryozuki> (maintainers "Edgar Luque")
12:33 < bridge> <ryozuki> 
12:33 < bridge> <ryozuki> (license LICENSE)
12:33 < bridge> <ryozuki> 
12:34 < bridge> <ryozuki> (documentation https://url/to/documentation)
12:34 < bridge> <ryozuki> 
12:34 < bridge> <ryozuki> (package
12:34 < bridge> <ryozuki>  (name aoc2024)
12:34 < bridge> <ryozuki>  (synopsis "A short synopsis")
12:34 < bridge> <ryozuki>  (description "A longer description")
12:34 < bridge> <ryozuki>  (depends ocaml dune)
12:34 < bridge> <ryozuki>  (tags
12:34 < bridge> <ryozuki>   (topics "to describe" your project)))
12:34 < bridge> <ryozuki> 
12:34 < bridge> <ryozuki> ; See the complete stanza docs at https://dune.readthedocs.io/en/stable/reference/dune-project/index.html
12:34 < bridge> <ryozuki> ```
12:34 < bridge> <ryozuki> xD
12:34 < bridge> <melo∆û> EW
12:34 < bridge> <ryozuki> also deps kind of work like python
12:34 < bridge> <ryozuki> so u have to make local envs
12:37 < bridge> <Jupstar ‚ú™> i dunno.
12:37 < bridge> <Jupstar ‚ú™> 
12:37 < bridge> <Jupstar ‚ú™> But to restore old behavior i think we have to do 2 things.
12:37 < bridge> <Jupstar ‚ú™> 
12:37 < bridge> <Jupstar ‚ú™> NaN gets 0
12:37 < bridge> <Jupstar ‚ú™> Inf gets 255
12:37 < bridge> <Jupstar ‚ú™> 
12:37 < bridge> <Jupstar ‚ú™> I think the code is broken bcs we have the Inf part wrong
12:37 < bridge> <Jupstar ‚ú™> Just cursed af that code
12:50 < bridge> <melo∆û> @ryozuki is a number of a million a little to much as an answer? :kek:
12:52 < bridge> <inv41idu53rn4m3> I'd go something simple along the lines of
12:52 < bridge> <inv41idu53rn4m3> ```
12:52 < bridge> <inv41idu53rn4m3> skin_lumas = float[len(skin_pixels)]
12:52 < bridge> <inv41idu53rn4m3> for idx, pixel in skin_pixels {
12:52 < bridge> <inv41idu53rn4m3>   // magic numbers from Wikipedia
12:52 < bridge> <inv41idu53rn4m3>   skin_lumas[idx] = pixel.r * 0.2126 + pixel.g * 0.7152 + pixel.b * 0.0722
12:52 < bridge> <inv41idu53rn4m3> }
12:52 < bridge> <inv41idu53rn4m3> 
12:52 < bridge> <inv41idu53rn4m3> brightest = 0.0f
12:53 < bridge> <inv41idu53rn4m3> for _, luma in skin_lumas {
12:53 < bridge> <inv41idu53rn4m3>   if luma > brightest {
12:53 < bridge> <inv41idu53rn4m3>     brightest = luma
12:53 < bridge> <inv41idu53rn4m3>   }
12:53 < bridge> <inv41idu53rn4m3> }
12:53 < bridge> <inv41idu53rn4m3> brightest /= 255
12:53 < bridge> <inv41idu53rn4m3> 
12:53 < bridge> <inv41idu53rn4m3> bw_skin_pixels = Pixel[len(skin_pixels)]
12:53 < bridge> <inv41idu53rn4m3> for idx, pixel in bw_skin_pixels {
12:53 < bridge> <inv41idu53rn4m3>   value = int(skin_lumas[idx] / brightest)
12:53 < bridge> <inv41idu53rn4m3>   pixel.r = value
12:53 < bridge> <inv41idu53rn4m3>   pixel.g = value
12:53 < bridge> <inv41idu53rn4m3>   pixel.b = value
12:53 < bridge> <inv41idu53rn4m3> }
12:53 < bridge> <inv41idu53rn4m3> ```
12:53 < bridge> <Jupstar ‚ú™> `/ brightest`
12:53 < bridge> <Jupstar ‚ú™> 
12:53 < bridge> <Jupstar ‚ú™> What is brightest is 0?
12:54 < bridge> <inv41idu53rn4m3> Ugh
12:54 < bridge> <inv41idu53rn4m3> I guess there is the possibility of a completely black skin
12:55 < bridge> <inv41idu53rn4m3> I'd go something simple along the lines of
12:55 < bridge> <inv41idu53rn4m3> ```
12:55 < bridge> <inv41idu53rn4m3> skin_lumas = float[len(skin_pixels)]
12:55 < bridge> <inv41idu53rn4m3> for idx, pixel in skin_pixels {
12:55 < bridge> <inv41idu53rn4m3>   // magic numbers from Wikipedia
12:55 < bridge> <inv41idu53rn4m3>   skin_lumas[idx] = pixel.r * 0.2126 + pixel.g * 0.7152 + pixel.b * 0.0722
12:55 < bridge> <inv41idu53rn4m3> }
12:55 < bridge> <inv41idu53rn4m3> 
12:55 < bridge> <inv41idu53rn4m3> brightest = 0.0f
12:55 < bridge> <inv41idu53rn4m3> for _, luma in skin_lumas {
12:55 < bridge> <inv41idu53rn4m3>   if luma > brightest {
12:55 < bridge> <inv41idu53rn4m3>     brightest = luma
12:55 < bridge> <inv41idu53rn4m3>   }
12:55 < bridge> <inv41idu53rn4m3> }
12:55 < bridge> <inv41idu53rn4m3> 
12:55 < bridge> <inv41idu53rn4m3> brightest /= 255
12:55 < bridge> <inv41idu53rn4m3> if brightest == 0 {
12:55 < bridge> <inv41idu53rn4m3>   brightest = 1
12:55 < bridge> <inv41idu53rn4m3> }
12:55 < bridge> <inv41idu53rn4m3> 
12:55 < bridge> <inv41idu53rn4m3> bw_skin_pixels = Pixel[len(skin_pixels)]
12:55 < bridge> <inv41idu53rn4m3> for idx, pixel in bw_skin_pixels {
12:55 < bridge> <inv41idu53rn4m3>   value = int(skin_lumas[idx] / brightest)
12:55 < bridge> <inv41idu53rn4m3>   pixel.r = value
12:55 < bridge> <inv41idu53rn4m3>   pixel.g = value
12:55 < bridge> <inv41idu53rn4m3>   pixel.b = value
12:55 < bridge> <inv41idu53rn4m3> }
12:55 < bridge> <inv41idu53rn4m3> ```
12:55 < bridge> <inv41idu53rn4m3> ok now it won't break
12:56 < bridge> <ryozuki> ```ocaml
12:56 < bridge> <ryozuki> let input = open_in "inputs/day1.txt" in
12:56 < bridge> <ryozuki> try
12:56 < bridge> <ryozuki>   let lines = In_channel.input_lines input in
12:56 < bridge> <ryozuki>   let parse_line x =
12:56 < bridge> <ryozuki>     List.map int_of_string
12:56 < bridge> <ryozuki>     @@ List.filter (fun x -> x <> "")
12:56 < bridge> <ryozuki>     @@ String.split_on_char ' ' @@ String.trim x
12:56 < bridge> <ryozuki>   in
12:56 < bridge> <ryozuki>   let values = List.map parse_line lines in
12:56 < bridge> <ryozuki>   let lhs, rhs =
12:56 < bridge> <ryozuki>     List.split
12:56 < bridge> <ryozuki>     @@ List.filter_map
12:56 < bridge> <ryozuki>          (fun value ->
12:56 < bridge> <ryozuki>            match value with [x; y] -> Option.Some (x, y) | _ -> Option.None )
12:56 < bridge> <ryozuki>          values
12:56 < bridge> <ryozuki>   in
12:56 < bridge> <ryozuki>   let countn x =
12:56 < bridge> <ryozuki>     List.fold_left (fun acc a -> if a = x then acc + 1 else acc) 0
12:56 < bridge> <ryozuki>   in
12:56 < bridge> <ryozuki>   let result = List.map (fun x -> x * countn x rhs) lhs in
12:56 < bridge> <ryozuki>   let result = List.fold_left ( + ) 0 result in
12:56 < bridge> <ryozuki>   let () = print_int result in
12:56 < bridge> <ryozuki>   let () = print_newline () in
12:56 < bridge> <ryozuki>   close_in input
12:56 < bridge> <ryozuki> with e -> close_in_noerr input ; raise e
12:56 < bridge> <ryozuki> 
12:56 < bridge> <ryozuki> ```
12:56 < bridge> <ryozuki> part 2
12:57 < bridge> <melo∆û> lmao those let in statements
12:57 < bridge> <melo∆û> they are somewhat familiar
12:57 < bridge> <melo∆û> ```nix
12:57 < bridge> <melo∆û> {
12:57 < bridge> <melo∆û>   pkgs ? import <nixpkgs> { },
12:57 < bridge> <melo∆û> }:
12:57 < bridge> <melo∆û> let
12:57 < bridge> <melo∆û>   parseNumberPair =
12:57 < bridge> <melo∆û>     line:
12:57 < bridge> <melo∆û>     let
12:57 < bridge> <melo∆û>       parts = builtins.filter (s: s != "") (builtins.split "[ \t]+" line);
12:57 < bridge> <melo∆û> 
12:57 < bridge> <melo∆û>       nums =
12:57 < bridge> <melo∆û>         if builtins.length parts == 2 then
12:57 < bridge> <melo∆û>           let
12:57 < bridge> <melo∆û>             first = builtins.parseInt (builtins.elemAt parts 0);
12:57 < bridge> <melo∆û>             second = builtins.parseInt (builtins.elemAt parts 1);
12:57 < bridge> <melo∆û>           in
12:57 < bridge> <melo∆û>           if builtins.isInt first && builtins.isInt second then
12:57 < bridge> <melo∆û>             [
12:57 < bridge> <melo∆û>               first
12:58 < bridge> <melo∆û>               second
12:58 < bridge> <melo∆û>             ]
12:58 < bridge> <melo∆û>           else
12:58 < bridge> <melo∆û>             null
12:58 < bridge> <melo∆û>         else
12:58 < bridge> <melo∆û>           null;
12:58 < bridge> <melo∆û>     in
12:58 < bridge> <melo∆û>     nums;
12:58 < bridge> <melo∆û> 
12:58 < bridge> <melo∆û>   readNumberPairs =
12:58 < bridge> <melo∆û>     filePath:
12:58 < bridge> <melo∆û>     let
12:58 < bridge> <ryozuki> let is used for all in ocaml
12:58 < bridge> <ryozuki> for functions and vars
12:58 < bridge> <melo∆û> look at my beautiful nix code which doesnt work
12:58 < bridge> <ryozuki> ```ocaml
12:58 < bridge> <ryozuki> let countn x =
12:58 < bridge> <ryozuki>     List.fold_left (fun acc a -> if a = x then acc + 1 else acc) 0
12:58 < bridge> <ryozuki> ```
12:58 < bridge> <inv41idu53rn4m3> I'd go something simple along the lines of
12:58 < bridge> <inv41idu53rn4m3> ```go
12:58 < bridge> <inv41idu53rn4m3> skin_lumas = float[len(skin_pixels)]
12:58 < bridge> <inv41idu53rn4m3> for idx, pixel in skin_pixels {
12:58 < bridge> <inv41idu53rn4m3>   // magic numbers from Wikipedia
12:58 < bridge> <inv41idu53rn4m3>   skin_lumas[idx] = pixel.r * 0.2126 + pixel.g * 0.7152 + pixel.b * 0.0722
12:58 < bridge> <inv41idu53rn4m3> }
12:58 < bridge> <inv41idu53rn4m3> 
12:58 < bridge> <inv41idu53rn4m3> brightest = 0.0f
12:58 < bridge> <inv41idu53rn4m3> for _, luma in skin_lumas {
12:58 < bridge> <inv41idu53rn4m3>   if luma > brightest {
12:59 < bridge> <inv41idu53rn4m3>     brightest = luma
12:59 < bridge> <inv41idu53rn4m3>   }
12:59 < bridge> <inv41idu53rn4m3> }
12:59 < bridge> <inv41idu53rn4m3> 
12:59 < bridge> <inv41idu53rn4m3> brightest /= 255
12:59 < bridge> <ryozuki> this is a function with a parameter x
12:59 < bridge> <ryozuki> it returns another function though
12:59 < bridge> <ryozuki> that accepts a parameter that is a list
12:59 < bridge> <ryozuki> xd
12:59 < bridge> <ryozuki> functional ftw
12:59 < bridge> <melo∆û> :kek:
12:59 < bridge> <ryozuki> let mul x y = x * y
12:59 < bridge> <ryozuki> u can make
12:59 < bridge> <ryozuki> let mul2 = mul 2
12:59 < bridge> <ryozuki> and call mul2 <value>
12:59 < bridge> <ryozuki> currying i think
12:59 < bridge> <ryozuki> idk
13:00 < bridge> <ryozuki> wtf did nixlang copy ocaml
13:01 < bridge> <ryozuki> i like more ocaml syntax tho
13:01 < bridge> <inv41idu53rn4m3> this should produce b&w images where the brightest pixel is (close to) pure white, should make custom colours really pop
13:01 < bridge> <inv41idu53rn4m3> though now I'm realizing that this is *not* taking gamma into account
13:01 < bridge> <inv41idu53rn4m3> 
13:01 < bridge> <inv41idu53rn4m3> Why must colour be so difficult?
13:02 < bridge> <inv41idu53rn4m3> The magic constants from Wikipedia can be replaced with a different set too, I'm not sure what numbers are considered the most correct
13:05 < bridge> <inv41idu53rn4m3> https://en.wikipedia.org/wiki/Grayscale#Colorimetric_(perceptual_luminance-preserving)_conversion_to_grayscale
13:05 < bridge> <inv41idu53rn4m3> <https://en.wikipedia.org/wiki/Grayscale#Colorimetric_(perceptual_luminance-preserving)_conversion_to_grayscale>
13:11 < bridge> <soulyvevo> i just hope that math wont produce any sharp looking pixels
13:14 < bridge> <inv41idu53rn4m3> All I'm doing is uniformly scaling up the brightness of the image, so no sharp pixels that weren't there in the first place should appear
13:14 < bridge> <inv41idu53rn4m3> Of course increasing the max brightness will increase the contrast a bit, so small mistakes in skins might become more noticeable
13:15 < bridge> <soulyvevo> but it ignores the black pixels no?
13:15 < bridge> <inv41idu53rn4m3> Well 0 * anything is still 0, yeah, but small values close to zero will also get scaled up
13:16 < bridge> <inv41idu53rn4m3> the `if brightest == 0` part is only in case *the entire image* is pure black
13:17 < bridge> <inv41idu53rn4m3> in that case the image will be kept pure black, and the check is simply to avoid a divide by zero (which Jupstar pointed out)
13:21 < bridge> <aegisub> for better results convert to linear light first
13:21 < bridge> <aegisub> see https://entropymine.com/imageworsener//grayscale/
13:22 < bridge> <inv41idu53rn4m3> I mentioned that too :)
13:22 < bridge> <aegisub> ah I missed that
13:25 < bridge> <inv41idu53rn4m3> I love graphics but I don't write enough code... so I know a fair bit but I can't really bang it out in code form super quickly
13:26 < bridge> <aegisub> for sRGB the best would be 0.2126 R + 0.7152 G + 0.0722 B (even if not blending in linear light)
13:26 < bridge> <aegisub> since sRGB uses BT.709 primaries which have these brightness values
13:26 < bridge> <aegisub> I guess this makes slightly less sense in gamma light but it's still the most canonical values to use
13:27 < bridge> <inv41idu53rn4m3> oh hey I picked right :)
13:28 < bridge> <aegisub> the 0.299  / 0.5987 / 0.114 values are for BT.601
13:28 < bridge> <inv41idu53rn4m3> That 0.07 for blue always feels so crazy to me, like, intuitively it feels it should be brighter
13:28 < bridge> <aegisub> (I'm not trying to correct you here I'm just taking any opportunity I can get to nerd out about video)
13:29 < bridge> <inv41idu53rn4m3> üß°
13:35 < bridge> <Assa> I am currently hosting my own gitlab in for private projects with friends, does anybody have experience in setting up windowns gitlab runner? Would a windows docker image be sufficient? <https://hub.docker.com/r/microsoft/windows>
13:35 < bridge> <Assa> I am currently hosting my own gitlab for private projects with friends, does anybody have experience in setting up windowns gitlab runner? Would a windows docker image be sufficient? <https://hub.docker.com/r/microsoft/windows>
13:36 < bridge> <Assa> Problem is, that this is the windows server image, but I might need at least some headless graphics support
13:41 < bridge> <Assa> I guess I have to go for it for now, otherwise I'd need to host a vm üò¶
13:46 < bridge> <Jupstar ‚ú™> @soulyvevo Honestly I am starting to believe the older clients are buggy, not the new ones.
13:46 < bridge> <Jupstar ‚ú™> 
13:46 < bridge> <Jupstar ‚ú™> I tried to reproduce the same loading like 15.1.3 and still get the different color.
13:46 < bridge> <Jupstar ‚ú™> Maybe they accidentally used the real skin over the greyscaled one or smth like that?
13:47 < bridge> <Jupstar ‚ú™> 
13:47 < bridge> <Jupstar ‚ú™> Sadly I cannot compile these old versions, else I could quickly do a git bisect
13:47 < bridge> <Jupstar ‚ú™> Well dunno what is wrong tbh
13:47 < bridge> <Jupstar ‚ú™> But it makes no sense to me
13:48 < bridge> <Jupstar ‚ú™> or the color values were wrong back then
13:48 < bridge> <Jupstar ‚ú™> What clients did u test?
13:49 < bridge> <soulyvevo> vanilla, recent version
13:49 < bridge> <soulyvevo> and some 15.x not sure which one exactly
13:50 < bridge> <soulyvevo> i think 15.1.3 but lemmie doublecheck
13:51 < bridge> <Jupstar ‚ú™> renderdoc sadly also doesnt work üòÑ
13:52 < bridge> <soulyvevo> i cant even download older versions cuz my net is messed up today
13:52 < bridge> <soulyvevo> says it will download in 9 hours üíÄ
13:53 < bridge> <Jupstar ‚ú™> ok it works now to build, just had to remove some editor code that was broken
13:58 < bridge> <Jupstar ‚ú™> @soulyvevo one question
13:58 < bridge> <Jupstar ‚ú™> Did you use the 256x128 skin or a high res skin?
13:58 < bridge> <soulyvevo> i tried both
13:58 < bridge> <soulyvevo> even lower resolutions
13:58 < bridge> <Jupstar ‚ú™> bcs these versions only support 256x128
13:58 < bridge> <soulyvevo> like 64x32 or something
13:58 < bridge> <Jupstar ‚ú™> https://github.com/ddnet/ddnet/blob/84be9b865584fda681dbb57c9f1c73185d8d29f7/src/game/client/components/skins.cpp#L73
13:59 < bridge> <soulyvevo> was it the version where highier res skins resulted in some weird square shape on the tee?
13:59 < bridge> <soulyvevo> i remember that was the case in some version
13:59 < bridge> <soulyvevo> maybe i used different one for testing then
14:00 < bridge> <Jupstar ‚ú™> @soulyvevo when i change it to 256x128 it looks like in the new clients
14:00 < bridge> <Jupstar ‚ú™> so this isn't a bug in new clients
14:00 < bridge> <Jupstar ‚ú™> it's just that the old one cannot process high res textures correctlyx
14:00 < bridge> <Jupstar ‚ú™> it's just that the old one cannot process high res textures correctly
14:03 < bridge> <Assa> in case anyone is interested: Nope, you can not do that. You either need to setup a VM or cross compile with mingw and use wine, I hate windows so much
14:06 < bridge> <Jupstar ‚ú™> @soulyvevo do you want to keep the issue as discussion?
14:06 < bridge> <Jupstar ‚ú™> Else I leave it closed, since changing skin behavior is smth that will trigger some ppl anyway
14:08 < bridge> <soulyvevo> i think leaving it open just in case would be a good idea
14:09 < bridge> <Jupstar ‚ú™> Ok but I'll change the tags, bcs imo it's not a bug compared to old versions
14:10 < bridge> <soulyvevo> anyone else has issues with downloading anything from https://ddnet.org/downloads/ ?
14:10 < bridge> <Jupstar ‚ú™> Works for me
14:10 < bridge> <soulyvevo> i thought its something with my connection but downloading builds from github artifacts works fine
14:11 < bridge> <soulyvevo> but when i try to download anything from the site it estimates the download time will take some sick numbers like 9 hours or a day
14:11 < bridge> <Jupstar ‚ú™> probs cloudflare being slow for you
14:11 < bridge> <Jupstar ‚ú™> I get full speed
14:14 < bridge> <soulyvevo> i guess i will let you know later what version exactly i tested it on
14:15 < bridge> <Jupstar ‚ú™> it's fine
14:15 < bridge> <Jupstar ‚ú™> i could reprod the color when switching to 256x128
14:15 < bridge> <Jupstar ‚ú™> so it kinda must be resolution dependent
14:41 < bridge> <woidless> I have already received my first earnings from ddnet
15:15 < bridge> <milkeeycat> Good news, it crashes only if I have code in compare function, bad news I have to write code in compare function to make it work üò¨
15:16 < bridge> <milkeeycat> chillerdragon: wanna read some assembly? :DD
16:05 < ws-client> <ChillerDragon> sure teach me some assembly @milkeeycat 
16:05 < ws-client> <ChillerDragon> I stalked the rank 1 of aoc right now on github found this little gem on there https://place.zillyhuhn.com/
16:07 < bridge> <milkeeycat> chillerdragon: find the bug
16:07 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1312797194755113011/message.txt?ex=674dcd29&is=674c7ba9&hm=f68b0121ba68cb2eba3bd9b05c60ae5b2284604244e2137d1e3bb3a744928268&
16:11 < ws-client> <ChillerDragon> i cant see attachments
16:12 < bridge> <melo∆û> his assembly so long it was sent to the message.txt realms
16:16 < ws-client> <ChillerDragon> irc does not like long assembly better use a paste service like https://zillyhuhn.com/cstd-web/index.php
16:17 < bridge> <milkeeycat> https://paste.zillyhuhn.com/ei
16:18 < ws-client> <ChillerDragon> where comments
16:18 < ws-client> <ChillerDragon> i dont get shit
16:18 < bridge> <milkeeycat> me neither :p
16:18 < bridge> <milkeeycat> BUT
16:19 < bridge> <milkeeycat> if you replace compare function to 
16:19 < bridge> <milkeeycat> ```
16:19 < bridge> <milkeeycat> compare:
16:19 < bridge> <milkeeycat>         push    rbp
16:19 < bridge> <milkeeycat>         mov     rbp, rsp
16:19 < bridge> <milkeeycat>         mov     QWORD PTR [rbp-24], rdi
16:19 < bridge> <milkeeycat>         mov     QWORD PTR [rbp-32], rsi
16:19 < bridge> <milkeeycat>         mov     rax, QWORD PTR [rbp-24]
16:19 < bridge> <milkeeycat>         mov     eax, DWORD PTR [rax]
16:19 < bridge> <milkeeycat>         mov     DWORD PTR [rbp-4], eax
16:19 < bridge> <milkeeycat>         mov     rax, QWORD PTR [rbp-32]
16:19 < bridge> <milkeeycat>         mov     eax, DWORD PTR [rax]
16:19 < bridge> <milkeeycat>         mov     DWORD PTR [rbp-8], eax
16:19 < bridge> <milkeeycat>         mov     eax, DWORD PTR [rbp-4]
16:19 < bridge> <milkeeycat>         sub     eax, DWORD PTR [rbp-8]
16:19 < bridge> <milkeeycat>         pop     rbp
16:19 < bridge> <milkeeycat>         ret
16:19 < bridge> <milkeeycat> ```
16:19 < bridge> <milkeeycat> it will work
16:19 < bridge> <milkeeycat> i don't understand why
16:41 < bridge> <milkeeycat> using `r14`, `r15` registers breaks everything, cool
16:54 < bridge> <kollpotato> epic libtw2 and ddnet map moment
16:54 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1312809123552694392/screenshot_2024-12-01_17-53-47.png?ex=674dd845&is=674c86c5&hm=cc38c88d83642ec1b0dca22bbdf106d9922c51525066e3bb695b248c6c469de7&
16:59 < ws-client> <ChillerDragon> nice @kollpotato 
21:12 < bridge> <cx5x3ko9zce1d6ew> definitely missed wasting more time on super inefficient scripts :>
21:12 < bridge> <cx5x3ko9zce1d6ew> ```bash
21:12 < bridge> <cx5x3ko9zce1d6ew> #!/bin/bash
21:12 < bridge> <cx5x3ko9zce1d6ew> #Advent of Code - Day 01
21:12 < bridge> <cx5x3ko9zce1d6ew> mapfile -t a < <(sort -k1 -n "$1" | cut -d' ' -f1)
21:12 < bridge> <cx5x3ko9zce1d6ew> mapfile -t b < <(sort -k2 -n "$1" | cut -d' ' -f4)
21:12 < bridge> <cx5x3ko9zce1d6ew> for i in "${!a[@]}"; do x=$((${a[$i]}-${b[$i]})); t1=$((${t1:-0}+${x#-})); done
21:12 < bridge> <cx5x3ko9zce1d6ew> while read -r i; do
21:12 < bridge> <cx5x3ko9zce1d6ew>     x=$(cut -d' ' -f4 "$1" | sort | uniq -c | sed 's/^[ \t]*//' | grep " $i" | cut -d' ' -f1)
21:12 < bridge> <cx5x3ko9zce1d6ew>     t2=$((${t2:-0}+(i * ${x:-0})))
21:12 < bridge> <cx5x3ko9zce1d6ew> done < <(cut -d' ' -f1 "$1")
21:12 < bridge> <cx5x3ko9zce1d6ew> printf -- "p1: %s\\np2: %s\\n" "$t1" "$t2"
21:12 < bridge> <cx5x3ko9zce1d6ew> ```
21:24 < bridge> <Ewan> bro is scripting
21:30 < bridge> <melo∆û> ‚úùÔ∏è
21:30 < bridge> <melo∆û> :pepecry: damn
21:33 < bridge> <Ewan> i bought some bluetooth iem hooks and they don't fit
21:33 < bridge> <Ewan> :feelsbadman:
21:33 < bridge> <Ewan> i could mutilate them to make them fit but then that makes them unreturnable
22:28 < bridge> <learath2> All my IEMs have detachable mmcx wires and all my cables have hooks that are made of wire so you can bend them to your ear
22:42 < bridge> <louis> i dont think the bluetooth to iem things are great
22:42 < bridge> <louis> you get better qol with dedicated bluetooth buds
22:43 < bridge> <montikboom> PLEASE STOP KIDS FROM POSTING THEIR CLIPS ON LINEAR
22:43 < bridge> <louis> :pepeW:
22:43 < bridge> <louis> what u want me to do
22:43 < bridge> <melo∆û> yeah fr louis wtf
22:43 < bridge> <montikboom> DELET IT
22:43 < bridge> <montikboom> No mor liner‚ùå
22:44 < bridge> <melo∆û> can you keep that to #off-topic tho - check your channels!
22:57 < bridge> <Assa> I tried to cross compile from ubunto to windows using mingw, it compiles, I get an exe with dlls and when I start it on my windows machine, it just states "Die App kann auf dem PC nicht ausgef√ºhrt werden -  Wensen sie sich an den Softwareherausgeber" (This app can not be run on this computer, please contact the softwaredeveloper). Did anybody ever come across this? I already tried multiple things and don't know what the issue is
22:58 < bridge> <melo∆û> did you correctly invoke the mingw64 toolchain with cmake? i remember it working perfectly fine for me.. hmm
22:58 < bridge> <melo∆û> 
22:58 < bridge> <melo∆û> can you launch the .exe using wine on ubuntu? maybe it's generally borked
22:58 < bridge> <kollpotato> @blaiszephyr go sleep
22:58 < bridge> <montikboom> Try building file on windows
22:59 < bridge> <Ewan> nice
22:59 < bridge> <Ewan> i was just able to mutilate them
22:59 < bridge> <Ewan> works fine
22:59 < bridge> <Assa> I can send you the toolchain I used:
22:59 < bridge> <Assa> ```
22:59 < bridge> <Assa> # windows-toolchain.cmake
22:59 < bridge> <Assa> 
22:59 < bridge> <Assa> set(CMAKE_SYSTEM_NAME Windows)  # Target system
22:59 < bridge> <Assa> #set(CMAKE_SYSTEM_PROCESSOR AMD64)  # Target processor architecture (x86_64 for 64-bit)
22:59 < bridge> <Assa> 
22:59 < bridge> <Assa> # Specify the compiler paths
22:59 < bridge> <Assa> set(CMAKE_C_COMPILER x86_64-w64-mingw32-gcc)
22:59 < bridge> <Assa> set(CMAKE_CXX_COMPILER x86_64-w64-mingw32-g++)
22:59 < bridge> <Assa> set(CMAKE_LINKER x86_64-w64-mingw32-ld)
22:59 < bridge> <Assa> 
22:59 < bridge> <Assa> # Add extra flags
22:59 < bridge> <Assa> set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -shared")
22:59 < bridge> <Assa> set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -shared")
22:59 < bridge> <Assa> 
22:59 < bridge> <Assa> # I am missing my dlls
23:00 < bridge> <Assa> set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
23:00 < bridge> <Assa> set(CMAKE_SHARED_LIBRARY_PREFIX "")  # Windows doesn't use 'lib' prefix for DLLs
23:00 < bridge> <Assa> set(CMAKE_SHARED_LIBRARY_SUFFIX ".dll")
23:00 < bridge> <Assa> 
23:00 < bridge> <Assa> # Optional: Define the Windows library path
23:00 < bridge> <Assa> set(CMAKE_FIND_ROOT_PATH /usr/x86_64-w64-mingw32)
23:00 < bridge> <Assa> 
23:00 < bridge> <Assa> # Optional: Adjust search paths for headers and libraries
23:00 < bridge> <Assa> set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
23:00 < bridge> <Assa> set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
23:00 < bridge> <Assa> set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
23:00 < bridge> <Assa> ```
23:00 < bridge> <Assa> Building on windows with MSVC works btw
23:00 < bridge> <kollpotato> is there a difference on which distro you compile?
23:00 < bridge> <melo∆û> why did you create your own?
23:00 < bridge> <melo∆û> ddnet provides one
23:00 < bridge> <melo∆û> /cmake/toolchains/mingw64.toolchain
23:00 < bridge> <kollpotato> i'm going to try on arch tomorrow
23:00 < bridge> <kollpotato> but now i sleep
23:00 < bridge> <Assa> This is not ddnet related, but I don't know where to ask ;_;
23:00 < bridge> <melo∆û> oOOOH
23:00 < bridge> <melo∆û> hmm... not sure how to debug a different application really :/
23:05 < bridge> <melo∆û> @mpft how do you think heinrich will react to this :nouis:
23:05 < bridge> <melo∆û> given the last time it was tried to touch practice behaviour when hitting a kill tile was a very fun discussion
23:06 < bridge> <melo∆û> given the last time it was tried to touch practice behaviour when hitting a kill tile led to a very fun discussion
23:09 < bridge> <melo∆û> > We had a pull request about that before. I'm against this. Instead:
23:09 < bridge> <melo∆û> > 
23:09 < bridge> <melo∆û> > Don't respawn the tee in practice mode, allow them to press /r to respawn at the last position.
23:09 < bridge> <melo∆û> 
23:09 < bridge> <melo∆û> but i guess this is what heinrich initially wanted.. hmm
23:15 < bridge> <Assa> I don't know, I give up
23:16 < bridge> <Ewan> no idea
23:16 < bridge> <Ewan> i dont see the point of that at all
23:16 < bridge> <Ewan> strange feature
23:16 < bridge> <Ewan> is this supposed to be like an adverse consequence of hitting the kill tile lol
23:16 < bridge> <Ewan> it's practice mode
23:48 < bridge> <patiga> I'm trying out awk this year for advent of code, I gladly take feedback :)
23:48 < bridge> <patiga> ||```
23:48 < bridge> <patiga> abc
23:48 < bridge> <patiga> ```||
23:50 < bridge> <patiga> I'm trying out awk this year for advent of code, I gladly take feedback :)
23:50 < bridge> <patiga> 1:
23:50 < bridge> <patiga> ||```
23:50 < bridge> <patiga> #! /usr/bin/awk -f
23:50 < bridge> <patiga> 
23:50 < bridge> <patiga> function diff(a, b) {
23:50 < bridge> <patiga>     if (a > b) {
23:50 < bridge> <patiga>         return a - b
23:50 < bridge> <patiga>     } else {
23:50 < bridge> <patiga>         return b - a
23:50 < bridge> <patiga>     }
23:50 < bridge> <patiga> }
23:50 < bridge> <patiga> 
23:50 < bridge> <patiga> BEGIN {
23:50 < bridge> <patiga> } {
23:50 < bridge> <patiga>     a[FNR] = $1
23:50 < bridge> <patiga>     b[FNR] = $2
23:50 < bridge> <patiga> }
23:50 < bridge> <patiga> 
23:50 < bridge> <patiga> END {
23:51 < bridge> <patiga>     asort(a)
23:51 < bridge> <patiga>     asort(b)
23:51 < bridge> <patiga>     for (line in a)
23:51 < bridge> <patiga>         sum += diff(a[line], b[line])
23:51 < bridge> <patiga>     print sum
23:51 < bridge> <patiga> }
23:51 < bridge> <patiga> ```||
23:51 < bridge> <patiga> I'm trying out awk this year for advent of code, I gladly take feedback :)
23:51 < bridge> <patiga> 1:
23:51 < bridge> <patiga> ||```
23:51 < bridge> <patiga> #! /usr/bin/awk -f
23:51 < bridge> <patiga> 
23:51 < bridge> <patiga> function diff(a, b) {
23:51 < bridge> <patiga>     if (a > b) {
23:51 < bridge> <patiga>         return a - b
23:51 < bridge> <patiga>     } else {
23:51 < bridge> <patiga>         return b - a
23:51 < bridge> <patiga>     }
23:51 < bridge> <patiga> }
23:51 < bridge> <patiga> 
23:51 < bridge> <patiga> BEGIN {
23:51 < bridge> <patiga> } {
23:51 < bridge> <patiga>     a[FNR] = $1
23:51 < bridge> <patiga>     b[FNR] = $2
23:51 < bridge> <patiga> }
23:51 < bridge> <patiga> 
23:51 < bridge> <patiga> END {
23:51 < bridge> <patiga>     asort(a)
23:51 < bridge> <patiga>     asort(b)
23:52 < bridge> <patiga>     for (line in a)
23:52 < bridge> <patiga>         sum += diff(a[line], b[line])
23:52 < bridge> <patiga> I'm trying out awk this year for advent of code, I gladly take feedback :)
23:52 < bridge> <patiga> 1:
23:52 < bridge> <patiga> ||```
23:52 < bridge> <patiga> #! /usr/bin/awk -f
23:52 < bridge> <patiga> 
23:52 < bridge> <louis> is there a ddnet leaderboard for aoc?
23:52 < bridge> <patiga> yes
23:52 < bridge> <louis> how do I get the link
23:52 < bridge> <patiga> hm, its probably buried in this chat somewhere
23:53 < bridge> <melo∆û> yeah chiller sent it to me today
23:53 < bridge> <melo∆û> https://adventofcode.com/2024/leaderboard/private/view/677828
23:53 < bridge> <devinci24> @louis.place
23:53 < bridge> <devinci24> ah nvm
23:53 < bridge> <patiga> .
23:53 < bridge> <devinci24> melon beat me to it üòî
23:53 < bridge> <louis> ah okay i'm already in it
23:54 < bridge> <melo∆û> we're going strong on this one! (i forgot the second part and just did it like 10 minutes ago
23:54 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1312914714191200297/image.png?ex=674e3a9c&is=674ce91c&hm=c00a1bed2deafc617cd807fe5fede0a82511b046dcfc22dcde78f7591f928e97&
