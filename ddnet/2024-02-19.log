00:37 < bridge> <learath2> LaTeX is quite enjoyable except for the very bad documentation for the core, I've been creating my CV in it and the ecosystem around it is quite flexible
00:37 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1208920263945887794/CV2.png?ex=65e509bb&is=65d294bb&hm=5fb98511fdc1cc74e594f251534de088900b1fe7fd1bfad75007106d54a1c071&
00:41 < bridge> <chillerdragon> Woah lerato cv
00:43 < bridge> <chillerdragon> I love latex but I never bothered to learn it so my cv and all other documents are the first template I find online lol
00:43 < bridge> <chillerdragon> 
00:43 < bridge> <chillerdragon> For me itâ€™s just a way to replace word with vim and track stuff in git.
00:45 < bridge> <learath2> I'd only ever used latex in math mode until today, it's actually pretty enjoyable for text too
00:46 < bridge> <chillerdragon> Anything is more enjoyable than the other document creation tools out there
00:46 < bridge> <chillerdragon> Oh wait. Markdown is nicer :p
00:46 < bridge> <chillerdragon> Markdown to pdf is op
00:46 < bridge> <learath2> Ngl WYSIWYG editors are just sooooo annoying. I made my first CV in libreoffice writer and I hated the experience so much
00:47 < bridge> <chillerdragon> Yes libreoffice is sadly not better than the proprietary stuff
00:47 < bridge> <learath2> This programming like approach to designing a page is much more suitable to me
00:47 < bridge> <chillerdragon> Agree
00:47 < bridge> <chillerdragon> Wtf is WYSIWYG xd
00:48 < bridge> <learath2> I can change the accentcolor in like one second and since I calculate all the other colors off of that it's instant
00:48 < bridge> <chillerdragon> Ah wait
00:48 < bridge> <chillerdragon> What you see is what you get
00:48 < bridge> <learath2> What You See Is What You Get
00:48 < bridge> <chillerdragon> Dude Iâ€™m good
00:48 < bridge> <chillerdragon> Holy
00:48 < bridge> <learath2> You are too smart for this world
00:49 < bridge> <chillerdragon> Go to bed already lerato
00:49 < bridge> <chillerdragon> Itâ€™s Monday
00:50 < bridge> <learath2> I'm truly a NEET nowadays, actualy literally nothing to do tomorrow
00:50 < bridge> <chillerdragon> Okay Iâ€™m having s hard time cracking that one
00:51 < bridge> <learath2> Well that's a lie, I did promise I'd tutor someone tomorrow, but it's in the afternoon, so no need to wake up early, and he doesn't pay me so it doesn't constitute employment
00:51 < bridge> <chillerdragon> Which country are you in this week?
00:51 < bridge> <learath2> Italy for a bit now, though I'm very heavily considering going to japan next week
00:52 < bridge> <learath2> I found an insane flight deal
00:52 < bridge> <chillerdragon> Classic lerato
00:52 < bridge> <chillerdragon> So itâ€™s like 1 in the morning for you?
00:52 < bridge> <learath2> yep
00:52 < bridge> <chillerdragon> Okay thats still ok
00:52 < bridge> <chillerdragon> So whatâ€™s a NEET
00:52 < bridge> <learath2> I'll play a game of league then sleep. I earned one game today, I worked hard on my CV, studied japanese, added one more component to my vulkan experiment
00:53 < bridge> <chillerdragon> Eww lol
00:53 < bridge> <chillerdragon> The one with the Chinese state hacker kernel level root kit?
00:53 < bridge> <learath2> NEET is "Not in Education, Employment, or Training". The people wasting our societies resources
00:53 < bridge> <learath2> Not yet ðŸ˜„
00:54 < bridge> <chillerdragon> Will you continue playing?
00:54 < bridge> <chillerdragon> Does it even work on Linux?
00:54 < bridge> <chillerdragon> Or do you use Mac idk
00:54 < bridge> <learath2> Yes I will. Yes it does work on linux (but it won't when the rootkit gets added)
00:54 < bridge> <learath2> I dualboot into windows just for a handful of games including league
00:55 < bridge> <chillerdragon> Oh no we lost lerato
00:55 < bridge> <learath2> I pretty much don't care, everything on this machine is encrypted and there is nothing interesting on the windows partitions that aren't
00:55 < bridge> <chillerdragon> Booting into windows just to run a rootkit sounds so sad
00:56 < bridge> <chillerdragon> When rewrite lol in ddnet engine
00:56 < bridge> <learath2> Xi can watch me edit my holiday photos in lightroom or watch me play league
00:56 < bridge> <chillerdragon> Send holiday photos
00:56 < bridge> <learath2> I guess he can also see my discord, which is sadge but whatever. Nothing really interesting in here either except me slowly going insane
00:57 < bridge> <chillerdragon> Health insurance bill just increased by 10% because of that msg :p
00:57 < bridge> <learath2> He would never do that. I support the CCP wholeheartedly
00:57 < bridge> <chillerdragon> lmao
00:57 < bridge> <teero777> Me too me too
00:57 < bridge> <chillerdragon> discord users be like
00:58 < bridge> <learath2> Here is a pic I took in glasgow
00:58 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1208925469957693470/DSC02076.jpg?ex=65e50e94&is=65d29994&hm=09a69bafc4bb5a9202efe3f15c9c774bfb59650a857991d07f98b762420d447c&
00:58 < bridge> <chillerdragon> AI generated!
00:58 < bridge> <learath2> I actually don't remember if this is one where I removed a dude or the other
00:59 < bridge> <chillerdragon> Why xd
00:59 < bridge> <teero777> I can see the normal map on the asphalt!
00:59 < bridge> <chillerdragon> Why bother to edit
01:00 < bridge> <teero777> I'm going to sleep, maybe some anime first.  Some nice new episodes came out this weekend. Good night my brain is fried
01:01 < bridge> <learath2> Well wdym by edit? Adjusting colors and exposure or the heavier stuff like removing people?
01:01 < bridge> <chillerdragon> Both
01:01 < bridge> <chillerdragon> I wouldnâ€™t do any of it
01:01 < bridge> <chillerdragon> Especially if Iâ€™m not posting them
01:01 < bridge> <learath2> Well they look better edited. Editing is part of the art of photography
01:01 < bridge> <learath2> I'm posting them on instagram ðŸ˜„
01:02 < bridge> <chillerdragon> Or do you have some travel blogger social
01:02 < bridge> <chillerdragon> Oh
01:02 < bridge> <chillerdragon> Send
01:02 < bridge> <chillerdragon> Influencer lerato
01:02 < bridge> <learath2> Find it yourself, all the required info is out there ðŸ˜„
01:05 < bridge> <chillerdragon> @Lerato2
01:06 < bridge> <chillerdragon> That is tempting but Iâ€™m not booting instagram for that
01:06 < bridge> <chillerdragon> Anyways good talk Iâ€™ll go make some coffee now c:
05:47 < bridge> <matodor> masterserver not validate json info from servers?
05:47 < bridge> <matodor> https://cdn.discordapp.com/attachments/293493549758939136/1208998247675199561/image.png?ex=65e5525c&is=65d2dd5c&hm=ea143de87dd9be032f0d48f128891993733f2e400e5761bfb3ea338d51326dc6&
05:47 < bridge> <matodor> https://cdn.discordapp.com/attachments/293493549758939136/1208998247935516713/image.png?ex=65e5525c&is=65d2dd5c&hm=e75dff8e8ec1b712bb66d2b30c51d298dc0b987fe65b493999e57ec2511002f2&
05:48 < bridge> <miguilim> :thonk:
05:53 < bridge> <miguilim> Hello guys, I'm creating a documentation that aims to be linear for the teeworlds protocol. You can access via https://protocol-docs.teeframe.com/. Its very incomplete and any kind of help is welcome (mainly for connless packets as I know nothing about them xd)
06:08 < bridge> <matodor> lol 
06:08 < bridge> <matodor> 2024-01-30\13_08_50.json
06:08 < bridge> <matodor> https://cdn.discordapp.com/attachments/293493549758939136/1209003475057377320/image.png?ex=65e5573a&is=65d2e23a&hm=b564899c3de549b1987a18966f059714a170752f926bfeb400475d8714b2d8a9&
06:15 < bridge> <reitw> I think chillerdragon alr have made this
07:24 < ws-client> <ChillerDragon> @reitw ye thats where he copy pasted it from lmao
10:00 < bridge> <chillerdragon> Nah you can send whatever you want
12:00 < bridge> <matodor> cringe
12:28 < bridge> <zhn> https://chillerdragon.github.io/teeworlds-protocol/index.html
12:50 < bridge> <matodor> trol? :lol:
12:52 < ws-client> <ChillerDragon> i love how this repo has more stars than the total amount of stars i made by fulltime githubbing for like 5 years https://github.com/klonnet23/helloy-word
13:38 < bridge> <Jupstar âœª> i need placement new in rust
13:38 < bridge> <Jupstar âœª> 
13:38 < bridge> <Jupstar âœª> i ran into stack overflow during a intialization :lol: 
13:38 < bridge> <Jupstar âœª> now i create way to many smaller boxes for nothing
13:38 < bridge> <Jupstar âœª> today is "i hate programming"-monday
13:39 < bridge> <Ewan> yea
13:57 < bridge> <learath2> You can construct a box from a raw pointer in an unsafe block, is that not enough?
14:02 < bridge> <Jupstar âœª> Yeah but don't want to introduce more unsafe. I guess I can live with a little performance overhead for now
14:03 < bridge> <learath2> Understandable
14:03 < bridge> <learath2> How about nightly `new_in` instead?
14:08 < bridge> <Jupstar âœª> Yet I haven't introduced any nightly features, but sometimes I really consider it xd
14:08 < bridge> <Jupstar âœª> I really hate rust analyzer. It's so slow and so buggy.. Defs the worst in all rust ecosystem
14:22 < bridge> <learath2> Huh, I've had a much better time with it then I've had with clangd. But I only dabble in the most vanilla of rust features
14:25 < ws-client> <ChillerDragon> @miguilim this one might come in handy for you
14:25 < ws-client> https://private-user-images.githubusercontent.com/20344300/305960917-2fe66dc9-564a-4e54-b94d-a0cdc56b187e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDgzNDkzNzEsIm5iZiI6MTcwODM0OTA3MSwicGF0aCI6Ii8yMDM0NDMwMC8zMDU5NjA5MTctMmZlNjZkYzktNTY0YS00ZTU0LWI5NGQtYTBjZGM1NmIxODdlLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLS
14:25 < ws-client> UFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAyMTklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMjE5VDEzMjQzMVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTM0NzllY2RhNjk4YTlhNWQyMjVhODM4OTgxYjE2ZjVhNzk5YjA0NzZkYzRlNGIyMGFiM2Q5ODU5YTA1ZGZhNWEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.lxvKir5X0pvvwmSRwboBKPlrrM8ett46vs8Kbu_nutE
14:26 < ws-client> <ChillerDragon> https://twnet.zillyhuhn.com/?d=04+0a+00+cf+2e+de+1d+04
14:31 < bridge> <Ewan> sploink
14:44 < bridge> <Jupstar âœª> Yeah dunno, I've rather bad experience way too often.
14:44 < bridge> <Jupstar âœª> 
14:44 < bridge> <Jupstar âœª> - It's not pretty well tested. The nighty version often is broken.
14:44 < bridge> <Jupstar âœª> - using git pull often requires a cargo clean because it still sees outdated function signatures
14:44 < bridge> <Jupstar âœª> - it's often much slower than a cargo build. I struggles hard getting dependencies together.
14:44 < bridge> <Jupstar âœª> - I have it on analyze on clicking save, but very often it takes way to long to get insight of the code, e.g. type information of variables. This one is rather random, sometimes it works well, sometimes not
14:46 < bridge> <Jupstar âœª> Rustfmt is the second worst BTW xd, it fails at so random stuff. Especially annoying is inside macros
14:48 < bridge> <ryozuki> i mean its nightly for a reason xd
14:48 < bridge> <ryozuki> but ye rust analyzer is hard
14:48 < bridge> <ryozuki> the previous was rly rly rly worse
14:48 < bridge> <ryozuki> rustls
14:48 < bridge> <Jupstar âœª> That's true, but for something so essential for a ecosystem I'd expect them to have much better testing
14:48 < bridge> <ryozuki> i havent noticed any big issues myself tho
14:49 < bridge> <ryozuki> im sure nightly means nightly like ddnet nightly
14:49 < bridge> <ryozuki> idk its probs hard to test this
14:49 < bridge> <ryozuki> so many combinations
14:49 < bridge> <ryozuki> but dont worry edlang language server will have ur back
14:49 < bridge> <Jupstar âœª> Yeah I assume so too, but aren't they paid devs? They can take time to think about testing methods
14:49 < bridge> <ryozuki> in 2040
14:50 < bridge> <Jupstar âœª> Xd
14:50 < bridge> <ryozuki> idk if they paid
15:03 < bridge> <ryozuki> ChillerDragon btw edlang has 4 stargazers xD
15:03 < bridge> <ryozuki> https://github.com/edg-l/edlang
15:03 < bridge> <ryozuki> its coming along nicely
15:03 < bridge> <ryozuki> need to add arrays
15:09 < bridge> <meloÆž> @ryozuki heeeeeeeeelp
15:09 < bridge> <meloÆž> ```
15:09 < bridge> <meloÆž> Missing request extension: Extension of type `alloc::sync::Arc<sqlx_core::pool::Pool<sqlx_mysql::database::MySql>>` was not found. Perhaps you forgot to add it? See `axum::Extension`.
15:09 < bridge> <meloÆž> ```
15:09 < bridge> <meloÆž> 
15:09 < bridge> <meloÆž> the pool is accessible to all route handler's using `.with_state(pool.clone())`
15:09 < bridge> <meloÆž> meaning `Arc<MySqlPool>` should be available to all handlers via `State` right?? RIGHT???
15:14 < bridge> <zhn> `State(pool): State<Arc<MySqlPool>>,` instead of `Extension(pool): Extension<Arc<MySqlPool>>,`
15:16 < bridge> <ryozuki> itsb een long since i used axum but
15:16 < bridge> <ryozuki> ye use state not extension
15:16 < bridge> <ryozuki> i told u before
15:16 < bridge> <meloÆž> you did?
15:16 < bridge> <ryozuki> or to someone xd
15:16 < bridge> <ryozuki> state is type checked at compile time
15:16 < bridge> <ryozuki> so its better
15:21 < bridge> <meloÆž> <3
16:57 < bridge> <ryozuki> @chairn https://www.youtube.com/watch?v=1CSeY10zbqo
17:48 < bridge> <ryozuki> @jupeyy_keks https://wccftech.com/amd-zen-5-cpus-reportedly-made-on-tsmc-3nm-process-q2-mass-production-q3-2024/amp/
17:48 < bridge> <ryozuki> 3nm????
17:48 < bridge> <ryozuki> > AMD Zen 5 CPUs Reportedly Made On TSMCâ€™s 3nm Process In Q2, Mass Production In Q3
18:06 < bridge> <Jupstar âœª> I thought they will use zen 4 for now
18:06 < bridge> <Jupstar âœª> That would be nice news
21:23 < bridge> <heinrich5991> ChillerDragon: perhaps you can find a better matrix client than element ðŸ™‚
21:28 < bridge> <heinrich5991> read-only only applies to the contents on linux
21:31 < bridge> <heinrich5991> I'm not sure if that has been tested in years. probably simply not working. is there a particular reason why you want to use mysql with ddnet on windows?
21:31 < bridge> <meloÆž> it was something i was dependent on on a modification i am working on
21:32 < bridge> <meloÆž> but since i just dumped the entire thing and wrote a restapi - i dont need it anymore
21:32 < bridge> <meloÆž> kekw
21:32 < bridge> <meloÆž> it was something i was dependent on for a modification i am working on
21:44 < bridge> <heinrich5991> I also think that lua might be the better pick right now, but I also don't have a lot of experience working with wasm
21:45 < bridge> <heinrich5991> that sounds like a bad idea. the user doesn't really have the context to make this decision IMO
21:49 < bridge> <Jupstar âœª> good the opposite of what you say is usually the way to go
21:50 < bridge> <Jupstar âœª> the only reason u think that is bcs factario is doing it
21:51 < bridge> <kaffeine0> LUA files sent by a server can crash or "hack" (steal the personal data) the clients, and I don't see a real workaround here. We can't analyze LUA for bugs. Maybe we could install some handlers and interceptions on the client side but it still looks unreliable and tricky.
21:51 < bridge> <kaffeine0> (So for now I want to use LUA for the server side scripting but don't have a solution for client-side mods)
21:52 < bridge> <kaffeine0> "bcs factorio" and tens other games "is doing it"
21:52 < bridge> <kaffeine0> and maybe bcs there is approximately zero games using wasm for that.
21:52 < bridge> <Jupstar âœª> yes it's very hard to do that.. even browsers fail sometimes
21:53 < bridge> <kaffeine0> https://cdn.discordapp.com/attachments/293493549758939136/1209241368157888542/image.png?ex=65e634c8&is=65d3bfc8&hm=12fce2a29e7f4e8b2d699591c02680845b6451cfdba710e4592ceddb5afafc26&
21:53 < bridge> <Jupstar âœª> that doesn't make lua better than wasm tho.
21:53 < bridge> <Jupstar âœª> 
21:53 < bridge> <Jupstar âœª> browsers will use more and more wasm, so it's generally more likely to contain less security related bugs.
21:53 < bridge> <Jupstar âœª> Also there are game engines that start using wasm
21:53 < bridge> <Jupstar âœª> also wasm, as i imagine it, will allow lua
21:54 < bridge> <Jupstar âœª> bcs it's a superset
21:54 < bridge> <kaffeine0> Bcs it is a different tool for a different purpose.
21:55 < bridge> <Jupstar âœª> anyway, more secure + faster = the future for me
21:55 < bridge> <Jupstar âœª> i'm biased
21:55 < bridge> <kaffeine0> Would you say that a C++ compiler a superset of a web browser?
21:55 < bridge> <kaffeine0> You can do a web browser using C++ compiler but (normally) not vice versa.
21:55 < bridge> <kaffeine0> Would you say that a C++ compiler is a superset of a web browser?
21:55 < bridge> <kaffeine0> You can do a web browser using C++ compiler but (normally) not vice versa.
21:56 < bridge> <Jupstar âœª> i don't really understand it, but i guess i'll just answer with yes
21:56 < bridge> <Jupstar âœª> well maybe they are equally poweful, since a browser can run a c++ compiler compiled to wasm :lol:
22:00 < bridge> <heinrich5991> @zenopeer @learath2 you need to support the extended server info (the non `FSTD`/`DTSF` one) for the new masterserver's backcompat. alternatively register via HTTPS, it should be easierâ„¢
22:04 < bridge> <heinrich5991> amazing ðŸ˜®
22:10 < bridge> <kaffeine0> Yep, you're answering yes.
22:10 < bridge> <kaffeine0> Compiler and Web browser are different tools for different purposes. I need a web browser and you're selling me a "secure + faster" compiler, because "after all I also get a web browser" using it.
22:12 < bridge> <Jupstar âœª> to me wasm is exactly what LUA can do + even more
22:12 < bridge> <Jupstar âœª> why is it a different tool for you?
22:12 < bridge> <Jupstar âœª> the way i use wasm is not the way you __have__ to use it
22:12 < bridge> <Jupstar âœª> in the browser wasm is used interchangeable with js
22:13 < bridge> <heinrich5991> ChillerDragon: default argumets are evaluated once when the source file is read IIRC. it's not "whatever the first instance of MsgClSay had"
22:16 < bridge> <heinrich5991> can you show the `PACKET_GETINFO` constant?
22:18 < bridge> <Jupstar âœª> bro when u work on smth for 4h and it works first try
22:18 < bridge> <Jupstar âœª> 
22:18 < bridge> <Jupstar âœª> epyc
22:18 < bridge> <Jupstar âœª> 
22:18 < bridge> <Jupstar âœª> i have the feeling that is easier with rust
22:18 < bridge> <Jupstar âœª> 
22:18 < bridge> <Jupstar âœª> @ryozuki i already have to do the propaganda lately, when do you take your job back ðŸ˜¬
22:20 < bridge> <heinrich5991> because `map` guarantees that the function is executed even for `skip`ped elements
22:20 < bridge> <heinrich5991> heard there's a whole book on tex
22:21 < bridge> <Jupstar âœª> mh, but i think llvm optmized it still. i hoped to get perf uplift in release mode
22:21 < bridge> <heinrich5991> do tell
22:22 < bridge> <heinrich5991> correct, the info is a free form JSON object
22:23 < bridge> <heinrich5991> `new_in` doesn't look like placement new
22:23 < bridge> <heinrich5991> I still think intellij's rust support is quite nice
22:23 < bridge> <heinrich5991> yea, that's really annoying. I considered starting a fork for that shit ðŸ˜¦
22:24 < bridge> <heinrich5991> ðŸ˜¦
22:25 < bridge> <heinrich5991> in that sense, lua also allows wasm
22:25 < bridge> <Jupstar âœª> i mean right now
22:25 < bridge> <Jupstar âœª> not theoretically
22:26 < bridge> <heinrich5991> I bet there's a wasm interpreter in lua
22:26 < bridge> <heinrich5991> right noww
22:26 < bridge> <matodor> why is there no strong typing?
22:26 < bridge> <heinrich5991> I'll look it up though
22:26 < bridge> <Jupstar âœª> what? never xd
22:26 < bridge> <heinrich5991> so people can add their own stuff
22:26 < bridge> <Jupstar âœª> how slow should that be?
22:27 < bridge> <heinrich5991> probably quite fast if you use luajit
22:27 < bridge> <Jupstar âœª> is luajit memory safe?
22:27 < bridge> <Jupstar âœª> or better: will the wasm runtime be memory safe
22:30 < bridge> <matodor> well, let them add it to separate fields, but the fields common to all servers must be validated
22:30 < bridge> <heinrich5991> yes, just like lua
22:30 < bridge> <Jupstar âœª> is it written in c?
22:30 < bridge> <Jupstar âœª> like lua
22:30 < bridge> <heinrich5991> I basically modeled it after the old server info. servers could also send all kinds of data in the server info
22:30 < bridge> <matodor> in some archives stats im found server without "name" field ðŸ˜„
22:30 < bridge> <heinrich5991> yes, although for JITs, the main unsafety doesn't really come from being written in C, I think
22:30 < bridge> <heinrich5991> sure. the client will just disregard that
22:30 < bridge> <heinrich5991> but rather from the fact that wrong code generation itself can lead to security vulnerabilities
22:31 < bridge> <Jupstar âœª> i cant find the lua benchmarks, but luajit also wasnt that fast
22:31 < bridge> <Jupstar âœª> i need ryo's 2000 tabs
22:34 < bridge> <zenopeer> wdym
22:34 < bridge> <matodor> okay, I'll have to write my own parser for this, instead of one line solution: 
22:34 < bridge> <matodor> `JsonSerializer.DeserializeAsync<MasterServerInfo>(entry.DataStream!)` :justatest:
22:34 < bridge> <heinrich5991> I think it outperformed V8
22:34 < bridge> <Jupstar âœª> is that a skill? xd
22:34 < bridge> <heinrich5991> they also had the case where they were faster than C for calling into dynamic libraries ðŸ˜„
22:34 < bridge> <learath2> 430 euros for a return flight
22:34 < bridge> <heinrich5991> yes, just like you'd need to if you received the server infos from the servers directly
22:35 < bridge> <learath2> Can't you do it with a convoluted allocator
22:35 < bridge> <heinrich5991> it gets the new thing as a by-value parameter
22:35 < bridge> <heinrich5991> you've already lost at that point
22:35 < bridge> <learath2> Ah, a shame
22:35 < bridge> <Jupstar âœª> https://programming-language-benchmarks.vercel.app/lua-vs-wasm
22:36 < bridge> <Jupstar âœª> rust code compiled to wasm
22:36 < bridge> <Jupstar âœª> vs luajit
22:36 < bridge> <Jupstar âœª> hello world rust looses.. as expected :lol:
22:36 < bridge> <Jupstar âœª> also note wasmtime isnt the fastest runtime
22:38 < bridge> <heinrich5991> luajit seems to be 10%-30% slower than wasmtime based on these tables, if I read them correctly
22:38 < bridge> <Jupstar âœª> + u need to learn lua
22:39 < bridge> <heinrich5991> otherwise you'll probably need to learn some wasm stuff if you want to use a language that's not yet explicitly added?
22:40 < bridge> <Jupstar âœª> yes, but learning rust is not a waste of time
22:40 < bridge> <Jupstar âœª> why are u even fighting so hard for lua xD
22:40 < bridge> <heinrich5991> but for the advantage of compiling lua to wasm, you'd first have to figure out how to pass parameters, export functions, etc.
22:40 < bridge> <Jupstar âœª> u never used it yourself, u only saw it in factario
22:40 < bridge> <Jupstar âœª> is that so convincing?
22:41 < bridge> <Jupstar âœª> and why would you not need to do that for c++ or rust?
22:41 < bridge> <heinrich5991> I saw it embedded in tw, probably embedded it into my own project at some point, worked a bit with it
22:41 < bridge> <Jupstar âœª> wasm = your rust or c++ code
22:42 < bridge> <heinrich5991> and I'm only trying to make the response on this server less biased
22:42 < bridge> <Jupstar âœª> for which sense?
22:42 < bridge> <heinrich5991> if you'd be preaching that lua was the only possible solution, I'd probably talk about wasm a bit
22:42 < bridge> <Jupstar âœª> backward compability is so FUCKING AWESOME
22:42 < bridge> <heinrich5991> because I don't think that wasm is the only possible solution here, or that it's necessarily the best
22:42 < bridge> <Jupstar âœª> i love it
22:42 < bridge> <Jupstar âœª> man, it's so amazing using protol ex
22:43 < bridge> <heinrich5991> please stop mocking meâ€¦
22:43 < bridge> <Jupstar âœª> #7993
22:43 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/7993
22:43 < bridge> <Jupstar âœª> i try to see if u take the opposite side
22:43 < bridge> <heinrich5991> ah, I misunderstood it
22:44 < bridge> <heinrich5991> if you present arguments for backward compatibility, I can tell you counter arguments ðŸ™‚
22:44 < bridge> <heinrich5991> you didn't say "wasm is so awesome"
22:44 < bridge> <heinrich5991> you provided arguments
22:44 < bridge> <Jupstar âœª> backward compability makes you read code harder which ultimately makes you know the code base better
22:45 < bridge> <heinrich5991> that sounds not very convincing. why would it be useful if you had to concentrate more to read code?
22:45 < bridge> <Jupstar âœª> the hardest challenges make the best ppl
22:45 < bridge> <heinrich5991> I disagree
22:45 < bridge> <heinrich5991> it's better if you can quickly jump in and start coding
22:46 < bridge> <heinrich5991> more contributors, more fresh blood, etc.
23:58 < bridge> <learath2> Yes? V8 is an insanely commonly used js engine written by google, with jit, outperforming it is actually impressive
