00:29  * Konsti slaps Ryozuki- around a bit with a large fishbot
00:49 <+bridge_> [ddnet] <Patiga> rate my renderer, doing envelopes rn
00:49 <+bridge_> [ddnet] <Patiga> https://cdn.discordapp.com/attachments/293493549758939136/951990380637847633/renderer.mp4
01:05 <+bridge_> [ddnet] <Ravie> dm1/10
01:19 <+bridge_> [ddnet] <c0d3d3v> are these rotating clouds in the background?
01:19 <+bridge_> [ddnet] <Patiga> I think they try to imitate birds
02:06 <+bridge_> [ddnet] <Voxel> what will you use this for? :o
02:38 <+bridge_> [ddnet] <Patiga> thats just the envelopes implemented incorrectly. I'm writing a full renderer with webgpu in rust right now :)
02:39 <+bridge_> [ddnet] <Voxel> ohhh, so it's just a coding experiment! i think it's nice so far!
08:28 <+bridge_> [ddnet] <chillerdragon> Is that vanilla dm1?
08:28 <+bridge_> [ddnet] <chillerdragon> (@Patiga)
08:31 <+bridge_> [ddnet] <Jupstar> neat, now decide on a license and release xdd
10:56 <+bridge_> [ddnet] <c0d3d3v> vanilla is sunny, it seems to be a modified version
10:56 <+bridge_> [ddnet] <c0d3d3v> vanilla is sunny, it seems to be a modified version (or is it just renderd false o.O)
10:57 <+bridge_> [ddnet] <c0d3d3v> vanilla is sunny, it seems to be a modified version (or is it simply rendered incorrectly o.O)
11:22 <+ChillerDragon> Meh seems like github is ignoring my .gitattributes file how can that even happen -.- If i "Fetch upstream" on github it says conflicts but a merge in the cli works smooth
11:26 <+ChillerDragon> Also seems like the clang-tidy CI is throwing an cmake warning https://github.com/ddnet/ddnet/runs/5521214822?check_suite_focus=true#step:4:143 what do we need CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE for?
11:27 <+bridge_> [ddnet] <Patiga> ChillerDragon: yeah its the vanilla dm1, the rendering was a little messed up
11:29 <+ChillerDragon> looks good to me @Patiga
11:29 <+ChillerDragon> :)
11:29 <+ChillerDragon> Oh yikes we go full c++ now? -.- https://github.com/ddnet/ddnet/blob/c0d398df388b6788d99898c37ca62e4765cbcef2/src/game/client/components/skins.cpp#L27
11:30 <+bridge_> [ddnet] <Jupstar> wtf are u talking about xD we use c++ since ever
11:30 <+ChillerDragon> thats a new style enforce
11:30 <+ChillerDragon> to use any instead of loops
11:30 <+bridge_> [ddnet] <Jupstar> you can fix the warning if you want for clang-tidy
11:30 <+ChillerDragon> https://clang.llvm.org/extra/clang-tidy/checks/readability-use-anyofallof.html
11:30 <+bridge_> [ddnet] <Jupstar> its not enforced
11:30 <+bridge_> [ddnet] <Jupstar> it was just refactoring
11:30 <+ChillerDragon> the upper example is already pretty fance to me
11:30 <+ChillerDragon> but the lower one is even crazier xd
11:31 <+ChillerDragon> it is enforced by the CI
11:31 <+bridge_> [ddnet] <Jupstar> well anyway, does clang-tidy not provide auto fixes?
11:31 <+ChillerDragon> ye somtimes
11:32 <+ChillerDragon> in this case it does not seem to. But yea i will figure it out and get used to it
11:32 <+ChillerDragon> i guess those tidy ppl a smart and have some reason to decide this is the best way to loop
11:32 <+ChillerDragon> it just looks very c++ to me now
11:33 <+ChillerDragon> is that a lambda?! xd
11:33 <+bridge_> [ddnet] <Jupstar> well i am suprised that clang tidy only found this one occurance
11:33 <+ChillerDragon> one occurance?
11:33 <+ChillerDragon> wdym
11:33 <+bridge_> [ddnet] <Jupstar> thats why i thought its not enforced, sadly the documentation doesnt say when that flag was added
11:34 <+bridge_> [ddnet] <Jupstar> yeah any_of
11:34 <+ChillerDragon> wasnt that uncommented by ddnet explicitly?
11:34 <+bridge_> [ddnet] <Jupstar> i meant your example
11:34 <+bridge_> [ddnet] <Jupstar> lambdas are nice tho, even if you disagree with the syntax
11:35 <+bridge_> [ddnet] <Jupstar> saves a lot of time sometimes
11:35 <+ChillerDragon> i never bothered to understand or read c++
11:35 <+bridge_> [ddnet] <Jupstar> and/or makes stuff less complicated (e.g. no need to add another function)
11:35 <+ChillerDragon> https://github.com/ddnet/ddnet/commit/4da76e0e7d008e7e5c09ed227f17676395ab8554#diff-aba621fd6688d4086ab40e58808cc12fdf591fdedf0d6c58cde2312b68cea5e0L4102-L4113
11:35 <+bridge_> [ddnet] <Jupstar> i mean it literally says any_of xd
11:36 <+ChillerDragon> is it only me or is this code way less readable?
11:36 <+bridge_> [ddnet] <Jupstar> i'd say they are euqally readable
11:36 <+ChillerDragon> guess it takes some time
11:36 <+bridge_> [ddnet] <Jupstar> but yes, it's not so much that it has to be enforced
11:36 <+ChillerDragon> nah but consistent style is cool
11:37 <+ChillerDragon> using both ways isnt much better
11:37 <+bridge_> [ddnet] <Jupstar> no logic errors is cool
11:37 <+bridge_> [ddnet] <Jupstar> code design bitching is annoying af
11:37 <+bridge_> [ddnet] <Jupstar> either a tool does it, or it shouldnt matter
11:38 <+ChillerDragon> yea
11:38 <+ChillerDragon> but in our case the tool does the bitching so that works .. right? xd
11:38 <+bridge_> [ddnet] <Jupstar> as long as it can auto provide a fix idc
11:38 <+bridge_> [ddnet] <Jupstar> if not, its annoying indeed
11:38 <+ChillerDragon> maybe i dont see it
11:39 <+ChillerDragon> https://zillyhuhn.com/cs/.1647081538.png
11:39 <+bridge_> [ddnet] <Jupstar> well then complain about disabling it on github, you have my blessing
11:39 <+ChillerDragon> but hey its not that bad
11:39 <+ChillerDragon> i only have to understand it once
11:39 <+ChillerDragon> its not that dramatic
11:39 <+ChillerDragon> its more about how the code will look in the end so c++ish
11:40 <+bridge_> [ddnet] <Jupstar> lmao, just bcs of one lambda xD
11:40 <+bridge_> [ddnet] <Jupstar> its even "just" c++11
11:40 <+ChillerDragon> i started porting the style CI to teeworlds and rage quitted because i couldnt get it building but with this stuff we will never get the same style guide in vanilla and ddnet
11:40 <+bridge_> [ddnet] <Jupstar> in c++98 u'd just make a function instead of a lambda
11:40 <+bridge_> [ddnet] <Jupstar> so not insanly different
11:41 <+ChillerDragon> yea whatever gimme some time to get used to it ill report back
11:41 <+ChillerDragon> the auto loop forexample i really started to like it more than a for loop with int i
11:41 <+bridge_> [ddnet] <Jupstar> yeah ðŸ˜„
11:41 <+bridge_> [ddnet] <Jupstar> generally auto is really nice to code fast
11:41 <+ChillerDragon> brrr
11:41 <+bridge_> [ddnet] <Jupstar> is a small trade for readability
11:42 <+bridge_> [ddnet] <Jupstar> but any sane IDE or code editor can parse the type ðŸ˜„
11:42 <+ChillerDragon> i have no idea how ppl can use a language without static types as a first language
11:42 <+bridge_> [ddnet] <Jupstar> https://cdn.discordapp.com/attachments/293493549758939136/952154639132925952/unknown.png
11:42 <+bridge_> [ddnet] <Jupstar> i see the type directly
11:42 <+ChillerDragon> yes because u know types
11:43 <+ChillerDragon> but imagine u dont know types
11:43 <+ChillerDragon> and start coding
11:43 <+ChillerDragon> how would it even make sense
11:45 <+ChillerDragon> when i write my first std_any thingy without looking it up ill add modern C++22 to my CV xd
11:52 <+ChillerDragon> https://zillyhuhn.com/cs/.1647082352.png
11:53 <+ChillerDragon> nah even after writing it and understanding it better it still does not look like an upgrade 
11:53 <+ChillerDragon> is it faster or something? more failsafe?
11:53 <+ChillerDragon> is it doing a function call on every iteration?
11:54 <+ChillerDragon> for me looks like the code is more bloated and the runtime too
11:57 <+ChillerDragon> wait wat my CI wasnt even failling? only local?
12:07 <+bridge_> [ddnet] <Jupstar> so the clang-tidy version of the CI cannot detect it yet?
12:09 <+bridge_> [ddnet] <chillerdragon> Seems like
12:09 <+bridge_> [ddnet] <chillerdragon> deen probably tested local too when fixing those
12:10 <+bridge_> [ddnet] <chillerdragon> Why does the discord picture look so much better than the irc one
12:29 <+bridge_> [ddnet] <Ryozuki> that looks clean af
12:35 <+ChillerDragon> if i have a class that parses language which then is used to analyse chat would that belong into src/game or in src/engine/shared ?
12:36 <+bridge_> [ddnet] <Jupstar> is it shared between client and server?
12:36 <+ChillerDragon> no client only
12:37 <+ChillerDragon> but i mean it could be or is that not the point?
12:37 <+bridge_> [ddnet] <Jupstar> then i wouldnt put it into shared xd
12:37 <+ChillerDragon> so src/game then?
12:37 <+ChillerDragon> i thought its not really game related
12:37 <+bridge_> [ddnet] <Jupstar> mh
12:38 <+bridge_> [ddnet] <Jupstar> i dunno, chat sounds really game related xd
12:38 <+ChillerDragon> but thats the use case of the class
12:38 <+ChillerDragon> the class it self does not know about chat
12:38 <+bridge_> [ddnet] <Jupstar> tw engine isnt really an abstracted engine anyway
12:38 <+bridge_> [ddnet] <Jupstar> just put it where you want
12:38 <+ChillerDragon> hmoke
12:38 <+ChillerDragon> src/game it is
12:39 <+ChillerDragon> jupjapsapstur ur on windows right?
12:39 <+bridge_> [ddnet] <Jupstar> rarely, why?
12:39 <+bridge_> [ddnet] <Jupstar> u ask me this like every 2 months xD
12:39 <+ChillerDragon> where do u use element on?
12:39 <+ChillerDragon> ikr
12:39 <+bridge_> [ddnet] <Jupstar> browser
12:39 <+ChillerDragon> oh
12:39 <+bridge_> [ddnet] <Jupstar> i use everything on browser xd
12:39 <+ChillerDragon> nvm then cool kid
12:40 <+bridge_> [ddnet] <Jupstar> that i dont need to install
12:40 <+ChillerDragon> i use the electron app but on arch i can not quit it
12:40 <+ChillerDragon> so i always do pkill -f electron
12:40 <+ChillerDragon> which is a bit radical.. sometimes even the light on my fridge turns off when i do it
12:41 <+ChillerDragon> on debian it works fine
12:41 <+ChillerDragon> maybe i should try browser too
12:41 <+bridge_> [ddnet] <Jupstar> xD
12:41 <+bridge_> [ddnet] <Jupstar> learaths agrees
12:41 <+ChillerDragon> i wish matrix had better clients
12:41 <+bridge_> [ddnet] <deen> having multiple browser engines running, one for each application, seems a bit excessive
12:42 <+ChillerDragon> isnt electron also sharing engines?
12:42 <+ChillerDragon> like vscode and element for example
12:42 <+bridge_> [ddnet] <deen> oh, didn't know
12:42 <+bridge_> [ddnet] <Jupstar> i kinda like the features element offers, but discord defs looks better from feeling
12:42 <+ChillerDragon> and all the other applications that crash when i try to quit element xd
12:42 <+ChillerDragon> idk deen tbh
12:42 <+ChillerDragon> but could be
12:43 <+ChillerDragon> or i just replace my arch with debian :brain:
12:44 <+ChillerDragon> wat distro r u on jupjapstar?
12:44 <+ChillerDragon> i swear ur windows main
12:44 <+bridge_> [ddnet] <Jupstar> debian sid
12:44 <+ChillerDragon> trol
12:44 <+ChillerDragon> wait sid?!
12:44 <+ChillerDragon> isnt that from the stone age
12:44 <+ChillerDragon> ah nvm unnstable xd
12:45 <+bridge_> [ddnet] <Jupstar> i cometly switched to linux since i have my AMD GPU(bcs my nvidia card always crashed my system) that was around 2017
12:45 <+bridge_> [ddnet] <Jupstar> 
12:45 <+bridge_> [ddnet] <Jupstar> Before that i only used linux in vm xD
12:45 <+bridge_> [ddnet] <Jupstar> sid is arch -2 months basically
12:45 <+ChillerDragon> is it rolling?
12:45 <+bridge_> [ddnet] <Jupstar> packages are very new, but not the newest master
12:45 <+bridge_> [ddnet] <Jupstar> no id ont think so
12:45 <+ChillerDragon> how long uv been on sid?
12:46 <+bridge_> [ddnet] <Jupstar> i dunno, i once switched to testing and then back to sid
12:46 <+bridge_> [ddnet] <Jupstar> testing is like updates every few months
12:46 <+ChillerDragon> ja na i guess ill stay on stable
12:46 <+ChillerDragon> i just build from src if i need more recent stuff
12:47 <+bridge_> [ddnet] <Jupstar> i mean if you stable isnt older than like 2 years its fine i guess
12:47 <+bridge_> [ddnet] <Jupstar> but i wouldnt wait longer
12:47 <+ChillerDragon> yeye 
12:47 <+bridge_> [ddnet] <Jupstar> u miss all the cool new stuff xd
12:47 <+ChillerDragon> like wat
12:47 <+ChillerDragon> its not that i notice any changes anyways
12:47 <+bridge_> [ddnet] <deen> like certificate updates ðŸ˜„
12:47 <+bridge_> [ddnet] <Jupstar> on desktop there are so many changes
12:47 <+bridge_> [ddnet] <Jupstar> 
12:47 <+ChillerDragon> eee
12:47 <+bridge_> [ddnet] <Jupstar> new GPU features
12:47 <+bridge_> [ddnet] <Jupstar> games that are updated over package manager
12:48 <+bridge_> [ddnet] <Jupstar> i mean it depends what you want
12:48 <+ChillerDragon> i want a tw client
12:48 <+ChillerDragon> which i compile my self
12:48 <+ChillerDragon> thats my games
12:48 <+bridge_> [ddnet] <Jupstar> e.g. i play on emulators some times and also compile them, and some are really aggressive with c++ versions xxD
12:48 <+bridge_> [ddnet] <Jupstar> yuzu is done in c++20
12:48 <+bridge_> [ddnet] <Jupstar> so ubuntu20 might already struggle with it
12:48 <+ChillerDragon> i need to compile my custom ddnet bots anyways
12:48 <+ChillerDragon> wait did i say that out loud?
12:49 <+bridge_> [ddnet] <Jupstar> what?
12:49 <+bridge_> [ddnet] <Jupstar> ðŸ˜‰
12:49 <+ChillerDragon> i rly dont care if my gnome is version 20 or 40 both run fine on my gpu
12:49 <+bridge_> [ddnet] <Jupstar> gnom is ugly anyway
12:49 <+ChillerDragon> ooookey sir
12:49 <+bridge_> [ddnet] <Jupstar> use kde, enjoy real desktop xd
12:49 <+ChillerDragon> also i use spaces instead of tabs
12:50 <+bridge_> [ddnet] <Jupstar> ba
12:50 <+bridge_> [ddnet] <Jupstar> n
12:50 <+ChillerDragon> xd
12:50 <+ChillerDragon> well actually i switches
12:50 <+ChillerDragon> d
12:50 <+ChillerDragon> because tabs are better for bash here doc format
12:51 <+ChillerDragon> i think it doesnt even support spaces
12:51 <+bridge_> [ddnet] <Jupstar> as long as a tool auto formats i dont care xd
12:51 <+bridge_> [ddnet] <Jupstar> but pressing space 5 times to fit the other code style sucks xD
12:52 <+ChillerDragon> yea nobody does that
12:52 <+ChillerDragon> but the underlying thing actually matters when it comes to Makefiles or heredoc
12:52 <+bridge_> [ddnet] <Jupstar> python xd
12:52 <+ChillerDragon> omg dont get me started
12:52 <+ChillerDragon> now im just procrastinating 
12:53 <+ChillerDragon> ima close this addictive social media 
12:53 <+bridge_> [ddnet] <Jupstar> bro believe me i hate this language syntax
12:58 <+ChillerDragon> @heinrich5991 any hard feelings on making ENGINE_SHARED glob recursive? -.-
12:59 <+bridge_> [ddnet] <Ryozuki> are u guys using desktops?
12:59 <+bridge_> [ddnet] <Ryozuki> :monkalaugh:
12:59 <+ChillerDragon> pf
13:00 <+ChillerDragon> deen do you even still use linux? or are you mac main now?
13:01 <+bridge_> [ddnet] <deen> mac during the week, linux on weekend ðŸ˜„
13:02 <+ChillerDragon> so also for personal stuff during the week?
13:02 <+ChillerDragon> or is there no freetime during week for u lol
13:06 <+bridge_> [ddnet] <Jupstar> i can understand the appeal of tiling, but i kinda prefer to run most stuff fullscreen (or maximized) anyway, less distracting, more space
13:06 <+bridge_> [ddnet] <Ryozuki> with tiling alt tab doesnt exist
13:06 <+bridge_> [ddnet] <Ryozuki> its so much faster
13:07 <+bridge_> [ddnet] <Ryozuki> u are forced to use workspaces
13:07 <+bridge_> [ddnet] <Ryozuki> so its better
13:07 <+ChillerDragon> my alt tab isnt slow i think
13:07 <+bridge_> [ddnet] <Jupstar> i use the menu bar xd
13:07 <+bridge_> [ddnet] <Ryozuki> xd
13:07 <+ChillerDragon> xd
13:07 <+bridge_> [ddnet] <Ryozuki> whats a menu bar
13:07 <+bridge_> [ddnet] <Ryozuki> :monkalaugh:
13:07 <+bridge_> [ddnet] <Jupstar> the taskbar
13:08 <+bridge_> [ddnet] <Ryozuki> whats a taskbar
13:08 <+bridge_> [ddnet] <Ryozuki> :monkalaugh:
13:08 <+ChillerDragon> ryotrol
13:08 <+bridge_> [ddnet] <Jupstar> the bar that makes you faster than any other method of finding a window to open
13:08 <+ChillerDragon> depends on the bloat u got open
13:09 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/952176418677202954/unknown.png
13:09 <+ChillerDragon> i barley have more than 4 applications open
13:09 <+bridge_> [ddnet] <Ryozuki> rofi is fastest
13:09 <+bridge_> [ddnet] <Ryozuki> https://github.com/davatorium/rofi
13:09 <+bridge_> [ddnet] <Jupstar> ryo promotes a project that isnt in rust
13:09 <+bridge_> [ddnet] <Jupstar> what a rare event
13:10 <+bridge_> [ddnet] <Ryozuki> :feelsbadman:
13:10 <+ChillerDragon> maybe its an imposter ryo
13:10 <+ChillerDragon> but wm maximalism is classic ryo
13:11 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/952176967501885600/unknown.png
13:12 <+ChillerDragon> xd
13:12 <+ChillerDragon> i got half of it
13:12 <+bridge_> [ddnet] <Jupstar> ppl that see kubuntu switching from windows see a good desktop
13:12 <+bridge_> [ddnet] <Jupstar> 
13:12 <+bridge_> [ddnet] <Jupstar> gnome and i3 wont make it
13:12 <+bridge_> [ddnet] <Jupstar> we need it
13:12 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/952177244342743090/unknown.png
13:12 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/952177244552462366/unknown.png
13:12 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/952177244342743090/unknown.png
13:12 <+bridge_> [ddnet] <Ryozuki> xd
13:13 <+ChillerDragon> lmao
13:13 <+ChillerDragon> x is bloat
13:13 <+bridge_> [ddnet] <Ryozuki> linux is bloat
13:13 <+bridge_> [ddnet] <Ryozuki> make ur own os
13:13 <+bridge_> [ddnet] <Jupstar> true
13:13 <+bridge_> [ddnet] <Ryozuki> embrace bare metal
13:14 <+ChillerDragon> ryo go make an os that is optimized to run ddnet
13:14 <+ChillerDragon> ill buy it
13:14 <+bridge_> [ddnet] <Jupstar> yeah
13:14 <+bridge_> [ddnet] <Voxel> make ddnet compatable with templeos
13:14 <+bridge_> [ddnet] <Ryozuki> lol first i have to make a usb driver
13:14 <+ChillerDragon> imagine boot into games xd
13:14 <+bridge_> [ddnet] <Jupstar> i also need like 2-3 changes in vulkan that would benefit ddnet
13:14 <+bridge_> [ddnet] <Ryozuki> did u know the usb manual is 200+ pages long
13:14 <+bridge_> [ddnet] <Ryozuki> lmao
13:14 <+bridge_> [ddnet] <Jupstar> lets make own os and own graphics api
13:14 <+bridge_> [ddnet] <Ryozuki> https://wiki.osdev.org/Universal_Serial_Bus
13:14 <+bridge_> [ddnet] <Ryozuki> look how huge
13:14 <+bridge_> [ddnet] <Ryozuki> this page is
13:14 <+bridge_> [ddnet] <Ryozuki> xdd
13:14 <+bridge_> [ddnet] <Jupstar> and call it Apppple
13:15 <+ChillerDragon> https://www.youtube.com/watch?v=P9JAnxzpzAA
13:17 <+ChillerDragon> u could even call it appleOS wouldn't clash with macOS
13:17 <+bridge_> [ddnet] <Jupstar> apple fans would accidantically install good os xd
13:20 <+bridge_> [ddnet] <Ryozuki> @Not Keks when u make a os u have to use lot of spinlocks
13:20 <+bridge_> [ddnet] <Jupstar> yea, gives performance boost
13:20 <+bridge_> [ddnet] <Jupstar> every real mutex lock is probs slow
13:22 <+bridge_> [ddnet] <Ryozuki> well u dont have real mutex implemented at kernel level i think
13:22 <+bridge_> [ddnet] <Ryozuki> xd
13:22 <+bridge_> [ddnet] <Jupstar> but on hardware?
13:23 <+bridge_> [ddnet] <Jupstar> i dont mean a high level mutex impl
13:23 <+bridge_> [ddnet] <Jupstar> more like what a mutex does internally
13:23 <+bridge_> [ddnet] <Jupstar> some instance and then inter processor isntructions
13:38 <+bridge_> [ddnet] <Jupstar> https://www.kernel.org/doc/Documentation/locking/mutex-design.txt
13:38 <+bridge_> [ddnet] <Jupstar> 
13:38 <+bridge_> [ddnet] <Jupstar> it descripes what happens
13:38 <+bridge_> [ddnet] <Jupstar> fast path
13:38 <+bridge_> [ddnet] <Jupstar> optimistic path
13:38 <+bridge_> [ddnet] <Jupstar> slow path 
13:39 <+bridge_> [ddnet] <Jupstar> ðŸ˜„ always interesting
13:39 <+bridge_> [ddnet] <Jupstar> "While formally kernel mutexes are sleepable locks, it is path (ii) that
13:39 <+bridge_> [ddnet] <Jupstar> makes them more practically a hybrid type. By simply not interrupting a
13:39 <+bridge_> [ddnet] <Jupstar> task and busy-waiting for a few cycles instead of immediately sleeping,
13:39 <+bridge_> [ddnet] <Jupstar> the performance of this lock has been seen to significantly improve a
13:39 <+bridge_> [ddnet] <Jupstar> number of workloads."
13:39 <+bridge_> [ddnet] <Learath2> New idea. How about teeworlds implemented on silicon directly?
13:40 <+bridge_> [ddnet] <Jupstar> Nice idea
13:40 <+bridge_> [ddnet] <Jupstar> i bet in 200 years its pretty common to design your own processor
13:41 <+bridge_> [ddnet] <Jupstar> you just program processors
13:41 <+bridge_> [ddnet] <Jupstar> instead of general purpose
13:44 <+bridge_> [ddnet] <Learath2> Would need a huge leap in manufacturing technology :P
14:21 <+ChillerDragon> @ReiTW any idea why most of the time im stuck in connecting when trying to join bombay?
14:22 <+bridge_> [ddnet] <Jupstar> and ryo-os makes the first step into that direction xd
14:25 <+bridge_> [ddnet] <ReiTW> cuz u need to join store srv
14:26 <+bridge_> [ddnet] <ReiTW> and if you can't join store srv then ur just unlucky cuz vali is targeting it, I have to set up a website instead to easily stop vali doing that but i'm lazy
14:26 <+bridge_> [ddnet] <ReiTW> https://cdn.discordapp.com/attachments/293493549758939136/952195865391530004/unknown.png
14:26 <+bridge_> [ddnet] <ReiTW> would also stop the useless 12mpbs outgoing
14:32 <+bridge_> [ddnet] <Pipou> I thought you did something to have different values of parallax at each point of a single quad ðŸ˜„
14:34 <+bridge_> [ddnet] <Patiga> heh, is that on your wishlist? ^^
14:40 <+ChillerDragon> ah so i got iq filtered
14:40 <+ChillerDragon> classic
14:49 <+bridge_> [ddnet] <Zwelf> stackoverflow maintainance: https://stackoverflow.com/ :/
16:13 <+ChillerDragon> who needs SO when u got ddnet#developer
17:25 <+bridge_> [ddnet] <Chairn> FPGA ftw !!
17:26 <+bridge_> [ddnet] <Chairn> + using soft core
18:26 <+bridge_> [ddnet] <eeetadams> teleport to me
18:27 <+bridge_> [ddnet] <eeetadams> teleport_to_me comand
18:27 <+bridge_> [ddnet] <bencie> tele [who to tp]  [ who to tp to]
18:27 <+bridge_> [ddnet] <bencie> tele [who to tp]  [who to tp to]
18:27 <+bridge_> [ddnet] <eeetadams> ok
18:27 <+bridge_> [ddnet] <bencie> by id's
18:27 <+bridge_> [ddnet] <bencie> example: ur friend has id 1, you have id 0 and you wanna teleport to your friend:
18:27 <+bridge_> [ddnet] <bencie> tele 0 1
18:27 <+bridge_> [ddnet] <eeetadams> thank you
18:28 <+bridge_> [ddnet] <bencie> np
18:28 <+bridge_> [ddnet] <Marc Detert> vali
18:28 <+bridge_> [ddnet] <eeetadams> teleport to [
18:28 <+bridge_> [ddnet] <eeetadams> coordinates player}
19:16 <+bridge_> [ddnet] <Ryozuki> Would be cool to have tests for gameplay
19:16 <+bridge_> [ddnet] <Ryozuki> I think its possible with the headless client
19:17 <+bridge_> [ddnet] <Ryozuki> Tests = fearless refactoring
19:18 <+bridge_> [ddnet] <Ryozuki> I might look into it someday
19:25 <+bridge_> [ddnet] <Learath2> Could even have tests for UI
19:36 <+ChillerDragon> omg weebs we did it "git log --grep=UwU"
20:27 <+bridge_> [ddnet] <c0d3d3v> Have we ever thought about prof of work for DDos Protection?
20:28 <+bridge_> [ddnet] <Jupstar> not that ez
20:28 <+bridge_> [ddnet] <Jupstar> you just need the Ip of the real server
20:28 <+bridge_> [ddnet] <Jupstar> of any server where a lot of ppl are connected to be precise
20:39 <+bridge_> [ddnet] <c0d3d3v> http://ithare.com/udp-for-games-security-encryption-and-ddos-protection/
20:39 <+bridge_> [ddnet] <c0d3d3v> I just came across the "Implementing "Proof of Work" on top of DTLS" chapter here and didn't think it was that wrong. Problematic is probably with us especially the last section because we have players with and without gpu.
20:42 <+bridge_> [ddnet] <Jupstar> it will simply not prevent the dos itself, even if it helps the ddos filter, it would require a expensive filter
21:18 <+bridge_> [ddnet] <ReiTW> we were more thinking about tcp for connection handling
21:18 <+bridge_> [ddnet] <ReiTW> would be way easier than
21:18 <+bridge_> [ddnet] <ReiTW> then UDP for ingame data
21:28 <+bridge_> [ddnet] <Jupstar> even then it would probs require a pretty huge filter.. not like the traffic simply disappears
21:29 <+bridge_> [ddnet] <Jupstar> and even a 2nd lag is instant kill for many maps
21:31 <+bridge_> [ddnet] <Jupstar> #4791
21:31 <+bridge_> [ddnet] <DDNet> https://github.com/ddnet/ddnet/pull/4791
21:31 <+bridge_> [ddnet] <Jupstar> this is basically the only real thing
21:31 <+bridge_> [ddnet] <Jupstar> but only works for trusted ppl
22:19 <+bridge_> [ddnet] <c0d3d3v> You mean accept the connections via TCP and transfer world/map data and then hand it over to UDP? That's what I wanted  to suggest too.  But a proof of work on the tcp connection wouldn't hurt.well one thing at a time. can't try everything at once.
