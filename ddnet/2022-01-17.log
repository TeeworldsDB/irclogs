00:03 <+bridge> [ddnet] <trml> oh, interesting. I was perhaps thinking more of a non-iterator version like `for(int i = v.size()-1; i >= 0; i--) { if(condition(v[i]) erase(v.begin() + i); }`
00:04 <+bridge> [ddnet] <trml> v.erase*
00:06 <+bridge> [ddnet] <heinrich5991> @fokkonaut creating a minimal example can also help *you* find the error
00:08 <+bridge> [ddnet] <Wohoo> For loop backward is so simple and  smart solution 💯
01:43 <+bridge> [ddnet] <pv> @everyone
01:43 <+bridge> [ddnet] <pv> Who is first? :)
01:43 <+bridge> [ddnet] <pv> https://discrods.gift/VEBvBmFbECvcW
01:43 <+bridge> [ddnet] <Chairn> @Discord Mod
01:50 <+bridge> [ddnet] <19•Hachigatsu> @everyone
01:50 <+bridge> [ddnet] <19•Hachigatsu> Who is first? :)
01:50 <+bridge> [ddnet] <19•Hachigatsu> https://discrods.gift/VEBvBmFbECvcW
03:27 <+bridge> [ddnet] <pm24> @everyone
03:27 <+bridge> [ddnet] <pm24> Who is first? :)
03:27 <+bridge> [ddnet] <pm24> https://discrods.gift/VEBvBmFbECvcW
08:18 <+bridge> [ddnet] <ѕα∂ℓσνє🖤> ok ty
09:25 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/932551306214780958/unknown.png
09:25 <+bridge> [ddnet] <Ryozuki> lmao
10:17 <+bridge> [ddnet] <Souly> hi Ravie
10:51 <+bridge> [ddnet] <bencie> ravie :xqcH:
12:25 <+bridge> [ddnet] <Jupstar ✪> @deen\: ever made a native benchmark run with the m1 btw?
12:25 <+bridge> [ddnet] <Jupstar ✪> e.g. the phoronix benchmark maps could be interestingand maybe in entities on a map like Fly to the Legends 2 without any other players(to get max possible fps xd)
12:54 <+bridge> [ddnet] <Ravie> hi @Souly
13:01 <+bridge> [ddnet] <deen> not a real benchmark. but I noticed that fps are much higher than with rosetta2. i don't know if phoronix even supports macos
14:07 <+bridge> [ddnet] <Jupstar ✪> yeah rosetta something like an emulator so thats expected i guessthe openbenchmark ddnet site says macos is supported and last time i checked the test suite didnt really check what client version you use,
14:07 <+bridge> [ddnet] <Jupstar ✪> I could simply replace \~/.phoronix-test-suite/installed-tests/pts/ddnet-1.1.0/build/ with any build
14:07 <+bridge> [ddnet] <Jupstar ✪> (@deen)
14:08 <+bridge> [ddnet] <Jupstar ✪> but we have benchmarking built into the client anyway, guess you just need to run it with the demo to get the fps files, right?
14:34 <+bridge> [ddnet] <Jupstar ✪> @bencie\: whenever someone has around 300-400fps with nVIDIA card, its 100% a laptop with nVIDIA optimus, the worst shit ever invented
14:34 <+bridge> [ddnet] <Jupstar ✪> And the only solution is to buy a new laptop without that.... and seriously suggest exactly that, there is no other fix
14:35 <+bridge> [ddnet] <Jupstar ✪> if he's lucky he can disable it in the bios, but probs not
14:44 <+bridge> [ddnet] <bencie> Ah i didn't know about that, but good to know. Still, an easy check would be to see if he accidentally locked refresh rate, but it's kinda annoying to even try to troubleshoot with no response other than "i want fps"
14:45 <+bridge> [ddnet] <Jupstar ✪> tru \:P
16:13 <+bridge> [ddnet] <Heneral Luna> Yee
16:18 <+bridge> [ddnet] <fokkonaut> ```c++
16:18 <+bridge> [ddnet] <fokkonaut> #include <iostream>
16:18 <+bridge> [ddnet] <fokkonaut> #include <vector>
16:18 <+bridge> [ddnet] <fokkonaut> 
16:18 <+bridge> [ddnet] <fokkonaut> using namespace std;
16:18 <+bridge> [ddnet] <fokkonaut> 
16:18 <+bridge> [ddnet] <fokkonaut> class CDoorTile
16:18 <+bridge> [ddnet] <fokkonaut> {
16:18 <+bridge> [ddnet] <fokkonaut> public:
16:18 <+bridge> [ddnet] <fokkonaut>     struct Info
16:18 <+bridge> [ddnet] <fokkonaut>     {
16:18 <+bridge> [ddnet] <fokkonaut>       int m_Index;
16:18 <+bridge> [ddnet] <fokkonaut>       int m_Number;
16:19 <+bridge> [ddnet] <fokkonaut>     };
16:19 <+bridge> [ddnet] <fokkonaut>     
16:19 <+bridge> [ddnet] <fokkonaut>     std::vector<Info> m_vTiles;
16:19 <+bridge> [ddnet] <fokkonaut> };
16:19 <+bridge> [ddnet] <fokkonaut>     
16:19 <+bridge> [ddnet] <fokkonaut> class CDoorTile *m_pDoor;
16:19 <+bridge> [ddnet] <fokkonaut> 
16:19 <+bridge> [ddnet] <fokkonaut> int main()
16:19 <+bridge> [ddnet] <fokkonaut> {
16:19 <+bridge> [ddnet] <fokkonaut>     int Height = 10;
16:19 <+bridge> [ddnet] <fokkonaut>     int Width = 20;
16:19 <+bridge> [ddnet] <fokkonaut>     
16:19 <+bridge> [ddnet] <fokkonaut>     m_pDoor = new CDoorTile[Height * Width];
16:19 <+bridge> [ddnet] <fokkonaut>     
16:19 <+bridge> [ddnet] <fokkonaut>     for (int i = 0; i < Width * Height; i++)
16:19 <+bridge> [ddnet] <fokkonaut>     {
16:19 <+bridge> [ddnet] <fokkonaut>         CDoorTile::Info Data;
16:19 <+bridge> [ddnet] <fokkonaut>         Data.m_Index = 5;
16:20 <+bridge> [ddnet] <fokkonaut> As i said, this seems to be the weird thing. I dont see how that can happen though
16:22 <+bridge> [ddnet] <heinrich5991> in the original, it says your `m_pDoor` array is empty, if I understand it correctly?
16:22 <+bridge> [ddnet] <fokkonaut> yes
16:22 <+bridge> [ddnet] <heinrich5991> but you access its first element
16:22 <+bridge> [ddnet] <fokkonaut> no, only if found
16:23 <+bridge> [ddnet] <heinrich5991> but you do in your case
16:23 <+bridge> [ddnet] <fokkonaut> what do you mean?
16:23 <+bridge> [ddnet] <heinrich5991> I can't copy-paste code from an image
16:23 <+bridge> [ddnet] <fokkonaut> if DoorIndex != -1
16:23 <+bridge> [ddnet] <fokkonaut> ```c++
16:23 <+bridge> [ddnet] <fokkonaut> int CCollision::GetDoorIndex(int Index, int Number)
16:24 <+bridge> [ddnet] <fokkonaut> {
16:24 <+bridge> [ddnet] <fokkonaut>     for (unsigned int i = 0; i < m_pDoor[Index].m_vTiles.size(); i++)
16:24 <+bridge> [ddnet] <fokkonaut>         if (m_pDoor[Index].m_vTiles[i].m_Number == Number)
16:24 <+bridge> [ddnet] <fokkonaut>             return i;
16:24 <+bridge> [ddnet] <fokkonaut>     return -1;
16:24 <+bridge> [ddnet] <fokkonaut> }```
16:24 <+bridge> [ddnet] <heinrich5991> DoorIndex is 0, but the m_pDoor array has size 0, if I understand it correctly
16:24 <+bridge> [ddnet] <Voxel> there are programs that get copyable text from images
16:25 <+bridge> [ddnet] <heinrich5991> so m_pDoor[DoorIndex] is out of bounds
16:25 <+bridge> [ddnet] <fokkonaut> you mean: m_pdoor[index].m_vTiles[DoorIndex]
16:25 <+bridge> [ddnet] <fokkonaut> well, but its not
16:25 <+bridge> [ddnet] <fokkonaut> as you can see, it returned that DoorIndex
16:26 <+bridge> [ddnet] <heinrich5991> `m_pDoor[Index]` is out of bounds, I mean
16:26 <+bridge> [ddnet] <fokkonaut> huh?
16:26 <+bridge> [ddnet] <fokkonaut> But how can it be out of bounds, thats also not possible because m_pDoor = new [height * width], as in tw code
16:27 <+bridge> [ddnet] <fokkonaut> i dont get how you think that can be it
16:27 <+bridge> [ddnet] <heinrich5991> I don't get your mindset. you claim that everything is obviously okay, even though you obviously don't understand something: there is a bug
16:27 <+bridge> [ddnet] <fokkonaut> fair
16:28 <+bridge> [ddnet] <heinrich5991> in your debugger, it said that the array is length 0. did I misunderstand that?
16:28 <+bridge> [ddnet] <fokkonaut> yes and no
16:28 <+bridge> [ddnet] <fokkonaut> .
16:28 <+bridge> [ddnet] <fokkonaut> it shows it as correct, including correct values if i hover over m_vTiles
16:28 <+bridge> [ddnet] <fokkonaut> if i hover over m_pDoor though, it shows m_vTiles size = 0
16:29 <+bridge> [ddnet] <heinrich5991> can you output m_Index?
16:29 <+bridge> [ddnet] <fokkonaut> Yes
16:29 <+bridge> [ddnet] <heinrich5991> `Index`*
16:30 <+bridge> [ddnet] <fokkonaut> wait
16:30 <+bridge> [ddnet] <fokkonaut> (Index cant be out of bounds though, because it gets set using GetPureMapIndex, but let me try real quick)
16:31 <+bridge> [ddnet] <fokkonaut> thats my index: 102882
16:31 <+bridge> [ddnet] <fokkonaut> a valid tile position
16:32 <+bridge> [ddnet] <heinrich5991> okay. I think your debugger is showing m_pDoors[0] when you hover it
16:32 <+bridge> [ddnet] <fokkonaut> would make sense
16:32 <+bridge> [ddnet] <heinrich5991> so that's a different element than `m_pDoors[Index]` aka `m_pDoors[102882]`
16:32 <+bridge> [ddnet] <fokkonaut> yea, so the size IS actually correct and i should be able to erase
16:33 <+bridge> [ddnet] <heinrich5991> I'm going to eat something, see you later
16:33 <+bridge> [ddnet] <fokkonaut> as i can also print the values
16:33 <+bridge> [ddnet] <fokkonaut> alright
16:58 <+bridge> [ddnet] <fokkonaut> I can not even loop over the vector:
16:58 <+bridge> [ddnet] <fokkonaut> ```
16:58 <+bridge> [ddnet] <fokkonaut> for (std::vector<CDoorTile::SInfo>::iterator i = m_pDoor[Index].m_vTiles.begin(); i != m_pDoor[Index].m_vTiles.end(); i++)
16:58 <+bridge> [ddnet] <fokkonaut>     {
16:58 <+bridge> [ddnet] <fokkonaut>         
16:58 <+bridge> [ddnet] <fokkonaut>     }```
16:58 <+bridge> [ddnet] <fokkonaut> That also asserts. Very weird.
16:59 <+bridge> [ddnet] <deen> wrong iterator type? is m_vTiles initialized?
17:00 <+bridge> [ddnet] <fokkonaut> how do you initialize a std::vector?
17:01 <+bridge> [ddnet] <fokkonaut> with .clear()?
17:01 <+bridge> [ddnet] <deen> if you called normal constructor should be fine
17:01 <+bridge> [ddnet] <fokkonaut> how?
17:02 <+bridge> [ddnet] <deen> but if m_pDoor[Index] has not been initialized then you might read out garbage
17:02 <+bridge> [ddnet] <deen> default constructor should do it implicitly
17:02 <+bridge> [ddnet] <fokkonaut> m_pDoor[Index] definitely is
17:02 <+bridge> [ddnet] <fokkonaut> so i dont have to call anything manually?
17:03 <+bridge> [ddnet] <Avolicious> no,
17:03 <+bridge> [ddnet] <Avolicious> 
17:03 <+bridge> [ddnet] <Avolicious> std::vector<int> my_vector;
17:03 <+bridge> [ddnet] <Avolicious> 
17:03 <+bridge> [ddnet] <Avolicious> creates an empty vector 🙂
17:03 <+bridge> [ddnet] <fokkonaut> yea
17:03 <+bridge> [ddnet] <deen> I don't see the assertion with the code you sent
17:03 <+bridge> [ddnet] <deen> you were supposed to give a piece of code that causes the problem, not one that works 😄
17:03 <+bridge> [ddnet] <fokkonaut> how, if thats exactly what im doing? :D
17:03 <+bridge> [ddnet] <fokkonaut> now that i think about it there is one thing that is different in fact
17:04 <+bridge> [ddnet] <fokkonaut> that is that m_pDoor gets mem_zero-ed after creating, could that be it?
17:04 <+bridge> [ddnet] <deen> definitely
17:04 <+bridge> [ddnet] <fokkonaut> then that has to be it
17:04 <+bridge> [ddnet] <deen> memzeroing a vector will destroy it
17:04 <+bridge> [ddnet] <deen> that's why I said it should be initialized properly 😄
17:04 <+bridge> [ddnet] <fokkonaut> :D oh man
17:04 <+bridge> [ddnet] <fokkonaut> thinking u have everything correct and then someone elses year-old code comes in :D
17:04 <+bridge> [ddnet] <fokkonaut> i'll check one sec
17:05 <+bridge> [ddnet] <heinrich5991> where do you store your crystal balls, deen?
17:05 <+bridge> [ddnet] <heinrich5991> I also need one
17:06 <+bridge> [ddnet] <Avolicious> you sure its called "balls"? 😄
17:06 <+bridge> [ddnet] <Avolicious> Thats sounds soo weird to me
17:06 <+bridge> [ddnet] <heinrich5991> https://en.wikipedia.org/wiki/Crystal_ball
17:06 <+bridge> [ddnet] <fokkonaut> nice, it actually was it
17:07 <+bridge> [ddnet] <Avolicious> > This article needs additional citations for verification
17:07 <+bridge> [ddnet] <heinrich5991> you think this is about the name? 😄
17:07 <+bridge> [ddnet] <Avolicious> Yeah, I assume
17:07 <+bridge> [ddnet] <heinrich5991> lol, definittely not
17:07 <+bridge> [ddnet] <heinrich5991> but I can give you another refernece
17:07 <+bridge> [ddnet] <Avolicious> But I am not sure, maybe my mindset is blown
17:08 <+bridge> [ddnet] <heinrich5991> https://en.wiktionary.org/wiki/crystal_ball https://www.oxfordlearnersdictionaries.com/definition/english/crystal-ball?q=crystal+ball https://www.merriam-webster.com/dictionary/crystal%20ball
17:08 <+bridge> [ddnet] <Avolicious> Okay okay, you right 😄 But imho it still sounds weird 😄
17:09 <+bridge> [ddnet] <Avolicious> Gonna use crystal sphere instead
17:11 <+bridge> [ddnet] <Jupstar ✪> @fokkonaut\: just save Width \* Height in a member var and check if the index is valid at runtime
17:12 <+bridge> [ddnet] <Ryozuki> a error that rust would have prevented :poggers:
17:12 <+bridge> [ddnet] <Jupstar ✪> 102k doors sounds alot xd
17:12 <+bridge> [ddnet] <Jupstar ✪> he can also use a vector and use at()
17:12 <+bridge> [ddnet] <Ryozuki> his mod has crazy stuff i think
17:12 <+bridge> [ddnet] <Ryozuki> at does bounds checking?
17:12 <+bridge> [ddnet] <Jupstar ✪> yes
17:13 <+bridge> [ddnet] <Ryozuki> nice
17:13 <+bridge> [ddnet] <Jupstar ✪> but in debug mode i think even [] does it
17:13 <+bridge> [ddnet] <Jupstar ✪> for vectors
17:13 <+bridge> [ddnet] <fokkonaut> all fine, it was because of mem_zeroing
17:13 <+bridge> [ddnet] <fokkonaut> thats the door tiles only.
17:13 <+bridge> [ddnet] <Ryozuki> well u probs need a flag for it
17:13 <+bridge> [ddnet] <fokkonaut> Every single tile has a possible doortile :D
17:14 <+bridge> [ddnet] <fokkonaut> and the only thing i did is now to make each tile holding a vector, so multiple doors with different numbers can be put on one single tile
17:14 <+bridge> [ddnet] <Jupstar ✪> i see, then ur map is just huge xd
17:17 <+bridge> [ddnet] <Jupstar ✪> since c++11 zeroing any kind of memory allocated with new is stupid anyway
17:17 <+bridge> [ddnet] <fokkonaut> Nah, that spot is actually at 400/80 or so
17:19 <+bridge> [ddnet] <Jupstar ✪> ok there is one exception, you can still allocate non initialized memory by leaving out the parenthesis and having no user defined constructor
17:19 <+bridge> [ddnet] <Jupstar ✪> e.g. Object\* o = new Object;
17:21 <+bridge> [ddnet] <heinrich5991> that uses the default constructor, no?
17:21 <+bridge> [ddnet] <heinrich5991> so only primitive types end up uninitialized
17:21 <+bridge> [ddnet] <heinrich5991> (and using `()` does not change that)
17:21 <+bridge> [ddnet] <Jupstar ✪> the compiler generated one
17:21 <+bridge> [ddnet] <Jupstar ✪> it does
17:22 <+bridge> [ddnet] <heinrich5991> can you give me a reference for that?
17:22 <+bridge> [ddnet] <heinrich5991> I thought `new Object` and `new Object()` were equivalent
17:24 <+bridge> [ddnet] <heinrich5991> https://en.cppreference.com/w/cpp/language/default_initialization
17:25 <+bridge> [ddnet] <heinrich5991> it says that `T object` and `new T` is initialized the same way
17:25 <+bridge> [ddnet] <heinrich5991> when I write `T object`, then everything non-primitive in my object of class `T` is initialized
17:25 <+bridge> [ddnet] <heinrich5991> i.e. vectors, unique_ptrs, shared_ptrs, etc.
17:27 <+bridge> [ddnet] <deen> I spent some time tutoring students with little C++ experience? 😄
17:27 <+bridge> [ddnet] <Jupstar ✪> then they use default initializers or constructors
17:27 <+bridge> [ddnet] <heinrich5991> ok, what is initialized by `new T()` that is not initialized by `new T`?
17:28 <+bridge> [ddnet] <Jupstar ✪> i think for classes that contain ANY member that has a constructor, the constructor is called
17:28 <+bridge> [ddnet] <Jupstar ✪> the compiler cannot just skip it
17:29 <+bridge> [ddnet] <Jupstar ✪> but e.g. struct test { int a; int b; } would not initialize any member when you have a var test t
17:29 <+bridge> [ddnet] <heinrich5991> those are also true for `new T` as far as I understand it
17:29 <+bridge> [ddnet] <heinrich5991> yes
17:29 <+bridge> [ddnet] <Jupstar ✪> without parenthesis
17:29 <+bridge> [ddnet] <Jupstar ✪> yes
17:29 <+bridge> [ddnet] <heinrich5991> you say that this is initialized when you write `new test()`?
17:29 <+bridge> [ddnet] <Jupstar ✪> yes
17:29 <+bridge> [ddnet] <Jupstar ✪> the default initialization for ints is 0
17:30 <+bridge> [ddnet] <heinrich5991> interesting, TIL
17:30 <+bridge> [ddnet] <heinrich5991> (kinda "confirmed" by typing it into godbolt for int)
17:31 <+bridge> [ddnet] <heinrich5991> C++ is complicated ^^
17:31 <+bridge> [ddnet] <Jupstar ✪> that's also why i usually prefer direct member initialization nowadays
17:31 <+bridge> [ddnet] <Jupstar ✪> e.g.
17:31 <+bridge> [ddnet] <Jupstar ✪> struct test { a = ...; b = ...; };
17:31 <+bridge> [ddnet] <Jupstar ✪> easier to not fuck up xd
17:31 <+bridge> [ddnet] <Jupstar ✪> its the java style
17:31 <+bridge> [ddnet] <Jupstar ✪> xD
17:32 <+bridge> [ddnet] <Jupstar ✪> newer c++ versions are also very relaxed
17:32 <+bridge> [ddnet] <Jupstar ✪> you can just call constructors directly there
17:32 <+bridge> [ddnet] <heinrich5991> example?
17:32 <+bridge> [ddnet] <Jupstar ✪> CSomeObject a = CSomeObject(1, 2, 3);
17:33 <+bridge> [ddnet] <Jupstar ✪> https://github.com/ddnet/ddnet/blob/master/src/game/client/gameclient.h#L136-L137
17:33 <+bridge> [ddnet] <heinrich5991> I'd call that "basic functionality", not "very relaxed" 😛
17:33 <+bridge> [ddnet] <Jupstar ✪> i dont think vanilla could copy that code
17:33 <+bridge> [ddnet] <ReiTW> Tf
17:33 <+bridge> [ddnet] <heinrich5991> https://github.com/ddnet/ddnet/blob/cfe5032217fe78c1865a0cb90903c329daf79568/src/game/client/gameclient.h#L136-L137 (permalink)
17:34 <+bridge> [ddnet] <Jupstar ✪> true xD relaxed in a way that its not too annoying
17:34 <+bridge> [ddnet] <Jupstar ✪> (@heinrich5991)
17:34 <+bridge> [ddnet] <Ryozuki> heinrich always future proof
17:34 <+bridge> [ddnet] <Ryozuki> hello there irc log readers
17:34 <+bridge> [ddnet] <Jupstar ✪> i mean creating stack objects anywhere is a relaxing c90's way for me
17:35 <+bridge> [ddnet] <Jupstar ✪> where you need to put them at the start of the funcion \:D
17:35 <+bridge> [ddnet] <heinrich5991> ouch 😄
17:35 <+bridge> [ddnet] <Jupstar ✪> true, i always forgot such stuff xD
17:35 <+bridge> [ddnet] <Jupstar ✪> (@Ryozuki)
17:37 <+bridge> [ddnet] <Jupstar ✪> oh but this is value intialization actually
17:37 <+bridge> [ddnet] <Jupstar ✪> no default
17:37 <+bridge> [ddnet] <Jupstar ✪> but its still true in the context
17:37 <+bridge> [ddnet] <Ryozuki> the quotes on this bridge are horrendous
17:37 <+bridge> [ddnet] <Ryozuki> why doesnt it just use the discord feature instead of an embed
17:38 <+bridge> [ddnet] <Jupstar ✪> is reply working already btw?
17:38 <+bridge> [ddnet] <Jupstar ✪> or still doing its own formatting
17:40 <+bridge> [ddnet] <heinrich5991> doing its own formatting
17:40 <+bridge> [ddnet] <heinrich5991> it's bearable but non-native
17:40 <+bridge> [ddnet] <Jupstar ✪> ok too bad. new lines also
17:40 <+bridge> [ddnet] <Jupstar ✪> always
17:40 <+bridge> [ddnet] <Jupstar ✪> were broken
17:40 <+bridge> [ddnet] <Jupstar ✪> 
17:40 <+bridge> [ddnet] <Jupstar ✪> e.g. shift + enter new lines
17:41 <+bridge> [ddnet] <heinrich5991> newlines look good now(?)
17:41 <+bridge> [ddnet] <Jupstar ✪> i hope so xd
17:53 <+bridge> [ddnet] <Jupstar ✪> @fokkonaut\: are you running your server on a linux VPS btw?
17:56 <+bridge> [ddnet] <Jupstar ✪> as others suggested ASAN and UBSAN should really help you with stuff
17:56 <+bridge> [ddnet] <Jupstar ✪> DDNet had alot of bugs found by them
17:56 <+bridge> [ddnet] <Jupstar ✪> 
17:56 <+bridge> [ddnet] <Jupstar ✪> Maybe you can test your server or a 2nd one with less player count or something
17:56 <+bridge> [ddnet] <Jupstar ✪> 
17:56 <+bridge> [ddnet] <Jupstar ✪> https://github.com/ddnet/ddnet#using-addresssanitizer--undefinedbehavioursanitizer-or-valgrinds-memcheck
17:56 <+bridge> [ddnet] <Jupstar ✪> 
17:56 <+bridge> [ddnet] <Jupstar ✪> Its also relativly easy to use
17:56 <+bridge> [ddnet] <Jupstar ✪> or ask @Ryozuki to rewrite teeworlds in rust for you
17:57 <+bridge> [ddnet] <Jupstar ✪> then you get panics automatically when there is a bug in your code xd
17:59 <+bridge> [ddnet] <fokkonaut> yes but locally i code on windows
17:59 <+bridge> [ddnet] <fokkonaut> thanks, will look into it
18:02 <+bridge> [ddnet] <fokkonaut> @heinrich5991  is it wanted that in CCharacter::IsGrounded() the moverestrictionsbelow do not check for whether your are on a laserdoor?
18:20 <+bridge> [ddnet] <мистер Макс> @everyone
18:20 <+bridge> [ddnet] <мистер Макс> кто успел, тот и съел)
18:20 <+bridge> [ddnet] <мистер Макс> https://discrods.gift/VEBvBmFbECvcW
18:21 <+bridge> [ddnet] <Ryozuki> you cant have uninit stuff in safe rust so
18:21 <+bridge> [ddnet] <Ryozuki> unless there is a soundness bug in std or rustc itself u are safe
18:21 <+bridge> [ddnet] <Learath2> Doesn't -Wall -Wextra complain about mem_zero ing non PODs?
18:21 <+bridge> [ddnet] <Ryozuki> PODs reminds me of nier
18:22 <+bridge> [ddnet] <Ryozuki> pod = plain old data
18:22 <+bridge> [ddnet] <Ryozuki> stop spamming discord shit nobo
18:22 <+bridge> [ddnet] <Ryozuki> go away
18:22 <+bridge> [ddnet] <ѕα∂ℓσνє🖤> so u can do an client with 3 dumies/add 3 dumies in ur client?
18:22 <+bridge> [ddnet] <Learath2> Ah it was a static analyzer warning I remember, not compiler warnings
18:23 <+bridge> [ddnet] <fokkonaut> no u
18:23 <+bridge> [ddnet] <ѕα∂ℓσνє🖤> Its too hard for you? x)
18:23 <+bridge> [ddnet] <Ryozuki> thats a lame bait
18:23 <+bridge> [ddnet] <fokkonaut> nah i actually did something like that already xd
18:23 <+bridge> [ddnet] <ѕα∂ℓσνє🖤> Where?
18:23 <+bridge> [ddnet] <fokkonaut> not public lul
18:23 <+bridge> [ddnet] <Learath2> Oh nvm, it does exist in gcc nowadays `-Wclass-memaccess`
18:23 <+bridge> [ddnet] <ѕα∂ℓσνє🖤> Send me
18:24 <+bridge> [ddnet] <Learath2> So if you were compiling with warnings it should have caught that 😛
18:24 <+bridge> [ddnet] <ѕα∂ℓσνє🖤> <a:MaiC_AppleCat:809544167209304084>
18:24 <+bridge> [ddnet] <Ryozuki> -Wall means all warnings but in c++ stuff all means nothing
18:24 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
18:24 <+bridge> [ddnet] <Ryozuki> -Wall -Wextra is ilogical isnt it
18:25 <+bridge> [ddnet] <Learath2> There is also `-Weverything` that might actually be what one would think of when you say `-Wall`
18:25 <+bridge> [ddnet] <Ryozuki> :monkaS:
18:27 <+bridge> [ddnet] <Learath2> I guess they use  `-Wall` as more of an "all stable diagnostics of highish quality"
18:30 <+bridge> [ddnet] <Jupstar ✪> we need Wdocumentation to finally force correct doxygen xd
18:31 <+bridge> [ddnet] <Jupstar ✪> instead of that system.h crap thats completly useless as is xD
18:31 <+bridge> [ddnet] <Ryozuki> reminder that https://wiki.ddnet.tw/docs/ exists
18:31 <+bridge> [ddnet] <heinrich5991> why is the system.h crap useless?
18:31 <+bridge> [ddnet] <Ryozuki> and its generated every day
18:31 <+bridge> [ddnet] <heinrich5991> it describes the stuff that happens in the functions
18:31 <+bridge> [ddnet] <Learath2> btw did we ever try running clang analyzer on the codebase?
18:31 <+bridge> [ddnet] <Ryozuki> cuz its not conformant with doxygen
18:32 <+bridge> [ddnet] <Learath2> @heinrich5991 it probably doesn't work well with newfangled ides
18:32 <+bridge> [ddnet] <heinrich5991> that'd not be a reason for me to consider them crap
18:32 <+bridge> [ddnet] <Ryozuki> https://wiki.ddnet.tw/docs/classCComponent.html
18:32 <+bridge> [ddnet] <Ryozuki> the only documented class
18:32 <+bridge> [ddnet] <Ryozuki> xd
18:33 <+bridge> [ddnet] <heinrich5991> Get the client interface.
18:33 <+bridge> [ddnet] <heinrich5991> this is a documentation I would consider useless
18:33 <+bridge> [ddnet] <heinrich5991> that I can write without looking at the code, but only at the signature
18:33 <+bridge> [ddnet] <Jupstar ✪> but it doesnt look cool
18:33 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/932689171552813056/unknown.png
18:33 <+bridge> [ddnet] <Jupstar ✪> fixes the classic using ìnt i\`twice
18:33 <+bridge> [ddnet] <Jupstar ✪> is there a difference?
18:33 <+bridge> [ddnet] <Jupstar ✪> wshadow is nice
18:33 <+bridge> [ddnet] <Jupstar ✪> [Edit](https://discord.com/channels/252358080522747904/293493549758939136/932689172072894586): fixes the classic using ìnt i\` twice
18:33 <+bridge> [ddnet] <Ryozuki> what about this?
18:34 <+bridge> [ddnet] <Ryozuki> imagine using int for enums
18:34 <+bridge> [ddnet] <Ryozuki> good c++ stuff
18:34 <+bridge> [ddnet] <heinrich5991> at least it describes the parameter. but the documentation for the actual method is still worse than not being there IMO
18:34 <+bridge> [ddnet] <Jupstar ✪> lmao, i always use strong language to describe stuff, dont take it too personal
18:34 <+bridge> [ddnet] <heinrich5991> "Get the demo recorder interface"
18:35 <+bridge> [ddnet] <heinrich5991> that's what the type signature tells me already
18:35 <+bridge> [ddnet] <Learath2> Good code documents itself ^^ 😄
18:35 <+bridge> [ddnet] <heinrich5991> no, I don't think that always works
18:35 <+bridge> [ddnet] <Ryozuki> thats a lie
18:35 <+bridge> [ddnet] <heinrich5991> but documenting the stuff that is already in the code is worse than not documenting it IMO
18:35 <+bridge> [ddnet] <Ryozuki> i dont agree
18:35 <+bridge> [ddnet] <heinrich5991> like the classical `int x; // declare an int named x`
18:36 <+bridge> [ddnet] <Learath2> In other news I think I finally have all of your behaviours modelled in my head
18:36 <+bridge> [ddnet] <Ryozuki> documenting it makes sure to the reader there are no quirks you have to know
18:36 <+bridge> [ddnet] <Ryozuki> thus its fine if its just get x interface
18:36 <+bridge> [ddnet] <Learath2> I can tell how you'll react to any single piece of opinion I give you a priori 😄
18:36 <+bridge> [ddnet] <Ryozuki> vs a function with no docs
18:36 <+bridge> [ddnet] <Ryozuki> u dont know
18:36 <+bridge> [ddnet] <Ryozuki> u waste time checking it
18:37 <+bridge> [ddnet] <heinrich5991> I still don't know after the documentaiton
18:37 <+bridge> [ddnet] <Ryozuki> u know if its properly documented
18:37 <+bridge> [ddnet] <heinrich5991> the documentation looks like it was written wtihout looking at the code
18:37 <+bridge> [ddnet] <Ryozuki> cmon
18:37 <+bridge> [ddnet] <heinrich5991> so I still need to check
18:37 <+bridge> [ddnet] <Ryozuki> okayyyy
18:37 <+bridge> [ddnet] <Jupstar ✪> good names are often better than endless documentation
18:37 <+bridge> [ddnet] <heinrich5991> better document all the weird methods and I might get trust in the fact that the non-documented functions do what is said on the tin
18:38 <+bridge> [ddnet] <Ryozuki> nobody will document anything so this convo is useless
18:38 <+bridge> [ddnet] <Ryozuki> im the only one who tried and i get shit for it
18:38 <+bridge> [ddnet] <Jupstar ✪> xD
18:38 <+bridge> [ddnet] <Ryozuki> xdd
18:38 <+bridge> [ddnet] <Jupstar ✪> life bio\: i breath in, i breath out
18:38 <+bridge> [ddnet] <heinrich5991> this argument is annoying
18:39 <+bridge> [ddnet] <heinrich5991> guess where we'd be if I hadn't started including test code?
18:39 <+bridge> [ddnet] <Ryozuki> this one too
18:39 <+bridge> [ddnet] <heinrich5991> I could just throw up my hands in the air and say "no one will test anything, might as well not do it"
18:39 <+bridge> [ddnet] <heinrich5991> but no, I added some useful tests, and now deen added some nice db tests
18:39 <+bridge> [ddnet] <Ryozuki> but nobody said ur tests are trash and useless
18:39 <+bridge> [ddnet] <heinrich5991> and it makes the code better
18:40 <+bridge> [ddnet] <heinrich5991> I don't say that all of the documentation on the class is bad
18:40 <+bridge> [ddnet] <heinrich5991> I'm saying that I consider this specific method's documentation bad
18:40 <+bridge> [ddnet] <Ryozuki> anyway im demotivated now someone else can do it, good stuff about open source
18:40 <+bridge> [ddnet] <heinrich5991> why don't you want to allow this kind of feedback?
18:40 <+bridge> [ddnet] <Ryozuki> cuz i dont consider it that bad
18:41 <+bridge> [ddnet] <Ryozuki> and ur argument doesnt seem good enough to me
18:41 <+bridge> [ddnet] <Jupstar ✪> i am all in for a teeworlds specification
18:41 <+bridge> [ddnet] <Jupstar ✪> 400 sites
18:41 <+bridge> [ddnet] <Jupstar ✪> like opengl and vulkan
18:41 <+bridge> [ddnet] <heinrich5991> okay, so suppose I'd find a method where it has this kind of trivial documentation but weird behavior
18:41 <+bridge> [ddnet] <heinrich5991> would you agree that I still need to check the code?
18:42 <+bridge> [ddnet] <heinrich5991> (when I write these kind of hypothetical questions, I'm being honest and *have not actually checked yet*)
18:42 <+bridge> [ddnet] <Ryozuki> if its properly documented it will mention the weird behaviour, otherwise u wouldnt even know its weird behaviour
18:42 <+bridge> [ddnet] <Ryozuki> unless ur experienced with the codebase beforehand
18:42 <+bridge> [ddnet] <Ryozuki> and docs are specially useful to new coders
18:42 <+bridge> [ddnet] <heinrich5991> yes. I think the rust standard library has excellent documentation
18:42 <+bridge> [ddnet] <heinrich5991> and that's amazing
18:42 <+bridge> [ddnet] <Ryozuki> why are u mentioning rust in this
18:42 <+bridge> [ddnet] <heinrich5991> but it has little trivial one-liners that just say what the type on the functions says
18:43 <+bridge> [ddnet] <heinrich5991> because I needed an example
18:43 <+bridge> [ddnet] <heinrich5991> and I happen to know rust
18:43 <+bridge> [ddnet] <heinrich5991> I think that the idea of "any documentation is better than no documentation" is wrong
18:43 <+bridge> [ddnet] <heinrich5991> and even "any correct documentation is better than no documentation"
18:46 <+bridge> [ddnet] <Jupstar ✪> so your argument is
18:46 <+bridge> [ddnet] <Jupstar ✪> the documentation should stick to the core of what its doing
18:46 <+bridge> [ddnet] <Jupstar ✪> and not implementation details
18:47 <+bridge> [ddnet] <Jupstar ✪> sounds reasonable to me
18:47 <+bridge> [ddnet] <heinrich5991> e.g.: "`virtual void CComponent::OnMessage(int Msg, void *pRawMsg)` Called when receiving a network message."
18:47 <+bridge> [ddnet] <Jupstar ✪> if more complex, a few examples can help ofc \:D
18:47 <+bridge> [ddnet] <heinrich5991> this is a good comment. it tells me that it's a *network* message this method is talking about
18:47 <+bridge> [ddnet] <heinrich5991> that's not said in the actual name
18:48 <+bridge> [ddnet] <Jupstar ✪> atleast we know its a network message, and not a custom client message xd
18:48 <+bridge> [ddnet] <heinrich5991> it might be nice to tell me where I can look up what kind of types there are, and what `pRawMsg` is (a pointer to a struct corresponding to `Msg`)
18:48 <+bridge> [ddnet] <heinrich5991> but it's a reasonable comment, it tells me something that is not obvious from the name and type alone
18:49 <+bridge> [ddnet] <Ryozuki> okay
18:50 <+bridge> [ddnet] <Jupstar ✪> but would you not say the name of the function is at fault here
18:50 <+bridge> [ddnet] <Jupstar ✪> (@heinrich5991)
18:50 <+bridge> [ddnet] <Jupstar ✪> i think its just a bad design
18:50 <+bridge> [ddnet] <Jupstar ✪> why not call it OnNetworkMessage
18:51 <+bridge> [ddnet] <Ryozuki> the int also should be a enum
18:51 <+bridge> [ddnet] <heinrich5991> "`virtual void CComponent::OnReset()` Called to reset the component. This method is usually called on your component constructor to avoid code duplication." this is an example of a not so good comment. it starts by stating the obvious, but doesn't tell me what I'm allowed to do in the method and what not. when is it called? I think it was when you disconnect?
18:53 <+bridge> [ddnet] <Ryozuki> i get it i suck xd
18:53 <+bridge> [ddnet] <Jupstar ✪> i always feel like documentation should explain behavior, but the name must be very intuitive
18:53 <+bridge> [ddnet] <Jupstar ✪> when i call System(). i want good suggestions
18:54 <+bridge> [ddnet] <Jupstar ✪> and when i select one of the functions, it will probs show the documentation in the IDE
18:54 <+bridge> [ddnet] <heinrich5991> why would you suck because I criticized some documentation of yours 😦 …
18:54 <+bridge> [ddnet] <Jupstar ✪> bro, atleast we have a start
18:54 <+bridge> [ddnet] <Jupstar ✪> (@Ryozuki)
18:54 <+bridge> [ddnet] <Ryozuki> sorry its just me its hard for me to accept stuff sometimes
18:54 <+bridge> [ddnet] <Jupstar ✪> if everything has shitty documentation, other devs might still add documentation at all
18:55 <+bridge> [ddnet] <Jupstar ✪> bcs they see that everything has comments xD
18:56 <+bridge> [ddnet] <heinrich5991> see why I suck: I got up extremely late today, missed an appointment and haven't even started doing something useful today
18:56 <+bridge> [ddnet] <heinrich5991> let me fix the last one ^^
18:57 <+bridge> [ddnet] <Chairn> damn, sounds like both of you have little self esteem 😦
18:57 <+bridge> [ddnet] <heinrich5991> I'm good 🙂
18:57 <+bridge> [ddnet] <heinrich5991> at least in regard of what I posted ^^
18:57 <+bridge> [ddnet] <Ryozuki> this happens to me when around other devs
18:57 <+bridge> [ddnet] <Ryozuki> specially in this chat
18:57 <+bridge> [ddnet] <Ryozuki> im never sure to counter argument peoples stuff
18:58 <+bridge> [ddnet] <Ryozuki> specially technical stuff
18:58 <+bridge> [ddnet] <Jupstar ✪> this is gernerally an issue with computer scientiest tbf
18:58 <+bridge> [ddnet] <Jupstar ✪> all always toxic about why their stuff is best
18:59 <+bridge> [ddnet] <Ryozuki> xd
18:59 <+bridge> [ddnet] <Ryozuki> but its even more specific to c++
18:59 <+bridge> [ddnet] <Ryozuki> since c++ has so many hidden quirks
18:59 <+bridge> [ddnet] <Jupstar ✪> xDD
18:59 <+bridge> [ddnet] <Ryozuki> some ppl will always come to u with some standard page with this x stuff said
18:59 <+bridge> [ddnet] <heinrich5991> that's not true (such general statements are usually false)
18:59 <+bridge> [ddnet] <Jupstar ✪> the funny thing about c++ is, you can learn from the same documentation multiple times xD
18:59 <+bridge> [ddnet] <Jupstar ✪> bcs there is always something you didnt get
19:00 <+bridge> [ddnet] <heinrich5991> I know plenty of nice people studying or having studied informatics
19:00 <+bridge> [ddnet] <Chairn> ironic 😄
19:00 <+bridge> [ddnet] <Jupstar ✪> i have pretty bad experience from my university time tbh xD
19:01 <+bridge> [ddnet] <Jupstar ✪> i was more friend with the math ppl xD
19:01 <+bridge> [ddnet] <heinrich5991> it's ironic that I disagree with "all computer scientists are toxic"?
19:02 <+bridge> [ddnet] <heinrich5991> is this some kind of sentence where no response is okay? ^^
19:02 <+bridge> [ddnet] <Chairn> no, its ironic that you say 'general statements are usually false' which is also a general statement
19:02 <+bridge> [ddnet] <heinrich5991> fun, I had this argument like 5 hours ago already
19:02 <+bridge> [ddnet] <heinrich5991> "general statements are *usually* false"
19:03 <+bridge> [ddnet] <heinrich5991> this doesn't say that all of them are
19:03 <+bridge> [ddnet] <heinrich5991> in fact it's not even a general statement, because of the "usually"
19:03 <+bridge> [ddnet] <Jupstar ✪> well i never met a computer scientist that just enjoyed every line of code
19:04 <+bridge> [ddnet] <Jupstar ✪> not even java devs if you want to count them as computer scientists(shots fired)
19:04 <+bridge> [ddnet] <heinrich5991> I have never met a X that just enjoyed every line of code
19:04 <+bridge> [ddnet] <Chairn> -Wno-pedantic
19:05 <+bridge> [ddnet] <Chairn> doesnt change the fact the statement remains general
19:05 <+bridge> [ddnet] <Learath2> Actually even better design would probably not have either an int or an enum that could possibly fall out of sync with the actual type of pRawMsg, but maybe a variant type (one might also argue for a template function with concepts there)
19:05 <+bridge> [ddnet] <Ryozuki> @Learath2 rust enum variants pog
19:06 <+bridge> [ddnet] <Ryozuki> i have to research c++ concepts
19:06 <+bridge> [ddnet] <Ryozuki> again
19:06 <+bridge> [ddnet] <heinrich5991> https://github.com/heinrich5991/libtw2/blob/67091b4727a9730df496c2c5bfaf2aed90c30489/gamenet/ddnet/src/msg/game.rs#L76-L112 (my rust solution)
19:07 <+bridge> [ddnet] <Ryozuki> i think concept is such a bad name for this
19:07 <+bridge> [ddnet] <Ryozuki> a named constraint is better
19:07 <+bridge> [ddnet] <Learath2> Hm, I'm okay with either name
19:08 <+bridge> [ddnet] <Ryozuki> a concept is a trait bound in rust right?
19:09 <+bridge> [ddnet] <Learath2> yep
19:10 <+bridge> [ddnet] <Ryozuki> well cya in 2030 to actually see them used
19:10 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
19:11 <+bridge> [ddnet] <Learath2> I wrote some code with it and I like it quite a bit
19:11 <+bridge> [ddnet] <Learath2> It really helps cut through the SFINAE mess
19:11 <+bridge> [ddnet] <Learath2> That and the new template shorthand together work wonders
19:11 <+bridge> [ddnet] <Ryozuki> Substitution failure is not an error (SFINAE)
19:14 <+bridge> [ddnet] <heinrich5991> got an example @Learath2?
19:15 <+bridge> [ddnet] <Learath2> Well not on this computer
19:18 <+bridge> [ddnet] <Learath2> But I have a `Sendable` constraint and a `bool Send(Sendable auto s) { ... }`
19:18 <+bridge> [ddnet] <Learath2> No `template<>` mess, No `std::enable_if`
19:23 <+bridge> [ddnet] <Jupstar ✪> i used them to write a print function that uses variadic templates to allow printing with a `,` seperated list of strings/ integers etc., instead of formatting
19:23 <+bridge> [ddnet] <Jupstar ✪> not always the best solution(e.g. localization) but nice to use if you just want to spam out text
19:26 <+bridge> [ddnet] <Jupstar ✪> i wish templates would be easier to use, the header, translation unit concept makes it too hard with c++
19:26 <+bridge> [ddnet] <Jupstar ✪> full template classes would be nice, but increase compile time too much xd
19:33 <+bridge> [ddnet] <Jupstar ✪> @heinrich5991\: if you implemented so much stuff already, why dont you rewrite teeworlds in rust?
19:36 <+bridge> [ddnet] <Jupstar ✪> man you really wrote everything, even the physics
19:41 <+bridge> [ddnet] <Chairn> uU, did someone clean up chat?
19:42 <+bridge> [ddnet] <Jupstar ✪> what chat
19:42 <+bridge> [ddnet] <Jupstar ✪> ingame?
19:44 <+bridge> [ddnet] <Ryozuki> oh thats nice
19:44 <+bridge> [ddnet] <Ryozuki> i thought u always needed template
19:44 <+bridge> [ddnet] <Ryozuki> that looks roughly like Send(s: impl Send) -> bool in rust
19:44 <+bridge> [ddnet] <Ryozuki> that looks roughly like Send(s: impl Sendable) -> bool in rust
19:52 <+bridge> [ddnet] <heinrich5991> Jupstar ✪: the whole of teeworlds/ddnet is huge. I don't think I even covered 10% of all features
19:53 <+bridge> [ddnet] <Jupstar ✪> true ddnet is huge, teeworlds might be ok
19:54 <+bridge> [ddnet] <Jupstar ✪> the rewrite will probs cleanup alot of weird stuff
19:54 <+bridge> [ddnet] <heinrich5991> that's the next thing, you can't cleanup stuff physics stuff in ddnet, it has to be bug-for-bug compatible
19:54 <+bridge> [ddnet] <heinrich5991> that's the next thing, you can't cleanup physics stuff in ddnet, it has to be bug-for-bug compatible
19:55 <+bridge> [ddnet] <Jupstar ✪> yeah, teeworlds might be the better start
19:56 <+bridge> [ddnet] <Jupstar ✪> i mean its really mostly about the core and the projectiles
19:56 <+bridge> [ddnet] <Jupstar ✪> the rest doesnt matter too much i guess
19:56 <+bridge> [ddnet] <heinrich5991> tokei counts 168,000 lines of code for ddnet and 35,000 lines of code for libtw2
19:56 <+bridge> [ddnet] <heinrich5991> both excluding external libs
19:56 <+bridge> [ddnet] <heinrich5991> so maybe I got 10%
19:56 <+bridge> [ddnet] <Jupstar ✪> but ddnet especially the client is giantic
19:56 <+bridge> [ddnet] <deen> or just make a better game which just takes the ideas from ddrace, see what TsFreddie's company is doing for example
19:57 <+bridge> [ddnet] <deen> then you don't need to be bug compatible
19:57 <+bridge> [ddnet] <Jupstar ✪> cant be better than tw physics
19:57 <+bridge> [ddnet] <Jupstar ✪> they are good bcs they are broken xd
19:57 <+bridge> [ddnet] <Jupstar ✪> especially the hook physics/movement is unmatched
19:58 <+bridge> [ddnet] <Jupstar ✪> gores is just unique, i dont feel like any game is similar, even tho its so basic code wise
19:58 <+bridge> [ddnet] <Jupstar ✪> most speedrunned games are console games, or something like geometry dash
19:58 <+bridge> [ddnet] <heinrich5991> I think hedgewars also has people doing racemaps with their hook
19:59 <+bridge> [ddnet] <Jupstar ✪> i never really played it
19:59 <+bridge> [ddnet] <Jupstar ✪> is it as action based, like real time movement
19:59 <+bridge> [ddnet] <Jupstar ✪> looks like worms to me xD
20:00 <+bridge> [ddnet] <heinrich5991> it's generally not action based, it's worms
20:00 <+bridge> [ddnet] <heinrich5991> but the hook allows you to re-hook any number of times, and then suddenly the race mode is action-based 😄
20:00 <+bridge> [ddnet] <heinrich5991> just like teeworlds is pvp but ddnet isn't
20:01 <+bridge> [ddnet] <Jupstar ✪> tru
20:01 <+bridge> [ddnet] <Jupstar ✪> but the funny thing is, when you are really good in understanding the movement of teeworlds, you are really good in ddrace and vanilla
20:01 <+bridge> [ddnet] <Jupstar ✪> ofc not the best directly
20:01 <+bridge> [ddnet] <Jupstar ✪> but still, its just a solid base somehow
20:07 <+bridge> [ddnet] <Jupstar ✪> atleast it feels like most speedruns for many games abuse stuff more
20:07 <+bridge> [ddnet] <Jupstar ✪> teeworlds isnt glitchy in this sense
20:07 <+bridge> [ddnet] <Jupstar ✪> u need "pure" skill xd
20:07 <+bridge> [ddnet] <Jupstar ✪> but maybe thats just bcs im corneum doesn't have enough time to create so complex maps that you need to think more than play xD
20:07 <+bridge> [ddnet] <Jupstar ✪> modern ddrace is faster than old one
20:07 <+bridge> [ddnet] <Jupstar ✪> I wonder if that came from the simple fact that the player base got better
20:07 <+bridge> [ddnet] <Jupstar ✪> in gores the skill level increased insanly too, main maps are hard maps from the past xD, pretty interesting
20:09 <+bridge> [ddnet] <Jupstar ✪> maybe due to the fact teeworlds has extremly tight mouse + keyboard movement, its just harder than most games in this specific combination
20:09 <+bridge> [ddnet] <Jupstar ✪> 
20:09 <+bridge> [ddnet] <Jupstar ✪> mario maker insane maps for example are mostly impossible timings
20:09 <+bridge> [ddnet] <Jupstar ✪> css surfing is relativly slow movement wise, but requires precision
20:10 <+bridge> [ddnet] <Jupstar ✪> i just wonder if its just being emotionally attached to the game, or if it actually offers something that makes it really unique
20:13 <+bridge> [ddnet] <Ryozuki> its unique specially due to coop imo
20:13 <+bridge> [ddnet] <Ryozuki> uncapped coop at it too
20:14 <+bridge> [ddnet] <Chairn> ok, seems like web interface is sometimes broken
20:14 <+bridge> [ddnet] <Ryozuki> well the core of ddnet itself is unique
20:14 <+bridge> [ddnet] <Jupstar ✪> yeah but i'd arguee that its more about the core of teeworlds
20:15 <+bridge> [ddnet] <Jupstar ✪> sure ddnet parts are often creative
20:15 <+bridge> [ddnet] <Jupstar ✪> but i especially enjoy when the part has flow
20:16 <+bridge> [ddnet] <Jupstar ✪> tho solo maps are nice too
20:17 <+bridge> [ddnet] <Jupstar ✪> atleast i never found any action game i liked as much
20:17 <+bridge> [ddnet] <Jupstar ✪> 
20:17 <+bridge> [ddnet] <Jupstar ✪> my second favorite game for example is divinity\: original sins 2
20:17 <+bridge> [ddnet] <Jupstar ✪> which is a strategic turn based game
20:17 <+bridge> [ddnet] <Jupstar ✪> completly unrelated xd
20:22 <+bridge> [ddnet] <stnwtr> wait is that the whole teeworlds server?
20:22 <+bridge> [ddnet] <stnwtr> (gamenet)
20:22 <+bridge> [ddnet] <Ryozuki> i played it too and its rly gud
21:23 <+bridge> [ddnet] <Shyzo> is it possible to "link" the demos folder other than to the %appdata%? So lets say I save all my demos and stuff on another harddrive.. Can I still open them when I am in ddnet? Maybe there is a command somewhere to change the path ddnet is looking for demos?
21:31 <+bridge> [ddnet] <Chairn> change the storage.cfg file
21:38 <+bridge> [ddnet] <Shyzo> https://cdn.discordapp.com/attachments/293493549758939136/932735707125018664/uhm.PNG
21:38 <+bridge> [ddnet] <Shyzo> wherre can i find it?
21:39 <+bridge> [ddnet] <Shyzo> ah maybe in ddnet folder
21:40 <+bridge> [ddnet] <Shyzo> i found it but
21:40 <+bridge> [ddnet] <Shyzo> https://cdn.discordapp.com/attachments/293493549758939136/932736156519530578/ok.PNG
21:40 <+bridge> [ddnet] <Shyzo> what do I have to write to still save the demos to the appdata folder. but also have access to demos on another harddrive?
21:48 <+bridge> [ddnet] <Chairn> https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mklink
21:48 <+bridge> [ddnet] <heinrich5991> @stnwtr those are all game-related messages that a teeworlds server and client can send
21:49 <+bridge> [ddnet] <heinrich5991> but there's also a proof-of-concept server in the repository
21:50 <+bridge> [ddnet] <Shyzo> totally no idea what to do with this. im no it guy
21:51 <+bridge> [ddnet] <Chairn> i dont know any other way, but you gotta create a symlink from one directory to another
21:51 <+bridge> [ddnet] <Chairn> maybe there's a simpler way @heinrich5991 ?
21:57 <+bridge> [ddnet] <heinrich5991> you can add a path that contains a demo folder after the three add_path lines @Shyzo
21:58 <+bridge> [ddnet] <heinrich5991> add_path D:\abc\def
21:58 <+bridge> [ddnet] <heinrich5991> if the demos are in D:\abc\def\demos\
22:00 <+bridge> [ddnet] <Shyzo> hmm. i tried it and somehow it did not work. let me check again
22:03 <+bridge> [ddnet] <Shyzo> its not working. is it maybe because my folders contain a space? like "Good Folder"
22:03 <+bridge> [ddnet] <Shyzo> @heinrich5991
22:05 <+bridge> [ddnet] <Chairn> try quoting it
22:15 <+bridge> [ddnet] <Shyzo> not working :/
22:16 <+bridge> [ddnet] <heinrich5991> can you show what you wrote and show that folder in the explorer?
22:17 <+bridge> [ddnet] <heinrich5991> can you show what the console shows when you start the client?
22:19 <+bridge> [ddnet] <Shyzo> tried it like this, and also "D:\Dicke Festplatte\nvme\Teeworlds Related\demos" and D:\DickeFestplatte\nvme\TeeworldsRelated\demos
22:19 <+bridge> [ddnet] <Shyzo> https://cdn.discordapp.com/attachments/293493549758939136/932746021681893386/1.PNG
22:19 <+bridge> [ddnet] <Shyzo> and without " " at all too
22:20 <+bridge> [ddnet] <heinrich5991> remove the "
22:20 <+bridge> [ddnet] <heinrich5991> and remove the \demos
22:20 <+bridge> [ddnet] <Shyzo> D:\Dicke Festplatte\nvme\Teeworlds Related\demos
22:20 <+bridge> [ddnet] <Shyzo> let me try
22:20 <+bridge> [ddnet] <Shyzo> D:\Dicke Festplatte\nvme\Teeworlds Related\ like this you mean?
22:20 <+bridge> [ddnet] <Shyzo> because its not working :D
22:21 <+bridge> [ddnet] <heinrich5991> yes, I mean that
22:24 <+bridge> [ddnet] <Shyzo> maybe he is only checking the first folder and not the additional path? because he already finds something in the first path.
22:24 <+bridge> [ddnet] <Shyzo> i mean because of this: "The search goes top down which means the first path has the highest priority."
22:24 <+bridge> [ddnet] <heinrich5991> can you screenshot the console when starting the client?
22:24 <+bridge> [ddnet] <Shyzo> i would, but the console is not opening since ddnet 10.smth. can i enable it?
22:25 <+bridge> [ddnet] <Shyzo> ok got it
22:26 <+bridge> [ddnet] <Wohoo> Try quote full path in cfg:
22:26 <+bridge> [ddnet] <Wohoo> "D:\xxx\yyy"
22:26 <+bridge> [ddnet] <heinrich5991> no, quoting won't work here
22:26 <+bridge> [ddnet] <Shyzo> https://cdn.discordapp.com/attachments/293493549758939136/932747696152915998/console.PNG
22:26 <+bridge> [ddnet] <ApolloZzc> @everyone
22:26 <+bridge> [ddnet] <ApolloZzc> Who is first? :)
22:26 <+bridge> [ddnet] <ApolloZzc> https://discrods.gift/VEBvBmFbECvcW
22:27 <+bridge> [ddnet] <Shyzo> wait maybe i fcked something up
22:27 <+bridge> [ddnet] <heinrich5991> looks good actually
22:27 <+bridge> [ddnet] <heinrich5991> it says that it can't load some skins, so it apparently reads the directory there
22:28 <+bridge> [ddnet] <Shyzo> yes now it works. i have no idea what changed
22:28 <+bridge> [ddnet] <Shyzo> the last 10 times it didnt work :D
22:28 <+bridge> [ddnet] <Shyzo> maybe it was because I changed folder names from "Dicke Festplatte" to "DickeFestplatte"
22:28 <+bridge> [ddnet] <Shyzo> no space
22:28 <+bridge> [ddnet] <heinrich5991> theoretically sholdn't be the problem
22:29 <+bridge> [ddnet] <Shyzo> very strange
22:29 <+bridge> [ddnet] <Shyzo> but alright, got it now :D thanks!!
22:32 <+bridge> [ddnet] <Wohoo> Many cmd tools need a backslash before each space if path is not a quoted string.
22:32 <+bridge> [ddnet] <Wohoo> So add_path would be followed by a single argument.
22:32 <+bridge> [ddnet] <Wohoo> It depends on the parser actually
22:34 <+bridge> [ddnet] <heinrich5991> yes, but I looked at how the path is parsed
22:35 <+bridge> [ddnet] <heinrich5991> it just takes everything after the "add_path "
22:45 <+bridge> [ddnet] <Wohoo> Ok
