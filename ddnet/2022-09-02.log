00:02 <+bridge> [ddnet] <Cipy29> Playing teeworlds for 80 years :justatest:
00:02 <+bridge> [ddnet] <Cipy29> This is what old players seem like to newer players
00:42 <+bridge> [ddnet] <funman> most people who have played havent lasted 5 years
01:59 <+bridge> [ddnet] <Learath2> https://github.com/DDRace/teeworlds/commit/250b3b94168f1b2a9dd1a7d997d34d7a5d2ffe44
06:25 <+bridge> [ddnet] <bomba2834> i would just stay still and resist the tees who are trying to take me with them
07:53 <+bridge> [ddnet] <Voxel> I tried your two alternate poses
07:53 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1015137437812531270/unknown.png
07:53 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1015137438991122454/unknown.png
07:54 <+bridge> [ddnet] <Voxel> Is this what you mean?
07:57 <+bridge> [ddnet] <Voxel> What say you guys? Do you prefer one of these over the original?
07:58 <+bridge> [ddnet] <Cipy29> Last one is great, looks like gun rests on the ground too
07:59 <+bridge> [ddnet] <n000b> Hmm difficult actually
07:59 <+bridge> [ddnet] <Voxel> Y'know what? I'm going to reverse engineer the code temporarily to make this whole process faster. I'm going to make it where you're in afk state literally any time
07:59 <+bridge> [ddnet] <Voxel> I don't know why I didn't think of this earlier
08:00 <+bridge> [ddnet] <n000b> The first alternative pose is worse than the original idea i think
08:00 <+bridge> [ddnet] <n000b> Lol yeah that is smart
08:00 <+bridge> [ddnet] <Cipy29> Were you waiting for the tee to go afk?
08:00 <+bridge> [ddnet] <n000b> Yes
08:01 <+bridge> [ddnet] <Voxel> I was actually trying to find an AFK tee holding a special weapon like this.
08:04 <+bridge> [ddnet] <Voxel> Pistol is too far back :((
08:04 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1015140189267566643/unknown.png
08:08 <+bridge> [ddnet] <Voxel> Let's do a vote:
08:08 <+bridge> [ddnet] <Voxel> Vote which one you want the state to base off of! Would you rather have it on the tee's back or resting on the ground?
08:08 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1015141247373021204/unknown.png
08:19 <+bridge> [ddnet] <CrazyDevNEW> How to use command “auth_add_”
08:19 <+bridge> [ddnet] <CrazyDevNEW> How to use command ‘“auth_add_d”’
08:19 <+bridge> [ddnet] <CrazyDevNEW> How to use command ‘“auth_add_d”’?
08:20 <+bridge> [ddnet] <CrazyDevNEW> What method use hash?
08:22 <+bridge> [ddnet] <CrazyDevNEW> How to use command ‘“auth_add_p”’?
08:40 <+bridge> [ddnet] <ReiTW> u can now make fortnite dances to monetize the game
08:41 <+bridge> [ddnet] <Voxel> i do not want to make fortnite dances
08:41 <+bridge> [ddnet] <ReiTW> that was ironic
08:41 <+bridge> [ddnet] <ReiTW> u can now make fortnite dances animations to monetize the game
08:43 <+bridge> [ddnet] <Devinci> nft_fortnite_dance
08:43 <+bridge> [ddnet] <Devinci> 100$
08:49 <+bridge> [ddnet] <Voxel> Hmpg. I guess Cellegen likes the back placement more after all.
09:01 <+bridge> [ddnet] <Cellegen | RiH> cuz of the picture you sent about the pistol
09:08 <+bridge> [ddnet] <chillerdragon> lmao
09:08 <+bridge> [ddnet] <chillerdragon> (@Learath2)
09:10 <+bridge> [ddnet] <fokkonaut> or blockchain
10:22 <+bridge> [ddnet] <Ryozuki> I need to put ryo-os on github and continue it
10:22 <+bridge> [ddnet] <Ryozuki> Was fun making my own async runtime on a bare os
12:06 <+bridge> [ddnet] <Ryozuki> https://github.com/charliermarsh/ruff
12:06 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1015200955458916362/unknown.png
12:06 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1015201013952692244/unknown.png
12:06 <+bridge> [ddnet] <Ryozuki> ruff > pylint
12:23 <+bridge> [ddnet] <Learath2> It's salted md5. https://github.com/ddnet/ddnet/blob/master/scripts/hash_passwords.py this script generates them
12:24 <+bridge> [ddnet] <Learath2> https://ddnet.tw/modauth/password.html this is a js implementation of the same script with random passwords
12:26 <+bridge> [ddnet] <Learath2> These graphs comparing actual programming languages to toys like python are actually very funny. An entire order of magnitude or two difference
12:31 <+bridge> [ddnet] <Ryozuki> True xd
13:13 <+bridge> [ddnet] <CrazyDevNEW> Thx
13:36 <+ChillerDragon> @fokkonaut fan https://zillyhuhn.com/cs/.1662118549.png
13:43 <+bridge> [ddnet] <deen> Github has followers? 😄 Unfortunately some of the repos I'm working on are private now, so not sure I'm interesting to follow
13:44 <+bridge> [ddnet] <deen> Next time someone tells me how many Instragram followers they have I'll respond with my Github follower count
13:49 <+bridge> [ddnet] <Vy0x2> deen big influencer :ddnet:
13:53 <+bridge> [ddnet] <fokkonaut> misclick, i dont follow anyone on GH
14:36 <+bridge> [ddnet] <Learath2> Omg is heinrich back??
14:37 <+bridge> [ddnet] <deen> Seems so, welcome back heinrich5991 🙂
14:38 <+bridge> [ddnet] <Learath2> 👋
14:38 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> Can someone compile a source for me?
14:38 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> Has anyone compiled DDNetPP for Windows?
14:38 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> @Learath2@deen
14:39 <+bridge> [ddnet] <Learath2> Maybe tonight. I'm outside
14:39 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> Really?
14:40 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> @Learath2
14:41 <+bridge> [ddnet] <Learath2> Yeah sure. If it's open source and you trust me enough to run binaries I send. I'll compile it for you when I get home
14:43 <+bridge> [ddnet] <* Mahdiyar ≿ ᴮᴱᴿᴹᵁᴰᴬ> Yes, is there anyone who does not trust you? @Learath2
15:25 <+bridge> [ddnet] <Ryozuki> I want to make a pr so bas
15:25 <+bridge> [ddnet] <Ryozuki> I want to make a pr so bad
15:25 <+bridge> [ddnet] <Jupstar ✪> and what holds u back
15:25 <+bridge> [ddnet] <Ryozuki> Hope i feel like doing it tomorrow
15:25 <+bridge> [ddnet] <Ryozuki> Hmm lazyness and lack of time
15:25 <+bridge> [ddnet] <Jupstar ✪> so its not SOO bad
15:25 <+bridge> [ddnet] <Ryozuki> I want to add a auto translated chat wheel like in dota
15:25 <+bridge> [ddnet] <Jupstar ✪> bcs if u'd really want it u wouldnt be lazy xD
15:26 <+bridge> [ddnet] <Ryozuki> True
15:26 <+bridge> [ddnet] <Ryozuki> If it was rust i would do it instantly
15:26 <+bridge> [ddnet] <Ryozuki> :BASED:
15:26 <+bridge> [ddnet] <Jupstar ✪> then do it in rust based on heinrichs pr 😄
15:26 <+bridge> [ddnet] <Jupstar ✪> vulkan
15:26 <+bridge> [ddnet] <Jupstar ✪> vulkan
15:26 <+bridge> [ddnet] <Jupstar ✪> vulkan
15:26 <+bridge> [ddnet] <Ryozuki> It needs to be merged first
15:26 <+bridge> [ddnet] <Jupstar ✪> just so i win in future
15:26 <+bridge> [ddnet] <Ryozuki> Jajaja
15:26 <+bridge> [ddnet] <Ryozuki> Hahahha
15:27 <+bridge> [ddnet] <k2d222> javascript
15:27 <+bridge> [ddnet] <k2d222> (will I get beaten to death?)
15:27 <+bridge> [ddnet] <Ryozuki> Yes
15:28 <+bridge> [ddnet] <k2d222> currently writing a lexer/parser in pure js this is a lot of fun
15:28 <+bridge> [ddnet] <k2d222> dont ask why
15:28 <+bridge> [ddnet] <LCSG47> Why
15:28 <+bridge> [ddnet] <k2d222> 🇮   🇸 🇦 🇮 🇩   🇩 🇴 🇳 🇹
15:29 <+bridge> [ddnet] <LCSG47> :troll:
15:31 <+bridge> [ddnet] <Ryozuki> Thats because you havent used rust yet
15:31 <+bridge> [ddnet] <Ryozuki> Check out nom
15:32 <+bridge> [ddnet] <k2d222> dont worry I know nom already
15:32 <+bridge> [ddnet] <Ryozuki> And pest?
15:32 <+bridge> [ddnet] <k2d222> I have written an interpreter in rust already
15:32 <+bridge> [ddnet] <k2d222> yes
15:32 <+bridge> [ddnet] <Ryozuki> Pest is so elegant
15:32 <+bridge> [ddnet] <k2d222> indeed
15:32 <+bridge> [ddnet] <Ryozuki> https://pest.rs
15:34 <+bridge> [ddnet] <louis> odd choice of name
15:36 <+bridge> [ddnet] <Jupstar ✪> i mean they named the language rust xD
15:37 <+bridge> [ddnet] <k2d222> why is it called rust btw?
15:39 <+bridge> [ddnet] <Jupstar ✪> https://en.wikipedia.org/wiki/Rust_%28fungus%29
15:40 <+bridge> [ddnet] <Ryozuki> Hmm idk
15:40 <+bridge> [ddnet] <Ryozuki> Fun fact
15:41 <+bridge> [ddnet] <Ryozuki> Rust before 1.0 had a GC
15:41 <+bridge> [ddnet] <k2d222> no borrow checker?
15:41 <+bridge> [ddnet] <Ryozuki> 1.0 is the true rust
15:41 <+bridge> [ddnet] <Ryozuki> Idk all the details
15:42 <+bridge> [ddnet] <k2d222> well you should mister rust fanboy
15:42 <+bridge> [ddnet] <Ryozuki> :BASED:
15:42 <+bridge> [ddnet] <Ryozuki> The only thing that matters is modern rust
15:42 <+bridge> [ddnet] <Ryozuki> Fearless concurrency
15:44 <+bridge> [ddnet] <Ryozuki> https://os.phil-opp.com/
15:44 <+bridge> [ddnet] <Ryozuki> do this
15:44 <+bridge> [ddnet] <Ryozuki> and u can learn alot about computers
15:44 <+bridge> [ddnet] <Ryozuki> i did
15:44 <+bridge> [ddnet] <Ryozuki> @Not Keks apple doing 16k pages is smart
15:45 <+bridge> [ddnet] <Ryozuki> it enables some optimizations
15:45 <+bridge> [ddnet] <Ryozuki> x86 is stuck at 4k
15:45 <+bridge> [ddnet] <Ryozuki> iirc with 16k u can have bigger caches
15:45 <+bridge> [ddnet] <Ryozuki> l2
15:45 <+bridge> [ddnet] <Ryozuki> without a big perf impact
15:46 <+bridge> [ddnet] <k2d222> https://www.redox-os.org/ linux is a thing of the past now
15:47 <+bridge> [ddnet] <Ryozuki> https://twitter.com/atthehackofdawn/status/1333895115174187011
15:47 <+bridge> [ddnet] <Ryozuki> i hope this succeeds
15:47 <+bridge> [ddnet] <Ryozuki> but its rly hard to compete
15:48 <+bridge> [ddnet] <k2d222> I'm already surprised that it reached this point
15:49 <+bridge> [ddnet] <Jupstar ✪> for me its not the future, i want supervisor OS
15:49 <+bridge> [ddnet] <Jupstar ✪> no kernel
15:49 <+bridge> [ddnet] <Jupstar ✪> micro kernels suck hard
15:49 <+bridge> [ddnet] <Jupstar ✪> windows nt is also micro kernel
15:49 <+bridge> [ddnet] <Jupstar ✪> and see how it sucks
15:50 <+bridge> [ddnet] <Jupstar ✪> ok windows nt is hybrid
15:50 <+bridge> [ddnet] <Jupstar ✪> thats still bit different
15:50 <+bridge> [ddnet] <Jupstar ✪> but linux is monolith
15:50 <+bridge> [ddnet] <Ryozuki> @Not Keks the future is kernel-app driven development
15:50 <+bridge> [ddnet] <Ryozuki> make a tuned kernel for each app
15:50 <+bridge> [ddnet] <Jupstar ✪> probably yes
15:51 <+bridge> [ddnet] <Ryozuki> they probs do this
15:51 <+bridge> [ddnet] <Ryozuki> on data centers
15:51 <+bridge> [ddnet] <Jupstar ✪> the kernel is more an SDK then
15:51 <+bridge> [ddnet] <Ryozuki> with specific hardware
15:51 <+bridge> [ddnet] <Jupstar ✪> not really a seperate thing
19:25 <+bridge> [ddnet] <ReiTW> saw that, it is an amazing documentation
19:27 <+bridge> [ddnet] <Ryozuki> i implemented it
19:27 <+bridge> [ddnet] <Ryozuki> ryo os
19:27 <+bridge> [ddnet] <Ryozuki> :BASED:
19:28 <+bridge> [ddnet] <ReiTW> This reminds me of the debate between Linux & Tanenbaum
19:28 <+bridge> [ddnet] <ReiTW> https://en.wikipedia.org/wiki/Tanenbaum%E2%80%93Torvalds_debate
19:30 <+bridge> [ddnet] <ReiTW> for tanenbaum it was the opposite of what you said
19:33 <+bridge> [ddnet] <Jupstar ✪> the question is, why should it ever be the case?
19:33 <+bridge> [ddnet] <Jupstar ✪> if u can move stuff in userspace u can also do it in monolith kernels
19:33 <+bridge> [ddnet] <Jupstar ✪> but microkernels by design want to stay small
19:34 <+bridge> [ddnet] <Voxel> 🐢
19:38 <+bridge> [ddnet] <ReiTW> yes so less risks of having code issues, vuln etc.. ig
19:39 <+bridge> [ddnet] <Jupstar ✪> how does that improve performance?
19:40 <+bridge> [ddnet] <ReiTW> it doesn't improve performance
19:40 <+bridge> [ddnet] <ReiTW> you have more context switch theorically
19:41 <+bridge> [ddnet] <Jupstar ✪> see, so it sucks
19:42 <+bridge> [ddnet] <Jupstar ✪> best is to eliminate context switch completly
19:42 <+bridge> [ddnet] <Jupstar ✪> by removing kernels, only have one supervisor for the processes
19:42 <+bridge> [ddnet] <ReiTW> depends also if ur monolithic kernel is written properly
19:42 <+bridge> [ddnet] <Jupstar ✪> rest must proof its not doing shit
19:43 <+bridge> [ddnet] <Jupstar ✪> and this is still where i see rusts biggest strength
19:43 <+bridge> [ddnet] <Jupstar ✪> and redox is not what i'd want rust for
19:43 <+bridge> [ddnet] <Jupstar ✪> for me the os doesnt solve any problem
20:05 <+bridge> [ddnet] <Ryozuki> i guess
20:05 <+bridge> [ddnet] <Ryozuki> redox is more to prove that you can do a linux in rust
20:05 <+bridge> [ddnet] <Ryozuki> xD
20:08 <+bridge> [ddnet] <Ryozuki> how is that possible though
20:08 <+bridge> [ddnet] <Learath2> everything works in kernel
20:09 <+bridge> [ddnet] <Ryozuki> > In computing, a context switch is the process of storing the state of a process or thread, so that it can be restored and resume execution at a later point, and then restoring a different, previously saved, state.[1] This allows multiple processes to share a single central processing unit (CPU), and is an essential feature of a multitasking operating system.
20:10 <+bridge> [ddnet] <Ryozuki> so that kernel wouldnt be mt?
20:10 <+bridge> [ddnet] <Learath2> Well if you don't want context switches, yes 😄
20:10 <+bridge> [ddnet] <Ryozuki> :justatest:
20:10 <+bridge> [ddnet] <Learath2> Going back in time
20:10 <+bridge> [ddnet] <Ryozuki> > Some operating systems also require a context switch to move between user mode and kernel mode tasks
20:10 <+bridge> [ddnet] <Ryozuki> i guess he refers to these
20:11 <+bridge> [ddnet] <Ryozuki> > For example, in the Linux kernel, context switching involves loading the corresponding process control block (PCB) stored in the PCB table in the kernel stack to retrieve information about the state of the new process. CPU state information including the registers, stack pointer, and program counter as well as memory management information like segmentation tables and page tables (unless the old process shares the memory with the new) are
20:11 <+bridge> [ddnet] <Ryozuki> > 
20:11 <+bridge> [ddnet] <Ryozuki> > Furthermore, analogous context switching happens between user threads, notably green threads, and is often very lightweight, saving and restoring minimal context. In extreme cases, such as switching between goroutines in Go, a context switch is equivalent to a coroutine yield, which is only marginally more expensive than a subroutine call.
20:12 <+bridge> [ddnet] <Ryozuki> also CPUs are optimized for context switches
20:13 <+bridge> [ddnet] <Jupstar ✪> but thats bloat
20:13 <+bridge> [ddnet] <Ryozuki> https://en.wikipedia.org/wiki/Task_state_segment
20:13 <+bridge> [ddnet] <Jupstar ✪> if u dont need it, u dont design it for that^^
20:13 <+bridge> [ddnet] <Ryozuki> we need to move away from x86 then
20:13 <+bridge> [ddnet] <Jupstar ✪> yes pls
20:13 <+bridge> [ddnet] <Jupstar ✪> a new processor finally
20:25 <+bridge> [ddnet] <ReiTW> templeOS did it :gigachad:
20:26 <+bridge> [ddnet] <ReiTW> jk
20:27 <+bridge> [ddnet] <Chairn> @Ryozuki if you're interested in reducing context switches, you can also look real time OSes and real time constraint runnability research
20:28 <+bridge> [ddnet] <Ryozuki> oh yeah
20:28 <+bridge> [ddnet] <Ryozuki> i wanted to try one in a embedded thingy
20:28 <+bridge> [ddnet] <Ryozuki> https://www.freertos.org/openrtos.html
20:29 <+bridge> [ddnet] <Ryozuki> wait
20:29 <+bridge> [ddnet] <Ryozuki> was it freertos
20:29 <+bridge> [ddnet] <Ryozuki> i dont remember
20:29 <+bridge> [ddnet] <Chairn> real time OSes will try to minimize context switching as it can cost lots of cpu time
20:29 <+bridge> [ddnet] <Ryozuki> i want to get a ESP32 and try it with rust
20:29 <+bridge> [ddnet] <Ryozuki> https://www.espressif.com/
20:30 <+bridge> [ddnet] <Chairn> never heard of those
20:30 <+bridge> [ddnet] <Chairn> living in Grenoble, everyone uses STM32 which are manufactered there
20:30 <+bridge> [ddnet] <Chairn> living in Grenoble, everyone uses STM32 which are manufactured there
20:51 <+bridge> [ddnet] <ReiTW> :giga_chad:
20:52 <+bridge> [ddnet] <ReiTW> ST microelectronics
20:54 <+bridge> [ddnet] <Ryozuki> i have 2 stm32
20:54 <+bridge> [ddnet] <Ryozuki> esp32 are quite famous
20:54 <+bridge> [ddnet] <Ryozuki> got more ram
20:54 <+bridge> [ddnet] <Ryozuki> already used rust on a stm32 though
20:54 <+bridge> [ddnet] <Ryozuki> hehe
20:55 <+bridge> [ddnet] <ReiTW> have a friend doing an internship at ST
21:02 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1015335959631503367/IMG_20220902_210135.jpg
21:02 <+bridge> [ddnet] <Ryozuki> :BASED:
21:06 <+bridge> [ddnet] <ReiTW> :POGGIES:
21:08 <+bridge> [ddnet] <ReiTW> st is very known here tho (living in Grenoble as Chairn)
21:32 <+bridge> [ddnet] <Cipy29> https://youtu.be/jZT8APrzvc4
21:32 <+bridge> [ddnet] <Cipy29> @Ryozuki embedded rust :poggers2:
21:32 <+bridge> [ddnet] <Ryozuki> last rpi are overpriced
21:32 <+bridge> [ddnet] <Ryozuki> no longer what it was
21:33 <+bridge> [ddnet] <Ryozuki> but its obviously easy to run on a RPI since it gots lots of resources
21:33 <+bridge> [ddnet] <Ryozuki> and a OS
21:33 <+bridge> [ddnet] <Cipy29> He wrapped everything in unsafe and basically wrote C but at least he showed how to build for it
21:33 <+bridge> [ddnet] <Ryozuki> omg
21:33 <+bridge> [ddnet] <Cipy29> He did it no OS
