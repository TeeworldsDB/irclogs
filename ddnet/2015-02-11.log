01:44 < Nimda> DDNet South Africa went down!
01:45 < Nimda> DDNet Brazil went down!
01:45 < Nimda> DDNet South Africa went back online!
01:47 < Nimda> DDNet RUS went down!
01:48 < Nimda> DDNet RUS went back online!
01:50 < Nimda> DDNet Chile went down!
01:51 < Nimda> DDNet Chile went back online!
01:55 < Nimda> DDNet Brazil went back online!
03:05 < Nimda> DDNet Chile went down!
03:06 < Nimda> DDNet Chile went back online!
04:07 < Nimda> DDNet CHN went down!
04:08 < Nimda> DDNet CHN went back online!
05:08 < Nimda> DDNet Chile went down!
05:09 < Nimda> DDNet Chile went back online!
05:39 < Nimda> DDNet RUS went down!
05:40 < Nimda> DDNet RUS went back online!
06:56 < eeeee> deen: you might also want to compile versionsrv with websockets=1
06:56 < eeeee> or i can run my own one, but then we'll have to sync serverlist.json
06:57 < eeeee> also i'd have to extend it somehow anyway, my plan is to embed the whole serverinfo for each server into serverlist.json, to workaround the websocket connection rate cap
06:58 < eeeee> so the js client would immediately know all the playerlists and server names and shit, and then it would still have to ping the servers, but ping can actually be performed once for each IP
07:01 < eeeee> meanwhile i updated the tw.qwe123.info/d.html to connect directly (and http map download)
07:01 < eeeee> Learath2: ^
09:20 < TwItCh_> Hello, Whats up?
09:31 <@deen> eeeee: oops, right^^
09:31 <@deen> eeeee: done
09:32 <@deen> eeeee: site not loading for me =/
10:11 <@deen> eeeee: seems like the map download gets corrupted (on Firefox at least)
10:16 <@deen> and text corruption
10:17 <@deen> and on chrome the mouse jumps around weirdly =/
10:39 <@deen> Would also be nice to have q as /pause and e to switch to another player
15:24 < o_be_one> hello
19:27 < eeeee> for me map download works fine in FF
19:27 < eeeee> text corruption on window resize is a known issue, will look into that
19:28 < eeeee> not sure what do you mean by "mouse jumps around weirdly". it will take a couple clicks to grab the pointer, and also it interacts in a shitty way when you press escape. but other than that should work
19:29 < eeeee> if you want those binds why don't you make them default in the code :P
19:30 < eeeee> thats another story if they are already default, ofc
19:50 < Learath2> pointer lock doesnt work at all in ff eeeee
19:58 < Nimda> DDNet Brazil went down!
19:59 < Nimda> DDNet Brazil went back online!
20:00 <@deen> Learath2: for me it works in ff, but not in chrome^^
20:00 <@deen> i even finished kobra in the js client this morning
20:34 < eeeee> would be helpful if you tell ur os/browser verion
21:01 <@deen> firefox 35 and chrome 40 on linux here
21:05 < Learath2> i have ff 35.0.1 on Win7 
21:22 < Learath2> eeeee: its not that pointer lock isnt working in ff its so laggy in the serverbrowser
21:22 < Nimda> DDNet CHN went down!
21:23 < Nimda> DDNet CHN went back online!
21:23 < Learath2> eeeee: getting 60 fps but tex seems to be typed slowly
21:31 < eeeee> hmm
21:33 < eeeee> i think the ui just gets laggy when there's a lot of text on the screen
21:33 < eeeee> because we're switching the gl "program" every time a text element is rendered
21:34 <@heinrich5991> 'switching the gl "program"'?
21:34 < eeeee> yeah like active shaders and shit
21:34 < eeeee> text uses different shaders
21:35 <@deen> and refreshing the server list takes pretty long
21:35 < eeeee> i don't completely understand it as i'm not a gl coder, but i guess that's because the normal game textures are all RGBA, but text is grayscale
21:36 < eeeee> refreshing takes pretty long on FF as it caps number of active websocket connections
21:38 <@heinrich5991> maybe the chance to offload server refresh to a REST api (i.e. a single GET, to be cached by cloudflare)
21:40 < eeeee> yeah, that would be ideal
21:40 < eeeee> we'd still have to ping each ip once though
21:40 <@heinrich5991> mh. I mean, centralized
21:41 < eeeee> get the serverinfos centralized, then ping each ip (not each server!) once to get the latency :)
21:41 <@heinrich5991> cache pings too :P
21:42 <@heinrich5991> but then you could just slowly build pings, while already showing the complete serverlist
21:42 < eeeee> yeah sure
21:42 < eeeee> and for ddnet we have how many, like 10 ips?
21:43 < eeeee> eventually we'd have to host a complete master though
21:43 < eeeee> so that others can also run websockets-enabled servers
21:44 < Learath2> eeeee: what happens if you try to connect to a non websocket enabled server ?
21:44 < eeeee> nothing
21:44 < Learath2> does it connect just fine ?
21:44 < eeeee> on the ui looks as if server is down
21:45 < eeeee> we could automatically fall back to proxy in that case, but that would require some codez
21:46 < eeeee> but yeah, good point
21:46 < Learath2> eeeee: cant websockets pretend to be normal sockets ?
21:47 <@heinrich5991> Learath2: the point is that you can't abuse the client to do any requests on behalf of the user's machine
21:47 <@heinrich5991> otherwise they could just implement normal TCP and UDP sockets for JS
21:47 < eeeee> i'd have to decide if it's better to release ddnet-only (with good latencies but limited audience, would potentially encourage ppl to compile their server with proper websockets), or for the whole tw (wide audience, but shit latency which would make ppl hate js client)
21:47 < Learath2> how does websockets even prevent that heinrich5991
21:48 <@heinrich5991> by forcing them to follow a specific protocol
21:49 < eeeee> a specific assraep protocol, so rediculous that bad guys cbf to implement it
21:49 < Learath2> Huh but its okay to abuse the client to do websockets requests ?
21:49 <@heinrich5991> if I understand it correctly, the server must say that it's a websocket server, so it needs to be aware of the fact that JS from random IP addresses (that not necessarily represent their users) can connect
21:49 < Learath2> random ip that doestn represent the users ?
21:49 <@heinrich5991> I mean you wouldn't want the JS to be able to launch nuclear missiles, just because the president surfed the web
21:50 <@heinrich5991> well, that this may be rogue JS connecting
