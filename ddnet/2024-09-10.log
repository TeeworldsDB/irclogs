00:06 < bridge> <learath2> Waiting on QUIC to be more exact I guess
00:42 < bridge> <kebscs> i remember being stuck entire map spectating someone bcs i didnt know about that
00:42 < bridge> <Jupstar ✪> I believe you, it's just funny bcs i think new players simply don't know any of them
00:42 < bridge> <totar> I didn't even know you could /spec someones name
00:42 < bridge> <Jupstar ✪> xdd
00:43 < bridge> <kebscs> i read the commands
00:43 < bridge> <Jupstar ✪> But tbh I find 6 discord msgs related to ppl being stuck
00:43 < bridge> <kebscs> i seen ok i can spec someone makes sense
00:43 < bridge> <kebscs> and theres no way to unspec
00:44 < bridge> <Jupstar ✪> I wonder why we even support such non-intuitive chat commands
00:44 < bridge> <Jupstar ✪> Like why do we extend an existing chat cmd by some random feature that is completely unrelated
00:44 < bridge> <totar> is the spec menu just executing the chat command?
00:44 < bridge> <Jupstar ✪> that /spec is called /spec is ofc already a problem
00:45 < bridge> <Jupstar ✪> I don't think so, it probs has a proper network packet
00:45 < bridge> <Jupstar ✪> /spec isn't even for specing someone
00:45 < bridge> <totar> I'm not so sure
00:45 < bridge> <Jupstar ✪> It's to remove your tee and go /pause
00:46 < bridge> <Jupstar ✪> But how would that work in vanilla based mods?
00:46 < bridge> <kebscs> i think it sends packet "i want to spec someone"
00:46 < bridge> <totar> nvm
00:46 < bridge> <kebscs> with chat command server reads it and gives u spectator
00:47 < bridge> <totar> it seems weird to have a chat command for something that already has a proper net message
00:47 < bridge> <totar> bad uz
00:47 < bridge> <totar> bad ux
00:49 < bridge> <kebscs> its better that way i guess
00:49 < bridge> <kebscs> just no way of knowing there is something like the spectator menu selector
00:49 < bridge> <kebscs> unless u read discord
00:49 < bridge> <totar> bad ux again
00:51 < bridge> <Jupstar ✪> Not your fault kebs, but WTF is this pause state code bro xD
00:51 < bridge> <Jupstar ✪> 
00:51 < bridge> <Jupstar ✪> ```cpp
00:51 < bridge> <Jupstar ✪> if(-PauseState != CPlayer::PAUSE_NONE && PauseType != CPlayer::PAUSE_NONE)
00:51 < bridge> <Jupstar ✪> ```
00:51 < bridge> <Jupstar ✪> Who should be able to understand such stuff without 300 IQ
00:51 < bridge> <kebscs> idk i took it from old code
00:51 < bridge> <Jupstar ✪> Yeah i saw that
00:51 < bridge> <totar> "-PauseState" is really innovative
00:51 < bridge> <kebscs> i had to set breakpoint every time i change spectator mode to see what this even does
00:52 < bridge> <totar> I've also noticed that the spectator state on the client is a huge mess in other places
00:52 < bridge> <kebscs> there should be some message like press middle mouse to select spectator mode
00:52 < bridge> <totar> yeah
00:52 < bridge> <kebscs> just like there is when you open debug mode
00:52 < bridge> <kebscs> but something less intrusive
00:53 < bridge> <totar> but people who already know about it will find the text annoying
00:53 < bridge> <kebscs> yes thats what i mean
00:53 < bridge> <kebscs> same for entities toggle
00:53 < bridge> <totar> I think normal games would just have the text there anyway and ignore those people lol
00:53 < bridge> <syrinok> Normal games would display a tip once, probably
00:54 < bridge> <totar> not true really
00:54 < bridge> <kebscs> display a tip popup and make u close it
00:54 < bridge> <kebscs> league does it
00:54 < bridge> <kebscs> so u dont miss it
00:54 < bridge> <kebscs> so until u dont close the popup itll be there every time
00:54 < bridge> <syrinok> We do have tips in chat constantly being sent by the server, though they're all in english afaik
00:54 < bridge> <totar> you often see games with dynamic controls overlay where the graphic changes based on what you have your controls bound to
00:55 < bridge> <totar> many many games have "use {key} to {action}" text appear hundreds/thousands of times during gameplay
00:57 < bridge> <totar> or make it impossible to not learn about the menu by binding it to HOLD spec so it always appears when you enter spectate
00:58 < bridge> <syrinok> A window that goes over the controls when you first launch the game could work, have people press the buttons and see the result
00:59 < bridge> <totar> I'm not a fan of one time popups
00:59 < bridge> <totar> I think that's bad design
00:59 < bridge> <syrinok> Could have a button in the menu to redisplay it
00:59 < bridge> <totar> people don't read them/forget immediately
01:00 < bridge> <Jupstar ✪> I assume many new players use the ESC ingame menu
01:00 < bridge> <Jupstar ✪> 
01:00 < bridge> <Jupstar ✪> I'd probably add a spectate button that opens a list of options to choose.
01:00 < bridge> <Jupstar ✪> 
01:00 < bridge> <Jupstar ✪> Spectator -> [Spectate a player, Freecam]
01:00 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1282838136275206287/image.png?ex=66e0cf9d&is=66df7e1d&hm=961e3b58ef20c88a8568c5352c05afebf412236bae5138865e01f6f74ddd0431&
01:01 < bridge> <Jupstar ✪> There you can also write the bind for this
01:01 < bridge> <totar> you could have 
01:01 < bridge> <totar> ``M3: Spectate Menu``
01:01 < bridge> <totar> appear on the bottom right of the screen then fade out after 5 seconds.
01:01 < bridge> <totar> in small text
01:03 < bridge> <kebscs> quickly checking what's ahead of you would just mean the message is there always
01:03 < bridge> <totar> meh
01:05 < bridge> <totar> there's already other hud elements on the screen anyway like chat/death messages
01:05 < bridge> <totar> FPS for many people
01:06 < bridge> <kebscs> well so something like current debug mode has
01:07 < bridge> <kebscs> maybe just bit smaller and transparent i guess
01:15 < bridge> <syrinok> Could just replace the pointless "Free-View" text with it?
01:25 < bridge> <syrinok> "Following X" "Free-View" "Multi-View" is all rather pointless text, replacing it with bind information / how +spectate works would probably be better use of that space
01:26 < bridge> <kebscs> maybe
02:00 < bridge> <syrinok> Something like this, I think rshift is self explanatory once you know the button exists, since it'll flash when you press it, and you'll see your cursor
02:00 < bridge> <syrinok> https://cdn.discordapp.com/attachments/293493549758939136/1282853205088407584/cOsIBrrok3.png?ex=66e0dda6&is=66df8c26&hm=fc2fd930e3f03f92fab1d4b5dfe66698128d5cf406bdee77fd6ab1f81a13785a&
02:01 < bridge> <syrinok> Something like this, I think just saying the button for change view is self explanatory, once you know the button exists since it'll flash when you press it, and you'll see your cursor
02:01 < bridge> <syrinok> https://cdn.discordapp.com/attachments/293493549758939136/1282853205088407584/cOsIBrrok3.png?ex=66e0dda6&is=66df8c26&hm=fc2fd930e3f03f92fab1d4b5dfe66698128d5cf406bdee77fd6ab1f81a13785a&
02:07 < bridge> <syrinok> You can have it detect if it's spec or pause and display the bound key for either
02:08 < bridge> <kebscs> i dont think it can distinguish between those
02:08 < bridge> <kebscs> i think its the same
02:08 < bridge> <kebscs> and since ddnet wants to be backwards compatible etc
02:08 < bridge> <syrinok> Ya probably
02:08 < bridge> <kebscs> some servers dont allow you to exit out of pause/spectate
02:09 < bridge> <syrinok> I guess when in actual spec you'd just display "Change view: rshift"
02:12 < bridge> <syrinok> The way it is currently is a cute touch, but it's not really useful at all for anything, people already know they're in free view, and they already know who they're spectating by their name. (I guess some people hide names, but you see their name when you're selecting them from the rshift list
02:12 < bridge> <syrinok> The way it is currently is a cute touch, but it's not really useful at all for anything, people already know they're in free view, and they already know who they're spectating by their name. (I guess some people hide names, but you see their name when you're selecting them from the rshift list)
02:16 < bridge> <syrinok> "I guess when in actual spec you'd just display "Change view: rshift" this should resolve that, you can't enter pause in vanilla modes so not displaying "Exit pause" when in spectators would resolve this, ya?
02:16 < bridge> <kebscs> some modes wont let you change it either
02:16 < bridge> <kebscs> zcatch for example
02:17 < bridge> <kebscs> some modes wont let you change who youre specatating either
02:17 < bridge> <syrinok> Aaah right
02:17 < bridge> <syrinok> Should we really care about that though?
02:17 < bridge> <kebscs> idk from what ive seen ddnet wants to support everything even 0.7
02:18 < bridge> <syrinok> I mean, you'd just press it and nothing would happen, no?
02:18 < bridge> <syrinok> I don't see the harm in that
03:01 < ws-client> <ChillerDragon> TIL forks do not appear in the search on github by design to avoid pollution
03:01 < ws-client> <ChillerDragon> I always liked to fork to give credit to the upstream and somehow it felt clean even for non contribution forks that extend the project in their own way
03:02 < ws-client> <ChillerDragon> I am thinking about unforking https://github.com/ddnet-insta/ddnet-insta/ just for SEO -.-
09:51 < ws-client> <ChillerDragon> @patiga so wat i do in the mr?
09:51 < ws-client> <ChillerDragon> i know u like twstorage and stuff but should i revert the change to get the pipeline to fail again and then you do the storage stuff or whats your plan here?
09:52 < ws-client> <ChillerDragon> for the CI speeds we could build a Dockerfile that you can push to your gitlab registry that is used as a base in the CI so it does not have to install rust and so on. Why is CI speed a conern for you?
09:54 < bridge> <patiga> nah the ci ran into the error in less than 3 mins, no worries there
09:54 < ws-client> <ChillerDragon> yea less than 5min CI seems fine to me
09:54 < ws-client> <ChillerDragon> so wat about the path?
09:55 < bridge> <patiga> I just had ba dexperiences with CIs that ran for like 45 mins, where every change took very long
09:55 < ws-client> <ChillerDragon> ye same
09:55 < ws-client> <ChillerDragon> *caugh* ddnet *caugh*
09:55 < ws-client> <ChillerDragon> but you mostly don't have to wait for the CI i would say
09:55 < bridge> <patiga> gimme like 1 day for that function
09:56 < ws-client> <ChillerDragon> so you do it?
09:56 < bridge> <patiga> gimme 1 day and I'll add the function, yea
09:56 < bridge> <patiga> 1-2 days
09:56 < ws-client> <ChillerDragon> so i revert my code for now?
09:56 < ws-client> <ChillerDragon> i could also just change it to the debian path then you can merge a passing pipeline
09:57 < bridge> <patiga> only the small change where you try to guess the mapres path
09:57 < ws-client> <ChillerDragon> then it fails ..
09:57 < bridge> <patiga> everything else I'll merge directly when I'm back
09:57 < ws-client> <ChillerDragon> ok
09:57 < bridge> <patiga> if you dislike the ci failure, then we delay the mergw
09:58 < ws-client> <ChillerDragon> i dont mind i thought you do
09:58 < ws-client> <ChillerDragon> i was thinking you could just revert what i did when you swap it out with the new 
09:58 < ws-client> <ChillerDragon> but whatever ill reverted it pipeline is now failing :D 
11:01 < bridge> <Jupstar ✪> Hello chiller the ultimate tw unionist.
11:01 < bridge> <Jupstar ✪> Don't you agree that twgame should have a chance, for your ultimate goal to unite all teeworlds projects, too?
11:02 < bridge> <Jupstar ✪> 
11:02 < bridge> <Jupstar ✪> You could contribute a switch layer, or tune layer or speedup layer support:
11:02 < bridge> <Jupstar ✪> 
11:02 < bridge> <Jupstar ✪> https://gitlab.com/ddnet-rs/twgame
11:23 < bridge> <learath2> Do you have 0.7 support?
11:30 < bridge> <Jupstar ✪> That will be chillers task too ofc
11:30 < bridge> <Jupstar ✪> Unite everything into a big mono repo
11:31 < bridge> <Jupstar ✪> 40 million lines of code. linux kernel looks like a joke next to it
11:34 < bridge> <learath2> Sorry, no support for you if you don't support the holy 0.7
11:37 < bridge> <totar> make the server send the protocol as wasm, then that's no longer the client's problem xd
11:38 < bridge> <Jupstar ✪> xd
12:14 < bridge> <meloƞ> :monkaStop: :monkaStop:
12:15 < bridge> <meloƞ> @jupeyy_keks I'll add colored lasers, colored broadcasts and 0.7 skins :gigachad:
12:17 < bridge> <learath2> I'll contribute 0.5 support. The very best version
12:18 < bridge> <meloƞ> 0.4 pls ty
12:21 < bridge> <Jupstar ✪> colored lasers could be really cool for fng xd
12:21 < bridge> <meloƞ> I could actually look into it if you want - no proper hud yet tho
12:21 < bridge> <Jupstar ✪> I'll do fng support anyway 😄
12:21 < bridge> <meloƞ> 👍:cat_smug:
12:22 < bridge> <Jupstar ✪> I'd love to see if people support twgame tho. It still needs lot of work.
12:22 < bridge> <Jupstar ✪> A launcher, to see if it works out (e.g. how fast game starts etc.) would be good to know too
12:22 < bridge> <Jupstar ✪> I'd love to see that people support twgame tho. It still needs lot of work.
12:22 < bridge> <Jupstar ✪> A launcher, to see if it works out (e.g. how fast game starts etc.) would be good to know too
12:23 < bridge> <meloƞ> If you don't mind the launcher written in go - I have a really fckn interesting story to tell you
12:23 < bridge> <meloƞ> :gigachad: :KEKW:
12:23 < bridge> <Jupstar ✪> I mean if at least one maintainer can read/write go
12:23 < bridge> <Jupstar ✪> why not
12:23 < bridge> <Jupstar ✪> It should run on every potato pc tho
12:23 < bridge> <meloƞ> Lea and milkeey are working professionally with go iirc
12:24 < bridge> <meloƞ> @learath2 how stable is golang on old machines? Let's say towards debian and windows 7 :owo:
12:25 < bridge> <learath2> Who knows, I only run it on ubuntu 14 and gentoo
12:25 < bridge> <Jupstar ✪> Ah I don't mean old OS
12:25 < bridge> <Jupstar ✪> I mean old GPUs
12:26 < bridge> <meloƞ> Yeah I realized you meant hardware
12:26 < bridge> <Jupstar ✪> It shouldn't require modern backends
12:26 < bridge> <meloƞ> I'll look into it later when I'm home
12:26 < bridge> <learath2> For go 1.21 it's Windows 10 or later
12:26 < bridge> <Jupstar ✪> We only support Win10 anyway
12:26 < bridge> <Jupstar ✪> That isn't the issue
12:26 < bridge> <learath2> For go 1.20 it's win7 or later
12:27 < bridge> <fokkonaut> Teeworlds 0.8 is out
12:27 < bridge> <learath2> Why does the launcher care anyway? I'm sure there is a ui library out there for go that supports all the way back to xp sp3
12:28 < bridge> <Jupstar ✪> Yeah that's basically the exact reason. I don't want a launcher that prevents OGL 1.x users to launch the game.
12:28 < bridge> <Jupstar ✪> There are defs modern UI solutions that use OpenGL 3.3+
12:30 < bridge> <meloƞ> I'm currently using lyne, now idea how backwards compat this is towards older hardware
12:30 < bridge> <meloƞ> I'm currently using lyne, no idea how backwards compat this is towards older hardware
12:31 < bridge> <learath2> Why are we getting a launcher anyway btw? One of these?
12:31 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1283011985801478205/conf.png?ex=66e17186&is=66e02006&hm=05288165e35082aa9cd13ead00d657cba2208338944cfd9f6e49f97f7d23f46b&
12:32 < bridge> <wats> the forest launcher
12:32 < bridge> <matodor> @patiga do you have script to merge map images to one big atlas and replace quads on map with this atlas?
12:32 < bridge> <Jupstar ✪> Well I want to replace the main menu, with a launcher instead.
12:32 < bridge> <Jupstar ✪> 
12:32 < bridge> <Jupstar ✪> The launcher can catch crashes
12:32 < bridge> <Jupstar ✪> The launcher should have a "skip launcher" button to not trigger ppl
12:32 < bridge> <Jupstar ✪> 
12:33 < bridge> <Jupstar ✪> and then we could have a downloader for other versions
12:33 < bridge> <Jupstar ✪> and also do breaking changes aka ddnet-rust version xdd
12:33 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1283012318241882152/image.png?ex=66e171d5&is=66e02055&hm=35067ccd9d889ae7682831c5f99a7546d01acc6deb4b720e9f93aa2a0698b158&
12:33 < bridge> <meloƞ> I thought like a launcher with embedded terminal output, startup, performance, debugging information etc outside the game - not a - start game launcher
12:33 < bridge> <Jupstar ✪> Well I want to replace the main menu, with a launcher instead.
12:33 < bridge> <Jupstar ✪> 
12:33 < bridge> <Jupstar ✪> The launcher can catch crashes
12:33 < bridge> <Jupstar ✪> Can edit config
12:33 < bridge> <Jupstar ✪> The launcher should have a "skip launcher" button to not trigger ppl
12:33 < bridge> <Jupstar ✪> 
12:33 < bridge> <Jupstar ✪> and then we could have a downloader for other versions
12:33 < bridge> <Jupstar ✪> and also do breaking changes aka ddnet-rust version xdd
12:33 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1283012318241882152/image.png?ex=66e171d5&is=66e02055&hm=35067ccd9d889ae7682831c5f99a7546d01acc6deb4b720e9f93aa2a0698b158&
12:33 < bridge> <Jupstar ✪> Lol
12:33 < bridge> <learath2> Will you hit me if I say I really disagree with that direction?
12:33 < bridge> <Jupstar ✪> What would be your suggestion?
12:34 < bridge> <learath2> One of these so we can help people with gfx issues change backends without going into the config by hand. This trampoline binary can also transparently handle updates fixing the issues we have all the time
12:35 < bridge> <Jupstar ✪> But how is that different to a launcher?
12:35 < bridge> <Jupstar ✪> To me that is a launcher just for graphics
12:36 < bridge> <learath2> There is significant graphics work involved with having a full launcher, then there is more significant work discussing how we can support stuff like "other versions"
12:36 < bridge> <Jupstar ✪> I'd claim that isn't far off of this:
12:36 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1270471820352552970/image.png?ex=66e14e56&is=66dffcd6&hm=00483184c62bf7b6783bc3b7624200835071a479d4af63b30356c5ef9971172d&
12:36 < bridge> <learath2> Then there is even more significant work discussing and implementing how we can incorporate 3rd party clients when people inevitably demand that
12:37 < bridge> <learath2> An almost always hidden trampoline is nice and safe. No discussions needed, a straight improvement that can be made without discussing anything with anyone
12:37 < bridge> <Jupstar ✪> But that are future plans.
12:37 < bridge> <Jupstar ✪> 
12:37 < bridge> <Jupstar ✪> As a first step it's simply replacing the ugly main menu ingame
12:37 < bridge> <Jupstar ✪> and adds crashpad
12:38 < bridge> <learath2> No politics about how taters client got in but xxxhackerguyxxx's client didn't and how ddnet maintainers are a cabal holding teeworlds hostage
12:38 < bridge> <Jupstar ✪> Well with other clients I didn't mean clients that are not from ddnet
12:38 < bridge> <learath2> I guess we disagree on that too. I don't think the main menu is that ugly
12:39 < bridge> <Jupstar ✪> Ok but it could be replaced with a launcher and serve the same functionality
12:40 < bridge> <learath2> But why? It's imo just extra work having to think about an entirely new gui and gui library
12:40 < bridge> <Jupstar ✪> Currently we already have a launcher from steam (which allows selecting different gfx backends).
12:40 < bridge> <Jupstar ✪> 
12:40 < bridge> <Jupstar ✪> So for most users this isn't really a worse experience than they have now
12:40 < bridge> <Jupstar ✪> Yes but end of the year I want to present an alternative version to ddnet
12:41 < bridge> <Jupstar ✪> And if ppl like it, then i'd also like to make it more discoverable
12:41 < bridge> <learath2> and I'm guessing you don't feel like having a main menu in your version?
12:41 < bridge> <Jupstar ✪> 100% not 😄
12:41 < bridge> <Jupstar ✪> I don't have any use for that
12:42 < bridge> <Jupstar ✪> A internal server directly starts when you clikc "LAN" anyway
12:42 < bridge> <Jupstar ✪> the editor can be accessed from the server browser
12:42 < bridge> <Jupstar ✪> the settings too
12:42 < bridge> <Jupstar ✪> A play button is useless af xd
12:42 < bridge> <Jupstar ✪> discord etc. can be in the launcher
12:42 < bridge> <learath2> So if ddnet also moves to a main-menuless UX you can just use that work instead
12:43 < bridge> <learath2> I guess that makes some sense. We could ask other people what they feel about the main menu
12:44 < bridge> <learath2> I personally think a game requires a main menu of sorts, just dropping people into a serverbrowser is overwhelming
12:44 < bridge> <matodor> :poggers::poggers::poggers: ask people what they want
12:45 < bridge> <learath2> We can but all the people that respond will just be power users that already know everything about the game and want to get into a server ASAP
12:45 < bridge> <milkeeycat> I like the main menu xd
12:45 < bridge> <Jupstar ✪> Tbh I also find it stupid we don't have a "Skip main menu" button
12:45 < bridge> <learath2> We do, for the nerds
12:46 < bridge> <Jupstar ✪> we had a PR for that and deen declined it
12:46 < bridge> <Jupstar ✪> Yeah in the settings
12:46 < bridge> <learath2> Yeah, just set it
12:46 < bridge> <Jupstar ✪> But very honestly, the main menu is nice for 5 starts
12:46 < bridge> <Jupstar ✪> afterwards it's just annoying
12:47 < bridge> <Jupstar ✪> We don't have like "load a save game" or smth
12:47 < bridge> <learath2> In all the time that the main menu has existed, I haven't once thought oh let me optimize out this one click from my UX
12:47 < bridge> <Jupstar ✪> that i'd consider useful
12:47 < bridge> <Jupstar ✪> or a "change your skin" directly in the main menu
12:47 < bridge> <Jupstar ✪> that gives it a bit of charm
12:47 < bridge> <Jupstar ✪> it's just 5 ugly buttons
12:47 < bridge> <Jupstar ✪> I don't understand why tho 😄
12:48 < bridge> <learath2> Just dropping someone into a serverbrowser feels wrong UX wise for a game. It feels more like you are using Usenet in the 80s
12:48 < bridge> <Jupstar ✪> But this game is 100% about multiplayer
12:49 < bridge> <milkeeycat> ddnet story mode when?
12:49 < bridge> <learath2> Fwiw all the 100% multiplayer games I can think about right now all have main menus
12:49 < bridge> <Jupstar ✪> Also, I know I am a hater, but i really find our main menu ugly.
12:49 < bridge> <Jupstar ✪> 
12:49 < bridge> <Jupstar ✪> If I start a game and it looks like this, I'd think it's a cheap game xD
12:50 < bridge> <learath2> rust, dayz, valorant, csgo
12:50 < bridge> <learath2> roblox
12:50 < bridge> <Jupstar ✪> but CSGO's isn't really a main menu is it?
12:50 < bridge> <Jupstar ✪> I mean it's different
12:50 < bridge> <Jupstar ✪> it has no "play, editor" buttons
12:50 < bridge> <learath2> It does have a play button to get into matchmaking
12:51 < bridge> <learath2> It has inventory and stuff, they don't drop you into the source server browser
12:51 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1283017006974631956/latest.png?ex=66e17633&is=66e024b3&hm=2c9777a506b62e0f51f7fa624c1cb3ec9292e780b173fdf9a75db3c8a8ce847d&
12:51 < bridge> <Jupstar ✪> Some launcher with fancy art can look good too, I really like larians launcher, it's simplistic and looks professional
12:51 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1283017095793086465/image.png?ex=66e17648&is=66e024c8&hm=0fb88345ac0bb82571f430df57655201051682fc2f6bd60c191b5043296ccf7f&
12:52 < bridge> <learath2> It definitely can but I see no extra value to it unless we want to support launching old versions or different branches. If we remove the main menu it might however make sense to have a launcher like this
12:53 < bridge> <reitw> tf is this
12:53 < bridge> <learath2> It's Larian's launcher for their games
12:53 < bridge> <Jupstar ✪> Yeah I mean tbf, ofc I mean for different branches
12:53 < bridge> <chillerdragon> Yes I agree. But I’m not a pro coder who can hax some tw core physics rust crate.
12:54 < bridge> <Jupstar ✪> Yes you can
12:54 < bridge> <chillerdragon> Do you accept 0.7 support prs into dd-pg?
12:55 < bridge> <reitw> yes but this is out of the game, not ingame
12:55 < bridge> <reitw> like tarkov
12:55 < bridge> <reitw> https://cdn.discordapp.com/attachments/293493549758939136/1283017932733026395/image.png?ex=66e17710&is=66e02590&hm=cf4f433ab8a6ae7c6a125419728dafb3674de269ad87b784bf74c9ddf19948c6&
12:55 < bridge> <Jupstar ✪> Even better, I allow you to do backward compatibility changing stuff that makes the game BETTER than 0.7
12:55 < bridge> <reitw> you press play to start the game
12:55 < bridge> <Jupstar ✪> Sure, but the main menu would be gone for that
12:55 < bridge> <learath2> He doesn't want a main menu
12:55 < bridge> <Jupstar ✪> A trade basically
12:55 < bridge> <Jupstar ✪> Having both kinda sucks too
12:56 < bridge> <Jupstar ✪> I'd maybe still add a "back to launcher" ingame or smth, But basically the launcher should be the main menu
12:56 < bridge> <reitw> nah would be annoying af
12:56 < bridge> <Jupstar ✪> Once u click play, no need to go back to mainmenu/launcher
12:56 < bridge> <reitw> main menu ingame better
12:56 < bridge> <Jupstar ✪> What functionality does the main menu give you?
12:56 < bridge> <Jupstar ✪> editor is in the browser
12:57 < bridge> <Jupstar ✪> settings too
12:57 < bridge> <chillerdragon> milkeey has a job? I thought he is 12 yo genius hacker who is chilling in school during the day and is haxing during the night.
12:57 < bridge> <Jupstar ✪> demos too
12:57 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1283018430689312819/image.png?ex=66e17787&is=66e02607&hm=1a919eca740c7077274b801fe35c74047b39a13d8afef6b5efa856a0dd3a0200&
12:57 < bridge> <Jupstar ✪> run server could be automated
12:57 < bridge> <Jupstar ✪> or moved to LAN tab
12:57 < bridge> <reitw> game already loaded, i'd say that's the most important
12:57 < bridge> <reitw> if u have a launcher the game is definetly off
12:57 < bridge> <Jupstar ✪> Ok but how does that help?
12:58 < bridge> <learath2> I gtg do work I'm paid for. Overall:
12:58 < bridge> <learath2> - I disagree with not having a main menu at all
12:58 < bridge> <learath2> - I kinda agree that we need a binary to run before the actual client
12:58 < bridge> <learath2> - I definitely agree that if we have a full-fledged launcher with many buttons and bells and whistles, we shouldn't have a main menu, it's just too much time before getting into the game
12:58 < bridge> <reitw> I mean the menu like that is very intuitive for users
12:58 < bridge> <Jupstar ✪> If we have a "skip launcher", then it's the same
12:58 < bridge> <Jupstar ✪> just without main menu
12:58 < bridge> <totar> unity removed their default launcher because people hated it so much xd
12:58 < bridge> <totar> ingame settings are much better
12:59 < bridge> <Jupstar ✪> Ingame settings will stay
12:59 < bridge> <Jupstar ✪> It's only about the main menu
12:59 < bridge> <learath2> You misunderstand what he wants. Technically the launcher will only have one button and it'll launch you straight into the serverbrowser
12:59 < bridge> <Jupstar ✪> What does that give what a launcher or the game can't/doesn't already do
12:59 < bridge> <chillerdragon> Woah so late to mention that. Jopsti is speaking about the launcher since forever.
12:59 < bridge> <Jupstar ✪> It's not too late
13:00 < bridge> <totar> what is the purpose then?
13:00 < bridge> <Jupstar ✪> We can still replace the whole game at once
13:00 < bridge> <Jupstar ✪> :lol:
13:00 < bridge> <Jupstar ✪> Do allow selecting between nightly/ddpg/normal ddnet
13:00 < bridge> <Jupstar ✪> Whatever
13:00 < bridge> <learath2> Well there are many technical benefits, but the graphical part of the launcher I'm guessing he wants for the different versions/branches support
13:00 < bridge> <Jupstar ✪> And that too
13:01 < bridge> <totar> we already have that on steam if that's what you're talking about. I'm fine with that launcher
13:01 < bridge> <learath2> Idk how that would interact with steam btw. We disable our updater and stuff on steam
13:01 < bridge> <Jupstar ✪> Exactly that is a reason for a launcher
13:01 < bridge> <Jupstar ✪> The ppl already have this extra step anyway
13:01 < bridge> <Jupstar ✪> We can remove the steam thing again
13:01 < bridge> <learath2> We probably wouldn't be allowed to ship a launcher in steam that can just download arbitrary unsigned unaudited binaries from our servers
13:01 < bridge> <totar> you can remove the steam yourself already
13:02 < bridge> <Jupstar ✪> No need to download
13:02 < bridge> <learath2> Just ship them all? 😄
13:02 < bridge> <Jupstar ✪> Our steam directory is build to add all
13:02 < bridge> <totar> https://cdn.discordapp.com/attachments/293493549758939136/1283019706399457361/image.png?ex=66e178b7&is=66e02737&hm=dbbb8bed1bad720922be0d11d49418accbd34e0bafd8d48d0aae2c87651eeb26&
13:02 < bridge> <Jupstar ✪> Yeah the first download isn't fast, but all others will only download the diffs
13:02 < bridge> <Jupstar ✪> So I think generally that isn't too bad
13:02 < bridge> <Jupstar ✪> I mean that already is a bad workaround
13:02 < bridge> <totar> why tho?
13:03 < bridge> <totar> how is your different
13:03 < bridge> <totar> how is yours different
13:03 < bridge> <Jupstar ✪> Yeah good question
13:03 < bridge> <Jupstar ✪> Why is that different to a real launcher
13:03 < bridge> <learath2> But then we need to ship dozens of old versions of binaries, libraries
13:03 < bridge> <Jupstar ✪> ddpg can start in 200ms.. So there must be some GUI lib that is faster lmao
13:03 < bridge> <totar> "real launcher" is not a thing
13:03 < bridge> <Jupstar ✪> Ah I don't mean like a minecraft launcher
13:04 < bridge> <Jupstar ✪> Where you can download java 1 edition
13:04 < bridge> <learath2> Probably not unless you want one of those configurator screens. We can just winapi/xlib those and it would be quicker
13:04 < bridge> <totar> steam already does a good job of this imo.
13:04 < bridge> <totar> unless you also want the launcher for non-steam purpose
13:04 < bridge> <Jupstar ✪> That too
13:04 < bridge> <Jupstar ✪> It could be the downloader
13:04 < bridge> <Jupstar ✪> for updates
13:05 < bridge> <totar> steam is very good at that
13:05 < bridge> <learath2> So old versions can’t be downloaded, we can perhaps ship like a couple extra branches. Idk I think the steam version of this launcher would have to be gutted a lot
13:05 < bridge> <chillerdragon> That doesn’t sound very united when the official tw client can’t join your servers :c
13:05 < bridge> <learath2> Contriboot support
13:06 < bridge> <Jupstar ✪> I allow you to host a network layer that is not part of the upstream code, that translate everything
13:06 < bridge> <Jupstar ✪> For every client
13:06 < bridge> <Jupstar ✪> Ever
13:06 < bridge> <Jupstar ✪> I mean if steam policy doesn't allow binary downloads, but ppl want to download teewars, we _could_ still do that in the offline launcher
13:06 < bridge> <totar> I'm not sure it's allowed to have a launcher on steam that will auto download your updates since you're skipping the approval process.
13:07 < bridge> <Jupstar ✪> But this isn't even what i care about
13:07 < bridge> <Jupstar ✪> That's random discussion about what any launcher could do.
13:07 < bridge> <Jupstar ✪> Any launcher could also download Tater-client
13:07 < bridge> <Jupstar ✪> But I care about THE launcher first xd
13:07 < bridge> <Jupstar ✪> For steam this ofc isn't needed
13:08 < bridge> <totar> so then it's only for 0.5% of the playerbase
13:09 < bridge> <jxsl13> like android support
13:09 < bridge> <Jupstar ✪> First of all, before we add anything
13:09 < bridge> <Jupstar ✪> I will see if ppl even like what I did
13:09 < bridge> <Jupstar ✪> Otherwise that discussion is useless anyway
13:10 < bridge> <Jupstar ✪> But if ppl want to support me, a launcher and twgame and the main things I don't want to influence
13:10 < bridge> <Jupstar ✪> Twgame should be supported anyway
13:10 < bridge> <learath2> I would +1 a gfx configurator, a trampoline for crashes and updates
13:10 < bridge> <learath2> I would maybe +1 a launcher with stuff like old versions if it’s done well
13:10 < bridge> <learath2> I would definitely -1 a direct removal of the main menu
13:10 < bridge> <Jupstar ✪> Bcs it will allow teehistorian to demo 😄
13:10 < bridge> <totar> I thought we already have that
13:11 < bridge> <learath2> The original one is pretty subpar. But Zwelf’s new version is looking pretty good
13:12 < bridge> <totar> what is bad about it?
13:12 < bridge> <totar> or missing?
13:12 < bridge> <totar> tbh it sounds kinda not that hard
13:13 < bridge> <learath2> That's what everyone who attempts it says 😄
13:13 < bridge> <learath2> The original one is basically just a quick hack. It only has player positions and hooks, that's all
13:14 < bridge> <totar> ok well
13:14 < bridge> <totar> I could do better than that
13:14 < bridge> <murpi> https://i.imgur.com/kPdqTYf.png
13:14 < bridge> <murpi> 6000 FPS on a 4080 SUPER 😄
13:14 < bridge> <totar> what is Zwelf's missing?
13:14 < bridge> <chillerdragon> So a proxy that can be slapped in front of client or server to act as a bridge? Will the upstream server get support for proxies then? Where ips are forwarded and the server can kick players without kicking the entire proxy?
13:15 < bridge> <learath2> @murpi did Zwelf ever finish up a teehistorian2demo implementation? I think his approach should be generating perfect replays
13:16 < bridge> <learath2> @murpi did Zwelf ever finish up a teehistorian2demo implementation? I think his approach should be generating perfect demos
13:16 < bridge> <murpi> I don't think it's done yet. Last time I checked there was still practice implementation missing
13:17 < bridge> <murpi> But yeah, it's 1000% better than teehistorian2demo already
13:17 < bridge> <totar> you need special /practice code?
13:17 < bridge> <Jupstar ✪> Nice around as much as a gtx 760 on Linux
13:17 < bridge> <Jupstar ✪> 😬
13:17 < bridge> <Jupstar ✪> I think this is purely a CPU bottleneck
13:18 < bridge> <Jupstar ✪> melon has almost 20k fps on linux
13:18 < bridge> <Jupstar ✪> with rx 7900xtx
13:18 < bridge> <murpi> I'm on a Ryzen 7 7800x3D
13:18 < bridge> <Jupstar ✪> or smth
13:18 < bridge> <Jupstar ✪> Is that in entities btw?
13:19 < bridge> <murpi> No, without entities, on Linear 64p
13:19 < bridge> <Jupstar ✪> Let me see how much I get on rx 6900 + Ryzen 3950x
13:19 < bridge> <chillerdragon> I love the performance. I am tempted to switch to vanilla teeworlds client for gaming because ddnet became so slow to start. I switched from vscode to neovim primarily because of startup time. If yours is blazingly fast you got me. Sadly non teeish ui is a dealbreaker. I can’t handle the ui you made yet .\_.
13:19 < bridge> <totar> I think it's always cpu bottleneck
13:20 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1283024182397108224/image.png?ex=66e17ce2&is=66e02b62&hm=c912c6218ddf88beeb3dd2c6caab9b43ec53006123ae056ad11a84f22b006be5&
13:20 < bridge> <Jupstar ✪> ~4700 on Linux
13:20 < bridge> <Jupstar ✪> now let's see in ddpg xdd
13:20 < bridge> <murpi> Tee positions weren't updated whenever a team is in practice
13:20 < bridge> <totar> wha
13:21 < bridge> <totar> I'm not even sure why teehistorian2demo needs to be aware of /practice status
13:21 < bridge> <totar> does it need to run physics to get the full gamestate back from teehistorian?
13:22 < bridge> <learath2> Yes, that's how it recreates the demos
13:22 < bridge> <murpi> https://gitlab.com/ddnet-rs/twgame/-/tree/master
13:23 < bridge> <totar> it doesn't save positions of all tees every tick?
13:23 < bridge> <learath2> It does, that's how the original teehistorian2demo was able to create a crude representation
13:23 < bridge> <Jupstar ✪> Epyc gemer moment
13:23 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1283025112618242092/image.png?ex=66e17dc0&is=66e02c40&hm=5b48d8ea8635fe3a556abf7790d87963a4eb5cf31f1a4aa276ecd5a793389206&
13:23 < bridge> <Jupstar ✪> 6000 FPS
13:23 < bridge> <learath2> It does, that's how the original teehistorian2demo was able to create a crude demo
13:23 < bridge> <chillerdragon> How many tees?
13:24 < bridge> <Jupstar ✪> solo, but i was in team in cpp version too
13:24 < bridge> <Jupstar ✪> but this is ctf game mode tbf xd
13:24 < bridge> <totar> so it doesn't save other stuff?
13:24 < bridge> <totar> projectile positions?
13:24 < bridge> <meloƞ> Melons PC go BRRRR - around 800fps on pipe
13:24 < bridge> <Jupstar ✪> but on other news, i see a rendering bug
13:24 < bridge> <Jupstar ✪> 😬
13:24 < bridge> <meloƞ> I think we tested it together jupsti :kek:
13:25 < bridge> <Jupstar ✪> ah yeah
13:25 < bridge> <Jupstar ✪> didn't you say 10k
13:25 < bridge> <learath2> Those aren't saved
13:25 < bridge> <meloƞ> Was it 10K ? I made a screenshot
13:25 < bridge> <meloƞ> I thought it was much lowere
13:25 < bridge> <meloƞ> Will check when I'm home
13:26 < bridge> <learath2> https://github.com/ddnet/ddnet/blob/master/src/game/server/teehistorian.h you can see everything that is saved in a teehistorian file here
13:30 < bridge> <Jupstar ✪> It can only create a demo for all physics it knows
13:31 < bridge> <Jupstar ✪> https://gitlab.com/ddnet-rs/twgame
13:31 < bridge> <Jupstar ✪> In the readme there is an overview
13:31 < bridge> <totar> based on this header file I think you cannot just pipe the data into TW game and expect it to work
13:31 < bridge> <Jupstar ✪> Teehistorian are basically just input files
13:32 < bridge> <totar> I don't think you can rely only on inputs
13:32 < bridge> <learath2> Plus a little bit of extra
13:32 < bridge> <learath2> You can, there is no randomness to teeworlds
13:32 < bridge> <learath2> Well there is just a tiny bit, but we save the prng seed too
13:32 < bridge> <totar> ok except there is
13:32 < bridge> <meloƞ> given how dd-pg is structured I don't see why it shouldn't
13:33 < bridge> <totar> you need to account for chat commands
13:33 < bridge> <totar> which affect physics
13:33 < bridge> <learath2> Someone didn't spot `RecordConsoleCommand`
13:33 < bridge> <totar> swap, tp, team, kill, save, load, rescue
13:34 < bridge> <meloƞ> Apart from tp and rescue none of those affect physics or am I missing something
13:34 < bridge> <meloƞ> And kill obviously
13:34 < bridge> <learath2> Any console command, including chat commands are saved, unless they are marked with `CFGFLAG_NONTEEHISTORIC`
13:35 < bridge> <totar> idk how you don't think the others affect physics. maybe swap is the only one that doesnt
13:35 < bridge> <murpi> Feels good to be able to play CP2077 with PT now :greenthing:
13:35 < bridge> <learath2> Personal Trainer?
13:35 < bridge> <totar> path tracing
13:36 < bridge> <learath2> That makes more sense
13:36 < bridge> <meloƞ> I can see having a personal trainer in CP - screaming at you constantly
13:36 < bridge> <ryozuki> hi
13:36 < bridge> <learath2> Saves and Loads are explicitly saved too apart from just the command btw
13:37 < bridge> <meloƞ> Ryo I summarized your wiki pinged messages pls don't hate
13:37 < bridge> <ryozuki> its ok
13:37 < bridge> <learath2> ```c
13:37 < bridge> <learath2> void RecordPlayerSwap(int ClientId1, int ClientId2);
13:37 < bridge> <learath2> void RecordTeamSaveSuccess(int Team, CUuid SaveId, const char *pTeamSave);
13:37 < bridge> <learath2> void RecordTeamSaveFailure(int Team);
13:37 < bridge> <learath2> void RecordTeamLoadSuccess(int Team, CUuid SaveId, const char *pTeamSave);
13:37 < bridge> <learath2> void RecordTeamLoadFailure(int Team);
13:37 < bridge> <learath2> ```
13:37 < bridge> <totar> saves can summon projectiles into the game right?
13:37 < bridge> <learath2> They can't
13:37 < bridge> <ryozuki> @learath2 today i compiled firefox so fast i didnt notice
13:37 < bridge> <totar> oh ok
13:37 < bridge> <ryozuki> i was browsing for 5 mins and gentoo finished
13:37 < bridge> <totar> 1000% easier lmao
13:37 < bridge> <ryozuki> :gigachad:
13:38 < bridge> <learath2> Takes me 18 minutes
13:38 < bridge> <chillerdragon> Is it incremental builds?
13:38 < bridge> <ryozuki> nein
13:38 < bridge> <learath2> If you wanna give it a go feel free, the more teehistorian2demo implementations the better
13:38 < bridge> <chillerdragon> You compiled Firefox from scratch no cache in 5 mins?
13:38 < bridge> <ryozuki> 7900x3d
13:38 < bridge> <ryozuki> 8 mins to be honest
13:38 < bridge> <chillerdragon> Firefox more light weight than ddnet lol
13:39 < bridge> <ryozuki> 5.66ghz
13:39 < bridge> <ryozuki> 24 cores
13:39 < bridge> <chillerdragon> Woah
13:39 < bridge> <learath2> whoa
13:39 < bridge> <meloƞ> 7950X masterrace
13:39 < bridge> <chillerdragon> What cpu is that
13:39 < bridge> <vappy19> big one ! 😮
13:39 < bridge> <meloƞ> :justatest:
13:39 < bridge> <learath2> 24 real cores?
13:39 < bridge> <ryozuki> oh chiller has the poggest one right
13:39 < bridge> <ryozuki> 12 real iirc
13:39 < bridge> <chillerdragon> I thought so
13:40 < bridge> <learath2> Ok, that's more sensible
13:40 < bridge> <ryozuki> 64gb ram at 6000mhz, firefox sources were in a tmpfs on ram
13:40 < bridge> <chillerdragon> I was actively looking for the strongest single core cpu when buying my pc last time
13:40 < bridge> <chillerdragon> But time passed
13:40 < bridge> <ryozuki> wait 1 more amd gen
13:40 < bridge> <learath2> I really need to stop chatting here and do actual real work
13:40 < bridge> <ryozuki> no
13:40 < bridge> <meloƞ> no
13:40 < bridge> <chillerdragon> no
13:41 < bridge> <learath2> but if they fire me I can't ask for a recommendation letter
13:41 < bridge> <ryozuki> @learath2 one day ill get my threadripper
13:41 < bridge> <ryozuki> or epyc cpu
13:41 < bridge> <ryozuki> the epyc cpu has 1gb l3 cache
13:41 < bridge> <ryozuki> it only costs 10k
13:41 < bridge> <meloƞ> In Germany we call this a Schnäppchen
13:41 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1283029698284093441/image.png?ex=66e18205&is=66e03085&hm=d4957d3f09aee80af6c1e9a9e19bd4a21d4f43b85c3d923434a6abb47ebebcd3&
13:42 < bridge> <learath2> Get it now, go into debt
13:42 < bridge> <ryozuki> 192 threads
13:42 < bridge> <learath2> Also get 256g of ram
13:42 < bridge> <meloƞ> any rust application still building for 10 minutes :xd: :pepeW:
13:43 < bridge> <meloƞ> Cargo nightly has parallel build tho right?
13:43 < bridge> <meloƞ> Atleast something like that
13:43 < bridge> <ryozuki> rust is already paralel
13:43 < bridge> <chillerdragon> Yes but it breaks htop xd and if the max single core is worse than your current cpu it will bottle neck in all those single threaded moments
13:43 < bridge> <ryozuki> but the paralelism is limited to diferent crates
13:43 < bridge> <ryozuki> intra crate paralelism is nightly ye
13:43 < bridge> <meloƞ> Yeah I forgot the actual term
13:44 < bridge> <learath2> distcc compilation machine with a threadripper and a local 9950x3d for the single thread performance
13:44 < bridge> <totar> if I was making the teehistorian format I would design it so that every tick you re-initialize the tees from the state saved into teehistorian, then tick them by 1 and handle anything else that happens yourself. So basically remove all "event" based physics data. 
13:44 < bridge> <totar> 
13:44 < bridge> <totar> but maybe this is already what it does
13:45 < bridge> <chillerdragon> Yes that sounds good. But last time I used distcc it was a bit of a mess haha
13:46 < bridge> <learath2> Teehistorian was designed for MASS storage. Any extra state you save in there is an issue
13:46 < bridge> <learath2> Compressed we store more than 5TB of teehistorian files now
13:46 < bridge> <totar> well it's already saving excessive data by including any tee state at all
13:46 < bridge> <totar> you're already 90% of the way to my design data wise
13:47 < bridge> <learath2> Just the x and y position of a tee is not enough to regenerate the entire state of the tee
13:48 < bridge> <totar> it's probably 90% of the data though
13:48 < bridge> <totar> actually no
13:48 < bridge> <totar> the inputs are
13:49 < bridge> <learath2> I would be happy to check that later today but I would be very surprised if it's close to that
13:49 < bridge> <learath2> There could be one more solution though, if we just stored the entire state, every tick it would technically still compress very well
13:49 < bridge> <totar> I think the "figure it out later" plan was not good
13:50 < bridge> <learath2> but it's really hard to figure out what the "entire state" is with how spaghetti the ddnet code is
13:50 < bridge> <totar> hmm
13:50 < bridge> <totar> if you ignore saves it's a lot easier
13:51 < bridge> <learath2> Well we'd have lost a lot of runs while discussing what the "entire state" is. With this approach it's very obvious what is needed to recreate a run
13:52 < bridge> <totar> well inputs are the entire state
13:52 < bridge> <learath2> Nope, there is also the switch state
13:53 < bridge> <totar> can be derived from inputs
13:53 < bridge> <chillerdragon> I recommend backing up ssh keys if they are your only option to auth on the server. You don’t want to wipe your server just because you lost the key.
13:53 < bridge> <learath2> Now you are back to the exact design we have. Store the minimum needed to derive the state at every tick
13:53 < bridge> <milkeeycat> nice reply time
13:54 < bridge> <chillerdragon> Thank
13:54 < bridge> <milkeeycat> i have everything saved even tho i don't have any servers 😏
13:55 < bridge> <chillerdragon> If it’s just for git clouds it doesn’t matter too much because you can reset them
13:55 < bridge> <totar> the issue with saving just inputs is that you risk desyncing if you forget anything.
13:55 < bridge> <totar> which is really hard with /save
13:55 < bridge> <totar> but they would be really small
13:57 < bridge> <learath2> What could you really forget even? There is the client raw input, there are game netmsgs and there console commands, some of which alter the state asychronously for which you need extra support
13:58 < bridge> <learath2> What could you really forget even? There is the client raw input, there are game netmsgs and their console commands, some of which alter the state asychronously for which you need extra support
13:59 < bridge> <milkeeycat> good news, i didn't block hacked after i uploaded my passwords to github, who could've thought that nobody gives a fuck about random person xddd
14:00 < bridge> <totar> not much really
14:01 < bridge> <totar> but it's very different from the other idea I had where it's basically "stateless" in that you could scrub the teehistoiran file with minimal inaccuracies after a long enough playback period
14:04 < bridge> <totar> the only hard part is /save. for everything else you can just trick the server into thinking it's running a real game while feeding it inputs/physics commands
14:04 < bridge> <chillerdragon> Wot passwords
14:05 < bridge> <chillerdragon> You mean encrypted tho right?
14:05 < bridge> <milkeeycat> ye
14:05 < bridge> <chillerdragon> Yea epic win
14:06 < bridge> <milkeeycat> I get hibbie jibbies every time I push to that repo :justatest:
14:09 < bridge> <totar> basically minimum state for playback without physics vs minimum state playback with physics.
14:17 < bridge> <Jupstar ✪> Bro Tater do you ever sleep
14:24 < bridge> <jxsl13> potato never sleeps
14:26 < bridge> <Jupstar ✪> You want to tell me Tater's PF is meant to be a potato? xd
14:28 < bridge> <jxsl13> Tater = potato
14:28 < bridge> <jxsl13> see lord of the rings
14:29 < bridge> <jxsl13> https://cdn.discordapp.com/attachments/293493549758939136/1283041625182044202/image0.gif?ex=66e18d21&is=66e03ba1&hm=19808bb2c99beefd79dfbc97b50433a6652d3a962606041aeb226eaaf77cca5a&
14:29 < bridge> <Jupstar ✪> Epyc
14:29 < bridge> <Jupstar ✪> Should rewatch in english
14:29 < bridge> <jxsl13> best nick
14:29 < bridge> <learath2> With `scrcpy` I have reached a new level of laziness. I now don't even have to get up and grab my phone
14:30 < bridge> <Jupstar ✪> xd
14:30 < bridge> <Jupstar ✪> There is QtScrcpy and it allows to map keyboard presses to the touch locations.
14:30 < bridge> <Jupstar ✪> 
14:30 < bridge> <Jupstar ✪> With that you can play mobile games like pokemon unite with keyboard xdd
14:51 < bridge> <timakro> do these kind of links work on windows? ddnet://192.168.0.103:8303
14:51 < bridge> <timakro> 
14:51 < bridge> <timakro> i got this by clicking "copy info" in the server info tab
14:51 < bridge> <DDNet> 192.168.0.103:8303 is not a DDraceNetwork or Community server.
14:51 < bridge> <timakro> maybe we could make them work on linux with xdg-open and `MimeType=x-scheme-handler/ddnet` in the .desktop entry
14:53 < bridge> <timakro> hmmm i see you already did this but it doesn't work with the steam game because i suppose we can't control the .desktop file there
14:56 < bridge> <learath2> We have a steam version of the connect link too, but yeah those don't really work
14:57 < bridge> <timakro> do they work in windows?
14:57 < bridge> <robyt3> yes
14:58 < bridge> <robyt3> I didn't find any way to do it automatically on non-Windows, see #6072
14:58 < bridge> <DDNet> https://github.com/ddnet/ddnet/issues/6072
14:58 < bridge> <timakro> do you know on top of your head if it works with a domain instead of an ip?
14:59 < bridge> <milkeeycat> it just connects to whatever string you have after `ddnet://`
14:59 < bridge> <murpi> https://ddnet.org/news/ddnet-links/
14:59 < bridge> <murpi> It works with domains too
15:00 < bridge> <timakro> awesome thx
15:50 < bridge> <milkeeycat> chillerdragon: any recommendations on where to start with connecting a tee to a server, i know nothing about ddnet's networking xd
15:51 < bridge> <learath2> You first need to implement the packer
15:53 < bridge> <milkeeycat> noted, thanks!
15:54 < bridge> <milkeeycat> brb in 5 days :pepeW:
16:26 < bridge> <mark_123.med> Го
16:49 < bridge> <matodor> https://chillerdragon.github.io/teeworlds-protocol/
17:23 < bridge> <ryozuki> https://blog.cloudflare.com/pingora-saving-compute-1-percent-at-a-time/
17:37 < bridge> <zhn> am i late
17:37 < bridge> <zhn> https://lobste.rs/s/ixb3v7/nix_2_24_is_vulnerable_remote_privilege
17:38 < bridge> <zhn> @ryozuki @blaiszephyr
17:38 < bridge> <meloƞ> always late
17:38 < bridge> <zhn> i wonder if ryo has his rss news eater on second screen
17:39 < bridge> <meloƞ> https://tvix.dev/
17:39 < bridge> <meloƞ> :kekw.
17:39 < bridge> <meloƞ> :kekw:
17:39 < bridge> <meloƞ> why is everyone rewriting everything in rust ._:
17:44 < bridge> <reitw> https://cdn.discordapp.com/attachments/293493549758939136/1283090844840235028/images.jpg?ex=66e1baf8&is=66e06978&hm=832ae63f4631c21131e1a00eae1993c8965910d81d40264c3df96fe0edec82a1&
17:49 < bridge> <pandorka77__45128> пр
18:42 < bridge> <milkeeycat> @learath2 are you `nullptr`, `nil` or `NULL` person?
18:46 < bridge> <learath2> `NULL` in C, `nullptr` in C++, `NULL` if I were making my own language. Short, to the point, stands out
18:47 < bridge> <meloƞ> `int *var = {NULL};`
18:47 < bridge> <milkeeycat> I find `nil` ugly xd
18:47 < bridge> <meloƞ> `if != nil` is weird syntax but its straight to the point
18:47 < bridge> <meloƞ> `if x != nil` is weird syntax but its straight to the point
18:47 < bridge> <meloƞ> go masterrace
18:47 < bridge> <peter0x44> you're missing `0`
18:48 < bridge> <milkeeycat> `NULL` is typedefef 0 :santatrollet:
18:48 < bridge> <meloƞ> isnt NULL just a const int
18:48 < bridge> <milkeeycat> `NULL` is typedefed 0 :santatrollet:
18:48 < bridge> <peter0x44> most of the time it is something like (void*)0
18:49 < bridge> <meloƞ> so just a cast to void* - damn
18:49 < bridge> <peter0x44> if you write 0 you don't have to include stddef.h, that's why I do it
18:49 < bridge> <peter0x44> but with C23 bringing nullptr no more
18:49 < bridge> <meloƞ> hey we dont code in c23 yet - you need to wait atleast 10 years
18:49 < bridge> <peter0x44> if you write 0 you don't have to include stddef.h, that's why I do it
18:49 < bridge> <peter0x44> but with C23 bringing nullptr no more need
18:50 < bridge> <learath2> 0 is a null pointer constant so it's very legal
18:50 < bridge> <milkeeycat> But keyword is cooler 😏
18:51 < bridge> <meloƞ> use `NONE` :kekw:
18:51 < bridge> <milkeeycat> undefined
18:52 < bridge> <meloƞ> `let x: i32 = NONE;`
18:52 < bridge> <meloƞ> `let x: i32 = NU_UH;`
18:53 < bridge> <milkeeycat> Btw now after i changed syntax for variable declarations i can infer types from from expressions
18:53 < bridge> <milkeeycat> Btw now after i changed syntax for variable declarations i can infer types from some expressions
18:54 < bridge> <meloƞ> daily nixOS meme - poor dude never came back
18:54 < bridge> <meloƞ> https://cdn.discordapp.com/attachments/293493549758939136/1283108235447894018/image.png?ex=66e1cb2a&is=66e079aa&hm=b0ccc637e95e9a331d22b6fb6ec28ea0e0d8d96bcf9b3d572f78338b37820535&
18:54 < bridge> <Ewan> that’s me
18:55 < bridge> <Ewan> sometimes in ts I say “ok brb ill reboot” and won’t be back for hours
18:55 < bridge> <meloƞ> Hahhaahah - i wanted to debug something with Rei so i said "hey let me screenshare" - and i messed up something in my config, i said "wait let me reroll really quick"... it took me 2 hours
18:55 < bridge> <Ewan> yep
18:57 < bridge> <meloƞ> i love this discord very much
18:57 < bridge> <meloƞ> https://cdn.discordapp.com/attachments/293493549758939136/1283108989134966815/image.png?ex=66e1cbde&is=66e07a5e&hm=06582a05461ebe1cffa803c87e15bd9a48cac777e09d57f65ba5e90914d6ff9e&
18:57 < bridge> <zhn> does any compiler fully support c23?
18:57 < bridge> <peter0x44> I don't think so
18:57 < bridge> <peter0x44> clang 19 maybe
18:57 < bridge> <zhn> hm will test
18:57 < bridge> <zhn> thank
18:57 < bridge> <meloƞ> nah, i think gcc is furthest with c23 support
18:57 < bridge> <meloƞ> but none are "fully supporting" it yet
18:58 < bridge> <peter0x44> probably both support `nullptr` at this time
18:58 < bridge> <milkeeycat> is it a keyword now?
18:58 < bridge> <zhn> nop
18:59 < bridge> <zhn> lazy ass msvc dev will not even support c89
18:59 < bridge> <zhn> fuck them
18:59 < bridge> <Ewan> rip
18:59 < bridge> <meloƞ> @gerdoe https://en.cppreference.com/w/c/compiler_support/23
19:00 < bridge> <zhn> i did unironically try to get all my desktop stuff written in rust or c
19:00 < bridge> <zhn> rofi le sux
19:00 < bridge> <zhn> le python
19:01 < bridge> <zhn> no wonder msvc doesn't support even 10 features of c23 xd
19:02 < bridge> <Ewan> rofi hangs my desktop when I use it
19:02 < bridge> <Ewan> so I just use wofi even tho it also kinda sucks
19:03 < bridge> <zhn> eh im on xorg
19:03 < bridge> <milkeeycat> dmenu enjoyer here
19:03 < bridge> <zhn> dmenu is as simple as it is
19:03 < bridge> <zhn> ye i use it too
19:03 < bridge> <zhn> funny enough it doesn't support monitor centring
19:04 < bridge> <zhn> and some freebsd revision of dmenu has it
19:04 < bridge> <zhn> :justatest: '
19:04 < bridge> <Ewan> wtf
19:50 < bridge> <patiga> no, not yet :)
19:56 < bridge> <Jupstar ✪> nice i have the most fame PR xddddd
19:56 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1283123940574760980/image.png?ex=66e1d9ca&is=66e0884a&hm=405fd0f68eaf8640a1adf441b78e39cab139a5d2135b0f078e63687e2d6178f2&
19:57 < bridge> <Jupstar ✪> Also funny that Robytes touch controls are already in the list
19:57 < bridge> <Jupstar ✪> even tho that pr only exists like few weeks
20:02 < bridge> <Jupstar ✪> @robyt3 do you still plan any bigger change to the touch controls, or do we want to merge this soon?
20:02 < bridge> <freazteaz> @jupeyy_keks  check ticket 1102 pls
20:03 < bridge> <Jupstar ✪> I have no rights to see tickets
20:03 < bridge> <freazteaz> pidor
20:03 < bridge> <Jupstar ✪> i am not gay bcs i cannot see tickets
20:03 < bridge> <freazteaz> xuila ebanaya
20:03 < bridge> <freazteaz> ?
20:04 < bridge> <Jupstar ✪> Ask a moderator or admin or simply wait
20:15 < bridge> <robyt3> I'd like to also make the controls adjustable without exporting to clipboard, but I guess we could also merge what we have already soon. The json format seems to works, including the positioning on the 1,000,000² grid. I'll have some more time next week to finish it up.
20:15 < bridge> <robyt3> I'd like to also make the controls adjustable without exporting to clipboard, but I guess we could also merge what we have already soon. The json format seems to work, including the positioning on the 1,000,000² grid. I'll have some more time next week to finish it up.
20:21 < bridge> <cyberfrighter> is there an ios version of ddnet
20:22 < bridge> <Jupstar ✪> no
20:23 < bridge> <cyberfrighter> Ok, how about a 32bit android, i forgot if there was one
20:23 < bridge> <Jupstar ✪> there is
20:23 < bridge> <cyberfrighter> got link?
20:24 < bridge> <meloƞ> https://discord.com/channels/252358080522747904/1277345584080097320
20:25 < bridge> <meloƞ> check pinned messages
20:26 < bridge> <matodor> xd
20:26 < bridge> <matodor> https://cdn.discordapp.com/attachments/293493549758939136/1283131565370511370/image.png?ex=66e1e0e4&is=66e08f64&hm=4911aa4fda801bc9c3380c7193ffff1cf442ac1c877703bcc6675856a61688da&
20:28 < bridge> <matodor> https://cdn.discordapp.com/attachments/293493549758939136/1283131903247122554/DDNet_assert_log_2024-09-10_23-26-39_26144.txt?ex=66e1e135&is=66e08fb5&hm=357a6cf3d0dce7ade4feb497cf1cb5f16a2ed4c7ebb718725494e90a09e61709&
20:28 < bridge> <Jupstar ✪> yeah
20:28 < bridge> <Jupstar ✪> if you want, you can provide a fix to the editor
20:28 < bridge> <Jupstar ✪> that handles this situation more gracefully
20:29 < bridge> <robyt3> Like revert #8670 ?
20:29 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/8670
20:29 < bridge> <robyt3> Unused :justatest:
20:29 < bridge> <Jupstar ✪> auto convert to rgba
20:29 < bridge> <Jupstar ✪> xd
20:29 < bridge> <Jupstar ✪> well idc
20:30 < bridge> <robyt3> Prevent loading RGB images
20:30 < bridge> <Jupstar ✪> i mean auto converting rgb to rgba with alpha full opacity doesnt sound too bad
20:31 < bridge> <matodor> i want use more 64 images in map, or which optimal atlas image size i must use? i just tried add empty white bg PNG 2048x2048, everything worked fine, created a quad in the editor, and then after some time the game crashed
20:31 < bridge> <Jupstar ✪> since this is only for editor isnt it
20:31 < bridge> <Jupstar ✪> u cannot add more than 64 images
20:31 < bridge> <Jupstar ✪> this is the hard limit bcs of backward compatilibity xd
20:32 < bridge> <Jupstar ✪> 64 2048x2048 images use:
20:32 < bridge> <Jupstar ✪> (64×2048×2048×4)×2
20:32 < bridge> <Jupstar ✪> =
20:32 < bridge> <Jupstar ✪> 2147483648
20:32 < bridge> <Jupstar ✪> bytes of vram
20:32 < bridge> <Jupstar ✪> i'd recommend not doing that
20:32 < bridge> <Jupstar ✪> except your player base uses modern GPUs only
20:33 < bridge> <matodor> you recommend doing (64×1024×1024×4)×2×N where N my atlases number?)
20:34 < bridge> <matodor> oh i dont see 64 images in you message
20:34 < bridge> <Jupstar ✪> dunno, in at lases you can do what you want
20:34 < bridge> <Jupstar ✪> dunno, in atlases you can do what you want
20:34 < bridge> <matodor> for now i need only one 2048x2048 atlas
20:34 < bridge> <Jupstar ✪> oh ok
20:34 < bridge> <matodor> oh i dont seen 64 images in you message
20:35 < bridge> <matodor> oh i dont seen "64 images" in you message
20:35 < bridge> <matodor> oh I didn't see "64 images" in you message
20:36 < bridge> <matodor> can you recommend a tool that will automatically generate an atlas? where you can set the space between images
20:36 < bridge> <Jupstar ✪> generally should be fine, but i bet there are few ppl that only have pcs with 1024x1024 max texture size.
20:36 < bridge> <Jupstar ✪> 
20:36 < bridge> <Jupstar ✪> ddnet will then downscale and it will look like shit
20:36 < bridge> <Jupstar ✪> other than that should be fine
20:36 < bridge> <Jupstar ✪> 4x 1024x1024 is safer tho
20:37 < bridge> <Jupstar ✪> no idea tbh
20:37 < bridge> <matodor> ok thx
21:32 < bridge> <cellegenrih> @0xdeen may I be allowed to use VPNs on ddnet servers? without it my shitty internet will just throw out unavailable DNS connections which make me disconnect. :justatest:
21:32 < bridge> <cellegenrih> It happens randomly and I ain't going to play knowning that my internet will go out any moment during runs
21:33 < bridge> <cellegenrih> if you're wondering, I'm using Cloudflare WARP
22:33 < bridge> <jxsl13> get cheap vps
22:33 < bridge> <jxsl13> setup vpn, get single ip whitelisted
22:36 < bridge> <jxsl13> given, that even fixes your problem
22:36 < bridge> <jxsl13> on the other hand, you might want to analyze what's the actual problem. Change your dns server in your router?
22:37 < bridge> <jxsl13> to like 8.8.8.8 or 9.9.9.9, 1.1.1.1, etc.
23:53 < bridge> <cellegenrih> That won't work for my network, Cloudflare WARP redirects my connection in a way which is more stable, than using only DNS
23:59 < bridge> <patiga> rescue chat commands are not implemented in twgame yet iirc (@zwelf2 ?)
23:59 < bridge> <patiga> save and load is indeed implemented
23:59 < bridge> <patiga> though twgame does recognize whenever rescue mode starts and ends. in general, teehistorian files should be sufficient to properly replay ddnet gameplay
23:59 < bridge> <patiga> the player positions are in there, to be able to validate a replay implementation afaik. they also record some bugs in ddnet, which can't be explained as of yet (e.g. https://github.com/ddnet/ddnet/issues/8172). the positions simply help nicely with any inconsistencies that can pop up :)
23:59 < bridge> <patiga> they also make it a **lot** easier to work with teehistorians files with scripts
