00:42 < bridge> <chillerdragon> Finally
02:55 < bridge> <dynamofox> Meow, figured out that ddnet has a kinky checksumming system in place (in plain sight) which measures various a number of code related parameters both at runtime and build time.
02:55 < bridge> <dynamofox> Kinda surprised to see that it goes to the point of allowing the server to retrieve the hash of arbitrary sections of the game image on the fs lol
02:55 < bridge> <dynamofox> 
02:55 < bridge> <dynamofox> At a glance it seems like TeeFusion is probing at join time both one of such parameters and retrieving the hash of a section of the executable.
02:55 < bridge> <dynamofox> 
02:55 < bridge> <dynamofox> I hope that not many other servers are going to take on the business of blocking clients on the simple basis that they don't match 1:1 the official executables ‚òî
07:41 < bridge> <milkeeycat> ez
09:50 < bridge> <avolicious> Sounds worth if you dont want other clients than DDNet's on your server ^^
10:44 < bridge> <melo∆û> i love this github roast thingie
10:44 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1330835210660741170/image.png?ex=678f6c5f&is=678e1adf&hm=50bf543234c31f7bb6568e93aaa1315bf0df41c6f8b7903bff9a74e91549e813&
11:03 < bridge> <screeeny> i thought this is supposed to roast you, not every DDnet Player :feelsbadman:
11:25 < bridge> <chairn> wtf is that üòÑ ?
11:41 < bridge> <milkeeycat> https://github-roast.pages.dev/
11:51 < bridge> <avolicious> To my fellow open source contributors. GNU AGPLv3 is currently the most strict GPL, no? It forces any code-change to be open source
11:58 < bridge> <Jupstar ‚ú™> You can probably craft something more restrict.
11:58 < bridge> <Jupstar ‚ú™> 
11:58 < bridge> <Jupstar ‚ú™> But AGPL disallows servers to be closed source, even if not distributed. They basically say that hosting the server is a service, and that service is a distributed.
11:59 < bridge> <Jupstar ‚ú™> You can probably craft something more restrict.
11:59 < bridge> <Jupstar ‚ú™> 
11:59 < bridge> <Jupstar ‚ú™> But AGPL disallows servers to be closed source, even if the binary is not distributed. They basically say that hosting the server is a service, and that service is a distributed.
11:59 < bridge> <Jupstar ‚ú™> You can probably craft something more restrict.
11:59 < bridge> <Jupstar ‚ú™> 
11:59 < bridge> <Jupstar ‚ú™> But AGPL disallows servers to be closed source, even if the binary is not distributed. They basically say that hosting the server is a service, and that service is a distribution.
12:01 < bridge> <ryozuki> https://github.com/rust-lang/rust/pull/116161
12:02 < bridge> <ryozuki> in 31 days rust 2024 releases
12:04 < bridge> <zeral123> Is there any way to run ddnet client on an ios device? preferably without using an emulator
12:05 < bridge> <Jupstar ‚ú™> no
12:05 < bridge> <ryozuki> https://koto.dev/
12:05 < bridge> <Jupstar ‚ú™> wasm
12:24 < bridge> <avolicious> Ah, thanks! We are currently discussing in our company about open-sourcing & what license to choose from
12:25 < bridge> <ryozuki> it is the one that enforces the 4 user rights the most best
12:25 < bridge> <ryozuki> so yes its the best license
12:25 < bridge> <Jupstar ‚ú™> debatable üò¨
12:25 < bridge> <ryozuki> üò¨
12:25 < bridge> <ryozuki> u need to be pragmatic in this world https://www.gnu.org/philosophy/pragmatic.en.html
12:26 < bridge> <Jupstar ‚ú™> AGPL is not pragmatic imo
12:26 < bridge> <ryozuki> @avolicious what u open sourcing?
12:26 < bridge> <ryozuki> it is
12:27 < bridge> <Jupstar ‚ú™> For pragmatism, you need some form of "i dont care"
12:29 < bridge> <ryozuki> gnu has a ideal and to apply this ideal it is pragmatism
12:29 < bridge> <ryozuki> gnu has a ideal and to apply this ideal it needs pragmatism
12:29 < bridge> <Jupstar ‚ú™> isnt that idealismus xD
12:29 < bridge> <avolicious> A small VPN helper for MacOS üòÑ Its just a side project, but I would like to setup a basic open source contribution guideline ^^
12:29 < bridge> <Jupstar ‚ú™> lism*
12:29 < bridge> <ryozuki> >  Every decision a person makes stems from the person's values and goals. People can have many different goals and values; fame, profit, love, survival, fun, and freedom, are just some of the goals that a good person might have. When the goal is a matter of principle, we call that idealism.
12:29 < bridge> <ryozuki> > 
12:29 < bridge> <ryozuki> > My work on free software is motivated by an idealistic goal: spreading freedom and cooperation. I want to encourage free software to spread, replacing proprietary software that forbids cooperation, and thus make our society better.
12:29 < bridge> <ryozuki> > 
12:29 < bridge> <ryozuki> > That's the basic reason why the GNU General Public License is written the way it is‚Äîas a copyleft. All code added to a GPL-covered program must be free software, even if it is put in a separate file. I make my code available for use in free software, and not for use in proprietary software, in order to encourage other people who write software to make it free as well. I figure that since proprietary software developers use copyright to stop us 
12:29 < bridge> <ryozuki> > 
12:29 < bridge> <ryozuki> > Not everyone who uses the GNU GPL has this goal. Many years ago, a friend of mine was asked to rerelease a copylefted program under noncopyleft terms, and he responded more or less like this:
12:29 < bridge> <ryozuki> > 
12:30 < bridge> <ryozuki> >     ‚ÄúSometimes I work on free software, and sometimes I work on proprietary software‚Äîbut when I work on proprietary software, I expect to get paid.‚Äù 
12:30 < bridge> <ryozuki> > 
12:30 < bridge> <ryozuki> > He was willing to share his work with a community that shares software, but saw no reason to give a handout to a business making products that would be off-limits to our community. His goal was different from mine, but he decided that the GNU GPL was useful for his goal too.
12:30 < bridge> <ryozuki> > 
12:30 < bridge> <ryozuki> > If you want to accomplish something in the world, idealism is not enough‚Äîyou need to choose a method that works to achieve the goal. In other words, you need to be ‚Äúpragmatic.‚Äù Is the GPL pragmatic? Let's look at its results.
12:30 < bridge> <avolicious> But its written in rust üòÑ
12:30 < bridge> <ryozuki> thats good
12:30 < bridge> <ryozuki> @avolicious my work makes us use tailscale to connect to ssh
12:31 < bridge> <ryozuki> i only use it on the m3 i got tho
12:31 < bridge> <avolicious> Its not about our VPN, its more about the clients vpn's
12:31 < bridge> <avolicious> Their setups are something pretty weird
12:31 < bridge> <ryozuki> happens xd
12:32 < bridge> <avolicious> Haha, at their scale I would assume their setup is somehow efficient
12:34 < bridge> <ryozuki> neat, they increased the tax on electricity
12:34 < bridge> <ryozuki> from 10% to 21%
12:34 < bridge> <ryozuki> epic capitalism
12:34 < bridge> <avolicious> But KoG also goes open source, just no contributions yet ^^ https://github.com/KoG-teeworlds/maps-workflow
12:34 < bridge> <ryozuki> finally
12:34 < bridge> <ryozuki> ah but not the server? xd
12:35 < bridge> <Jupstar ‚ú™> when do you give me access to your m3?
12:35 < bridge> <Jupstar ‚ú™> so i can add macos support lmao
12:35 < bridge> <ryozuki> xD
12:38 < bridge> <avolicious> The gameserver itself is not planned as of now. But step by step
12:39 < bridge> <avolicious> To be fair, the gameserver doesnt differ a lot game-wise from ddnet. Physics and so on are still upstream compliant
12:56 < bridge> <milkeeycat> üò¨
12:56 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1330868526671462471/image.png?ex=678f8b67&is=678e39e7&hm=353b6fb100435e28051800aea10b07bfa5629532a8ebb5bf6b7a4064166cbc73&
13:37 < bridge> <melo∆û> can i have the ddnet server use a map file from a completly different path?
13:37 < bridge> <melo∆û> 
13:37 < bridge> <melo∆û> trying to get my VPS to allow hot-reloading the server when i save the .map file i edit with ddnet-rs
13:37 < bridge> <melo∆û> 
13:37 < bridge> <melo∆û> ddnet-rs is bound to the config directory at `~/.config/ddnet-editor-server` so the map file is in `~/.config/ddnet-editor-server/maps/map.map`
13:38 < bridge> <Jupstar ‚ú™> you can simply modify the storage.cfg to use the same path
13:39 < bridge> <melo∆û> dat works? :o
13:39 < bridge> <Jupstar ‚ú™> i don't think ddnet-rs writes any files ddnet uses
13:39 < bridge> <Jupstar ‚ú™> yeah edit the first line in storage.cfg and use a global path instead
13:39 < bridge> <Jupstar ‚ú™> i think that should work
13:39 < bridge> <Jupstar ‚ú™> But you can also simply add new paths
13:39 < bridge> <Jupstar ‚ú™> i think that is what ddnet-maps repo is doing too
13:39 < bridge> <Jupstar ‚ú™> https://github.com/ddnet/ddnet-maps/blob/master/storage.cfg
13:47 < bridge> <melo∆û> that didnt really work - but i just symlinked it which seems to work :kekw:
13:47 < bridge> <Jupstar ‚ú™> how does it reload it?
13:47 < bridge> <Jupstar ‚ú™> with rcon?
13:48 < bridge> <Jupstar ‚ú™> or better: how does ddnet server hot reload?
13:50 < bridge> <melo∆û> i think it just checks if you're authed and the editor is saved, i just do it manually via `reload`
13:50 < bridge> <melo∆û> would be annoying for the map to reload every ~60 seconds (e.g save interval) anyway atm.
13:50 < bridge> <melo∆û> 
13:50 < bridge> <melo∆û> tho i'm not sure how to properly integrate everything together
13:51 < bridge> <Jupstar ‚ú™> yeah
13:51 < bridge> <Jupstar ‚ú™> the editor server currently doesnt save anyway, basically for that exact reason
13:51 < bridge> <Jupstar ‚ú™> u can save locally tho
13:52 < bridge> <melo∆û> oh it doesnt?
13:52 < bridge> <melo∆û> so the file on my VPS stays untouched?
13:52 < bridge> <melo∆û> or how does that work
13:52 < bridge> <Jupstar ‚ú™> rn yes, i can patch it directly
13:52 < bridge> <Jupstar ‚ú™> but let's first discuss the goal
13:52 < bridge> <melo∆û> yeah
13:52 < bridge> <melo∆û> i guess the general goal would be a simple `play map` button :kekw:
13:53 < bridge> <Jupstar ‚ú™> - e.g. how to force a save on the server from client
13:53 < bridge> <Jupstar ‚ú™> - how to configure the save periode
13:53 < bridge> <Jupstar ‚ú™> - is it important that it only saves the map if file actually changed
13:53 < bridge> <melo∆û> ye
14:09 < bridge> <melo∆û> okay the way i do it now is super sketchy but it works lmao
14:10 < bridge> <melo∆û> i'm such a windows scripter
14:10 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1330887255476404344/image.png?ex=678f9cd8&is=678e4b58&hm=789bc06485fec4d101bed7ea19d040fbaaa1fceedb1395ea7e6365afb49543f1&
14:17 < bridge> <chairn> please pin this, maybe in #showroom
16:42 < ws-client> <ChillerDragon> @dynamofox this discussion does not belong in a public channel. But I can tell you this much I can join all teefusion servers with selfcompiled chillerbot just fine. I think @0xfaulty fixed that for me last time. I can reproduce ddnet-git from the aur being blocked.
16:48 < bridge> <0xfaulty> Yes, but this is more of an exception. Ideally, there should be an official checkable image for Linux from DDNet, with same build files like on Windows
16:49 < bridge> <dynamofox> It'll never work reliably unless one builds with the same toolchain of the official exes and the the build process is reproducible.
16:55 < ws-client> <ChillerDragon> hmm @0xfaulty on arch linux it is common to have programes compiled from source when installing them ._.
16:58 < bridge> <dynamofox> At that point one might also be more inclined to consider the idea of using the official builds.
16:58 < bridge> <dynamofox> 
16:58 < bridge> <dynamofox> Because iirc the current official builds are just some opaquely built blobs whose dependencies were also opaquely built some time ago and stashed in the ddnet-libs repository on some opaque built system.
16:58 < bridge> <0xfaulty> Unfortunately, at the moment, there is no other way to block custom-built clients
16:59 < bridge> <dynamofox> btw note that I wouldn't like to insinuate that the current exes are built with malicious intents ^^.
16:59 < bridge> <dynamofox> 
16:59 < bridge> <dynamofox> It's just hard to ponder how trustworthy they are.
17:03 < bridge> <dynamofox> btw note that I wouldn't like to insinuate that the individual who builds the current exes does so with malicious intents ^^.
17:03 < bridge> <dynamofox> 
17:03 < bridge> <dynamofox> It's just hard to ponder how trustworthy they are.
17:05 < bridge> <dynamofox> At that point one might also be more inclined to consider the idea of using the official builds.
17:05 < bridge> <dynamofox> 
17:05 < bridge> <dynamofox> Because iirc the current official builds are just some opaquely built blobs whose dependencies were also opaquely built some time ago and stashed in the ddnet-libs repository coming from some opaque build system.
17:06 < bridge> <avolicious> Sometimes this open-source only people are weird. They dont trust pre-compiled software, but they trust their bank with their money
17:08 < bridge> <avolicious> Sometimes this open-source only people are weird. They dont trust pre-compiled software, but they trust the bank with their money
17:09 < bridge> <inv41idu53rn4m3> I *somewhat* trust my bank with my money
17:10 < bridge> <inv41idu53rn4m3> and I'm only against precompiled software when I *need* it to work and it's occasionally temperamental
17:12 < bridge> <inv41idu53rn4m3> the code is the best documentation and if I don't have access to that then how am I supposed to know what I'm doing wrong
17:12 < bridge> <avolicious> So you dont play any game besides teeworlds
17:12 < bridge> <inv41idu53rn4m3> I don't *need* games to work
17:12 < bridge> <avolicious> > the code is the best documentation and if I don't have access to that then how am I supposed to know what I'm doing wrong
17:13 < bridge> <avolicious> This is DDNet, so hopefully not too much work related üòÑ
17:13 < bridge> <inv41idu53rn4m3> Yeah, I'm just talking in general
17:13 < bridge> <inv41idu53rn4m3> I've had a good few instances where I couldn't find the solution in the documentation but looking at the source made my issue instantly obvious
17:14 < bridge> <inv41idu53rn4m3> with various pieces of software
17:15 < bridge> <avolicious> I was more referencing to DynamoFox's statement
17:20 < bridge> <inv41idu53rn4m3> I do think it's a shame that people get punished for not using the official builds, pretty weird even
17:21 < bridge> <avolicious> But why? Let server hosters decide what types clients they want to accept
17:22 < bridge> <dynamofox> Is it wrong to be a little reticent about running opaque binary blobs built by some single individual without any other oversight?
17:22 < bridge> <dynamofox> 
17:22 < bridge> <dynamofox> The relationship one has with a bank is of a different kind and with actual contractual obligations on from both sides and some safeties for basic bank account operation.
17:23 < bridge> <inv41idu53rn4m3> And what if I download the latest build from Github Actions, will that be official enough for those servers or will they complain because I'm trying to test something fresher than the latest release?
17:24 < bridge> <avolicious> If I dont want experimental clients, sure
17:24 < bridge> <avolicious> You can decide what bank you are using & other banks can deny your bank if they dont want to work with them
17:24 < bridge> <dynamofox> I agree with that. But if you're going to mandate a client it has to be trustworthy to a degree.
17:24 < bridge> <dynamofox> 
17:24 < bridge> <dynamofox> It also unjustly highs the responsibility bar on the one who builds in case stuff goes rouge by accident on its build machine.
17:25 < bridge> <avolicious> It always does
17:25 < bridge> <inv41idu53rn4m3> something something Nix
17:25 < bridge> <inv41idu53rn4m3> to be clear I'm not one of these Nix nuts
17:27 < bridge> <dynamofox> Is it wrong to be a little reticent about running opaque binary blobs built by some single individual on some hobby project without any other oversight?
17:27 < bridge> <dynamofox> 
17:27 < bridge> <dynamofox> The relationship one has with a bank is of a different kind and with actual contractual obligations on from both sides and some safeties for basic bank account operation.
17:29 < bridge> <dynamofox> I agree with that. But if you're going to mandate a client it has to be trustworthy to a degree.
17:29 < bridge> <dynamofox> 
17:29 < bridge> <dynamofox> It also unjustly highs the responsibility bar on the one who builds the whitelisted client in case stuff goes rouge by accident on its build machine.
17:30 < bridge> <dynamofox> I agree with that. But if you're going to mandate a client it has to be of a trustworthy origin to a degree.
17:30 < bridge> <dynamofox> 
17:30 < bridge> <dynamofox> It also unjustly highs the responsibility bar on the one who builds the whitelisted client in case stuff goes rouge by accident on its build machine.
18:07 < bridge> <zhn> they have no way to proof if your client is trustworthy enough
18:07 < bridge> <zhn> prove*
23:33 < bridge> <chillerdragon> I do trust enough into my bank and the government to protect up to 100k but if I had a choice I would never use a bank account. I only use it to get a paycheck and pay rent/electricity and all the other things that refuse to operate on cash.
23:42 < bridge> <hectavoxel> this sounds like something that would lead into cryptocurrency nonsense
23:50 < bridge> <chillerdragon> Crypto is nice
23:52 < bridge> <hectavoxel> teeworlds nfts
