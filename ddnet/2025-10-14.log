00:00 < bridge_> <totar> insane tech, only cost is that it lags the server xd
00:00 < bridge_> <totar> quick skip every map with ninja and shotgun
00:00 < bridge_> <Teero> yea
00:00 < bridge_> <totar> quick, skip every map with ninja and shotgun
00:00 < bridge_> <Teero> sadly its kinda useless on most maps lol? xd
00:00 < bridge_> <totar> yeah
00:01 < bridge_> <Teero> so its not really a gamebreaking bug xd
00:01 < bridge_> <Teero> it just lags a bit
00:01 < bridge_> <Teero> L physics implementation
00:02 < bridge_> <Deëivid!> wanna see it in action? :justatest:
00:02 < bridge_> <Teero> wdym?
00:02 < bridge_> <Deëivid!> 45.141.57.22:8340
00:02 < bridge_> <Teero> i mean its just a bug xd
00:02 < bridge_> <totar> is there a real skip
00:02 < bridge_> <Teero> what is there to show
00:02 < bridge_> <Deëivid!> how bad it is
00:03 < bridge_> <totar> @teero777 how would you fix this? applying ramp before ninja is a big physics change right?
00:03 < bridge_> <Teero> yes it is.
00:04 < bridge_> <totar> actually
00:04 < bridge_> <Teero> just clamp the velX to max speed after ninja move
00:04 < bridge_> <totar> lol
00:04 < bridge_> <totar> hmm
00:04 < bridge_> <totar> but doesn't ninja go above max speed sometimes
00:04 < bridge_> <Teero> uh idk
00:05 < bridge_> <totar> maybe not
00:05 < bridge_> <totar> only if you get the velocity in the same tick you use ninja?
00:05 < bridge_> <totar> wdym "after" don't you do it before?
00:05 < bridge_> <totar> otherwise it still does huge movebox
00:07 < bridge_> <totar> @teero777 but ramp only caps X speed, why doesn't doing shotgun bug normally not cause this lag if it was because of movebox?
00:08 < bridge_> <Teero> not sure what actually causes the lag here
00:08 < bridge_> <totar> @teero777 but ramp only caps X speed, why does doing shotgun bug normally not cause this lag if it was because of movebox?
00:10 < bridge_> <Ewan> is the map geometry logic not priori? it would not lag if it was
00:10 < bridge_> <Ewan> it'd have to be
00:10 < bridge_> <totar> what
00:11 < bridge_> <Ewan> priori vs posteriori in the context of collision detection defines when collisions are detected
00:11 < bridge_> <totar> movebox handles the geometry logic
00:14 < bridge_> <totar> @teero777  the issue says it happens on sunny side up, so it can't be related to ramp
00:14 < bridge_> <Teero> huh?
00:14 < bridge_> <totar> or X vel
00:14 < bridge_> <totar> ?
00:15 < bridge_> <Teero> well it must be something related to the velocity xd
00:15 < bridge_> <totar> but only with ninja
00:15 < bridge_> <totar> but I don't see anything other than movebox that changes in cost based on distance
00:15 < bridge_> <totar> but I don't see anything other than movebox in ninja code that changes in cost based on distance
00:16 < bridge_> <Teero> static const mvec2 StackedLaserShotgunBugSpeed = CTVEC2(-2147483648.0f, -2147483648.0f);
00:16 < bridge_> <Teero> that is our velocity. then we ninja
00:16 < bridge_> <totar> yes
00:16 < bridge_> <totar> but there's only 1 loop over distance which is movebox afaik
00:16 < bridge_> <Teero> Ahh
00:17 < bridge_> <Teero> i think i might know xDD
00:17 < bridge_> <totar> unless there's something like making ninja effects
00:17 < bridge_> <Teero> hmm maybe not
00:17 < bridge_> <Teero> well we move 1.41x more distance than normal sg bug
00:17 < bridge_> <totar> not on sunnyside up
00:17 < bridge_> <Teero> wdym?
00:17 < bridge_> <totar> not on sunny side up
00:17 < bridge_> <Teero> it doesnt matter
00:17 < bridge_> <totar> there's walls
00:17 < bridge_> <Teero> ok?
00:17 < bridge_> <totar> so you hit them in movebox
00:18 < bridge_> <totar> and velocity is the same again
00:18 < bridge_> <Teero> ok? it will still loop until it fully stops
00:18 < bridge_> <totar> yeah
00:18 < bridge_> <totar> but you don't need X vel, so it's just 1.0x sg bug speed
00:18 < bridge_> <Teero> hmm
00:18 < bridge_> <Teero> yea
00:19 < bridge_> <Teero> the only other logic there is is the player to player collision
00:20 < bridge_> <Teero> but that logic is free
00:20 < bridge_> <totar> does making a sound at sg speed distance outside of the map cause lag? xd
00:20 < bridge_> <totar> nah
00:20 < bridge_> <totar> cause the tee dies there too
00:21 < bridge_> <Teero> lemme check if it also lags with my physics
00:21 < bridge_> <Teero> that eliminates a lot
00:21 < bridge_> <totar> your physics don't even work outside the map
00:22 < bridge_> <totar> it it's not nearly the same
00:22 < bridge_> <totar> it would just crash
00:22 < bridge_> <totar> or movebox don't try to go there
00:22 < bridge_> <totar> or movebox wont try to go there
00:23 < bridge_> <totar> I g2g, this would be easy to find with debugger when I get home if you haven't figured it out by then.
00:25 < bridge_> <Teero> yea its easy
00:42 < bridge_> <Teero> @totar xd in my physics it checks if the position you are trying to go to is oob first and just kills you without doing movebox xD
00:42 < bridge_> <Teero> i guess my physics won't have sg bug?
00:42 < bridge_> <Teero> its a bug anyway
03:51 < bridge_> <Ewan> most ppl gate such bug fixes at compile time
03:51 < bridge_> <Ewan> if they care about preserving it
03:51 < bridge_> <Ewan> your physics will not be 1:1 without sg bug though
03:52 < bridge_> <Ewan> I think maps that exploit bugs are not allowed on ddnet so if that's the boundary you're probably ok
04:19 < bridge_> <Teero> I'm already not caring about compatibility
04:21 < bridge_> <Ewan> there's your answer
04:26 < bridge_> <Teero> did you?
04:26 < bridge_> <totar> no
04:27 < bridge_> <Teero> did you do anything else?
04:27 < bridge_> <totar> wdym
04:27 < bridge_> <Teero> idk, breathing, eating, driving etc.
04:27 < bridge_> <totar> I did all those things
04:27 < bridge_> <Teero> woah nice, how was it?
04:28 < bridge_> <Teero> do you have any grapes rn?
05:53 < bridge_> <totar> just did, it is movebox
05:54 < bridge_> <totar> we were right lol
05:54 < bridge_> <totar> woah
05:54 < bridge_> <totar> but it's not the ninja movebox
05:54 < bridge_> <totar> huh?
05:56 < bridge_> <totar> lol
05:56 < bridge_> <totar> https://cdn.discordapp.com/attachments/293493549758939136/1427505280429723670/image.png?ex=68ef1b64&is=68edc9e4&hm=8fbf2f41cf9476333abe1a57ba3c2d6dc235057bba23564452df29e543ed462e&
05:56 < bridge_> <totar> small loop
05:56 < bridge_> <totar> light work
05:57 < bridge_> <totar> "1 billion MoveBox loops challenge" 
05:57 < bridge_> <totar> <https://github.com/gunnarmorling/1brc>
06:01 < bridge_> <Ewan> 500 cigarettes
06:07 < bridge_> <totar> ok this is rather complicated bug actually
07:03 < bridge_> <totar> this is so crazy
08:01 < bridge_> <totar> I only get more confused the more I look at this
08:02 < bridge_> <totar> I think I understand it now but my previous idea was not the whole picture so I have to rewrite the explanation
08:16 < bridge_> <totar> this is also a prediction desync lol
08:47 < bridge_> <totar> I was just wrong
08:51 < bridge_> <totar> ok I can explain it now
08:54 < bridge_> <carmine1985> Why not just clamp  the player velocity into a  "sane" limit ? For example  100 tiles per second equals 2 tiles per tick, that equals about 64 game world units...
08:54 < bridge_> <totar> it does do that
08:54 < bridge_> <totar> I'll post explanation when I'm done typing
09:52 < bridge_> <Teero> must be a long ass explanation
10:05 < bridge_> <totar> ## Bug reproduciton steps:
10:05 < bridge_> <totar> 
10:05 < bridge_> <totar> -The shotgun tee must have a lower client id than the ninja tee
10:05 < bridge_> <totar> -the ninja tee and shotgun tee must be stacked
10:05 < bridge_> <totar> -the ninja tee must look down
10:05 < bridge_> <totar> -they both fire on the same tick
10:05 < bridge_> <totar> 
10:05 < bridge_> <totar> ## Background information:
10:05 < bridge_> <totar> 
10:05 < bridge_> <totar> ``length(vec2)`` can be negative if you assign it to an int: <https://godbolt.org/z/e6hq9KGh9>
10:05 < bridge_> <totar> 
10:05 < bridge_> <totar> ``CCharacter::PreTick()`` is called in 2 different ways
10:05 < bridge_> <totar> If NoWeakHookAndBounce, then it will get called for each entity in ``CGameWorld::Tick()`` before it calls ``Tick()`` and ``TickDeferred()`` for each entity
10:05 < bridge_> <totar> But this is off by default, so we don't call ``PreTick()`` from ``CGameWorld::Tick()``
10:05 < bridge_> <totar> 
10:06 < bridge_> <totar> Instead it gets called from this code:
10:06 < bridge_> <totar> ```cpp
10:06 < bridge_> <totar> void CCharacter::Tick()
10:06 < bridge_> <totar> {
10:06 < bridge_> <totar>     if(m_pGameWorld->m_WorldConfig.m_NoWeakHookAndBounce)
10:06 < bridge_> <totar>     {
10:06 < bridge_> <totar>         m_Core.TickDeferred();
10:06 < bridge_> <totar>     }
10:06 < bridge_> <totar>     else
10:06 < bridge_> <totar>     {
10:06 < bridge_> <totar>         PreTick();
10:06 < bridge_> <totar>     }
10:06 < bridge_> <totar>     /* ... */
10:06 < bridge_> <totar> }
10:06 < bridge_> <totar> ```
10:06 < bridge_> <totar> This is important because ``PreTick()`` is different depending on if we are using NoWeakHookAndBounce or not
10:06 < bridge_> <totar> ## The bug
10:06 < bridge_> <totar> 
10:06 < bridge_> <totar> The shotgun tee has a lower client id, so it will process FireWeapon() via DirectInput first
10:06 < bridge_> <totar> 
10:06 < bridge_> <totar> ```cpp
10:06 < bridge_> <totar> CServer::Run()
10:06 < bridge_> <totar> 
10:06 < bridge_> <totar> for(each client)
10:06 < bridge_> <totar> After the Gameworld ticks all entities, it will do TickDeferred
10:06 < bridge_> <totar> 
10:06 < bridge_> <totar> ```cpp
10:06 < bridge_> <totar> NinjaTee.TickDeferred()
10:06 < bridge_> <totar> {
10:06 < bridge_> <totar>     m_Core.Move()
10:07 < bridge> <totar> -The shotgun tee must have a lower client id than the ninja tee
10:07 < bridge> <totar> -the ninja tee and shotgun tee must be stacked
10:07 < bridge> <totar> -the ninja tee must look down
10:07 < bridge> <totar> -they both fire on the same tick
10:07 < bridge> <totar> 
10:08 < bridge> <totar> ## Background information:
10:08 < bridge> <totar> 
10:08 < bridge> <totar> if the value of ``length(vec2)`` overflows when you cast it to int it will be negative : <https://godbolt.org/z/e6hq9KGh9>
10:08 < bridge> <totar> 
10:08 < bridge> <totar> ``CCharacter::PreTick()`` is called in 2 different ways
10:08 < bridge> <totar> If NoWeakHookAndBounce, then it will get called for each entity in ``CGameWorld::Tick()`` before it calls ``Tick()`` and ``TickDeferred()`` for each entity
10:08 < bridge> <totar> But this is off by default, so we don't call ``PreTick()`` from ``CGameWorld::Tick()``
10:08 < bridge> <totar> 
10:08 < bridge> <totar> Instead it gets called from this code:
10:08 < bridge> <totar> ```cpp
10:08 < bridge> <totar> void CCharacter::Tick()
10:08 < bridge> <totar> {
10:08 < bridge> <totar>     if(m_pGameWorld->m_WorldConfig.m_NoWeakHookAndBounce)
10:08 < bridge> <totar>     {
10:08 < bridge> <totar>         m_Core.TickDeferred();
10:08 < bridge> <totar>     }
10:08 < bridge> <totar>     else
10:08 < bridge> <totar>     {
10:08 < bridge> <totar>         PreTick();
10:08 < bridge> <totar>     }
10:08 < bridge> <totar>     /* ... */
10:08 < bridge> <totar> }
10:08 < bridge> <totar> ```
10:08 < bridge> <totar> This is important because ``PreTick()`` is different depending on if we are using NoWeakHookAndBounce or not
10:08 < bridge> <totar> no
10:08 < bridge> <totar> I wrote it all by hand
10:08 < bridge> <totar> GPT5 couldn't even understand the bug when I gave it all the files
10:09 < bridge> <Ewan> looking back I see informal punctuation but otherwise you could've fooled me
10:09 < bridge> <Ewan> we can't have headers anymore
10:13 < bridge> <totar> Minimal fix:
10:13 < bridge> <totar> ```cpp
10:13 < bridge> <totar>     case WEAPON_NINJA:
10:13 < bridge> <totar>     {
10:13 < bridge> <totar>         // reset Hit objects
10:13 < bridge> <totar>         m_NumObjectsHit = 0;
10:13 < bridge> <totar> 
10:13 < bridge> <totar>         m_Core.m_Ninja.m_ActivationDir = Direction;
10:13 < bridge> <totar>         m_Core.m_Ninja.m_CurrentMoveTime = g_pData->m_Weapons.m_Ninja.m_Movetime * Server()->TickSpeed() / 1000;
10:13 < bridge> <totar> 
10:13 < bridge> <totar> +++     if (length(m_Core.m_Vel) > 6000.0f)
10:13 < bridge> <totar> +++         m_Core.m_Vel = normalize(m_Core.m_Vel) * 6000.0f;
10:13 < bridge> <totar> 
10:13 < bridge> <totar>         m_Core.m_Ninja.m_OldVelAmount = length(m_Core.m_Vel);
10:13 < bridge> <totar> 
10:13 < bridge> <totar>         GameServer()->CreateSound(m_Pos, SOUND_NINJA_FIRE, TeamMask()); // NOLINT(clang-analyzer-unix.Malloc)
10:13 < bridge> <totar>     }
10:13 < bridge> <totar> ```
10:23 < bridge> <jxsl13> is AI the end of Markdown?
10:23 < bridge> <jxsl13> is it killing markdown?
10:26 < bridge> <Jupstar ✪> ?xd
10:26 < bridge> <Jupstar ✪> Isnt ai the no.1 customer of markdown
10:31 < bridge> <carmine1985> Very useful explained... I would lower the general speed limit to 1000.f (that equals 31 tiles per tick more or less) that is still and impressive not playable speed
10:32 < bridge> <carmine1985> Very useful explained... I would lower the general speed limit everywhere to 1000.f (that equals 31 tiles per tick more or less) that is still and impressive not playable speed
10:33 < bridge> <carmine1985> Very useful explained... I would lower the general speed limit everywhere to 1000.f (that equals 31 tiles per tick more or less) that is still an impressive not playable speed... So less headache for the cpu
10:38 < bridge> <Cellegen> Holy spam
10:40 < bridge> <Assa> > if the value of length(vec2) overflows when you cast it to int it will be negative : https://godbolt.org/z/e6hq9KGh9
10:40 < bridge> <Assa> 
10:40 < bridge> <Assa> oh no, nobody could have ever seen coming that 😮 I am so suprised that this can overflow
10:40 < bridge> <Assa> > if the value of length(vec2) overflows when you cast it to int it will be negative : <https://godbolt.org/z/e6hq9KGh9>
10:40 < bridge> <Assa> 
10:40 < bridge> <Assa> oh no, nobody could have ever seen coming that 😮 I am so suprised that this can overflow
10:40 < bridge> <Assa> (fck off discord i am citing)
10:42 < bridge> <totar> it only barely overflows, and it's the reason that you need to look down to reproduce the bug, so I thought it was important to note
10:43 < bridge> <carmine1985> Eventually, times ago I saw on YouTube "one line coder" designing a collisions algorithm that iterates each step where it intersects the tiles grid, instead of every single game world unit
10:43 < bridge> <totar> teero has it in his code
10:43 < bridge> <Assa> yes, would be neat if teeworlds would have used that 16 years ago
10:43 < bridge> <totar> there's a nice comment
10:44 < bridge> <Assa> also there was a name for this algorithm, was it bresenham?
10:44 < bridge> <totar> ```cpp
10:44 < bridge> <totar> // TODO: rewrite this smarter!
10:44 < bridge> <totar> int CCollision::IntersectLine(vec2 Pos0, vec2 Pos1, vec2 *pOutCollision, vec2 *pOutBeforeCollision) const
10:44 < bridge> <totar> ```
10:44 < bridge> <totar> DDA
10:44 < bridge> <carmine1985> Eventually, times ago I saw on YouTube "one lone coder" designing a collisions algorithm that iterates each step where it intersects the tiles grid, instead of every single game world unit
10:44 < bridge> <totar> wait
10:45 < bridge> <totar> nvm it is DDA
10:45 < bridge> <totar> Bresenham doesn't hit every cell
10:47 < bridge> <Assa> yeah it's DDA, if I'd create a game I'd use Xiaolin Wu's and make the sensistiive checks with the sourroundings with it
10:48 < bridge> <Assa> you'd even know how _hard_ a tile would be hit or how much
10:50 < bridge> <carmine1985> Who plays his modification? Or how to try it?
10:50 < bridge> <totar> https://github.com/Teero888/ddnet_physics_c
10:50 < bridge> <totar> it's just a library, not a mod
10:52 < bridge> <blue bencie> Hey, don't read it!
10:52 < bridge> <totar> 😳
10:52 < bridge> <blue bencie> you gon make teeto look like :angy:
10:55 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1427580640878137344/RDT_20251014_0324151290754756230135584.jpg?ex=68ef6193&is=68ee1013&hm=920ac53ce28499af2b3aa9175d10df0ec7016229bd4aeb1657d7b45f46d2b22c&
10:57 < bridge> <Teero> @totar good thing I don't have to reproduce that square root you evil mf
10:57 < bridge> <totar> why am I evil
10:58 < bridge> <Teero> I would have yet another sqrt in my code if I was ddnet compatible xd
10:58 < bridge> <totar> oh lol
10:58 < bridge> <totar> you could just do squared distance
10:58 < bridge> <Teero> yea. But floating point accuracy at high values like 6000*6000 is shit you know xd
10:58 < bridge> <totar> squared length
10:59 < bridge> <totar> ig
10:59 < bridge> <Teero> Well it's not the same xd
10:59 < bridge> <totar> it doesn't actually matter because the direction is set to your mouse
11:00 < bridge> <totar> ig this can be simpler
11:01 < bridge> <totar> idk we will see if reviewer cares or not
11:01 < bridge> <Teero> @totar I would love to show you a photo of the grill function I'm using rn to cook the baguette because we were talking about it recently but I would leak myself in the reflection
11:01 < bridge> <totar> lol
11:02 < bridge> <Teero> Yea can't you just fmaxf(ninja speed, 6000) when you multiply the direction change?
11:02 < bridge> <Teero> Lazy typing on phone
11:02 < bridge> <Teero> You know what I mean
11:02 < bridge> <Teero> Ah no you can't
11:02 < bridge> <Teero> mb
11:02 < ws-client1> **<ChillerDragon>** wait wot when did you release this https://github.com/Teero888/ddnet_physics_c @Teero ?
11:02 < bridge> <Teero> Few weeks ago
11:02 < ws-client1> **<ChillerDragon>** omg
11:02 < bridge> <Teero> But don't read or use
11:02 < bridge> <Teero> It's wip
11:03 < ws-client1> **<ChillerDragon>** i will write new production server with it
11:03 < bridge> <totar> fminf
11:03 < bridge> <Teero> you can ig, the API won't change much anymore
11:03 < ws-client1> **<ChillerDragon>** pog
11:03 < ws-client1> **<ChillerDragon>** but catto lib doesnt even have snaps yet ._.
11:03 < bridge> <totar> lol
11:03 < bridge> <totar> when snaps teero
11:04 < ws-client1> **<ChillerDragon>** its net not physics
11:04 < bridge> <Teero> @totar we need some docs for the global state of the tee accelerator. Ah maybe not. It's only relevant for multi threading
11:04 < bridge> <carmine1985> Do you know where, in the source code, it checks if a tee is too much inside a solid tile?
11:04 < bridge> <carmine1985> I am playing around modding physics, and when this anomaly happens the tee dies
11:04 < bridge> <totar> "don't multithread this code"
11:04 < bridge> <totar> gg
11:04 < bridge> <Teero> xdd
11:05 < bridge> <Teero> yea chiller don't multi thread that code until I write docd
11:05 < bridge> <Teero> yea chiller don't multi thread that code until I write docs
11:05 < bridge> <Teero> docs
11:05 < bridge> <Teero> the docs in the docs directory are outdated
11:07 < ws-client1> **<ChillerDragon>** ye dw i wont do it any time soon
11:07 < ws-client1> **<ChillerDragon>** i try to implement snaps in pyson since a few days and i am hard stuck
11:08 < ws-client1> **<ChillerDragon>** not sure when the net lib will get snaps
11:08 < ws-client1> **<ChillerDragon>** but then i would actually like to build a server written in C
11:09 < bridge> <Teero> epuc
11:09 < bridge> <Teero> epic
11:10 < bridge> <Teero> make better protocol while you are at it
11:17 < bridge> <0xdeen> Thank you @heinrich5991 ! ^
11:26 < bridge> <totar> ## The bug
11:26 < bridge> <totar> 
11:26 < bridge> <totar> The shotgun tee has a lower client id, so it will process FireWeapon() via DirectInput first
11:26 < bridge> <totar> 
11:26 < bridge> <totar> ```cpp
11:26 < bridge> <totar> CServer::Run()
11:26 < bridge> <totar> 
11:26 < bridge> <totar> for(each client)
11:26 < bridge> <totar> {
11:26 < bridge> <totar> 
11:26 < bridge> <totar> // Shotgun Tee
11:26 < bridge> <totar> CGameContext::OnClientPredictedEarlyInput()
11:26 < bridge> <totar>     CPlayer::OnPredictedEarlyInput()
11:26 < bridge> <totar>         CCharacter::OnDirectInput()
11:26 < bridge> <totar>             CCharacter::FireWeapon()
11:26 < bridge> <totar>                 case WEAPON_SHOTGUN:
11:26 < bridge> <totar>                     new CLaser(...)
11:26 < bridge> <totar>                         // Inside the CLaser constructor (Important!)
11:26 < bridge> <totar>                         CLaser::DoBounce()
11:26 < bridge> <totar>                             CLaser::HitCharacter()
11:27 < bridge> <totar>                                 // The Ninja Tee gets shotgun bug velocity
11:27 < bridge> <totar>                                 NinjaTee->SetRawVelocity(vec2(-2147483648.0f, -2147483648.0f)); 
11:27 < bridge> <totar>                                 // Ninja tee m_Core.m_Vel becomes vec2(-2147483648.0f, -2147483648.0f)
11:27 < bridge> <totar> 
11:27 < bridge> <totar> // Ninja Tee
11:27 < bridge> <totar> CGameContext::OnClientPredictedEarlyInput()
11:27 < bridge> <totar>     CPlayer::OnPredictedEarlyInput()
11:27 < bridge> <totar>         CCharacter::OnDirectInput()
11:27 < bridge> <totar>             CCharacter::FireWeapon()
11:27 < bridge> <totar>                 case WEAPON_NINJA:
11:27 < bridge> <totar>                     {
11:28 < bridge> <ryozuki> pog
11:28 < bridge> <totar> ## The bug
11:28 < bridge> <totar> 
11:28 < bridge> <totar> The shotgun tee has a lower client id, so it will process FireWeapon() via DirectInput first
11:28 < bridge> <totar> 
11:28 < bridge> <totar> ```cpp
11:28 < bridge> <totar> CServer::Run()
11:28 < bridge> <totar> 
11:28 < bridge> <totar> for(each client)
11:28 < bridge> <totar> {
11:28 < bridge> <totar> 
11:28 < bridge> <totar> // Shotgun Tee
11:28 < bridge> <totar> CGameContext::OnClientPredictedEarlyInput()
11:28 < bridge> <totar>     CPlayer::OnPredictedEarlyInput()
11:28 < bridge> <totar>         CCharacter::OnDirectInput()
11:28 < bridge> <totar>             CCharacter::FireWeapon()
11:29 < bridge> <totar>                 case WEAPON_SHOTGUN:
11:29 < bridge> <totar>                     new CLaser(...)
11:29 < bridge> <totar>                         // Inside the CLaser constructor (Important!)
11:29 < bridge> <totar>                         CLaser::DoBounce()
11:29 < bridge> <totar>                             CLaser::HitCharacter()
11:29 < bridge> <totar>                                 // The Ninja Tee gets shotgun bug velocity
11:29 < bridge> <totar>                                 NinjaTee->SetRawVelocity(vec2(-2147483648.0f, -2147483648.0f)); 
11:29 < bridge> <totar>                                 // Ninja tee m_Core.m_Vel becomes vec2(-2147483648.0f, -2147483648.0f)
11:29 < bridge> <totar> 
11:29 < bridge> <totar> // Ninja Tee
11:29 < bridge> <totar> CGameContext::OnClientPredictedEarlyInput()
11:29 < bridge> <totar>     CPlayer::OnPredictedEarlyInput()
11:29 < bridge> <totar>         CCharacter::OnDirectInput()
11:29 < bridge> <totar>             CCharacter::FireWeapon()
11:29 < bridge> <totar>                 case WEAPON_NINJA:
11:29 < bridge> <totar>                     {
12:24 < bridge> <chillerdragon> Classics hein RICH donation
12:25 < bridge> <chillerdragon> No it will be compatible ofc
12:25 < bridge> <Jupstar ✪> No chiller
12:25 < bridge> <Jupstar ✪> We both know rich ppl don't do that
12:25 < bridge> <Jupstar ✪> Let's take you as an example
12:25 < bridge> <chillerdragon> Donate?
12:25 < bridge> <chillerdragon> I am not rich
12:25 < bridge> <chillerdragon> Also I did donate
12:27 < bridge> <Jupstar ✪> Ok, then I am just very very ppor
12:27 < bridge> <Jupstar ✪> Ok, then I am just very very poor
12:27 < bridge> <chillerdragon> .\_.
12:27 < bridge> <chillerdragon> I am Munich middle class
12:28 < bridge> <chillerdragon> 110% of my income goes straight to rent
12:28 < bridge> <Jupstar ✪> Ok ok
12:28 < bridge> <Jupstar ✪> but you own the flat
12:28 < bridge> <chillerdragon> lol
12:29 < bridge> <chillerdragon> If you own a flat in Munich you are rich I guess
12:29 < bridge> <Jupstar ✪> ig xd
12:32 < bridge> <Jupstar ✪> chiller when do we play if city against each other
12:32 < bridge> <Jupstar ✪> if city irl
12:37 < ws-client1> **<ChillerDragon>** if city irl
12:37 < ws-client1> **<ChillerDragon>** wtf
12:37 < ws-client1> **<ChillerDragon>** i donated 0.039 BTC to ddnet btw
12:42 < bridge> <totar> After the Gameworld ticks all entities, it will do TickDeferred
12:42 < bridge> <totar> 
12:42 < bridge> <totar> ```cpp
12:42 < bridge> <totar> NinjaTee.TickDeferred()
12:42 < bridge> <totar> {
12:42 < bridge> <totar>     m_Core.Move()
12:42 < bridge> <totar>     {
12:42 < bridge> <totar>         float RampValue = VelocityRamp(/* ... */);
12:42 < bridge> <totar> 
12:42 < bridge> <totar>         // Here we ramp the velocity
12:42 < bridge> <totar>         m_Vel.x = m_Vel.x * RampValue;
12:42 < bridge> <totar> 
12:42 < bridge> <totar>         // Our velocity is zero because of HandleNinja() so basically nothing happens here
12:42 < bridge> <totar>         // It will stay this way for 10 ticks
12:42 < bridge> <totar>         m_pCollision->MoveBox(&NewPos, &m_Vel, /* ... */);
12:42 < bridge> <totar> 
12:42 < bridge> <totar>         // Then we un-ramp the velocity 
12:42 < bridge> <totar>         m_Vel.x = m_Vel.x * (1.0f / RampValue);
12:42 < bridge> <totar> 
12:42 < bridge> <totar>     }
12:42 < bridge> <totar> }
12:42 < bridge> <totar> ```
12:42 < bridge> <totar> 
12:42 < bridge> <totar> **10 Ticks Later**
12:42 < bridge> <totar> 
12:42 < bridge> <totar> ```cpp
12:42 < bridge> <totar> NinjaTee.Tick()
12:42 < bridge> <totar> {
12:43 < bridge> <totar>     CCharacter::PreTick()
12:43 < bridge> <totar>         m_Core.Tick(true, true)
12:43 < bridge> <totar>             CCharacterCore::TickDeferred()
12:43 < bridge> <Jupstar ✪> sick
12:45 < bridge> <jxsl13> like 4k €
12:46 < bridge> <jxsl13> today
12:48 < bridge> <blue bencie> Deen hopefully put everything on eth
12:48 < bridge> <blue bencie> https://tenor.com/view/up-arrow-uponly-up-only-pump-it-gif-3952233956060582693
12:48 < bridge> <totar> I thought btc is doing better than eth
12:50 < bridge> <blue bencie> (I just want eth to do better, pls)
12:50 < bridge> <totar> no bias I'm sure
12:50 < bridge> <blue bencie> nono ofc not:pepe_stonks_down:
12:52 < bridge> <blue bencie> https://cdn.discordapp.com/attachments/293493549758939136/1427609996052398220/Screenshot_20251014-125200.png?ex=68ef7cea&is=68ee2b6a&hm=e5a7d4b0d1820bd1cccb353d24a28d7922c26232b798269ed02b046e783c93c8&
12:52 < bridge> <blue bencie> :crycat:
12:52 < bridge> <blue bencie> Ok enough offtopic
12:55 < bridge> <totar> you have notifications for price movements? :justatest:
12:55 < bridge> <Jupstar ✪> it's smarter to be a friend of trump at this point
13:17 < bridge> <chillerdragon> Yay found the bug! I pushed the same object twice into a dictionary and did not realize I would edit both if I edit one of them
13:17 < bridge> <chillerdragon> Ppl say pointers are hard. But I find high level languages sometimes harder if they use pointers under the hood and it is easy to not realize what is actually going on
13:18 < bridge> <chillerdragon> @blaiszephyr: deen instantly cashed out and got so annoyed by the process that he also removed the btc donation option xd
13:40 < bridge> <jxsl13> eth is performing pretty badly.
13:40 < bridge> <jxsl13> it's strongly correlated to btc
13:41 < bridge> <jxsl13> and market movements in general.
13:42 < bridge> <learath2> Thank you mr Trump
13:42 < bridge> <learath2> This fr
13:42 < bridge> <Teero> yes
13:43 < bridge> <blue bencie> First you semi publicly shame my inability to ascend to a proper being and now you're calling me Trump
13:43 < bridge> <blue bencie> 
13:43 < bridge> <blue bencie> I call bias
14:17 < bridge> <ryozuki> :justatest:
14:19 < bridge> <ryozuki> look ot for fridays, trump announces X, market closes on weekends and change wildly, he profits, doom monday
14:19 < bridge> <ryozuki> look out for fridays, trump announces X, market closes on weekends and change wildly, he profits, doom monday
14:19 < bridge> <ryozuki> btc is a store of value like gold, eth is more smarter, i believe it can be the future of banking
14:20 < bridge> <ryozuki> btw eth reached a all time high not long ago
14:21 < bridge> <jxsl13> that statement is saying pretty much nothing.
14:21 < bridge> <ryozuki> yeah just saying a bit of info
14:22 < bridge> <ryozuki> well, also saying that eth has value in its utility, while btc has value in its scarcity like gold
14:22 < bridge> <jxsl13> was referring to all time high
14:22 < bridge> <jxsl13> the other part is valid.
14:23 < bridge> <ryozuki> well, why is performing badly if it reached a all time high not long ago
14:23 < bridge> <ryozuki> xD
14:23 < bridge> <jxsl13> or a valid point of view
14:23 < bridge> <jxsl13> the all time high was like 50€ above the previous one?
14:23 < bridge> <jxsl13> taking into account how long ago the prevoius ath was
14:24 < bridge> <jxsl13> and taking inflation into account
14:24 < bridge> <ryozuki> yeah, but its a different model iirc, in eth u create and burn ether, in btc it really is a fixed amount
14:25 < bridge> <ryozuki> > No, the supply of Ethereum (ETH) is not limited in the way Bitcoin's is; it does not have a fixed maximum supply. However, the rate of new ETH creation has significantly decreased since the switch to Proof-of-Stake, and with the fee-burning mechanism introduced by EIP-1559, the total supply can fluctuate and even become deflationary during periods of high network activity.
14:25 < ws-client1> **<ChillerDragon>** i love the supply limit of BTC
14:25 < bridge> <jxsl13> I'm coming from an investment point of view where everything is measuered in FIAT money and not in the crypto asset itself.
14:26 < ws-client1> **<ChillerDragon>** even without inflation the amount of BTC that keeps getting lost by ppl already is constantly driving up the price
14:26 < bridge> <ryozuki> xD
14:26 < bridge> <ryozuki> what are u trying to say here
14:26 < bridge> <ryozuki> btw holding fiat money is probs the worse, it nly devalues
14:26 < bridge> <ryozuki> u should hold stocks or other things
14:26 < ws-client1> **<ChillerDragon>** hodl the euro
14:26 < ws-client1> **<ChillerDragon>** diamond hands on cash
14:26 < bridge> <Jupstar ✪> hold my hands
14:27 < bridge> <ryozuki> i would specially avoid dollar kek
14:27 < bridge> <jxsl13> the model does not matter when talking about FIAT inflation.
14:27 < bridge> <ryozuki> trump running the printer
14:27 < bridge> <ryozuki> it matters, it drives the price kinda by inflation/deflation and the amount of available tokens
14:27 < ws-client1> **<ChillerDragon>** tbh so far my cash has outperformed my stock portfolio <:justatest:572499997178986510>
14:27 < bridge> <ryozuki> wtf
14:27 < bridge> <jxsl13> you talk about asset inflation
14:27 < bridge> <ryozuki> what d ou invst in
14:27 < bridge> <ryozuki> cant type
14:28 < ws-client1> **<ChillerDragon>** some intel short options
14:28 < bridge> <ryozuki> xd
14:28 < bridge> <ryozuki> options is risky
14:28 < ws-client1> **<ChillerDragon>** oil
14:28 < bridge> <Jupstar ✪> chiller is vibe investor
14:28 < ws-client1> **<ChillerDragon>** pharma
14:28 < ws-client1> **<ChillerDragon>** fr
14:28 < bridge> <ryozuki> didnt intel announce partner with nvidia
14:28 < bridge> <milkeeycat> @learath2 click merge button here https://github.com/ddnet/ddnet/pull/11040
14:28 < bridge> <jxsl13> I'm talking about whether eth even outperformed FIAT inflation, which I doubt.
14:28 < bridge> <ryozuki> ai warning
14:28 < bridge> <ryozuki> > es, ETH has outperformed fiat inflation over longer timeframes, particularly when considering the returns on investment from its early days to recent performance. However, this is subject to high volatility, and its effectiveness as an inflation hedge is not consistent, especially in the short term, as its returns are often driven by market-specific factors rather than inflation directly.
14:29 < bridge> <jxsl13> since tue last all time high
14:29 < bridge> <learath2> Did you pay the merge toll?
14:29 < bridge> <jxsl13> the
14:29 < bridge> <ryozuki> that will be 0.1 btc
14:29 < bridge> <Jupstar ✪> shitcoins
14:29 < bridge> <ryozuki> btw do u have road tolls
14:29 < bridge> <ryozuki> in germany
14:29 < bridge> <ryozuki> we have them still here
14:29 < bridge> <jxsl13> no
14:29 < bridge> <ryozuki> sadly
14:29 < bridge> <Jupstar ✪> for bigger cars we do
14:30 < bridge> <Jupstar ✪> like trucks
14:30 < bridge> <ryozuki> and for old cars that polute more?
14:30 < ws-client1> **<ChillerDragon>** <:hisnail:768893210726367232> 
14:30 < bridge> <ryozuki> in barcelona old cars that polute cant enter
14:30 < bridge> <ryozuki> u get fined
14:30 < bridge> <jxsl13> depending on how old they are :kek:
14:30 < bridge> <milkeeycat> here's 10x:deen_star: for you
14:30 < bridge> <learath2> I am far too liquid rn, but haven't really decided what to do, so I'm hodling euro
14:30 < ws-client1> **<ChillerDragon>** woah catto is inflating star value
14:30 < ws-client1> **<ChillerDragon>** ono
14:30 < bridge> <ryozuki> i currently also only rly have fiat and no stocks, cuz i needed the money
14:31 < bridge> <jxsl13> don't inflate the deen(ied) star value!
14:31 < bridge> <ryozuki> but hopefully ill save money now that i moved and relax
14:32 < bridge> <ryozuki> in the travel to my work by car, one wrong turn and the toll is 10 euro
14:32 < bridge> <ryozuki> d
14:32 < bridge> <ryozuki> xd
14:33 < bridge> <jxsl13> the fuck
14:33 < bridge> <ryozuki> yeah
14:33 < bridge> <ryozuki> but ill get some resident permit where i can use the road twice a day for free
14:33 < bridge> <ryozuki> to go and  return from work
14:33 < bridge> <Jupstar ✪> i dont own a car luckily
14:33 < bridge> <Jupstar ✪> I hope i never need one
14:33 < bridge> <ryozuki> i now need it, its 1h by car to work office
14:33 < bridge> <learath2> Move to the land of the free
14:34 < bridge> <learath2> Ouch, you need a new job
14:34 < bridge> <ryozuki> nah its only twice a week
14:34 < bridge> <Jupstar ✪> In the land of the free, I'd have a slave transporting me around
14:34 < bridge> <ryozuki> and i rly dread interveiwing
14:34 < bridge> <ryozuki> i hate it
14:34 < bridge> <ryozuki> i know im worth but it makes u. feel worthless
14:34 < bridge> <Teero> ?? xD
14:34 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1427635789629493310/image.png?ex=68ef94f0&is=68ee4370&hm=f350ae022ff8e67be790590f308b66d81ecb81f8d3f5be35d75ea65c307841f2&
14:34 < bridge> <ryozuki> xd
14:35 < bridge> <jxsl13> got a pretty modern diesel recently. went to the netherlands and back, took only half of my gas tank for lile 500+km
14:35 < bridge> <learath2> I have been told by friends it gets better the more you do it
14:35 < bridge> <jxsl13> like
14:35 < bridge> <ryozuki> how much L per 100km
14:35 < bridge> <ryozuki> with mine i can achieve 4.9l/100km if its not city
14:35 < bridge> <jxsl13> somethere between 4.5 and 5.5L
14:35 < bridge> <ryozuki> but its gasoline
14:36 < bridge> <ryozuki> iirc if u drive at 80 and not 120 u save    gas
14:36 < bridge> <ryozuki> but slow
14:36 < bridge> <ryozuki> also i guess in germany ucan go at 300
14:36 < bridge> <ryozuki> xd
14:37 < bridge> <jxsl13> yeah, the netherlands were slow af. it was like 100km/h
14:37 < bridge> <ryozuki> in spain limit is 120
14:37 < bridge> <jxsl13> but I was like, my remaining range increased :kek:
14:37 < bridge> <learath2> NO, that's literally the only fun of owning a car. Going highway speeds
14:37 < bridge> <ryozuki> i usually go at 130
14:37 < bridge> <ryozuki> xd
14:37 < bridge> <ryozuki> bless the radar apps
14:37 < bridge> <learath2> In turkey they bumped it to 140 on newer highways. It depends on the road geometry
14:38 < bridge> <jxsl13> which makes sense
14:38 < bridge> <learath2> I will probably never drive in the EU unless I move back to Italy. The drivers licenses are so damn expensive here
14:39 < bridge> <learath2> Only Italy lets me convert my turkish license
14:39 < bridge> <ryozuki> i doubt. they will change limit in spain, roads are rly nice and new but same shit
14:39 < bridge> <ryozuki> if u get eu license u can drive in all eu
14:39 < bridge> <Jupstar ✪> convert to italian one, then convert the italian one to german one
14:39 < bridge> <ryozuki> u dont need to convert
14:39 < bridge> <ryozuki> i can drive in germany with my license
14:40 < bridge> <ryozuki> thats the point of eu
14:40 < bridge> <ryozuki> xd
14:40 < bridge> <Jupstar ✪> kinda xd
14:40 < bridge> <ryozuki> how much is gasoline there
14:40 < bridge> <ryozuki> unleaded 95
14:40 < bridge> <jxsl13> still convert to german one. for the prestige
14:40 < bridge> <ryozuki> here i can get at 1.3 euro
14:40 < bridge> <jxsl13> pretty cheap
14:41 < bridge> <jxsl13> diesel is 1.54€
14:42 < bridge> <jxsl13> gas 1.70€
14:42 < bridge> <ryozuki> damn
14:42 < bridge> <ryozuki> expensive
14:42 < bridge> <ryozuki> diesel here is like 1
14:42 < bridge> <ryozuki> iirc
14:43 < bridge> <jxsl13> we getting taxed on everything
14:49 < bridge> <Jupstar ✪> do you know what is on my mind today?
14:49 < bridge> <Jupstar ✪> 
14:49 < bridge> <Jupstar ✪> i wonder if we have statistically more even or odd ppl living in this world
14:49 < bridge> <Jupstar ✪> Or if it's perfectly balanced out
14:59 < bridge> <learath2> I need to somehow live in italy for 45 days at least
15:12 < bridge> <python311> Hello everyone,
15:12 < bridge> <python311> 
15:12 < bridge> <python311> I'm reasearching the custom development and hosting. I'm planning on opening block server in the future, with approximately 30-40 players.
15:12 < bridge> <python311> 
15:12 < bridge> <python311> Could you please tell me the following:
15:12 < bridge> <python311> 1. What specs for the server should I look for? I need to estimate how much the runtime will cost.
15:12 < bridge> <python311> 2. Block servers are known for the toxic community and there is a chance of a DDOS attack happening, is there any kind of advice/software to protect and deflect those attacks? Any specific hosting requirements?
15:12 < bridge> <python311> 3. How hard is to modify and develop something custom on the server side? Are there any guides from where to start, any documentation? Sorry for such opinionated question, I've got a bit of C++11 knowledge but I won't consider myself pro by any means.
15:13 < bridge> <python311> forgot to add:
15:13 < bridge> <python311> 4. Anticheat. How do modern server counter the problem with bots and hacked clients?
15:14 < bridge> <inv41idu53rn4m3> For hosting, the cost depends mostly on how much resistance to attacks you need. Actually hosting the game takes like no computing power.
15:16 < bridge> <inv41idu53rn4m3> DDNet servers basically don't. You can implement your own anti-bot but that's going to have to be pretty much all custom
15:17 < bridge> <inv41idu53rn4m3> I remember the wiki having links to some documentation sources but since the wiki got wiped I don't know if it's still there
15:17 < bridge> <python311> Don't they store successful runs in teehistorian format to post-factum analisys? I heard of some cheaters getting banned like N9mkoik and maybe some other TASers
15:18 < bridge> <inv41idu53rn4m3> Yeah teehistorian stores everything, I'm just saying that all bot detection is manual
15:27 < bridge> <[D] bencie> we have a antibot idk if we share it with other servers tho
15:27 < bridge> <inv41idu53rn4m3> What does it even do?
15:28 < bridge> <[D] bencie> im not allowed to share that
15:28 < bridge> <inv41idu53rn4m3> Makes sense
15:28 < bridge> <inv41idu53rn4m3> It feels as if it's doing very little
15:29 < bridge> <[D] bencie> kinda its stil pretty usefull tho
15:29 < bridge> <inv41idu53rn4m3> Would be fun to have stats on how many botters it has handled
15:31 < bridge> <[D] bencie> idk if im allowed to say specifiecs but its more then any single mod 
15:31 < bridge> <[D] bencie> 
15:31 < bridge> <[D] bencie> from what i see now
15:33 < bridge> <python311> I've seen header files for antibot, isn't it possible to just provide server hosters a compiled binary antibot library?
15:36 < bridge> <blue bencie> no(t) really without making it as painful as humanly possible to RE
15:37 < bridge> <blue bencie> and even then there is no way a provider will hand out his AB
15:37 < bridge> <blue bencie> you could ask chillerdragon who may help you out - but thats about it :p
15:37 < bridge> <python311> About my second question:
15:37 < bridge> <python311> 
15:37 < bridge> <python311> I'm not really experienced in any kind of real-time game development/netcode, just thoughts in the air. Have anyone made something like edge servers?
15:37 < bridge> <python311> 
15:37 < bridge> <python311> So we'd have an account system, for example, and those edge servers will perform something like traffic scrubbing, authentication (creation of UDP sessions for people with an account), rate limiting and proxying to the game server. Idk how much latency would it add honestly, but there is this one block server that gets hameered down from time to time really hard
15:38 < bridge> <python311> About my second question:
15:38 < bridge> <python311> 
15:38 < bridge> <python311> I'm not really experienced in any kind of real-time game development/netcode, just thoughts in the air. Have anyone made something like edge servers?
15:38 < bridge> <python311> 
15:38 < bridge> <python311> So we'd have an account system, for example, and those edge servers will perform something like traffic scrubbing, authentication (creation of UDP sessions for people with an account), rate limiting and proxying to the game server. Idk how much latency would it add honestly, but there is this one block server that gets hameered down from time to time really hard but other times it works just fine handling 30 tees on a 8 USD VPS
15:39 < bridge> <blue bencie> single-thread perfromance and network stabilityare the most important things to look out for IG.
15:39 < bridge> <blue bencie> 
15:39 < bridge> <blue bencie> i'd say a single server (network) of 30-40 players should be handled by 4-6GB Ram and a decent quad-core CPU
15:40 < ws-client1> **<ChillerDragon>** @python311 there is no proxy support yet. And nobody is working on it since 3 years see https://github.com/ddnet/ddnet/pull/4791
15:40 < ws-client1> **<ChillerDragon>** the server not needing any ressources anymore is sadly no longer true with ddnet. It needs more and more ram.
15:40 < ws-client1> **<ChillerDragon>** I am not going to share my antibot module sorry.
15:41 < bridge> <blue bencie> DDos protection is a more or less difficult topic, espacially if you're not proficient in networking. DDNet is being helped out by Davide: https://lowhosting.org
15:41 < ws-client1> **<ChillerDragon>** But for editing the gamemode you can also just use publicly available block servers such as F-DDrace and DDNet++
15:41 < bridge> <blue bencie> DDos protection is a more or less difficult topic, espacially if you're not proficient in networking. DDNet is being helped out by Davide: https://lowhosting.org, but regular DDos protection costs.. a LOT
15:41 < ws-client1> **<ChillerDragon>** for ddos protection the state of the art is davide as bencie already said
15:41 < bridge> <blue bencie> hi chiller, pls use discord - its me, melon
15:41 < ws-client1> **<ChillerDragon>** you are called bencie
15:42 < bridge> <blue bencie> hi chiller, pls use discord - its me, melon
15:42 < bridge> <blue bencie> 
15:42 < bridge> <blue bencie> i'm blue bencie!
15:42 < ws-client1> **<ChillerDragon>** yes
15:42 < ws-client1> **<ChillerDragon>** so i call you bencie
15:42 < bridge> <inv41idu53rn4m3> Oh wow apparently I've just been spreading misinformation on the internet
15:42 < bridge> <jxsl13> he is not melon but seemingly an imposter.
15:42 < bridge> <jxsl13> 👀
15:43 < ws-client1> **<ChillerDragon>** ddnet servers still runs smoother than minecraft
15:43 < ws-client1> **<ChillerDragon>** but compared to teeworlds it uses a lot more ram
15:43 < bridge> <jxsl13> but he's blue, dabedee dabedai
15:43 < ws-client1> **<ChillerDragon>** i my self am currently quite tight on ram
15:45 < bridge> <python311> Thanks for you answers guys
15:45 < bridge> <inv41idu53rn4m3> The bar is in hell
15:45 < bridge> <Teero> why does it use much ram lol?
15:46 < ws-client1> **<ChillerDragon>** c++ everywhere
15:46 < ws-client1> **<ChillerDragon>** teeworlds was more careful with allocations
15:46 < bridge> <blue bencie> really?
15:47 < bridge> <Teero> makes sense xd
15:47 < bridge> <Teero> teeworlds era was earlier
15:48 < bridge> <blue bencie> I guess developing a game that you wrote the engine for is a little easier to manage in terms of resource handling
15:48 < ws-client1> **<ChillerDragon>** also i doubt in ddnet anyone even cares 
15:48 < ws-client1> **<ChillerDragon>** its `std::vector` everywhere because ram is free in 2025
15:49 < ws-client1> **<ChillerDragon>** wait till i drop server support in this project https://github.com/ChillerDragon/teeworlds-asmr
15:49 < ws-client1> **<ChillerDragon>** it will use like no ram at all
15:49 < bridge> <jxsl13> a pc with less than 4gb of ram os effectively a microcontroller
15:50 < bridge> <jxsl13> is
15:50 < bridge> <Teero> xD
15:50 < ws-client1> **<ChillerDragon>** who needs ram if you have cpu registers
15:50 < bridge> <blue bencie> true, but if we talk VPS you can get pretty far with 4gb if you properly manage the used distro
15:50 < ws-client1> **<ChillerDragon>** for a single tw server yes 4gb should work
15:50 < bridge> <jxsl13> probably need to uninstall ddnet
15:50 < bridge> <jxsl13> heard it uses a lot of ram 👀
15:51 < bridge> <Teero> how much does a ddnet server use? 50mb?
15:51 < bridge> <blue bencie> gentoo + openrc - i call you could reach 50mb idle
15:51 < bridge> <blue bencie> or you trim the kernel down to a minimum, 20mb
15:51 < bridge> <Teero> no way xd
15:51 < bridge> <jxsl13> 50mb idle rip
15:52 < bridge> <blue bencie> openrc, musl, no logging
15:52 < bridge> <blue bencie> xd
15:52 < bridge> <Teero> maybe
15:52 < bridge> <ryozuki> uh iirc tw uses a lot of static buffers, in some cases it may over allocate
15:52 < bridge> <ryozuki> but ddnet is a more complex game
15:52 < bridge> <ryozuki> way more
15:52 < bridge> <ryozuki> also are u comparing 16 player ddnet vs 16 player tw or 64
15:52 < bridge> <ryozuki> cuz tw only handles 16
15:53 < bridge> <jxsl13> well, tw currently handles 0 players :kek:
15:53 < bridge> <ryozuki> ram si cheap to
15:53 < bridge> <blue bencie> heyheyhey, i saw a 0.7 enjoyer on ddnet like 3 months ago okay
15:53 < bridge> <blue bencie> game aint dead yet!
15:54 < bridge> <blue bencie> he did ask how to connect a dummy and quit shortly after tho so
15:54 < bridge> <blue bencie> he did ask how to connect a dummy and quit shortly after tho so eh..
15:54 < bridge> <blue bencie> rip?
15:54 < bridge> <Teero> @ryozuki what would you do first if you had no computational limits?
15:54 < bridge> <blue bencie> he did ask how to connect a dummy and quit shortly after tho so eh.. (well, he asked how to play with himself and people said dummy)
15:54 < bridge> <ryozuki> as in ddnet or? xD
15:54 < bridge> <Teero> in general
15:54 < bridge> <jxsl13> 0.7 is great but unfinished 😭
15:54 < bridge> <ryozuki> first, mine btc to get money for life to work on my side projects without worries
15:55 < bridge> <ryozuki> then maybe break some busy beaver records
15:55 < bridge> <ryozuki> hmm i guess ai is also compute intensive
15:55 < bridge> <ryozuki> https://en.wikipedia.org/wiki/Busy_beaver
15:56 < bridge> <ryozuki> oh
15:56 < bridge> <Teero> Imagine you could just brute force every problem xdd
15:56 < bridge> <ryozuki> i would also love compiling rust in 1ms
15:56 < bridge> <ryozuki> xddd
15:56 < bridge> <ryozuki> and firefox
15:56 < bridge> <ryozuki> it would be the perfect gentoo pc
15:56 < bridge> <jxsl13> imagine you could create matter from nothing.
15:57 < bridge> <ryozuki> u could use galactic algorithms in such pc
15:57 < bridge> <ryozuki> and it would be more efficient
15:57 < bridge> <ryozuki> https://en.wikipedia.org/wiki/Galactic_algorithm
15:57 < bridge> <Teero> yes
15:57 < bridge> <ryozuki> An example of a galactic algorithm is the fastest known way to multiply two numbers,[4] which is based on a 1729-dimensional Fourier transform.[5] It needs O ( n log ⁡ n ) {\displaystyle O(n\log n)} bit operations, but as the constants hidden by the big O notation are large, it is never used in practice. However, it also shows why galactic algorithms may still be useful. The authors state: "we are hopeful that with further refinements, the algorith
15:58 < bridge> <ryozuki> well u could also break all encryption
15:58 < bridge> <ryozuki> the world would turn in fire
15:58 < bridge> <ryozuki> u wont need to mine btc
15:58 < bridge> <Teero> yes
15:58 < bridge> <ryozuki> because u can break it
15:59 < bridge> <Teero> I would check if I had free will
15:59 < bridge> <ryozuki> i like this read https://quarter--mile.com/Human
16:00 < bridge> <ryozuki> and this https://users.ece.cmu.edu/~gamvrosi/thelastq.html
16:00 < bridge> <ryozuki> @teero777 make a ai and ask "how can entropy be reversed?"
16:00 < bridge> <ryozuki> `How can the net amount of entropy of the universe be massively decreased? `
16:01 < bridge> <Teero> isn't that proven to be impossible? xd
16:01 < bridge> <ryozuki> did u read the last question by isaac asimov
16:01 < bridge> <ryozuki> its short
16:01 < bridge> <ryozuki> .
16:10 < bridge> <chillerdragon> Rookie numbers I have like 10 0.7 players daily on fng and had a full 12 player ctf lobby with only 0.7 players recently
16:16 < bridge> <ryozuki> A measurement of an Oct. 6 DDoS believed to have been launched through multiple botnets operated by the owners of the Aisuru botnet. Image: DDoS Analyzer Community on Telegram.
16:16 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1427661229031292968/29-69t.png?ex=68efaca1&is=68ee5b21&hm=c15b2ec0a670cea79c8deb9fb97d93c462f4b19a0ae78bcacc4d49019690a8d8&
16:16 < bridge> <ryozuki> https://krebsonsecurity.com/2025/10/ddos-botnet-aisuru-blankets-us-isps-in-record-ddos/
16:16 < bridge> <ryozuki> rookie numbers
16:16 < bridge> <ryozuki> we used to this in ddnet
16:31 < bridge> <chillerdragon> 29.69Tbps oO
16:47 < bridge> <learath2> Jupstar has informed me that teeworlds was also in fact shit and we should all use ddnet-rs frfr
16:48 < bridge> <jxsl13> fr
16:51 < bridge> <Jupstar ✪> such a rage bait again
16:52 < bridge> <Teero> i don' think ddnet-rs is careful with allocations either :justatest:
16:52 < bridge> <Jupstar ✪> static sized arrays also cost ram inside a heap object
16:52 < bridge> <inv41idu53rn4m3> Damn weebs using lame-ass names even when break-the-lawing
16:52 < bridge> <learath2> I have never once done a ragebait ever. I wouldn't even know what a rage is
16:53 < bridge> <Teero> im back from my dentist appointment
16:53 < bridge> <Teero> he told me i'm going to be crippled for life
16:53 < bridge> <Jupstar ✪> as long as you use wtf you allocate there is absolutely nothing wrong with using std::vector over static sized stuff
16:53 < bridge> <ryozuki> rip
16:53 < bridge> <ryozuki> yeah
16:53 < bridge> <Jupstar ✪> ofc it's stupid if you pre alloc 4gb of ram, just to power some GC
16:53 < bridge> <ryozuki> static for known bounds
16:53 < bridge> <ryozuki> vec for dynamic
16:53 < bridge> <ryozuki> rust for sane software
16:54 < bridge> <ryozuki> c++ for crazed
16:54 < bridge> <Jupstar ✪> and yeah re-doing can ofc be performance problem
16:54 < bridge> <Jupstar ✪> but we only talk about ram usage rn
16:54 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1427670882943369379/togif-9.png?ex=68efb59f&is=68ee641f&hm=e2f716144e656c4ee1d519a0ff2a868894765523ae71f5d432a4a36e9a079589&
16:54 < bridge> <jxsl13> he's trying to rage bait my beloved
16:54 < bridge> <ryozuki> https://tenor.com/view/rip-bozo-gif-22294771
16:54 < bridge> <jxsl13> GC mentioned
16:55 < bridge> <Teero> https://tenor.com/view/spongebob-good-boy-rex-worm-felton-thingggg-gif-13170442711656564108
16:55 < bridge> <jxsl13> what kind of cripple?
16:56 < bridge> <ryozuki> most rust coders probs dont use unsafe, esp if they dont do low level stuff
16:56 < bridge> <ryozuki> i used loads tho for my kernel
16:56 < bridge> <ryozuki> rust cant know the physical addr the acpi gives me for the lapic and that i translated to virtual with my own mapper exists xd
16:57 < bridge> <ryozuki> crippled, and dentist, u mean ur missing tooth?
16:59 < bridge> <Teero> nah, more like hes gonna stab me in some dark alley if i don't start brushing my teeth after every meal
16:59 < bridge> <Jupstar ✪> chillerdragon: how much money do you give me, if i write you a teeworlds vanilla server, in safe rust that uses less RAM and runs faster than the cpp one?
16:59 < bridge> <Jupstar ✪> Both at the same time
16:59 < bridge> <Teero> @jupeyy_keks does chiller own the code then?
17:00 < bridge> <Jupstar ✪> he can do what he wants with it
17:00 < bridge> <Teero> 3€
17:00 < bridge> <Jupstar ✪> i didn't ask you pooro
17:00 < bridge> <Teero> 2.98€
17:01 < bridge> <Teero> 2.97€
17:01 < bridge> <Teero> 2.96€
17:01 < bridge> <Teero> 2.95€
17:01 < bridge> <Teero> 2.94€
17:01 < bridge> <Teero> 2.93€
17:01 < bridge> <Teero> 2.92€
17:01 < bridge> <Teero> 2.91€
17:01 < bridge> <Teero> 2.9€
17:01 < bridge> <Teero> 2.89€
17:01 < bridge> <Teero> 2.88€
17:01 < bridge> <Teero> 2.87€
17:01 < bridge> <Teero> 2.86€
17:01 < bridge> <Teero> 2.85€
17:01 < bridge> <Teero> 2.84€
17:01 < bridge> <Teero> 2.83€
17:01 < bridge> <Jupstar ✪> did you invest your cash into etfs or what is happening
17:01 < bridge> <Teero> 2.82€
17:01 < bridge> <Teero> 2.80€
17:01 < bridge> <Teero> -11.72€
17:01 < bridge> <Teero> -17.52€
17:02 < bridge> <Teero> -52.11€
17:02 < bridge> <Teero> it went down
17:02 < bridge> <Teero> you should have taken the 3€ offer
17:03 < bridge> <Teero> you gambled too much jupsti
17:03 < bridge> <learath2> I can give you one MELANIA for it
17:03 < bridge> <learath2> Or half a TRUMP
17:03 < bridge> <blue bencie> :cat_hmm:  learath said trump twice
17:03 < bridge> <jxsl13> teero is paying in high risk investments
17:03 < bridge> <blue bencie> one more and he'll summon something
17:04 < bridge> <Teero> -33.21€
17:04 < bridge> <Teero> -31.1€
17:05 < bridge> <Teero> 591.12€
17:05 < bridge> <jxsl13> fast, take it
17:05 < bridge> <Teero> -12.2€
17:05 < bridge> <jxsl13> price went up
17:05 < bridge> <jxsl13> damn
17:05 < bridge> <Jupstar ✪> yeah no
17:05 < bridge> <Jupstar ✪> i don't take money from teero
17:06 < bridge> <jxsl13> then take his debt
17:06 < bridge> <Teero> it's the DDCoin stock, i don't have any other payment option
17:06 < bridge> <jxsl13> :kek:
17:06 < bridge> <learath2> We should do a ddcoin rugpull but fund ddnet for years with the rugpull proceeds
17:06 < bridge> <jxsl13> sounds solid
17:07 < bridge> <Teero> 0.68€
17:10 < bridge> <ryozuki> :justatest:
17:10 < bridge> <ryozuki> :nouis: as icon
17:13 < bridge> <Jupstar ✪> @teero777 when will we create an alternative steam ui that starts in <200ms
17:13 < bridge> <Jupstar ✪> I hate this trash so much xD
17:18 < bridge> <Assa> Hello other human beeings with free will
17:18 < bridge> <Jupstar ✪> You still believe?
17:18 < bridge> <Jupstar ✪> copium
17:20 < bridge> <Teero> hello
17:21 < bridge> <Teero> i will create an alternative universe where waking up takes < 5mins
17:22 < bridge> <chillerdragon> @jupeyy_keks: didn’t you already do that?
17:23 < bridge> <chillerdragon> If I want a Teeworlds vanilla server I can also use a Teeworlds vanilla server :D the performance is good
17:23 < bridge> <Jupstar ✪> faster maybe, but no it uses more ram, i dunno if the vanilla code itself too, but it at leasts hosts a http server for resources
17:23 < bridge> <Jupstar ✪> that alone probs wastes like 1MiB or smth xd
17:24 < bridge> <chillerdragon> Yea no thanks
17:24 < bridge> <chillerdragon> I don’t think I have use for it
17:24 < bridge> <Jupstar ✪> jajaja
17:24 < bridge> <Jupstar ✪> then why rage bait
17:24 < bridge> <Jupstar ✪> and activate the c boomers
17:25 < bridge> <chillerdragon> Oh uhm C is nice
17:26 < bridge> <Jupstar ✪> Today first time ever
17:26 < bridge> <Jupstar ✪> I saw Teero disliking c in front of me
17:26 < bridge> <chillerdragon> I would like to have a ddnet server written in C
17:26 < bridge> <Jupstar ✪> Hope in humanity was restored for a moment
17:26 < bridge> <chillerdragon> That is fast and light weight to run and compile
17:26 < bridge> <chillerdragon> Where I can also edit the code to bloat in features
17:27 < bridge> <Teero> the compiler, not the language!!!
17:27 < bridge> <Jupstar ✪> Yayaya
17:27 < bridge> <Jupstar ✪> It's broken by design right
17:27 < bridge> <Jupstar ✪> and compiler has to fix
17:27 < bridge> <Teero> no??? XDDD
17:28 < bridge> <Teero> maybe its even my skill issue and there is a special flag to not allow implicit pointer type conversion. or at least warn me about them xdd
17:29 < bridge> <Jupstar ✪> In any case the language does not enforce it by default
17:29 < bridge> <Jupstar ✪> by design
17:29 < bridge> <Teero> i guess so
17:29 < bridge> <Teero> it's the programmers fault though
17:29 < bridge> <Jupstar ✪> Yes
17:30 < bridge> <Jupstar ✪> Why do humans even use tools
17:30 < bridge> <Jupstar ✪> We can also survive without them
17:30 < bridge> <Teero> laziness?
17:30 < bridge> <Jupstar ✪> I dunno, but one thing is clear.. We got better by improving our tools
17:31 < bridge> <Jupstar ✪> Not getting better with the tools we already had
17:31 < bridge> <Jupstar ✪> Ofc to a certain point too
17:31 < bridge> <Jupstar ✪> But this point was reached long after cpp released
17:31 < bridge> <Teero> yea but you can't really say this about programming xd
17:31 < bridge> <Jupstar ✪> I'd say you can
17:32 < bridge> <Teero> rewriting my physics in python would be stupid no? even though it is technically a more powerful tool.
17:32 < bridge> <Jupstar ✪> No
17:32 < bridge> <Teero> it's not the right tool for the job
17:32 < bridge> <Jupstar ✪> python is proven to be one of the slowest scripting languages with annoying syntax
17:32 < bridge> <filoqcus> https://tenor.com/view/pipotam-baby-hippo-hippo-wash-shower-gif-3406421565683572068
17:33 < bridge> <Jupstar ✪> This is not comparable
17:33 < bridge> <Teero> bash is even worse and we use it every day xD
17:33 < bridge> <Jupstar ✪> Also python is not nice to design bigger code bases
17:33 < bridge> <Jupstar ✪> Bash is very straight forward, but I agree it's also not nice to code complex stuff in it
17:33 < bridge> <Teero> it's also slower than python xd
17:34 < bridge> <Jupstar ✪> I only trust benchmarks
17:34 < bridge> <Jupstar ✪> pydon is really ass
17:35 < bridge> <Jupstar ✪> lua might be comparably slow
17:36 < bridge> <Jupstar ✪> another ass lang 😬
17:36 < bridge> <Jupstar ✪> yeah no, if python wins, then by cheating and calling some kind of c lib
17:36 < bridge> <Teero> im not joking xD
17:39 < bridge> <Jupstar ✪> good
17:39 < bridge> <Jupstar ✪> let's make custom linux distro.
17:39 < bridge> <Jupstar ✪> 
17:39 < bridge> <Jupstar ✪> no script langs allowed
17:39 < bridge> <Jupstar ✪> no text configs
17:39 < bridge> <Jupstar ✪> only binary
17:39 < bridge> <Jupstar ✪> xd
17:39 < bridge> <Jupstar ✪> just fuck everyone up
17:40 < bridge> <Jupstar ✪> the steam alt client can wait
17:51 < bridge> <Teero> wouldn't actually be that bad lol. just abstract the compiling
17:51 < bridge> <Assa> I don't know if you have a free will, but I certainly have one
17:51 < bridge> <Assa> how can I join 🙁
17:51 < bridge> <Jupstar ✪> Klar
17:52 < bridge> <Assa> I think therefore I random :p
17:52 < bridge> <jxsl13> send money to this address to join
17:52 < bridge> <Jupstar ✪> Could a free will just die, in an instant.. bcs it decides to?
17:52 < bridge> <Jupstar ✪> I mean otherwise it's not really free or is it?
17:53 < bridge> <Assa> We can't even define what a free will is
17:53 < bridge> <Teero> like
17:53 < bridge> <Teero> ```c
17:53 < bridge> <Teero> #!/usr/bin/clang -O3
17:53 < bridge> <Teero> #include <stdio.h>
17:53 < bridge> <Teero> int main(void) {
17:53 < bridge> <Teero>   printf("Hello script\n");
17:53 < bridge> <Teero>   return 0;
17:53 < bridge> <Teero> }
17:53 < bridge> <Teero> ```
17:53 < bridge> <Teero> @jupeyy_keks 
17:53 < bridge> <Teero> and the shell caches the builds
17:53 < bridge> <Assa> if it only boils down to randomness, then, with the current state of knowledge, we have one
17:53 < bridge> <Teero> idk why this is not a thing
17:53 < bridge> <Jupstar ✪> i wonder too
17:54 < bridge> <Jupstar ✪> hart to estimate how much we waste with string parsing all the day
17:54 < bridge> <Jupstar ✪> but probs quite a lot
17:54 < bridge> <peter0x44> there's another trick you can do
17:54 < bridge> <peter0x44> ```
17:54 < bridge> <peter0x44> #if 0
17:54 < bridge> <peter0x44> cc file.c
17:54 < bridge> <peter0x44> exit 0
17:54 < bridge> <peter0x44> #endif
17:54 < bridge> <peter0x44> ```
17:54 < bridge> <peter0x44> then you can do `sh file.c` and it will run the commands there
17:54 < bridge> <inv41idu53rn4m3> So actually instead of clang you'd use a program that uses a compiler and manages a cache
17:55 < bridge> <Teero> the shell is the program that manages the compiler and cache xd
17:56 < ws-client1> **<ChillerDragon>** lmao c scripts
17:59 < bridge> <inv41idu53rn4m3> Why the shell? We have standards for shells and this wouldn't follow them, plus shebangs are kind of handled by the kernel
17:59 < bridge> <Teero> man its pseudo code
17:59 < bridge> <Teero> also if you are doing this you are not using a normal shell xd
17:59 < ChillerDragon> bruv why are there more people on my secret test server that has a password than on my public servers
17:59 < bridge> <inv41idu53rn4m3> I'm just saying you could write a separate application and then you could literally just use shebangs
18:00 < ChillerDragon> do ppl really try pw servers until they crack the pass?
18:00 < bridge> <Assa> yes they do
18:01 < bridge> <Assa> also your server is in risk of getting ddos just by having a password on it
18:01 < ChillerDragon> lel
18:01 < bridge> <zhn> lol that's nice
18:01 < ChillerDragon> i mean the password is 123
18:01 < bridge> <zhn> ill keep it for internal use xd
18:01 < ChillerDragon> but how did they guess it
18:01 < bridge> <Assa> google top 10 worst passwords
18:02 < bridge> <inv41idu53rn4m3> another issue with this is that you need to deal with dependencies
18:02 < bridge> <inv41idu53rn4m3> when writing shell scripts you have access to every executable on the system as if they're functions from a library or something
18:02 < bridge> <zhn> bro got the top1 password set
18:02 < bridge> <zhn> what did you expect xd
18:02 < ChillerDragon> dictonary attack on tw servers?
18:02 < ChillerDragon> i expected ppl not to try @zhn
18:02 < bridge> <zhn> thats amn 1000%
18:02 < ChillerDragon> no its russian kids
18:02 < bridge> <zhn> brute forced ur servers
18:02 < bridge> <Assa> bro here is a safer password: `ThisPasswordIsLiterallySafer!`
18:02 < ChillerDragon> but its not the first time
18:02 < bridge> <zhn> yeah amn's army
18:02 < bridge> <inv41idu53rn4m3> using executables from C code would be a huge pain since you'd have to do string processing at every step
18:03 < ChillerDragon> @Assa cant remember that
18:03 < bridge> <Assa> `CantRememberThat!`
18:03 < ChillerDragon> also i dont mind the intruders i just find it facinating
18:03 < bridge> <zhn> my latest ad hoc password for ctf server was fuckoffkid
18:04 < ChillerDragon> i just have a pass on the server because it has no content yet
18:04 < bridge> <zhn> you can take it xd
18:04 < bridge> <Assa> make bait servers and add a jumpscare or something when joining
18:04 < ChillerDragon> @zhn wit is gonna see this!
18:04 < bridge> <zhn> xddd
18:04 < bridge> <inv41idu53rn4m3> `SomethingABitMoreMemorable!` (I literally use this password for one service)
18:04 < bridge> <inv41idu53rn4m3> (I trust you guys won't dox me and steal my phone to break the 2FA)
18:04 < ChillerDragon> ez leak
18:04 < bridge> <zhn> master password for my phone is masterpassword
18:05 < ChillerDragon> i remember the good times when we all planned where to store cattos passwords xd
18:05 < bridge> <Assa> just use a pw manager
18:05 < bridge> <zhn> tw manager
18:05 < bridge> <Teero> nice xD
18:05 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1427688816063418388/image.png?ex=68efc652&is=68ee74d2&hm=457a70eee1f32701594b4151509b0095d927446216228e801cc4f6c0bbac273f&
18:05 < bridge> <Teero> so cursed
18:05 < ChillerDragon> @Assa yes but where to store the pw manager data
18:05 < bridge> <Teero> ```c
18:05 < bridge> <Teero> #if 0
18:05 < bridge> <Teero> cc lol.c -o lol
18:05 < bridge> <Teero> ./lol
18:05 < bridge> <Teero> exit 0
18:06 < bridge> <Teero> #endif
18:06 < bridge> <Teero> 
18:06 < bridge> <Teero> #include <stdio.h>
18:06 < bridge> <Teero> int main(void) {
18:06 < bridge> <Teero>   printf("hello script\n");
18:06 < bridge> <Teero>   return 0;
18:06 < bridge> <Teero> }
18:06 < bridge> <Teero> ```
18:06 < bridge> <inv41idu53rn4m3> can't really use them when using machines that aren't mine
18:06 < bridge> <Assa> in my cloud
18:06 < ChillerDragon> teero this only works if the filename is lol.c?
18:06 < ChillerDragon> go make it flexible
18:06 < ChillerDragon> bash knows its own filename
18:07 < bridge> <peter0x44> I only showed it as briefly as I could obviously you can make it more complicated if you want
18:07 < ChillerDragon> also hide it in the #include <script.h> xd
18:08 < bridge> <inv41idu53rn4m3> Just replace lol.c with $0?
18:08 < ChillerDragon> ye
18:08 < ChillerDragon> spoiler
18:08 < ChillerDragon> and write binary into /tmp i guess to avoid pollution
18:09 < ChillerDragon> also cache based on last edit date
18:09 < bridge> <inv41idu53rn4m3> maybe exit with the same exit code as `./lol`
18:09 < ChillerDragon> oh nice yes
18:09 < bridge> <Assa> maybe set -e makes sense, idk
18:10 < ChillerDragon> and then release as open source project
18:10 < bridge> <Teero> you guys are horrible people xD
18:11 < belkka> It's a good habit to always use "$0" (with quotes) instead of $0, to prevent bash word splitting if the value contains spaces
18:11 < bridge> <inv41idu53rn4m3> Get 2000 stars on GitHub, lose your mind as there's tons of feature requests and massive feature creep over the next few months, abandon the project
18:12 < bridge> <inv41idu53rn4m3> :greenthing:
18:13 < bridge> <inv41idu53rn4m3> You know, maybe the external application is a better idea than prepending an ever growing shell script to your C program
18:13 < bridge> <Jupstar ✪> always these random ppl that write exactly 1 msg
18:16 < bridge> <Teero> how would we make this work on windows though xd
18:17 < bridge> <Teero> windows land is hard
18:19 < bridge> <Jupstar ✪> Here @essigautomat now you are free from that PR
18:19 < bridge> <Jupstar ✪> Hope that helps you to find your free will
18:20 < bridge> <Jupstar ✪> 🙏
18:20 < bridge> <Assa> I love you ❤️
18:20 < bridge> <Assa> I am going to refactor this code this week, switching from ints to floating point values (as you suggested)
18:21 < bridge> <Jupstar ✪> Cool
18:21 < bridge> <Assa> with _this code_ I mean all of quad clipping
18:21 < bridge> <Jupstar ✪> Also for the shaders?
18:21 < bridge> <Assa> :justatest:
18:21 < bridge> <Jupstar ✪> Also for the shaders
18:21 < bridge> <Assa> maybe if you guide me
18:21 < bridge> <Teero> okay:
18:21 < bridge> <Teero> ```c
18:21 < bridge> <Teero> #if 0
18:21 < bridge> <Teero> cc "$0" -o "${0%.c}"
18:21 < bridge> <Teero> ./"${0%.c}" "$@"
18:21 < bridge> <Teero> rm ./"${0%.c}"
18:21 < bridge> <Teero> exit 0
18:21 < bridge> <Teero> #endif
18:21 < bridge> <Teero> ```
18:21 < bridge> <Teero> ready for production xd
18:21 < bridge> <Jupstar ✪> sick
18:22 < bridge> <Assa> when will 19.5 release?
18:22 < bridge> <Jupstar ✪> yesterday
18:22 < bridge> <Jupstar ✪> Or even today
18:22 < bridge> <Assa> oh yeah :deen_star: I still need to do the benchmarking update
18:23 < bridge> <Teero> okay im making a repo xD
18:24 < bridge> <Teero> very funny xd
18:25 < bridge> <inv41idu53rn4m3> maybe `exit $?` instead
18:25 < bridge> <Teero> good idea
18:25 < bridge> <inv41idu53rn4m3> wait no that's the exit code of rm
18:26 < bridge> <Teero> ```
18:26 < bridge> <Teero> #if 0
18:26 < bridge> <Teero> cc "$0" -o "${0%.c}"
18:26 < bridge> <Teero> ./"${0%.c}" "$@"
18:26 < bridge> <Teero> exit_code=$?
18:26 < bridge> <Teero> rm ./"${0%.c}"
18:26 < bridge> <Teero> exit $exit_code
18:26 < bridge> <Teero> #endif
18:26 < bridge> <Teero> ```
18:26 < bridge> <Teero> like this maybe
18:26 < bridge> <Teero> ```c
18:26 < bridge> <Teero> #if 0
18:26 < bridge> <Teero> cc "$0" -o "${0%.c}"
18:26 < bridge> <Teero> ./"${0%.c}" "$@"
18:26 < bridge> <Teero> exit_code=$?
18:26 < bridge> <Teero> rm ./"${0%.c}"
18:26 < bridge> <Teero> exit $exit_code
18:26 < bridge> <Teero> #endif
18:26 < bridge> <Teero> ```
18:27 < bridge> <Teero> like this maybe
18:27 < bridge> <inv41idu53rn4m3> running and removing doesn't make sense if compilation fails...
18:27 < bridge> <inv41idu53rn4m3> but at this rate it's going to get annoyingly long annoyingly quickly
18:28 < bridge> <Teero> its gonna be in a header so its fine i think
18:29 < bridge> <Teero> no we can just || exit
18:29 < bridge> <inv41idu53rn4m3> smort
18:30 < bridge> <Teero> ahhh
18:30 < bridge> <Teero> we cant have it in a header
18:30 < bridge> <Teero> uhh
18:30 < bridge> <Teero> preprocessor obviously won't work that way+
18:31 < bridge> <Teero> preprocessor obviously isn't here
18:40 < bridge> <Teero> you guys think this a good repo name (self executing c)
18:40 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1427697620658290879/image.png?ex=68efce86&is=68ee7d06&hm=aad5fc239f9fdd5fef19d3d945cc25fed971773dec15c2cff0fa066e035c33d6&
18:40 < bridge> <Teero> you guys think this a good repo name? (self executing c)
18:40 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1427697620658290879/image.png?ex=68efce86&is=68ee7d06&hm=aad5fc239f9fdd5fef19d3d945cc25fed971773dec15c2cff0fa066e035c33d6&
18:42 < bridge> <Assa> @inv41idu53rn4m3 yes we could, I unfortunatly don't have much time today and I am time limited by 10 minutes in the showroom 🙈
18:43 < bridge> <inv41idu53rn4m3> Yeah you're good :) :)
18:43 < bridge> <inv41idu53rn4m3> Just thinking that when fps is already that high the most important part becomes possible drops
18:43 < bridge> <Assa> unfortunatly measuring the max frametimes seems **very** unreliable
18:43 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1427698401109217311/ddnet-19.5-minframetimes.png?ex=68efcf40&is=68ee7dc0&hm=fbbb30b58e2e4e1344a3d8d3fd8ffb2bbf6fec21e8b06c07ad7acf50b9ed77ca&
18:43 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1427698401511997510/ddnet-19.5-maxframetimes.png?ex=68efcf40&is=68ee7dc0&hm=e12c404e29122379ad1f4fbe5f617adcc8f5ecf361c32fcb97d6bf30a484c855&
18:43 < bridge> <inv41idu53rn4m3> though averages make sense for power consumption
18:44 < bridge> <Assa> but this is not like the top 1%, just the _worst value_
18:44 < bridge> <Assa> but this is not like the top 1%, just the _worst  and best value_
18:44 < bridge> <chillerdragon> Sexy name teero
19:01 < bridge> <Teero> https://github.com/Teero888/cscript
19:01 < bridge> <Teero> okay chillerdragon you can star now please.
19:37 < bridge> <aegisub> SO TRUUUUUEEEEEEEEE
19:54 < bridge> <Ewan> is it spam if it's arguably the most relevant possible thing for this channel
19:56 < bridge> <kebscs> 2 Days in the back is an event map?
19:57 < bridge> <green bencie> yes
19:57 < bridge> <kebscs> was the most popular brutal map
19:57 < bridge> <green bencie> modified from back in the days 2, switching unhookables with hookables
19:57 < bridge> <kebscs> wonder how that will turn out
20:03 < bridge> <learath2> Wooo
20:11 < bridge> <aegisub> you know it's a good change when the commit message has emojis in it
20:15 < bridge> <Ewan> ai ruined emojis
20:18 < bridge> <Teero> you have to use custom emojis now
20:19 < bridge> <Teero> also ascii emojis are still good
20:19 < bridge> <Teero> \o/
20:22 < bridge> <Ewan> yeah
20:22 < bridge> <pioooooo> utf8 better (●'◡'●)
20:24 < bridge> <Ewan> (✿´‿`)
20:25 < bridge> <Teero> ez
20:25 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1427724010023817368/image.png?ex=68efe719&is=68ee9599&hm=0b6f34fe3136fda6f2c6b6800ab1c6503fff13b2051cc9afc17184a7dc37cf69&
20:42 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1427728316852469790/iknowwhowrotethisbuticantproveityet-v0-ne5eu2yhtyuf1.png?ex=68efeb1c&is=68ee999c&hm=2f39634491dc1cea58bf88047c0faea9c757f7d1c8f9e6ec69209d7cfd1f9286&
20:51 < bridge> <kebscs> 2025?
20:51 < bridge> <kebscs> chat gps released in 2022 👴
20:51 < bridge> <kebscs> chat gpt released in 2022 👴
21:21 < bridge> <python311> Still runs a lot of production code and is scalable + uses fast libraries for math and science. Just not applicable for performance oriented code, like video game programming as on cannot utilize CPU effectively. They're removing GIL so in the nearest future true parallelism becomes achievable (it is even now just run the interpreter with disabled GIL).
21:23 < bridge> <Jupstar ✪> your opinion is denied
21:23 < bridge> <python311> Still runs a lot of production code and is scalable + uses fast libraries for math and science. Just not applicable for performance oriented code on a single machine, like video game programming as on cannot utilize CPU effectively. They're removing GIL so in the nearest future true parallelism becomes achievable (it is even now just run the interpreter with disabled GIL).
21:27 < bridge> <aegisub> ding dong your opinion is wrong
21:27 < bridge> <Jupstar ✪> You expressed your opinion, I expressed facts
21:28 < bridge> <Ewan> they're removing GIL finally?
21:28 < bridge> <Ewan> is that switching off of cpython or did they do some huge refactor
21:29 < bridge> <Assa> the annoying syntax sounds like skill issue, syntax is easier than rusts
21:30 < bridge> <Ewan> how much of the code used for your performance is compiled & run via uWSGI btw
21:30 < bridge> <Ewan> because that's very different
21:30 < bridge> <Jupstar ✪> your opinion got rejected
21:30 < bridge> <Assa> I just reject your rejection
21:30 < bridge> <Jupstar ✪> cannot parse, wrong indention
21:31 < bridge> <Assa> then get a proper IDE and linter
21:31 < bridge> <Ewan> how are your lisp skills?
21:31 < bridge> <Assa> or are you doing rust in a vim?
21:31 < bridge> <Jupstar ✪> good tools * bad lang = bad lang
21:31 < bridge> <Ewan> what about good lang * bad tools = bad lang?
21:31 < bridge> <Ewan> because ur describing c/cpp
21:31 < bridge> <Jupstar ✪> 1000 * 0 = 0
21:32 < bridge> <Ewan> because that's describing c/cpp
21:32 < bridge> <Jupstar ✪> cpp is a decent lang with decent tools
21:32 < bridge> <Assa> cpp has some really good tools
21:32 < bridge> <Ewan> maybe if you are comfortable with it
21:32 < bridge> <Jupstar ✪> cpp suffers from what everything suffers. backward compat
21:32 < bridge> <Ewan> cpp newbs having to learn cmake and the fundamentals of distributing libraries to even get started
21:33 < bridge> <Ewan> doesn't sound like good tooling
21:33 < bridge> <Assa> I'd put cmake on the lower end of cpp tooling tbh :justatest:
21:33 < bridge> <Assa> profiling, debugging and something like valgrind works really well
21:33 < bridge> <Ewan> it leaves a lot to be desired but i don't think anyone else comes close as far as feature parity is concerned
21:34 < bridge> <Assa> java has maven for example, which is easier than cmake, but you will run into other similar issues
21:34 < bridge> <Ewan> we are talking about good langs rn
21:34 < bridge> <Ewan> :troll:
21:34 < bridge> <Assa> we are talking about good tooling rn
21:36 < bridge> <Assa> at work I currently do a lot of PHP, so complain less please about everything else.
21:37 < bridge> <Assa> the only decent IDE i know is behind a paywall
21:38 < bridge> <Ewan> php sounds ok from what i have heard
21:38 < bridge> <Ewan> fast
21:38 < bridge> <Ewan> standard
21:38 < bridge> <Jupstar ✪> but the book of truth does not lie.
21:38 < bridge> <Jupstar ✪> cpp like c can compete with the champion
21:38 < bridge> <Jupstar ✪> https://programming-language-benchmarks.vercel.app/cpp-vs-rust
21:38 < bridge> <Ewan> the holy scriptures
21:39 < bridge> <Jupstar ✪> 🙏
21:40 < bridge> <jxsl13> Go tooling is up there with the other  S rank languages 👀
21:45 < bridge> <Teero> yea @jupeyy_keks can you do this in rust?
21:46 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1427744502537392359/image.png?ex=68effa2f&is=68eea8af&hm=d7ad49ada46bb683c25207d7a56ac47b283ed685e8a57ee8a027ca15334cbe74&
21:47 < bridge> <Ewan> am i missing something
21:49 < bridge> <Jupstar ✪> rust has proc macros bro
21:49 < bridge> <Jupstar ✪> in rust you can start ddnet during compile time
21:49 < bridge> <Teero> bruh you need a main function xd
21:50 < bridge> <Teero> ```cpp
21:50 < bridge> <Teero> #if 0
21:50 < bridge> <Teero> cc "$0" -o "${0%.c}" || exit
21:50 < bridge> <Teero> ./"${0%.c}" "$@"
21:50 < bridge> <Teero> exit_code=$?
21:50 < bridge> <Teero> rm ./"${0%.c}"
21:50 < bridge> <Teero> exit $exit_code
21:50 < bridge> <Teero> #endif
21:50 < bridge> <Teero> 
21:50 < bridge> <Teero> #include <stdio.h>
21:50 < bridge> <Teero> int main(void) {
21:50 < bridge> <Teero>   printf("Hello from cscript!\n");
21:50 < bridge> <Teero>   return 0;
21:50 < bridge> <Teero> }
21:50 < bridge> <Teero> ```
21:50 < bridge> <Ewan> then it's not production ready
21:50 < bridge> <milkeeycat> go mentioned
21:50 < bridge> <Teero> ??
21:50 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1427745462332555274/image.png?ex=68effb14&is=68eea994&hm=6e66fb8da30791283e760f9361fbc5abbfb5b156ab5dfff6241cd6d296e7ae7b&
21:50 < bridge> <Teero> the snippet
21:51 < bridge> <Teero> whatever is below it is your code
21:51 < bridge> <Teero> xd
21:51 < bridge> <Ewan> ya
21:51 < bridge> <Ewan> would a shebang totally destroy this
21:51 < bridge> <Ewan> it seems to work in fish shell but
21:51 < bridge> <Teero> what
21:51 < bridge> <Ewan> idk
21:51 < bridge> <Ewan> sus
21:51 < bridge> <Teero> you cant put a shebang in a c file as the first line xd
21:52 < bridge> <Ewan> seems to work as second line tho
21:52 < bridge> <Ewan> mabye it is just being ignored bcs #
21:52 < bridge> <Teero> probably
21:52 < bridge> <jxsl13> #!
21:52 < bridge> <Ewan> seems to work i think
21:52 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1427746011467616267/image.png?ex=68effb97&is=68eeaa17&hm=6e09bcc62918247b2d1f2191cfe32a9bb25cbf1bc8d2d71ebb91030029b1b4ac&
21:58 < bridge> <Teero> nice
21:59 < bridge> <Jupstar ✪> I cannot believe I'll need to execute a c file inside bash soon to compile your protects
22:00 < bridge> <Jupstar ✪> Because we both know you'll use this xd
22:00 < bridge> <Ewan> i am deeply surprised the shebang works on line 2
22:00 < bridge> <Ewan> coupled with tcc it could be insanely powerful
22:00 < bridge> <Jupstar ✪> Include all c files to only have one compilation unit
22:00 < bridge> <milkeeycat> that's something I'd expect from chillerdragon
22:01 < bridge> <milkeeycat> make bash do everything
22:01 < bridge> <Jupstar ✪> Chiller would do the opposite to have bash in c
22:01 < bridge> <Jupstar ✪> Modding support
22:03 < bridge> <Teero> XD
22:53 < bridge> <Assa> xD add ddnet bash modding support
