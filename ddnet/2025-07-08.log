00:55 < bridge> <Ewan> Windows = 1 api is the most ape brained concept
00:55 < bridge> <Ewan> Because they are presumably 10 different APIs that are used in different places
00:56 < bridge> <Ewan> one is WinRT the other is roapi
00:57 < bridge> <Ewan> roapi is the underlying system they both use, it’s also how COM’s CoWhateverInstance works
00:58 < bridge> <Ewan> roapi is the underlying system WinRT uses, it’s also how COM’s CoWhateverInstance works
00:59 < bridge> <Ewan> and COM doesn’t need Windows to run. it’s a more abstract model kinda like WinRT but customizable and not inherently windows oriented
01:00 < bridge> <Ewan> but if you’re googling “how do i do X when I already kinda have Y and Z is mostly done” then ofc you’ll be confused why there are different options for X, i guedd
01:00 < bridge> <Ewan> but if you’re googling “how do i do X when I already kinda have Y and Z is mostly done” then ofc you’ll be confused why there are different options for X, i guess
01:03 < bridge> <kebscs> yes but if i use wrl then i should stick with wrl functions
01:03 < bridge> <kebscs> and for some reason it didnt compile on mingw
01:03 < bridge> <kebscs> and just changing to roapi func works straight away
01:03 < bridge> <kebscs> even with wrl objects
01:30 < bridge> <Ewan> you mean the winrt way? i can’t provide insight w/o error msg, but roapi works already because it’s linked to by something you’re linking
01:30 < bridge> <Ewan> roapi = runtime object API
01:33 < bridge> <Ewan> winrt and com both require you to manually instantiate instances per thread but the behavior you use to do so is provided by roapi.h/runtimeobject.lib, may or may not be wrapped with extra specific logic per use
01:34 < bridge> <kebscs> winrt way didnt compile on deen machine
01:35 < bridge> <kebscs> so now its wrl
01:35 < bridge> <kebscs> with ComPtrs etc
01:35 < bridge> <kebscs> i think its roapi>wrl>winrt
01:35 < bridge> <kebscs> from lowest level
01:36 < bridge> <Ewan> wrl provides templates for winrt; winrt leverages roapi
01:36 < bridge> <Ewan> wrl
01:36 < bridge> <Ewan> winrt
01:36 < bridge> <Ewan> roapi
01:37 < bridge> <kebscs> i thank random microsoft projects on github
01:37 < bridge> <kebscs> no other way to know these all when every example on internet is different and uses smth else
01:37 < bridge> <Ewan> as opposed to cppwinrt, or C#/WinRT
01:37 < bridge> <Ewan> god forbid managed c++
01:38 < bridge> <Ewan> you’re right i forgot all the bounties of info on msdn dont exist or are inexplicably impossible to use…
01:41 < bridge> <Ewan> sorry but there are both summaries and like 30-page guides for any notable Windows API/technology
01:41 < bridge> <Ewan> the info is out there
01:44 < bridge> <Ewan> but i’ll give you extra credit because mingw is really the worst for any of this
01:44 < bridge> <Ewan> and guides you find prob won’t work
02:01 < bridge> <kebscs> the ones for toast notifications
02:01 < bridge> <kebscs> on microsoft website are c#
02:01 < bridge> <kebscs> and stackoverflow says just use wintoast
02:01 < bridge> <kebscs> xd
02:02 < bridge> <Ewan> yea
02:02 < bridge> <Ewan> peak stackoverflow tbh
02:02 < bridge> <Ewan> you may not even need winrt for that btw if you’re willing to keep the GUIDs and symbols for the API in question in ddnet lol
02:02 < bridge> <Ewan> you could access it through COM directly
02:04 < bridge> <totar> sometimes there's a button you can click to switch to the cpp docs I think. Idk if this is helpful
02:08 < bridge> <kebscs> I know
02:09 < bridge> <kebscs> But for this the documentation is so shit
04:18 < bridge> <teero777> Which flag determines the HUD on a server?
05:12 < bridge> <Ewan> i think it’s a client decision based on the game type
05:40 < bridge> <teero777> Yes but what is the flag
05:40 < bridge> <teero777> I think I have the correct game type tho
07:36 < ws-client> <ChillerDragon> multiple flags iirc
07:37 < ws-client> <ChillerDragon> GAMEINFOFLAG2_HUD_DDRACE for example
07:37 < ws-client> <ChillerDragon> have a look here https://github.com/ddnet/ddnet/blob/079de0c5edf243506a92daa3894f6887f12a62a8/src/game/server/gamecontroller.cpp#L610-L631
08:41 < bridge> <Assa> gumo ^.^
09:00 < bridge> <melon> Wtf chiller closing an issue?????
09:03 < ChillerDragon> hm? @melon
09:19 < bridge> <filoqcus> What do I need that in mysql to save the time of passing the map? ;D And I connected everything as written in the readme:
09:19 < bridge> <filoqcus> 
09:19 < bridge> <filoqcus> ```
09:19 < bridge> <filoqcus> sv_use_sql 1
09:20 < bridge> <filoqcus> add_sqlserver r teeworlds record teeworlds "PW2" "localhost" "3306"
09:20 < bridge> <filoqcus> add_sqlserver w teeworlds record teeworlds "PW2" "localhost" "3306"
09:20 < bridge> <filoqcus> ```
09:20 < bridge> <filoqcus> (everything connected perfectly)
09:20 < bridge> <filoqcus> 
09:20 < bridge> <filoqcus> ```
09:20 < bridge> <filoqcus> server1-1 | 2025-07-08 07:15:25 I chat: *** Sd9is finished in: 9 minute(s) 1.46 second(s)
09:20 < bridge> <filoqcus> server1-1 | 2025-07-08 07:15:25 I sql: SQLite statement: INSERT OR IGNORE INTO record_race_backup( Map, Name, Timestamp, Time, Server, cp1, cp2, cp3, cp4, cp5, cp6, cp7, cp8, cp9, cp10, cp11, cp12, cp13, cp14, cp15, cp16, cp17, cp18, cp19, cp20, cp21, cp22, cp23, cp24, cp25, GameId, DDNet7) VALUES (‘Arena’, ‘Sd9is’, DATETIME('2025-07-08 07: 15:25', ‘utc’), 541. 46, ‘UNK’, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 
09:20 < bridge> <filoqcus> server1-1 | 2025-07-08 07:15:25 I mysql: connection established
09:20 < bridge> <filoqcus> server1-1 | 2025-07-08 07:15:25 I sql: SQLite statement: DELETE FROM record_race_backup WHERE GameId='721d9caf-8742-4ba4-b425-0401e2f2cdad' AND Name='Sd9is' AND Timestamp=DATETIME('2025-07-08 07:15:25', 'utc')
09:20 < bridge> <filoqcus> ```
09:20 < bridge> <filoqcus> :justatest:
09:21 < bridge> <filoqcus> why sqlite `sql: SQLite statement`:nouis:
09:24 < bridge> <filoqcus> Oops, it was saved where I least expected it ;D
09:24 < bridge> <filoqcus> :brownbear:
09:33 < bridge> <melon> I forgot you're a maintainer :justatest:
09:34 < bridge> <imilchshake> :justatest:
09:34 < bridge> <imilchshake> Do not upset the chiller!
09:37 < ws-client> <ChillerDragon> @melon if you need prs merged consider sending to paypal.me/ChillerDragon 
09:37 < bridge> <melon> Go Munich I give u 2 hoibe and a brezn
09:37 < ws-client> <ChillerDragon> jk im not maintainer i got minimmal permissions i got from heinrich because i am the label machine
09:37 < bridge> <imilchshake> Damn I only now figured out why I always thought chiller is German. For some reason my brain couldn't comprehend that chiller also is an English word :nouis:
09:37 < ws-client> <ChillerDragon> i can assign labels and close/open issues/prs
09:37 < bridge> <melon> :poggers2:
09:38 < ws-client> <ChillerDragon> @melon i am munich rn
09:38 < bridge> <melon> :o @finanzamt chiller spotted
09:38 < bridge> <imilchshake> ??? wait so is chiller German after all
09:39 < ws-client> <ChillerDragon> @filoqcus even if u use mysql it uses sqlite for backups look at the table name ``record_race_backup`` if the connection to mysql fails the rank can still be restored from the sqlite rank
09:39 < ws-client> <ChillerDragon> that is also why on ddnet you sometimes hear it takes a few days until ranks arrive
09:39 < ws-client> <ChillerDragon> that is because the connection to the db server fails and it takes a few business days before underpayed ddnet staff manually applys sqlite to mysql
09:39 < bridge> <filoqcus> I already realized the mistake and deleted those messages ;D
09:39 < bridge> <filoqcus> :owo:
09:39 < ws-client> <ChillerDragon> you cant delete on me hrhr
09:39 < ws-client> <ChillerDragon> irc never forgets
09:40 < bridge> <imilchshake> <deleted>
09:40 < bridge> <imilchshake> Take that
09:40 < bridge> <filoqcus> <deleted>
09:41 < bridge> <filoqcus> :nouis:
09:42 < bridge> <imilchshake> hehehe
09:42 < bridge> <imilchshake> Btw can u ping chiller somehow?
09:50 < bridge> <melon> ChillerDragon: ping
09:58 < bridge> <chillerdragon> Pong
10:08 < bridge> <imilchshake> 8 minute ping, that's crazy
10:21 < bridge> <Jupstar ✪> Chiller lives on Merkur
10:21 < bridge> <tsfreddie> contrary to popular belief, chillerdragon, is in fact, a ping pong table
10:22 < bridge> <tsfreddie> wait didn't we lost the gradients yesterday
10:24 < bridge> <melon> It just requires the boosts to be up
10:24 < bridge> <TsFreeeeeeeeeeeeeddient> i love money
10:48 < bridge> <_ceycen_> is there a movement predictor for lags
10:48 < bridge> <_ceycen_> like antiping but for your own movement when u lag
10:48 < bridge> <_ceycen_> think about it
10:48 < bridge> <_ceycen_> why do you have to freeze when you lag
10:48 < bridge> <_ceycen_> its dum
10:48 < bridge> <_ceycen_> what if u just didnt
11:19 < bridge> <chillerdragon> @_ceycen_: this is not Minecraft. There are also no speed or flyhacks. The client just sends inputs and the server determines the position. Of course the client could locally act as if it has no lags and make up own positions but that would not reflect reality and once the connection is restored the server will still force the actual position on you.
11:20 < bridge> <_ceycen_> makes sense
11:20 < bridge> <chillerdragon> There is no benefit in having a fake movement during lag just to be reset to the actual position once the internet is back
11:33 < bridge> <learath2> we'll lose them today I think
11:54 < bridge> <patiga> @jupeyy_keks nvm, the benchmark had a bug in the `--no-upload` mode, it does indeed spend most of its time rendering
11:54 < bridge> <patiga> but I do know some stuff which could help there :)
12:00 < bridge> <Jupstar ✪> But 1 Million sprites equals one million quads?
12:04 < bridge> <patiga> 2 million triangles
12:09 < bridge> <Jupstar ✪> So 2 million triangles per second? Gpu bound?
12:09 < bridge> <Jupstar ✪> 
12:09 < bridge> <Jupstar ✪> Sounds super bad tbh xD
12:10 < bridge> <patiga> yea, will need to work on that
12:10 < bridge> <Jupstar ✪> Worse than teeros physics xd
12:10 < bridge> <patiga> I did some blind optimizations since first implementing the whole thing, I'll try out now how much I can improve the whole thing
12:11 < bridge> <patiga> I should've created the benchmark much earlier ^^
12:12 < bridge> <patiga> but first I'll modify the benchmark to compare the whole thing with my old sprite renderer
12:16 < bridge> <Jupstar ✪> I just wonder if the benchnark is flawed. Like maybe it isn't gpu bound or smth.
12:16 < bridge> <Jupstar ✪> 
12:16 < bridge> <Jupstar ✪> I can almost not imagine smth that is so intense on the gpu
12:18 < bridge> <patiga> you are free to check out the benchmark
12:19 < bridge> <patiga> I suppose submitting the command encoder also puts a little more strain on the resource tracker of wgpu, but I'd hope its negligible
12:20 < bridge> <patiga> I should reduce the draw call to a single sprite to check for that
12:20 < bridge> <patiga> but first I'll finish the compat benchmark with the old sprite rendering method
12:22 < bridge> <Jupstar ✪> Remind me in 2 weeks
12:23 < bridge> <patiga> ah right :p
12:23 < bridge> <patiga> !remindme 2 week
12:27 < bridge> <patiga> just remembered I already had a cli parameter for that. Result: single sprites don't reveal any cpu overhead with submitting the draw call
14:20 < bridge> <Assa> why does the job backend has m_pFirst and m_pLastJob ?
14:21 < bridge> <Assa> ah to make inserting faster ig
15:39 < bridge> <Assa> ```
15:40 < bridge> <Assa> [build]     1 | #include <gmock/gmock.h>
15:40 < bridge> <Assa> [build]       |          ^~~~~~~~~~~~~~~
15:40 < bridge> <Assa> [build] compilation terminated.
15:40 < bridge> <Assa> ```
15:40 < bridge> <Assa> 
15:40 < bridge> <Assa> does anyone has an idea what package I am missing on ubuntu?
15:40 < bridge> <kebscs> gmock
15:41 < bridge> <Assa> already installed
15:41 < bridge> <kebscs> gtest?
15:42 < bridge> <Assa> configuring says `[cmake] --  * GTest found`
15:43 < bridge> <Assa> build target is `testrunner`
15:44 < bridge> <Assa> same with `run_tests` as target
15:45 < bridge> <kebscs> idk
15:45 < bridge> <kebscs> windows better
15:45 < bridge> <Assa> okay some tests run, I get an error in one test file:
15:45 < bridge> <Assa> ```
15:45 < bridge> <Assa> [build] /home/marvin/funspace/ddnet/src/test/score.cpp:1:10: fatal error: gmock/gmock.h: Datei oder Verzeichnis nicht gefunden
15:46 < bridge> <Assa> [build]     1 | #include <gmock/gmock.h>
15:46 < bridge> <Assa> [build]       |          ^~~~~~~~~~~~~~~
15:46 < bridge> <Assa> ```
15:46 < bridge> <Assa> okay some tests run, I get an error in one test file:
15:46 < bridge> <Assa> ```
15:46 < bridge> <Assa> [build] ~~: fatal error: gmock/gmock.h: Datei oder Verzeichnis nicht gefunden
15:46 < bridge> <Assa> [build]     1 | #include <gmock/gmock.h>
15:46 < bridge> <Assa> [build]       |          ^~~~~~~~~~~~~~~
15:46 < bridge> <Assa> ```
15:46 < bridge> <Assa> okay some tests run, I get an error in one test file:
15:46 < bridge> <Assa> ```
15:46 < bridge> <Assa> [build] ddnet/src/test/score.cpp:1:10: fatal error: gmock/gmock.h: Datei oder Verzeichnis nicht gefunden
15:46 < bridge> <Assa> [build]     1 | #include <gmock/gmock.h>
15:46 < bridge> <Assa> [build]       |          ^~~~~~~~~~~~~~~
15:46 < bridge> <Assa> ```
15:47 < bridge> <teero777> Ask llm
15:47 < bridge> <Assa> well yes it's the only one including this file
15:47 < bridge> <teero777> AI says 
15:47 < bridge> <teero777> sudo apt update
15:47 < bridge> <teero777> sudo apt install -y libgtest-dev libgmock-dev
15:48 < bridge> <Assa> AI was right, readme is missing libgmock-dev
17:54 < bridge> <teero777> can i not use absolute paths with `exec`?
18:07 < bridge> <kollpotato> chillerdragon: the hidden treasure
18:07 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1392175326913626142/image.png?ex=686e93cf&is=686d424f&hm=d038dabba4e48b1e1902da9887f4e1df2073d3a18fc7bd2625a43190ed1462fc&
18:08 < bridge> <kollpotato> wow its so much better than ddnet
18:08 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1392175429930192976/image.png?ex=686e93e7&is=686d4267&hm=f60f60445555c626cb9e9605111b852723fc6303eb2bfb2e32d77a5776b0757b&
18:20 < bridge> <kollpotato> noice
18:20 < bridge> <kollpotato> i have launched teewars 1.0
18:20 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1392178619215773736/image.png?ex=686e96e0&is=686d4560&hm=007cf1af64c585502b7dee746983e7312cec94e4c1c10378653af05294eaf709&
18:31 < bridge> <chillerdragon> lmao
18:32 < bridge> <Jupstar ✪> When compat layer
18:36 < bridge> <kollpotato> great project idea
18:36 < bridge> <kollpotato> though most likely not possible
18:37 < bridge> <kollpotato> im surprised matricks is actually on this server
18:37 < bridge> <kollpotato> im reading his conversations xd
18:41 < bridge> <chillerdragon> Yes him joining was big event
18:41 < bridge> <learath2> We even played some zcatch all of us while chatting in vc about teeworlds/ddnet stuff
18:41 < bridge> <learath2> I think someone might even have the whole event recorded 😄
18:42 < bridge> <chillerdragon> I need that
18:42 < bridge> <chillerdragon> I don’t know his voice 0.0
18:42 < bridge> <chillerdragon> Also I don’t know lerato voice
18:49 < bridge> <kollpotato> sounds awesome
18:49 < bridge> <kollpotato> i wish i could have joined the teeworlds community like 20 years ago xD
18:54 < bridge> <kollpotato> chillerdragon: when did u start playing tw?
19:28 < bridge> <kebscs> any way to fix `mingw32-make.exe[3]: *** No rule to make target 'debug/libddnet_engine_shared.a', needed by 'DDNet.exe'.  Stop.` on mingw except setting vs17 2022 as generator?
19:37 < bridge> <robyt3> You need the `i686-pc-windows-gnu` rustup target to build with GCC
19:37 < bridge> <robyt3> You can override the target being used for each build folder with `rustup override`
19:37 < bridge> <Jupstar ✪> Not x64
19:37 < bridge> <Jupstar ✪> ?
19:38 < bridge> <robyt3> Yes, true, `x86_64-pc-windows-gnu` for x64
19:42 < bridge> <melon> i wish this could be detected by cmake
19:42 < bridge> <melon> 
19:42 < bridge> <melon> the error is.. telling you absolutely nothing :kek:
19:42 < bridge> <melon> there is even an issue about it, heinrich made it for me
19:42 < bridge> <kebscs> will try x86_64-pc-windows-gnu
19:42 < bridge> <kebscs> idk what that is for now but will try
19:43 < bridge> <kebscs> msvc works straight out of the box
19:43 < bridge> <melon> gnu toolchain vs msvc toolchain
19:43 < bridge> <melon> windows rustup defaults to it, thats why
19:43 < bridge> <kebscs> and mingw has like 3 workarounds :tear:
19:45 < bridge> <melon> i like msys2/ucrt64 more than msvc
19:45 < bridge> <melon> 
19:45 < bridge> <melon> ~3GB vs ~8GB and i feel more confident in msys2's shell :kek: (also Ewan was really helpful and helped me set it up with ease)
19:46 < bridge> <melon> tho Visual Studio is really goated, but its also really heavy so i dont like using it - i open neovim 30 times a day, startup time is everything!
19:49 < bridge> <kebscs> just never close it 🙂
19:49 < bridge> <melon> i tried teeros workflow, no way :kekw: 
19:49 < bridge> <melon> 
19:49 < bridge> <melon> (he uses neovim as his shell, he lives in that thing)
19:50 < bridge> <melon> `ZZ` my beloved
20:12 < bridge> <kebscs> ```rustup target add x86_64-pc-windows-gnu
20:12 < bridge> <kebscs>         rustup override set x86_64-pc-windows-gnu```
20:12 < bridge> <kebscs> 
20:12 < bridge> <kebscs> ```info: component 'rust-std' for target 'x86_64-pc-windows-gnu' is up to date
20:12 < bridge> <kebscs> error: toolchain 'x86_64-pc-windows-gnu' is not installed```
20:13 < bridge> <robyt3> `rustup toolchain install stable-x86_64-pc-windows-gnu`
20:16 < bridge> <kebscs> ```info: syncing channel updates for 'stable-x86_64-pc-windows-gnu'
20:16 < bridge> <kebscs> info: latest update on 2025-06-26, rust version 1.88.0 (6b00bc388 2025-06-23)
20:16 < bridge> <kebscs> info: downloading component 'cargo'
20:16 < bridge> <kebscs> info: downloading component 'rust-mingw'
20:16 < bridge> <kebscs> info: downloading component 'rust-std'
20:16 < bridge> <kebscs> info: downloading component 'rustc'
20:16 < bridge> <kebscs> info: installing component 'cargo'
20:17 < bridge> <kebscs> info: installing component 'rust-mingw'
20:17 < bridge> <kebscs> info: installing component 'rust-std'
20:17 < bridge> <kebscs> info: installing component 'rustc'
20:17 < bridge> <kebscs> 
20:17 < bridge> <kebscs>   stable-x86_64-pc-windows-gnu installed - rustc 1.88.0 (6b00bc388 2025-06-23)
20:17 < bridge> <kebscs> 
20:17 < bridge> <kebscs> info: component 'rust-std' for target 'x86_64-pc-windows-gnu' is up to date
20:17 < bridge> <kebscs> error: toolchain 'x86_64-pc-windows-gnu' is not installed```
20:18 < bridge> <robyt3> The toolchain name seems to be `stable-x86_64-pc-windows-gnu`
20:19 < bridge> <robyt3> `rustup show` should show the toolchains and targets you currently have installed and active in the current folder
20:23 < bridge> <Ewan> if kebs was actually trying to solve these errors he could figure them out in minutes
20:24 < bridge> <kebscs> no i actually am
20:24 < bridge> <kebscs> just rust sucks
20:24 < bridge> <kebscs> and target is called x86_64-pc-windows-gnu but toolchain has stable- in front
20:24 < bridge> <Ewan> rust sucks because i have to tell it the toolchain i want for download
20:25 < bridge> <kebscs> true
20:25 < bridge> <Ewan> it should just read my mind
20:25 < bridge> <kebscs> on msvc i just open project and code dont have to worry about all the rust errors
20:26 < bridge> <melon> thats just because of the default value when you install rustup on windows, nothing to do with msvc :p
20:26 < bridge> <Ewan> u ever hear about —help
20:27 < bridge> <Ewan> it’s actually crazy
20:27 < bridge> <kebscs> :kek:
20:28 < bridge> <learath2> Technically when using mingw to compile ddnet, you are also supposed to make rust use the mingw ld iirc
20:32 < bridge> <Ewan> this one’s elusive but all the ones after are just RTFM
20:32 < bridge> <Ewan> that’s just the rust part of the build silently failing and the error manifests by no .a at time of linking
20:33 < bridge> <Ewan> i don’t know if my PR to fix the rust build on multi config generators was merged
20:33 < bridge> <kebscs> im setting up mingw github action so i dont have to test by hand
20:33 < bridge> <Ewan> but if not, that’s prob what you’re running into
20:41 < ws-client> <ChillerDragon> @kollpotato i forgot my start year something like 12+ years ago i think
20:48 < bridge> <kollpotato> omg so old u must have seen dinosaur tees
20:49 < bridge> <Ewan> this could be a region specific sale but i just bought a 9100 pro ssd for $110 off
20:49 < bridge> <Ewan> 
20:50 < bridge> <Ewan> <https://www.amazon.com/dp/B0DX2DPJZ5>
20:50 < bridge> <Ewan> 
20:50 < bridge> <Ewan> first sale on a pcie gen 5 ssd i’ve seen at all iirc, it’s a good drive and a good sale
20:50 < bridge> <Ewan> i was talking about gen5 ssds with someone else here maybe gorp
20:50 < bridge> <louis> how much did u pay
20:51 < bridge> <louis> its like $200 for me
20:52 < bridge> <Ewan> 198.92
20:52 < bridge> <Ewan> after stuff
20:52 < bridge> <Ewan> better than $300 for sure
20:52 < bridge> <Ewan> better than $300 pre-tax for sure
20:53 < bridge> <Ewan> 2TB w/o heatsink (the specific one linked) is on the best sale
20:54 < bridge> <louis> is there rly a big difference between like $120 2tbs and a $190 one
20:54 < bridge> <Ewan> ur seeing gen4 ssds prob
20:54 < bridge> <louis> i do wanna build a lil windows pc soon
20:55 < bridge> <louis> im gonna have like 7 computers before i graduate lmao
21:00 < bridge> <Ewan> <https://www.amazon.com/dp/B0BHJJ9Y77>
21:00 < bridge> <Ewan> $166.79 (no sale), gen 4, 2TB, 1050MBps read 1000MBps write
21:00 < bridge> <Ewan> 
21:00 < bridge> <Ewan> <https://www.amazon.com/dp/B0D9GT32H1>
21:00 < bridge> <Ewan> $109.99 ($129.99), gen 4, 2TB, 900MBps read, write unspecified (gulp)
21:01 < bridge> <Ewan> gen 5, 2TB, 1850MBps/1675
21:01 < bridge> <Ewan> so, ~2x as fast
21:02 < bridge> <Ewan> wd black sn8100 is on a similar sale with slightly better speeds but more expensive + less % off
21:02 < bridge> <Ewan> <https://www.amazon.com/dp/B0F3BD1W6R>
21:03 < bridge> <Ewan> i have to resist the urge to buy computer stuff all the time. i’ll have to find a new home for one of my drives now anyway
21:03 < bridge> <Ewan> i’m good with my 3 rn..
21:07 < bridge> <louis> yeah ill have 4 soon
21:07 < bridge> <louis> one desktop for each common "os" and my laptop
21:08 < bridge> <louis> id say worth then
21:09 < bridge> <melon> i'm so close to setting up a proper NAS, but i also dont really exceed 3TB storage because i cleanup after myself fairly regularly
21:09 < bridge> <melon> 
21:10 < bridge> <melon> i still want it tho
21:10 < bridge> <melon> for like videos and backups and shii
21:13 < bridge> <Ewan> i feel that
21:13 < bridge> <Ewan> i would just get a normal computer tbh
21:13 < bridge> <Ewan> that runs low power and quiet in your closet
21:13 < bridge> <louis> after trying hella syncing and file sharing methods i have decided that most self hosted ways is just a hassle
21:13 < bridge> <louis> but its still fun
21:13 < bridge> <Ewan> can host files and actual things
21:13 < bridge> <Ewan> depends on you
21:14 < bridge> <pilonpl> seems kinda expensive
21:15 < bridge> <melon> depends, i could theoretically sync them all up with my raspberry ._:
21:15 < bridge> <pilonpl> you probably need several drives
21:15 < bridge> <pilonpl> for redundancy
21:16 < bridge> <pilonpl> and then you actually need to replace drives when they fail
21:16 < bridge> <melon> i'd slap in like 2-3 5TB HDD's
21:16 < bridge> <melon> a NAS for me is long time storage
21:16 < bridge> <pilonpl> and if your house burns down the data is gone anyways
21:16 < bridge> <pilonpl> and what if two drives die at the same time? the data is gone in that case too
21:17 < bridge> <pilonpl> maybe it's better to just pay for backblaze or something lol
21:17 < bridge> <melon> i dont want to put my personal files on some sort of cloud :p
21:17 < bridge> <pilonpl> encryption exists
21:18 < bridge> <melon> doesnt really matter, i dont want remote access to be a thing on my personal files
21:18 < bridge> <melon> also my wife needs a quick way to delete all of those videos when i die from caffeine overdose
21:18 < bridge> <pilonpl> i don't think it's a big deal with encryption
21:19 < bridge> <Ewan> me after my typical coffee, monster, plus 5hr energy and 2x adhd medicine yesterday
21:19 < bridge> <louis> 5hr energy is a tad degen
21:19 < bridge> <Ewan> when i skip a day from waking up too late or whatever i just keep it for lata
21:19 < bridge> <Ewan> yea
21:19 < bridge> <Ewan> it was in the fridge
21:19 < bridge> <Ewan> what can i say
21:19 < bridge> <Ewan> caffeine isn’t safe around me
21:20 < bridge> <pilonpl> backups are so inconvenient
21:20 < bridge> <pilonpl> it's crazy how hard it is to permanently store some data
21:21 < bridge> <melon> well, i rather not get a backup drive for my backup drive for my backup drive for my drive just to make sure the data stays intact ._.
21:22 < bridge> <Ewan> i know ppl who keep them at the post office
21:22 < bridge> <Ewan> seems safe
21:22 < bridge> <melon> and a drive doesnt just rm -rf your data, often times its recoverable even if the drive dies
21:22 < bridge> <Ewan> as long as you recover it the right way the first time
21:22 < bridge> <pilonpl> well it's probably not cheap tho
21:22 < bridge> <Ewan> I’ve definitely lost data fucking around and finding out
21:22 < bridge> <melon> "oh yeah.. that partition HAS to be the right one"
21:23 < bridge> <melon> *1.2TB of games gone...*
21:23 < bridge> <melon> 
21:23 < bridge> <melon> FUUUUUUU
21:23 < bridge> <Ewan> it’s just that the more you use any drive in a compromised state the faster it shits the bed
21:23 < bridge> <pilonpl> btw how to securely store stuff like private keys?
21:23 < bridge> <Ewan> brain
21:23 < bridge> <pilonpl> well, i am probably the only person crazy enough to do that lol
21:23 < bridge> <milkeeycat> i have them on github
21:23 < bridge> <melon> https://github.com/getsops/sops
21:24 < bridge> <melon> or rather, sops-nix
21:24 < bridge> <louis> write it on paper ez
21:24 < bridge> <Ewan> iq
21:25 < bridge> <pilonpl> what if someone steals the paper?
21:25 < bridge> <pilonpl> and surely there can't be only one copy
21:25 < bridge> <pilonpl> so that's kinda the issue
21:25 < bridge> <pilonpl> i have a usb stick that i could use
21:25 < bridge> <pilonpl> but it can't be the only copy anyways
21:25 < bridge> <pilonpl> so what can i do lol
21:25 < bridge> <melon> write 382 papers, hide them individually across the globe
21:26 < bridge> <pilonpl> malware could potentially steal stufff from my PC to
21:26 < bridge> <pilonpl> malware could potentially steal stufff from my PC too
21:26 < bridge> <melon> pilon are you going schizo rn
21:26 < bridge> <pilonpl> so maybe tailsos is necessary for super secret stuff
21:26 < bridge> <Ewan> ive been using zed past few days cuz i felt vscode doing undesirable things to my battery
21:26 < bridge> <Ewan> since i realized you can add multiple workspaces like vscode, it’s perfect
21:27 < bridge> <pilonpl> there is literally no solution
21:27 < bridge> <Ewan> turned off all ai stuff
21:27 < bridge> <Ewan> very good focus editor
21:28 < bridge> <melon> i love zed, its fast, it gets the job done, and it works
21:28 < bridge> <melon> i havent checked in a while, did they manage a way to accept other LSP's apart from their provided ones? - that was a problem on nix
21:28 < bridge> <Ewan> there’s a pretty good home manager integration now
21:28 < bridge> <melon> :o
21:29 < bridge> <Ewan> just maps nix declarations to json settings, but that’s big when you consider things like lib.getExe pkgs.lsp
21:29 < bridge> <pilonpl> btw i wonder how code is represented in memory
21:29 < bridge> <Ewan> wdym
21:29 < bridge> <pilonpl> or editable text in general
21:30 < bridge> <Ewan> your code isnt editable text
21:30 < bridge> <Ewan> native stuff is machine code stored in the code section of your executable
21:30 < bridge> <pilonpl> but i am talking about the code editor
21:30 < bridge> <Ewan> huh
21:30 < bridge> <kollpotato> i think you need to create it yourself (probably with rust)
21:30 < bridge> <Ewan> for editing
21:30 < bridge> <Ewan> rope data type
21:30 < bridge> <Ewan> zed uses tree sitter
21:30 < bridge> <kollpotato> but its supposed to be easy
21:31 < bridge> <pilonpl> editing text seems so easy
21:31 < bridge> <pilonpl> but actually
21:31 < bridge> <kollpotato> until its not
21:31 < bridge> <pilonpl> idk how i would implement it lol
21:32 < bridge> <Ewan> https://en.wikipedia.org/wiki/Rope_(data_structure)
21:32 < bridge> <kollpotato> its less efficient for small files right
21:32 < bridge> <kollpotato> under 1kb
21:33 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1392226995353686227/IMG_8418.webp?ex=686ec3ee&is=686d726e&hm=90ac221bca8389c311790cd45e70c8dfb48548b176d3db9df125780970ee5b5f&
21:35 < bridge> <pilonpl> okay
21:35 < bridge> <kollpotato> i think index in O(log n) kinda sucks
21:35 < bridge> <kollpotato> u need to access characters often in something like a text editor
21:35 < bridge> <Ewan> hard to do better
21:35 < bridge> <kollpotato> yea
21:35 < bridge> <kollpotato> there are pros and cons for everything
21:36 < bridge> <pilonpl> O(log n) is actually really good i think
21:37 < bridge> <pilonpl> n log n would be bad
21:38 < bridge> <melon> if you dont exceed millions of characters or have a TS/LSP buffer attached it doesnt really matter
21:39 < bridge> <pilonpl> but if you use rope
21:39 < bridge> <pilonpl> you then need all the other stuff to work with it too
21:39 < bridge> <pilonpl> so syntax highlight
21:39 < bridge> <Ewan> there are a few ways to do that
21:41 < bridge> <pilonpl> i mean you can just have a function `index()`
21:41 < bridge> <pilonpl> and i assume that's enough?
22:00 < bridge> <pilonpl> What do you guys think about Crust? https://github.com/tsoding/b
22:01 < bridge> <learath2> Is there a programming language for every letter of the alphabet yet?
22:01 < bridge> <Ewan> perhaps
22:03 < bridge> <kollpotato> for the english alphabet yes
22:03 < bridge> <pilonpl> Okay so i wonder what the M programming language looks like
22:04 < bridge> <learath2> Did you ask chatgpt?
22:04 < bridge> <kollpotato> no
22:04 < bridge> <kollpotato> or u meant one letter in the name
22:05 < bridge> <learath2> Yes. One letter programming languages
22:06 < bridge> <pilonpl> There is probably a list on wikipedia
22:06 < bridge> <kollpotato> https://en.wikipedia.org/wiki/List_of_programming_languages
22:06 < bridge> <melon> There's no H and I
22:06 < bridge> <kollpotato> i can fork b language and rename it to every letter possible
22:06 < bridge> <kollpotato> ez
22:06 < bridge> <pilonpl> Righttt
22:07 < bridge> <melon> There is literally the entire alphabet, just H and I missing
22:07 < bridge> <pilonpl> Let's create the H programming language then
22:07 < bridge> <melon> @milkeeycat rename your language to H for HaskellButItsActuallyRust
22:07 < bridge> <pilonpl> H for Helicopter
22:08 < bridge> <pilonpl> Btw how is your type system implemented?
22:08 < bridge> <louis> I would be a sick programming language
22:08 < bridge> <kollpotato> yes you would nouis
22:08 < bridge> <melon> Yes you would..
22:08 < bridge> <pilonpl> What
22:08 < bridge> <louis> imaginary syntax
22:08 < bridge> <louis> complex functions type shit
22:09 < bridge> <pilonpl> I think a programming language where you write stuff vertically could be interesting
22:09 < bridge> <learath2> So I still have a shot
22:09 < bridge> <melon> ```java
22:09 < bridge> <melon> Const static void func main(I &*i_lang) { }```
22:09 < bridge> <melon> ```js
22:09 < bridge> <melon> Const static void func main(I &*i_lang) { }```
22:09 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1392236249401659534/image.png?ex=686ecc8c&is=686d7b0c&hm=b13cb66085ec8af955b4d161913d050431f86ff25068f447f8ea8b857770ae83&
22:09 < bridge> <melon> ```go
22:09 < bridge> <melon> Const static void func main(I &*i_lang) { }```
22:10 < bridge> <kollpotato> dreamberd is the best period
22:10 < bridge> <melon> I saw that, good old const const const
22:10 < bridge> <kollpotato> maybe true maybe false
22:10 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1392236438724018306/image.png?ex=686eccb9&is=686d7b39&hm=5b0b761883361fc412725bc599458623b9a0ebc8a99031a8eb54fa13fcad42a5&
22:10 < bridge> <kollpotato> truly better than rust
22:10 < bridge> <louis> that's actually peak feature
22:11 < bridge> <louis> H lang heisenberg lang where using a variable slightly changes it
22:11 < bridge> <learath2> If someone makes I it has to be a concatenative language
22:13 < bridge> <pilonpl> What about a language which tries to allow for as much different syntax and features as possible
22:13 < bridge> <pilonpl> So you can use the `function` keyword
22:13 < bridge> <pilonpl> Or func
22:14 < bridge> <pilonpl> Or fn
22:14 < bridge> <pilonpl> Or def
22:14 < bridge> <pilonpl> Or procedure
22:14 < bridge> <kollpotato> in c/c++ u can make a keyword alias with a macro
22:14 < bridge> <kollpotato> so unlimited
22:14 < bridge> <pilonpl> {}, do end, indentation
22:15 < bridge> <melon> Funcdef_public_const(const int *const pInt)
22:15 < bridge> <milkeeycat> allow to specify first index for arrays
22:16 < bridge> <ryozuki> most weird langs are array based ones or smth
22:16 < bridge> <ryozuki> APL
22:16 < bridge> <pilonpl> Or something that simply combines all languages
22:16 < bridge> <kollpotato> brainfuck is array based
22:16 < bridge> <ryozuki> https://tryapl.org/
22:16 < bridge> <ryozuki> `(~R∊R∘.×R)/R←1↓⍳R`
22:16 < bridge> <learath2> Apl is weird fr
22:16 < bridge> <pilonpl> So like you can write python and then c in one file lol
22:16 < bridge> <ryozuki> `life ← {⊃1 ⍵ ∨.∧ 3 4 = +/ +⌿ ¯1 0 1 ∘.⊖ ¯1 0 1 ⌽¨ ⊂⍵}` game of life
22:17 < bridge> <Ewan> it’s only booleans tho. if you want to use it for another variable you have to tag it somehow which is equally as useful as using a normal two-state bool
22:17 < bridge> <pilonpl> Or maybe a language where characters can have colors
22:17 < bridge> <melon> U⍵U
22:18 < bridge> <pilonpl> So for example you would color identifiers green
22:18 < bridge> <pilonpl> Then you could use whitespaces in names
22:18 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1392238534936629299/image.png?ex=686ecead&is=686d7d2d&hm=0c89777ecc3b6efc248b6095a883142c797a47e97bb5aabc47c9ad2502364bfd&
22:18 < bridge> <kollpotato> maybe can just use another bit
22:19 < bridge> <kollpotato> so it will be more memory efficient
22:19 < bridge> <kollpotato> well i dont know
22:19 < bridge> <kollpotato> the compiler of dreamberd is chatgpt
22:20 < bridge> <kollpotato> maybe it can just use another bit
22:21 < bridge> <pilonpl> What would be cool for real tho is code generator which generates literally junk code which is meant to look cool
22:22 < bridge> <pilonpl> Something like hollywood
22:22 < bridge> <melon> Me when I try to look cool in public do I open up a Huffman program written in haskell on my phone
22:23 < bridge> <pilonpl> I type ping google.com into termux
22:43 < bridge> <learath2> I just tail one of the server logs
22:44 < bridge> <learath2> Tbf just my usual setup looks cool whatever I do. Almost everything I do is on the terminal. Just connecting to wifi looks cool to the uninitiated
22:55 < ws-client> <ChillerDragon> *lerato said while typing into his soy dev electron app*
22:56 < ws-client> <ChillerDragon> when bring back irc swag
23:11 < bridge> <patiga> for backup, you could consider secret sharing (e.g. shamir's secret sharing). if you have a few peopl irl who you trust, (e.g. 5), you can make it so that any 3  of them can recover the secret together, no less. (you can ofc choose arbitrary numbers)
23:12 < bridge> <Solly (bun bun)> what if you just want a binary value?
23:12 < bridge> <Solly (bun bun)> applies 2 as a function to + and 2
23:13 < bridge> <Solly (bun bun)> https://www.youtube.com/watch?v=RcVA8Nj6HEo
23:15 < bridge> <kollpotato> compile it and see for yourself :D
23:17 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1392253271015690340/image.png?ex=686edc66&is=686d8ae6&hm=23ac89b1e9ed234cad1ec591bf42e629be35c847ce2e94969e9765b71ae11326&
23:17 < bridge> <Solly (bun bun)> uhh
23:17 < bridge> <Solly (bun bun)> sure
23:17 < bridge> <Solly (bun bun)> i was interested, i know the github is higher in the results
23:17 < bridge> <Solly (bun bun)> <https://github.com/TodePond/GulfOfMexico>
23:18 < bridge> <Solly (bun bun)> wait what
23:18 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1392253471767400448/image.png?ex=686edc96&is=686d8b16&hm=1641dfeae4b3e2137ef8cf7465e02f6e52f77bc003efd152c1387557d1f8bcd8&
23:18 < bridge> <Solly (bun bun)> huh?
23:18 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1392253589191262369/image.png?ex=686edcb2&is=686d8b32&hm=03173049791b79c0c6a11531d9e661341f1da85ea80d7b0d60cb68d069902045&
23:20 < ws-client> <ChillerDragon> @Jupstar ✪ gotta admit this is cool!
23:20 < ws-client> <ChillerDragon> https://tube.zillyhuhn.com/videos/users/chiller/fng_fast_fire.mp4
