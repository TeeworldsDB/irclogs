03:31 < bridge> <Anime.pdf> Screenshot your discord server chat at any moment of time
03:31 < bridge> <Anime.pdf> :kek:
08:23 < bridge> <Learath2> If you search the n-word on his discord server discord crashes
10:16 < bridge> <Ryozuki> @Learath2 why did glibc decide to link nss the way it does?
10:16 < bridge> <Ryozuki> https://stackoverflow.com/questions/3430400/linux-static-linking-is-dead
10:16 < bridge> <Ryozuki> i was curious so i searched  a bit xd
10:17 < bridge> <Ryozuki> like why hardcode this
10:21 < bridge> <Ryozuki> https://utcc.utoronto.ca/~cks/space/blog/programming/Go121LinuxStaticToolchain
10:22 < bridge> <Ryozuki> @Jupeyy_Keks https://github.com/pgosar/ChatGDB
10:24 < bridge> <Learath2> Well I think the reason was to have consistent behaviour across all programs on the same system, e.g. one program resolves a hostname one way and another a different way would be undesirable
10:25 < bridge> <Ryozuki> > NSS allows using different services (e.g. NIS, files, db, hesiod) by just changing one configuration file (/etc/nsswitch.conf) without relinking any programs.
10:25 < bridge> <Ryozuki> what?
10:25 < bridge> <Ryozuki> this allows u to change behavious
10:25 < bridge> <Ryozuki> without the one the program was tested in
10:25 < bridge> <Jupstar âœª> static linking was most epic in the past
10:25 < bridge> <Jupstar âœª> and it will be most epic in future
10:25 < bridge> <Ryozuki> cuz static has more info so more opts
10:25 < bridge> <Ryozuki> and perf is top 1 priority in this world
10:25 < bridge> <Jupstar âœª> yes ðŸ˜„
10:26 < bridge> <Jupstar âœª> cool idea actually ðŸ˜„
10:26 < bridge> <Learath2> Mh, I'm still unsure about that. Some libraries being truly shared is important for consistent behaviour
10:26 < bridge> <Jupstar âœª> u mean like the graphics driver part that is in the kernel?
10:26 < bridge> <Jupstar âœª> and needs communication?
10:27 < bridge> <Jupstar âœª> basically all kernel stuff
10:27 < bridge> <Learath2> That part can't be static anyway. No I was talking about things like curl e.g.
10:27 < bridge> <Jupstar âœª> "That part can't be static anyway"
10:27 < bridge> <Jupstar âœª> 
10:27 < bridge> <Jupstar âœª> depends xddd
10:27 < bridge> <Jupstar âœª> we see us in 50 years
10:27 < bridge> <Ryozuki> what should be made is a stable kernel interface for syscalls that doesnt rely on libc
10:27 < bridge> <Jupstar âœª> when i released my own os
10:27 < bridge> <Jupstar âœª> that even beats ryoos
10:28 < bridge> <Jupstar âœª> would be interesting
10:28 < bridge> <Learath2> You link to curl statically, it could use one source of trust and the system one another, which might be verybad(tm)
10:28 < bridge> <Learath2> Some parts of it maybe, but as far as I'm aware, there is truly global state in most drivers
10:29 < bridge> <Jupstar âœª> yep, question is if that implies it to be static linked, or if the global state simply lives
10:29 < bridge> <Learath2> Hm, I think this is already there, you can do syscalls with just a couple instructions
10:29 < bridge> <Jupstar âœª> e.g. lets say there is a global mutex that simply exists for this purpose
10:30 < bridge> <Jupstar âœª> then all usages of lets say a global memory pool, would be safe to exist
10:31 < bridge> <Jupstar âœª> well to some degrees there might still be a very small set of shared functions between stuff
10:31 < bridge> <Learath2> You could isolate such global state into a kernel part of the driver and the rest can be statically linked. But is that strictly better for performance? Now the code that could be certain about state needs to wait on a mutex
10:31 < bridge> <Jupstar âœª> but if that interface is stable
10:32 < bridge> <Learath2> Anyway, idk. It certainly is possible to split it. Just not sure if it strictly implies better performance, since dynamic linking is pretty cheap, only an indirect call away
10:32 < bridge> <Jupstar âœª> well it has to be minimized ofc, and mutex was just to illustrate the idea.
10:32 < bridge> <Jupstar âœª> 
10:32 < bridge> <Jupstar âœª> but what i'd see is a kernel that is so micro that it really just prevents data races
10:32 < bridge> <Jupstar âœª> i dunno either, but i want to know ðŸ˜„
10:33 < bridge> <Jupstar âœª> i mean if the compiler sees everything except a small minimal subset
10:33 < bridge> <Jupstar âœª> 
10:33 < bridge> <Jupstar âœª> i can remove so much stuff from linked libraries(dead code etc)
10:33 < bridge> <Jupstar âœª> it could at least make a single application much faster
10:33 < bridge> <Jupstar âœª> if the system in total is faster is not sure
10:34 < bridge> <Jupstar âœª> it uses more ram possibly in total ^^
10:34 < bridge> <Jupstar âœª> but even that depends
10:35 < bridge> <Jupstar âœª> there are so many infinite amount of shared libaries lmao
10:35 < bridge> <Jupstar âœª> 
10:35 < bridge> <Jupstar âœª> just look into your /usr/lib or whatever
10:35 < bridge> <Learath2> But is removing deadcode really doing anything except optimizing the loaded size of the library? Some more advanced LTO can help and stuff can be inlined, so there definitely will be performance improvements on a single app basis. For the whole system idk either. Too complex for me to imagine as a hypothetical
10:36 < bridge> <Jupstar âœª> well yeah dead code and link time optimizations are the mean points indeed
10:37 < bridge> <Jupstar âœª> with a language like rust that is rather relaxed about how a struct must look like, it could even optimize structures across a whole programm across the whole amount of libraries needed
10:38 < bridge> <Learath2> So I guess the best way to achieve this would be a minimal dynamic library with a set interface managing global state and the rest of the library is statically linkable
10:38 < bridge> <Jupstar âœª> would be really interesting ðŸ˜„
10:42 < bridge> <Learath2> I think I still want a libsyscall dynamically linked for now just so more than a single version of the kernel can be handled. The kernel isn't stable enough yet
10:43 < bridge> <Learath2> I think atleast for non-embedded purposes the kernel still needs to do some form of syscalls and their dispatching
10:58 < bridge> <Ryozuki> did u know there are some compilers that can optimize away dynamic dispatch
10:58 < bridge> <Ryozuki> or smth like that
10:58 < bridge> <Ryozuki> i read it somewhere, but it requires a very closed system
11:08 < bridge> <Learath2> Mh, canâ€™t both gcc and clang devirtualize if they can infer the runtime type of the object statically? Itâ€™s not that good at it but it still can iirc
11:34 < bridge> <Ryozuki> iirc its pretty expensive compilation time wise
12:19 < bridge> <Learath2> Also C++ isn't exactly built to keep track of runtime types easily, so I can imagine it being fairly hard to do
12:25 < bridge> <chillerdragon> Wot running this on mac opens da bitcoin whitepaper? xd```
12:25 < bridge> <chillerdragon> open /System/Library/Image\ Capture/Devices/VirtualScanner.app/Contents/Resources/simpledoc.pdf
12:25 < bridge> <chillerdragon> ```
12:26 <+ChillerDragon> some bitcoin maximalist at apple running illegal marketing campains lmao
16:32 < bridge> <gerdoe> is
16:32 < bridge> <gerdoe> > -DCLIENT=[ON|OFF]
16:32 < bridge> <gerdoe> > Whether to enable client compilation. If set to OFF, DDNet will not depend on Curl, Freetype, Ogg, Opus, Opusfile, and SDL2. Default value is ON.
16:32 < bridge> <gerdoe> still a thing?
16:32 < bridge> <gerdoe> cmake asks for curl and libpng anyway
16:37 <+ChillerDragon> sounds like a bug
16:38 < bridge> <DefaultO> I assume creating a Bot that helps people through maps is still considered cheating?
16:38 < bridge> <DefaultO> as to, not for personal gain, but letting it guide other players
16:39 < bridge> <DefaultO> I got pathing done for most novice maps. And it already is programmed in such a way that it helps everyone in a freeze.
16:39 < bridge> <Ryozuki> @Learath2 @Jupeyy_Keks so i changed my case fans for pwm and the cpu fan for a expensive noctua one, and reapplied thermal paste with a noctua one
16:40 < bridge> <Ryozuki> i compiled some stuff
16:40 < bridge> <Ryozuki> max i reached is 78 after compiling some time
16:40 < bridge> <Ryozuki> before i reached 88 sometimes
16:40 < bridge> <Ryozuki> 5800x is hot itself i guess tho xD
16:40 < bridge> <gerdoe> why do you need bot for guiding tho
16:41 < bridge> <Ryozuki> man these new fans i got are so silent, my pc was quite the rocket before
16:41 < bridge> <DefaultO> I want to see how helpful a bot could be in empty servers
16:41 < bridge> <gerdoe> huh, thanks for your review xd
16:41 < bridge> <gerdoe> will buy noctua next time xd
16:41 <+ChillerDragon> @DefaultO that is amzing is it open src?
16:41 < bridge> <gerdoe> anyway how bot can be useful
16:42 < bridge> <DefaultO> I hope it will never be
16:42 < bridge> <Ryozuki> i only got 1 noctua, for the cpu one, but usually the case fans are the noisy ones, i bought 4 ARCTIC F12
16:42 < bridge> <Ryozuki> and they dont make noise lol
16:42 < bridge> <gerdoe> noted xd
16:42 < bridge> <Ryozuki> but well i have like street noise as bg
16:42 < bridge> <DefaultO> Making noobs finish a map that have no partner
16:42 <+ChillerDragon> cool stuff how good does it work?
16:43 < bridge> <gerdoe> i mean actually how can bot help
16:43 <+ChillerDragon> does it generically detect parts and what to play?
16:43 < bridge> <gerdoe> what will he do idk
16:43 < bridge> <Ryozuki> @gerdoe https://noctua.at/es/products/fan/nf-a12x25-pwm-chromax-black-swap
16:43 < bridge> <Ryozuki> this is the fan
16:43 < bridge> <DefaultO> It can do parts in the future
16:43 < bridge> <Ryozuki> @gerdoe https://noctua.at/en/products/fan/nf-a12x25-pwm-chromax-black-swap
16:43 < bridge> <gerdoe> https://tenor.com/view/im-a-big-fan-lewi-lewis-fan-spinning-nikocado-avacado-gif-21664606
16:43 < bridge> <Ryozuki> premium quality bruda
16:44 < bridge> <gerdoe> just demo db will be much easier to implement and much easier to make
16:44 < bridge> <murpi> Yes, don't bot on our servers
16:44 < bridge> <murpi> also Rule 8
16:44 <+ChillerDragon> @DefaultO but yea to answer your question its highly illegal
16:44 <+ChillerDragon> @DefaultO but feel free to use it on zillyhuhn.com servers :) 
16:45 < bridge> <Jupstar âœª> nice then it was worth it ðŸ˜„
16:46 < bridge> <Ryozuki> the real win is how quiet it isn ow
16:46 < bridge> <Ryozuki> now*
16:46 < bridge> <Ryozuki> lol
16:46 < bridge> <DefaultO> Only Heinrich cares about it. And if it works great. I could provide you with the source so that you can make little NPC's for empty servers.
16:46 < bridge> <Anime.pdf> on lasergurkenland???
16:47 < bridge> <Anime.pdf> :poggers2:
16:47 <+ChillerDragon> xd there too 
16:47 <+ChillerDragon> i meant all tw servers i host
16:47 < bridge> <DefaultO> Not exactly sure what you mean by that. "Demo" tells me you mean a replay bot. But I have no clue what "db" stands for in this sentence.
16:48 < bridge> <DefaultO> A replay Bot isn't great at dynamically catching non-bot players.
16:48 <+ChillerDragon> wat sentence?
16:48 < bridge> <gerdoe> database with all finished maps xd
16:48 < bridge> <gerdoe> we already have ghost function in ddnet client
16:48 < bridge> <gerdoe> it can just get demos and play it while player is trying to do part
16:48 < bridge> <DefaultO> that's not what I am working on though
16:49 < bridge> <DefaultO> I want a play buddy
16:49 < bridge> <Learath2> I changed all my fans to noctua ones, their color scheme is shit but my pc is extremely quiet now
16:49 <+ChillerDragon> replace your friends with AI
16:49 < bridge> <DefaultO> that can get dragged, as well as drag me, or someone else
16:49 < bridge> <DefaultO> I have no DDNet friends. So that's exactly what I will do.
16:49 <+ChillerDragon> please share some action footage when its done @DefaultO im really curious
16:50 <+ChillerDragon> also please teach it block so i can play against enemys on localhost w my laggy internet
16:51 < bridge> <DefaultO> To code that I would have to know how Block works myself
16:51 <+ChillerDragon> enemy to da freeze
16:51 <+ChillerDragon> self out da freeze
16:51 <+ChillerDragon> done
16:51 < bridge> <DefaultO> I entered a block server once
16:51 < bridge> <DefaultO> and they all camp behind a fall
16:51 < bridge> <DefaultO> right after the start
16:51 <+ChillerDragon> yes tactical waiting
16:51 < bridge> <DefaultO> so how am I supposed to unblock myself in these cases
16:52 <+ChillerDragon> depends on the map
16:52 < bridge> <DefaultO> if I have to get through a freeze
16:52 < bridge> <murpi> buy vip
16:52 < bridge> <DefaultO> already have
16:52 < bridge> <murpi> :brownbear:
16:52 <+ChillerDragon> you can 2p aled
16:52 <+ChillerDragon> or rifle
16:52 <+ChillerDragon> or attack in masses etc
16:52 < bridge> <gerdoe> its not a real problem tho
16:53 < bridge> <murpi> I care too, since im the one who has to spent hours investigating
16:53 <+ChillerDragon> i honestly would love you if you can build me some offline bock single player
16:53 < bridge> <murpi> I care too, since im the one who has to spend hours investigating
16:54 < bridge> <DefaultO> You won't be able to tell the difference
16:54 <+ChillerDragon> arent u pro botting murpi?
16:54 < bridge> <murpi> ðŸ‘€
16:55 <+ChillerDragon> https://github.com/TeeworldsDB/irclogs/blob/ff56ff1c5527ead55257bcf54bb0d2a9167b08f1/ddnet/2021-12-29.log#L43
16:55 <+ChillerDragon> ladys and gents
16:55 <+ChillerDragon> we got em
16:55 <+ChillerDragon> > <murpi> Chillerdragon: your help bot on multeasymap is great
16:56 < bridge> <DefaultO> murpi tries to prevent what he has done already
16:56 < bridge> <DefaultO> ironic
16:56 < bridge> <murpi> That ain't me
16:56 <+ChillerDragon> sus
17:04 < bridge> <gerdoe> anyway is it intended to have curl and libpng to compile server only?
17:10 <+ChillerDragon> curl could be needed not sure but highly doubt libpng
17:50 < bridge> <Jupstar âœª> DragonStalker trains his AI
18:17 < bridge> <Robyt3> curl is used by the server to register it with the masterserver
18:19 < bridge> <gerdoe> but libpng?
18:22 < bridge> <Jupstar âœª> what makes u think that it is the case?
18:23 < bridge> <Jupstar âœª> there is no libpng symbol in DDNet-Server
18:26 < bridge> <gerdoe> maybe cmake error huh?
18:26 < bridge> <gerdoe> im passing `cmake .. -DCLIENT=OFF` and it says i need to install curl libpng and sqlite3 to run build
18:26 < bridge> <Jupstar âœª> sqlite3
18:26 < bridge> <Jupstar âœª> wait
18:27 < bridge> <Jupstar âœª> in one sentence?
18:27 < bridge> <gerdoe> i can understand why is curl and sqlite3 can be used for in server but tf is libpng doing here
18:27 < bridge> <gerdoe> of course not
18:27 < bridge> <gerdoe> are*
18:27 < bridge> <Jupstar âœª> ah ok was confused lol xD
18:27 < bridge> <Jupstar âœª> well yeah sounds like a cmake bug then
22:55 < bridge> <Learath2> Can you show the entire cmake output?
23:28 < bridge> <Teero> ig he can't ðŸ’€
23:32 < bridge> <Ewan> someone is probably doing link_libraries instead of target_link_libraries
23:37 < bridge> <gerdoe> nah just client variable wasnt present in if checks
23:37 < bridge> <gerdoe> im laying in bed rn cant get up
