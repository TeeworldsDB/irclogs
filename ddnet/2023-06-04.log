00:34 <+bridge> <Mr.Gh0s7> is this https://github.com/ddnet/ddnet/issues/2892 being worked on? I am interesting on trying to implement it :)
01:36 <+bridge> <Ewan> is ddnet against use of std strings in new code?
01:37 <+bridge> <Ewan> also, should i use `_vVarname` for a std::initializer_list
01:37 <+bridge> <Ewan> it's not a vector but it's similar
06:33 <+bridge> <Mr.Gh0s7> is this https://github.com/ddnet/ddnet/issues/2892 being worked on? I am interested on trying to implement it :)
08:35 <+bridge> <Ewan> i just went through a shitton of work writing code for ddnet that uses the STL without using exceptions because my stupid IDE said some one thing about it
08:35 <+bridge> <Ewan> and i automatically assumed exceptions were off
08:35 <+bridge> <Ewan> and then
08:35 <+bridge> <Ewan> ```
08:35 <+bridge> <Ewan> terminate called after throwing an instance of 'std::bad_function_call'
08:35 <+bridge> <Ewan>   what():  bad_function_call
08:35 <+bridge> <Ewan> ```
08:35 <+bridge> <Ewan> ðŸ˜ƒ
08:37 <+bridge> <Ewan> i wrote stuff like this
08:37 <+bridge> <Ewan> ```cpp
08:37 <+bridge> <Ewan> #define TRY_CALLBACK(a, b, c) { dbg_assert(bool(b), a " callback has no candidate."); b c; }
08:37 <+bridge> <Ewan> ...
08:37 <+bridge> <Ewan> TRY_CALLBACK("Operation failed", fnOperationFailedCallback, (LOAD_ERROR_DIRECTORY_UNREADABLE, &it))
08:37 <+bridge> <Ewan> // instead of fnOperationFailedCallback(LOADLOAD_ERROR_DIRECTORY_UNREADABLE, &it);
08:37 <+bridge> <Ewan> ```
08:37 <+bridge> <Ewan> so i could handle this error without catching an exception
08:37 <+bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1114805152935845908/image.png
08:37 <+bridge> <Ewan> oh well
09:18 <+bridge> <Ewan> cool that `cpp
09:18 <+bridge> <Ewan> const char *GetPath(int Type, const char *pDir, char *pBuffer, unsigned BufferSize)
09:18 <+bridge> <Ewan> `
09:18 <+bridge> <Ewan> in CStorage is not a part of the interface
09:18 <+bridge> <Ewan> cool that ```cpp
09:18 <+bridge> <Ewan> const char *GetPath(int Type, const char *pDir, char *pBuffer, unsigned BufferSize)
09:18 <+bridge> <Ewan> ```
09:18 <+bridge> <Ewan> in CStorage is not a part of the interface
09:18 <+bridge> <Ewan> so i can't get to it when i need to
09:20 <+bridge> <Ewan> oh nvm i see GetCompletePath
10:24 < ws-client> <ChillerDragon> @heinrich5991 do you remember why you marked sys.info client_version as optional?
10:24 < ws-client> <ChillerDragon> https://github.com/heinrich5991/libtw2/blob/master/gamenet/generate/spec/teeworlds-0.7.5.json
10:24 < ws-client> <ChillerDragon> https://github.com/teeworlds/teeworlds/blob/26d24ec061d44e6084b2d77a9b8a0a48e354eba6/src/engine/client/client.cpp#L351
10:24 < ws-client> <ChillerDragon> seems to be sent everytime on latest master
10:24 < ws-client> <ChillerDragon> was there a prior version?
10:24 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1685867077.png
10:25 < ws-client> <ChillerDragon> Its there since 5 years isnt that all 0.7 versions already?
10:25 < ws-client> <ChillerDragon> its already on the 0.7.0 git tag
10:26 < ws-client> <ChillerDragon> ops i messed up the spec link
10:26 < ws-client> <ChillerDragon> i mean this https://github.com/heinrich5991/libtw2/blob/09144b0ced40782b7a939a7d2a88c74c0e02db45/gamenet/generate/spec/teeworlds-0.7.5.json#L909
10:27 < ws-client> <ChillerDragon> @Jupstar âœª should links open in a new tab without having to ctrl+click?
10:27 <+bridge> <Jupstar âœª> they should always open in new tab
10:27 < ws-client> <ChillerDragon> alr
10:31 <+bridge> <Robyt3> Not that I know. You can try it, but I wouldn't say that it's a beginner friendly issue
10:33 <+bridge> <Robyt3> In the game loop yes, outside `std::string` is okay if the alternative would be to `malloc`/`free` some buffer anyway
10:34 <+bridge> <Robyt3> We only use `v` prefix for `std::vector` and not for other collections like `std::set`
10:34 <+bridge> <Ewan> i'll use a
10:34 <+bridge> <Ewan> i'll use `a`
10:35 <+bridge> <Jupstar âœª> a is array
10:35 <+bridge> <Ewan> initializer list is an array
10:35 <+bridge> <Ewan> you iterate over it
10:35 <+bridge> <Ewan> unless you mean a raw array
10:35 <+bridge> <Ewan> seems weird to not classify other containers
10:36 <+bridge> <Jupstar âœª> what are u even working on xd
10:36 <+bridge> <Jupstar âœª> i didnt read
10:36 <+bridge> <Ewan> not important
10:36 <+bridge> <Ewan> also i didn't say
10:37 <+bridge> <Ewan> basically batch file loader that i can use to asynchronously load skins and assets
10:37 <+bridge> <Jupstar âœª> you know whats great
10:37 <+bridge> <Jupstar âœª> it's june
10:37 <+bridge> <Jupstar âœª> and that means  c++20
10:37 <+bridge> <Jupstar âœª> so u can use variadic template arguments and use constraints with it
10:37 <+bridge> <Ewan> basically batch file loader that i can use to easily asynchronously load skins and assets
10:37 <+bridge> <Jupstar âœª> https://en.cppreference.com/w/cpp/language/constraints
10:38 <+bridge> <Ewan> yea it's dope
10:38 <+bridge> <Ewan> but unnecessary
10:38 <+bridge> <Ewan> for this
10:40 <+bridge> <Robyt3> not really, we just use `a` for normal arrays and `std::array` and `v` for `std::vector`, we don't use prefixes for other iterable collections like `std::set` and `std::list`
10:41 <+bridge> <Ewan> silly
10:41 <+bridge> <Jupstar âœª> ðŸ˜‚
10:41 <+bridge> <Jupstar âœª> buy better IDE i'd say
10:41 <+bridge> <Ewan> why
10:41 <+bridge> <Jupstar âœª> then it tells u what type the variable is
10:41 <+bridge> <Ewan> it does already
10:41 <+bridge> <Ewan> what's that got to do with it
10:41 <+bridge> <Jupstar âœª> !rust good thing this discussion doesnt exist here
10:41 < chillerbot1> @Ryozuki
10:42 <+bridge> <Jupstar âœª> everything is simply snake case and good is
10:42 <+bridge> <Jupstar âœª> u say its silly
10:43 <+bridge> <Ewan> using `a` ONLY for `T[]` arrays and `v` ONLY for `std::vector` specifically is weird
10:43 <+bridge> <Ewan> so specific and not general
10:43 <+bridge> <Jupstar âœª> a is also for std::array
10:44 <+bridge> <Jupstar âœª> why does initializer list even exist at all
10:44 <+bridge> <Jupstar âœª> what problem does it solve over std::array
10:44 <+bridge> <Ewan> easy replacement for variadic arguments
10:44 <+bridge> <Jupstar âœª> yeah but how is that better than an std::array
10:45 <+bridge> <Ewan> ```cpp
10:45 <+bridge> <Ewan> template <typename T>
10:45 <+bridge> <Ewan> void doStuff(const std::initializer_list<T> &args) {
10:45 <+bridge> <Ewan>   for(const auto &it : args) {
10:45 <+bridge> <Ewan>     // stuff
10:45 <+bridge> <Ewan>   }
10:45 <+bridge> <Ewan> }
10:45 <+bridge> <Ewan> 
10:45 <+bridge> <Ewan> doStuff<int>({1, 5, 2, 7, 12});
10:45 <+bridge> <Ewan> ```
10:45 <+bridge> <Ewan> idk
10:45 <+bridge> <Ewan> that's just what it's for
10:46 <+bridge> <Jupstar âœª> yeah, but to me it looks like this is nothing a std::array couldn't do
10:46 <+bridge> <Jupstar âœª> 
10:46 <+bridge> <Jupstar âœª> or a constexpr std::vector
10:46 <+bridge> <Ewan> i don't know why it exists or why it's better
10:46 <+bridge> <Ewan> i just know that this is its use case
10:46 <+bridge> <Ewan> and if it exists alongside std::array and is for this specific purpose, i have reason to believe it is better suited to this purpose
10:46 <+bridge> <Ewan> otherwise it would not exist
10:46 <+bridge> <Jupstar âœª> i guess they wanted to save the size template argument
10:47 <+bridge> <Robyt3> Using `std::vector` would be better here because you can just create a vector from an initializer list IIRC
10:48 <+bridge> <Ewan> no need for dynamic size
10:48 <+bridge> <Jupstar âœª> maybe they didnt like the fact that an vector can be dynamic
10:48 <+bridge> <Jupstar âœª> and forced compile tile here
10:48 <+bridge> <Jupstar âœª> and forced compile time here
10:49 <+bridge> <Robyt3> It just looks like some testing code so in that case it's okay
10:49 <+bridge> <Jupstar âœª> but since u need a template anyway, u can probs also simply use auto
10:49 <+bridge> <Robyt3> But for other code I'd avoid using different types so we don't need to convert as much between layers
11:05 <+bridge> <Jupstar âœª> btw sounds really useful, esp. the assets are so dead ass slow ðŸ˜‚
12:38 <+bridge> <Learath2> It's mostly a language construct. It's the glue that allows you to initialize vectors/std::arrays with the pretty brace syntax
12:39 <+bridge> <Ryozuki> hack
12:40 <+bridge> <Jupstar âœª> it feels hacky indeed
12:40 <+bridge> <Jupstar âœª> a new syntax but then a template struct
12:40 <+bridge> <Learath2> It also has some small guarantees that makes it lighter and trivial to optimize
12:41 <+bridge> <Jupstar âœª> i mean i often use the brace syntax, but i never used the resulting template definition
12:41 <+bridge> <Vinson> is there a client can join ddnet for cmd only?
12:41 <+bridge> <Vinson> i just want to use cmds to join a ddnet server
12:41 < ws-client> <ChillerDragon> what is cmd only?
12:42 < ws-client> <ChillerDragon> yes
12:42 < ws-client> <ChillerDragon> ``DDNet "connect ger.ddnet.tw"``
12:42 <+bridge> <Vinson> i want to add bot to my server
12:43 < ws-client> <ChillerDragon> :robot:
12:43 <+bridge> <Ryozuki> :botmorning:
12:43 < ws-client> <ChillerDragon> ok what should the bot do?
12:43 < ws-client> <ChillerDragon> should it be server or client side?
12:43 <+bridge> <Vinson> move and fire
12:43 < ws-client> <ChillerDragon> based on what 
12:43 < ws-client> <ChillerDragon> move where fire on what
12:43 <+bridge> <Vinson> players
12:44 < ws-client> <ChillerDragon> client or server side?
12:44 < ws-client> <ChillerDragon> client side this sounds kinda sus
12:44 < ws-client> <ChillerDragon> anyways it sounds like a technical thing to do
12:44 <+bridge> <Vinson> i mean is there a  project like https://www.npmjs.com/package/teeworlds?activeTab=readme
12:44 < ws-client> <ChillerDragon> do you know C++?
12:44 <+bridge> <Vinson> yes
12:45 < ws-client> <ChillerDragon> what is the problem with the project you referenced?
12:45 < ws-client> <ChillerDragon> or do you want it server side?
12:45 <+bridge> <Learath2> If you want your function to take a brace initializer list, if you take a initializer_list even with O0, it'll be zero copy. If you take a vector instead you are up to the mercy of the compiler
12:45 <+bridge> <Learath2> That's the only use
12:45 <+bridge> <Vinson> i just want to test connect a bot to a server with out modifie the server itself
12:45 <+bridge> <Jupstar âœª> but what if i simply use auto
12:45 <+bridge> <Jupstar âœª> which is allowed since c++20
12:45 <+bridge> <Vinson> i just want to test connect a bot to a server with out modifiy the server itself
12:46 < ws-client> <ChillerDragon> ok
12:46 < ws-client> <ChillerDragon> maybe dbg dummies is what you want
12:46 < ws-client> <ChillerDragon> im not really fllowing what execatly you need
12:46 <+bridge> <Learath2> My inbrain compiler doesn't support templates yet, buuut I think it'll end up being an initializer list
12:47 <+bridge> <Jupstar âœª> yeah, but at least i dont use this weird initializer list struct that seems like bloat in newer cpp versions ðŸ˜‚
12:47 < ws-client> <ChillerDragon> @Vinson do you want to start a client and connect it to a server? or do you want a server that connects clients to it self?
12:48 <+bridge> <Jupstar âœª> well it has it sense
12:50 <+bridge> <ReiTW> btw why nobody did a Docker image for ddnet? (I mean an official one
12:50 <+bridge> <Learath2> Mh, it only is sort of replaced by a constexpr array in newer cpp. So not sure how bloat it is
12:50 <+bridge> <Vinson> i want a client can connect to a server
12:51 <+bridge> <Vinson> but without graphics
12:51 < ws-client> <ChillerDragon> @Vinson okay then the npm package your referenced works fine
12:51 < ws-client> <ChillerDragon> have you tried it?
12:51 <+bridge> <Vinson> ok
12:51 <+bridge> <Vinson> nope
12:51 <+bridge> <Vinson> i am install npm
12:51 < ws-client> <ChillerDragon> ye its good
12:56 <+bridge> <Vinson> wow it works fine
12:56 <+bridge> <Vinson> https://cdn.discordapp.com/attachments/293493549758939136/1114870368478429284/image.png
12:57 < ws-client> <ChillerDragon> told ya
12:57 < ws-client> <ChillerDragon> enjoy botting axaxaxax
12:58 < ws-client> <ChillerDragon> note that if you automate walking towards players and shooting at them you need the permission of the server owner to run that
13:01 <+bridge> <ReiTW> ^
13:01 <+bridge> <ReiTW> btw why nobody did a Docker image for ddnet? (I mean an official one)
13:02 <+ChillerDragon> there was one irrc
13:02 <+ChillerDragon> IIRC
13:02 < ws-client> <ChillerDragon> https://github.com/ddnet/ddnet/blob/master/Dockerfile
13:02 < ws-client> <ChillerDragon> or you mean pushed?
13:02 < ws-client> <ChillerDragon> because official ddnet servers run bare metal
13:02 <+bridge> <ReiTW> this one doesn't run anything
13:02 < ws-client> <ChillerDragon> and kog is full on private 
13:03 <+bridge> <ReiTW> I meant a dockerfile that can be used by anyone
13:03 < ws-client> <ChillerDragon> i guess from the active ddnet devs there is not enough interest
13:03 < ws-client> <ChillerDragon> if you want one go pr one
13:04 <+bridge> <ReiTW> will prob later make one
13:04 < ws-client> <ChillerDragon> do you run tw servers in docker?
13:12 <+bridge> <Learath2> If wg21 ever decides to accept P2447 `std::span` will replace all brace params so in C++26 explicit initializer_list constructors might become obsolete ðŸ˜›
13:16 <+bridge> <ReiTW> yes I do
13:16 < ws-client> <ChillerDragon> which
13:16 <+bridge> <ReiTW> currently only blockworlds
13:17 < ws-client> <ChillerDragon> u also rn kubernetes?
13:18 < ws-client> <ChillerDragon> do you use docker docker? or podman?
13:18 <+bridge> <ReiTW> nah cuz not useful rn lol
13:18 < ws-client> <ChillerDragon> and why xd
13:18 < ws-client> <ChillerDragon> not useful ever*
13:18 < ws-client> <ChillerDragon> axaxax
13:18 <+bridge> <ReiTW> well docker is still shit to run teeworlds, but well when you know how to fix stupid things that docker does, it works fine
13:19 < ws-client> <ChillerDragon> what stupid things?
13:20 < ws-client> <ChillerDragon> why is it shit?
13:22 <+bridge> <ReiTW> For example I use a failover IP at OVH, but docker kinda doesn't support that
13:22 < ws-client> <ChillerDragon> i see
13:22 < ws-client> <ChillerDragon> and why do you want to use docker anyways?
13:22 < ws-client> <ChillerDragon> why not bare metal?
13:22 <+bridge> <ReiTW> I mean I'd still be able to contact the container with that IP, but the response will be NATed with the main IP lol
13:23 <+bridge> <ReiTW> So had to add custom iptables rules
13:23 <+bridge> <ReiTW> Cuz it's easier to deploy things
13:23 <+bridge> <ReiTW> Once you know how to use
13:23 < ws-client> <ChillerDragon> how is docker easier to deploy?
13:23 < ws-client> <ChillerDragon> could you name a example what was harder specifically and now got easier?
13:24 <+bridge> <ReiTW> Pre-built images, you don't need to do everything by yourself
13:24 < ws-client> <ChillerDragon> like what?
13:24 <+bridge> <ReiTW> Eg mariadb imahe
13:24 <+bridge> <ReiTW> Eg mariadb image
13:24 < ws-client> <ChillerDragon> ah so you do not have to run the oneliner to setup a fresh mariadb server?
13:24 < ws-client> <ChillerDragon> like creating a user etc
13:24 <+bridge> <ReiTW> Yes
13:25 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1685877905.png
13:25 <+bridge> <ReiTW> U just specify env vars, also I can easily isolate stuff
13:25 < ws-client> <ChillerDragon> what stuff tho?
13:25 <+bridge> <ReiTW> For eg my mysql container will only be on the same docker network as my game server, but won't be visible by the rest
13:25 < ws-client> <ChillerDragon> seems like additional complexity to me
13:25 < ws-client> <ChillerDragon> which rest?
13:25 < ws-client> <ChillerDragon> what else is there
13:26 <+bridge> <ReiTW> If I have other stuff to run
13:26 <+bridge> <ReiTW> Wait
13:26 < ws-client> <ChillerDragon> like conflicting dbs?
13:26 < ws-client> <ChillerDragon> hm
13:31 <+bridge> <ReiTW> https://cdn.discordapp.com/attachments/293493549758939136/1114879139934130236/image.png
13:31 <+bridge> <ReiTW> this is an example of what u can do for eg
13:32 < ws-client> <ChillerDragon22> are you doing this?
13:32 < ws-client> <ChillerDragon22> and why?
13:32 <+bridge> <ReiTW> you can have a network for all your websites, all your www containers will be in 2 networks, a private one to access their database, and the 2nd network is for traefik
13:32 <+bridge> <ReiTW> yes I do that, I just restrict at maximum the visibility of each databases
13:33 < ws-client> <ChillerDragon22> and thats for what?
13:33 < ws-client> <ChillerDragon22> security?
13:33 < ws-client> <ChillerDragon22> cant you just make your db not expose public ports and done?
13:33 <+bridge> <ReiTW> also traefik uses the docker socket, I use https://hub.docker.com/r/tecnativa/docker-socket-proxy to restrict the usage of it
13:33 < ws-client> <ChillerDragon22> seems so complicated
13:34 <+bridge> <ReiTW> it is not exposed publicly, I meant to isolate it from other containers
13:34 <+bridge> <ReiTW> it's not that hard lol
13:34 < ws-client> <ChillerDragon22> so other tw servers can not reach the db?
13:34 < ws-client> <ChillerDragon22> do you have a public infrastructure repo?
13:35 < ws-client> <ChillerDragon22> also TIL javascript can crash firefox xd
13:35 <+bridge> <ReiTW> for example yes
13:35 < ws-client> <ChillerDragon22> no for your infra
13:35 <+bridge> <ReiTW> I don't think I have
13:35 < ws-client> <ChillerDragon22> sad
13:35 <+bridge> <ReiTW> u mean u want to see how I setup all of that
13:36 < ws-client> <ChillerDragon22> i want to see every config file and the setup command
13:36 < ws-client> <ChillerDragon22> too evaluate how easy it really is
13:36 < ws-client> <ChillerDragon22> do you have the infrastructure tracked as code?
13:36 <+bridge> <gerdoe> chillerevaluater
13:36 < ws-client> <ChillerDragon22> all the traefik and dockerfiles?
13:37 <+bridge> <ReiTW> traefik is the most annoying to configure lmao
13:37 < ws-client> <ChillerDragon> i knew it xd
13:37 <+bridge> <ReiTW> but the rest is easy
13:37 < ws-client> <ChillerDragon> if you get a new server what do you do to replicate the setup?
13:37 < ws-client> <ChillerDragon> how long does it take you?
13:37 <+bridge> <ReiTW> takes me less than 30min
13:37 < ws-client> <ChillerDragon> thats pog
13:37 <+bridge> <ReiTW> I just backup all my docker-compose stuff
13:37 < ws-client> <ChillerDragon> but how
13:38 < ws-client> <ChillerDragon> so you have not tracked it yet?
13:38 <+bridge> <ReiTW> wdym by tracked
13:38 < ws-client> <ChillerDragon> check it in git
13:38 <+bridge> <ReiTW> ah it's not in a git repo
13:38 < ws-client> <ChillerDragon> if you decide to do so and publish it let me know im curious
13:39 < ws-client> <ChillerDragon> im yet to be sold on docker
13:39 <+bridge> <ReiTW> xdd
13:39 <+bridge> <ReiTW> docker-compose makes your life easier tho
13:39 < ws-client> <ChillerDragon> but if you show me a simple repo where the config files make sense and there is a readme with 3 commands to set it up and then i have a nice tw network with dbs etc id buy it
13:40 <+bridge> <ReiTW> I can make an example & show you
13:40 <+bridge> <ReiTW> but later
13:40 < ws-client> <ChillerDragon> but until then i use my 13k lines of bash and bare metal to deploy tw servers
13:40 <+bridge> <ReiTW> lmao
13:41 < ws-client> <ChillerDragon> minimal dependencies blazingly fast highly customizable
13:41 <+bridge> <Learath2> I made a docker image for ddnet but never put it anywhere
13:41 <+bridge> <Learath2> Maybe I can polish it up and put it on the repo?
13:41 < ws-client> <ChillerDragon> lerato wants to join kog dev team
13:42 <+bridge> <ReiTW> well I removed alot
13:43 <+bridge> <ReiTW> ```yml
13:43 <+bridge> <ReiTW> version: '3'
13:43 <+bridge> <ReiTW> services:
13:43 <+bridge> <ReiTW>   db:
13:43 < ws-client> <ChillerDragon> oh no
13:43 <+bridge> <ReiTW>     container_name: db
13:43 <+bridge> <ReiTW>     image: mariadb
13:43 <+bridge> <ReiTW>     restart: always
13:43 <+bridge> <ReiTW>     volumes:
13:43 <+bridge> <ReiTW>       - /opt/volumes/bombay/mariadb:/var/lib/mysql
13:43 <+bridge> <ReiTW>     environment:
13:43 <+bridge> <ReiTW>       MYSQL_ROOT_PASSWORD: pw
13:43 <+bridge> <ReiTW>       MYSQL_USER: tw
13:43 <+bridge> <ReiTW>       MYSQL_PASSWORD: pw
13:43 <+bridge> <ReiTW>       MYSQL_DATABASE: bw
13:43 <+bridge> <ReiTW>     networks:
13:43 <+bridge> <ReiTW>       - bombay
13:43 <+bridge> <ReiTW> 
13:43 <+bridge> <ReiTW>   v3royal:
13:43 <+bridge> <ReiTW>     container_name: v3royal
13:43 <+bridge> <ReiTW>     depends_on:
13:43 <+bridge> <ReiTW>       - db
13:43 <+bridge> <ReiTW>     image: bombay:latest
13:43 <+bridge> <ReiTW>     restart: always
13:43 <+bridge> <ReiTW> 
13:43 <+bridge> <ReiTW>     volumes:
13:43 <+bridge> <ReiTW>       - /opt/volumes/bombay/v3royal/data:/blockworlds/data
13:43 <+bridge> <ReiTW>     networks:
13:43 <+bridge> <ReiTW>       - bombay
13:43 <+bridge> <ReiTW>     ports:
13:43 <+bridge> <ReiTW>       - 149.202.19.227:8404:8404/udp
13:44 <+bridge> <ReiTW>   
13:44 <+bridge> <ReiTW> it sets up bombay, a phpmyadmin that is on the bombay network & traefik
13:44 <+bridge> <ReiTW> and from the bombay network only the v3royal server is exposed
13:44 <+ChillerDragon> pls dont kill irc thank
13:44 <+bridge> <ReiTW> xD
13:44 <+bridge> <ReiTW> I can send a pastebin if it's better
13:44 <+bridge> <Learath2> Ew phpmyadmin user
13:44 <+bridge> <ReiTW> @Learath2 yes, well it's only cuz I have some mates that are noobs
13:45 <+bridge> <ReiTW> overwise wouldn't have used it lol
13:45 <+bridge> <Learath2> Make them learn sql
13:45 <+bridge> <ReiTW> xD they don't have time for it ig
13:45 < ws-client> <ChillerDragon> thanks for the docker compose leak
13:45 < ws-client> <ChillerDragon> pretty boring tho xd
13:45 <+bridge> <ReiTW> well ig easier than a bash script
13:45 <+bridge> <ReiTW> if I want another srv I could easily duplicate the v3royal stuff & edit some lines
13:46 < ws-client> <ChillerDragon> i see
13:46 < ws-client> <ChillerDragon> yea not too bad i guess
13:46 < ws-client> <ChillerDragon> i just cp -r my 13k lines of bash
13:46 < ws-client> <ChillerDragon> and edit my config  file
13:46 <+bridge> <ReiTW> yesterday I've added the support for env vars
13:46 <+bridge> <Learath2> We scp some stuff over, edit some configs then hammer until it works
13:46 < ws-client> <ChillerDragon> HAMMER
13:46 <+bridge> <Learath2> Very manual workflow here at ddnet inc.
13:47 <+bridge> <ReiTW> for eg:
13:47 <+bridge> <ReiTW> ```yml
13:47 <+bridge> <ReiTW>   tw_srv:
13:47 <+bridge> <ReiTW>     container_name: tw_srv
13:47 <+bridge> <ReiTW>     image: bombay:latest
13:47 <+bridge> <ReiTW>     restart: always
13:47 <+bridge> <ReiTW>     environment:
13:47 <+bridge> <ReiTW>       TW_sv_name: "This is a test server"
13:47 <+bridge> <ReiTW>   ...
13:47 <+bridge> <ReiTW> ```
13:47 < ws-client> <ChillerDragon> isnt deen running his magic shell script on a new vps and its up and running after a cup of tea?
13:47 < ws-client> <ChillerDragon> i think id have to setup some tw servers with docker one day just for the memes
13:48 <+bridge> <Learath2> Ideally I would write ansible playbooks for deploying these
13:48 < ws-client> <ChillerDragon> ew ansible
13:48 <+bridge> <ReiTW> yes that's the best option for you
13:48 < ws-client> <ChillerDragon> i somehow really dislike ansible idk why
13:48 <+bridge> <ReiTW> as you are a docker hater if I remember correctly
13:48 <+bridge> <ReiTW> xD
13:48 <+bridge> <ReiTW> or was it heinrich, forgot
13:48 < ws-client> <ChillerDragon> docker is propriatariy
13:49 <+bridge> <ReiTW> yes
13:49 < ws-client> <ChillerDragon> proprietary*
13:49 <+bridge> <Learath2> I'm disgusted by docker
13:49 < ws-client> <ChillerDragon> so it bad
13:49 <+bridge> <Learath2> But we have rootless podman to rescue
13:49 <+bridge> <Ryozuki> :cammostripes:
13:49 < ws-client> <ChillerDragon> @Ryozuki leak some emotes
13:49 <+bridge> <ReiTW> well luckily podman uses the same set of commands
13:49 <+bridge> <Ryozuki> at docker
13:49 < ws-client> <ChillerDragon> like cammostripes
13:49 <+bridge> <Learath2> Works + not proprietary + rootless
13:49 <+bridge> <ReiTW> idk if they have a docker-compose alternative
13:49 < ws-client> <ChillerDragon> pogman
13:49 <+bridge> <Learath2> They do, it's podman-compose
13:49 < ws-client> <ChillerDragon> but little ecosys compared to docker
13:50 <+bridge> <ReiTW> ah, damn
13:50 <+bridge> <Learath2> They share the same ecosys, wym?
13:50 < ws-client> <ChillerDragon> its not as drop in as they claim
13:50 <+bridge> <Learath2> It is very very drop in after you get through the setup struggles
13:50 < ws-client> <ChillerDragon> ..
13:51 <+bridge> <Learath2> If you are ok with running it as root it's even better
13:51 < ws-client> <ChillerDragon> lerato how to debug js?
13:51 <+bridge> <Learath2> spam console.log everywhere
13:51 <+bridge> <ReiTW> don't use nodejs
13:51 <+bridge> <ReiTW> use deno
13:51 < ws-client> <ChillerDragon> i cant open console
13:51 < ws-client> <ChillerDragon> my browser crashes if i open page
13:52 <+bridge> <ReiTW> soon new laptop, idk if I stay on bloatdows 11 or I switch to a linux distro
13:53 < ws-client> <ChillerDragon> buy gnome pro
13:53 <+bridge> <Learath2> What sort of unholy bug did you encounter that it directly crashes your browser? Damn
13:53 < ws-client> <ChillerDragon> ikr
13:54 < ws-client> <ChillerDragon> idk
13:54 <+bridge> <Learath2> At that point your only hope is to attach gdb to the browser
13:54 < ws-client> <ChillerDragon> lmao
13:54 <+bridge> <ReiTW> he tried to mine btc or wut
13:54 < ws-client> <ChillerDragon> that sounds horrible
13:54 <+bridge> <Ryozuki> use gentoo
13:54 <+bridge> <Ryozuki> be in control
13:54 <+bridge> <ReiTW> I was thinking about manjaro
13:54 < ws-client> <ChillerDragon> majaro is better than windows
13:55 <+bridge> <Ryozuki> https://hannahmontana.sourceforge.net/Site/Home.html
13:55 <+bridge> <Ryozuki> this is better than windows
13:55 < ws-client> <ChillerDragon> its like ubuntu of arch users
13:55 <+bridge> <ReiTW> wtf lmaoo
13:55 < ws-client> <ChillerDragon> lmao hannamonatana
13:55 <+bridge> <ReiTW> maybe I could use templeOS
13:55 <+bridge> <ReiTW> for my laptop
13:55 < ws-client> <ChillerDragon> i dunno bout that
13:56 <+bridge> <ReiTW> u dunno templeOS?
13:56 <+bridge> <Learath2> I don't know if it can even boot on real hardware
13:56 <+bridge> <ReiTW> https://templeos.org/
13:56 <+bridge> <ReiTW> idk lmao, worth a try
13:57 <+bridge> <Learath2> No network drivers or networking layer. You'll just have to do pcie commands by hand to send packets
13:57 <+bridge> <ReiTW> :justatest:
13:57 < ws-client> <ChillerDragon> xd
13:57 < ws-client> <ChillerDragon> i mean i dunno if it is a good idea
13:57 < ws-client> <ChillerDragon> stick with linux 
13:57 < ws-client> <ChillerDragon> or maybe some bsd
13:59 <+bridge> <Learath2> Can you read words of god in linux?
13:59 < ws-client> <ChillerDragon> no but..
13:59 < ws-client> <ChillerDragon> i mean
13:59 < ws-client> <ChillerDragon> hm
14:03 < ws-client> <ChillerDragon> aaa leratoo!
14:03 < ws-client> <ChillerDragon> i found bugo
14:03 < ws-client> <ChillerDragon> i confused ``=``  and  ``+=``
14:04 < ws-client> <ChillerDragon> and i guess maffs fucked my ass due to it growing too big
14:04 <+bridge> <Learath2> Oh btw there is one other way to debug that kind of thing. You can use the debugger statement
14:05 < ws-client> <ChillerDragon> yea i wasnt sure where to put it
14:05 < ws-client> <ChillerDragon> so i used binary search with commenting out until it stops hang
14:05 < ws-client> <ChillerDragon> and then i knew which lines to look closer at
14:08 <+bridge> <Learath2> Smort
14:38 <+bridge> <ReiTW> bsd damn good
14:39 <+bridge> <ReiTW> I've used freebsd in the past, it's amazing
15:16 <+bridge> <ReiTW> discord is dead
15:16 <+bridge> <ReiTW> rip
15:17 <+bridge> <Mr.Gh0s7> why?
15:17 <+bridge> <Jupstar âœª> bcs its offline
15:17 <+bridge> <Jupstar âœª> completely
15:17 <+bridge> <Jupstar âœª> i bet he wrote the messages half hour ago or smth xD
15:18 <+bridge> <Mr.Gh0s7> hmm? the #developer ?
15:18 <+bridge> <Mr.Gh0s7> ah yes ic now my msgs don't come trough either
15:19 <+bridge> <Jupstar âœª> i used it too, and it lagged like shit ðŸ˜‚ 
15:19 <+bridge> <Jupstar âœª> 
15:19 <+bridge> <Jupstar âœª> every 10 seconds a complete freeze for at least 1 second
15:19 <+bridge> <ReiTW> never had issues
15:19 <+bridge> <ReiTW> + bsd was way better than linux in terms of network performance
15:19 <+bridge> <ReiTW> prob why it's alot used by companies like Juniper etc..
15:19 <+bridge> <Jupstar âœª> how did u measure that? lmao
15:19 <+bridge> <ReiTW> I didn't, I've read some blogs about it
15:20 <+bridge> <Jupstar âœª> netflix invested into the network code afaik
15:21 <+bridge> <Mr.Gh0s7> hmm? the #developer ?
15:21 <+bridge> <Jupstar âœª> yeah i read it too before
15:21 <+bridge> <Jupstar âœª> but i guess on normal human network it makes no real difference ðŸ˜„
15:21 <+bridge> <Jupstar âœª> discord hello
15:22 <+bridge> <Jupstar âœª> stop lag pls
15:22 <+bridge> <Jupstar âœª> i wrote my msgs at 15:20
15:22 <+bridge> <ReiTW> this was also good some years ago
15:22 <+bridge> <ReiTW> but I think since linux 5.x they optimized a lot
15:23 <+bridge> <Jupstar âœª> lel
15:23 <+bridge> <Jupstar âœª> lel
15:23 <+bridge> <Jupstar âœª> yeah i read it too before
15:24 < ws-client> <Jupstar> irc more stable
15:24 < ws-client> <Jupstar> why does it send my messages twice now :joy:
15:24 <+bridge> <Jupstar âœª> yeah i read it too before
15:24 < ws-client> <Jupstar> great
15:24 < ws-client> <Jupstar> don't need to talk anymore
15:24 < ws-client> <Jupstar> discord does it for me
15:24 < ws-client> <ChillerDragon> jupsti want me to deploy web update?
15:24 < ws-client> <Jupstar> yeah sounds great
15:24 < ws-client> <Jupstar> new features, im in
15:25 <+bridge> <Jupstar âœª> yeah i read it too before
15:25 < ws-client> <Jupstar> yeah i also read it too before
15:25 < ws-client> <ChillerDragon22> hellow
15:25 < ws-client> <ChillerDragon22> oh no NaN
15:25 < ws-client> <ChillerDragon22> xd
15:25 < ws-client> <ChillerDragon22> NaN bad xd
15:25 <+bridge> <Mr.Gh0s7> bb discord spam = big ban discord spam
15:26 <+bridge> <chillerdragon> ```
15:26 <+bridge> <chillerdragon> yaml
15:26 <+bridge> <chillerdragon> yaml:
15:26 <+bridge> <chillerdragon>   - sucks
15:26 <+bridge> <chillerdragon>   - so bad
15:26 <+bridge> <chillerdragon> ```
15:26 < ws-client> <ChillerDragon> @Jupstar finally multi line code blocks
15:27 < ws-client> <Jupstar2> ah missed the chance
15:27 <+bridge> <Jupstar âœª> ```rs
15:27 <+bridge> <Jupstar âœª> fn no() -> i8 {}
15:27 <+bridge> <Jupstar âœª> ```
15:27 < ws-client> <ChillerDragon> oh tru
15:27 < ws-client> <ChillerDragon> lang is same line as ``` not next? right xd
15:27 < ws-client> <ChillerDragon> aaaaaaaaaaaaaaaaa
15:28 <+bridge> <Jupstar âœª> lel
15:28 < ws-client> <ChillerDragon> this happens when you code with specs from da head
15:28 < ws-client> <Jupstar2> lmao, discord still auto sends some msgs
15:28 <+bridge> <Chairn> couldn't you just write \`\`\` directly in your chat?
15:28 <+bridge> <ReiTW> spammer :giga_chad:
15:28 <+bridge> <Chairn> oh god, dc ded ðŸ˜¢
15:29 < ws-client> <ChillerDragon> @Chairn the problem was multiple lines and code highlight because irc only has single line so i had to virtually merge them to apply synatx to multi line code blocks
15:29 <+bridge> <Mr.Gh0s7> cool add replies and I'm gonna switch too ;)
15:29 <+bridge> <Jupstar âœª> this is also not from me ðŸ˜‚
15:29 <+bridge> <Jupstar âœª> what happens if discord resends a message that was a reply to another one xDD
15:29 <+bridge> <Mr.Gh0s7> let's communicate with morse code
15:30 <+bridge> <Jupstar âœª> today is the day to find it out
15:30 < ws-client> <Jupstar2> lets compress out messages to save bandwidth for discord
15:30 < ws-client> <ChillerDragon> @Mr.Gh0s7 not sure how to make replies with a single line message protocol under the hood xd
15:30 < ws-client> <Jupstar2> our*
15:30 <+bridge> <Mr.Gh0s7> from the typing
15:31 <+bridge> <ReiTW> spammer :giga_chad:
15:32 <+bridge> <Jupstar âœª> everything is so out of context on discord side xDDD
15:32 <+bridge> <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1114909439229698079/image.png
15:32 <+bridge> <ReiTW> spammer :giga_chad:
15:32 < ws-client> <ChillerDragon> lol discord as bugged as matrix xd
15:32 <+bridge> <Jupstar âœª> ðŸ˜‚ ðŸ˜‚ ðŸ˜‚ ðŸ˜‚ ðŸ˜‚ ðŸ˜‚ ðŸ˜‚ ðŸ˜‚ ðŸ˜‚ ðŸ˜‚
15:32 <+bridge> <Jupstar âœª> and you call me spammer
15:33 <+bridge> <Mr.Gh0s7> cool add replies and I'm gonna switch too ;)
15:33 <+bridge> <Chairn> couldn't you just write \`\`\` directly in your chat?
15:33 <+bridge> <Jupstar âœª> this is also not from me ðŸ˜‚
15:33 < ws-client> <ChillerDragon> im sure they use kubernetes at discord and it bugged axaxax
15:34 <+bridge> <Mr.Gh0s7> cool add replies and I'm gonna switch too ;)
15:34 <+bridge> <Mr.Gh0s7> from the typing
15:34 <+bridge> <Jupstar âœª> today is the day to find it out
15:35 <+bridge> <Mr.Gh0s7> Discord implemented ghosts! Ghost typers are out don't miss them
15:35 <+bridge> <Jupstar âœª> everything is so out of context on discord side xDDD
15:36 <+bridge> <Jupstar âœª> today is the day to find it out
15:36 <+bridge> <Jupstar âœª> everything is so out of context on discord side xDDD
15:36 <+bridge> <Jupstar âœª> @Reteah discord trolls u ðŸ˜‚
15:37 <+bridge> <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1114910713798991932/image.png
15:37 <+bridge> <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1114910718815383652/image.png
15:37 <+bridge> <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1114910872997994547/image.png
15:37 <+bridge> <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1114910873262231612/image.png
15:38 < ws-client> <Jupstar2> chillerdragon: irc has problems if i upload 2 images at once
15:38 <+bridge> <Mr.Gh0s7> U cannOt StoP the Gh0stÏ‚
15:39 <+bridge> <Mr.Gh0s7> U cannOt StoP the Gh0stÏ‚
15:39 <+bridge> <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1114911174140641290/image.png
15:39 <+bridge> <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1114911176523005952/image.png
15:39 <+bridge> <Mr.Gh0s7> U cannOt StoP the Gh0stÏ‚
15:39 <+bridge> <Jupstar âœª> nice it even dublicates images
15:39 <+bridge> <Mr.Gh0s7> U cannOt StoP the Gh0stÏ‚
15:39 <+bridge> <Ryozuki> test
15:40 <+bridge> <Mr.Gh0s7> :feelsbadman: 4 times now
15:40 <+bridge> <ReiTW> 18000ms :justatest:
15:42 <+bridge> <Mr.Gh0s7> From the lags from disc I feel like vscode lags too and now I double check that what I did actually happened :kek:
15:43 <+bridge> <Jupstar âœª> ðŸ™ƒ
15:43 <+bridge> <Jupstar âœª> oh its fast again
15:44 <+bridge> <Mr.Gh0s7> cool
15:45 <+bridge> <Mr.Gh0s7> Is it only #developer or discord in general?
15:45 < ws-client> <Jupstar2> i assume in general
15:45 < ws-client> <Jupstar2> at least some servers
15:45 <+bridge> <ReiTW> looks like cloudflare is in pain too
15:45 <+bridge> <ReiTW> looks like cloudflare is in pain too
15:46 <+bridge> <Mr.Gh0s7> cool
15:48 <+bridge> <Mr.Gh0s7> cool
15:48 <+bridge> <ReiTW> looks like cloudflare is in pain too
15:50 < ws-client> <ChillerDragon> what problems @Jupstar2
15:50 < ws-client> <Jupstar2> i uploaded 2 images
15:50 < ws-client> <Jupstar2> but only shows one
15:51 < ws-client> <Jupstar2> but maybe its the irc bridge
15:51 <+bridge> <Mr.Gh0s7> it shows 2 to me
15:51 < ws-client> <Jupstar2> then u probs lot of content already :D
15:51 < ws-client> <ChillerDragon> ah no i think i know what yo mean
15:51 <+bridge> <Jupstar âœª> yeah on discord its 2
15:52 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1685886724.png
15:52 < ws-client> <ChillerDragon> ah yea because of the message merge hmm
15:52 < ws-client> <ChillerDragon> i guess never merge images then
15:55 <+bridge> <Mr.Gh0s7> guys let's join ALIVE fng 64 players so we can communicate ;)
15:55 < ws-client> <ChillerDragon> just ask jupsti for webchat pw
15:56 <+bridge> <Mr.Gh0s7> !jupsti plz
15:57 <+bridge> <Mr.Gh0s7> !jupsti plz
15:58 < ws-client> <Mr.Gh0s7> noice
15:59 < ws-client> <ChillerDragon> ok nice images fixed
15:59 < ws-client> <ChillerDragon> the backlog is so nice to test stuff because you can reload the page without having to resend messages
16:00 < ws-client> <Mr.Gh0s7> pog
16:17 < ws-client> <ChillerDragon> @Ryozuki can you send a smol edlang snippet pls? annotated with \`\`\`edlang
16:18 < ws-client> <ChillerDragon22> https://zillyhuhn.com/cs/.1685888301.png
16:18 < ws-client> <ChillerDragon22> o yikes &gt; html moment
17:11 <+bridge> <TsFreddie> hey, it's the first weekend i'm getting a full night sleep
17:11 <+bridge> <TsFreddie> love it
17:11 <+bridge> <TsFreddie> good night everyone
17:12 < ws-client> <Mr.Gh0s7> good night!
17:12 < ws-client> <ChillerDragon> gn
21:15 <+bridge> <Mr.Gh0s7> Why is this like this ```
21:15 <+bridge> <Mr.Gh0s7>     for(auto &pLayer : m_vpLayers)
21:15 <+bridge> <Mr.Gh0s7>     {
21:15 <+bridge> <Mr.Gh0s7>         if(pLayer->m_Visible)
21:15 <+bridge> <Mr.Gh0s7>         {
21:15 <+bridge> <Mr.Gh0s7>             if(pLayer->m_Type == LAYERTYPE_TILES)
21:15 <+bridge> <Mr.Gh0s7>             {
21:15 <+bridge> <Mr.Gh0s7>                 CLayerTiles *pTiles = static_cast<CLayerTiles *>(pLayer);
21:15 <+bridge> <Mr.Gh0s7>                 if(pTiles->m_Game || pTiles->m_Front || pTiles->m_Tele || pTiles->m_Speedup || pTiles->m_Tune || pTiles->m_Switch)
21:15 <+bridge> <Mr.Gh0s7>                     continue;
21:15 <+bridge> <Mr.Gh0s7>             }
21:15 <+bridge> <Mr.Gh0s7>             if(m_pMap->m_pEditor->m_ShowDetail || !(pLayer->m_Flags & LAYERFLAG_DETAIL))
21:15 <+bridge> <Mr.Gh0s7>                 pLayer->Render();
21:15 <+bridge> <Mr.Gh0s7>         }
21:15 <+bridge> <Mr.Gh0s7>     }
21:15 <+bridge> <Mr.Gh0s7> 
21:15 <+bridge> <Mr.Gh0s7>     for(auto &pLayer : m_vpLayers)
21:15 <+bridge> <Mr.Gh0s7>     {
21:15 <+bridge> <Mr.Gh0s7>         if(pLayer->m_Visible && pLayer->m_Type == LAYERTYPE_TILES && pLayer != m_pMap->m_pGameLayer && pLayer != m_pMap->m_pFrontLayer && pLayer != m_pMap->m_pTeleLayer && pLayer != m_pMap->m_pSpeedupLayer && pLayer != m_pMap->m_pSwitchLayer && pLayer != m_pMap->m_pTuneLayer)
21:15 <+bridge> <Mr.Gh0s7>         {
21:15 <+bridge> <Mr.Gh0s7>             CLayerTiles *pTiles = static_cast<CLayerTiles *>(pLayer);
21:15 <+bridge> <Mr.Gh0s7>             if(pTiles->m_Game || pTiles->m_Front || pTiles->m_Tele || pTiles->m_Speedup || pTiles->m_Tune || pTiles->m_Switch)
21:15 <+bridge> <Mr.Gh0s7>             {
21:15 <+bridge> <Mr.Gh0s7>                 pLayer->Render();
21:15 <+bridge> <Mr.Gh0s7>             }
21:15 <+bridge> <Mr.Gh0s7>         }
21:16 <+bridge> <Mr.Gh0s7>     }
21:16 <+bridge> <Mr.Gh0s7> ``` at CLayerGroup::Render() on game/editor/editor.cpp
21:16 <+bridge> <Jupstar âœª> what is your question? XD
21:16 <+bridge> <Mr.Gh0s7> more specifically why is there two if under for which check for the same thing
21:17 <+bridge> <Chairn> first loop render tile layers that are not gameplay related
21:17 <+bridge> <Chairn> second loop render tile layers that are gameplay related
21:17 <+bridge> <Chairn> first loop render tile layers that are not gameplay related, mostly backgrounds and graphics one
21:18 <+bridge> <Jupstar âœª> but it checks if they are not game layers
21:18 <+bridge> <Jupstar âœª> in the first if
21:20 <+bridge> <Jupstar âœª> well besides the if check which i dont understand
21:20 <+bridge> <Jupstar âœª> 
21:20 <+bridge> <Jupstar âœª> chairn is right tho i guess
21:22 <+bridge> <Mr.Gh0s7> I mean why are the if seperate. Wouldn't it better it checked ```(pLayer->m_Visible && pLayer->m_Type == LAYERTYPE_TILES)``` and then ```(pLayer != m_pMap->m_pGameLayer && pLayer != m_pMap->m_pFrontLayer && pLayer != m_pMap->m_pTeleLayer && pLayer != m_pMap->m_pSpeedupLayer && pLayer != m_pMap->m_pSwitchLayer && pLayer != m_pMap->m_pTuneLayer)``` under the same if?
21:23 <+bridge> <Jupstar âœª> wow thats your question? xd
21:23 <+bridge> <Jupstar âœª> answer: who the fuck cares xD
21:23 <+bridge> <Mr.Gh0s7> xD it's confusing though
21:24 <+bridge> <Jupstar âœª> better tell me why
21:24 <+bridge> <Jupstar âœª> ```
21:24 <+bridge> <Jupstar âœª> (pLayer != m_pMap->m_pGameLayer && pLayer != m_pMap->m_pFrontLayer && pLayer != m_pMap->m_pTeleLayer && pLayer != m_pMap->m_pSpeedupLayer && pLayer != m_pMap->m_pSwitchLayer && pLayer != m_pMap->m_pTuneLayer)
21:24 <+bridge> <Jupstar âœª> ```
21:24 <+bridge> <Jupstar âœª> evaluates to true
21:24 <+bridge> <Mr.Gh0s7> I am working on something that will probably use `CLayerGroup::Render()` should I merge those to for loops into one?
21:25 <+bridge> <Jupstar âœª> the for loops cant be merged
21:25 <+bridge> <Jupstar âœª> as chairn said, it purposely renders the physics layers after design layers
21:25 <+bridge> <Jupstar âœª> so they are always visisble in editor
21:26 <+bridge> <Mr.Gh0s7> ah so it's because of how `pLayer->Render()` works?
21:26 <+bridge> <Jupstar âœª> mh?
21:26 <+bridge> <Jupstar âœª> it's so they are rendered last
21:26 <+bridge> <Jupstar âœª> which makes them visible
21:26 <+bridge> <Mr.Gh0s7> yeah that's what I meant :pepeH:
21:26 <+bridge> <Jupstar âœª> even tho i still don't get this check ðŸ˜‚
21:27 <+bridge> <Jupstar âœª> if the player is no physic layer, and the layer is a physic layer, render
21:27 <+bridge> <Jupstar âœª> wtf
21:27 <+bridge> <Jupstar âœª> if the pLayer is no physic layer, and the layer is a physic layer, render
21:33 <+bridge> <Mr.Gh0s7> I think it checks for everything that's not in a "predefined" layer
21:38 <+bridge> <Jupstar âœª> sry my iq is too low for this code
21:39 <+bridge> <Jupstar âœª> so it basically makes a copy of all layers
21:39 <+bridge> <Jupstar âœª> and checks against the loadedd version?
21:39 <+bridge> <Jupstar âœª> then the question would be, why would this ever be false ðŸ˜‚
21:41 <+bridge> <Mr.Gh0s7> when the layer in question is GameLayer, FrontLayer etc
21:41 <+bridge> <Jupstar âœª> yeah, nvm editor code is weird xD
22:06 <+bridge> <Learath2> That condition almost makes me want to refactor it into a function
22:09 <+bridge> <Robyt3> I'm pretty sure such a function already exists
22:22 <+bridge> <Jupstar âœª> i miss ryozuki
22:22 <+bridge> <Jupstar âœª> where is the daily: with rust you could use this and that
22:52 <+bridge> <Chairn> no, because we have no choice but to use 2 loops to keep rendering order
22:53 <+bridge> <Chairn> another way could be to sort layers once and then iterate over sorted layers
23:17 <+bridge> <Jupstar âœª> !c https://www.phoronix.com/news/Google-Chrome-Maglev-Compiler
23:17 < chillerbot1> ChillerDragon
23:17 <+bridge> <Jupstar âœª> Firefox deadðŸ¥¹ðŸ¥¹
