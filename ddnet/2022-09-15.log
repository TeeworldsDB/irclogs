00:41 <+bridge> [ddnet] <KDaniel> Ah btw maybe my question in #mapping  is maybe a question for this channel ðŸ™‚
09:57 <+bridge> [ddnet] <Voxel> thanks you fokko thank you heinrich ðŸ¥¹
09:57 <+bridge> [ddnet] <Voxel> thank you fokko thank you heinrich ðŸ¥¹
10:01 <+bridge> [ddnet] <Voxel> next nightly's going to be so cool... not only do we get to have the readd function but the multicolored lasers thing
11:29 <+bridge> [ddnet] <deen> 16.4-rc1 with https://github.com/ddnet/ddnet/pull/5802 or without?
12:41 <+bridge> [ddnet] <n000b> I think it is without if i read it correctly
12:41 <+bridge> [ddnet] <n000b> @Voxel
13:58 <+bridge> [ddnet] <heinrich5991> https://blog.cloudflare.com/how-we-built-pingora-the-proxy-that-connects-cloudflare-to-the-internet/
14:00 <+bridge> [ddnet] <Chairn> @heinrich5991 i think you shouldn't change authorship when squashing commits
14:01 <+bridge> [ddnet] <heinrich5991> I didn't, I htink
14:03 <+bridge> [ddnet] <heinrich5991> ```
14:03 <+bridge> [ddnet] <heinrich5991> commit 5deeb299fa01ac10aad5d08416b002dbbda948d3
14:03 <+bridge> [ddnet] <heinrich5991> Author: fokkonaut <35420825+fokkonaut@users.noreply.github.com>
14:03 <+bridge> [ddnet] <heinrich5991> 
14:03 <+bridge> [ddnet] <heinrich5991>     Add DDNetLaser to have more info about a laser shot
14:03 <+bridge> [ddnet] <heinrich5991> 
14:03 <+bridge> [ddnet] <heinrich5991> commit 03b90f4f3dfefd8be96d0213ec311197d051aafc
14:03 <+bridge> [ddnet] <heinrich5991> Author: VoxelDoesCode <bluheadcat@gmail.com>
14:03 <+bridge> [ddnet] <heinrich5991> 
14:03 <+bridge> [ddnet] <heinrich5991>     Added new cl colors and tweaked the settings menu
14:03 <+bridge> [ddnet] <heinrich5991> 
14:03 <+bridge> [ddnet] <heinrich5991> commit 6907895ee5574ad501aa7b75b8474576349340f1
14:03 <+bridge> [ddnet] <heinrich5991> Author: heinrich5991 <heinrich5991@gmail.com>
14:03 <+bridge> [ddnet] <heinrich5991> 
14:03 <+bridge> [ddnet] <heinrich5991>     Add LASERTYPE enum
14:03 <+bridge> [ddnet] <heinrich5991> ```
14:04 <+bridge> [ddnet] <heinrich5991> ah, do you mean the first commit? I guess I could have attributed it to fokkonaut. I had to split the last commit into two, so that the other two commits compile on their own
14:04 <+bridge> [ddnet] <heinrich5991> (it's a very trivial commit though)
14:04 <+bridge> [ddnet] <heinrich5991> ```
14:04 <+bridge> [ddnet] <heinrich5991> commit 5deeb299fa01ac10aad5d08416b002dbbda948d3
14:04 <+bridge> [ddnet] <heinrich5991> Author: fokkonaut
14:04 <+bridge> [ddnet] <heinrich5991> 
14:04 <+bridge> [ddnet] <heinrich5991>     Add DDNetLaser to have more info about a laser shot
14:04 <+bridge> [ddnet] <heinrich5991> 
14:04 <+bridge> [ddnet] <heinrich5991> commit 03b90f4f3dfefd8be96d0213ec311197d051aafc
14:04 <+bridge> [ddnet] <heinrich5991> Author: VoxelDoesCode
14:04 <+bridge> [ddnet] <heinrich5991> 
14:04 <+bridge> [ddnet] <heinrich5991>     Added new cl colors and tweaked the settings menu
14:04 <+bridge> [ddnet] <heinrich5991> 
14:04 <+bridge> [ddnet] <heinrich5991> commit 6907895ee5574ad501aa7b75b8474576349340f1
14:04 <+bridge> [ddnet] <heinrich5991> Author: heinrich5991
14:04 <+bridge> [ddnet] <heinrich5991> 
14:04 <+bridge> [ddnet] <heinrich5991>     Add LASERTYPE enum
14:04 <+bridge> [ddnet] <heinrich5991> ```
14:08 <+bridge> [ddnet] <fokkonaut> :thonk:
14:11 <+bridge> [ddnet] <fokkonaut> @heinrich5991 did you review my commit about DDNetLaser tho? I think it should be fine, but I dont remember everything rn
14:25 <+bridge> [ddnet] <Chairn> yup i think it "belongs" to fokko or voxel. Im a little bit fussy about authorship because i've seen really unethical practice in my previous job
14:30 <+bridge> [ddnet] <fokkonaut> i want that authorshiÃ¼
14:30 <+bridge> [ddnet] <fokkonaut> p
14:31 <+bridge> [ddnet] <Ryozuki> German leaking
14:31 <+bridge> [ddnet] <fokkonaut> wat
14:31 <+bridge> [ddnet] <Ryozuki> ÃœÃ¼
14:31 <+bridge> [ddnet] <Ryozuki> Ã–
14:31 <+bridge> [ddnet] <fokkonaut> Ã¼
14:32 <+bridge> [ddnet] <deen> make a PR with a revert and then add it back yourself if you feel that strongly about it
14:33 <+bridge> [ddnet] <fokkonaut> https://cdn.discordapp.com/attachments/293493549758939136/1019949121043443832/unknown.png
14:33 <+bridge> [ddnet] <fokkonaut> well seems like its correct
14:36 <+bridge> [ddnet] <Chairn> i actually have no idea how git handles multiple authorships and how it knows who authored and who committed
14:41 <+bridge> [ddnet] <Ryozuki> Trailers
14:41 <+bridge> [ddnet] <Ryozuki> https://www.learnhowtoprogram.com/introduction-to-programming/git-html-and-css/commit-trailers-and-github-contributions
15:31 <+bridge> [ddnet] <ReiTW> Seriously cf's blogs are too good
15:33 <+bridge> [ddnet] <heinrich5991> I also like them. this one doesn't have too much technical stuff, unfortunately
15:33 <+bridge> [ddnet] <heinrich5991> but they say they want to open-source it "eventually"
15:44 <+bridge> [ddnet] <Chairn> https://www.reddit.com/r/ProgrammerHumor/comments/xeo5ab/junior_vs_senior/
16:38 <+bridge> [ddnet] <ReiTW> https://devblogs.microsoft.com/cppblog/dev-containers-for-c-in-visual-studio/
16:41 <+bridge> [ddnet] <Ryozuki> When you are used to your fast pc that using anothers not so good pc feels incredibly slow
16:41 <+bridge> [ddnet] <Ryozuki> <a:notlike02:701335073387053106>
16:42 <+bridge> [ddnet] <Ryozuki> Also eth merged or smth and no longer proof of work
16:42 <+bridge> [ddnet] <Ryozuki> Best time to buy a gpu is now
16:42 <+bridge> [ddnet] <Ryozuki> Probs
16:43 <+bridge> [ddnet] <Ryozuki> Rx 6700 xt at 480â‚¬
16:43 <+bridge> [ddnet] <Ryozuki> I bought my rx 6600 xt for 600
16:43 <+bridge> [ddnet] <Ryozuki> God dann
16:43 <+bridge> [ddnet] <Ryozuki> God damn
17:50 <+bridge> [ddnet] <chillerdragon> Wot? Did gpu prices dip? Invest in gpu now?!
18:38 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1020010722777894984/RDT_20220915_1838175801596503301444165.jpg
18:53 <+bridge> [ddnet] <Learath2> `dd if=/dev/zero of=/dev/sda bs=1M` go
18:58 <+bridge> [ddnet] <Mr.Gh0s7> lol
18:59 <+bridge> [ddnet] <Ravie Senpai> Yes, I recently bought the 24GB GIGABYTE GeForce RTX 3090 Ti
19:00 <+bridge> [ddnet] <Jupstar âœª> My PC doesn't work anymore now
19:01 <+bridge> [ddnet] <Mr.Gh0s7> Maybe he executed it on a vm on his pc idk xD
19:02 <+bridge> [ddnet] <Jupstar âœª> echo "c, c++ & java are all better than rust"
19:07 <+bridge> [ddnet] <Learath2> Do you know if I could somehow pass a held mutex to another function? specifically a std::lock_guard
19:08 <+bridge> [ddnet] <Learath2> Mh, maybe just commenting `// DONT CALL WITHOUT HOLDING m_Lock` is good enough ðŸ˜„
19:08 <+bridge> [ddnet] <deen> put the lock_guard in a unique_ptr?
19:08 <+bridge> [ddnet] <Learath2> and I can check it with TSan if we ever figure out how to get it to work with std::mutex
19:09 <+bridge> [ddnet] <deen> lock_guard locks the mutex on constructor and unlocks on destructor
19:10 <+bridge> [ddnet] <deen> at least that sounds reasonable to me to use a unique_ptr for that
19:11 <+bridge> [ddnet] <Jupstar âœª> is your goal to check if the mutex is locked inside the function?
19:11 <+bridge> [ddnet] <Learath2> Well the mutex must be held while you call the function, that's the constraint I want to enforce
19:12 <+bridge> [ddnet] <Learath2> Now that I think about it, passing a mutex doesn't work to begin with, no way to make sure it's the mutex I want locked
19:12 <+bridge> [ddnet] <Learath2> I think this is a job for TSan
19:12 <+bridge> [ddnet] <Jupstar âœª> or just try_lock
19:12 <+bridge> [ddnet] <Jupstar âœª> its either locked or you now lock it
19:13 <+bridge> [ddnet] <Learath2> but I don't think that tells me if I hold the lock. The main thread could be holding it aswell
19:14 <+bridge> [ddnet] <Jupstar âœª> so u want to pass a locked mutex from one thread to another?
19:15 <+bridge> [ddnet] <Learath2> No, that's very very undefined anyway ðŸ˜„
19:15 <+bridge> [ddnet] <Jupstar âœª> i mean if u do
19:15 <+bridge> [ddnet] <Jupstar âœª> 
19:15 <+bridge> [ddnet] <Jupstar âœª> lock
19:15 <+bridge> [ddnet] <Jupstar âœª> func()
19:15 <+bridge> [ddnet] <Jupstar âœª> 
19:15 <+bridge> [ddnet] <Jupstar âœª> or func(mutex& m)
19:15 <+bridge> [ddnet] <Jupstar âœª> m.lock()
19:15 <+bridge> [ddnet] <Learath2> I'm staying within the same thread
19:15 <+bridge> [ddnet] <Jupstar âœª> i mean if u do
19:15 <+bridge> [ddnet] <Jupstar âœª> 
19:15 <+bridge> [ddnet] <Jupstar âœª> lock
19:15 <+bridge> [ddnet] <Jupstar âœª> func()
19:15 <+bridge> [ddnet] <Jupstar âœª> 
19:15 <+bridge> [ddnet] <Jupstar âœª> or func(mutex& m)
19:15 <+bridge> [ddnet] <Jupstar âœª> m.try_lock()
19:16 <+bridge> [ddnet] <Jupstar âœª> or adapt_lock probs
19:16 <+bridge> [ddnet] <Jupstar âœª> tbh just add an assert
19:16 <+bridge> [ddnet] <Jupstar âœª> and call it a day xd
19:16 <+bridge> [ddnet] <Jupstar âœª> while(try_lock) probs sucks xD
19:16 <+bridge> [ddnet] <Jupstar âœª> if(!has_lock)
19:16 <+bridge> [ddnet] <Jupstar âœª> lock
19:17 <+bridge> [ddnet] <Jupstar âœª> i think unique_lock has a check if its locked
19:17 <+bridge> [ddnet] <Learath2> > If try_lock is called by a thread that already owns the mutex, the behavior is undefined.
19:17 <+bridge> [ddnet] <Jupstar âœª> "operator bool
19:17 <+bridge> [ddnet] <Jupstar âœª>  
19:17 <+bridge> [ddnet] <Jupstar âœª> tests whether the lock owns (i.e., has locked) its associated mutex
19:17 <+bridge> [ddnet] <Jupstar âœª> (public member function)"
19:17 <+bridge> [ddnet] <Learath2> So that's a no-go anyway
19:18 <+bridge> [ddnet] <Jupstar âœª> yeah i was just confused by ur other thread statement
19:18 <+bridge> [ddnet] <Jupstar âœª> which is already UB
19:18 <+bridge> [ddnet] <Learath2> A `recursive_mutex` actually handles it quite well, but I think I'll just add a comment for now and check it with TSan later
19:19 <+bridge> [ddnet] <Learath2> Just wanted to ask to see if there is a common pattern when calling functions making sure a lock is held
19:21 <+bridge> [ddnet] <Jupstar âœª> show me the code
19:21 <+bridge> [ddnet] <Jupstar âœª> maybe u are doing it too complicated
19:24 <+bridge> [ddnet] <Learath2> You'll see it when I push, fwiw I already coded it in a way that it's never called without the mutex being held, just want to make it safer in case I want to modify it later
19:25 <+bridge> [ddnet] <Jupstar âœª> well one way is
19:25 <+bridge> [ddnet] <Jupstar âœª> build a wrapper around the object u protect and take the object as reference in the function
19:25 <+bridge> [ddnet] <Jupstar âœª> 
19:25 <+bridge> [ddnet] <Jupstar âœª> auto& obj = wrapper.lock();
19:25 <+bridge> [ddnet] <Jupstar âœª> func(obj)
19:25 <+bridge> [ddnet] <Jupstar âœª> wrapper.unlock()
19:31 <+bridge> [ddnet] <deen> that's literally what TSA solves (not TSan)
19:31 <+bridge> [ddnet] <Jupstar âœª> did clang15 release already for arch?
19:31 <+bridge> [ddnet] <Jupstar âœª> i still get warnings
19:31 <+bridge> [ddnet] <Jupstar âœª> bcs of it xd
19:31 <+bridge> [ddnet] <deen> no
19:31 <+bridge> [ddnet] <Learath2> Oh yeah, it's not a sanitizer is it. It's an "Analyzer" ðŸ˜„
19:32 <+bridge> [ddnet] <Jupstar âœª> debian experimental already has clang15
19:32 <+bridge> [ddnet] <Jupstar âœª> ez
19:33 <+bridge> [ddnet] <Jupstar âœª> faster than arch xd
19:49 <+bridge> [ddnet] <Ryozuki> rust mutex holding the data in it is such a smart move
19:49 <+bridge> [ddnet] <Ryozuki> c++ does it wrong
19:49 <+bridge> [ddnet] <Ryozuki> :BASED:
19:49 <+bridge> [ddnet] <Ryozuki> why is there no std::mutex<T>
19:50 <+ChillerDragon> @k2d222 du bist ein kÃ¤se
19:51 <+ChillerDragon> your CV says you are fluent in english and yet your website is full baguette xd
19:51 <+ChillerDragon> oh wait there is /en
19:51 <+ChillerDragon> its just not default
19:52 <+bridge> [ddnet] <k2d222> lol
19:52 <+ChillerDragon> i totally didnt stalk you
19:52 <+bridge> [ddnet] <k2d222> oui oui baguette
19:52 <+ChillerDragon> :D
19:53 <+bridge> [ddnet] <k2d222> ðŸ‘€ ðŸ‘€
19:53 <+bridge> [ddnet] <k2d222> https://cdn.discordapp.com/attachments/293493549758939136/1020029597871513620/unknown.png
19:53 <+bridge> [ddnet] <k2d222> wth is this ðŸ¤£
19:54 <+bridge> [ddnet] <Voxel> ðŸ’š
19:55 <+bridge> [ddnet] <Chairn> `sudo rm -rf / --no-preserve-root`
19:55 <+ChillerDragon> aw shit u stalked me back
19:55 <+ChillerDragon> i actually did not use a tool for that
19:56 <+ChillerDragon> but daily commitment and commit timing :D
19:56 <+bridge> [ddnet] <k2d222> WAT
19:56 <+ChillerDragon> ikr
19:56 <+ChillerDragon> im pationate
19:56 <+bridge> [ddnet] <k2d222> that is 63 days worth of commitment
19:56 <+bridge> [ddnet] <k2d222> worth it
19:56 <+ChillerDragon> yes!
19:57 <+ChillerDragon> i think at some point i was in france camping
19:57 <+ChillerDragon> and pooped some commits from my phone
19:58 <+ChillerDragon> tbh the 3 rows of no commits were the hardest part
19:58 <+ChillerDragon> i think i faked that a bit
19:58 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1020030888282705960/unknown.png
19:58 <+bridge> [ddnet] <Ryozuki> :BASED:
19:58 <+ChillerDragon> and set a date outside of that range if i really had to commit something
19:59 <+ChillerDragon> yo @k2d222 go maintain ur mc clone i wanna get rid of microsoft crap
19:59 <+ChillerDragon> and sadly minetest is so cursed :(  i dont like it
19:59 <+bridge> [ddnet] <k2d222> ah yeah true, I didn't notice the 6*7 rows of nothingness as well
19:59 <+bridge> [ddnet] <k2d222> haha working on it like right now
19:59 <+ChillerDragon> good!
19:59 <+bridge> [ddnet] <k2d222> https://moncraft.thissma.fr/ come and play
19:59 <+ChillerDragon> i thought its closed
20:00 <+bridge> [ddnet] <k2d222> (itf it works)
20:00 <+ChillerDragon> virus
20:00 <+ChillerDragon> is it web only?
20:00 <+ChillerDragon> BAGUETTE
20:00 <+bridge> [ddnet] <k2d222> no, c++ -> wasm compiled
20:00 <+ChillerDragon> no chat?
20:00 <+bridge> [ddnet] <k2d222> no
20:00 <+ChillerDragon> no scoreboard?
20:00 <+ChillerDragon> but multiplayer!
20:00 <+ChillerDragon> thats good stuff
20:00 <+bridge> [ddnet] <k2d222> it was for the introductory course to opengl, initially
20:01 <+ChillerDragon> i can move right but not left xd
20:01 <+ChillerDragon> probably fromage keyboard layout only xd
20:01 <+bridge> [ddnet] <k2d222> french layout ðŸ¥–
20:01 <+ChillerDragon> does french not have WASD ?
20:01 <+ChillerDragon> i got W SD
20:01 <+bridge> [ddnet] <k2d222> esc->paramÃ¨tres->controles
20:01 <+ChillerDragon> but no a
20:01 <+ChillerDragon> PARAMETERES
20:02 <+ChillerDragon> gauche?
20:02 <+bridge> [ddnet] <k2d222> gauche=left
20:02 <+ChillerDragon> i totally knew that
20:02 <+ChillerDragon> WHY IS IT ON Q!?
20:02 <+ChillerDragon> boi its too much french
20:02 <+bridge> [ddnet] <k2d222> french have the azerty layout
20:02 <+ChillerDragon> u gotta go a bit more international
20:03 <+ChillerDragon> but cool stuff!
20:03 <+ChillerDragon> its funny 
20:03 <+ChillerDragon> because ive stumbled on that project a few days ago
20:03 <+ChillerDragon> and didnt notice you were invoved
20:03 <+bridge> [ddnet] <k2d222> thx, the goal is to mess around with the techs for me and my mate, really not to make a full blown game ðŸ™‚
20:03 <+ChillerDragon> i even watched a bit of the french presentation xd https://www.youtube.com/watch?v=muUEtjMYQMY
20:04 <+ChillerDragon> and thought its a abandoned finished school project
20:04 <+ChillerDragon> full of french
20:04 <+bridge> [ddnet] <Jupstar âœª> linguists: abcdefg...
20:04 <+bridge> [ddnet] <Jupstar âœª> pros: qwert....
20:04 <+bridge> [ddnet] <k2d222> HAHA
20:04 <+bridge> [ddnet] <k2d222> a guy from my school
20:04 <+ChillerDragon> go make game
20:04 <+bridge> [ddnet] <k2d222> I hate this guy
20:04 <+ChillerDragon> shade
20:05 <+ChillerDragon> https://avatars.githubusercontent.com/u/46031994?v=4
20:05 <+ChillerDragon> this guy?
20:05 <+bridge> [ddnet] <k2d222> how the f did you find the vid?
20:05 <+ChillerDragon> its in the readme
20:05 <+bridge> [ddnet] <k2d222> oof
20:05 <+ChillerDragon> i clicked on it
20:05 <+ChillerDragon> when i was broswing github the other day
20:05 <+ChillerDragon> its soooo funny its yourproject
20:06 <+bridge> [ddnet] <k2d222> smart
20:06 <+ChillerDragon> i just noticed today when i was stalking u
20:06 <+bridge> [ddnet] <Ryozuki> chiller how is your fulltime github influencer job going
20:06 <+ChillerDragon> good good
20:06 <+ChillerDragon> its obv a meme
20:06 <+ChillerDragon> im not getting paid ever
20:07 <+ChillerDragon> and also not writing any good code
20:07 <+bridge> [ddnet] <Ryozuki> i somehow got 2 sponsors on github
20:07 <+ChillerDragon> but i do spend a shitton of time there
20:07 <+ChillerDragon> i know
20:07 <+ChillerDragon> because i pay close attention to my github feed
20:07 <+ChillerDragon> and i flw u
20:07 <+bridge> [ddnet] <Ryozuki> :greenthing:
20:07 <+bridge> [ddnet] <Ryozuki> oh
20:07 <+bridge> [ddnet] <Ryozuki> do sponsors show there
20:07 <+ChillerDragon> no but who u follow
20:07 <+ChillerDragon> and u follow ur sponsors
20:07 <+ChillerDragon> i stalk every follows profile in my feed
20:07 <+ChillerDragon> xd
20:07 <+bridge> [ddnet] <Ryozuki> i think my sponsor works at uber
20:07 <+bridge> [ddnet] <Ryozuki> and is a weeb
20:08 <+bridge> [ddnet] <Ryozuki> made this https://miki.bot/
20:08 <+ChillerDragon> thats how i started stalking @k2d222 today cuz he did a follow
20:08 <+ChillerDragon> looks very weeb
20:08 <+ChillerDragon> UwU
20:08 <+ChillerDragon> yo @Ryozuki btw i also check out most of the repos you star :D
20:09 <+ChillerDragon> my github feed tab is open about 8hours a day minimum xd
20:09 <+bridge> [ddnet] <Ryozuki> nice
20:09 <+bridge> [ddnet] <Ryozuki> i only star high quality stuff
20:09 <+ChillerDragon> ye
20:09 <+bridge> [ddnet] <Ryozuki> :BASED:
20:10 <+bridge> [ddnet] <Ryozuki> i gotta try this https://github.com/FiloSottile/age
20:10 <+bridge> [ddnet] <Ryozuki> a modern gpg replacement
20:11 <+bridge> [ddnet] <Ryozuki> oh wait
20:11 <+bridge> [ddnet] <Ryozuki> nevermind this
20:11 <+bridge> [ddnet] <Ryozuki> there is a rust implementation
20:11 <+bridge> [ddnet] <Ryozuki> its obviously superior then
20:11 <+bridge> [ddnet] <Ryozuki> https://github.com/str4d/rage
20:11 <+bridge> [ddnet] <k2d222> yea just your regular cpp err msg :poggers:
20:11 <+bridge> [ddnet] <k2d222> https://cdn.discordapp.com/attachments/293493549758939136/1020034251682492517/unknown.png
20:12 <+bridge> [ddnet] <Ryozuki> typical c++ smh
20:12 <+bridge> [ddnet] <k2d222> 3 pages of that btw
20:14 <+bridge> [ddnet] <Ryozuki> index out of bounds
20:14 <+bridge> [ddnet] <Ryozuki> well its probs u are doing smth with wasm
20:14 <+ChillerDragon> yikers 
20:14 <+bridge> [ddnet] <Ryozuki> and unlike rust it doesnt have first class wasm support :BASED:
20:15 <+ChillerDragon> i like gpg tho -.-
20:15 <+bridge> [ddnet] <Ryozuki> https://rustwasm.github.io/docs/book/
20:16 <+ChillerDragon> i love that github has a "for you" page now
20:16 <+ChillerDragon> its literally tiktok
20:16 <+bridge> [ddnet] <Ryozuki> since long
20:16 <+ChillerDragon> ye ik
20:16 <+bridge> [ddnet] <Ryozuki> well i have the beta thing
20:16 <+ChillerDragon> its long af in beta
20:17 <+ChillerDragon> did u ever check out https://github.com/explore ?
20:17 <+bridge> [ddnet] <Ryozuki> yes
20:17 <+bridge> [ddnet] <Ryozuki> but they are removing
20:17 <+bridge> [ddnet] <Ryozuki> trending
20:17 <+bridge> [ddnet] <Ryozuki> the most useful in there
20:17 <+ChillerDragon> ou didnt know
20:17 <+ChillerDragon> that sad
20:17 <+bridge> [ddnet] <Ryozuki> it was discussed on hn
20:17 <+bridge> [ddnet] <Ryozuki> iirc its cuz they cant market that with ads
20:17 <+bridge> [ddnet] <Ryozuki> iirc
20:18 <+bridge> [ddnet] <Ryozuki> https://news.ycombinator.com/item?id=32681319
20:18 <+ChillerDragon> @fluffysnaff u here?
20:18 <+ChillerDragon> can i ping matrix?
20:18 <+bridge> [ddnet] <Ryozuki> u pinged ye
20:19 <+ChillerDragon> xd
20:19 <+ChillerDragon> that makes sense
20:19 <+bridge> [ddnet] <chillerdragon> xxxxxxxxxxxxD
20:19 <+bridge> [ddnet] <chillerdragon> @fluffysnaff\: lmao i found your teeworlds bot libary
20:19 <+bridge> [ddnet] <Ryozuki> lmao
20:20 <+ChillerDragon> here https://github.com/topics/ddnet
20:20 <+bridge> [ddnet] <Ryozuki> > Free and open-source library for DDNet bots
20:20 <+bridge> [ddnet] <Ryozuki> kek
20:20 <+ChillerDragon> 10 stars
20:20 <+ChillerDragon> gotta have some users
20:21 <+ChillerDragon> more stars than my client -.-
20:21 <+bridge> [ddnet] <Ryozuki> found
20:21 <+bridge> [ddnet] <Ryozuki> another bot
20:21 <+bridge> [ddnet] <Ryozuki> https://github.com/topics/ddracenetwork
20:21 <+bridge> [ddnet] <Ryozuki> in this topic
20:21 <+bridge> [ddnet] <Ryozuki> xd
20:21 <+ChillerDragon> sus
20:21 <+bridge> [ddnet] <Ryozuki> oih
20:21 <+bridge> [ddnet] <Ryozuki> its a chat bot
20:21 <+ChillerDragon> this teestatus guy is rly sus
20:21 <+bridge> [ddnet] <Ryozuki> yeah
20:22 <+bridge> [ddnet] <Ryozuki> actually
20:22 <+bridge> [ddnet] <Ryozuki> gotta add the ddnet tag
20:22 <+bridge> [ddnet] <Ryozuki> to my other r epos
20:22 <+ChillerDragon> ye its good marketing
20:22 <+ChillerDragon> i obv do good tagging
20:22 <+ChillerDragon> because im fulltime
20:22 <+ChillerDragon> INFLUENCER
20:22 <+ChillerDragon> also do not forget to ask for a star in the readme 
20:22 <+ChillerDragon> xd
20:23 <+bridge> [ddnet] <Ryozuki> now
20:23 <+bridge> [ddnet] <Ryozuki> the ddnet topic increased in size by 4
20:23 <+ChillerDragon> pog
20:25 <+bridge> [ddnet] <Ryozuki> big news
20:25 <+bridge> [ddnet] <Ryozuki> https://www.zdnet.com/article/linus-torvalds-rust-may-make-it-into-the-next-linux-kernel-after-all/
20:26 <+bridge> [ddnet] <Ryozuki> @Learath2 :feelsamazingman:
20:27 <+bridge> [ddnet] <Ryozuki> also linus is using daily driving linux on a m2 mac
20:27 <+bridge> [ddnet] <Ryozuki> kinda interesting
20:28 <+bridge> [ddnet] <Ryozuki> also linus is daily driving linux on a m2 mac
20:29 <+bridge> [ddnet] <Ryozuki> can you make a function in c++ that fails at compile time if called more than 3 times?
20:29 <+bridge> [ddnet] <Ryozuki> <https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=45f165c0c0f6146cf3c7a1e0743f635e>
20:30 <+bridge> [ddnet] <Learath2> Does anyone know a trick to see what data is on a fd without reading it? Just for debugging
20:31 <+bridge> [ddnet] <Chairn> what's the use case for this?
20:31 <+bridge> [ddnet] <Ryozuki> the author made it for fun but
20:31 <+bridge> [ddnet] <Ryozuki> maybe a resource meant to be used N times
20:31 <+bridge> [ddnet] <Ryozuki> https://www.reddit.com/r/rust/comments/xelzrv/function_that_can_only_be_called_a_set_number_of/
20:32 <+bridge> [ddnet] <Ryozuki> > level 1
20:32 <+bridge> [ddnet] <Ryozuki> > WormRabbit
20:32 <+bridge> [ddnet] <Ryozuki> > Â·
20:32 <+bridge> [ddnet] <Ryozuki> > 7 hr. ago
20:32 <+bridge> [ddnet] <Ryozuki> > 
20:32 <+bridge> [ddnet] <Ryozuki> > It's not useless. It allows you to express that the function consumes some finite resource. For example, if you are trying to collect its return values into an array of length N, then it would be desirable that the function can be called exactly N times. But I'm not sure that Rust is flexible enough to build interfaces on those concepts.
20:32 <+bridge> [ddnet] <Learath2> Maybe limiting recursion depth at compile time? Not sure if it's a good idea as it'd cause a lot of code generation
20:32 <+bridge> [ddnet] <Learath2> Ok, this bizarre self connected socket I created has the oddest behaviour
20:34 <+bridge> [ddnet] <Ryozuki> idk if u can check data without reading
20:34 <+bridge> [ddnet] <Learath2> It just wakes up poll immediately
20:35 <+bridge> [ddnet] <Learath2> doesn't matter whether I put anything on it or not
20:35 <+bridge> [ddnet] <Learath2> It just always has events somehow
20:35 <+bridge> [ddnet] <Ryozuki> maybe it has to do with it being self connected?
20:35 <+bridge> [ddnet] <Ryozuki> idk
20:35 <+bridge> [ddnet] <Ryozuki> https://doc.rust-lang.org/std/ops/trait.FnOnce.html
21:02 <+bridge> [ddnet] <Learath2> libcurl documentation can really use some love :/
21:02 <+bridge> [ddnet] <Learath2> They don't say anything about having to do `curl_multi_perform` if `curl_multi_wait` returns 0 events. However all your transfers will get stuck if you don't
21:04 <+bridge> [ddnet] <ReiTW> Dunno if that's rly possible
21:05 <+bridge> [ddnet] <ReiTW> What about mmap it
21:05 <+bridge> [ddnet] <ReiTW> Idk
21:05 <+bridge> [ddnet] <Learath2> Well it might be possible with an stap. I'll investigate it later, found a better way to debug it for this time
21:05 <+bridge> [ddnet] <ReiTW> A stap?
21:06 <+bridge> [ddnet] <Learath2> SystemTap, let's you directly instrument syscalls
21:06 <+bridge> [ddnet] <Learath2> lets*
21:07 <+bridge> [ddnet] <Learath2> Not really it's intended use, but I've done some very weird inspection with it before. It has a lot of use because you basically can inject code into the kernel
21:09 <+bridge> [ddnet] <Learath2> There is also MSG_PEEK for recv, I just used that in the code instead of debugging
21:09 <+bridge> [ddnet] <Learath2> I guess I could have called MSG_PEEK in gdb, but didn't really feel like malloc'ing in gdb
21:44 <+bridge> [ddnet] <Learath2> Almost done with this PR, just need to make something like `std::latch` and I'm done
22:54 <+bridge> [ddnet] <Learath2> Hm, I really want to use afutex, but it's a bad idea to use a futex in application code
22:54 <+bridge> [ddnet] <Learath2> without a futex I need an extra mutex and a condition variable on each engine job :/
22:55 <+bridge> [ddnet] <Chairn> what ar eyou trying to do?
22:55 <+bridge> [ddnet] <Chairn> sounds like an xy problem
22:56 <+bridge> [ddnet] <deen> read the characters, then put them back?
22:56 <+bridge> [ddnet] <Learath2> It doesn't sound anything like an xy problem to me, but sure. I have a State variable, I need to react on it changing
22:57 <+bridge> [ddnet] <Learath2> It's literally what futexes are for
22:57 <+bridge> [ddnet] <Learath2> The other option is a mutex and a condition variable around State
22:58 <+bridge> [ddnet] <Learath2> I didn't have access to the other half of the pipe at that part of the code
23:00 <+bridge> [ddnet] <Chairn> use gdb and set a watcher on that variable :troll:
23:01 <+bridge> [ddnet] <Chairn> encapsulate the variable in a class with getters and setters so that you can have a callback for each and every access?
23:02 <+bridge> [ddnet] <Chairn> just like signals and slots in Qt
23:02 <+bridge> [ddnet] <Learath2> Doesn't avoid the mutex or the condition variable. It's how I used them anyway
23:05 <+bridge> [ddnet] <Chairn> i think i don't understand your problem then ðŸ˜¦
23:07 <+bridge> [ddnet] <Learath2> Engine takes jobs, they are ran asynchronously, they have a field `m_Status`, some processes want to wait until `m_Status == DONE`
23:20 <+bridge> [ddnet] <Chairn> but what's the problem with mutex ?
23:25 <+bridge> [ddnet] <Learath2> I'm not a big enjoyer of overhead if you haven't noticed that about me
23:26 <+bridge> [ddnet] <Learath2> So much extra data, getters/setters, calls, for each request, for a feature available in any modern kernel
23:26 <+bridge> [ddnet] <Chairn> nothing is free
23:26 <+bridge> [ddnet] <Chairn> + that overhead is negligible for something that i believe happens rarely
23:27 <+bridge> [ddnet] <Chairn> i understand the need for beautiful or elegant code
23:27 <+bridge> [ddnet] <Learath2> Well what annoys me there is that it is much cheaper than the price I have to pay. Futexes are a thing on linux and WaitOnAddress is a thing in NT. It's just that I don't have access to them
23:27 <+bridge> [ddnet] <Chairn> but you should also be pragmatic when it gets too cumbersome
23:28 <+bridge> [ddnet] <Learath2> Can't wait for C++20 to be common enough, `std::atomic::wait` is implemented with nice primitives on all the implementations I've seen
23:29 <+bridge> [ddnet] <Chairn> final solution is x86-64 asm with hardware locks and test and set functions
23:30 <+bridge> [ddnet] <Learath2> Well I have access to test and set through standard c++, no need to dig out assembly ðŸ˜„
23:30 <+bridge> [ddnet] <Chairn> good luck with that though ðŸ˜„
23:31 <+bridge> [ddnet] <Learath2> I'll just make it much less generic so only a subset of waitable jobs have to pay the price
