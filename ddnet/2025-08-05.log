00:29 < bridge> <headshotnoby> http://github.com/headshot2017/ddnet-nds
09:44 < bridge> <ryozuki> ```
09:44 < bridge> <ryozuki> Entering user space
09:44 < bridge> <ryozuki> Program in 0x400000
09:44 < bridge> <ryozuki> User code selector: 0x23
09:44 < bridge> <ryozuki> User data selector: 0x1b
09:44 < bridge> <ryozuki> Entering program
09:44 < bridge> <ryozuki> syscall 1 rdi=0x1 rsi=0x400024 rdx=0x1c r10=0x2 r8=0x2 r9=0x2
09:44 < bridge> <ryozuki> sys_write called: fd=1, buf_ptr=0x400024, count=28
09:44 < bridge> <ryozuki> Hello from x86_64 assembly!
09:44 < bridge> <ryozuki> syscall 60 rdi=0x0 rsi=0x3fd rdx=0x3f8 r10=0xffffffff80009e70 r8=0x4 r9=0x7b616d7f767f367f
09:44 < bridge> <ryozuki> User called exit with status: 0
09:44 < bridge> <ryozuki> ```
09:44 < bridge> <ryozuki> pog
10:18 < bridge> <heckerisprolegit4250> Hello, developers i want to create a community on the browser server. how do i do this?
10:20 < bridge> <heckerisprolegit4250> For some reason I don't have my logo on my server. I want to create one. Can you tell me how?
10:25 < bridge> <Assa> what the hack is a browser server?
10:25 < bridge> <Assa> what the heck is a browser server?
10:26 < bridge> <heckerisprolegit4250> that's like community
10:26 < bridge> <Assa> AFAIK there are some rules in order to become a community. Not every single server can become one, I believe you need at least 6 servers which are almost all time available, but my memory might be wrong
10:27 < bridge> <heckerisprolegit4250> oh
10:27 < bridge> <heckerisprolegit4250> i have some server 70
10:27 < bridge> <Assa> Please create a ticket, you might have to bargain with deen
10:27 < bridge> <heckerisprolegit4250> okay
10:30 < bridge> <Assa> D: At least I can't find 70 servers (are they named 'browser' or with some chinese/asian (sorry :justatest: ) symbols)?
10:31 < bridge> <heckerisprolegit4250> they're false in time
10:31 < bridge> <heckerisprolegit4250> they're trun off in time
10:31 < bridge> <Assa> you mean currently turned off ig
11:13 < bridge> <ryozuki> looks like  i need to implement context switching now
11:54 < ws-client> **<ChillerDragon>** hi developas
11:54 < ws-client> **<ChillerDragon>** anyone here good at html programming?
11:54 < ws-client> **<ChillerDragon>** https://github.com/user-attachments/assets/a0841380-8dad-4eed-890f-f70d556026a0
11:54 < ws-client> **<ChillerDragon>** what is wrong with my closing p tag?
11:55 < bridge> <kebscs> 404
11:56 < ws-client> **<ChillerDragon>** ono did github patch it?
11:56 < ws-client> **<ChillerDragon>** https://github-production-user-asset-6210df.s3.amazonaws.com/20344300/474439249-a0841380-8dad-4eed-890f-f70d556026a0.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAVCODYLSA53PQK4ZA%2F20250805%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20250805T095605Z&X-Amz-Expires=300&X-Amz-Signature=ecbd383caec28d0ca2a4f8675ab3acfe3cf29a135457a3cdb87fcd65cfc38c39&X-Amz-SignedHeaders=host
11:59 < bridge> <kollpotato> pre shouldn't be in a paragraph
12:00 < ws-client> **<ChillerDragon>** says who?
12:00 < ws-client> **<ChillerDragon>** the html commitee or wat
12:00 < bridge> <kollpotato> yes
12:00 < ws-client> **<ChillerDragon>** watfak
12:00 < bridge> <kollpotato> pre is a block element
12:00 < ws-client> **<ChillerDragon>** send link
12:01 < bridge> <kollpotato> https://webmasters.stackexchange.com/a/18153
12:01 < ws-client> **<ChillerDragon>** SO also good thanks. I was hoping spec but lemme read
12:02 < ws-client> **<ChillerDragon>** html is so hard wtf
12:02 < ws-client> **<ChillerDragon>** when we coded a html side in school 30 years ago it seemed so easy
12:02 < ws-client> **<ChillerDragon>** side?????
12:13 < bridge> <milkeeycat> chillerdragon: https://html.spec.whatwg.org/multipage/grouping-content.html#the-p-element
12:13 < ws-client> **<ChillerDragon>** thanks
12:14 < bridge> <milkeeycat> here treesitter defines the tags https://github.com/tree-sitter/tree-sitter-html/blob/3af1bfd3a7e843c502e66025ca8ff2ae75cabf7f/src/tag.h#L284-L289
12:14 < ws-client> **<ChillerDragon>** thats epic thanks @milkeeycat !
12:27 < bridge> <ryozuki> "I'm not afraid of AI that passes the Turing test. I'm afraid of one that fails on purpose."
12:27 < bridge> <ryozuki> :justatest:
12:35 < ws-client> **<ChillerDragon>** <:justatest:572499997178986510>
14:26 < bridge> <cellegenrih> I guess this works good enough.
14:26 < bridge> <cellegenrih> Essentially if we are trying to get the remainder of the fully incremented value and the value from the lookup table, but the remainder equals to the incremented value (itself), then it can be assumed that we reached over the increment amount, so we can return x
14:26 < bridge> <cellegenrih> https://cdn.discordapp.com/attachments/293493549758939136/1402266452450607125/image.png?ex=689349e7&is=6891f867&hm=14f810466a09ffb7b1fc989375f7e71e601bcb8ec25ec336b8435e11a2a840eb&
14:27 < bridge> <cellegenrih> value 5 [equals to the amount of increments x has as an example] will return the same way as if it was overshot
14:27 < bridge> <cellegenrih> https://cdn.discordapp.com/attachments/293493549758939136/1402266813701685378/image.png?ex=68934a3d&is=6891f8bd&hm=06d2ea371b4226c118b4a401e13d573b4391b960c60a15b9654f5b076579e838&
14:28 < bridge> <melon> wouldnt you want != Math::increment(x) ?
14:28 < bridge> <melon> 
14:28 < bridge> <melon> that way you detect when the value is actually larger than what can be handled
14:28 < bridge> <melon> wouldnt you want `!= Math::increment(x)` ?
14:28 < bridge> <melon> 
14:28 < bridge> <melon> that way you detect when the value is actually larger than what can be handled
14:29 < bridge> <cellegenrih> No, since this way, whether we have the exact increment amount requested, or whenever we overshoot it, it will return the right value faster
14:29 < bridge> <melon> ah i see
14:29 < bridge> <cellegenrih> this if condition is a lot better, than just let it calculate on an increment of 5, while also requesting 5 increments
14:30 < bridge> <cellegenrih> basically asking for the same increments
14:30 < bridge> <melon> i wonder if you could just do `Math::ROUND_UP_LIST.len() <= amount` xd
14:31 < bridge> <cellegenrih> I mean I could, but I don't think any math function needs 10 to the power of 10 or above
14:31 < bridge> <melon> so you dont limit it to a set increment
14:31 < bridge> <melon> fair
14:31 < bridge> <cellegenrih> also who the hell would increment a float value up to 10 increments? I'm just giving options
14:31 < bridge> <melon> xd
14:32 < bridge> <cellegenrih> the max I should do it like 6, that one seems reasonable, but oh well 10 it is
14:39 < bridge> <Assa> huh, is `(int)(-1.8f)` is a `-1` right? :justatest:
15:38 < ChillerDragon> how do you rate my marketing idea to rebrand printers to "2D printer"?
15:43 < bridge> <kebscs> 2d nowadays = bad
15:43 < bridge> <kebscs> more D = good
15:51 < bridge> <h1dr4x> some servers use Score instead of Time on tab how can i make like that too?
15:57 < bridge> <kebscs> GAMEINFOFLAG_TIMESCORE
16:04 < bridge> <kebscs> https://github.com/ddnet/ddnet/issues/9845
16:04 < bridge> <kebscs> bump
16:12 < bridge> <lol1333_909> 2025-08-05 17:02:41 I chat/whisper: ← Ctgtg: bro, check out this client: ***cli� �ent.xyｚ nice
16:13 < bridge> <lol1333_909> 3 player krx wow
16:13 < bridge> <lol1333_909> кто из модеров рус?
16:22 < ws-client> **<ChillerDragon>** @avolicious GER3 has some lag spikes today
16:22 < ws-client> **<ChillerDragon>** @lol1333_909 which server?
16:25 < bridge> <lol1333_909> Ctgtg leave
16:25 < ws-client> **<ChillerDragon>** yes  but which server were you playing on @lol1333_909 
16:33 < bridge> <cellegenrih> no, because it would be rounding upwards, not downwards
16:33 < bridge> <cellegenrih> so it's -2
16:57 < bridge> <Assa> I just use floor now
16:58 < bridge> <Assa> I just found an editor crash bug, if you manage to delete and then move an envelope int he same frame
16:58 < bridge> <Assa> I just found an editor crash bug, if you manage to delete and then move an envelope in the same frame
17:04 < bridge> <Assa> ```bash
17:04 < bridge> <Assa> Run clang-format -version
17:04 < bridge> <Assa> clang-format version 10.0.1 
17:04 < bridge> <Assa> src/game/editor/references.cpp: error: missing newline at EOF
17:04 < bridge> <Assa> Error: Process completed with exit code 1.
17:04 < bridge> <Assa> ```
17:04 < bridge> <Assa> 
17:04 < bridge> <Assa> beatiful
17:16 < bridge> <Assa> cool, mingw test failed due to invalid nanoseconds. I guess this was not on me
18:08 < bridge> <robyt3> ```
18:08 < bridge> <robyt3> [ RUN      ] Time.Nanoseconds
18:08 < bridge> <robyt3> D:/a/ddnet/ddnet/src/test/time.cpp:28: Failure
18:08 < bridge> <robyt3> Expected: (Time1) < (Time2), actual: 25134700ns vs 25134700ns
18:08 < bridge> <robyt3> ```
18:08 < bridge> <robyt3> ```cpp
18:08 < bridge> <robyt3> TEST(Time, Nanoseconds)
18:09 < bridge> <robyt3> {
18:09 < bridge> <robyt3>     const std::chrono::nanoseconds Time1 = time_get_nanoseconds();
18:09 < bridge> <robyt3>     std::this_thread::sleep_for(std::chrono::microseconds(1));
18:09 < bridge> <robyt3>     const std::chrono::nanoseconds Time2 = time_get_nanoseconds();
18:09 < bridge> <robyt3>     EXPECT_LT(Time1, Time2);
18:09 < bridge> <robyt3> }
18:09 < bridge> <robyt3> ```
18:09 < bridge> <robyt3> Can the performance counter really be so imprecise that it doesn't update the nanoseconds after sleeping for 1 µs?
18:21 < bridge> <Jupstar ✪> Yes
18:22 < bridge> <Jupstar ✪> CPUs generally cannot really meassure in nanoseconds (they approximate)
18:22 < bridge> <Jupstar ✪> And ofc also microseconds
18:22 < bridge> <Jupstar ✪> Additionally this is inside a VM ig
18:31 < bridge> <Assa> it's really sus, that Time1 and Time2 are rounded by 2 digits here, this screams imprecision
18:56 < bridge> <inv41idu53rn4m3> Microseconds are doable but expensive and not doable using normal clock functions
18:56 < bridge> <inv41idu53rn4m3> (literally count cycles om)
18:58 < bridge> <inv41idu53rn4m3> and even then not fully reliable when the frequency changes...
19:13 < bridge> <Solly (bun bun)> @chillerdragon its 2.5d because it prints ontop of the paper
19:14 < bridge> <Solly (bun bun)> make a report, we can ban even if they leave up to an amount of time
19:14 < bridge> <Solly (bun bun)> #✉-create-a-ticket
19:23 < bridge> <Solly (bun bun)> o does rcon not know about dummies
19:28 < bridge> <Assa> As I wrote on github, what's the purpose of this test? For me this looks really useless only testing std:: logic
19:30 < bridge> <Assa> nevermind it does test some time logic
19:32 < bridge> <robyt3> Also gives function coverage at least for the unit test
19:32 < bridge> <robyt3> https://app.codecov.io/gh/ddnet/ddnet
19:35 < bridge> <Jupstar ✪> i dunno i read once that CPU are only kinda reliable at around 300 us
19:35 < bridge> <Jupstar ✪> 
19:35 < bridge> <Jupstar ✪> under it it's completely approximated. which does not always mean it's bad.. just a different process.
19:35 < bridge> <Jupstar ✪> 
19:35 < bridge> <Jupstar ✪> but i dont have the source anymore
19:36 < bridge> <Assa> it probably doesn't help, that it's a runner in some vm
19:57 < ws-client> **<ChillerDragon>** @Solly (bun bun) does ddnet censor voldemort? look closely at the whisper message. I have the feeling this cheater was not on ddnet servers
20:16 < bridge> <Solly (bun bun)> Some do some doing
20:16 < bridge> <Solly (bun bun)> Don't
20:36 < bridge> <learath2> Hm, the core clocks usually have a sub ns period, so there is at least something ticking fast enough in there. I think the "high precision timer" we get access to is usually the tsc, so it should be around the same precision?
21:59 < bridge> <kollpotato> chillor i need ur honest opinion on starship shell
22:01 < bridge> <Ewan> it doesn't seem to be a shell, just a prompt
22:01 < bridge> <Ewan> you could use whatever shell you are used to
22:03 < bridge> <kollpotato> oh right my bad i meant prompt
22:03 < bridge> <kollpotato> it seems fancy but is it really needed
22:04 < bridge> <Ewan> it seems cool
22:04 < bridge> <Ewan> i don't like the use of nerdfont symbols/emojis in prompts but that seems to be the world we live in now
22:04 < bridge> <Ewan> if it's fast and unified across shells it could be really handy
22:04 < bridge> <Ewan> i hate writing prompt functions
22:04 < bridge> <Ewan> but also hate the defaults
22:04 < bridge> <melon> not needed but i used it for a long time, its just eyecandy (and can give important information like active branch, language etc
22:05 < bridge> <melon> its really helpful on nix, where its able to display information like your active rust compiler xd
22:05 < bridge> <melon> not needed but i used it for a long time, its just eyecandy (and can give important information like active branch, used language etc)
22:06 < bridge> <Ewan> yea. i've been using pure but i might switch to this since the fish port kinda sucks
22:18 < bridge> <Jupstar ✪> I dunno, I'd ping chairn, but dunno if he knows that for desktop CPUs
22:18 < bridge> <Jupstar ✪> Guess I'd need to ask doctor gpt
22:23 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1402386458093944862/image.png?ex=6893b9aa&is=6892682a&hm=0c062be48264c2d930f3ca35768ec859f6cfe2c0e8ba3c6683b91f9be88e39a3&
22:23 < bridge> <ryozuki> pog
22:27 < bridge> <pilonpl> What is this
22:30 < bridge> <kollpotato> kernel to play ddnet
22:30 < bridge> <pilonpl> Good idea
22:34 < bridge> <ryozuki> my x86_64 kernel made in rust
22:34 < bridge> <pilonpl> That's cool
22:35 < bridge> <ryozuki> term receives input from an async queue
22:35 < bridge> <pilonpl> Isn't rust an annoying language to write an OS in?
22:35 < bridge> <ryozuki> no, its epic, amazing
22:35 < bridge> <ryozuki> way better than c
22:36 < bridge> <pilonpl> The os should only allow programs written in rust
22:36 < bridge> <ryozuki> u cant rlt enforce that xd
22:37 < bridge> <ryozuki> anyway i go sleep
22:37 < bridge> <ryozuki> gn
23:10 < bridge> <milkeeycat> @learath2 educate this man on C
23:18 < bridge> <learath2> He is beyond salvation
23:39 < bridge> <jxsl13> Another poor soul lost.
