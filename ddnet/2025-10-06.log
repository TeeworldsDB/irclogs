00:06 < bridge_> <Teero> does anyone know why the hook chain sprite is stretched?
00:06 < bridge_> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1424518247222481057/Screenshot_20251006-000629.png?ex=68e43d80&is=68e2ec00&hm=a32a1fc9efa81dc05bd0806b66b00fdb6b16ab4909cd8206633702fe77c71125&
00:14 < bridge_> <kebscs> how do you even notice this üòÇ
00:15 < bridge_> <Teero> bruh I'm reimplementing the renderer xd
00:16 < bridge_> <kebscs> is the for loop calculated wrong
00:16 < bridge_> <kebscs> https://cdn.discordapp.com/attachments/293493549758939136/1424520633097916508/image.png?ex=68e43fb9&is=68e2ee39&hm=bb71c8d320292b8b69f04b72d02fc03980b635a0e78e7acdef578455d44846b6&
00:16 < bridge_> <kebscs> or is it already loaded wrongly
00:17 < bridge_> <Teero> It's loaded wrong. But it's intended ig? It will definitely not be changed
00:17 < bridge_> <Teero> I think
00:40 < bridge_> <louis> half the assets in this game have some fucked scaling vs their original png
00:53 < bridge_> <Teero> yea but at least the aspect ratio is correct for them
00:58 < bridge_> <Ewan> why skull emoji
00:59 < bridge_> <Ewan> I'm p sure he's reimplementing the client in C
01:57 < bridge_> <tsfreddie> Funny game
02:54 < bridge_> <Ewan> kebs why such a hater
02:54 < bridge_> <Ewan> just let the man code üò≠
02:54 < bridge_> <Ewan> it is a learning exercise as much as it is a cool feature
02:55 < bridge_> <Ewan> it is a learning exercise as much as it is a cool featu
02:55 < bridge_> <Ewan> it is a learning exercise as much as it is a cool feat
06:00 < bridge_> <blazulite> it's really noticeable tho???
06:01 < bridge_> <blazulite> what the fish...,.,
06:09 < bridge_> <Ewan> can't believe this came from the #developer channel
06:09 < bridge_> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1424609494100344883/image.png?ex=68e4927b&is=68e340fb&hm=34577edf53b034a30f1add9151e3cc060a7572ac85b38ffd2ed172fbaac62a85&
06:09 < bridge_> <Ewan> we HATE it when people do anything that isn't add new features or fix bugs
06:10 < bridge_> <Ewan> get back to work
06:40 < bridge_> <tsfreddie> https://cdn.discordapp.com/attachments/293493549758939136/1424617409477742592/IMG_20251006_124034.jpg?ex=68e499da&is=68e3485a&hm=c1166fc63e5f511fa8e960eb2efdbacd504140cb7b4dc536abba390a8c32225c&
06:41 < bridge_> <Ewan> fred music festival ‚ÅâÔ∏è
06:53 < bridge_> <tsfreddie> https://cdn.discordapp.com/attachments/293493549758939136/1424620584960131183/IMG_20251006_124719.jpg?ex=68e49ccf&is=68e34b4f&hm=739914d43de018f154cca9e0a072cdc84e542dee8aa9816a5ed262da709aa901&
06:53 < bridge_> <tsfreddie> https://cdn.discordapp.com/attachments/293493549758939136/1424620614332846181/video_20251006_125325.mp4?ex=68e49cd6&is=68e34b56&hm=3905d7536304792c722de5bb1ccf7e053057d7ed6d7626ebe33c7b26235726c5&
06:53 < bridge_> <tsfreddie> Everyone in the corner
06:54 < bridge_> <tsfreddie> Just realized this is not #off-topic
06:54 < bridge_> <tsfreddie> Why am I here
08:36 < bridge_> <kebscs> I'm not hating üíÄ
08:36 < bridge_> <Ewan> my mistake
08:53 < bridge_> <milkeeycat> I spent multiple hours waiting for `clang-tidy` to compile and after all this time an executable can't be linked because 16gb is not enough :pepeW:
08:57 < bridge_> <Teero> lmao get yourself some swap
09:11 < bridge_> <Solly (bun bun)> cpp?
09:12 < bridge_> <milkeeycat> yes
09:12 < bridge_> <Solly (bun bun)> what r ucompiling
09:12 < bridge_> <milkeeycat> `clang-tidy` ._.
09:12 < bridge_> <Solly (bun bun)> OH
09:12 < bridge_> <Solly (bun bun)> yeah that makes sense
09:13 < bridge_> <Solly (bun bun)> try less concurrency
09:13 < bridge_> <milkeeycat> there was no concurrency xd
09:13 < bridge_> <Solly (bun bun)> o
09:13 < bridge_> <Solly (bun bun)> (ninja defaults to nproc)
09:13 < bridge_> <milkeeycat> I remember I compiled the whole LLVM and it didn't crash, I dunno what flags I passed tho :\
09:13 < bridge_> <milkeeycat> I guess it's shared libs time
09:14 < bridge_> <Solly (bun bun)> ¬Ø\_(„ÉÑ)_/¬Ø
09:14 < bridge_> <Solly (bun bun)> better luck next time
09:14 < bridge_> <Solly (bun bun)> go eep yeah good idea
09:14 < bridge_> <Solly (bun bun)> what is my sleep schedule i literally did not eep
09:14 < bridge_> <Solly (bun bun)> i hibernation from 11pm to 3am
09:14 < bridge_> <Solly (bun bun)> im literaly trance like dnd
09:14 < bridge_> <Solly (bun bun)> and thats after alcohol
09:26 < bridge_> <Ewan> another one given to the brianrot
09:26 < bridge_> <ryozuki> @mpft hi default image enjoyer
09:26 < bridge_> <Ewan> how's it going
09:27 < bridge_> <ryozuki> good, my kernel progressing steadily
09:27 < bridge_> <ryozuki> and u
09:27 < bridge_> <ryozuki> also im in a new flat
09:27 < bridge_> <Jupstar ‚ú™> ryo will you get a gaming room
09:28 < bridge_> <ryozuki> my living room, which is quite big is my gaming room
09:28 < bridge_> <ryozuki> i have a cat room
09:28 < bridge_> <ryozuki> and my bedroom
09:28 < bridge_> <ryozuki> and a extra room
09:28 < bridge_> <manikoo> room enjoyer
09:28 < bridge_> <Jupstar ‚ú™> sick, but throw cat out, make it gaming room
09:28 < bridge_> <Ewan> pretty good myself. is this a new new flat or the one you sent photos of a few weeks ago w new setup
09:28 < bridge_> <ryozuki> no i like living room as gaming room
09:28 < bridge_> <ryozuki> its where i live the most time
09:28 < bridge_> <ryozuki> so i am in the biggest room
09:28 < bridge_> <Ewan> :gigachad:
09:29 < bridge_> <ryozuki> the one i sent
09:29 < bridge_> <ryozuki> hm few weeks? i sent it some days ago
09:29 < bridge_> <ryozuki> here its about 5C colder
09:29 < bridge_> <ryozuki> i hope it snows
09:29 < bridge_> <ryozuki> i want to see snow
09:29 < bridge_> <manikoo> wait 1-2 months
09:30 < bridge_> <Jupstar ‚ú™> spain problems
09:30 < bridge_> <ryozuki> its 12C here
09:30 < bridge_> <Ewan> yea i didn't think that hard about it but a few days sounds right
09:30 < bridge_> <Ewan> love to see consistent progress on the OS
09:30 < bridge_> <Ewan> personally am making some music
09:30 < bridge_> <manikoo> we need 0C to have snow
09:30 < bridge_> <ryozuki> ik, its too early
09:30 < bridge_> <ryozuki> also here usually january february is coldest
09:31 < bridge_> <Jupstar ‚ú™> i only have 4 projects in the pipeline + fulltime job.. time to also add OS to my project list
09:31 < bridge_> <ryozuki> cuz we close to sea, and the sea "delays" the temperature change by some time, because it acts as a temp buffer
09:31 < bridge_> <manikoo> and this global warming... i didn't have normal winter last years
09:31 < bridge_> <ryozuki> if u didnt know
09:31 < bridge_> <ryozuki> well im not so close to sea now
09:31 < bridge_> <ryozuki> about 1h and 30 mins
09:31 < bridge_> <ryozuki> by car
09:31 < bridge_> <ryozuki> i also have full time job
09:31 < bridge_> <ryozuki> my kernel is kinda stable rn i need to make a ecosystem of programs
09:31 < bridge_> <Jupstar ‚ú™> making OS is really cool tho
09:32 < bridge_> <ryozuki> yea
09:33 < bridge_> <ryozuki> i want to make my walled garden xd
09:33 < bridge_> <ryozuki> next big thing is adding a NIC and internet
09:34 < bridge_> <ryozuki> i can use the std, i need now to add some render priority cuz otherwise terminal reprints when i run a program xd hence the loop
09:34 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1424661139031330836/image.png?ex=68e4c294&is=68e37114&hm=2a5ed85544cc9f903bea0b4571d5c9a13433aec38bd6fe847bdb1083bc49dd1a&
09:38 < bridge_> <ryozuki> https://github.com/edg-l/rust/releases/download/rust-toolchain-x86-64-unknown-edos-0.1.0/rust-edos-x86_64.zip
09:38 < bridge_> <ryozuki> if u download this toolchain
09:38 < bridge_> <ryozuki> and unzip it and run "rustup toolchain link edos <path to unzipped folder>
09:38 < bridge_> <ryozuki> u can use it
09:38 < bridge_> <ryozuki> ```
09:38 < bridge_> <ryozuki> # rust-toolchain.toml
09:38 < bridge_> <ryozuki> [toolchain]
09:38 < bridge_> <ryozuki> channel = "edos"
09:38 < bridge_> <ryozuki> ```
09:39 < bridge_> <ryozuki> cargo b +edos --target x86_64-unknown-edos
09:39 < bridge_> <ryozuki> unzipped its 1.6gb xd
10:14 < bridge_> <manikoo> you will make it public?
10:22 < bridge_> <Teero> ddnet os :poggers2:
10:27 < bridge_> <Ewan> üôÇ‚Äç‚ÜîÔ∏è
10:27 < bridge_> <Ewan> i believe someone already made this joke
10:27 < bridge_> <ryozuki> when i have smth more done
10:28 < bridge_> <Teero> how many loc is your kernel rn? xd
10:28 < bridge_> <Ewan> 250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10:28 < bridge_> <ryozuki> 21k
10:28 < bridge_> <ryozuki> well this includes some program lines but they arent big
10:29 < bridge_> <ryozuki> i havent made many drivers yet, i need to do usb, and some ethernet one
10:30 < bridge_> <ryozuki> tcp..
10:36 < ws-client1> **<ChillerDragon>** lel the aur is down?
10:36 < ws-client1> **<ChillerDragon>** time to switch to gentoo
10:50 < bridge_> <Solly (bun bun)> @chillerdragon yes
11:01 < bridge_> <milkeeycat> I asked the author about this, here's the reply:
11:01 < bridge_> <milkeeycat> 
11:01 < bridge_> <milkeeycat> > The connection between saturated arithemtic instructions and inter-block instructions is that, to describe the behavior of a saturated arithmetic instruction, you need more than one block (because you first you add the numbers, then you check the result, and based on the check you may or may not alter the result, which requires another block). The existence of inter-block instructions assumes that you only have a limited set of operations tha
11:22 < bridge_> <ryozuki> i mean the check is a cond jump so ofc it requires multiple blocks
11:23 < bridge_> <ryozuki> imho its easy to grasp
12:05 < bridge_> <manikoo> try hard to i will use your os as my first unix
12:10 < bridge_> <melon> cache.nixos.org is still standing
12:10 < bridge_> <melon> 
12:10 < bridge_> <melon> common arch L
12:23 < bridge_> <learath2> Hm, maybe I'm just not very familiar with the definition of a "block".
12:23 < bridge_> <milkeeycat> block is like in control flow graph
12:24 < bridge_> <milkeeycat> > A block is a group of statements where a change in control flow only occurs at the
12:24 < bridge_> <milkeeycat> > end of the block.
12:25 < bridge_> <learath2> Yeah, but what I don't understand is that a saturated add is almost never a single instruction in any ISA. So calling it an "inter block instruction" kinda sounds self defeating to me
12:26 < bridge_> <learath2> If it is modeled as a single instruction, it wouldn't be creating a new block in the control flow in my mind
12:28 < bridge_> <learath2> Honestly, I probably would need to read the material myself to have a proper opinion on this. I kinda see his point but I also don't understand the use of this definition.
12:28 < bridge_> <learath2> 
12:28 < bridge_> <learath2> What does he use them for?
12:30 < bridge_> <milkeeycat> I'm reading https://www.diva-portal.org/smash/get/diva2:951540/FULLTEXT01.pdf, it's a book about instruction selection, I didn't see the term being used after it was defined xd but I'm also not that far
12:32 < bridge_> <learath2> Oh, maybe having these in your IR allows for architectures that do have saturated add instructions to select that and architectures that don't would be truly generating new blocks and that is somehow useful
12:36 < bridge_> <learath2> Yeah that seems to be the idea. It mentions that emiting these instructions usually requires "customized program optimization routines". So yeah I guess it does make sense to have these instructions in a separate category
12:53 < bridge_> <sqwinix> hi guys
12:53 < bridge_> <DDNet> Hellou :3
12:55 < bridge_> <sqwinix> When building DDnet, which flag disables the client and leaves only the server? -DCLIENT?
13:00 < bridge_> <melon> ye either -DCLIENT=OFF or -DSERVER=OFF depending on what you want to build
13:00 < bridge_> <sqwinix> Thank you
13:11 < bridge_> <sqwinix> what about ```cmake --build build --target DDNet-Server```
13:12 < bridge_> <sqwinix> Or is this an alternative?
13:29 < bridge_> <chairn> For information for those interested:
13:29 < bridge_> <chairn> > A new,  exciting talk at the  Cyber Security and Resilience Seminar Series (Cyse3) series, on the Wed 8 Oct 2025, 14:00 BST/ 15:00 CET, online, on anti-cheat by Sam Collins (University of Birmingham)
13:29 < bridge_> <chairn> > 
13:29 < bridge_> <chairn> > Cheating methods, used by groups such as Scattered Spider, Earth Longzhi, and Lazarus, in APT and ransomware attacks, are commonly handled by anti-cheat systems. We will outline the key difficulties in analysing anti-cheats and then dissect some key behaviours to explain how such systems protect game software in hostile environments.   [BlackHat 2025]
13:29 < bridge_> <chairn> > 
13:30 < bridge_> <chairn> > More details here: https://cyse3.org/talks/anti-cheat/ 
13:30 < bridge_> <chairn> > Zoom link here:  https://york-ac-uk.zoom.us/j/93652192455?pwd=NIbpMlOvwzJcgFvnCpAegF8lRhsuiZ.1
13:30 < bridge_> <chairn> > 
13:30 < bridge_> <chairn> > See you all there,
13:30 < bridge_> <chairn> > Ioana Boureanu (on behalf of CySe3 organisers : Erisa Karafili, Roberto Metere, Sia Shahandashti, Luca Arnaboldi, and herself)
13:30 < bridge_> <chairn> For information for those interested:
13:30 < bridge_> <chairn> > A new,  exciting talk at the  Cyber Security and Resilience Seminar Series (Cyse3) series, on the Wed 8 Oct 2025, 14:00 BST/ 15:00 CET, online, on anti-cheat by Sam Collins (University of Birmingham)
13:30 < bridge_> <chairn> > 
13:30 < bridge_> <chairn> > Cheating methods, used by groups such as Scattered Spider, Earth Longzhi, and Lazarus, in APT and ransomware attacks, are commonly handled by anti-cheat systems. We will outline the key difficulties in analysing anti-cheats and then dissect some key behaviours to explain how such systems protect game software in hostile environments.   [BlackHat 2025]
13:30 < bridge_> <chairn> > 
13:30 < bridge_> <chairn> > More details here: https://cyse3.org/talks/anti-cheat/ 
13:30 < bridge_> <chairn> > Zoom link here:  <https://york-ac-uk.zoom.us/j/93652192455?pwd=NIbpMlOvwzJcgFvnCpAegF8lRhsuiZ.1>
13:30 < bridge_> <chairn> > 
13:30 < bridge_> <chairn> > See you all there,
13:30 < bridge_> <chairn> > Ioana Boureanu (on behalf of CySe3 organisers : Erisa Karafili, Roberto Metere, Sia Shahandashti, Luca Arnaboldi, and herself)
13:36 < bridge_> <manikoo> ddnet anti-chest issue reference
13:36 < bridge_> <manikoo> ddnet anti-cheat issue reference
13:37 < bridge_> <manikoo> looks interesting even for not knowlengeable in this field
13:38 < bridge_> <melon> do i really need to install zoom for that
13:38 < bridge_> <melon> :(
13:38 < bridge_> <milkeeycat> you can join using website, no?
13:38 < bridge_> <melon> didnt let me, it automatically redirects to the download link
13:39 < bridge_> <melon> ah nvm it was an option all the way down the page
13:39 < bridge_> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1424722717659238461/image.png?ex=68e4fbed&is=68e3aa6d&hm=37f2d57b9e20e55683937b28e1812ba37f6725d5ce9964f05358f2b061e31221&
13:47 < bridge_> <sqwinix> @blaiszephyr
13:49 < bridge_> <filoqcus> +
13:51 < bridge_> <sqwinix> Thx
14:36 < bridge_> <jxsl13> chiller is using apps written in Go üëÄ
14:46 < bridge_> <milkeeycat> go mentioned!!!
15:33 < bridge_> <milkeeycat> https://github.com/ddnet/ddnet/blob/d71fc85cbc458437be28098a9ee355c4958101d6/.github/workflows/clang-tidy.yml#L47-L49 Why is output runtime directory set for release build when `DCMAKE_BUILD_TYPE` is `Debug`?
15:46 < bridge_> <ryozuki> :justatest:
15:49 < bridge_> <milkeeycat> @ryozuki did you see https://discord.com/channels/252358080522747904/293493549758939136/1423903397031182477 ? :omo:
16:03 < bridge_> <ryozuki> pogg
16:03 < bridge_> <ryozuki> i didnt see xD
16:04 < bridge_> <milkeeycat> I changed one character :lol:
16:04 < bridge_> <ryozuki> well its a small change
16:04 < bridge_> <ryozuki> but a step forward xD
16:05 < bridge_> <milkeeycat> I also want to make a pr for clang-tidy
16:18 < bridge_> <ryozuki> @learath2 @chillerdragon @milkeeycat im not the only one with no backups https://koreajoongangdaily.joins.com/news/2025-10-01/national/socialAffairs/NIRS-fire-destroys-governments-cloud-storage-system-no-backups-available/2412936
16:29 < bridge_> <manikoo> luks like ps4
16:30 < bridge_> <sqwinix> We all love golang
16:31 < bridge_> <sqwinix> Better than Python (my opinion)
16:58 < bridge_> <chillerdragon> wiki mentioned?
16:59 < bridge_> <chillerdragon> Please remove the cmake flag it throws warnings! Thanks
17:01 < bridge_> <chillerdragon> You saw me forking termshark? It‚Äôs such an epic tool! I was about to open two issues when I realized the author passed away :/ that hit surprisingly hard.
17:03 < bridge_> <milkeeycat> chillerdragon: I'll try to add clang-tidy options to make this work https://github.com/ddnet/ddnet/pull/10850#issuecomment-3269442737 xd
17:04 < bridge_> <chillerdragon> @milkeeycat: omg i love you so much
18:15 < bridge_> <milkeeycat> Is there a way to generate all of the .h and .cpp files without building any executable?
18:18 < bridge_> <Solly (bun bun)> start building then ctrl+c
18:20 < bridge_> <robyt3> It doesn't look like there's a build target to only create the generated files if that's what you mean
18:21 < bridge_> <milkeeycat> sadge
18:23 < bridge_> <robyt3> Seems like a good idea to add one though. I'd also consider adding build targets that run automatic checks as in the CI.
18:34 < ws-client1> **<ChillerDragon>** 12 players with teeworlds client watafak https://paste.zillyhuhn.com/eA
20:07 < bridge_> <qxdfox> fuck me
20:07 < bridge_> <qxdfox> i did it again
20:07 < bridge_> <qxdfox> :feelsbadman:
20:17 < bridge_> <sqwinix> hi guys
20:17 < bridge_> <DDNet> Hellou :3
20:30 < bridge_> <melon> smol fix
20:30 < bridge_> <melon> :Pepega:
20:30 < bridge_> <qxdfox> yes very small
20:30 < bridge_> <qxdfox> this is a sign for yall to fix bans
20:31 < bridge_> <melon> True
20:57 < verjak> hello world
20:59 < bridge_> <vahemaaa> world hello
21:01 < verjak> —Ç—É—Ç –≤–æ–æ–±—â–µ –∂–∏–≤—ã–µ –µ—Å—Ç—å –∫—Ç–æ?
21:01 < bridge_> <milkeeycat> chillerdragon: are you here?
21:04 < bridge_> <milkeeycat> ah, nvm
21:14 < bridge_> <vahemaaa> yes
21:24 < bridge_> <sqwinix> –¥–∞
21:26 < bridge_> <sqwinix> Guys, how do I check a user's RCON? For example: if a player has the admin or moderator role, they use my code
21:26 < bridge_> <sqwinix> Well, I'm a newbie
21:27 < bridge_> <vahemaaa> server admin password?
21:27 < bridge_> <sqwinix> I want to make simple chat command: /telehere [nickname OR id]
21:27 < bridge_> <sqwinix> I want to make simple chat command: 
21:27 < bridge_> <sqwinix> /telehere [nickname OR id]
21:31 < bridge_> <matodor> not works on LeEco Le S3     Android 6.0 MediaTek MT6797
21:31 < bridge_> <matodor> 
21:31 < bridge_> <matodor> (old phone)
21:31 < bridge_> <matodor> https://cdn.discordapp.com/attachments/293493549758939136/1276481026557743196/image.png?ex=68e4e498&is=68e39318&hm=7c38b562b01389ff3ba17c5907d33c124004f4d014f6e6b8f8b197bb6d383444&
21:33 < bridge_> <sqwinix> wdym
21:34 < bridge_> <vahemaaa> i thought u talk about rcon password, and wanted to make it clear
21:35 < bridge_> <sqwinix> ah, ok
21:47 < bridge_> <chillerdragon> @sqwinix: `Server()->IsRconAuthed(ClientId)`
22:02 < bridge_> <vahemaaa> whats wrong?
22:02 < bridge_> <vahemaaa> ```
22:02 < bridge_> <vahemaaa> CMake Error at C:\Users\ibrhm\Documents\GitHub\W-Mod\CMakeLists.txt:1861 (file):
22:02 < bridge_> <vahemaaa>   file COPY cannot find
22:02 < bridge_> <vahemaaa>   "C:/Users/ibrhm/Documents/GitHub/W-Mod/ddnet-libs/curl/windows/lib64/libcurl.dll":
22:02 < bridge_> <vahemaaa>   File exists.
22:02 < bridge_> <vahemaaa> ```
22:08 < bridge_> <vahemaaa> oki updated ddnet-libs
22:12 < bridge_> <sqwinix> Thank you chiller
22:27 < bridge_> <vahemaaa> how can i link ddnet-libs to the source code
22:30 < bridge_> <sqwinix> git clone --recursive https://gihub.com/ddnet/ddnet
22:31 < bridge_> <sqwinix> You can use another flag, but I use this one.
22:31 < bridge_> <sqwinix> https://github.com/ddnet/ddnet/?tab=readme-ov-file#cloning
22:33 < bridge_> <vahemaaa> no i mean, i have my own mod but havent linked ddnet-libs, so current one is old, i get errors, i need to link ddnet-libs so that whenever i clone the repo, they get downloaded too
22:34 < bridge_> <vahemaaa> https://cdn.discordapp.com/attachments/293493549758939136/1424857255039209472/image.png?ex=68e5793a&is=68e427ba&hm=af41a3d02a39b04eb31ed199a8d1372783a02d3414637ba31157924624f44a38&
22:34 < bridge_> <vahemaaa> like  this
22:34 < bridge_> <sqwinix> To clone the libraries if you have previously cloned DDNet without them, or if you require the ddnet-libs history instead of a shallow clone:
22:34 < bridge_> <sqwinix> 
22:34 < bridge_> <sqwinix> ```git submodule update --init --recursive```
22:34 < bridge_> <sqwinix> like this
22:34 < bridge_> <sqwinix> idk
22:38 < bridge_> <kebscs> git submodule add <https://github.com/ddnet/ddnet-libs>
22:38 < bridge_> <kebscs> maybe
22:45 < bridge_> <vahemaaa> thanks for the help, i made it
22:46 < bridge_> <kebscs> what was it
22:48 < chillerbot1234> Elo @Teero I just wanted to remind you that: death is imminent
22:48 < bridge_> <vahemaaa> i used `git submodule add https://github.com/ddnet/ddnet-libs`
22:48 < bridge_> <vahemaaa> at first it didnt work cuz there was a folder named `ddnet-libs`
22:48 < bridge_> <vahemaaa> so i deleted it and tried again, it worked
22:58 < bridge_> <sqwinix> —à–≤–ª
22:58 < bridge_> <sqwinix> idk
