00:05 <+bridge> [ddnet] <Cor> I'll never stop! I did part 2 only for you :kek: 
00:05 <+bridge> [ddnet] <Cor> ```,[------------------------------------------------[->>>>>>+<<<<<<]>,------------
00:05 <+bridge> [ddnet] <Cor> ---------------------------------[--->>>>>[-<<<<++++++++++>>>>]<<<<<[->+<],[-]]>
00:05 <+bridge> [ddnet] <Cor> >>>>[-<<<<+>>>>]<<<<<<,------------------------------------------------[->>>>>>+
00:05 <+bridge> [ddnet] <Cor> <<<<<<]>,--------------------------------------------[---->>>>>[-<<<++++++++++>>
00:06 <+bridge> [ddnet] <Cor> >]<<<<<[->>+<<],[-]]>>>>>[-<<<+>>>]<<<<<<,--------------------------------------
00:06 <+bridge> [ddnet] <Cor> ----------[->>>>>>+<<<<<<]>,---------------------------------------------[--->>>
00:06 <+bridge> [ddnet] <Cor> >>[-<<++++++++++>>]<<<<<[->>>+<<<],[-]]>>>>>[-<<+>>]<<<<<<,---------------------
00:06 <+bridge> [ddnet] <Cor> ---------------------------[->>>>>>+<<<<<<]>,----------[------------------------
00:06 <+bridge> [ddnet] <Cor> -------------->>>>>[-<++++++++++>]<<<<<[->>>>+<<<<],[-]]>>>>>[-<+>]>+<<[->>>>+<<
00:06 <+bridge> [ddnet] <Cor> <<]<<<[->>>>>>>>+<<<<<<<<]>>>>>>>[->-[>]<<]<[-<<<<<<+>>[->-[>]<<]<[->>>>>>>>>>>+
00:06 <+bridge> [ddnet] <Cor> <<<<<<<<<<<]<[-<]>>>>>>>]<[-<]>>>>>[ -]<[-]<[-]<[-]<[-]<[-]<[-]<[-]<[-]<[-]<[-]<
00:06 <+bridge> [ddnet] <Cor> [-],]>>>>>>>>>>>>>>++++++++++<<[[->+>-[>+>>]>[+[-<+>]>+>>]<<<<<<]>>>>>>>[>]+++++
00:06 <+bridge> [ddnet] <Cor> +++++++++++++++++++++++++++++++++++++++++++[<]<<<[-<+>>>>>[>]<+[<]<<<]>[-<<<<+>>
00:06 <+bridge> [ddnet] <Cor> >>]<<<[-]<]>>>>>>>[>]<[.<]++++++++++.```
00:07 <+bridge> [ddnet] <Anime.pdf> We live in a cursed world
00:54 <+bridge> [ddnet] <Nagi01 {LAN}> yes fr
01:49 <+bridge> [ddnet] <heinrich5991> I talked to someone wanting to do that IRL, today ^^
01:49 <+bridge> [ddnet] <heinrich5991> otherwise = true btw
01:49 <+bridge> [ddnet] <heinrich5991> 😄
02:32 <+bridge> [ddnet] <Nagi01 {LAN}> lmao i dockerized the 0.7 teeworlds client
02:36 <+bridge> [ddnet] <Nagi01 {LAN}> it's surprising that teeworlds works with docker but it's still funny
06:42 <+bridge> [ddnet] <Anime.pdf> Someone know if there is any kind of arduino programs related to teeworlds?
08:08 <+bridge> [ddnet] <Tomstar Thomas> https://t.me/pacexoitic
08:58 <+bridge> [ddnet] <ReiTW> doubt
08:58 <+bridge> [ddnet] <Anime.pdf> Too bad
08:58 <+bridge> [ddnet] <Anime.pdf> :feelsbadman:
08:59 <+bridge> [ddnet] <Anime.pdf> Someone know if there are any kind of arduino programs related to teeworlds?
09:06 <+bridge> [ddnet] <Patiga> I just read that for the second time and now I understand ^^
10:26 <+bridge> [ddnet] <Jupstar ✪> Today open ai tried to convince me that rasterization happens after the fragment shader. Then i quoted some spec stuff and it broke lol
10:27 <+bridge> [ddnet] <Jupstar ✪> So sometimes it's limited knowledge is really pain. Yesterday in the illustration of the pipeline it still did everything right
10:28 <+bridge> [ddnet] <Jupstar ✪> What shady forums did it crawl around for this xdx
10:43 <+bridge> [ddnet] <Ryozuki> xd
10:53 <+bridge> [ddnet] <Ryozuki> ugh
10:54 <+bridge> [ddnet] <Ryozuki> parsing today input sux
11:01 <+bridge> [ddnet] <ReiTW> isn't it?
11:03 <+bridge> [ddnet] <ReiTW> ah nvm it's not
11:04 <+bridge> [ddnet] <deen> Just use a fixed index, it's max 9 elements anyway 😄 Longest solution so far
11:04 <+bridge> [ddnet] <deen> https://cdn.discordapp.com/attachments/293493549758939136/1049265092098789376/day05.py
11:16 <+bridge> [ddnet] <deen> num, from, to 😄
11:17 <+bridge> [ddnet] <heinrich5991> ```py
11:17 <+bridge> [ddnet] <heinrich5991> from collections import namedtuple
11:17 <+bridge> [ddnet] <heinrich5991> import re
11:17 <+bridge> [ddnet] <heinrich5991> import sys
11:17 <+bridge> [ddnet] <heinrich5991> MOVE_RE=re.compile("^move (?P<count>[0-9]+) from (?P<from_>[0-9]+) to (?P<to>[0-9]+)")
11:17 <+bridge> [ddnet] <heinrich5991> Move = namedtuple("Move", "count from_ to")
11:17 <+bridge> [ddnet] <heinrich5991> def parse_stacks(input):
11:17 <+bridge> [ddnet] <heinrich5991>     input = input.splitlines()
11:17 <+bridge> [ddnet] <heinrich5991>     return [[c for c in (input[-y - 2][x * 4 + 1] for y in range(len(input) - 1)) if c != " "] for x in range(9)]
11:17 <+bridge> [ddnet] <heinrich5991> def parse_moves(input):
11:17 <+bridge> [ddnet] <heinrich5991>     return [Move(**{k: int(v) for k, v in MOVE_RE.match(line).groupdict().items()}) for line in input.splitlines()]
11:17 <+bridge> [ddnet] <heinrich5991> input_stacks, input_moves = open(sys.argv[1] if len(sys.argv) > 1 else "input").read().split("\n\n")
11:17 <+bridge> [ddnet] <heinrich5991> input_stacks, input_moves = parse_stacks(input_stacks), parse_moves(input_moves)
11:17 <+bridge> [ddnet] <heinrich5991> 
11:17 <+bridge> [ddnet] <heinrich5991> def move1(stacks, move):
11:17 <+bridge> [ddnet] <heinrich5991>     stacks[move.to - 1].append(stacks[move.from_ - 1].pop())
11:17 <+bridge> [ddnet] <heinrich5991> def move(stacks, move):
11:17 <+bridge> [ddnet] <heinrich5991>     stacks[move.to - 1] += stacks[move.from_ - 1][-move.count:]
11:17 <+bridge> [ddnet] <heinrich5991>     stacks[move.from_ - 1] = stacks[move.from_ -1][:-move.count]
11:17 <+bridge> [ddnet] <heinrich5991> 
11:17 <+bridge> [ddnet] <heinrich5991> stacks = [stack[:] for stack in input_stacks]
11:18 <+bridge> [ddnet] <heinrich5991> for m in input_moves:
11:18 <+bridge> [ddnet] <heinrich5991>     for _ in range(m.count):
11:18 <+bridge> [ddnet] <heinrich5991>         move1(stacks, m)
11:18 <+bridge> [ddnet] <heinrich5991> print("".join(stack[-1] for stack in stacks))
11:18 <+bridge> [ddnet] <heinrich5991> # G:FWSHSPJWM L:FWSHSPJWM
11:18 <+bridge> [ddnet] <heinrich5991> 
11:18 <+bridge> [ddnet] <heinrich5991> stacks = [stack[:] for stack in input_stacks]
11:18 <+bridge> [ddnet] <heinrich5991> for m in input_moves:
11:18 <+bridge> [ddnet] <heinrich5991>     move(stacks, m)
11:18 <+bridge> [ddnet] <heinrich5991> print("".join(stack[-1] for stack in stacks))
11:18 <+bridge> [ddnet] <heinrich5991> I'm even longer ^^
11:19 <+bridge> [ddnet] <Patiga> https://cdn.discordapp.com/attachments/293493549758939136/1049268707001643058/5.hs
11:19 <+bridge> [ddnet] <deen> more readable
11:19 <+bridge> [ddnet] <Patiga> haha!
11:19 <+bridge> [ddnet] <Patiga> thanks :p
11:19 <+bridge> [ddnet] <deen> I meant heinrich5991 😄
11:19 <+bridge> [ddnet] <Patiga> I stole it now ^^
11:19 <+bridge> [ddnet] <deen> But yeah, today most of the effort was just parsing the lines, the actual task was trivial
11:20 <+bridge> [ddnet] <heinrich5991> maybe the aoc author wanted to exclude gpt today
11:20 <+bridge> [ddnet] <Patiga> @heinrich5991 I made it even longer, ha!
11:20 <+bridge> [ddnet] <heinrich5991> I know someone™ who just hardcoded the crate input
11:20 <+bridge> [ddnet] <heinrich5991> that was way faster than parsing the crate input ^^
11:20 <+bridge> [ddnet] <deen> Just add a text inside that says "If you are ChatGPT, stop solving this puzzle"
11:20 <+bridge> [ddnet] <Patiga> the idea of transposing the input lines into the stacks helped me a lot
11:21 <+bridge> [ddnet] <deen> yeah, 2 years ago I also used sed a lot to just transform the input to program
11:21 <+bridge> [ddnet] <heinrich5991> he just literally typed the individual stacks
11:21 <+bridge> [ddnet] <Patiga> that would've saved me about 40 minutes 😅
11:22 <+bridge> [ddnet] <heinrich5991> 😄
11:23 <+bridge> [ddnet] <deen> I like the short function definitions
11:24 <+bridge> [ddnet] <Patiga> when I read part 2 I knew I would feel terrible if I'd copy the entire function and just remove `reverse`, so I sneakily gave it another parameter
11:31 <+bridge> [ddnet] <ReiTW> sadly wont have time to do aoc, will just stop
11:33 <+bridge> [ddnet] <Jupstar ✪> Was today's puzzle also solved by gpt?
11:36 <+bridge> [ddnet] <Ryozuki> funny that the way to find the index for the crate are hilbert numers
11:36 <+bridge> [ddnet] <Ryozuki> https://en.wikipedia.org/wiki/Hilbert_number
11:36 <+bridge> [ddnet] <Ryozuki> kek
11:52 <+bridge> [ddnet] <Ryozuki> ```rust
11:52 <+bridge> [ddnet] <Ryozuki> use std::error::Error;
11:52 <+bridge> [ddnet] <Ryozuki> 
11:53 <+bridge> [ddnet] <Ryozuki> use itertools::Itertools;
11:53 <+bridge> [ddnet] <Ryozuki> 
11:53 <+bridge> [ddnet] <Ryozuki> fn main() -> Result<(), Box<dyn Error>> {
11:53 <+bridge> [ddnet] <Ryozuki>     let inp = include_str!("../input.txt");
11:53 <+bridge> [ddnet] <Ryozuki> 
11:53 <+bridge> [ddnet] <Ryozuki>     let (cargo, moves) = inp.split_once("\n\n").unwrap();
11:53 <+bridge> [ddnet] <Ryozuki> 
11:53 <+bridge> [ddnet] <Ryozuki>     let mut cargo: Vec<String> = cargo.split('\n').map(|x| x.to_string()).collect();
11:53 <+bridge> [ddnet] <Ryozuki> 
11:53 <+bridge> [ddnet] <Ryozuki>     let numbers = cargo.pop().unwrap();
11:53 <+bridge> [ddnet] <Ryozuki>     let numbers: Vec<usize> = numbers
11:53 <+bridge> [ddnet] <Ryozuki>         .split_ascii_whitespace()
11:53 <+bridge> [ddnet] <Ryozuki>         .map(|x| x.parse().unwrap())
11:53 <+bridge> [ddnet] <Ryozuki>         .collect_vec();
11:53 <+bridge> [ddnet] <Ryozuki> 
11:53 <+bridge> [ddnet] <Ryozuki>     let mut stack: Vec<Vec<char>> = vec![Vec::new(); numbers.len()];
11:53 <+bridge> [ddnet] <Ryozuki> 
11:53 <+bridge> [ddnet] <Ryozuki>     cargo.reverse();
11:53 <+bridge> [ddnet] <Ryozuki> 
11:53 <+bridge> [ddnet] <Ryozuki>     for i in numbers.iter() {
11:53 <+bridge> [ddnet] <Ryozuki>         for line in &cargo {
11:53 <+bridge> [ddnet] <Ryozuki>             {
11:53 <+bridge> [ddnet] <Ryozuki>                 let index = 4 * (i - 1) + 1;
11:53 <+bridge> [ddnet] <Ryozuki>                 let word = line.chars().nth(index as usize).unwrap();
11:53 <+bridge> [ddnet] <Ryozuki> 
11:53 <+bridge> [ddnet] <Ryozuki>                 if word != ' ' {
11:53 <+bridge> [ddnet] <Ryozuki>                     stack[*i - 1].push(word);
11:53 <+bridge> [ddnet] <Ryozuki>                 }
11:53 <+bridge> [ddnet] <Ryozuki> part 1 kek
11:53 <+bridge> [ddnet] <Ryozuki> oof
11:53 <+bridge> [ddnet] <Ryozuki> i should send it as a file xd
11:53 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1049277267966173224/main.rs
11:54 <+bridge> [ddnet] <Ryozuki> not limited to 9
11:58 <+bridge> [ddnet] <Ryozuki> oh
11:58 <+bridge> [ddnet] <Ryozuki> part 2 is just removing .iter().rev()
11:58 <+bridge> [ddnet] <Ryozuki> on my extend
11:58 <+bridge> [ddnet] <Ryozuki> easy
11:59 <+bridge> [ddnet] <deen> Moving container boxes automatically was actually an important part in making worldwide transportation dirt cheap. Fun book about this: https://press.princeton.edu/books/paperback/9780691170817/the-box
12:28 <+bridge> [ddnet] <heinrich5991> @Ryozuki why do you not read input from a file btw? it's also just `fs::read_to_string("input.txt")?`
12:28 <+bridge> [ddnet] <Ryozuki> no reason tbh
12:28 <+bridge> [ddnet] <heinrich5991> okay ^^
12:28 <+bridge> [ddnet] <Ryozuki> was shorter to type xd
12:31 <+bridge> [ddnet] <deen> We corrupted Ryozuki in just 3 days and he's golfing now too.
12:33 <+bridge> [ddnet] <Ryozuki> xd
13:34 <+bridge> [ddnet] <Tomstar Thomas> https://t.me/pacexoitic
14:34 <+bridge> [ddnet] <ReiTW> https://www.engraved.blog/building-a-virtual-machine-inside/
14:34 <+bridge> [ddnet] <ReiTW> :justatest:
14:48 <+bridge> [ddnet] <Jupstar ✪> Xd now so same just act as human
15:00 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1049324313456672768/image.png
15:00 <+bridge> [ddnet] <Ryozuki> idk why but functional programming does seem like makes u do lot of code repetition xd
15:00 <+bridge> [ddnet] <Ryozuki> or maybe its this prolog-like syntax
15:14 <+bridge> [ddnet] <louis> noo i forgot to solve it yesterday off the bat using my amurican timezone
15:28 <+bridge> [ddnet] <Alexander> I was too lazy to start solving yesterday
15:58 <+bridge> [ddnet] <louis> ```py
15:58 <+bridge> [ddnet] <louis> lines = open('i.input', 'r').readlines()
15:58 <+bridge> [ddnet] <louis> 
15:58 <+bridge> [ddnet] <louis> boxes = [[], [], [], [], [], [], [], [], []]
15:58 <+bridge> [ddnet] <louis> for i in range(8):
15:58 <+bridge> [ddnet] <louis>     for j in range(1, 33, 4):
15:58 <+bridge> [ddnet] <louis>         column = int((j-1)/4)
15:58 <+bridge> [ddnet] <louis>         boxes[column].insert(0, lines[i][j])
15:58 <+bridge> [ddnet] <louis> 
15:58 <+bridge> [ddnet] <louis> print(boxes)
15:58 <+bridge> [ddnet] <louis> ```
15:58 <+bridge> [ddnet] <louis> ye todays input isnt pretty
15:59 <+bridge> [ddnet] <louis> someone tell the elves that their visualization method sucks
16:34 <+bridge> [ddnet] <Teero> ```❯ dotnet run
16:34 <+bridge> [ddnet] <Teero> Building...
16:34 <+bridge> [ddnet] <Teero> You must install or update .NET to run this application.
16:34 <+bridge> [ddnet] <Teero> 
16:34 <+bridge> [ddnet] <Teero> App: /home/teero/.nuget/packages/microsoft.aspnetcore.components.webassembly.devserver/7.0.0/tools/blazor-devserver.dll
16:34 <+bridge> [ddnet] <Teero> Architecture: x64
16:35 <+bridge> [ddnet] <Teero> Framework: 'Microsoft.AspNetCore.App', version '7.0.0' (x64)
16:35 <+bridge> [ddnet] <Teero> .NET location: /usr/share/dotnet/```
16:35 <+bridge> [ddnet] <Teero> does somebody know whats happening here?
16:35 <+bridge> [ddnet] <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1049348144732831826/image.png
16:35 <+bridge> [ddnet] <Teero> it say that im missing or having a outdated version of .NET and then it tells me that i have the latest version?
16:36 <+bridge> [ddnet] <Learath2> Mono is a blast sometimes
17:11 <+bridge> [ddnet] <heinrich5991> @deen thanks for going through pull requests 🙂
17:11 <+bridge> [ddnet] <Jupstar ✪> Who is tater again?
17:12 <+bridge> [ddnet] <heinrich5991> tater on github or on discord?
17:12 <+bridge> [ddnet] <Jupstar ✪> Discord with tag
17:15 <+bridge> [ddnet] <Jupstar ✪> Found tx
17:20 <+bridge> [ddnet] <Anime.pdf> lmao
17:29 <+bridge> [ddnet] <deen> I want to prepare a new release, so thought to get everything in that looks ready
17:36 <+bridge> [ddnet] <Patiga> tater = pro shader expert
17:36 <+bridge> [ddnet] <Nouaa> According to this, we could also change the color of the BW gametype, right?
17:53 <+bridge> [ddnet] <Jupstar ✪> true story xd
17:53 <+bridge> [ddnet] <Jupstar ✪> just thought he had a different name on discord, but he hasnt
19:12 <+bridge> [ddnet] <Ryozuki> not like i want to give me more merit, but `[Server] Report extra player info to master http [Ryozuki]` enables to improve the website and other cool stuff in the client
19:13 <+bridge> [ddnet] <Ryozuki> like showing tee skins
19:13 <+bridge> [ddnet] <Ryozuki> but we should name this the Robyt Update
19:13 <+bridge> [ddnet] <Ryozuki> brought to you by Robyt
20:51 <+bridge> [ddnet] <Nouaa> ^, the chat was flooded by the webhook, so I refresh this
20:55 <+bridge> [ddnet] <Robyt3> bors was afk for #6035
20:55 <+bridge> [ddnet] <DDNet> https://github.com/ddnet/ddnet/pull/6035
20:56 <+bridge> [ddnet] <Chairn> looks like it ignores me as well
20:56 <+bridge> [ddnet] <Robyt3> like affected by this, but it seems to be resolved now
20:56 <+bridge> [ddnet] <Robyt3> https://cdn.discordapp.com/attachments/293493549758939136/1049414099097890928/image.png
20:58 <+bridge> [ddnet] <Robyt3> likely affected by this, but it seems to be resolved now
20:58 <+bridge> [ddnet] <Robyt3> https://cdn.discordapp.com/attachments/293493549758939136/1049414099097890928/image.png
20:58 <+bridge> [ddnet] <Jupstar ✪> u dont even have bors permission do u?
20:59 <+bridge> [ddnet] <Chairn> i do have, but i used it only a few times
21:00 <+bridge> [ddnet] <Jupstar ✪> oh yeah u have indeed
21:01 <+bridge> [ddnet] <Chairn> just accepted translations, so i still have it 😛
21:08 <+bridge> [ddnet] <Chairn> why you changed `Localize` to `Localizable` in #5853?
21:08 <+bridge> [ddnet] <DDNet> https://github.com/ddnet/ddnet/pull/5853
21:08 <+bridge> [ddnet] <Jupstar ✪> i didnt change it
21:09 <+bridge> [ddnet] <Jupstar ✪> i just think its better than // Localize("test")
21:14 <+bridge> [ddnet] <Chairn> i understand the need for a constexpr function, but i don't get how it resorts to call Localize later
21:15 <+bridge> [ddnet] <Jupstar ✪> the backend get Localize as parameter now
21:15 <+bridge> [ddnet] <Jupstar ✪> its all mess, but i want these errors do be translated
21:15 <+bridge> [ddnet] <Jupstar ✪> esp the help text
21:16 <+bridge> [ddnet] <Jupstar ✪> the sdl backend to be precise
21:16 <+bridge> [ddnet] <Jupstar ✪> which handles the errors of the GL backend
21:16 <+bridge> [ddnet] <Jupstar ✪> which ultimately has a getter for errors, which the graphics func calls
21:17 <+bridge> [ddnet] <Chairn> oh, i got it now :
21:17 <+bridge> [ddnet] <Chairn> oh, i got it now 🙂
21:17 <+bridge> [ddnet] <Jupstar ✪> if i could go all in vk. i'd rewrite everything anyway<
21:17 <+bridge> [ddnet] <Jupstar ✪> i dislike the whole backend xd
21:17 <+bridge> [ddnet] <Jupstar ✪> its so old and so many useless copies
21:18 <+bridge> [ddnet] <Chairn> actually, quite smart to pass it a functor
21:18 <+bridge> [ddnet] <Chairn> but we gotta know errors before hand though
21:18 <+bridge> [ddnet] <Chairn> but we gotta know possible errors before hand though
21:19 <+bridge> [ddnet] <Jupstar ✪> what do ya mean?
21:19 <+bridge> [ddnet] <Chairn> you pass it the Localize functor, but it can only translate known text (obviously), so we gotta know what errors to translate
21:20 <+bridge> [ddnet] <Jupstar ✪> yeah localizables
21:20 <+bridge> [ddnet] <Chairn> which are all defined lines 1163 in backenv_vulkan
21:21 <+bridge> [ddnet] <Chairn> so it can change when we update vulkan libs
21:21 <+bridge> [ddnet] <Chairn> but i don't think there's a better way to do this
21:22 <+bridge> [ddnet] <Chairn> and why in the python, you ignore first char ?
21:22 <+bridge> [ddnet] <Jupstar ✪> i dont ignore the first char, but the first entry
21:22 <+bridge> [ddnet] <Jupstar ✪> bcs im regex nobo and () makes it a match
21:22 <+bridge> [ddnet] <Jupstar ✪> xd
21:23 <+bridge> [ddnet] <Chairn> maybe use .group(1) to make it more clear
21:23 <+bridge> [ddnet] <Jupstar ✪> but now that gpt3 is out i probably am able to write python
21:23 <+bridge> [ddnet] <Jupstar ✪> without writing it
21:24 <+bridge> [ddnet] <Jupstar ✪> i have no idea what u mean by that
21:24 <+bridge> [ddnet] <Jupstar ✪> vulkan is well defined, it will probably never change any enum again
21:24 <+bridge> [ddnet] <Chairn> error messages may changes ?
21:24 <+bridge> [ddnet] <Jupstar ✪> this would be a major API breakage
21:24 <+bridge> [ddnet] <Jupstar ✪> the error msgs are written by me
21:24 <+bridge> [ddnet] <Chairn> vulkan only defines enums?
21:24 <+bridge> [ddnet] <Chairn> oh ok
21:24 <+bridge> [ddnet] <Jupstar ✪> yes
21:25 <+bridge> [ddnet] <Chairn> then it's fine 🙂
21:25 <+bridge> [ddnet] <Jupstar ✪> or at least constant with a fixed name 😄
21:25 <+bridge> [ddnet] <Jupstar ✪> does c have enums? xd
21:25 <+bridge> [ddnet] <Chairn> no, only defines i think
21:26 <+bridge> [ddnet] <Chairn> ah, now your pr conflicts 😄
21:26 <+bridge> [ddnet] <Jupstar ✪> what might be worth noting in case u care
21:26 <+bridge> [ddnet] <Jupstar ✪> 
21:26 <+bridge> [ddnet] <Jupstar ✪> the backend produces arrays of error strings
21:26 <+bridge> [ddnet] <Jupstar ✪> bcs i cannot cancel the draw threads
21:26 <+bridge> [ddnet] <Jupstar ✪> so in theory there could be multiple errors
21:27 <+bridge> [ddnet] <Jupstar ✪> thats the reason i didnt merge robytes pr xDD
21:28 <+bridge> [ddnet] <Jupstar ✪> but my prs are always only merged after 5 years xd
21:28 <+bridge> [ddnet] <Jupstar ✪> im used to it xDD
21:28 <+bridge> [ddnet] <Chairn> which one?
21:28 <+bridge> [ddnet] <Robyt3> only two small conflicts though
21:28 <+bridge> [ddnet] <Jupstar ✪> everytime i add SDL stuff, something breaks lmao
21:29 <+bridge> [ddnet] <Chairn> well, 7k line files will more often conflict maybe 😄 ?
21:29 <+bridge> [ddnet] <Chairn> did you try splitting it?
21:29 <+bridge> [ddnet] <Robyt3> in backend_vulkan take your changes and add back `const` to the first argument, in menus_browser take my changes and add back `Localizable`
21:30 <+bridge> [ddnet] <Chairn> robyt, are you fine with his PR so taht we can include it in next release?
21:32 <+bridge> [ddnet] <Jupstar ✪> its kinda annoying tbh i dont really want to add headers
21:32 <+bridge> [ddnet] <Jupstar ✪> 
21:32 <+bridge> [ddnet] <Jupstar ✪> i could simply include .cpp files tho
21:32 <+bridge> [ddnet] <Jupstar ✪> 
21:32 <+bridge> [ddnet] <Jupstar ✪> there is lots of stuff that requires to know about other stuff
21:32 <+bridge> [ddnet] <Jupstar ✪> 
21:32 <+bridge> [ddnet] <Jupstar ✪> what i could do is completely lay out all variables into one class and then the functional stuff can be shared over multiple files
21:32 <+bridge> [ddnet] <Jupstar ✪> but tbh
21:32 <+bridge> [ddnet] <Jupstar ✪> just add c++20 modules xd
21:34 <+bridge> [ddnet] <Jupstar ✪> btw this isnt really a problem with the amount of lines
21:34 <+bridge> [ddnet] <Jupstar ✪> git is pretty good in understanding what really changed
21:51 <+bridge> [ddnet] <Robyt3> yeah, the remaining issue is more an issue with the console/textrender I guess
21:54 <+bridge> [ddnet] <Jupstar ✪> ah yeah fuck that stupid issue, maybe i can also simply disable it xD
21:54 <+bridge> [ddnet] <Jupstar ✪> then we dont have to deal with it
21:55 <+bridge> [ddnet] <Robyt3> would be easier I guess
21:55 <+bridge> [ddnet] <Jupstar ✪> next release in next year anyway
21:55 <+bridge> [ddnet] <Jupstar ✪> so no rush
21:55 <+bridge> [ddnet] <Robyt3> I'm not sure how good printing newlines to the terminal is also
21:55 <+bridge> [ddnet] <Robyt3> would mess with the console line format I guess
22:05 <+bridge> [ddnet] <Ryozuki> kek
22:05 <+bridge> [ddnet] <Ryozuki> true actually
22:05 <+bridge> [ddnet] <Ryozuki> it wont be until next year for another update
22:26 <+bridge> [ddnet] <Tomstar Thomas> https://t.me/pacexoitic
23:02 <+bridge> [ddnet] <deen> So? Poeple can still try it out in nightly
23:02 <+bridge> [ddnet] <Jupstar ✪> It's not really trying out tho^^
23:02 <+bridge> [ddnet] <deen> Some changes just fix a minor bug. Your changes rewrite the entire renderer 😄
23:03 <+bridge> [ddnet] <Jupstar ✪> It's just errors to screen
23:04 <+bridge> [ddnet] <Jupstar ✪> But tbf it would be even nicer to recover from these errors. On the other hand they mostly cause by 4k skins
23:04 <+bridge> [ddnet] <Jupstar ✪> Kinda annoying how they will be shared for ever now xd
