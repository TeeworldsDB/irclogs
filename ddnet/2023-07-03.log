00:06 < bridge_> <_voxeldoesart> what r u gonna do with this? :o
00:06 < bridge_> <teero777> cool animations :)
07:22 < bridge_> <cipy29> quantum computer "progress" is so funny
07:22 < bridge_> <cipy29> 
07:22 < bridge_> <cipy29> `In 2001, Shor's algorithm was demonstrated by a group at IBM, who factored 15 into 3Ã—5, using an NMR implementation of a quantum computer with 7 qubits.`
07:22 < bridge_> <cipy29> 
07:22 < bridge_> <cipy29> `Later, in 2012, the factorization of 21 was achieved.`
07:22 < bridge_> <cipy29> 
07:22 < bridge_> <cipy29> `In 2019, an attempt was made to factor the number 35 using Shor's algorithm on an IBM Q System One, but the algorithm failed because of accumulating errors.`
11:54 < bridge_> <ryozuki> dead chat
11:54 < bridge_> <ryozuki> all ill say is
11:54 < bridge_> <ryozuki> rust
12:08 < bridge_> <milkeeycat> all ill say is
12:08 < bridge_> <milkeeycat> python
12:12 < bridge_> <milkeeycat> ocalm
13:00 < bridge_> <gerdoe> https://media.discordapp.net/attachments/659789993178431550/1111246553852678144/IMG_2444.gif
13:01 < bridge_> <ryozuki> it also features fearless concurrency
13:09 < bridge_> <gerdoe> https://cdn.discordapp.com/attachments/293493549758939136/1125382912603332648/standard.gif
13:11 < bridge_> <ryozuki> nice
13:40 < bridge_> <chairn> we can expect RSA-4096 to be broken by 9999999AD then
14:32 < bridge_> <heinrich5991> https://www.youtube.com/watch?v=TGfQu0bQTKc
14:44 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1125406618918592543/20230703_144344.jpg
14:44 < bridge_> <ryozuki> weebs will get the rererence
14:46 < bridge_> <reitw> trustme crate is amazing
14:57 < bridge_> <ryozuki> ur missing a link
14:58 < bridge_> <ryozuki> https://crates.io/crates/trustme
14:58 < bridge_> <ryozuki> ah i seen this before
14:58 < bridge_> <ryozuki> or the same iteration of the joke
15:06 < bridge_> <patiga> https://crates.io/crates/totally-speedy-transmute is also a good one
15:06 < bridge_> <patiga> https://docs.rs/friendly_safety_buddy/0.1.0/src/friendly_safety_buddy/lib.rs.html#9
15:16 < bridge_> <_voxeldoesart> im not buying your product
16:22 < bridge_> <gerdoe> "Is Rust good for game development? Rust is good for everything. There are currently... five games written in Rust... and fifty game engines."
16:34 < bridge_> <ryozuki> its a humor vid
16:34 < bridge_> <ryozuki> i havent watched it yet
17:32 < bridge_> <louis.place> its not a product
17:32 < bridge_> <louis.place> its a minecraft server
17:36 < bridge_> <_voxeldoesart> rly
17:48 < bridge_> <ryozuki> its ai
17:54 < bridge_> <_voxeldoesart> you're ai
18:01 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1125456267629047828/die-shot.png
18:01 < bridge_> <ryozuki> take a glance at technological beauty
18:05 < bridge_> <_voxeldoesart> new fortnite map
18:10 < bridge_> <gerdoe> new t0 map
18:17 < bridge_> <Jupstar âœª> bloated ðŸ˜¬
18:19 < bridge_> <ryozuki> ðŸ˜¬
18:22 < bridge_> <jao187> whats that @ryozuki
18:23 < bridge_> <ryozuki> a amd cpu die
18:23 < bridge_> <ryozuki> its a picture of how the cpu looks
18:23 < bridge_> <ryozuki> but ofc making a pic of a die is rly hard
18:23 < bridge_> <ryozuki> its all tiny af
18:24 < bridge_> <ryozuki> 8bit cpu die
18:24 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1125462022046371860/8bit-computer_v1-16x9_p3pqzmXALF.png
18:24 < bridge_> <ryozuki> kek
18:24 < bridge_> <jao187> show intel
18:25 < bridge_> <ryozuki> 45y old cpu
18:25 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1125462224845144155/die-block-diagram.png
18:27 < bridge_> <chairn> wtf is that? branch predictor bigger than L1 cache?
18:29 < bridge_> <chairn> pentium M die
18:29 < bridge_> <chairn> https://cdn.discordapp.com/attachments/293493549758939136/1125463218857463898/image.png
18:29 < bridge_> <_voxeldoesart> https://github.com/Sycnex/Windows10Debloater
18:29 < bridge_> <_voxeldoesart> is this any good
18:31 < bridge_> <chairn> Haswell (2013) 8 core cpu @ryozuki , your picture lacks all the IO part
18:31 < bridge_> <chairn> https://cdn.discordapp.com/attachments/293493549758939136/1125463912079425647/haswell_e_die.jpg
18:32 < bridge_> <robyt3> I haven't used it, but I assume it does mostly the same as O&O ShutUp10+ except it's a command line tool
18:32 < bridge_> <robyt3> If you just want to debloat one PC then ShutUp10 is probably easier to use
18:33 < bridge_> <Jupstar âœª> @chairn work for intel in germany.. they got lots of money from the citizen. now i want to see smth
18:36 < bridge_> <chairn> sorry, i already have a job
18:36 < bridge_> <chairn> + i don't speak german
18:36 < bridge_> <Jupstar âœª> quit your job and learn german
18:37 < bridge_> <Jupstar âœª> but i assume they'd also take u without learning german
18:38 < bridge_> <chairn> i now work in hardware security, and let me tell you that intel is the worst company of all on this specific aspect ðŸ˜„
18:41 < bridge_> <ryozuki> its amd zen
18:43 < bridge_> <ryozuki> no more teacher?
18:43 < bridge_> <chairn> yes teacher
18:44 < bridge_> <chairn> research in hardware security
18:44 < bridge_> <chairn> ok, so that's a single core, not the whole die
18:45 < bridge_> <chairn> kinda weird that we can see how they designed each unit separetely while it's way less visible with Intel process
18:45 < bridge_> <chairn> kinda funny that we can see how they designed each unit separetely while it's way less visible with Intel process
18:54 < bridge_> <Jupstar âœª> see they need u the most ðŸ˜‚
18:55 < bridge_> <chairn> do you know the salary range?
18:55 < bridge_> <chairn> btw, i believe it's mostly production, not much R&D
18:56 < bridge_> <Jupstar âœª> then go to murica
18:56 < bridge_> <gerdoe> hm
18:56 < bridge_> <gerdoe> char8_t* instead of char* would be good
18:57 < bridge_> <Jupstar âœª> r u using c++20 or what?
18:57 < bridge_> <gerdoe> nah xd
18:57 < bridge_> <Jupstar âœª> https://en.cppreference.com/w/cpp/keyword/char8_t
18:57 < bridge_> <gerdoe> im about ddnet to c++20 switch
18:57 < bridge_> <Jupstar âœª> it wont solve any problem tho
18:58 < bridge_> <Jupstar âœª> the std fs does not respect the utf8
18:58 < bridge_> <gerdoe> there's nothing to solve anyway
18:58 < bridge_> <gerdoe> with chars
18:58 < bridge_> <gerdoe> compiler makes unnecessary things to work with char*
18:58 < bridge_> <gerdoe> cuz it can be any data
18:58 < bridge_> <gerdoe> any user data*
18:59 < bridge_> <heinrich5991> the std lib on windows can't handle utf8? sucks ðŸ˜¦
19:00 < bridge_> <Jupstar âœª> yep it sucks hard
19:00 < bridge_> <ryozuki> kek
19:00 < bridge_> <Jupstar âœª> that would have finally solved the annoying windows / other OS discrepancy for that
19:02 < bridge_> <ryozuki> @gerdoe https://www.smh.com.au/world/north-america/google-s-quantum-computer-instantly-makes-calculations-that-take-rivals-47-years-20230703-p5dlbp.html
19:02 < bridge_> <ryozuki> Google has developed a quantum computer that instantly makes calculations that would take the best existing supercomputers 47 years, in a breakthrough meant to establish beyond doubt that the experimental machines can outperform conventional rivals.
19:03 < bridge_> <ryozuki> > The researchers said it would take Frontier, the worldâ€™s leading supercomputer, 6.18 seconds to match a calculation from Googleâ€™s 53-qubit computer from 2019. In comparison, it would take 47.2 years to match its latest one.
19:05 < bridge_> <Jupstar âœª> time to learn quantum programming
19:05 < bridge_> <gerdoe> afair there's quantum computer emualtor somewhere xd
19:06 < bridge_> <heinrich5991> I hate to say it, but @ryozuki's favorite solution also solves this ðŸ˜„
19:06 < bridge_> <heinrich5991> I hate to say it, but @ryozuki's favorite word also solves this ðŸ˜„
19:06 < bridge_> <Jupstar âœª> why do u hate to say it xd
19:07 < bridge_> <Jupstar âœª> VULKAN WOULD HAVE SOLVED THIS
19:07 < bridge_> <heinrich5991> ðŸ˜„
19:07 < bridge_> <gerdoe> btw currently any non ascii symbol takes more than 1 byte in ddnet client code so translation can cut itself by buffer size xd
19:08 < bridge_> <Jupstar âœª> isnt that normal for utf8
19:08 < bridge_> <heinrich5991> yes, correct
19:09 < bridge_> <heinrich5991> that's expected, utf8 takes more than 1 bytes for each non-ascii symbol
19:09 < bridge_> <heinrich5991> what's not expected is the cut-off
19:09 < bridge_> <heinrich5991> if you find that, report it, so we can make the buffers larger
19:10 < bridge_> <Jupstar âœª> @gerdoe in rust use chars().count() to get the code point count
19:10 < bridge_> <ryozuki> https://tenor.com/view/marching-penguins-national-geographic-penguins-emperor-penguin-migration-on-the-move-gif-25268433
19:10 < bridge_> <gerdoe> yeah but its kinda... bruh
19:11 < bridge_> <gerdoe> i'll try to just enlarge buffer then
19:11 < bridge_> <Jupstar âœª> u can do * 4
19:11 < bridge_> <Jupstar âœª> then it should fit
19:11 < bridge_> <gerdoe> yep
19:11 < bridge_> <Jupstar âœª> r u working on your server mod again?
19:12 < bridge_> <gerdoe> nah im messing around ru translation
19:12 < bridge_> <gerdoe> chill[td] said belarussian translation also cuts
19:12 < bridge_> <Jupstar âœª> oh yeah defs fix that
19:12 < bridge_> <gerdoe> belarusian*
19:13 < bridge_> <ryozuki> https://tenor.com/view/dancing-ferris-rust-programming-gif-22216348
19:13 < bridge_> <robyt3> `UTF8_BYTE_LENGTH` instead of
19:13 < bridge_> <robyt3> `UTF8_BYTE_LENGTH` instead of 4
19:13 < bridge_> <robyt3> :bluekitty:
19:13 < bridge_> <Jupstar âœª> we have such a constant? xd
19:14 < bridge_> <robyt3> yes, was added with the IME changes
19:16 < bridge_> <ryozuki> thats :bluekitty:
19:16 < bridge_> <ryozuki> but its more :bluekitty: if u use rust
19:17 < bridge_> <ryozuki> anyway its kinda telling c++20 has no proper utf8 support
19:17 < bridge_> <Jupstar âœª> c++ is ahead of its time
19:17 < bridge_> <Jupstar âœª> when all humans only speak english, we dont need utf8
19:17 < bridge_> <Jupstar âœª> ðŸ˜‰
19:18 < bridge_> <ryozuki> :fuckyousnail:
19:20 < bridge_> <gerdoe> waitin for c++23
19:20 < bridge_> <ryozuki> ChillerDragon: did u know about this i made 7 years ago? https://github.com/edg-l/PyBot
19:22 < bridge_> <ryozuki> 7y already
19:22 < bridge_> <ryozuki> feels old
19:23 < bridge_> <ryozuki> https://github.com/edg-l/DDNet_Server_GUI
19:23 < bridge_> <ryozuki> lmao
19:23 < bridge_> <ryozuki> when i used to do stuff for windows
19:23 < bridge_> <ryozuki> lucky i graduated
19:25 < bridge_> <Jupstar âœª> lol, this is cool
19:25 < bridge_> <gerdoe> hm what about expanding all localized buffers by this utf8 constant
19:25 < bridge_> <chairn> int8_t ?
19:25 < bridge_> <gerdoe> is it good?
19:25 < bridge_> <gerdoe> nop
19:25 < bridge_> <chairn> never !
19:26 < bridge_> <Jupstar âœª> imo, it makes sense to wrap it, yes
19:26 < bridge_> <Jupstar âœª> sad
19:26 < bridge_> <Jupstar âœª> but ppl will forget it
19:26 < bridge_> <Jupstar âœª> its hard to do stuff that isnt standard xd
19:27 < bridge_> <gerdoe> i wanna pr it
19:27 < bridge_> <chairn> again? Last time they announced something like that, 24 hours later, someone proved that it was solvable with classic computer in a few seconds...
19:27 < bridge_> <gerdoe> i just don't know should i stay with old limits (like buffer size is strings max length now)
19:27 < bridge_> <gerdoe> or make new (and smaller)
19:27 < bridge_> <gerdoe> tighter strings
19:29 < bridge_> <gerdoe> alsoo copy-pasting `UTF8_BYTE_LENGTH` is kinda boring xd
19:29 < bridge_> <gerdoe> maybe it should be wrapped into macro?
19:29 < bridge_> <robyt3> That would be more than 500 changes so I wouldn't recommend it
19:30 < bridge_> <gerdoe> yeah i see
19:30 < bridge_> <gerdoe> 680 xd
19:30 < bridge_> <robyt3> Just updating whatever buffer is actually too small is easier
19:30 < bridge_> <Jupstar âœª> i mean one can introduce this without needing to replace everything ^^
19:31 < bridge_> <gerdoe> soo xd
19:32 < bridge_> <robyt3> If you find a specific string that's cut off, double its buffer size and call it a day
19:33 < bridge_> <gerdoe> okey
19:33 < bridge_> <ryozuki> @learath2 look! they want to waste precious memory!
19:34 < bridge_> <gerdoe> yay another 64 unused bytes for english localization users xd
19:37 < bridge_> <ryozuki> https://curves.xargs.org/
19:43 < bridge_> <ryozuki> https://github.com/WebKit/WebKit/blob/ab10a90523e06df54bbb8a98e1aed913f79d0af9/Source/JavaScriptCore/runtime/JSArrayBufferView.cpp#L269
19:43 < bridge_> <ryozuki> @jupeyy_keks lol check this out
19:43 < bridge_> <ryozuki> ArrayBuffer* JSArrayBufferView::slowDownAndWasteMemory()
19:44 < bridge_> <Jupstar âœª> ðŸ˜¬ ðŸ˜¬ ðŸ˜¬
19:49 < bridge_> <gerdoe> xd
21:48 < bridge_> <heinrich5991> have you seen https://libera.chat/news/matrix-deportalling, @ryozuki?
21:49 < bridge_> <chillerdragon> ryo c++ enjoyer reading whole WebKit sourcecode
21:49 < bridge_> <chillerdragon> (@ryozuki)
21:50 < bridge_> <ryozuki> no :o
21:51 < bridge_> <chillerdragon> Two discord users talking about matrix and irc bridges acting like they care axaxaxa
22:52 < bridge_> <Ewan> never seen chat service gatekeeping like thid
22:57 < bridge_> <ryozuki> @jupeyy_keks <https://github.com/WebKit/WebKit/blob/ab10a90523e06df54bbb8a98e1aed913f79d0af9/Source/JavaScriptCore/runtime/JSArrayBufferView.cpp#L385>
22:58 < bridge_> <ryozuki> ```cpp
22:58 < bridge_> <ryozuki> namespace WTF {
22:58 < bridge_> <ryozuki> 
22:58 < bridge_> <ryozuki> using namespace JSC;
22:58 < bridge_> <ryozuki> ```
22:58 < bridge_> <ryozuki> webkit is gold
22:58 < bridge_> <Jupstar âœª> Standard namespace for javascript related stuff ðŸ˜‰
22:59 < bridge_> <learath2> I've given up on modern programming, they can do whatever they want
22:59 < bridge_> <learath2> Use an entire gb of ram for a character for all I care
23:01 < bridge_> <Jupstar âœª> Blazingly slow and unsafe
23:10 < bridge_> <raf> Sorry for spamming but...
23:10 < bridge_> <raf> how can i change the tee skin and the nick?
23:17 < bridge_> <Ewan> why is this the channel you chose
23:18 < bridge_> <Ewan> you want to change them programmatically?
