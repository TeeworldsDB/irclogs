08:11 <+bridge_> [ddnet] <chillerdragon> Yes hehe
08:11 <+bridge_> [ddnet] <chillerdragon> (@Ryozuki)
09:11 <+bridge_> [ddnet] <fokkonaut> yes
09:11 <+bridge_> [ddnet] <fokkonaut> Well, with code changes
10:04 <+ChillerDragon> https://zillyhuhn.com/cs/.1647507839.png
10:04 <+ChillerDragon> what does the checkmark mean again? isnt that official ddnet servers or something?
10:04 <+bridge_> [ddnet] <deen> yeah, means ddnet or kog
10:04 <+ChillerDragon> interesting
10:05 <+ChillerDragon> @fokkonaut ?xd
10:05 <+bridge_> [ddnet] <deen> that's not one of ours, so it's kog
10:05 <+bridge_> [ddnet] <fokkonaut> on kog tab i am
10:06 <+ChillerDragon> xxxD
11:28 <+bridge_> [ddnet] <Jupstar> mhh so sad that c++ standard is still so hard behind with utf8 support
11:28 <+bridge_> [ddnet] <Jupstar> tried to make regular expressions with utf8 support, but not even c++20 adds it for std::regex
11:28 <+bridge_> [ddnet] <Jupstar> https://cdn.discordapp.com/attachments/293493549758939136/953963064947011614/unknown.png
11:30 <+ChillerDragon> ouuu std::regex sounds cool tho
11:30 <+bridge_> [ddnet] <Jupstar> yeah especially multiple excludes are nice üòÑ
11:30 <+ChillerDragon> my text parsing become really ugly latley i str_find the shit out of strings xd
11:30 <+bridge_> [ddnet] <Ryozuki> haha std::regex is slower than starting php and using regex there
11:31 <+ChillerDragon> lmao
11:31 <+bridge_> [ddnet] <Ryozuki> @Not Keks rust has first class utf8 support and fast regex
11:31 <+bridge_> [ddnet] <Jupstar> but isnt it implementation dependent?
11:31 <+bridge_> [ddnet] <Jupstar> or is it an API flaw?
11:31 <+bridge_> [ddnet] <Ryozuki> i think it uses std::string right
11:32 <+bridge_> [ddnet] <Ryozuki> it doesnt use string_view
11:32 <+bridge_> [ddnet] <Ryozuki> so no optimizations
11:32 <+bridge_> [ddnet] <Jupstar> yeah they want to add string view support, soon‚Ñ¢Ô∏è
11:32 <+bridge_> [ddnet] <Jupstar> xd
11:32 <+bridge_> [ddnet] <Ryozuki> https://stackoverflow.com/questions/52697265/why-is-c-regex-so-slow
11:32 <+bridge_> [ddnet] <Jupstar> but honestly we have like 1000 entries, i dont really notice the slowness
11:32 <+bridge_> [ddnet] <Jupstar> vscode's regex is fast
11:32 <+bridge_> [ddnet] <Jupstar> i generally am impressed by its file search speed
11:33 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/953964175368024084/unknown.png
11:33 <+bridge_> [ddnet] <Ryozuki> the top
11:33 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/953964186185117756/unknown.png
11:33 <+bridge_> [ddnet] <Ryozuki> the bottom of the list
11:33 <+bridge_> [ddnet] <Ryozuki> c++ stl slower than python
11:33 <+bridge_> [ddnet] <Ryozuki> <https://github.com/mariomka/regex-benchmark>
11:33 <+bridge_> [ddnet] <Jupstar> xd
11:33 <+ChillerDragon> vscode on top
11:33 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/953964376619118652/unknown.png
11:33 <+bridge_> [ddnet] <Ryozuki> on the optimized rust wins
11:33 <+bridge_> [ddnet] <Ryozuki> :BASED:
11:34 <+bridge_> [ddnet] <Jupstar> yeah nice
11:34 <+bridge_> [ddnet] <Jupstar> c++ has to hurry up a bit
11:34 <+bridge_> [ddnet] <Jupstar> not like its impossible to catch up
11:34 <+bridge_> [ddnet] <deen> Python has everything interesting like this implemented in C
11:34 <+bridge_> [ddnet] <deen> so it mostly depends on what algo and optimizations, not language
11:34 <+bridge_> [ddnet] <Ryozuki> i wonder if they include init time
11:35 <+bridge_> [ddnet] <Ryozuki> in the bench
11:35 <+bridge_> [ddnet] <Ryozuki> e.g starting python
11:35 <+bridge_> [ddnet] <Ryozuki> xd
11:35 <+bridge_> [ddnet] <Ryozuki> > Measuring is done inside the programs to avoid include startup, reading and writing times on results.
11:35 <+bridge_> [ddnet] <Ryozuki> oh it says it
11:35 <+ChillerDragon> how does :BASED: look like?
11:35 <+ChillerDragon> ryo send image
11:35 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/953964853423407124/unknown.png
11:36 <+ChillerDragon> ty
11:36 <+bridge_> [ddnet] <Jupstar> xd
11:36 <+bridge_> [ddnet] <Ryozuki> here u can find more https://betterttv.com/emotes/shared/search?query=based
11:37 <+ChillerDragon> https://cdn.betterttv.net/emote/619b0ca7b50549e7e5005948/3x
11:37 <+bridge_> [ddnet] <Ryozuki> xd
11:38 <+bridge_> [ddnet] <Jupstar> https://benchmarksgame-team.pages.debian.net/benchmarksgame/performance/regexredux.html
11:38 <+ChillerDragon> https://cdn.betterttv.net/emote/5f88317183a3cf5d503f83c6/3x
11:38 <+bridge_> [ddnet] <Ryozuki> well if they use their own impl of regex i guess it will be faster
11:39 <+bridge_> [ddnet] <Ryozuki> but c++ std regex is not
11:39 <+bridge_> [ddnet] <Ryozuki> xddd
11:39 <+bridge_> [ddnet] <Jupstar> ^^
11:39 <+bridge_> [ddnet] <Jupstar> well we could use boost regex with unicode support, but is always annoying to add dependencies
11:39 <+bridge_> [ddnet] <Ryozuki> i wonder if C impl optimizes for ascii only sometimes
11:39 <+bridge_> [ddnet] <Ryozuki> in rust its always utf8
11:39 <+bridge_> [ddnet] <Jupstar> but boost is really useful xd
11:39 <+bridge_> [ddnet] <Ryozuki> isnt boost like giant
11:39 <+bridge_> [ddnet] <Jupstar> yes
11:39 <+bridge_> [ddnet] <Ryozuki> like adding a second stdlib
11:40 <+bridge_> [ddnet] <Ryozuki> xd
11:40 <+bridge_> [ddnet] <Jupstar> yeah
11:40 <+bridge_> [ddnet] <Jupstar> but a useful one xD
11:40 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/953966124016496690/unknown.png
11:40 <+bridge_> [ddnet] <Ryozuki> the c code looks like some over optimized stuff
11:41 <+bridge_> [ddnet] <Ryozuki> i doubt it has real use case
11:41 <+bridge_> [ddnet] <Jupstar> i think all code looks like it
11:41 <+bridge_> [ddnet] <Jupstar> rust is also allowed to use unsafe operations
11:41 <+bridge_> [ddnet] <deen> Typical problem with benchmarks: https://en.wikipedia.org/wiki/Goodhart%27s_law
11:42 <+bridge_> [ddnet] <Ryozuki> https://benchmarksgame-team.pages.debian.net/benchmarksgame/program/regexredux-rust-6.html
11:42 <+bridge_> [ddnet] <Jupstar> just always trade everything for performance xd
11:42 <+bridge_> [ddnet] <Ryozuki> the top answer doesnt use unsafe
11:42 <+bridge_> [ddnet] <Jupstar> but still looks pretty similar to me
11:42 <+bridge_> [ddnet] <Jupstar> to the c code
11:42 <+bridge_> [ddnet] <Ryozuki> i dont see a malloc with a explicit size
11:42 <+bridge_> [ddnet] <Ryozuki> xd
11:43 <+bridge_> [ddnet] <Ryozuki> let mut input = Vec::with_capacity(51 * (1 << 20));
11:43 <+bridge_> [ddnet] <Ryozuki> oh well
11:43 <+bridge_> [ddnet] <Ryozuki> i guess its the same
11:43 <+bridge_> [ddnet] <Ryozuki> xd
11:44 <+bridge_> [ddnet] <Jupstar> i still think c++ should hurry up a bit, independent of good speed bad speed
11:44 <+bridge_> [ddnet] <Jupstar> 
11:44 <+bridge_> [ddnet] <Jupstar> std::filesystem should also take u8strings and magically make utf8 work cross plattform
11:44 <+bridge_> [ddnet] <Jupstar> its kinda annoying to have so many #ifdef branches in our code
11:44 <+bridge_> [ddnet] <Ryozuki> oh
11:44 <+bridge_> [ddnet] <Ryozuki> i found an interesting rant about abi today
11:45 <+bridge_> [ddnet] <Ryozuki> https://news.ycombinator.com/item?id=30704642
11:45 <+bridge_> [ddnet] <Ryozuki> @Learath2 read this
11:45 <+bridge_> [ddnet] <Ryozuki> xd
11:45 <+bridge_> [ddnet] <Jupstar> he talks about c? XD
11:45 <+bridge_> [ddnet] <Ryozuki> @Not Keks about c being the protocol every language needs to be able to talk to
11:45 <+bridge_> [ddnet] <Ryozuki> > C is the lingua franca of programming. We must all speak C, and therefore C is not just a programming language anymore ‚Äì it‚Äôs a protocol that every general-purpose programming language needs to speak.
11:46 <+bridge_> [ddnet] <Jupstar> thats kinda true yeah üòÑ
11:46 <+bridge_> [ddnet] <Ryozuki> read it
11:46 <+bridge_> [ddnet] <Ryozuki> its a good read
11:46 <+bridge_> [ddnet] <Ryozuki> xd
11:46 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/953967542181969940/abi-kiss.png
11:47 <+bridge_> [ddnet] <Ryozuki> > My problem is that C was elevated to a role of prestige and power, its reign so absolute and eternal that it has completely distorted the way we speak to each other. Rust and Swift cannot simply speak their native and comfortable tongues ‚Äì they must instead wrap themselves in a grotesque simulacra of C‚Äôs skin and make their flesh undulate in the same ways it does.
11:52 <+bridge_> [ddnet] <c0d3d3v> https://github.com/mariomka/regex-benchmark/compare/optimized
11:52 <+bridge_> [ddnet] <c0d3d3v> the optimization step is outstanding xD
11:52 <+bridge_> [ddnet] <c0d3d3v> https://github.com/mariomka/regex-benchmark/compare/optimized
11:52 <+bridge_> [ddnet] <c0d3d3v> the optimization step is outstanding xD (scroll to the bottom)
11:53 <+bridge_> [ddnet] <Jupstar> ah that also anwsers ryos question
11:53 <+bridge_> [ddnet] <Jupstar> https://cdn.discordapp.com/attachments/293493549758939136/953969248777142322/unknown.png
11:53 <+bridge_> [ddnet] <Jupstar> you can just disable unicode
11:53 <+bridge_> [ddnet] <Ryozuki> xd
12:00 <+bridge_> [ddnet] <c0d3d3v> it is part of the task https://benchmarksgame-team.pages.debian.net/benchmarksgame/description/regexredux.html#regexredux
12:08 <+bridge_> [ddnet] <Learath2> This is quite silly, it's not that C was arbitrarily elevated to the position by some outside power. It is the de-facto protocol because it's simple and widely implemented. Not because a secret cabal of programmers conspired to enforce C supremacy
12:08 <+bridge_> [ddnet] <Jupstar> xDD
12:08 <+bridge_> [ddnet] <Ryozuki> nobody said anything about a conspiracy
12:08 <+bridge_> [ddnet] <Ryozuki> ur missing the point
12:09 <+bridge_> [ddnet] <Jupstar> it was just a language close to assembly that was successful
12:09 <+bridge_> [ddnet] <Jupstar> thats the simple reason
12:10 <+bridge_> [ddnet] <Ryozuki> that post comes because https://thephd.dev/to-save-c-we-must-save-abi-fixing-c-function-abi
12:11 <+bridge_> [ddnet] <Ryozuki> and the abi mess causes problems on other languages
12:11 <+bridge_> [ddnet] <Ryozuki> like rust
12:11 <+bridge_> [ddnet] <Ryozuki> https://github.com/rust-lang/rust/issues/54341
12:13 <+bridge_> [ddnet] <Ryozuki> rust also has 170~ target triplets
12:13 <+bridge_> [ddnet] <Ryozuki> due to different abis
12:13 <+bridge_> [ddnet] <Ryozuki> the abi world is beautiful
12:14 <+bridge_> [ddnet] <Learath2> No one is stopping the author for saving us from this lunacy by convincing 600 disperate parties to adopt a new sane abi that people definitely wont complain about in 50 years
12:14 <+bridge_> [ddnet] <Ryozuki> where is the xkcd
12:14 <+bridge_> [ddnet] <Ryozuki> https://xkcd.com/927/
12:14 <+bridge_> [ddnet] <Jupstar> yeah thats a true thing
12:15 <+bridge_> [ddnet] <Jupstar> when i look at GPUs... they give a shit about c alignment, you gotta request it for every device and code to work for every one
12:16 <+bridge_> [ddnet] <Learath2> The thing about using C with it's technically undefined ABI and the mess of compilers and implementation specific magic as the FFI is just that it works. I doubt anyone actually actively likes the fact that we are stuck like this
12:17 <+bridge_> [ddnet] <Ryozuki> @Learath2 https://en.wikipedia.org/wiki/Interface_description_language
12:17 <+bridge_> [ddnet] <Ryozuki> :monkalaugh:
12:18 <+bridge_> [ddnet] <Learath2> Maybe one day if someone manages to convince microsoft to drop almost 2 decades of backwards compatibility we can move to an IDL
12:19 <+bridge_> [ddnet] <Jupstar> dev once for android and you'll hate JNI xd
12:19 <+bridge_> [ddnet] <Jupstar> i'd already be happy if they finally allow c11 XD
12:19 <+bridge_> [ddnet] <Learath2> One day hopefully
12:20 <+bridge_> [ddnet] <TsÊáíÊï£> hi smart people
12:20 <+bridge_> [ddnet] <Learath2> Hi smart guy
12:20 <+bridge_> [ddnet] <TsÊáíÊï£> üòá
12:20 <+bridge_> [ddnet] <Ryozuki> Hi non-rust user
12:20 <+bridge_> [ddnet] <Ryozuki> :BASED:
12:20 <+bridge_> [ddnet] <Learath2> Xenophobic
12:20 <+bridge_> [ddnet] <TsÊáíÊï£> I just rusty at rust
12:20 <+bridge_> [ddnet] <Jupstar> Hi game developer
12:21 <+bridge_> [ddnet] <Ryozuki> Hi vulkan developer
12:21 <+bridge_> [ddnet] <Jupstar> Hi rust webasm developer
12:21 <+bridge_> [ddnet] <Ryozuki> :monkaS:
12:21 <+bridge_> [ddnet] <Ryozuki> @Learath2 hi UB enjoyer
12:21 <+bridge_> [ddnet] <Ryozuki> :PepeA:
12:21 <+bridge_> [ddnet] <TsÊáíÊï£> I spend a day deciding how should i model friend relationship in mongodb
12:22 <+bridge_> [ddnet] <TsÊáíÊï£> üò±
12:22 <+bridge_> [ddnet] <Ryozuki> imagine using nosql
12:23 <+bridge_> [ddnet] <Ryozuki> https://www.youtube.com/watch?v=b2F-DItXtZs
12:23 <+bridge_> [ddnet] <TsÊáíÊï£> I hate SQL with raging passion
12:23 <+bridge_> [ddnet] <Ryozuki> listen to this based youuber
12:23 <+bridge_> [ddnet] <Ryozuki> > "Mongo DB handles web scale. You turn it on and it scales right up"
12:23 <+bridge_> [ddnet] <Ryozuki> > "shards are the secret ingredient in the web-scale sauce; they just work."
12:23 <+bridge_> [ddnet] <Ryozuki> i love this parody
12:25 <+bridge_> [ddnet] <TsÊáíÊï£> I'm scared of sharding tbh
12:28 <+bridge_> [ddnet] <TsÊáíÊï£> Btw i submitted my system architecture to bilibili. They hit me back with a risk analysis. In the report they said we got a robust and experienced team with common and manageable stack.
12:29 <+bridge_> [ddnet] <TsÊáíÊï£> While the team is me and I hate SQL
12:29 <+bridge_> [ddnet] <TsÊáíÊï£> :pepeH:
12:30 <+bridge_> [ddnet] <Jupstar> doesnt it depend on the task anyway what you choose?
12:30 <+bridge_> [ddnet] <Jupstar> friend relationship probs makes sense in a relational database xd
12:31 <+bridge_> [ddnet] <TsÊáíÊï£> But I really don't want sql:justatest:
12:31 <+bridge_> [ddnet] <Jupstar> just store the mongodb key in the sql database
12:31 <+bridge_> [ddnet] <Jupstar> then you have both xd
12:31 <+bridge_> [ddnet] <TsÊáíÊï£> I just made an array of subdocuments describing all friends of a user
12:32 <+bridge_> [ddnet] <TsÊáíÊï£> Need transaction to keep two users in sync, but the read is probably travial and fast enough.
12:32 <+bridge_> [ddnet] <Learath2> Relationships in a non-relational db, that is quite ironic, don't you think? :D
12:33 <+bridge_> [ddnet] <TsÊáíÊï£> üòá
12:33 <+bridge_> [ddnet] <TsÊáíÊï£> But i hate relationship
12:33 <+bridge_> [ddnet] <TsÊáíÊï£> That's why I'm still single
12:33 <+bridge_> [ddnet] <Jupstar> thats the spirit
12:33 <+bridge_> [ddnet] <Jupstar> dont use databases
12:33 <+bridge_> [ddnet] <Jupstar> use GPU VRAM
12:33 <+bridge_> [ddnet] <Jupstar> query over shaders
12:36 <+bridge_> [ddnet] <Learath2> Fwiw I think your approach is what I'd do aswell. I don't really do web scale mongodb magic much anymore though so grain of salt required
12:37 <+bridge_> [ddnet] <TsÊáíÊï£> I never made anything that scales.
12:37 <+bridge_> [ddnet] <Jupstar> xD in https://thephd.dev/to-save-c-we-must-save-abi-fixing-c-function-abi#-4
12:37 <+bridge_> [ddnet] <Jupstar> it kinda looks like he is using comic sans in his editor xD
12:37 <+bridge_> [ddnet] <Learath2> Do you actually need transactions? Is there really harm if things fall slightly out of sync?
12:37 <+bridge_> [ddnet] <TsÊáíÊï£> Probably not
12:39 <+bridge_> [ddnet] <TsÊáíÊï£> I manage blocked user in the same array btw
12:40 <+bridge_> [ddnet] <TsÊáíÊï£> So if you block someone you are actually adding them as friends with a blocked state
12:40 <+bridge_> [ddnet] <Learath2> I think(tm) leaving the update of the 2nd party on a "best effort" should be fine. Worst case on the next api call he will be informed that he got unfriended anyway
12:40 <+bridge_> [ddnet] <deen> oh no üòÑ
12:41 <+bridge_> [ddnet] <Jupstar> here comes our SQL dev xd
12:41 <+bridge_> [ddnet] <Learath2> I actually like sql, am I weird?
12:41 <+bridge_> [ddnet] <Learath2> Thinking about things in terms of their relations with other things sounds like the sane approach to me :P
12:41 <+bridge_> [ddnet] <TsÊáíÊï£> i think im the weird one from what i can tell
12:42 <+bridge_> [ddnet] <Learath2> NoSQL is very common. It's web scale even
12:42 <+bridge_> [ddnet] <TsÊáíÊï£> what does web scale even mean
12:42 <+bridge_> [ddnet] <Learath2> No idea, it's what everyone says
12:43 <+bridge_> [ddnet] <Jupstar> just take it litteraly
12:43 <+bridge_> [ddnet] <Ryozuki> watch the video to understand
12:43 <+bridge_> [ddnet] <Jupstar> xd
12:43 <+bridge_> [ddnet] <TsÊáíÊï£> can you not spin up more mysql nodes to handle more loads :greenthing:
12:44 <+bridge_> [ddnet] <Jupstar> joining can be slow
12:44 <+bridge_> [ddnet] <Ryozuki> you dont need reliability, ACID is not web scale
12:44 <+bridge_> [ddnet] <Ryozuki> xd
12:44 <+bridge_> [ddnet] <Ryozuki> "it uses joints and writes to disks"
12:44 <+bridge_> [ddnet] <Jupstar> xdD
12:45 <+bridge_> [ddnet] <TsÊáíÊï£> i have a question
12:45 <+bridge_> [ddnet] <Jupstar> i have many questions
12:45 <+bridge_> [ddnet] <Jupstar> xd
12:46 <+bridge_> [ddnet] <TsÊáíÊï£> ok i don't have questions anymore
12:46 <+bridge_> [ddnet] <TsÊáíÊï£> thanks bud, that helps a lot
12:48 <+bridge_> [ddnet] <Jupstar> @TsFreddie what is the physics engine doing tho?
12:48 <+bridge_> [ddnet] <TsÊáíÊï£> which
12:48 <+bridge_> [ddnet] <TsÊáíÊï£> where
12:48 <+bridge_> [ddnet] <TsÊáíÊï£> when
12:48 <+bridge_> [ddnet] <Jupstar> thought u do client side prediction
12:48 <+bridge_> [ddnet] <Jupstar> of a physics engine
12:48 <+bridge_> [ddnet] <TsÊáíÊï£> ok
12:49 <+bridge_> [ddnet] <TsÊáíÊï£> then
12:49 <+bridge_> [ddnet] <TsÊáíÊï£> i have no idea
12:49 <+bridge_> [ddnet] <TsÊáíÊï£> unity does its thing
12:49 <+bridge_> [ddnet] <Jupstar> ez
12:49 <+bridge_> [ddnet] <TsÊáíÊï£> and i hate it
12:49 <+bridge_> [ddnet] <Jupstar> just embedd electron and use a javascript physics engine
12:49 <+bridge_> [ddnet] <TsÊáíÊï£> we did actually
12:50 <+bridge_> [ddnet] <TsÊáíÊï£> we did have a v8 in unity
12:50 <+bridge_> [ddnet] <Jupstar> xd
12:50 <+bridge_> [ddnet] <TsÊáíÊï£> for hot swap OTA update
12:51 <+bridge_> [ddnet] <Jupstar> did you host the engine online or what?
12:51 <+bridge_> [ddnet] <TsÊáíÊï£> i mean, js are just text. if we can send text to an already running client. we can update it
12:52 <+bridge_> [ddnet] <TsÊáíÊï£> i mean, js are just text. if we can send text to an already running client. we can run it
12:52 <+bridge_> [ddnet] <Jupstar> interesting approach
12:52 <+bridge_> [ddnet] <Jupstar> arent you targeting mobile phones?
12:52 <+bridge_> [ddnet] <TsÊáíÊï£> ye, chinese mobile games likes to do this
12:52 <+bridge_> [ddnet] <TsÊáíÊï£> although most of them use lua
12:53 <+bridge_> [ddnet] <TsÊáíÊï£> I did convince the designer guys not to update gameplay logic, so only the UI part are written in typescript
12:53 <+bridge_> [ddnet] <Ryozuki> sound like a good place to do some RCE
12:53 <+bridge_> [ddnet] <TsÊáíÊï£> well if i control the update server
12:53 <+bridge_> [ddnet] <TsÊáíÊï£> I am the RCE
12:54 <+bridge_> [ddnet] <TsÊáíÊï£> also we use v8 because i hate lua
12:54 <+bridge_> [ddnet] <TsÊáíÊï£> as long as the core gameplay doesn't run on js, it should be fine.
12:55 <+bridge_> [ddnet] <TsÊáíÊï£> stuttering menu isn't really a big deal
12:55 <+bridge_> [ddnet] <Jupstar> tru, nobody cares about UI anyway xd
12:55 <+bridge_> [ddnet] <TsÊáíÊï£> and we are probably gonna limit the fps to 30 in menu anyway
12:55 <+bridge_> [ddnet] <Jupstar> are you like the lead developer, or are the other devs just nobos, that you decide so much üòÑ
12:55 <+bridge_> [ddnet] <TsÊáíÊï£> i'm the lead developer
12:55 <+bridge_> [ddnet] <Ryozuki> :PepeA:
12:55 <+bridge_> [ddnet] <Jupstar> legend
12:56 <+bridge_> [ddnet] <TsÊáíÊï£> because i'm the only developer for three months
12:56 <+bridge_> [ddnet] <TsÊáíÊï£> then we hired more
12:56 <+bridge_> [ddnet] <Ryozuki> oh
12:56 <+bridge_> [ddnet] <Jupstar> xDD
12:56 <+bridge_> [ddnet] <TsÊáíÊï£> and they are stuck with my decision
12:56 <+bridge_> [ddnet] <Ryozuki> then im a lead developer too
12:56 <+bridge_> [ddnet] <Ryozuki> :greenthing:
12:56 <+bridge_> [ddnet] <TsÊáíÊï£> :kek:
12:56 <+bridge_> [ddnet] <Jupstar> run electron inside electron
12:56 <+bridge_> [ddnet] <TsÊáíÊï£> we don't really have good programmers tbh
12:57 <+bridge_> [ddnet] <TsÊáíÊï£> the salary is too low
12:57 <+bridge_> [ddnet] <TsÊáíÊï£> I'm just a 0 experienced wildcard and i don't want to work 15 hours a day to keep my job
12:58 <+bridge_> [ddnet] <Jupstar> what is wildcard in this context?
12:58 <+bridge_> [ddnet] <TsÊáíÊï£> idk
12:58 <+bridge_> [ddnet] <Jupstar> xD
12:58 <+bridge_> [ddnet] <Ryozuki> u mean u have no previous exp thats why ur in this job
12:58 <+bridge_> [ddnet] <TsÊáíÊï£> since they all suck. i can do whatever i want
12:58 <+bridge_> [ddnet] <Ryozuki> ah
12:58 <+bridge_> [ddnet] <TsÊáíÊï£> even tho i have 0 experience
12:58 <+bridge_> [ddnet] <Ryozuki> same here
12:58 <+bridge_> [ddnet] <Ryozuki> xdddd
12:58 <+bridge_> [ddnet] <Jupstar> kinda sounds cool tbh
12:58 <+bridge_> [ddnet] <Ryozuki> i made my company go from windows server 2008 to debian 11
12:58 <+bridge_> [ddnet] <Jupstar> money doesnt always matter
12:59 <+bridge_> [ddnet] <Jupstar> ez
12:59 <+bridge_> [ddnet] <Ryozuki> :monkaS:
12:59 <+bridge_> [ddnet] <TsÊáíÊï£> ye. but arrogance can get to you sometimes.
12:59 <+bridge_> [ddnet] <Ryozuki> ye stay humble
12:59 <+bridge_> [ddnet] <TsÊáíÊï£> trying
12:59 <+bridge_> [ddnet] <Ryozuki> u can just curse them in ur inner voice
13:00 <+bridge_> [ddnet] <TsÊáíÊï£> i don't curse irl so i'm fine
13:00 <+bridge_> [ddnet] <TsÊáíÊï£> scratch that, i curse in english. and my brain doesn't hate it.
13:00 <+bridge_> [ddnet] <TsÊáíÊï£> i forgot english curse words are curse words
13:00 <+bridge_> [ddnet] <Ryozuki> do u bow to them 3 times
13:00 <+bridge_> [ddnet] <Ryozuki> and how much deep u bow
13:00 <+bridge_> [ddnet] <Ryozuki> xd
13:00 <+bridge_> [ddnet] <Ryozuki> üôá
13:00 <+bridge_> [ddnet] <TsÊáíÊï£> i'm not apologizing japanese style all day
13:01 <+bridge_> [ddnet] <TsÊáíÊï£> speaking of arrogance
13:02 <+bridge_> [ddnet] <TsÊáíÊï£> i think sometime you need to act egomaniac to make people convinced of your decision :kek:
13:02 <+bridge_> [ddnet] <TsÊáíÊï£> as a 0 experienced worker
13:03 <+bridge_> [ddnet] <Jupstar> you are not that unexperienced
13:04 <+bridge_> [ddnet] <fokkonaut> not keks
13:04 <+bridge_> [ddnet] <TsÊáíÊï£> well if i'm doing interviews i'm probably worst than 0 exp
13:04 <+bridge_> [ddnet] <Ryozuki> i did interviews and i convinced some ppl of the greatness of rust
13:05 <+bridge_> [ddnet] <Ryozuki> but i didnt get chosen
13:05 <+bridge_> [ddnet] <Ryozuki> so i probs will stop it
13:05 <+bridge_> [ddnet] <Ryozuki> xd
13:05 <+bridge_> [ddnet] <fokkonaut> :huh:
13:05 <+bridge_> [ddnet] <TsÊáíÊï£> maybe they hate rust and just don't want to hurt you
13:05 <+bridge_> [ddnet] <TsÊáíÊï£> maybe they hate rust and choose not to hurt you
13:05 <+bridge_> [ddnet] <fokkonaut> ‚òùÔ∏è
13:05 <+bridge_> [ddnet] <Ryozuki> they were python devs
13:05 <+bridge_> [ddnet] <Ryozuki> so
13:05 <+bridge_> [ddnet] <Ryozuki> :monkalaugh:
13:05 <+bridge_> [ddnet] <TsÊáíÊï£> so they probably hate rust
13:05 <+bridge_> [ddnet] <TsÊáíÊï£> :kek:
13:05 <+bridge_> [ddnet] <fokkonaut> :justatest:
13:06 <+bridge_> [ddnet] <Ryozuki> they probs dont know it
13:06 <+bridge_> [ddnet] <TsÊáíÊï£> fair enough
13:06 <+bridge_> [ddnet] <fokkonaut> :feelsbadman:
13:06 <+bridge_> [ddnet] <Jupstar> Remember, most devs are average
13:06 <+bridge_> [ddnet] <Ryozuki> xd
13:06 <+bridge_> [ddnet] <Jupstar> they dont do open source in their freetime
13:06 <+bridge_> [ddnet] <Jupstar> they work to work
13:06 <+bridge_> [ddnet] <Ryozuki> thats a shocking true
13:06 <+bridge_> [ddnet] <Ryozuki> truth*
13:06 <+bridge_> [ddnet] <TsÊáíÊï£> man i wish the average is better than I think
13:07 <+bridge_> [ddnet] <Ryozuki> thats why the ppl who look out for devs skip certain ppl with less xp
13:07 <+bridge_> [ddnet] <Ryozuki> because they think (and probs right) that most normies only learn while working
13:07 <+bridge_> [ddnet] <Ryozuki> so they miss on hidden gems like me
13:07 <+bridge_> [ddnet] <Ryozuki> :BASED:
13:07 <+bridge_> [ddnet] <TsÊáíÊï£> can we hire you
13:08 <+bridge_> [ddnet] <Ryozuki> the language barrier is hard
13:08 <+bridge_> [ddnet] <Ryozuki> otherwise if u paid me everything i would think it
13:08 <+bridge_> [ddnet] <Ryozuki> xd
13:08 <+bridge_> [ddnet] <TsÊáíÊï£> you'll only need to talk to me
13:08 <+bridge_> [ddnet] <Ryozuki> but u use unity
13:08 <+bridge_> [ddnet] <Ryozuki> i dont like that much c#
13:08 <+bridge_> [ddnet] <Ryozuki> i only ever used to mod tshock
13:08 <+bridge_> [ddnet] <Ryozuki> plugins
13:08 <+bridge_> [ddnet] <TsÊáíÊï£> :justatest:
13:09 <+bridge_> [ddnet] <TsÊáíÊï£> i didn't choose to use unity okay
13:09 <+bridge_> [ddnet] <Ryozuki> https://github.com/TerraPlugins
13:09 <+bridge_> [ddnet] <Ryozuki> that was so long ago
13:09 <+bridge_> [ddnet] <Ryozuki> all these are mine
13:09 <+bridge_> [ddnet] <Jupstar> also question is if salaery is even enough to live in europe
13:09 <+bridge_> [ddnet] <Jupstar> europe probs a bit more expensive
13:09 <+bridge_> [ddnet] <TsÊáíÊï£> just don't live in europe
13:09 <+bridge_> [ddnet] <Jupstar> ez
13:10 <+bridge_> [ddnet] <Jupstar> china is cool from culture
13:10 <+bridge_> [ddnet] <Jupstar> but i dont like the government
13:10 <+bridge_> [ddnet] <Ryozuki> "git pull", 2 hours later oh it finished
13:10 <+bridge_> [ddnet] <TsÊáíÊï£> it's probably not gonne be enough to live in beijing tbh
13:10 <+bridge_> [ddnet] <Ryozuki> the great wall :monkalaugh:
13:10 <+bridge_> [ddnet] <Ryozuki> doesnt china have a silicon valley
13:10 <+bridge_> [ddnet] <Ryozuki> ?
13:10 <+bridge_> [ddnet] <TsÊáíÊï£> i don't think that can stop you
13:11 <+bridge_> [ddnet] <TsÊáíÊï£> i'm still here afterall
13:11 <+bridge_> [ddnet] <Jupstar> bcs you are over average xD
13:11 <+bridge_> [ddnet] <Jupstar> most ppl couldnt do it xD
13:11 <+bridge_> [ddnet] <TsÊáíÊï£> are you saying Ryozuki is average
13:11 <+bridge_> [ddnet] <Ryozuki> :monkaS:
13:11 <+bridge_> [ddnet] <TsÊáíÊï£> that's mean
13:11 <+bridge_> [ddnet] <Jupstar> ryo has rust-proxy
13:11 <+bridge_> [ddnet] <Jupstar> its fine
13:12 <+bridge_> [ddnet] <Ryozuki> tf is that
13:12 <+bridge_> [ddnet] <Ryozuki> xd
13:12 <+bridge_> [ddnet] <Jupstar> i dunno
13:12 <+bridge_> [ddnet] <Ryozuki> i have ryo-os
13:12 <+bridge_> [ddnet] <Jupstar> a proxy written in rust
13:12 <+bridge_> [ddnet] <TsÊáíÊï£> show me your kernel
13:12 <+bridge_> [ddnet] <Ryozuki> ah
13:12 <+bridge_> [ddnet] <Ryozuki> but im stuck cuz the next stuff is rly complicated
13:12 <+bridge_> [ddnet] <Ryozuki> i need to implement context switches
13:12 <+bridge_> [ddnet] <Ryozuki> and multitasking
13:13 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/953989340491575366/unknown.png
13:13 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/953989379054002186/unknown.png
13:13 <+bridge_> [ddnet] <Ryozuki> i can write
13:13 <+bridge_> [ddnet] <Ryozuki> with my keyboard
13:13 <+bridge_> [ddnet] <Ryozuki> xd
13:13 <+bridge_> [ddnet] <Ryozuki> :monkalaugh:
13:13 <+bridge_> [ddnet] <TsÊáíÊï£> did you alt tab
13:13 <+bridge_> [ddnet] <Ryozuki> alt g
13:13 <+bridge_> [ddnet] <Ryozuki> so that qemu lets me out
13:13 <+bridge_> [ddnet] <TsÊáíÊï£> europe
13:13 <+bridge_> [ddnet] <Ryozuki> otherwise im trapped
13:13 <+bridge_> [ddnet] <Ryozuki> alt+g
13:13 <+bridge_> [ddnet] <TsÊáíÊï£> oh
13:13 <+bridge_> [ddnet] <Ryozuki> not altg
13:14 <+bridge_> [ddnet] <TsÊáíÊï£> i'm dumb
13:14 <+bridge_> [ddnet] <Jupstar> epic
13:14 <+bridge_> [ddnet] <Ryozuki> i also want to implement a slab allocator
13:14 <+bridge_> [ddnet] <Ryozuki> like linux
13:14 <+bridge_> [ddnet] <Ryozuki> https://www.kernel.org/doc/gorman/html/understand/understand011.html
13:15 <+bridge_> [ddnet] <Jupstar> add a monitor/screen component
13:15 <+bridge_> [ddnet] <TsÊáíÊï£> https://cdn.discordapp.com/attachments/293493549758939136/953989863881969694/unknown.png
13:15 <+bridge_> [ddnet] <Jupstar> to render individual pixels
13:15 <+bridge_> [ddnet] <TsÊáíÊï£> here's my password
13:15 <+bridge_> [ddnet] <Ryozuki> leaks
13:15 <+bridge_> [ddnet] <Jupstar> thanks xd
13:16 <+bridge_> [ddnet] <Ryozuki> "offenses"
13:16 <+bridge_> [ddnet] <Ryozuki> is this the report to china police
13:16 <+bridge_> [ddnet] <TsÊáíÊï£> nah
13:16 <+bridge_> [ddnet] <TsÊáíÊï£> just ban and mute
13:16 <+bridge_> [ddnet] <Ryozuki> :PepeA:
13:17 <+bridge_> [ddnet] <TsÊáíÊï£> we can't even get user's actual id
13:17 <+bridge_> [ddnet] <TsÊáíÊï£> bilibili does the verification and we only have an open_id and their access token, and their age range. not even the real age.
13:18 <+bridge_> [ddnet] <TsÊáíÊï£> but the age range is probably good for us. cuz we can finally tell if the blockers are literal kids or maybe kids.
13:18 <+bridge_> [ddnet] <Ryozuki> all my rust projects, 80% abandoned
13:18 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/953990824230801428/projects.png
13:19 <+bridge_> [ddnet] <TsÊáíÊï£> I don't keep abandoned projects
13:19 <+bridge_> [ddnet] <TsÊáíÊï£> which is probably a bad idea
13:49 <+bridge_> [ddnet] <Jupstar> what is the secret blured one xd
13:49 <+bridge_> [ddnet] <Ryozuki> xd
13:49 <+bridge_> [ddnet] <Ryozuki> from work
14:16 <+bridge_> [ddnet] <fokkonaut> u should call it ryOS
14:18 <+bridge_> [ddnet] <f.> hi @deen , just to tell you im the author of this PR if you might want to tell me something directly here on Discord. thank you.
14:19 <+bridge_> [ddnet] <Ryozuki> new devs :poggers:
14:46 <+bridge_> [ddnet] <deen> hi @f. and thanks for the change üòÑ
15:30 <+bridge_> [ddnet] <eeetadams> translate to russ langluae
15:30 <+bridge_> [ddnet] <eeetadams> https://cdn.discordapp.com/attachments/293493549758939136/954023931495465030/unknown.png
15:30 <+bridge_> [ddnet] <eeetadams> translate to russ language
15:30 <+bridge_> [ddnet] <eeetadams> https://cdn.discordapp.com/attachments/293493549758939136/954023931495465030/unknown.png
15:32 <+ChillerDragon> partial github outages be like ... ``while ! git push -f; do git push -f; done``
15:32 <+bridge_> [ddnet] <eeetadams> ?
15:40 <+bridge_> [ddnet] <Jupstar> lol
15:40 <+bridge_> [ddnet] <Jupstar> github down
15:40 <+bridge_> [ddnet] <Jupstar> https://cdn.discordapp.com/attachments/293493549758939136/954026361960398848/unknown.png
15:40 <+bridge_> [ddnet] <Jupstar> never seen that before
15:42 <+bridge_> [ddnet] <c0d3d3v> Yup, everything is down except the webserver. I could not push the changes at first, only with force push it worked. Even the Markdown parsers are down.
15:43 <+bridge_> [ddnet] <c0d3d3v> https://www.githubstatus.com/
15:53 <+bridge_> [ddnet] <c0d3d3v> Then only the calculation in double? `sqrt((double)dx * dx + (double)dy * dy)`
15:53 <+bridge_> [ddnet] <Jupstar> yes
15:54 <+bridge_> [ddnet] <Jupstar> x87 uses 80 bit internally anyway
15:54 <+bridge_> [ddnet] <c0d3d3v> Do we want to do FalloffX and FalloffY directly in double as well?
15:55 <+bridge_> [ddnet] <Jupstar> i've nothing against it
15:57 <+bridge_> [ddnet] <c0d3d3v> Yup, everything is down except the webserver. Even the Markdown parsers are down.
15:59 <+bridge_> [ddnet] <c0d3d3v> I wonder why this is not already noticed when mapping the map or whether this was planned as a surprise for the devs xD
16:21 <+bridge_> [ddnet] <ReiTW> damn you're not dead
16:22 <+bridge_> [ddnet] <Ryozuki> @ReiTW do u know him?
16:22 <+bridge_> [ddnet] <chillerdragon> who he
16:23 <+bridge_> [ddnet] <ReiTW> sure he's a developer of iF|City
16:23 <+bridge_> [ddnet] <Ryozuki> ah uh
16:23 <+bridge_> [ddnet] <ReiTW> and the one who hosts iF|City
16:23 <+bridge_> [ddnet] <Ryozuki> closed source boo
16:23 <+bridge_> [ddnet] <chillerdragon> wats his name?
16:23 <+bridge_> [ddnet] <chillerdragon> ffanta?
16:23 <+bridge_> [ddnet] <ReiTW> no
16:23 <+bridge_> [ddnet] <ReiTW> f. is f
16:23 <+bridge_> [ddnet] <chillerdragon> just f?
16:23 <+bridge_> [ddnet] <Ryozuki> f
16:23 <+bridge_> [ddnet] <ReiTW> yes
16:23 <+bridge_> [ddnet] <ReiTW> f
16:23 <+bridge_> [ddnet] <chillerdragon> hmm idk him
16:23 <+bridge_> [ddnet] <Ryozuki> press f
16:24 <+bridge_> [ddnet] <chillerdragon> no front but sounds like this name does not meet the minimum requirements to be functional
16:24 <+bridge_> [ddnet] <Ryozuki> its like ppl on irc who call themselves a common word
16:25 <+bridge_> [ddnet] <Ryozuki> and they get highlighted all time
16:25 <+bridge_> [ddnet] <Ryozuki> like someone named "is"
16:25 <+bridge_> [ddnet] <chillerdragon> or oy like wtf
16:25 <+bridge_> [ddnet] <chillerdragon> super annoying
16:25 <+bridge_> [ddnet] <chillerdragon> im always loosing it when someone uses a smiley in tw as username and i try to address a message to him
16:26 <+bridge_> [ddnet] <chillerdragon> "can you do this part please? \:("
16:41 <+bridge_> [ddnet] <c0d3d3v> That  CodeQL faild is because github is broken, right?
16:48 <+bridge_> [ddnet] <Jupstar> probs
17:29 <+bridge_> [ddnet] <c0d3d3v> Do we actually want to allow this kind of cheat? So that you can use your own position in Debug View to make certain jumps precise. If so, I could also output the 3rd and 4th decimal digits. 
17:29 <+bridge_> [ddnet] <c0d3d3v> There are actually only decimal numbers because we divide the actual integer position by 32 to make it easier to track the position on blocks. if we don't want to support cheats like that we could also just stop dividing by 32. 
17:29 <+bridge_> [ddnet] <c0d3d3v> 
17:29 <+bridge_> [ddnet] <c0d3d3v> I would be in favor of also outputting the 3rd and 4th digit after the comma.
17:30 <+bridge_> [ddnet] <c0d3d3v> Do we actually want to allow this kind of cheat? So that you can use your own position in Debug View to make certain jumps precise. If so, I could also output the 3rd and 4th decimal digits. 
17:30 <+bridge_> [ddnet] <c0d3d3v> There are actually only decimal numbers because we divide the actual integer position by 32 to make it easier to track the position on blocks. if we don't want to support cheats like that we could also just stop dividing by 32. 
17:30 <+bridge_> [ddnet] <c0d3d3v> 
17:30 <+bridge_> [ddnet] <c0d3d3v> I would be in favor of also outputting the 3rd and 4th digit after the decimal point.
17:35 <+bridge_> [ddnet] <bencie> its not really a cheat, it was discussed before that anything that can be achieved ingame without any modifications or external help is allowed
17:35 <+bridge_> [ddnet] <bencie> it's just a config that binds d to "+jump; +right", a to "+jump;+left"
17:35 <+bridge_> [ddnet] <bencie> and displays which coords work on a 3 tile freezejump
17:36 <+bridge_> [ddnet] <c0d3d3v> I mean the output of the player position in the debug HUD.
17:36 <+bridge_> [ddnet] <bencie> don't see a reason why it'd be a cheat personally. but not sure what the admins think about it
17:37 <+bridge_> [ddnet] <deen> yeah, let's keep allowing that. It's too late to go back on that, even vanilla TW had that
17:37 <+bridge_> [ddnet] <deen> and you can add two decimals
17:39 <+bridge_> [ddnet] <bencie> technically you can use coords to get an advantage, for example setting up towers and the freezejump, but anyone can have that advantage, it doesnt even take time to learn it. just just look at a number and line up
17:40 <+bridge_> [ddnet] <deen> people have been using it for many years, yeah
17:40 <+bridge_> [ddnet] <Wohoo> You can even add a bind to send coords üòÖ
17:41 <+bridge_> [ddnet] <deen> really, how?
17:41 <+bridge_> [ddnet] <louis> acqwerty has a modded client that shows the coordinates in green when its a correct value
17:41 <+bridge_> [ddnet] <plsplsplslol> no proof
17:41 <+bridge_> [ddnet] <Wohoo> I mean, it could be added, i think not exist at the moment
17:42 <+bridge_> [ddnet] <Cipy29> If u'll make debug show more digits and just leave debug as it is it'll probably make it more annoying to look at your x coords :P
17:42 <+bridge_> [ddnet] <Cipy29> Maybe it'll be good to generally clean up the debug info
17:43 <+bridge_> [ddnet] <Cipy29> I don't know if the stuff on there is useful
17:43 <+bridge_> [ddnet] <plsplsplslol> just make it display as a fraction
17:43 <+bridge_> [ddnet] <Cipy29> I don't even know peiple that know what half of it means xd
17:44 <+bridge_> [ddnet] <bencie> also, on the topic of debug menu, i'd also love to see this feature at some point https://discord.com/channels/252358080522747904/293493549758939136/927774860443275325
17:44 <+bridge_> [ddnet] <bencie> some users would definitely benefit from having their x coords, checkpoint, or angle pinned so that it shows even without having debug menu on
17:44 <+bridge_> [ddnet] <c0d3d3v> It is also meant for debugging and not as a game mechanic that should be used by players.
17:44 <+bridge_> [ddnet] <Cipy29> Do people find it useful for debugging?
17:45 <+bridge_> [ddnet] <louis> idk u dont rly need any debug stuff 99% of the time
17:45 <+bridge_> [ddnet] <Ryozuki> im sure @Im 'corneum checks coords when mapping his weird stuff
17:46 <+bridge_> [ddnet] <Im 'corneum> nah i dont know where stuff works different. its probably some kind of grid that loops but its probably also different for every kind of floating point part
17:46 <+bridge_> [ddnet] <c0d3d3v> could be added as an option for the nameplate xD
17:47 <+bridge_> [ddnet] <Cipy29> Def not nameplate
17:47 <+bridge_> [ddnet] <bencie> my nameplates would be way too crowded then haha
17:47 <+bridge_> [ddnet] <bencie> yeah
17:47 <+bridge_> [ddnet] <Cipy29> It's already too crowded
17:47 <+bridge_> [ddnet] <Cipy29> In the corner, could add the option of disabling the hearts from the HUD since they're useless in ddrace
17:48 <+bridge_> [ddnet] <Cipy29> I already have that in my client
17:49 <+bridge_> [ddnet] <c0d3d3v> I'm currently working on the new HUD, so this will probably be included that the lagacy hud is hidden.
17:51 <+bridge_> [ddnet] <Cipy29> Sounds good :D ill look forward to seeing it
17:54 <+bridge_> [ddnet] <louis> i use the debug graphs more than coordinate or angle information tbh
17:55 <+bridge_> [ddnet] <eeetadams> add rifle undeep
17:55 <+bridge_> [ddnet] <eeetadams> :kek:
18:02 <+bridge_> [ddnet] <Ryozuki> another first time contributor
18:02 <+bridge_> [ddnet] <Ryozuki> :poggers:
18:05 <+bridge_> [ddnet] <Ryozuki> lol
18:05 <+bridge_> [ddnet] <Ryozuki> i broke the embed link
18:05 <+bridge_> [ddnet] <Ryozuki> im a hacker!!!
18:06 <+bridge_> [ddnet] <Ryozuki> oh, depends where u click on the title
18:08 <+bridge_> [ddnet] <Ryozuki> oh
18:08 <+bridge_> [ddnet] <Ryozuki> is this the bug where u hear the sound
18:08 <+bridge_> [ddnet] <Ryozuki> of everyone
18:08 <+bridge_> [ddnet] <deen> yes
18:08 <+bridge_> [ddnet] <Ryozuki> i remember it happening on the chill lets climb 3 tourny
18:08 <+bridge_> [ddnet] <deen> should happen on large maps, integer overflow
18:08 <+bridge_> [ddnet] <Ryozuki> nice to see it fixed
19:47 <+bridge_> [ddnet] <c0d3d3v> @Not Keks Is there any advantage to not using a quad for two different textures? Even if the dimensions and position are the same? E.g. in the HUD there are quads created for full and empty hearts and shields does that make sense?
19:47 <+bridge_> [ddnet] <c0d3d3v> https://github.com/ddnet/ddnet/blob/971f839c1792563b52fe65bd5d6de4495374cdcd/src/game/client/components/hud.cpp#L706-L741
19:47 <+bridge_> [ddnet] <c0d3d3v> Should I use a separate quad for each sprite?
19:51 <+bridge_> [ddnet] <Jupstar> that's your choice
19:51 <+bridge_> [ddnet] <Jupstar> 
19:51 <+bridge_> [ddnet] <Jupstar> If you rework the hud:
19:51 <+bridge_> [ddnet] <Jupstar> the idea generally is to return the quad offset and have member variables named
19:51 <+bridge_> [ddnet] <Jupstar> `HUDHealthHeartOffset` 
19:51 <+bridge_> [ddnet] <Jupstar> so its nicely readable
19:51 <+bridge_> [ddnet] <Jupstar> 
19:51 <+bridge_> [ddnet] <Jupstar> but yeah i havent done that yet
19:51 <+bridge_> [ddnet] <Jupstar> 
19:51 <+bridge_> [ddnet] <Jupstar> and to answer your question
19:51 <+bridge_> [ddnet] <Jupstar> You could argue that its nicer to split it for more modularity, but mathematically and GPU wise its not wrong to reuse the same quad
19:53 <+bridge_> [ddnet] <Jupstar> oh and i think it just recently added that feature in https://github.com/ddnet/ddnet/pull/4728/commits/1f5a5b038258dc56502c3f258ab6165ce0d4b7f6
19:53 <+bridge_> [ddnet] <Jupstar> 
19:53 <+bridge_> [ddnet] <Jupstar> guess you can cherry-pick it if you want to use it
20:06 <+bridge_> [ddnet] <c0d3d3v> As far as I understand it, the main reason to use a separate quad for each object in the HUD is that they do not change their position, right? Then the position data of the quad does not have to be recalculated with every render. 
20:06 <+bridge_> [ddnet] <c0d3d3v> With RenderQuadContainerAsSprite on a moving object more calculations would have to be done than with RenderQuadContainer only.
20:07 <+bridge_> [ddnet] <Jupstar> there is another way to reposition something
20:07 <+bridge_> [ddnet] <Jupstar> and that is by adjusting the projection matrix
20:08 <+bridge_> [ddnet] <Jupstar> that is always uploaded to the GPU anyway
20:08 <+bridge_> [ddnet] <Jupstar> but yeah you are right it doesnt need to reposition it if you directly map the vertex correctly
20:10 <+bridge_> [ddnet] <f.> @ReiTW im always dead
20:10 <+bridge_> [ddnet] <ReiTW> yes I see that :hollande:
20:11 <+bridge_> [ddnet] <ReiTW> when noby's antibot on ifcity
20:11 <+bridge_> [ddnet] <f.> @ChillerDragon you don't no me? i know you
20:11 <+bridge_> [ddnet] <f.> don't be ashamed and confess to everybody here
20:11 <+bridge_> [ddnet] <f.> you used to play ifcity
20:11 <+bridge_> [ddnet] <f.> nub
20:11 <+bridge_> [ddnet] <Jupstar> mh yeah seems like our current implementation doesnt allow it for non sprite like quad containers, so i guess thats the main reason then
20:12 <+bridge_> [ddnet] <Jupstar> tho it could be implemented without changing the backends
20:12 <+bridge_> [ddnet] <Jupstar> by moving the projection matrix
20:14 <+bridge_> [ddnet] <ReiTW> @f. this ping wont work, he's on matrix room
20:14 <+bridge_> [ddnet] <f.> nvm ^^
20:28 <+bridge_> [ddnet] <c0d3d3v> Ok üôÇ Then I'll just try around and as soon as I have something to show, we can discuss again whether I have done that well...
20:47 <+bridge_> [ddnet] <coldrun> How can I read in render.cpp render function from a named pipe?
20:49 <+bridge_> [ddnet] <coldrun> I tried this but works with a test.cpp snippet, but not in the gamecode. (Have no knowledge of cpp at all)
20:49 <+bridge_> [ddnet] <coldrun> ```
20:49 <+bridge_> [ddnet] <coldrun> std::ifstream file{"/tmp/pipe"};
20:49 <+bridge_> [ddnet] <coldrun> std::string line;
20:49 <+bridge_> [ddnet] <coldrun> ```
20:53 <+bridge_> [ddnet] <Learath2> Not really the best idea to do a file read on the very very hot path
20:55 <+bridge_> [ddnet] <coldrun> My ideas are always best ^^
20:56 <+bridge_> [ddnet] <coldrun> My ideas are always best üôÉ
21:46 <+bridge_> [ddnet] <Chairn> compilers use sse for float computation nowadays
22:04 <+bridge_> [ddnet] <Jupstar> then the registers are even bigger
22:28 <+bridge_> [ddnet] <Ryozuki> ye thats why u disable sse and enable soft floats
22:28 <+bridge_> [ddnet] <Ryozuki> when doing kernel
22:31 <+bridge_> [ddnet] <Jupstar> xd
22:31 <+bridge_> [ddnet] <Ryozuki> you also have to disable the red zone
22:31 <+bridge_> [ddnet] <Ryozuki> :monkalaugh:
22:31 <+bridge_> [ddnet] <Ryozuki> https://os.phil-opp.com/red-zone/
22:33 <+bridge_> [ddnet] <Jupstar> now we have chairn, we need cache optimizations
22:33 <+bridge_> [ddnet] <Jupstar> 64bit probs slows the cache a bit xd
22:55 <+bridge_> [ddnet] <Chairn> well, i'd say data cache is probably fine, however, instruction cache must have a substantially high miss rate i guess
22:57 <+bridge_> [ddnet] <Chairn> ehm
22:57 <+bridge_> [ddnet] <Chairn> ```bash
22:57 <+bridge_> [ddnet] <Chairn> perf stat -e L1-icache-load-misses,L1-dcache-stores,L1-dcache-store-misses,L1-dcache-loads,L1-dcache-load-misses ./DDNet
22:58 <+bridge_> [ddnet] <Chairn> Performance counter stats for './DDNet':
22:58 <+bridge_> [ddnet] <Chairn> 
22:58 <+bridge_> [ddnet] <Chairn>      2‚ÄØ926‚ÄØ897‚ÄØ288      L1-icache-load-misses                                         (47,45%)
22:58 <+bridge_> [ddnet] <Chairn>     18‚ÄØ460‚ÄØ683‚ÄØ892      L1-dcache-stores                                              (49,51%)
22:58 <+bridge_> [ddnet] <Chairn>        333‚ÄØ527‚ÄØ056      L1-dcache-store-misses                                        (47,83%)
22:58 <+bridge_> [ddnet] <Chairn>     28‚ÄØ969‚ÄØ299‚ÄØ961      L1-dcache-loads                                               (48,10%)
22:58 <+bridge_> [ddnet] <Chairn>      1‚ÄØ228‚ÄØ863‚ÄØ824      L1-dcache-load-misses     #    4,24% of all L1-dcache hits    (46,76%)
22:58 <+bridge_> [ddnet] <Chairn> ```
22:58 <+bridge_> [ddnet] <Chairn> well, 50% misses for both, there's some nice optimization to go there
22:58 <+bridge_> [ddnet] <Chairn> ah nvm
22:58 <+bridge_> [ddnet] <Chairn> i read it wrong
23:06 <+bridge_> [ddnet] <Chairn> ```bash
23:06 <+bridge_> [ddnet] <Chairn> $ perf stat -e instructions,L1-icache-load-misses,L1-dcache-stores,L1-dcache-store-misses,L1-dcache-loads,L1-dcache-load-misses ./DDNet
23:06 <+bridge_> [ddnet] <Chairn> 
23:06 <+bridge_> [ddnet] <Chairn>    259‚ÄØ648‚ÄØ927‚ÄØ688      instructions
23:06 <+bridge_> [ddnet] <Chairn>      6‚ÄØ707‚ÄØ225‚ÄØ567      L1-icache-load-misses     #    2.58% of all L1-icache hits
23:06 <+bridge_> [ddnet] <Chairn>     47‚ÄØ319‚ÄØ023‚ÄØ683      L1-dcache-stores
23:06 <+bridge_> [ddnet] <Chairn>        700‚ÄØ778‚ÄØ077      L1-dcache-store-misses    #    1.48%
23:06 <+bridge_> [ddnet] <Chairn>     71‚ÄØ666‚ÄØ451‚ÄØ733      L1-dcache-loads
23:06 <+bridge_> [ddnet] <Chairn>      2‚ÄØ677‚ÄØ123‚ÄØ546      L1-dcache-load-misses     #    3,74% of all L1-dcache hits
23:06 <+bridge_> [ddnet] <Chairn> 
23:06 <+bridge_> [ddnet] <Chairn>      162,973244501 seconds time elapsed
23:06 <+bridge_> [ddnet] <Chairn> ```
23:06 <+bridge_> [ddnet] <Chairn> ```shell
23:06 <+bridge_> [ddnet] <Chairn> $ perf stat -e instructions,L1-icache-load-misses,L1-dcache-stores,L1-dcache-store-misses,L1-dcache-loads,L1-dcache-load-misses ./DDNet
23:06 <+bridge_> [ddnet] <Chairn> 
23:06 <+bridge_> [ddnet] <Chairn>    259‚ÄØ648‚ÄØ927‚ÄØ688      instructions
23:06 <+bridge_> [ddnet] <Chairn>      6‚ÄØ707‚ÄØ225‚ÄØ567      L1-icache-load-misses     #    2.58% of all L1-icache hits
23:06 <+bridge_> [ddnet] <Chairn>     47‚ÄØ319‚ÄØ023‚ÄØ683      L1-dcache-stores
23:06 <+bridge_> [ddnet] <Chairn>        700‚ÄØ778‚ÄØ077      L1-dcache-store-misses    #    1.48%
23:06 <+bridge_> [ddnet] <Chairn>     71‚ÄØ666‚ÄØ451‚ÄØ733      L1-dcache-loads
23:06 <+bridge_> [ddnet] <Chairn>      2‚ÄØ677‚ÄØ123‚ÄØ546      L1-dcache-load-misses     #    3,74% of all L1-dcache hits
23:06 <+bridge_> [ddnet] <Chairn> 
23:06 <+bridge_> [ddnet] <Chairn>      162,973244501 seconds time elapsed
23:06 <+bridge_> [ddnet] <Chairn> ```
23:08 <+bridge_> [ddnet] <Ryozuki> i think thats good
23:09 <+bridge_> [ddnet] <Chairn> i didn't try to attach it to an already ongoin game
23:10 <+bridge_> [ddnet] <Chairn> maybe its mostly initialization
