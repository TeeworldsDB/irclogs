00:08 < bridge> <teero777> and what exactly is `Arem Shin`s video style? xd
00:09 < bridge> <teero777> or rather `ShReKo`
00:10 < bridge> <teero777> https://forum.ddnet.org/viewtopic.php?t=2389
07:48 < bridge> <chillerdragon> Teero: did my message where I sent the link got lost in the bridge ? .\_. You don’t know shreko??? https://youtu.be/ZfzoedHlJQ0
07:57 < bridge> <blackkkent> https://github.com/DDNetPP/DDNetPP/issues/486
07:57 < bridge> <blackkkent> check pls 0
08:39 < bridge> <coverushka> Yes, I trained it for longer and there were not much progress. I'm not cosidering removing skip ticks, because it will increase training time and memory consumption.
08:39 < bridge> <coverushka> 
08:39 < bridge> <coverushka> This bot can be improved to beat every person in DDNet. I'm just too lazy to continue developing it. I trained that model in video in January btw and thought that I will improve the model and publish the video, but since then I did nothing so I decided to publish at least what i've got.
08:41 < bridge> <coverushka> Yes, I trained it for longer and there were not much progress. I'm not cosidering removing skip ticks, because it will increase training time and memory consumption. To train that model it took me 3 days, so without skip ticks it would 9 days.
08:41 < bridge> <coverushka> 
08:41 < bridge> <coverushka> This bot can be improved to beat every person in DDNet. I'm just too lazy to continue developing it. I trained that model in video in January btw and thought that I will improve the model and publish the video, but since then I did nothing so I decided to publish at least what i've got.
08:41 < bridge> <coverushka> Yes, I trained it for longer and there were not much progress. I'm not cosidering removing skip ticks, because it will increase training time and memory consumption. To train that model it took me 3 days, so without skip ticks it would 9 days or more.
08:41 < bridge> <coverushka> 
08:41 < bridge> <coverushka> This bot can be improved to beat every person in DDNet. I'm just too lazy to continue developing it. I trained that model in video in January btw and thought that I will improve the model and publish the video, but since then I did nothing so I decided to publish at least what i've got.
08:41 < bridge> <coverushka> Yes, I trained it for longer and there were not much progress. I'm not cosidering removing skip ticks, because it will increase training time and memory consumption. To train that model it took me 3 days, so without skip ticks it would be 9 days or more.
08:41 < bridge> <coverushka> 
08:41 < bridge> <coverushka> This bot can be improved to beat every person in DDNet. I'm just too lazy to continue developing it. I trained that model in video in January btw and thought that I will improve the model and publish the video, but since then I did nothing so I decided to publish at least what i've got.
08:42 < bridge> <coverushka> Yes, I trained it for longer and there were not much progress. I'm not cosidering removing skip ticks, because it will increase training time and memory consumption. To train that model it took me 3 days, so without skip ticks it would be 9 days or more.
08:42 < bridge> <coverushka> 
08:42 < bridge> <coverushka> This bot can be improved to beat every person in DDNet. I'm just too lazy to continue developing it. I trained that model in January btw and thought that I will improve the model and publish the video, but since then I did nothing so I decided to publish at least what i've got.
08:45 < bridge> <lanlanhaiyu> https://cdn.discordapp.com/attachments/293493549758939136/1393845728564215861/unknown?ex=6874a77e&is=687355fe&hm=01dd4168625ed1cae6b6b3741a7b210f5d0b599221e4607c99e8e9b958c2c75f&
08:47 < bridge> <coverushka> Yes, I trained it for longer and there were not much progress. I'm not cosidering removing skip ticks, because it will increase training time and memory consumption. To train that model it took me 3 days, so without skip ticks it would be 9 days or more.
08:47 < bridge> <coverushka> 
08:47 < bridge> <coverushka> This bot can be improved to beat every person in DDNet. I'm just too lazy to continue developing it. I trained that model in January btw and thought that I will improve it and publish the video, but since then I did nothing so I decided to publish at least what i've got.
08:47 < ws-client> <ChillerDragon> @milkeeycat i cant believe it! the sdl bug fix worked so well!! finally i can boot ddnet client consistently in under 20 seconds. It feels unreal wasnt sure if it ever gets fixed xd
08:48 < ws-client> <ChillerDragon> so the only thing missing is the giga screen tearing i sometimes have ._. but not sure if i try to fix that. No idea who to even blame for graphic glitches. There is not backtrace no nothing.
09:18 < bridge> <milkeeycat> Screen tearing is a feature
09:18 < bridge> <milkeeycat> I have it from the first day when I switched to Linux
09:22 < bridge> <melon> screen tearing.. i assume fullscreen?, i have that when i launch ddnet in fullscreen because my compositor hates me
09:32 < ws-client> <ChillerDragon> shouldve gone with amd
09:32 < ws-client> <ChillerDragon> my next pc will be full amd no more intel and nvidia crap
09:33 < ws-client> <ChillerDragon> i just wanna be able to open github issues for bugs like that but i am not sure any gpu manifacturer offers that ._.
09:33 < bridge> <melon> i love my full AMD setup, but AMD doesnt care when it comes to windows lmao
09:34 < bridge> <melon> the latest GPU drivers crash on windows if i exceed 2GB VRAM load
09:34 < bridge> <melon> on linux it works with 0 issues
09:34 < ws-client> <ChillerDragon> i mean even my libre free software gnome feels unaccessible. When i manage to freeze gnome i feel like i am stuck with the bug until it magically fixes it self. Maybe i should get into reporting gnome bugs too but it sounds hard.
09:34 < bridge> <melon> FOSS drivers ftw
09:34 < bridge> <melon> are you using gnome out of habit?
09:34 < bridge> <melon> why not try the KDE eco system for once
09:34 < ws-client> <ChillerDragon> @melon the foss amd drivers are the community maintained or official?
09:35 < ws-client> <ChillerDragon> @melon i hate KDE to the core. Its the most windows like shit u can get its ugly af and the name is ugly too and its just the worst
09:35 < bridge> <melon> AMDVLK is foss, so i imagine community maintained
09:35 < bridge> <melon> lmao
09:35 < ws-client> <ChillerDragon> @melon gnome is love and the best you can wish for as a desktop. There is nothing that can compete. Not even propriatary stuff like macOS.
09:36 < ws-client> <ChillerDragon> powered by blazingly fast javascript as it should
09:36 < bridge> <melon> XD
09:36 < bridge> <melon> idk i dont like gnome
09:36 < ws-client> <ChillerDragon> windows 11 using react native but gnome had that already for years!
09:36 < bridge> <melon> pressing the WIN key and my entire screen goes zoom.. hate that
09:36 < ws-client> <ChillerDragon> i love it
09:36 < bridge> <melon> but i also used i3 for a looooong time
09:37 < ws-client> <ChillerDragon> i press super key 40 times a minute
09:37 < ws-client> <ChillerDragon> and thats also where i run into all the glitches xd
09:37 < ws-client> <ChillerDragon> i spam that shit too much
09:37 < bridge> <melon> XDD
09:37 < bridge> <melon> when use rofi like a man
09:37 < ws-client> <ChillerDragon> lofi?
09:38 < bridge> <melon> https://github.com/davatorium/rofi
09:38 < ws-client> <ChillerDragon> nah bro gnome goated
09:44 < bridge> <matodor> Yesterday I sent teero movie to shreko, he watched it
09:44 < bridge> <ryozuki> i use rofi
09:47 < ws-client> <ChillerDragon> @matodor epic that you still have a way to contact shreko o.O
09:47 < ws-client> <ChillerDragon> what did he say? xd
09:48 < bridge> <matodor> Кайфово выглядит.
09:48 < ws-client> <ChillerDragon> so dry xd
09:49 < ws-client> <ChillerDragon> he doesnt play anymore does he?
09:49 < bridge> <matodor> https://cdn.discordapp.com/attachments/293493549758939136/1393861780685455412/image.png?ex=6874b671&is=687364f1&hm=2173bf86e1dd1adc2f3d3857b9c57da853518ab3640349503409b4068c251a50&
09:49 < bridge> <matodor> :feelsbadman:
09:50 < bridge> <matodor> he played this year, I baited him on dm1
09:50 < ws-client> <ChillerDragon> hm which compiler do i need to get the warnings from GNUC_ATTRIBUTE((format(printf, 3, 4)))?
09:50 < ws-client> <ChillerDragon> @matodor nice
09:54 < ws-client> <ChillerDragon> @matodor is "У вас уже есть максимальный уровень для появления винтовки." good as a translation for "You already have maximum level for spawn rifle." ?
09:59 < bridge> <matodor> spawn on map?
10:00 < ws-client> <ChillerDragon> you spawn with a rifle 
10:00 < ws-client> <ChillerDragon> instead of having to collect it first
10:04 < bridge> <matodor> it's error message or notification for new ability?
10:05 < ws-client> <ChillerDragon> its when you try to buy the item but you already have it maxed out
10:07 < ws-client> <ChillerDragon> also not sure about "Требуеться лвл" for "needed level" as in the minimum level required
10:07 < bridge> <matodor> У вас уже есть максимальный уровень для возрождения с винтовкой.
10:07 < bridge> <matodor> You already have maximum level to respawn with a rifle.
10:09 < ws-client> <ChillerDragon> so its good @matodor ?
10:10 < ws-client> <ChillerDragon> oh wait you changed it
12:33 < bridge> <blackkkent> chiller, git stash is the command that updates all your updates?
12:34 < ws-client> <ChillerDragon> no it deletes your changed @blackkkent 
12:34 < ws-client> <ChillerDragon> changes*
12:35 < ws-client> <ChillerDragon> to get new stuff in use ``git pull``
12:36 < ws-client> <ChillerDragon> Is anyone else getting their github actions terminated?
12:36 < ws-client> <ChillerDragon> mine at some point just started to break and then it fixed it self. I assume it is out of memory or something like that
12:37 < ws-client> <ChillerDragon> my project is a bit bigger than regular ddnet but not huge. Other forks should suffer from that too.
12:37 < ws-client> <ChillerDragon> I wonder if the build process could be optimized to use less ram or something like that
12:38 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1752403078.png
12:38 < bridge> <blackkkent> chiller
12:38 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1752403115.png
12:38 < bridge> <blackkkent> How long have you been playing ddnet?
12:38 < ws-client> <ChillerDragon> 12+ years
12:39 < bridge> <blackkkent> omg
12:39 < ws-client> <ChillerDragon> has to be OOM right? even if it doesnt say so.
12:39 < ws-client> <ChillerDragon> there are no other errors further up it just dies ._.
12:39 < ws-client> <ChillerDragon> only ran for like 3 minutes
12:39 < bridge> <blackkkent> and how old are you, if it's not a secret
12:39 < ws-client> <ChillerDragon> its a giga secret
12:40 < bridge> <blackkkent> you are definitely not 14 uncle👽
12:40 < ws-client> <ChillerDragon> older than 12
12:40 < bridge> <blackkkent> yes 🙂
12:40 < bridge> <blackkkent> and what was your biggest project in ddnet?
12:41 < ws-client> <ChillerDragon> idk i did a few things of similar size
12:41 < bridge> <blackkkent> oh
12:42 < ws-client> <ChillerDragon> ddnet++ is for sure the oldest
12:42 < bridge> <kebscs> 35?
12:42 < ws-client> <ChillerDragon> i think that started like 10~ yrs ago
12:42 < ws-client> <ChillerDragon> @kebscs stop dox
12:42 < bridge> <blackkkent> oh
12:43 < bridge> <kebscs> :kek:
12:43 < bridge> <blackkkent> your 22 - 24 years ago
12:43 < ws-client> <ChillerDragon> yes 24 years ago i was 35
12:44 < bridge> <blackkkent> omg the big secret revealed
12:44 < bridge> <blackkkent> AHAH
12:46 < bridge> <blackkkent> Have you thought about selling coding courses to ddnet?
12:49 < ws-client> <ChillerDragon> @blackkkent yes xd but doubt itll happen i have some free stuff on yt tho
13:19 < bridge> <blackkkent> give me :)?
13:39 < ws-client> <ChillerDragon> @blackkkent https://www.youtube.com/watch?v=HB_aSIOmdu4&list=PLhJkqAQmOh5LyYOfnMy4PJB6CSZltQyTc
13:40 < bridge> <blackkkent> thx
13:40 < bridge> <blackkkent> bro 23 programmings video
13:41 < bridge> <blackkkent> you crazy
13:51 < bridge> <kebscs> c++ in vs code 😭
14:00 < bridge> <blackkkent> yes
14:00 < bridge> <blackkkent> imba
14:16 < ws-client> <ChillerDragon> wowo @kebscs wat do you use?
14:17 < bridge> <kebscs> visual studio
14:17 < bridge> <kebscs> preview 2022
14:17 < bridge> <kebscs> no code
14:17 < ws-client> <ChillerDragon> then id better be quiet xd
14:17 < ws-client> <ChillerDragon> worst software out there
14:17 < bridge> <kebscs> better than vs code
14:17 < ws-client> <ChillerDragon> not even the same liga
14:17 < ws-client> <ChillerDragon> visual studio is such a bugged shitty bloat ware
14:18 < bridge> <kebscs> true
14:18 < bridge> <kebscs> vs code is just a notepad
14:18 < ws-client> <ChillerDragon> vs code has all the features but is more light weight
14:18 < bridge> <kebscs> vs a c++ ide
14:18 < ws-client> <ChillerDragon> vscode has everything you need
14:18 < bridge> <kebscs> i dont experience bugs
14:18 < ws-client> <ChillerDragon> what do u miss in vscode?
14:19 < ws-client> <ChillerDragon> i have seen fokkonaut struggle in vs even doing basic text search xd
14:19 < ws-client> <ChillerDragon> and opening vs takes longer than rebooting my pc
14:20 < bridge> <kebscs> idk if it even has real debugging
14:20 < ws-client> <ChillerDragon> to me opening times are really important thats also why i ditched vscode it was too slow
14:20 < ws-client> <ChillerDragon> it has real debugging
14:20 < ws-client> <ChillerDragon> not that i ever used it i just use gdb
14:20 < ws-client> <ChillerDragon> but it does have it
14:21 < bridge> <kebscs> 26s for me to fully open ddnet code
14:21 < ws-client> <ChillerDragon> xxxxxxxxxxxxxxxxxxXD
14:21 < bridge> <kebscs> yea gdb is ass
14:21 < ws-client> <ChillerDragon> gdb is goated
14:21 < bridge> <kebscs> idk why you need quicker open time
14:21 < bridge> <kebscs> just open it and dont close it when you work?
14:22 < ws-client> <ChillerDragon> no
14:22 < ws-client> <ChillerDragon> waiting 26s for anything is unacceptable
14:23 < bridge> <kebscs> takes 1gb memory i can have it open in background all the time and never notice it
14:23 < bridge> <kebscs> with 32gb ram
14:23 < ws-client> <ChillerDragon> xd
14:24 < ws-client> <ChillerDragon> i would use an editor without syntax highlight over vs
14:24 < bridge> <kebscs> id rather have it open 10s longer than have to use trash gdb
14:24 < ws-client> <ChillerDragon> gdb so good
14:24 < bridge> <kebscs> or glorified notepad like vs code
14:24 < ws-client> <ChillerDragon> glorified notepad the best
14:26 < ws-client> <ChillerDragon> what do u even need from a debugger?
14:26 < ws-client> <ChillerDragon> i just do ``gdb ./DDNet`` and then ``bt`` when it crashes ez
14:26 < ws-client> <ChillerDragon> nothing bad about it it works perfectly
14:29 < bridge> <Jupstar ✪> What makes you think vscode is not an ide?
14:30 < bridge> <Jupstar ✪> It has proper visual debugging, shortcuts to build and run, linter support. All as extensions. Our vscode workspace even recommends everything u need
14:30 < bridge> <Jupstar ✪> It also makes it easy to switch to asan, tsan, clang etc
14:30 < bridge> <kebscs> put breakpoint, edit variables, see all of them graphically
14:30 < bridge> <Jupstar ✪> All by gui
14:31 < ws-client> <ChillerDragon> ok tru break points i sometimes do too. But its as easy as ``break file.cpp:2``
14:31 < ws-client> <ChillerDragon> for seeing variables its as easy as ``print var`` but mostly i dbg log them anyways much easier to work with
14:31 < bridge> <kebscs> but can you edit index in a for loop while you are stopped at it
14:31 < ws-client> <ChillerDragon> edit variables wtf? i never had the urge to do that xd
14:31 < bridge> <kebscs> and its much easier than in console
14:32 < bridge> <kebscs> and conditional breakpoint
14:32 < bridge> <Jupstar ✪> I also find debugging visually better
14:32 < bridge> <Jupstar ✪> The better tool for the job
14:33 < bridge> <kebscs> nothing, just i prefer vs
14:33 < bridge> <kebscs> its more suited for the 1 thing it does
14:33 < bridge> <kebscs> while vs code wants to do it all
14:33 < bridge> <Jupstar ✪> Vs is generally good. But it's defs bloated af
14:33 < ws-client> <ChillerDragon> its generally bad
14:34 < bridge> <pilonpl> is visual studio a thing on linux?
14:34 < ws-client> <ChillerDragon> maybe
14:34 < bridge> <Jupstar ✪> I dunno. It has too many features u don't need and the download size is ridiculous
14:34 < ws-client> <ChillerDragon> think on mac it is
14:34 < ws-client> <ChillerDragon> it used to be win only iirc
14:34 < bridge> <Jupstar ✪> That sucks too yeah
14:35 < ws-client> <ChillerDragon> but its so good
14:35 < ws-client> <ChillerDragon> id spawn a vm to use it
14:35 < bridge> <Jupstar ✪> I like their performance profiler
14:35 < ws-client> <ChillerDragon> oh true
14:35 < ws-client> <ChillerDragon> i think thats good ye
14:36 < bridge> <pilonpl> actually i need a way to test why the game lags when finishing a map
14:36 < bridge> <kebscs> true
14:36 < bridge> <Jupstar ✪> Disable demos
14:36 < bridge> <kebscs> i sitll dont know probably 80% of features
14:36 < ws-client> <ChillerDragon> @kebscs thats why editors with opt in features are nicer
14:37 < ws-client> <ChillerDragon> like vim/sublime/vscode where you install extensions for the features you need
14:37 < bridge> <pilonpl> neovim is actually IKEA code editor lol
14:37 < bridge> <kebscs> idk i dont ming that i have stuff that idk what they do
14:38 < bridge> <kebscs> maybe ill discover them and might be useful
14:59 < bridge> <blackkkent> chiller s there a ban, but not by IP only?
15:07 < ws-client> <ChillerDragon> there is name ban too
15:20 < bridge> <soulyvevo> vs takes ages to open and it lags my pc xd
15:21 < bridge> <soulyvevo> tho setting up c++ in vscode on windows was a pain in the ass
15:21 < bridge> <kebscs> how much ram?
15:22 < bridge> <soulyvevo> 8gb
15:22 < bridge> <kebscs> yea 8 bit low for coding a game
15:25 < bridge> <blackkkent> hash?
15:26 < bridge> <inv41idu53rn4m3> There's no cryptography involved in identifying players, it's just nickname or IP
15:26 < bridge> <inv41idu53rn4m3> that's why people are so interested in getting the accounts system working
15:50 < bridge> <pilonpl> yeah
15:50 < bridge> <pilonpl> i heard someone was working on it
15:51 < bridge> <pilonpl> so what's the status?
15:51 < bridge> <kebscs> no updates
15:51 < bridge> <kebscs> last real quic update may 2024
15:52 < bridge> <kebscs> last real quic update march 2024
15:53 < bridge> <inv41idu53rn4m3> I'm guessing the only real reason for wanting to use QUIC is that it's new and cool, not like the efficiency gains really matter
15:55 < bridge> <robyt3> QUIC allows secure connections, which is a requirement for accounts
15:56 < bridge> <inv41idu53rn4m3> We're not doing HTTPS already?
15:56 < bridge> <inv41idu53rn4m3> I mean, web protocol kinda stinky, but it's easy
15:57 < bridge> <inv41idu53rn4m3> or does QUIC allow you to do it with less certificate trouble?
15:57 < bridge> <robyt3> We use HTTPS but not for the game communication
15:57 < bridge> <robyt3> Game is UDP
15:57 < bridge> <inv41idu53rn4m3> ohh right it's not just client to account server, it's also game server
15:58 < bridge> <inv41idu53rn4m3> I forgor that bit
16:33 < bridge> <imilchshake> hey peoples, do you know if there is any way of disabling the spectator_count UI for a server? I noticed that the UI doesnt work on old servers, so im hoping that you can also explicitly disable it on new DDNet server versions?
16:33 < bridge> <imilchshake> hey peoples, do you know if there is any way of disabling the spectator_count UI server sided? I noticed that the UI doesnt work on old servers, so im hoping that you can also explicitly disable it on new DDNet server versions?
16:36 < bridge> <kebscs> src\game\server\player.cpp change pDDNetSpectatorInfo->m_SpectatorCount to 0
16:37 < bridge> <imilchshake> aww it'd need a src patch? thanks!
16:37 < bridge> <kebscs> i mean if ure making a custom mod youre already changing the src
16:37 < bridge> <imilchshake> noo im working with vanilla DDNet server
16:37 < bridge> <imilchshake> noo im working with normal DDNet server
16:37 < bridge> <imilchshake> so im thinking about just downgrading to the oldest version that didnt have spec info xd
16:38 < bridge> <kebscs> then idk why you would need to disable if youre making a ddrace server
16:38 < bridge> <imilchshake> because it makes any kind of moderation with regards to people performing _unintended behaviour_ using _sussy clients_ incredibly difficuly :I
16:39 < bridge> <kebscs> you can disable taht if you have rcon
16:40 < bridge> <kebscs> `hide_auth_status 1`
16:40 < bridge> <kebscs> `rcon_login name password; hide_auth_status 1;`
16:40 < bridge> <imilchshake> that only hides auth status or no?
16:40 < bridge> <kebscs> https://cdn.discordapp.com/attachments/293493549758939136/1393965391306297344/image.png?ex=687516ef&is=6873c56f&hm=7eac70bc40442e3b10da5f592b034d13ae458bdbc3cb89c3d7dcb5df4ec8e9c6&
16:40 < bridge> <imilchshake> WOWIEEE
16:40 < bridge> <imilchshake> OKAY
16:41 < bridge> <imilchshake> awesome thats all i need thanks :owo::owo:
16:41 < bridge> <kebscs> np
16:41 < bridge> <imilchshake> @jxsl13 :justatest:
16:41 < bridge> <imilchshake> u want some milm
16:42 < bridge> <imilchshake> u want some milm xd
16:42 < bridge> <jxsl13> no 😌
17:39 < bridge> <pilonpl> I hope there's gonna be more issues like that semicolon issue
18:00 < ws-client> <ChillerDragon> @pilonpl did you already check all open issues
18:00 < ws-client> <ChillerDragon> so much to chose from
18:01 < bridge> <pilonpl> I looked through everything i think
18:01 < ws-client> <ChillerDragon> pro
18:01 < bridge> <pilonpl> But not very deeply
18:01 < bridge> <melon> Most editor bugs are 2 loc
18:01 < bridge> <melon> And they're fun to find sometimes
18:01 < bridge> <pilonpl> Maybe there is something easy
18:02 < ws-client> <ChillerDragon> https://github.com/ddnet/ddnet/issues?q=state%3Aopen%20label%3A%22good%20first%20issue%22
18:03 < bridge> <pilonpl> There is only one good first issue
18:03 < bridge> <pilonpl> And it's solved i guess
18:03 < ws-client> <ChillerDragon> its not solved
18:05 < bridge> <pilonpl> Seems to me like everything is already in the game
18:33 < bridge> <kebscs> @pilonpl https://discord.com/channels/252358080522747904/293493549758939136/1393686058373222591
18:36 < bridge> <pilonpl> Okay so the goal is to enable as many checks as possible?
18:39 < bridge> <kebscs> some that make sense
18:39 < bridge> <kebscs> and dont change code too much i guess
19:13 < bridge> <pilonpl> wtf i accidentally run random commands lol
19:13 < bridge> <pilonpl> how
19:13 < bridge> <pilonpl> how is that possible
19:14 < bridge> <pilonpl> how did that copy paste
19:14 < bridge> <pilonpl> without even being in the clipboard history
20:04 < bridge> <xulei4396> 50$ steam - [steamcommunity.com/gift/activation=ErmMCCQaeZ](https://kutt.it/cOjuMiOMcT) @everyone
21:09 < bridge> <milkeeycat> chillerdragon: any ideas how that could be a memory leak? xd https://github.com/MilkeeyCat/ddnet_protocol/pull/96
21:35 < ChillerDragon> i was wondering the same
21:36 < ChillerDragon> i think editing the code is what spoked clang. that happens sometimes when the branches get too complicated it gets spoked
21:36 < ChillerDragon> https://github.com/DDNetPP/DDNetPP/blob/fd632561813c6684382b62f8e8ab3cc4a51a3582/src/game/server/entities/character_tiles.cpp#L624
21:36 < bridge> <milkeeycat> it doesn't like call to `decode_control`
21:36 < ChillerDragon> have a look at line 605
21:37 < ChillerDragon> clang paniced in line 624 that m_pPlayer could be null xd
21:37 < ChillerDragon> i guess calling a method that could clear the pointer is what scares clang
21:37 < ChillerDragon> because it doesnt actually check its content
21:37 < ChillerDragon> but that would mean that a writable reference to the packet has to be passed for the payload pointer to be wiped 
21:40 < bridge> <milkeeycat> https://github.com/ddnet/ddnet/commit/5986ee03b9 mhm
21:40 < ws-client> <ChillerDragon> nono
21:41 < ws-client> <ChillerDragon> we can do this 
21:41 < ws-client> <ChillerDragon> trust
21:42 < ws-client> <ChillerDragon> i would file a bug report with clang before using magic comment in this case
21:42 < ws-client> <ChillerDragon> gimme sec to think xd
21:42 < ws-client> <ChillerDragon> ok thinking done
21:42 < ws-client> <ChillerDragon> its a clang bug
21:44 < bridge> <milkeeycat> look for something similar here xd https://github.com/llvm/llvm-project/issues?q=state%3Aopen%20label%3A%22clang%3Astatic%20analyzer%22%20label%3Afalse-positive
21:44 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1752435845.png
21:44 < ws-client> <ChillerDragon> ``packet.payload`` stores our pointer to malloc
21:45 < ws-client> <ChillerDragon> clang is scared that we pass this pointer to a method which might set it to NULL without freeing it. Which is a fine assumption of clang if it doesnt want to read the methods code (totally fair)
21:45 < ws-client> <ChillerDragon> but its a wrong assumption because it takes a ``const`` pointer
21:45 < ws-client> <ChillerDragon> so it cant be nulled?
21:45 < ws-client> <ChillerDragon> wait or did i confuse that again
21:45 < ws-client> <ChillerDragon> it just says the stuff it points to can not be written to
21:45 < ws-client> <ChillerDragon> oh yes ofc
21:45 < ws-client> <ChillerDragon> nvm no clang bug
21:46 < ws-client> <ChillerDragon> you can totally reassign const pointers
21:46 < ws-client> <ChillerDragon> how does one get a const const pointer?
21:46 < ws-client> <ChillerDragon> AH
21:46 < ws-client> <ChillerDragon> copy?
21:47 < ws-client> <ChillerDragon> no
21:48 < bridge> <Solly (bun bun)> const pointer to a const value?
21:48 < bridge> <Solly (bun bun)> const T const*
21:48 < bridge> <Solly (bun bun)> @chillerdragon
21:48 < ws-client> <ChillerDragon> i dont know C
21:48 < ws-client> <ChillerDragon> as it turns out
21:50 < bridge> <milkeeycat> chillerdragon: it seems, clang doesn't like a pointer which points to a field in a union
21:50 < bridge> <Solly (bun bun)> const char * is a pointer to a const value
21:50 < bridge> <Solly (bun bun)> its really stupid
21:50 < ws-client> <ChillerDragon> so how do i get a pointer that can not be reassigned?
21:50 < bridge> <Solly (bun bun)> .
21:50 < ws-client> <ChillerDragon> .
21:50 < bridge> <Solly (bun bun)> oh you cant see replies
21:50 < bridge> <Solly (bun bun)> cring
21:50 < ws-client> <ChillerDragon> xd
21:51 < ws-client> <ChillerDragon> i get it
21:51 < bridge> <Solly (bun bun)> `const T const*`
21:51 < ws-client> <ChillerDragon> i just wanted to remind you
21:51 < ws-client> <ChillerDragon> i got what you replied to
21:51 < bridge> <Solly (bun bun)> the const before the ptr makes the ptr const
21:51 < bridge> <filoqcus> gg
21:51 < bridge> <filoqcus> https://cdn.discordapp.com/attachments/293493549758939136/1394043541939818567/image.png?ex=68755fb8&is=68740e38&hm=5ebca1998305c83d8223e08bac685621e1319bf9458fc393cf3cb689ce6a84b2&
21:51 < ws-client> <ChillerDragon> i just saw T and thought u talk c++ not c
21:51 < bridge> <Solly (bun bun)> you can do templates in c!!
21:51 < ws-client> <ChillerDragon> wtf
21:51 < bridge> <Solly (bun bun)> with macros!!
21:51 < bridge> <milkeeycat> `const T *const`*
21:51 < bridge> <Solly (bun bun)> oh yeah
21:52 < bridge> <Solly (bun bun)> ```
21:52 < bridge> <Solly (bun bun)> char *a, *const b, *c
21:52 < bridge> <Solly (bun bun)> ```
21:52 < bridge> <Solly (bun bun)> also
21:52 < bridge> <Solly (bun bun)> which is dumb
21:52 < bridge> <Solly (bun bun)> should be
21:52 < bridge> <Solly (bun bun)> ```
21:52 < bridge> <Solly (bun bun)> char* a, c;
21:52 < bridge> <Solly (bun bun)> char const* b;
21:52 < bridge> <Solly (bun bun)> ```
21:52 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1752436370.png
21:53 < ws-client> <ChillerDragon> holy moly
21:53 < ws-client> <ChillerDragon> why do i never see that in the code?
21:53 < ws-client> <ChillerDragon> this seems under used
21:53 < ws-client> <ChillerDragon> epic const const
21:53 < bridge> <Solly (bun bun)> because of how compilers work it doesnt achieve much
21:53 < bridge> <milkeeycat> chillerdragon: I think this is the issue https://github.com/llvm/llvm-project/issues/60246
21:53 < bridge> <milkeeycat> it's NOLINT time
21:53 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1752436430.png
21:54 < ws-client> <ChillerDragon> it gets even better
21:54 < ws-client> <ChillerDragon> how does clangd be like "this is fine"
21:54 < ws-client> <ChillerDragon> is that a string on the stack?
21:54 < ws-client> <ChillerDragon> wtf
21:54 < bridge> <Solly (bun bun)> "hello" is static
21:54 < bridge> <Solly (bun bun)> wait
21:54 < bridge> <Solly (bun bun)> what?
21:54 < ws-client> <ChillerDragon> it compiles without warnings
21:55 < ws-client> <ChillerDragon> clang tidy is like this is good
21:55 < bridge> <Solly (bun bun)> well i dont see why it wouldnt work
21:55 < ws-client> <ChillerDragon> i just assumed these strings are in some sort of ro section in the binary
21:55 < bridge> <Solly (bun bun)> it wont be inlined because you have a non const ptr to it
21:55 < bridge> <Solly (bun bun)> so it has to be uninited static
21:55 < bridge> <Solly (bun bun)> or... rather inited at runtime static
21:56 < ws-client> <ChillerDragon> ``char * const foo = "..`` alone looks like a syntax error to me xxxxxxxxxxd
21:56 < ws-client> <ChillerDragon> @milkeeycat upvte the issue so it gets fixed
21:56 < bridge> <Solly (bun bun)> const qualifying params is pointless so it doesnt get used in functions
21:56 < bridge> <Solly (bun bun)> and in code its often not so long that you cant instantly understand is this editable or not
21:57 < ws-client> <ChillerDragon> and if you add the nolint link the issue so we know when we can remove it again
21:59 < bridge> <milkeeycat> chillerdragon: now it has 2 updudes, I expect it to be fixed tomorrow
21:59 < ws-client> <ChillerDragon> wait @milkeeycat so we had an actual memory bug where clang was "this is fine" then we fixed the bug and clang was like "this is unsafe" ???
21:59 < ws-client> <ChillerDragon> @milkeeycat fr fixed before gta 6
22:00 < ws-client> <ChillerDragon> i have the feeling you should be able to golf around it xd
22:00 < ws-client> <ChillerDragon> just not passing packet.payload into the function fixes it
22:01 < bridge> <milkeeycat> not passing `&packet.control` also fixes it
22:01 < ws-client> <ChillerDragon> xxxxxxxxxxxd
22:02 < ws-client> <ChillerDragon> maybe clang thinks we travers the struckt back
22:02 < ws-client> <ChillerDragon> "struckt" i need sleep
22:03 < ws-client> <ChillerDragon> this clang dude sometimes gets so lost if you write more than 1 line of code it just starts hallucinating
22:03 < ws-client> <ChillerDragon> maybe we should just lint the code with an LLM it seems to be as good as LLVM
22:05 < bridge> <milkeeycat> chillerdragon: can you rewrite clang-tidy in bash? :santatrollet:
22:05 < ws-client> <ChillerDragon> xd
22:05 < ws-client> <ChillerDragon> i cant even write a tokenizer in bash
22:05 < ws-client> <ChillerDragon> trust me i tried
22:06 < bridge> <milkeeycat> you didn't try hard enough
22:06 < ws-client> <ChillerDragon> fr
22:08 < ws-client> <ChillerDragon> @milkeeycat did you realize that ddnet_protocol error handling smh looks like goofy google go lang?
22:08 < bridge> <pilonpl> Bash should be on the list of esoteric languages
22:09 < bridge> <milkeeycat> I was thinking today wouldn't it be better to always return error instead of passing is as a parameter
22:10 < ws-client> <ChillerDragon> nah xd
22:10 < bridge> <milkeeycat> passing it*
22:10 < ws-client> <ChillerDragon> sometimes the value is cooler as return value
22:11 < ws-client> <ChillerDragon> for example ``unpacker_get_int`` should return an int not an error
22:11 < bridge> <milkeeycat> sometimes ye, but being able to write 
22:11 < bridge> <milkeeycat> ```c
22:11 < bridge> <milkeeycat> Value value;
22:11 < bridge> <milkeeycat> if(func(&value) == ERR_NONE) {
22:11 < bridge> <milkeeycat> ...
22:11 < bridge> <milkeeycat> }
22:11 < bridge> <milkeeycat> ```
22:11 < bridge> <milkeeycat> is also cool
22:12 < bridge> <kollpotato> why are you guys using c for this project anyway
22:12 < ws-client> <ChillerDragon> wait wat xd
22:12 < bridge> <milkeeycat> `unpacker_get_int` it doesn't take error as a param xd
22:12 < ws-client> <ChillerDragon> @milkeeycat besides the point!
22:12 < ws-client> <ChillerDragon> it might do error handling
22:12 < ws-client> <ChillerDragon> return error or value ???
22:12 < ws-client> <ChillerDragon> are you mixing types
22:12 < ws-client> <ChillerDragon> oh wait you did that in the beginning right?
22:12 < ws-client> <ChillerDragon> ah no
22:12 < ws-client> <ChillerDragon> i red it wrong xd
22:13 < ws-client> <ChillerDragon> you dont compare value
22:13 < ws-client> <ChillerDragon> hmm idk for me its hard to read
22:13 < ws-client> <ChillerDragon> and annoying to type
22:13 < ws-client> <ChillerDragon> because you need to define ``value`` first
22:13 < ws-client> <ChillerDragon> @kollpotato because this is for linux kernel level cheats
22:14 < ws-client> <ChillerDragon> blizzard hired us
22:14 < bridge> <kollpotato> OHHH right
22:14 < bridge> <kollpotato> lmao
22:16 < bridge> <pilonpl> What is this project about
22:17 < bridge> <pilonpl> Seems interesting
22:17 < bridge> <kollpotato> something related to this https://github.com/MilkeeyCat/nodummies
22:18 < bridge> <kollpotato> looks epic xd
22:19 < bridge> <pilonpl> Lua in ddnet would be epic
22:19 < bridge> <pilonpl> Imagine creating binds that can solve specific parts for you
22:19 < ws-client> <ChillerDragon> ath mentioned
22:19 < bridge> <kollpotato> it existed in some cheat client
22:19 < ws-client> <ChillerDragon> legit client*
22:19 < bridge> <kollpotato> oh right
22:19 < ws-client> <ChillerDragon> the lua is what made it sus
22:19 < bridge> <pilonpl> It could even work with lags if do it properly
22:19 < ws-client> <ChillerDragon> https://github.com/AllTheHaxx/AllTheHaxx
22:20 < bridge> <kollpotato> this is the most impressive ddnet client tbh
22:20 < ws-client> <ChillerDragon> @kollpotato how many clients do you even know?
22:20 < ws-client> <ChillerDragon> u know h-client and k-client?
22:21 < ws-client> <ChillerDragon> teeuniverse
22:21 < bridge> <kollpotato> no idea what they are
22:21 < bridge> <pilonpl> https://youtu.be/h5SwIaGlbIA
22:21 < bridge> <chairn> const applies to `*`, not `char`, so it's a const pointer of char (pointer is const, not data)
22:22 < bridge> <kollpotato> h-client existed before i even went to the 1st grade
22:22 < bridge> <kollpotato> and its teeworlds client
22:22 < ws-client> <ChillerDragon> o rite
22:23 < bridge> <kollpotato> where screenshots of h-client
22:24 < bridge> <kollpotato> alright im just gonna download it
22:24 < bridge> <kollpotato> oh no
22:24 < bridge> <kollpotato> 404
22:24 < bridge> <kollpotato> :(
22:24 < ws-client> <ChillerDragon> here a video by heroi https://www.youtube.com/watch?v=UYgNtvA8I44
22:24 < ws-client> <ChillerDragon> who just happend to be active in tw again
22:25 < ws-client> <ChillerDragon> he even is on this discord xd
22:25 < bridge> <chillerdragon> @heroiamarelo: epic video
22:25 < ws-client> <ChillerDragon> my favorite h-client video is the one from unsigned char him self tho where he uses his tablet as map editor
22:26 < bridge> <kollpotato> did u switch irc clients just for that
22:26 < ws-client> <ChillerDragon> yes
22:26 < bridge> <kollpotato> whats the difference between them anyway
22:26 < ws-client> <ChillerDragon> ti ping him xd
22:26 < bridge> <kollpotato> one got a nice avatar
22:26 < ws-client> <ChillerDragon> well one is irc and blazingly epic
22:26 < ws-client> <ChillerDragon> and the other one is fakin matrix which is the worst
22:26 < ws-client> <ChillerDragon> but at least i can ping ppl there
22:26 < ws-client> <ChillerDragon> here i can only ping ppl that wrote one of the last 200 or so messages
22:26 < bridge> <kollpotato> i let discord collect my data
22:27 < bridge> <kollpotato> nothing that important
22:27 < bridge> <kollpotato> irc is too advanced for me
22:27 < bridge> <kollpotato> why is pinging so weird for u
22:27 < bridge> <kollpotato> how 200 messages is the limit
22:28 < bridge> <pilonpl> Just use discord?
22:28 < bridge> <vahemaaa> no
22:28 < bridge> <kollpotato> omg h client has map previews
22:28 < bridge> <kollpotato> ddnet-rs promises that too i think
22:28 < ws-client> <ChillerDragon> > how 200 messages is the limit
22:28 < ws-client> <ChillerDragon> i coded it that way xd
22:28 < ws-client> <ChillerDragon> https://chat.zillyhuhn.com/
22:28 < ws-client> <ChillerDragon> i use my own irc wrapper
22:29 < bridge> <kollpotato> based
22:29 < bridge> <milkeeycat> is it in bash at least?
22:29 < ws-client> <ChillerDragon> its typescript
22:29 < bridge> <kollpotato> whats sign up token
22:29 < ws-client> <ChillerDragon> nimrocks
22:30 < ws-client> <ChillerDragon> elo
22:30 < ws-client> <kolpotat> u can see me join right
22:30 < ws-client> <ChillerDragon> in the top right i saw u pop online
22:30 < bridge> <pilonpl> Why not go
22:30 < ws-client> <ChillerDragon> those are also the ppl u can ping with @ <tab> if you have the extension enabled
22:30 < ws-client> <ChillerDragon> @pilonpl idk go
22:30 < bridge> <pilonpl> Or some other less slop programming language
22:31 < ws-client> <ChillerDragon> well the frontend was js 
22:31 < ws-client> <ChillerDragon> so having the same language for the backend was a natuaral choice for me
22:31 < ws-client> <ChillerDragon> so i can share the websocket message types
22:31 < ws-client> <kolpotat> can i contribute to the ui
22:31 < ws-client> <kolpotat> or its not open source
22:31 < ws-client> <ChillerDragon> ofc xd
22:31 < ws-client> <kolpotat> omagad nice
22:32 < ws-client> <ChillerDragon> https://github.com/discord-irc/discord-irc
22:32 < ws-client> <kolpotat> XD i thought for a sec it was something official from discord
22:32 < ws-client> <ChillerDragon> @milkeeycat u are top contributor and dont know if its written in bash xd
22:34 < bridge> <kollpotato> is Prudrugtiq ChillerDragon and ZillyHuhn the same person
22:35 < ws-client> <ChillerDragon> well Prudrugtiq is not really a person its a channel i have together with NewTee its like pro drug/duck tick
22:35 < ws-client> <ChillerDragon> and ZillyHuhn is me ZillyHuhn = ChillerDragon
22:35 < ws-client> <ChillerDragon> u know cuz ChillerDragon -> SchillerDragun -> SchilliDreckhun -> ZillyHuhn
22:36 < bridge> <kollpotato> wait my irc broke
22:36 < bridge> <kollpotato> or its my skill issue
22:36 < ws-client> <ChillerDragon> either is possible
22:36 < bridge> <kollpotato> epic name backstory
22:36 < bridge> <kollpotato> xd
22:37 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1394055067203797123/image.png?ex=68756a74&is=687418f4&hm=bff19f2d7534203a0a8498356ad50260dc09535b6a662902ad36b42bcbe8f3af&
22:37 < bridge> <kollpotato> yeah my wifi just sucks
22:37 < bridge> <kollpotato> i have a 8 year old router
22:37 < ws-client> <pilonpl> hello
22:37 < bridge> <kollpotato> its slowly dying
22:37 < ws-client> <ChillerDragon> i have the same
22:37 < ws-client> <ChillerDragon> it still works i think its a bug in my code
22:37 < ws-client> <pilonpl> why does this app look so fake lol
22:37 < ws-client> <ChillerDragon> or my deployment
22:37 < ws-client> <pilonpl> like a roblox game
22:38 < ws-client> <kolpotat> its real discord 
22:38 < ws-client> <kolpotat> trust
22:38 < ws-client> <pilonpl> also it doesn't really work well on mobile
22:38 < ws-client> <ChillerDragon> i dont even remember how discord looks. to me this looks pretty real xd
22:38 < ws-client> <pilonpl> mobile update when?
22:38 < ws-client> <ChillerDragon> i use it from the phone sometimes
22:38 < ws-client> <ChillerDragon> it kinda works
22:38 < ws-client> <ChillerDragon> has hamburger menu and all
22:38 < ws-client> <pilonpl> <:jaouis:771825988556292096> 
22:39 < bridge> <kollpotato> ok it died again
22:39 < bridge> <kollpotato> how do u transfer the messages
22:39 < ws-client> <ChillerDragon> it sends the messages from js frontend to js backend
22:39 < bridge> <kollpotato> ohh
22:39 < ws-client> <ChillerDragon> js backend runs on my vps which spawns a irc client using js irc lib
22:40 < ws-client> <ChillerDragon> that irc client is connected to #ddnet on quakenet
22:40 < ws-client> <ChillerDragon> which is bridged by mattermost hosted by heino him self to ddnet discord
22:40 < ws-client> <pilonpl> so it's double bridged?
22:40 < ws-client> <ChillerDragon> yes
22:40 < bridge> <kollpotato> so epic
22:40 < ws-client> <ChillerDragon> you can spin this even further because my backend has the same webhooks api like discord
22:40 < bridge> <kollpotato> so technically i can build my own version too
22:40 < ws-client> <ChillerDragon> i can bridge my backend to a fake tw server for example
22:40 < ws-client> <pilonpl> how jard would it be to implement mobile version properly lol
22:41 < ws-client> <ChillerDragon> wdym properly
22:41 < bridge> <dailysoso> yo
22:41 < ws-client> <pilonpl> this is terrible 
22:41 < ws-client> <ChillerDragon> rude
22:41 < bridge> <kollpotato> helo
22:41 < ws-client> <ChillerDragon> idk im not a mobile web dev
22:41 < ws-client> <ChillerDragon> to me all sites on mobile are horriblw
22:41 < ws-client> <ChillerDragon> i try to avoid using my phone for web anyways
22:41 < bridge> <dailysoso> where i can ask about fixing my problem with ddnet?
22:41 < ws-client> <ChillerDragon> here
22:42 < ws-client> <ChillerDragon> and on github
22:42 < ws-client> <ChillerDragon> @dailysoso sosal?
22:42 < bridge> <kollpotato> #bugs
22:42 < bridge> <kollpotato> or #questions
22:44 < ws-client> <kolpotat> i have an extreme urge to rewrite this client in rust
22:44 < ws-client> <kolpotat> its a disease
22:44 < ws-client> <ChillerDragon> lel
22:44 < ws-client> <kolpotat> "rewrite in rust"
22:44 < ws-client> <ChillerDragon> webdev front end in rust? xd
22:45 < ws-client> <kolpotat> yeah theres a nice framework 
22:45 < ws-client> <kolpotat> like react but rust
22:45 < ws-client> <ChillerDragon> bru
22:45 < ws-client> <kolpotat> but binary sizes are at least 120kb
22:45 < ws-client> <ChillerDragon> xd
22:45 < ws-client> <kolpotat> so not blazingly fast load times
22:45 < ws-client> <ChillerDragon> also not blazingly fast runtime
22:45 < ws-client> <kolpotat> wasm is fast
22:46 < ws-client> <ChillerDragon> i thought rust for web is slower than plain js because it needs some goofed way to access the dom
22:46 < ws-client> <kolpotat> if you are doing it without any libraries then yeah
22:46 < ws-client> <kolpotat> u need to create js glue
22:46 < ws-client> <kolpotat> with wasm-bindgen and other stuff its the same as writing js code
22:47 < ws-client> <kolpotat> until you try doing intervals or complex logic
22:47 < ws-client> <kolpotat> then it all goes downhill
22:49 < ws-client> <ChillerDragon> im no rust hater but for web i feel like its the wrong tool xd
22:49 < ws-client> <ChillerDragon> who even uses that
22:49 < ws-client> <ChillerDragon> im not talking backend just frontend
22:49 < ws-client> <ChillerDragon> and also not like full webgl frames like games i mean regular websites 
22:50 < ws-client> <kolpotat> yeah but ive been fed up with js 
22:50 < bridge> <pilonpl> Rewrite the web in rust
22:50 < bridge> <dailysoso> hi can u check bugs?
22:50 < bridge> <kollpotato> @pilonpl now u are facing the consequences of having a dev role
22:51 < bridge> <pilonpl> Well
22:51 < ws-client> <ChillerDragon> xd
22:51 < ws-client> <ChillerDragon> @dailysoso yes ur head of bug fixings mr ddnet maintainer @pilonpl will look into your matter shortly
22:51 < ws-client> <ChillerDragon> our* not ur xd
22:52 < ws-client> <kolpotat> does irc not support message editing?
22:52 < ws-client> <kolpotat> just wondering
22:52 < bridge> <milkeeycat> irc users don't know what message editing is
22:53 < bridge> <pilonpl> Just don't make mistakes
22:53 < bridge> <pilonpl> Simple
22:54 < bridge> <milkeeycat> but if you used my bridge https://github.com/MilkeeyCat/deez_bridge, it allows editing xdd
22:54 < bridge> <kollpotato> omg written in go
22:54 < bridge> <kollpotato> blazingly fast
22:54 < bridge> <kollpotato> garbage collection
22:55 < bridge> <pilonpl> I guess we have to rewrite it in rust
22:55 < bridge> <kollpotato> ok so we got typescript one, golang one, i should make a rust one!
22:55 < bridge> <kollpotato> exactly
22:55 < bridge> <kollpotato> u read my mind
22:56 < bridge> <pilonpl> Rust seems really complicated tho
22:56 < bridge> <kollpotato> true
22:56 < bridge> <pilonpl> How can you enjoy programming in rust
22:56 < bridge> <kollpotato> c is extremely simple but error prone
22:56 < bridge> <pilonpl> C seems a lot more fun
22:56 < bridge> <kollpotato> rust adds abstractions but also makes it much simpler to not shoot yourself in the foot
22:57 < bridge> <pilonpl> I should probably write minesweeper in rust
22:57 < bridge> <kollpotato> actually a nice idea
22:57 < bridge> <kollpotato> use macroquad
22:57 < bridge> <kollpotato> its extremely simple
22:57 < bridge> <pilonpl> Immutable stuff is really important in rust i think?
22:58 < bridge> <kollpotato> not sure what you mean
22:58 < bridge> <kollpotato> rust just makes everything immutable by default
22:58 < bridge> <kollpotato> you can make it mutable
22:58 < bridge> <pilonpl> Yeah but i guess immutability is convenient in rust idk
22:59 < bridge> <kollpotato> wait till you hear about phantom data and lifetimes
22:59 < bridge> <pilonpl> Phantom data?
22:59 < bridge> <pilonpl> I never even heard about it
22:59 < bridge> <kollpotato> yea
23:00 < bridge> <kollpotato> its basically a zero sized marker
23:00 < bridge> <kollpotato> u can tie objects to lifetimes
23:00 < bridge> <kollpotato> but im not an expert in that tbh
23:00 < bridge> <kollpotato> i found one use case though
23:01 < bridge> <pilonpl> And what's macroquad?
23:01 < bridge> <kollpotato> layout struct
23:01 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1394061092510236692/image.png?ex=68757010&is=68741e90&hm=c3a9cf75a6218e09e993a07fde4c573745c4791f8f83c43c832583d824c08ece&
23:01 < bridge> <kollpotato> you can pass direction
23:01 < bridge> <kollpotato> it will use 0 bytes
23:01 < bridge> <kollpotato> but then i can have different implementations based on that generic
23:01 < bridge> <kollpotato> mini game engine
23:01 < bridge> <kollpotato> it has sound and graphics
23:01 < bridge> <pilonpl> Nooooo
23:01 < bridge> <kollpotato> extremely simple to use
23:01 < bridge> <pilonpl> Game engine?
23:01 < bridge> <pilonpl> That's too much bloat
23:02 < bridge> <kollpotato> you wanted to make minesweeper
23:02 < bridge> <pilonpl> I can use sdl
23:02 < bridge> <kollpotato> its the opposite
23:02 < bridge> <pilonpl> Or raylib
23:02 < bridge> <kollpotato> macroquad is the most lightweight one
23:02 < bridge> <kollpotato> 35 dependencies
23:02 < bridge> <kollpotato> bevy has like 400
23:02 < bridge> <pilonpl> 35 dependencies?
23:02 < bridge> <pilonpl> Seems like a lot still
23:02 < bridge> <kollpotato> nah
23:02 < bridge> <kollpotato> when u enter rust ecosystem its common
23:03 < bridge> <kollpotato> u can use sdl in rust too
23:03 < bridge> <kollpotato> im doing it for my mini project xd
23:03 < bridge> <kollpotato> https://docs.rs/sdl2/latest/sdl2/
23:04 < bridge> <pilonpl> Is there an sdl3 crate?
23:04 < bridge> <kollpotato> yep
23:04 < bridge> <kollpotato> https://docs.rs/sdl3/latest/sdl3/
23:04 < bridge> <kollpotato> its the same pretty much
23:05 < bridge> <kollpotato> but im using raw bindings
23:05 < bridge> <kollpotato> its more convenient for me
23:05 < bridge> <pilonpl> Idk
23:05 < bridge> <pilonpl> I remember rust being quite confusing for me
23:06 < bridge> <pilonpl> But now i bit more experienced probably
23:06 < bridge> <kollpotato> it was for me too about 2 years ago
23:06 < bridge> <kollpotato> i didnt understand the idea of rust
23:06 < bridge> <kollpotato> just stupid borrow checker
23:06 < bridge> <kollpotato> does not let ur code compile
23:06 < bridge> <pilonpl> How does the borrow checker work btw
23:07 < bridge> <kollpotato> uh
23:07 < bridge> <kollpotato> the are like 3 rules
23:07 < bridge> <kollpotato> u can have as many read only borrows
23:07 < bridge> <kollpotato> or only one mutable borrow
23:08 < bridge> <kollpotato> yeah i shouldnt really be telling u this
23:08 < bridge> <kollpotato> might mislead u
23:08 < bridge> <kollpotato> i suggest u watch lets get rusty yt channel
23:09 < bridge> <kollpotato> it helped me understand rust a lot
23:09 < bridge> <pilonpl> I prefer reading i think
23:09 < bridge> <pilonpl> Because YouTubers talk too much lol
23:09 < bridge> <pilonpl> But what's the third rule?
23:09 < bridge> <kollpotato> his videos are short
23:09 < bridge> <kollpotato> thats why i like them
23:09 < bridge> <kollpotato> straight to the point
23:09 < bridge> <kollpotato> there are actually more
23:09 < bridge> <kollpotato> https://rustc-dev-guide.rust-lang.org/borrow_check.html
23:11 < bridge> <Assa> @robyt3 thanks for the review, going to open my mock requests if I find time. There I already moved the files as suggested, I fully agree with your review
23:14 < bridge> <kollpotato> @pilonpl btw because of all that _weirdness_ rust introduces, it has some types that actually prevent borrow checker rules being checked at compile time
23:14 < bridge> <kollpotato> https://doc.rust-lang.org/std/cell/struct.RefCell.html
23:15 < bridge> <pilonpl> Okay that's weird
23:15 < bridge> <pilonpl> Why can't you just put everything in an arena and call it a day lol
23:15 < bridge> <pilonpl> Memory safety solved
23:16 < bridge> <kollpotato> yeah or just have an infinite heap memory
23:16 < bridge> <kollpotato> stored in a 3d glass
23:17 < bridge> <pilonpl> Actually if you allocate memory your program probably uses too much of it
23:17 < bridge> <kollpotato> how is that
23:18 < bridge> <kollpotato> u need allocations for almost every single program
23:18 < bridge> <pilonpl> \s
23:18 < bridge> <pilonpl> Lol
23:19 < bridge> <pilonpl> But actually using as little memory as possible is a good idea anyways
23:19 < bridge> <pilonpl> Because cpu caches are small
23:19 < bridge> <kollpotato> @milkeeycat blazingly fast pointer dereference
23:19 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1394065840231415808/image.png?ex=6875747c&is=687422fc&hm=2b783e25f705a2387ca782c30b345b737d43428c05d53b33ed85cc8f6889d040&
23:20 < bridge> <chillerdragon> Xd
23:20 < bridge> <kollpotato> yeah thats how it was 50 years ago
23:20 < bridge> <kollpotato> now we got gigs of memory we can waste without getting punished
23:20 < bridge> <kollpotato> yippe
23:23 < bridge> <pilonpl> Now even windows start menu uses react
23:23 < bridge> <pilonpl> Every app is a browser
23:23 < bridge> <kollpotato> looks like it crashes because of this
23:23 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1394066820943708190/image.png?ex=68757566&is=687423e6&hm=72ee08fe81eeb9630279021edc687aef912f6b45f5615ad0cb81c997c60de0d8&
23:23 < bridge> <kollpotato> i didnt setup the variables
23:24 < bridge> <Ewan> this was like 3 years ago?
23:24 < bridge> <Ewan> maybe longer
23:24 < bridge> <pilonpl> No limits == no creativity
23:24 < bridge> <kollpotato> lmfao its so stupid
23:27 < bridge> <jxsl13> Go detected
23:27 < bridge> <pilonpl> Laws of physics are stupid
23:27 < bridge> <kollpotato> yes
23:27 < bridge> <kollpotato> i have skill issue with bash
23:27 < bridge> <jxsl13> need help?
23:27 < bridge> <kollpotato> yes
23:27 < bridge> <jxsl13> send code
23:27 < bridge> <kollpotato> how do i get the variables from .env
23:27 < bridge> <kollpotato> to my terminal
23:27 < bridge> <jxsl13> with more context
23:28 < bridge> <kollpotato> source .env does not work
23:28 < bridge> <jxsl13> os.Getenv
23:28 < bridge> <kollpotato> i meant bash
23:28 < bridge> <kollpotato> xd
23:28 < bridge> <kollpotato> im using milkeeycats bridge
23:28 < bridge> <jxsl13> Me confused
23:28 < bridge> <kollpotato> https://github.com/MilkeeyCat/deez_bridge
23:29 < bridge> <kollpotato> i need to setup a bot sadly
23:29 < bridge> <kollpotato> wont work otherwise
23:29 < bridge> <kollpotato> no one will let me to invite a bot here for irc xD
23:29 < bridge> <pilonpl> export VAR=value?
23:29 < bridge> <kollpotato> no one will let me invite a bot here for irc xD
23:29 < bridge> <jxsl13> application expects .env file to be in the same folder from which you start the application (PWD)
23:30 < bridge> <kollpotato> yep i run it from pwd
23:30 < bridge> <jxsl13> is .env in PWD
23:30 < bridge> <kollpotato> yes
23:30 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1394068524153966703/image.png?ex=687576fc&is=6874257c&hm=c7517d631d9e3e385bbf82916c6fcb7e7a48b65af6a643f5f842d7e0e49c8886&
23:30 < bridge> <kollpotato> kaboom
23:30 < bridge> <pilonpl> Wait but what is in .env?
23:30 < bridge> <kollpotato> ```
23:30 < bridge> <kollpotato> IRC_SERVER_HOST="127.0.0.1"
23:30 < bridge> <kollpotato> IRC_SERVER_PORT=6667
23:30 < bridge> <kollpotato> IRC_NICKNAME="deez_bridge"
23:30 < bridge> <kollpotato> IRC_CHANNEL="#dev"
23:30 < bridge> <kollpotato> 
23:31 < bridge> <kollpotato> DISCORD_BOT_TOKEN="********************"
23:31 < bridge> <kollpotato> DISCORD_BOT_GUILD_ID="*******************"
23:31 < bridge> <kollpotato> DISCORD_BOT_CHANNEL_ID="69420"
23:31 < bridge> <kollpotato> 
23:31 < bridge> <kollpotato> ENV=prod
23:31 < bridge> <kollpotato> ```
23:31 < bridge> <Ewan> i feel like .env shouldn’t need export. it’s based on python conventions
23:31 < bridge> <Ewan> not necessarily bash compatible
23:31 < bridge> <jxsl13> can you dona ls -la
23:31 < bridge> <Ewan> tools i use seem to support it but it’s not a baseline
23:31 < bridge> <jxsl13> ls -la pls
23:31 < bridge> <Ewan> if i have direnv source .env manually with the shell it has the same effect but thats prob not your setup
23:32 < bridge> <melon> `go build -o main cmd/main.go` you built it like that ay?
23:32 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1394068907861610496/image.png?ex=68757758&is=687425d8&hm=914656300a2f81d3f16eb0dbebc8f8cc5f46f5ade4d1ba8a901eb5874a51253e&
23:32 < bridge> <jxsl13> the application does not take env variables into account at all
23:32 < bridge> <kollpotato> yes
23:32 < bridge> <melon> Try just go run cmd/main.go
23:32 < bridge> <melon> Try just `go run cmd/main.go`
23:33 < bridge> <kollpotato> still the same
23:33 < bridge> <kollpotato> its supposed to load it
23:33 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1394069230516699298/image.png?ex=687577a5&is=68742625&hm=ea629c73ea7a8809903d7413c6edafcadb77ff4f3e1bc176fa9a878bcd3ef80b&
23:33 < bridge> <kollpotato> im gonna copy the file to .dev.env
23:33 < bridge> <kollpotato> yea
23:33 < bridge> <kollpotato> something works
23:34 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1394069385970192425/image.png?ex=687577ca&is=6874264a&hm=85bda6b9797f289647ce8e4e3466d025e56107384dfa8c8f9e26c33ffb0b3e1e&
23:34 < bridge> <kollpotato> no null pointer dereferences
23:34 < bridge> <kollpotato> but it is weird it did not load the .env file
23:34 < bridge> <kollpotato> only .dev.env
23:34 < bridge> <jxsl13> your problem is most likely the line with \#dev
23:35 < bridge> <jxsl13> try writing \#dev
23:35 < bridge> <jxsl13> `\\#dev`
23:35 < bridge> <jxsl13> in discord
23:35 < bridge> <jxsl13> and use that value
23:35 < bridge> <jxsl13> single backslash
23:35 < bridge> <kollpotato> i did not setup the bot yet
23:35 < bridge> <kollpotato> and irc host
23:36 < bridge> <jxsl13> the # as comment breaks your config
23:36 < bridge> <kollpotato> wait really
23:36 < bridge> <kollpotato> no
23:37 < bridge> <kollpotato> nothing changes
23:37 < bridge> <kollpotato> it just exits with code 1
23:37 < bridge> <jxsl13> what's the new config?
23:37 < bridge> <jxsl13> just to make sure
23:37 < bridge> <kollpotato> i tried all the combinations
23:37 < bridge> <kollpotato> go run was the problem
23:38 < bridge> <kollpotato> i built the project
23:38 < bridge> <kollpotato> now there are no errors
23:38 < bridge> <jxsl13> hm
23:38 < bridge> <kollpotato> ty
23:38 < bridge> <kollpotato> i got a bot to use for this
23:38 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1394070608706535578/image.png?ex=687578ed&is=6874276d&hm=01a26fe80b1fb861b7f60962841ca04fd125bb946eaf6a56b2c2903ca959ae1d&
23:39 < bridge> <kollpotato> technically i can connect to ddnet irc right
23:39 < bridge> <kollpotato> i dont need any special credentials
23:39 < bridge> <jxsl13> yep
23:39 < bridge> <jxsl13> only discord needs a token
23:40 < bridge> <jxsl13> @milkeeycat shameless advertising for small cli tools: https://github.com/jxsl13/cli-config-boilerplate
23:41 < bridge> <kollpotato> what does it do
23:41 < bridge> <kollpotato> im clueless
23:41 < bridge> <jxsl13> what exactly? my link?
23:41 < bridge> <kollpotato> yea
23:42 < bridge> <jxsl13> that's a small boilerplate library in order to have support cli flags, env and .env pretty easily
23:42 < bridge> <jxsl13> I ise that for all of my cli tools, which usually don't do much and just need a few config parameters
23:42 < bridge> <jxsl13> use*
23:43 < bridge> <kollpotato> ah makes sense now
23:43 < bridge> <kollpotato> epic
23:43 < bridge> <kollpotato> you have 2 stars now
23:44 < bridge> <filoqcus> https://tenor.com/view/pipotam-baby-hippo-hippo-wash-shower-gif-3406421565683572068
23:44 < bridge> <jxsl13> I'm a mainstream github dev now
23:44 < bridge> <jxsl13> awesome
23:45 < bridge> <jxsl13> pretty limited, would not suggest using it for anything that needs nested configs.
23:45 < bridge> <kollpotato> i dont use go sadly
23:46 < bridge> <kollpotato> im rust fanboy
23:46 < bridge> <jxsl13> is ok 😭
23:46 < bridge> <kollpotato> :feelsbadman:
23:48  * kolpotat slaps kolpotat around a bit with a large fishbot
23:48 < bridge> <kollpotato> i think im doing something wrong with quakenet irc
23:48 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1394073117462106314/image.png?ex=68757b43&is=687429c3&hm=8a85473bb5432f2059da78c0257cbb424e89d9292d9d3c92fa7b58a463e90ceb&
23:48 < bridge> <kollpotato> why is this a feature
23:48 < bridge> <kollpotato> xd
23:49 < bridge> <kollpotato> wait i can see my messages there
23:49 < kolpotat> test
23:49 < bridge> <kollpotato> omg
23:49 < bridge> <jxsl13> that is your discord join message
23:49 < bridge> <kollpotato> i pressed slap
23:49 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1394073310538760374/image.png?ex=68757b71&is=687429f1&hm=ba20fb836e99fa171d53a7a509d3c31da83f8cd58572ee495479abaed2348675&
23:49 < bridge> <jxsl13> which is sent to irc
23:49 < bridge> <jxsl13> oh, there is a slap ;0
23:50  * kolpotat slaps ws-client around a bit with a large fishbot
23:50 < bridge> <kollpotato> i can slap everyone xD
23:50 < bridge> <jxsl13> *runs away* I'm off
23:51  * kolpotat slaps ChillerDragon around a bit with a large fishbot
23:51  * kolpotat slaps ChillerDragon around a bit with a large fishbot
23:51  * kolpotat slaps ChillerDragon around a bit with a large fishbot
23:53 < deez_bridge> <kollpotato> test again
23:53 < bridge> <kollpotato> yooo
23:53 < bridge> <kollpotato> ive got 3 irc clients now
23:57 < bridge> <chillerdragon> @milkeeycat: I think I mentioned this before but forgot what the outcome was. What about global namespace pollution? I know like only 3 C libraries but all of them seem to have prefixes for their public symbols. Do we need that too? What if someone try’s to include the ddnet\_protocol lib just to get compile errors because the symbol `Token` conflicts .\_.
23:58 < bridge> <kollpotato> name it
23:58 < bridge> <kollpotato> SecurityToken
23:58 < bridge> <kollpotato> problem solved
23:58 < bridge> <chillerdragon> So long names for everything instead of specific consistent prefix?
23:58 < bridge> <chillerdragon> I like the curl\_ and SDL\_ prefixes somehow
23:59 < bridge> <kollpotato> but what prefix could it be
23:59 < bridge> <kollpotato> ddnet_Token
23:59 < bridge> <kollpotato> too verbose
23:59 < bridge> <chillerdragon> That is a big question yes
23:59 < bridge> <kollpotato> dp_Token
