00:10 < eeeee> cool hookrace nim post
00:11 < eeeee> any plans for runtime code generation in nim?
00:12 <@deen> runtime code generation?
00:12 <@deen> like embedding lua, but embedding nim instead?
00:12 < eeeee> you know like with jit or something
00:12 <@deen> I think you kind of can do it
00:12 <@deen> should run as well as running stuff at compiletime
00:13 <@deen> oh yeah, i should have tested and written about that
00:13 <@deen> using nim at compile time, at run time, and for user scripts in Nim
00:13 < eeeee> nice
00:19 <@deen> and probably no one knows this even works..
00:21 < eeeee> i kind of want to play with nim now
00:21 < eeeee> but i have to finish the js thing first
00:21 <@deen> well, everything is a bit buggy :P
00:21 <@deen> i'm fixing up the VM at runtime right now
00:23 <@deen> or maybe i'm using it in a wrong way
00:26 <@deen> ah, you could also ship with a statically linked tcc and a statically linked nim compiler, and just compile your own code properly :P
00:26 <@deen> that's a bit similar to the tcc repl i'm working on
00:26 <@EastByte> but tcc isn't much optimized I guess
00:27 <@deen> EastByte: much better than running code in a VM
00:27 <@EastByte> sure :)
00:27 <@deen> EastByte: about 30-50% of optimized gcc/clang
00:27 <@deen> much faster than most languages
00:27 <@EastByte> nice
00:30 < eeeee> also if it's emiting C code (and no c++) shouldn't be that hard to hook it up to llvm
00:32 < eeeee> but i have a very vague understanding how code generation would interact with runtime
00:32 < eeeee> used it a bunch of times in C# and it "just worked" somehow
00:33 < eeeee> i.e. generated a class and used it in the code just like a regular predefined object
00:35 < eeeee> guess similar thing in C would be compiling your generated code into a separate .so and dynamically loading it
00:35 < eeeee> but then that requires that your current code the the thing you compiled are binary compatible
00:39 <@deen> hm, yeah
00:39 <@deen> would end up a bit more complicated
02:41 < Nimda> Awayza by Ama just released on Solo at 2015-01-24 02:40
03:28 < Nimda> DDNet Brazil went down!
03:29 < Nimda> DDNet Brazil went back online!
06:08 < Nimda> DDNet CHN went down!
06:09 < Nimda> DDNet CHN went back online!
12:08 < eeeee> one size fits all? not anymore! http://tw.qwe123.info/d.html
12:14 < ochristi> I get scroll bars, where a bit at the bottom and right is missing, the area scales such that the menu area is right at the edge, also resizing sometimes breaks the texts
12:18 < EastByte> awesome
12:23 <@deen> eeeee: wow, that's cool
12:55 < coffee> In some ways, nim looks like javascript
12:56 <@EastByte> wut?
12:56 < coffee> I mean ecmascript 6
12:56 < coffee> https://github.com/lukehoban/es6features
12:56 <@EastByte> in which way?
12:57 < coffee> const/let keywords
12:57 <@EastByte> for me it looks like mixture of pascal and python
12:58 < coffee> Did you try RUST language?
12:59 <@EastByte> I tried to learn rust
12:59 <@EastByte> didn't work quite well
13:00 < coffee> It's a pity, the syntax looks great too
13:00 <@EastByte> it's kind of complicated and I have no idea how rust can be used for average software today
13:01 < coffee> There is the servo engine
13:01 <@EastByte> yea
13:01 <@EastByte> the first things I do when learning a new programming languagee is doing some networking/socket stuff
13:01 <@EastByte> but afaik you can't even use nonblocking io in rust
13:26 <@deen> EastByte: oh yeah, actually that was one of the reasons I stopped considering rust for immediate projects
13:27 <@deen> (I just remembered)
13:29 <@EastByte> ^^
13:29 <@deen> the networking stuff looked pretty bad on rust
13:30 <@deen> i guess it will get improved since they want to make a browser
13:30 <@EastByte> also rust is going to be used for gamedev aswell
13:31 <@deen> yeah, i've seen
13:31 <@deen> but i don't want the complicated memory management of rust
13:33 <@EastByte> but it would be more efficient and less error prone I guess?
13:34 <@deen> less error prone than automatic memory management?
13:34 <@deen> yes, more efficient if you really need it
13:34 <@deen> but i haven't seen a case where rust was faster than nim :P
13:34 <@EastByte> haha
13:34 <@EastByte> iirc it's all about garbage collecting at compile time?
13:35 <@deen> in rust?
13:35 <@EastByte> yea
13:35 <@deen> not sure, they change stuff all the time in rust
13:35 <@deen> i'm not keeping up anymore^^
13:35 <@EastByte> glad we have heinrich5991 here
13:56 <@deen> and Nim is just fun to write in
13:58 <@EastByte> indeed
14:05 <@heinrich5991> most of the time, rust is just c memory management, without the chance of it going wrong
14:12 <@EastByte> okay
14:14 <@EastByte> and here we see how to setup uptee
14:14 <@EastByte> https://eastbit.net/priv/24_Jan-15-14_11.png
14:15 <@heinrich5991> EastByte: you might want to help jxsl
14:15 <@heinrich5991> what WM is this?
14:16 <@EastByte> only 5 different daemons are are needed
14:16 <@EastByte> this is a tmux session
14:16 <@EastByte> wm = i3
14:16 <@heinrich5991> k :)
14:17 <@heinrich5991> why use tmux if you have i3?
14:18 <@EastByte> it's a session on my dedicated server
14:18 <@EastByte> so I can detach
14:18 <@heinrich5991> ah
16:20 < ochristi> I think there might be an issue with the unfreeze time in combination with ninja
17:17 < Learath2> so deen how do i reproduce the progress bar thing
17:21 <@deen> Learath2: download a map through fallback
17:21 <@deen> Learath2: then download one through http
17:22 < Learath2> uuhh how can i get it to fallback any missing maps ?
17:27 <@deen> hm?
17:28 <@deen> just download a map that's not on ddnet?
17:31 < Learath2> oh it also happens on the normal fallback 
17:31 < Learath2> i thought it was specific to crcfail
18:03 < Learath2> ow that overflow :D
18:37 < Learath2> ipv6 quakenet doesnt seem to be doing so well :D
18:38 <@EastByte> I tried using it twice
18:38 <@EastByte> forget it
18:44 < Learath2> EastByte: if i know a human cant possibly break it is it good enough ?
18:44 < Learath2> like it'll take some 0.1 seconds before the download is totally cancelled and a  new one can be started
18:46 < Learath2> and worst case even if they manage to break it it will just leak a tad bit
18:46 <@EastByte> ehm, what are you talking about?
18:47 < Learath2> If a user cancels a download now it deletes the object which SIGSEGVs 
18:48 < Learath2> i made it so its deleted like fractions of seconds after the actual abort click to make sure libcurl actually stopped accessing it
18:48 < Learath2> if a user is a god and connects to a server within milliseconds it will leak 
18:49 <@deen> tw client crashes for me every 50th time i run it anyway :P
18:49 <@deen> when you connect to a server too quickly
18:49 < Learath2> yeah and it crashes nearly every time i close it
18:50 <@EastByte> is there no http lib which allows proper interaction and works without threading?
19:19 < Learath2> works without threading ?? im not going to block the main thread
20:23 < Learath2> i dont get it how does this even overflow :/
23:01 < ochristi> hah I added ddnet as non steam app an can stream it :D
23:07 < eeeee> ochristi: could you specify what OS and browser did you try?
23:08 < ochristi> on windox
23:09 < eeeee> !wtf windox
23:09 < Nimda> windox has no definition. Feel free to add one at http://www.urbandictionary.com/add.php?word=windox
23:09 < Learath2> eeeee: it has some scroll for me too
23:09 < Learath2> windows 7 both on chrome and ff
23:09 < eeeee> hmm no scroll on mac
23:10 < ochristi> eeeee: windoof ;)
23:10 < Learath2> i think its like a pixel or two too much which creates a scrollbar which takes even more space and that makes a bit of scroll
23:11 < Learath2> eeeee: refreshing two or three times fixes it in chrome so thats weird
23:11 < eeeee> okay should be fixed
23:12 < Learath2> oh :D
23:12 < Learath2> or that
23:12 < ochristi> hm now I do not get any scroll, strange
23:12 < Learath2> yep works both in ff and chrome
