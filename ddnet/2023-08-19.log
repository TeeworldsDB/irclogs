00:03 < bridge_> <Voxel> https://youtu.be/QMbx0dTWJIQ
00:03 < bridge_> <Voxel> is this accurate
01:10 < bridge_> <devinci24> half accurate, if you learn by yourself you might end up with unreadable, inefficient, and wayy too long code. but yeah, in my opinion it's the best way to learn the basics
01:49 < bridge_> <teero777> hmm i would try to build then if you dont know something or something seems odd then you check a book or internet.
01:56 < bridge_> <blaiszephyr> sqlite as bu
02:04 < bridge_> <Ewan> step 1 to writing code: stop watching YouTube videos about writing code
02:31 < bridge_> <blaiszephyr> exactly, use chatgpt
02:31 < bridge_> <blaiszephyr> duuh
02:50 < bridge_> <Voxel> so im splitting up all the images for a PR and uhhhh
02:50 < bridge_> <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1142259321091141652/image.png
02:50 < bridge_> <Voxel> do i split up the debug font
02:52 < bridge_> <Voxel> nvm i dont think we go
02:52 < bridge_> <Voxel> nvm i dont think we do
03:00 < bridge_> <Voxel> Okay, I split up every image and named them accordingly. Am I allowed to send the ZIP file here so someone can review?
03:02 < bridge_> <Voxel> Currently, I have organized them by their purest form.
03:02 < bridge_> <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1142262267224789072/image.png
03:11 < bridge_> <louis> are you splitting up every single image?
03:23 < bridge_> <totar> if you're gonna split that stuff you need to provide a tool for people to split their existing images
03:23 < bridge_> <totar> like what mojang did
03:29 < bridge_> <Voxel> every image that in content.py that is split in game
09:24 < bridge_> <sedonya> Yeah, I need it to download exactly what I specify
10:03 < bridge_> <robyt3> We are close to removing the debug font entirely. Only some `debug 1` information and the entities text in the editor still use it.
10:04 < bridge_> <robyt3> Are you also moving some of the existing files? For example `arrow.png` probably belongs in `hud`
13:20 < bridge_> <Jupstar âœª> is some minecraft modder among us?
13:27 < ChillerDragon> sus
13:27 < ChillerDragon> jopsti ryo is pro mc modder
13:27 < ChillerDragon> https://github.com/edg-l?tab=repositories&q=&type=&language=java&sort=
13:27 < ChillerDragon> true java enjoyer
13:28 < bridge_> <Jupstar âœª> i never coded for forge, so i just wanted to know some stuff
13:28 < ChillerDragon> making a client?
13:28 < bridge_> <Jupstar âœª> i basically just want to know how exactly they deal with if 2 mods overwrite the same functionality
13:29 < ChillerDragon> for ddnet2?
13:29 < ChillerDragon> or you mc modder now?
13:30 < bridge_> <Jupstar âœª> yeah i want to expand my knowledge a bit
13:30 < bridge_> <Jupstar âœª> i mean i have ideas
13:30 < bridge_> <Jupstar âœª> but maybe there are better ones
16:47 < bridge_> <ryozuki> use fabric
16:48 < bridge_> <ryozuki> @jupeyy_keks wgat u want to know
16:49 < bridge_> <ryozuki> they declare themselves incompatible iirc
16:49 < bridge_> <ryozuki> actually
16:49 < bridge_> <ryozuki> forge works with hooks iirc? so it depends on the mod load order proba
16:49 < bridge_> <ryozuki> probs
16:50 < bridge_> <Voxel> yeah, i put arrow in hud
16:50 < bridge_> <Jupstar âœª> oh i c
16:50 < bridge_> <Jupstar âœª> ty
16:50 < bridge_> <Jupstar âœª> @_voxeldoesart when /upload xd
16:50 < bridge_> <Voxel> ask louis
16:51 < bridge_> <Jupstar âœª> i'm shy
16:51 < bridge_> <Voxel> @louis.place can you do the next skin upload batch? i did it last time
16:51 < bridge_> <ryozuki> @louis.place cmon work
16:57 < bridge_> <louis> shore but i dont have a computer so can't test skins
16:58 < bridge_> <louis> i'll just hope the skin preview is accurate haha
17:01 < bridge_> <Voxel> in that case should we make debug font an actual font file?
17:04 < bridge_> <robyt3> The remaining issues are with the editor entities text rendering:
17:04 < bridge_> <robyt3> 1. Using the normal text render might cause a larger FPS drop than using the debug font
17:04 < bridge_> <robyt3> 2. Someone added the hexadecimal info feature so the info is in hexadecimal aligns better, but it might not appear monospaced anymore when using the normal text render
17:04 < bridge_> <robyt3> Using the debug font is fast because it's not a real font file
17:05 < bridge_> <robyt3> The remaining issues are with the editor entities text rendering:
17:05 < bridge_> <robyt3> 1. Using the normal text render might cause a larger FPS drop than using the debug font
17:05 < bridge_> <robyt3> 2. Someone added the hexadecimal info feature so the info is in hexadecimal and aligns better, but it might not appear monospaced anymore when using the normal text render
17:06 < bridge_> <Voxel> >someone
17:06 < bridge_> <Voxel> whoops
17:06 < bridge_> <Voxel> >someone
17:06 < bridge_> <Voxel> whoops my fault
17:07 < bridge_> <Voxel> anyways Yeah, I guess we can stick with the debug font image for a bit until we overcome this. Not like we're desplitting EVERYTHING
17:07 < bridge_> <Voxel> anyways Yeah, I guess we can stick with the debug font image for a bit until we overcome this. Not like we're splitting EVERYTHING
21:59 < bridge_> <Dale Y Pearlman> Do you know that you can earn $5,000 or more weekly from crypto Trading? With Just $500â€¦ 100% Inbox Admin on Telegram for more details ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ https://t.me/PROFITSWITHSTEVE
23:14 < bridge_> <lostprince1777> @jupeyy_keks someone asked me to ask you how the client knows if it is the dummy playing or the main player
23:17 < bridge_> <Voxel> why do they wanna know
23:19 < bridge_> <Dev7z> whats the point of dev channel if the devs ask questions instead of telling something
23:19 < bridge_> <Dev7z> (@_voxeldoesart)
23:21 < bridge_> <robyt3> `g_Config.m_ClDummy` is 1 if the dummy is active and 0 if the main player is active
23:21 < bridge_> <Dev7z> thx
23:48 < bridge_> <Voxel> because what if they wanna make a bot client
