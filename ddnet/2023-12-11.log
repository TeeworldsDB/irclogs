00:56 < bridge> <viny_mio> Hello ddnet admins & devs
00:56 < bridge> <viny_mio> 
00:56 < bridge> <viny_mio> So me and a bunch of other people were just wondering about what happened to the account system and if there will ever be one to potentially come.
00:56 < bridge> <viny_mio> It would be nice to know about the problems and plans surrounding this topic.
00:56 < bridge> <viny_mio> Especially as it seems like the whole community wants something like this implemented (i. e. the survey that was done in the past in ‚Å†announcements ).
00:56 < bridge> <viny_mio> 
00:56 < bridge> <viny_mio> Probably the whole community would like to know about what's actually going on there so that perhaps solutions could be found.
00:56 < bridge> <viny_mio> Be it by funding and therefore paying the devs if that is the problem or by anything else (depending on how this whole thing turns out), I think many people would be glad to help.
00:56 < bridge> <viny_mio> 
00:56 < bridge> <viny_mio> Best regards
01:04 < bridge> <_voxeldoesart> if we needed the money we would add in microtransactions
01:06 < bridge> <Mr.Gh0s7> this sums it up as of May 4 of 2023 https://github.com/ddnet/ddnet/issues/3411#issuecomment-1534189301
01:07 < bridge> <Mr.Gh0s7> This is not an answer to your question it's more of a hint I thought I would provide since I can.
01:16 < bridge> <viny_mio> I appreciate your willingness to help but we don't plan on reading old discussions over and over again. An actual conversation about pro and contra and a final summary and therefore a solution would be nice.
01:20 < bridge> <louis> did u actually read that thread
01:24 < bridge> <viny_mio> no I'm blind, I cant read
01:26 < bridge> <stepfunn> the last message you see as user without a github account is from the 24 of July. Most people have no idea how to use github or what it even is
01:27 < bridge> <stepfunn> you cant expect everyone to know whats going on there. we just want a little transparency and talk about the whole topic and what we as a community of which most cant code or costribute in a technical way, how we could help in any other way
01:29 < bridge> <archimede67> That's the last message of the conversation for everyone
01:30 < bridge> <louis> that github thread is very transparent, anyone can add their own comments
01:30 < bridge> <louis> and read the past discussion
01:30 < bridge> <stepfunn> alright well didnt know that since a dont have a private github account. Seems like github cuts off at some point. but none the less it kinda shows that the topic kinda just died out and we want to revive it
01:31 < bridge> <stepfunn> alright well didnt know that since a dont have a private github account. Seemed like the discussion cut off at some point. but none the less it kinda shows that the topic kinda just died out and we want to revive it
01:33 < bridge> <archimede67> Github just shows that if you want to add a comment (aka participate in the conversation) you need an account. Otherwise, it does not cut the thread which lets everyone see it in its entirety.
01:33 < bridge> <archimede67> But I agree with louis, this thread wasn't created for nothing and its not like it has been several years since the last comment. There have been proposals made in this thread and I think if you really want to get accounts added you should first look into this thread and understand what's going on
01:35 < bridge> <archimede67> Github just shows that if you want to add a comment (aka participate in the conversation) you need an account. Otherwise, it does not cut the thread which lets everyone see it in its entirety.
01:35 < bridge> <archimede67> But I agree with louis, this thread wasn't created for nothing and its not like it has been several years since the last comment. There have been proposals made in this thread and I think if you really want to get accounts added you should first look into it and understand what's going on
01:46 < bridge> <itom6176> I agree on this, atleast read the last comments from july. Its even interesting if you dont have much IT-knowledge. But on the other hand the account topic is such a big topic for every player and would be a big big step in the game. So maybe we should discuss and communicate it more openly, not only on the developer side but also on the players. An idea could be to form a small team of devs, experienced players and well established people of the 
01:47 < bridge> <itom6176> I agree on this, atleast read the last comments from july. Its even interesting if you dont have much IT-knowledge. But on the other hand the account topic is such a big topic for every player and would be a big big step in the game. So maybe we should discuss and communicate it more openly, not only on the developer side but also on the players. An idea could be to form a small team of devs, experienced players and well established people of the 
02:58 < bridge> <Ewan> It‚Äôs not like funding wouldn‚Äôt incentivize someone ton work on this feature but I guess if you were serious about it you‚Äôd have to set up a bounty. Lots of devs have ideas but they don‚Äôt have the time or patience to implement & test it as it‚Äôs something which would need extensive work in all faces of DDNet rn (client, server, website, probably discord too). Maybe someone with a real draft would finally get started if there was a bounty
02:59 < bridge> <Ewan> It‚Äôs also something that‚Äôs not easily agreed upon so perhaps DDNet staff should set up an in-game announcement or something promoting the GitHub discussion
03:01 < bridge> <Ewan> This really is an all hands on deck situation so some feedback from admins would be appreciated
03:03 < bridge> <Ewan> I remember hearing that deen is onboard üòÉ
07:20 < bridge> <milkeeycat> I thought it's possible just to copy file to right path during compilation or smth :/
07:24 < bridge> <milkeeycat> I thought it's possible just to copy the file to right path during compilation or smth :/
08:42 < bridge> <ryozuki> morning
08:56 < bridge> <Mr.Gh0s7> gm
10:40 < bridge> <diariesvexar> Hi, is it normal that logfile will create in `AppData\Roaming\Teeworlds` path ?
11:35 < bridge> <ryozuki> i guess
11:37 < bridge> <Jupstar ‚ú™> ig u can use a global path if you need to have it somewhere else for some reason
11:37 < bridge> <Jupstar ‚ú™> or change storage.cfg
11:38 < bridge> <diariesvexar> in older version it's save in same folder of server or client and i don't have any storage.cfg file
11:39 < bridge> <diariesvexar> is there any flag to set location of save log ?
11:41 < bridge> <Bota> Hi, I want to process the local live chat to create an local website where you can process it. To accomplish that I could youse a Network Sniffer. The Problem is that I don‚Äôt know what requests i have to look out (UDP Port) and I don‚Äôt know how to / if i can decrypt the requests
11:42 < bridge> <ryozuki> u can do that on linux with fifo iirc
11:42 < bridge> <ryozuki> or logging
11:42 < bridge> <Bota> Hi, I want to process the local live chat to create an local website where you can process it. To accomplish that I could use a Network Sniffer. The Problem is that I don‚Äôt know what requests i have to look out (UDP Port) and I don‚Äôt know how to / if i can decrypt the requests
11:42 < bridge> <ryozuki> definitly on server side
11:42 < bridge> <ryozuki> but idk about client side rn
11:42 < bridge> <ryozuki> oh wait
11:42 < bridge> <ryozuki> what do u mean by local live chat
11:42 < bridge> <ryozuki> u can just modify the client
11:43 < bridge> <Jupstar ‚ú™> he wants to sniff the network packets for some reason
11:43 < bridge> <Jupstar ‚ú™> chillerdragon: u've done smth with wireshark iirc?
11:43 < bridge> <ryozuki> <a:SNIFFA:1111862506307199136>
11:46 < bridge> <Bota> Your pc receives chat messages in a request. If you know  what requests to look out for and how to decrypt them. That way i can avoid maintaining a whole client
11:47 < bridge> <Bota> English on point üíØ
11:47 < bridge> <ryozuki> well nothing is encrypted yet
11:47 < bridge> <ryozuki> also the client port is random on each connection
11:48 < bridge> <ryozuki> check wireshark dissector from heinrich
11:48 < bridge> <Bota> Udp Packages are encrypted by default
11:48 < bridge> <ryozuki> what?
11:48 < bridge> <ryozuki> they arent xd
11:48 < bridge> <Bota> Wait that was tcp my bad
11:48 < bridge> <ryozuki> no
11:48 < bridge> <ryozuki> not even tcp
11:48 < bridge> <ryozuki> encryption is built on top of the protocol
11:49 < bridge> <ryozuki> https is encrypted
11:49 < bridge> <ryozuki> http is not
11:49 < bridge> <ryozuki> both are tcp
11:49 < bridge> <ryozuki> ddnet has no encryption at all
11:49 < bridge> <ryozuki> its also a thing to fix for accounts
11:50 < bridge> <Bota> Can you provide a link or smth?
11:51 < bridge> <ryozuki> idk it rn
11:51 < bridge> <Bota> Im sure there is a package for my web framework that can sniff. I will just need to know what to look out for
11:51 < bridge> <ryozuki> maybe someone else knows
11:51 < bridge> <ryozuki> eh
11:52 < bridge> <ryozuki> i doubt u can sniff packets within a sandboxed web page
11:52 < bridge> <ryozuki> u need a proper program with access to the os
11:53 < bridge> <Bota> Hmm when im home i have to look into that
11:53 < bridge> <ryozuki> ill just say rust is a perfect fit
11:53 < bridge> <ryozuki> ‚òï
11:53 < bridge> <Bota> Im a web developer
11:54 < bridge> <mamad_melanin> account are sucks, why can't you just play simple ddnet without any credit ?
11:56 < bridge> <Bota> Maybe I‚Äôll find a program that send the request to frontend
11:56 < bridge> <ryozuki> u dont need to be limited by that
11:56 < bridge> <ryozuki> i also did web dev https://ddstats.org/
11:56 < bridge> <ryozuki> üò¨
11:56 < bridge> <ryozuki> yes u need to do that
11:57 < bridge> <ryozuki> u will need to program it tho
11:57 < bridge> <ryozuki> the sniffer program
11:57 < bridge> <Bota> Ye
11:57 < bridge> <ryozuki> https://tenor.com/view/programming-rust-c-lang-cpp-cplusplus-gif-26743262
11:58 < bridge> <Bota> I hope rust wont be to difficult
11:59 < bridge> <Mr.Gh0s7> :justatest:
12:00 < bridge> <Bota> But i still don‚Äôt know what requests I need
12:02 < bridge> <learath2> U
12:02 < bridge> <ryozuki> yes
12:02 < bridge> <ryozuki> im lucy
12:02 < bridge> <ryozuki> üò¨
12:02 < bridge> <ryozuki> time to put on the socks
12:03 < bridge> <learath2> Programming socks engaged
12:03 < bridge> <Jupstar ‚ú™> u'r ryozoozki
12:03 < bridge> <Jupstar ‚ú™> @learath2 do you feel bad if c libraries would die out?
12:03 < bridge> <learath2> Not really. I prefer rolling my own anyway
12:03 < bridge> <ryozuki> i would be amazed cuz i think its a hard thing to happen
12:04 < bridge> <Jupstar ‚ú™> üòè
12:04 < bridge> <ryozuki> do u roll out libcurl
12:04 < bridge> <Jupstar ‚ú™> reinvent the reinvented wheel
12:04 < bridge> <ryozuki> actually http is really easy protocol its just that
12:04 < bridge> <learath2> I would if libcurl somehow dies
12:04 < bridge> <ryozuki> its ambiguous a bit
12:04 < bridge> <ryozuki> and u need to take lot of security measures
12:12 < bridge> <learath2> On a more serious note, as long as you expose a C API. (Which you kinda have to if you want any ffi). I don't care what the library itself is written in
12:12 < bridge> <learath2> I would even feel safer if it were written in Rust
12:13 < bridge> <deen> @louis.place Thanks! ^
12:16 < bridge> <ryozuki> :brownbear:
12:59 < bridge> <ryozuki> @learath2 when u enable as module vs compiled in in kernel?
13:05 < bridge> <learath2> I pretty much have everything that can be compiled in compiled in. Just a handful of things that I don't need all the time as modules
13:05 < bridge> <learath2> Like wireguard, ext2, udf, kvm
14:21 < bridge> <heinrich5991> just a MOV works for rust though. because it statically handles the other object no longer being destructed
14:22 < bridge> <heinrich5991> do you have a book on signal processing?
14:22 < bridge> <heinrich5991> from the basics?
14:23 < bridge> <learath2> I do but I never went through the entire thing. I just read a couple chapters
14:24 < bridge> <learath2> https://www.analog.com/en/education/education-library/scientist_engineers_guide.html
14:25 < bridge> <learath2> The chapter on the laplace transform is truly excellent. I've also read chapter 3, chapter 8 and chapter 14
14:25 < bridge> <heinrich5991> maybe one day we can have a better ABI üôÇ including sum types or sth
14:26 < bridge> <heinrich5991> discord is not a good medium for that. the discussion will be forgotten tomorrow. go to github if you want your voice to be heard in any way
14:26 < bridge> <heinrich5991> same goes for @stepfunn
14:27 < bridge> <Bota> @heinrich5991 can you tell me more about it?
14:27 < bridge> <heinrich5991> https://github.com/heinrich5991/libtw2/tree/690e8ea95880aaaf2329bd33fc5131e8d6e6cbd5/wireshark-dissector
14:27 < bridge> <Bota> :pepeW: what
14:27 < bridge> <Bota> That response speed
14:27 < bridge> <Bota> üíØ
14:28 < bridge> <heinrich5991> I was looking for that link before you asked me
14:28 < bridge> <heinrich5991> it was coincidental that you posted your question right before I sent the link
14:29 < ws-client> <ChillerDragon> jopsti yes i did all the wiresharking w heinrichs dissector its very pog
14:29 < bridge> <Bota> Ooh thats interesting
14:30 < bridge> <Jupstar ‚ú™> chillerdragon: nice, u got some blog about using it?
14:31 < ws-client> <ChillerDragon> @Bota why do you want to sniff it? I would just edit the client or server which is much smoother for live chatting. If you go down the sniffing route and it does not have to be live i highly recommend tcpdump and heinrichs wireshark dissector.
14:32 < ws-client> <ChillerDragon> @Jupstar ‚ú™ i guess you tried to help me plug this xd https://chillerdragon.github.io/teeworlds-protocol/index.html
14:32 < ws-client> <ChillerDragon> but yea on heinrichs dissector no blog is needed u just do ``tcpdump -w tw.pcap "port 8303"`` then you run ``wireshark tw.pcap`` and you see all chat messages in plain text
14:33 < bridge> <heinrich5991> or you just run wireshark on your computer directly
14:33 < ws-client> <ChillerDragon> yea
14:33 < bridge> <Bota> Chillerdragon: the tcp dump how long does it take? 1 second?
14:33 < ws-client> <ChillerDragon> it doesnt finish
14:33 < ws-client> <ChillerDragon> until you kill it
14:34 < bridge> <Bota> Oh
14:34 < ws-client> <ChillerDragon> so for live chat it makes no sense
14:34 < ws-client> <ChillerDragon> why not edit client or server?
14:34 < ws-client> <ChillerDragon> if that somehow is not a option use a proxy instead
14:34 < bridge> <heinrich5991> tcpdump tracks all live traffic on the system
14:34 < ws-client> <ChillerDragon> https://github.com/ChillerDragon/toxy/blob/master/main.py this is a simple poc tw proxy you can modify it to print chat messages
14:35 < bridge> <heinrich5991> 404
14:35 < ws-client> <ChillerDragon> woah why is that closed src!? xd
14:35 < ws-client> <ChillerDragon> ah yea because its a mess
14:36 < ws-client> <ChillerDragon> its basically a few lines of python that just read udp and send it on
14:36 < ws-client> <ChillerDragon> in there you can just check the payload if it is a chat message
14:36 < ws-client> <ChillerDragon> https://gitlab.com/teeworlds-network/twnet_parser
14:36 < ws-client> <ChillerDragon> can also recommend this python lib (full self plug) if you want to write a tw proxy
14:37 < ws-client> <ChillerDragon> but still dont think it makes sense for your use case tbh @Bota 
14:37 < bridge> <Bota> I just need to send the chat data to my frontend. If i get data lile all 5 -10 seconds its not problematic
14:38 < bridge> <Bota> I just want to avoid maintaining an extra clienz
14:38 < ws-client> <ChillerDragon> i see
14:38 < bridge> <Bota> I just want to avoid maintaining an extra client
14:38 < bridge> <Bota> I just want to avoid maintaining an extra client
14:38 < bridge> <heinrich5991> maintaining a client/server will be easier than sniffing the packets
14:39 < ws-client> <ChillerDragon> a horrible way to do it would be running tcpdump every few seconds and then using this py script to get the chat messages xd https://gitlab.com/teeworlds-network/twnet_parser/-/tree/master/examples/07/print_pcap_files?ref_type=heads
14:39 < bridge> <Bota> The sniffer you do 1x and you leave it
14:39 < bridge> <Bota> If there is something else than a sniffer ill take that
14:39 < bridge> <heinrich5991> what exactly do you want to do?
14:39 < bridge> <Bota> I just need data thats not older than 5-10 seconds
14:40 < bridge> <heinrich5991> log all chat?
14:40 < ws-client> <ChillerDragon> a proxy is better than a sniffer
14:40 < ws-client> <ChillerDragon> or just look at the logfile
14:40 < ws-client> <ChillerDragon> and live read that
14:40 < bridge> <Bota> I want to make a toll that parses the text and translates it for moderating
14:40 < ws-client> <ChillerDragon> where does the translation appear?
14:41 < bridge> <heinrich5991> you mean chat?
14:41 < bridge> <Bota> I use an language server
14:41 < bridge> <Bota> Yea the ingame chat
14:41 < ws-client> <ChillerDragon> and the translated result
14:41 < ws-client> <ChillerDragon> where should it go?
14:41 < bridge> <Bota> Stay in my frontend
14:41 < bridge> <heinrich5991> read it from the log, I'd say
14:41 < ws-client> <ChillerDragon> yea 
14:42 < ws-client> <ChillerDragon> if it doesnt have to go back to the client reading from the log works fine
14:42 < bridge> <devinci24> Didn't someone already make a translator?
14:42 < ws-client> <ChillerDragon> even if you want to get it back you could use ``say_self`` and fifo
14:42 < bridge> <Bota> Is it remote console dump?
14:42 < ws-client> <ChillerDragon> just regular logfile from stdout
14:43 < ws-client> <ChillerDragon> or use the ``logfile myfile.txt`` command
14:43 < ws-client> <ChillerDragon> then read from that file
14:43 < bridge> <heinrich5991> yes, that
14:43 < bridge> <ryozuki> thats what i mentioned first xd
14:43 < bridge> <Bota> Does it contain ip adresses?
14:43 < ws-client> <ChillerDragon> client side no
14:43 < ws-client> <ChillerDragon> server side yes
14:43 < bridge> <Bota> I need those aswell
14:43 < ws-client> <ChillerDragon> but they are wrapped in some pattern which you can filter out
14:44 < bridge> <Bota> Well my frontend is client only
14:44 < bridge> <Bota> Its just for highlighting anf notifing
14:45 < bridge> <Bota> Ill look at the links when im home
14:45 < ws-client> <ChillerDragon> @teero777 why u askin bout file size
14:45 < ws-client> <ChillerDragon> @Bota dont look at the links
14:45 < ws-client> <ChillerDragon> just read the logfile dont do any proxy or packet sniffing
14:47 < bridge> <Bota> Sry if i ask again: does the logfile update automatically without user input and does it contain the ip adresses?
14:47 < bridge> <Bota> All on Client
14:47 < bridge> <Bota> I need a Solution for that
14:47 < ws-client> <ChillerDragon> the client never sees any ips
14:48 < ws-client> <ChillerDragon> the logfile is updated live but you also have to make sure you keep reading it live
14:48 < bridge> <Bota> I got access to Rcon. There i can get ips
14:48 < bridge> <itom6176> That wasnt my idea and i agree we shouldnt discuss it in one of the channels here
14:48 < ws-client> <ChillerDragon> @Bota just setup the thing on the server side not client side
14:49 < ws-client> <ChillerDragon> seems more reasonable anyways
14:49 < bridge> <Bota> I need ips to generate a ban command
14:49 < ws-client> <ChillerDragon> yea
14:49 < ws-client> <ChillerDragon> so why do it client side?
14:50 < ws-client> <ChillerDragon> just read the logfile on the serverside it contains ips and then you can also host the frontend on the same server
14:50 < bridge> <Bota> I dont have access to the server
14:51 < bridge> <Bota> I just join a server as a mod and i want to process the incoming chat from my local client
14:51 < bridge> <kekomonter> ```
14:51 < bridge> <kekomonter> show_ips 1
14:51 < bridge> <kekomonter> status
14:51 < bridge> <kekomonter> ```
14:51 < bridge> <kekomonter> I think this will work for ddnet rcon
14:51 < bridge> <Bota> I know you can dump logs
14:51 < bridge> <Bota> But i need it automated
14:52 < ws-client> <ChillerDragon> status does not show in client logs
14:52 < ws-client> <ChillerDragon> and its not automated
14:52 < bridge> <kekomonter> Bind for login to rcon and dump logs?
14:53 < bridge> <Bota> That requires user input
14:53 < bridge> <Bota> My tool is kinds useless if you have to press s button each time a message comes
14:53 < bridge> <heinrich5991> write a small tool to connect to a server and listen for rcon log messages
14:54 < bridge> <heinrich5991> I think that'd be the simplest solution here
14:54 < ws-client> <ChillerDragon> ``dump_remote_console`` only dumps once its not live
14:54 < bridge> <heinrich5991> given
14:54 < bridge> <heinrich5991> 1) no access to the server directly
14:54 < bridge> <heinrich5991> 2) rcon access
14:54 < bridge> <heinrich5991> 3) automated chat retrieval
14:55 < ws-client> <ChillerDragon> > write a small tool to connect to a server and listen for rcon log messages
14:55 < ws-client> <ChillerDragon> how?
14:55 < bridge> <heinrich5991> e.g. by using libtw2
14:55 < ws-client> <ChillerDragon> connect as a client?
14:55 < ws-client> <ChillerDragon> login in rcon?
14:55 < bridge> <heinrich5991> or by starting a new tool in the src/tools folder
14:55 < bridge> <kekomonter> Yea
14:55 < bridge> <heinrich5991> yes
14:56 < bridge> <ryozuki> "Anyone who considers arithmetical methods of producing random digits is, of course, in a state of sin."[
14:56 < ws-client> <ChillerDragon> then might as well use a finished client :D 
14:56 < bridge> <ryozuki> üò¨
14:56 < bridge> <ryozuki> "Anyone who considers arithmetical methods of producing random digits is, of course, in a state of sin."
14:56 < bridge> <Bota> Thats what I thought
14:56 < ws-client> <ChillerDragon> I would suggest js, python or ruby for scripting that
14:57 < ws-client> <ChillerDragon> instead of rust :p
14:57 < bridge> <kekomonter> Just compile ddnet without graphics and add user input to console, or create remote control by socket xd
14:57 < bridge> <Bota> Xd
14:57 < bridge> <heinrich5991> that sounds way to complicated ^^
14:58 < bridge> <heinrich5991> js, python, ruby don't have readily available libs for connecting to a ddnet server
14:58 < bridge> <kekomonter> Easiest way: JS lib
14:58 < bridge> <heinrich5991> c++ and rust do
14:58 < bridge> <Bota> Ill probably write a service in my website thats able to connet
14:58 < bridge> <kekomonter> https://gitlab.com/swarfey/teeworlds-client
14:59 < bridge> <Bota> I use Angular. Connecting somewhere should not be an issue
14:59 < bridge> <heinrich5991> ah nice, then JS is an option
14:59 < bridge> <heinrich5991> without the lib that @kekomonter posted, it'd have been too difficult
15:00 < bridge> <Bota> Lol: then i can just connect to every single ddnet server and track all at once ü§Ø
15:00 < bridge> <kekomonter> Yap
15:00 < bridge> <kekomonter> Do it
15:01 < bridge> <kekomonter> Massive ddnet moderation
15:01 < bridge> <milkeeycat> That's so deep
15:01 < ws-client> <ChillerDragon> > js, python, ruby don't have readily available libs for connecting to a ddnet server
15:01 < ws-client> <ChillerDragon> they do
15:01 < bridge> <kekomonter> Python and ruby have?
15:01 < ws-client> <ChillerDragon> ye
15:01 < bridge> <kekomonter> I saw only 0.7 impls
15:01 < ws-client> <ChillerDragon> ofc
15:01 < ws-client> <ChillerDragon> 0.6 is outdated
15:01 < ws-client> <ChillerDragon> xd
15:01 < bridge> <Bota> Is it hard to connect to an ddnet server?
15:02 < ws-client> <ChillerDragon> wait is it a 0.6 only server?
15:02 < bridge> <heinrich5991> don't do that. ask for permission first
15:02 < bridge> <kekomonter> With js?
15:02 < ws-client> <ChillerDragon> no its easy with js
15:02 < ws-client> <ChillerDragon> the js lib is close to ddnet protocol
15:02 < bridge> <Bota> Ye
15:02 < ws-client> <ChillerDragon> ruby is 0.7 only
15:02 < ws-client> <ChillerDragon> python is 0.6 and 0.7 but not very high level abstracted yet
15:03 < ws-client> <ChillerDragon> @heinrich5991 libtw2 doesnt have docs or crates in cargo i wouldnt know how to build a client with it 
15:03 < bridge> <Bota> I will first try if it even works. If i manage that ill ask dw
15:04 < bridge> <kekomonter> Example with chat bot, you just need to create function for auth in rcon and able to connect bot with websocket or other stuff
15:04 < bridge> <kekomonter> https://gitlab.com/swarfey/teeworlds-client/-/blob/main/docs/examples/chat_bot.js?ref_type=heads
15:04 < ws-client> <ChillerDragon> ye
15:04 < bridge> <Bota> K ty
15:04 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1183771315723833436/71POhHBaGCL.png?ex=65898bf3&is=657716f3&hm=eb4f1a21caf2bf468b27953fc2ba3ca854aa5c6958ea32a61c3d4e21e385f9e9&
15:04 < bridge> <ryozuki> has anyone read this 700 page book?
15:04 < bridge> <ryozuki> or recommend one related
15:05 < bridge> <ryozuki> thats not over 50‚Ç¨
15:05 < bridge> <heinrich5991> ChillerDragon: you can check the `downloader` folder
15:05 < bridge> <ryozuki> cuz academia inflates
15:05 < bridge> <ryozuki> prices
15:05 < bridge> <heinrich5991> it has a ready client
15:08 < ws-client> <ChillerDragon> where readme
15:08 < ws-client> <ChillerDragon> https://gitlab.com/teeworlds-network/twnet_parser/-/tree/master/examples/07/download_map?ref_type=heads
15:08 < ws-client> <ChillerDragon> this is how i marketed mine
15:08 < ws-client> <ChillerDragon> doesnt take much
15:09 < bridge> <deen> https://0xax.gitbooks.io/linux-insides/content/index.html
15:10 < ws-client> <ChillerDragon> @heinrich5991 but good to know maybe i give it a try one day :)
15:10 < ws-client> <ChillerDragon> i mean i kinda knew but thought its unfinished or something because of missing readme
15:10 < bridge> <heinrich5991> I used it in production already
15:10 < bridge> <heinrich5991> writing a readme takes time
15:11 < ws-client> <ChillerDragon> cmn 3 lines on how to install and run
15:11 < ws-client> <ChillerDragon> mine took me 1 minute
15:12 < bridge> <heinrich5991> https://github.com/heinrich5991/libtw2/tree/690e8ea95880aaaf2329bd33fc5131e8d6e6cbd5
15:12 < bridge> <heinrich5991> this readme took me an hour at least
15:12 < ws-client> <ChillerDragon> yea i know
15:12 < bridge> <ryozuki> looks nice!
15:14 < bridge> <Bota> If im honest: I don‚Äôt like the idea of an massive observation center
15:15 < bridge> <Bota> I will take a look at the normal logs when im home
15:15 < bridge> <ryozuki> @learath2 do u know how structs are passed by C to functions
15:15 < bridge> <Bota> That does not serve ddnets purpose
15:15 < bridge> <ryozuki> in the assembly level
15:15 < bridge> <ryozuki> are they on the stack or registers always?
15:16 < bridge> <heinrich5991> depends on the size of the struct IIRC
15:16 < bridge> <ryozuki> 64bit btw
15:16 < bridge> <ryozuki> @heinrich5991 is there a known size
15:16 < bridge> <heinrich5991> what is a "known size"?
15:17 < bridge> <heinrich5991> a size up until which it is passed in registers?
15:17 < bridge> <heinrich5991> https://en.wikipedia.org/wiki/X86_calling_conventions
15:17 < bridge> <Bota> Chillerdragon you have discord?
15:17 < bridge> <heinrich5991> I always use this wikipedia article @ryozuki
15:17 < bridge> <ryozuki> yes
15:18 < bridge> <heinrich5991> apparently only up-to-pointer-sized structs are passed in registers in microsoft's calling convention
15:18 < bridge> <heinrich5991> the article remains silent about the sysv abi
15:18 < bridge> <learath2> This is defined by the ABI, but it'll be passed in a register as a pointer as it's of MEMORY class
15:19 < bridge> <heinrich5991> even for pointer-sized structs?
15:19 < bridge> <learath2> Ah, if it's smaller than a certain size it can be passed differently yeah
15:19 < bridge> <learath2> I assumed a large struct for some reason
15:20 < bridge> <ryozuki> xd
15:20 < bridge> <ryozuki> wait so they can be passed in a register if small or in the stack and the register has a pointer to it?
15:20 < bridge> <ryozuki> or how it works
15:20 < bridge> <learath2> https://gitlab.com/x86-psABIs/x86-64-ABI/-/jobs/artifacts/master/raw/x86-64-ABI/abi.pdf?job=build
15:20 < bridge> <learath2> 3.2.3 is what you want to look at
15:22 < ws-client> <ChillerDragon> @Bota i do not have discord why?
15:23 < bridge> <heinrich5991> that reads quite complicated
15:24 < bridge> <heinrich5991> > The classification of aggregate (structures and arrays) and union types works as fol-
15:24 < bridge> <heinrich5991> > lows:
15:24 < bridge> <heinrich5991> > 1. If the size of an object is larger than eight eightbytes, or it contains unaligned fields,
15:24 < bridge> <heinrich5991> > it has class MEMORY 15.
15:24 < bridge> <heinrich5991> > 2. If a C++ object is non-trivial for the purpose of calls, as specified in the C++ ABI
15:24 < bridge> <heinrich5991> > 16, it is passed by invisible reference (the object is replaced in the parameter list by
15:24 < bridge> <heinrich5991> > a pointer that has class INTEGER) 17.
15:24 < bridge> <heinrich5991> > 3. If the size of the aggregate exceeds a single eightbyte, each is classified separately.
15:24 < bridge> <heinrich5991> > Each eightbyte gets initialized to class NO_CLASS.
15:24 < bridge> <heinrich5991> > 4. Each field of an object is classified recursively so that always two fields 18 are con-
15:24 < bridge> <heinrich5991> > sidered. The resulting class is calculated according to the classes of the fields in the
15:24 < bridge> <heinrich5991> > eightbyte:
15:24 < bridge> <heinrich5991> > (a) If both classes are equal, this is the resulting class.
15:24 < bridge> <heinrich5991> > (b) If one of the classes is NO_CLASS, the resulting class is the other class.
15:24 < bridge> <heinrich5991> > (c) If one of the classes is MEMORY, the result is the MEMORY class.
15:24 < bridge> <heinrich5991> > (d) If one of the classes is INTEGER, the result is the INTEGER.
15:24 < bridge> <heinrich5991> > (e) If one of the classes is X87, X87UP, COMPLEX_X87 class, MEMORY is
15:24 < bridge> <heinrich5991> > used as class.
15:24 < bridge> <heinrich5991> > (f) Otherwise class SSE is used.
15:24 < bridge> <heinrich5991> > 5. Then a post merger cleanup is done:
15:24 < bridge> <heinrich5991> > (a) If one of the classes is MEMORY, the whole argument is passed in memory.
15:24 < bridge> <heinrich5991> > (b) If X87UP is not preceded by X87, the whole argument is passed in memory.
15:24 < bridge> <heinrich5991> > (c) If the size of the aggregate exceeds two eightbytes and the first eightbyte isn‚Äôt
15:24 < bridge> <heinrich5991> > SSE or any other eightbyte isn‚Äôt SSEUP, the whole argument is passed in mem-
15:24 < bridge> <heinrich5991> > ory.
15:24 < bridge> <heinrich5991> > (d) If SSEUP is not preceded by SSE or SSEUP, it is converted to SSE.
15:24 < bridge> <Bota> I was just wondering
15:24 < bridge> <learath2> You are basically only interested in the very last part of Classification because we are talking about an aggregate
15:24 < bridge> <heinrich5991> "only"
15:24 < bridge> <learath2> Point 1 immediately applies if you have a large struct
15:24 < bridge> <ryozuki> @learath2 what are eight eightbytes
15:24 < bridge> <ryozuki> what is a eightbyte
15:24 < bridge> <ryozuki> ??
15:25 < bridge> <ryozuki> XD
15:25 < bridge> <heinrich5991> 64 bytes
15:25 < bridge> <heinrich5991> 8 byte
15:25 < bridge> <learath2> Eh no
15:25 < bridge> <learath2> 3.1.2
15:25 < bridge> <learath2> > ...the term eightbyte refers to a 64-bit object...
15:26 < bridge> <heinrich5991> which is 8 bytes?
15:26 < bridge> <learath2> Oh wait I misread what you wrote
15:26 < bridge> <learath2> Sorry
15:28 < bridge> <learath2> Anyway, 2 doesn't apply to C.
15:28 < bridge> <learath2> 3) applies to anything smaller than 64 bytes
15:28 < bridge> <learath2> You go 2 by 2 applying the rules in 4)
15:28 < bridge> <heinrich5991> what does 2 by 2 mean?
15:28 < bridge> <ryozuki> @learath2 one doubt
15:28 < bridge> <heinrich5991> 2 by 2 eightbytes? struct fields?
15:29 < bridge> <ryozuki> if i pass something as MEMORY ie in the stack
15:29 < bridge> <learath2> 2 by 2 fields
15:29 < bridge> <ryozuki> do i pass a pointer to it on the register? or doesnt make sense
15:29 < bridge> <ryozuki> xd
15:30 < bridge> <heinrich5991> but what if two fields are already larger than the first eightbyte?
15:30 < bridge> <learath2> No, just put it on the stack
15:31 < bridge> <learath2> Wym?
15:31 < bridge> <heinrich5991> you say I always consider two fields at once
15:31 < bridge> <heinrich5991> but I also need to consider the first eightbyte separately
15:31 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1183778092695695452/image.png?ex=65899242&is=65771d42&hm=404f3db7b90542195bed763a540b996e6daa2aa2fa798e3a57293617e0989adb&
15:31 < bridge> <ryozuki> this part is important too
15:31 < bridge> <heinrich5991> what if my first field is already larger than 8 bytes?
15:31 < bridge> <heinrich5991> boo, pictures
15:32 < bridge> <learath2> Your field will either be an aggregate or already have a classification as per the parts we skipped at the start
15:32 < bridge> <heinrich5991> ah
15:32 < bridge> <heinrich5991> I should use the former rules as well for classifying struct members?
15:33 < bridge> <learath2> Yep
15:33 < bridge> <heinrich5991> I see
15:33 < bridge> <heinrich5991> so structs containing a couple of floats and ints get ripped apart completely
15:33 < bridge> <heinrich5991> even if they're interleaved
15:33 < bridge> <heinrich5991> very intereseting document, thanks for linking it @learath2
15:34 < bridge> <Bota> What happens when 2 clients with same ip connect to 1 Server?
15:36 < bridge> <heinrich5991> you can have a maximum of four clients per IP address on official ddnet servers, IIRC
15:36 < bridge> <learath2> They'll have different client ports
15:36 < bridge> <heinrich5991> dummy and main tee count as 2
15:36 < bridge> <ryozuki> @learath2 i ask this cuz we making some kind of trampoline code for a generated shared library with mlir
15:36 < bridge> <ryozuki> xd
15:37 < bridge> <heinrich5991> the idea of trampoline code is to not touch anything, no?
15:37 < bridge> <heinrich5991> so that you just enter the actual function in the end
15:37 < bridge> <ryozuki> i actually tried calling the function using extern c from rust
15:37 < bridge> <ryozuki> but it didnt work well
15:37 < bridge> <heinrich5991> why not?
15:37 < bridge> <ryozuki> its odd because theorically the function follows the c calling convetion
15:38 < bridge> <ryozuki> weird unexpected results
15:38 < bridge> <ryozuki> segfaults
15:38 < bridge> <ryozuki> etc
15:38 < bridge> <ryozuki> xd
15:38 < bridge> <heinrich5991> look at it in a debugger
15:38 < bridge> <heinrich5991> it tells you what's on the ground
15:38 < bridge> <heinrich5991> or the disassembly
15:38 < bridge> <ryozuki> brb
15:39 < bridge> <Bota> There are not clients that wont take a slot, are there?
15:39 < bridge> <Bota> 1 person taking 3 slots is wrong
15:39 < bridge> <heinrich5991> you can't take no slots
15:40 < bridge> <heinrich5991> with a client
15:40 < bridge> <Bota> Then I will stay with logs on my Project
15:43 < bridge> <learath2> https://github.com/gcc-mirror/gcc/blob/master/gcc/config/i386/i386.cc#L2124 It's not too bad to read if you'd like to see an implementation of it
15:44 < bridge> <ryozuki> 64bit right
15:45 < bridge> <learath2> Yep
15:45 < bridge> <heinrich5991> permalink: https://github.com/gcc-mirror/gcc/blob/b1474da1bb9cc829cbf597f9a51393795108419f/gcc/config/i386/i386.cc#L2124
15:45 < bridge> <learath2> Yep, good idea
15:46 < bridge> <ryozuki> thanks
15:46 < bridge> <learath2> Class MEMORY is basically poison, if any part of an aggregate is classified as MEMORY everything is MEMORY now
15:49 < bridge> <sedonya> > ||`~~***@archimede67***~~`||
15:53 < bridge> <teero777> did I get ghost pinged?
15:53 < bridge> <heinrich5991> me too
15:53 < bridge> <heinrich5991> ah, maybe not pinged
15:53 < bridge> <teero777> :banhammer:
15:54 < bridge> <teero777> Dunno maybe discord is bugged
15:55 < bridge> <kekomonter> Kisao is sent smth and deleted this, maybe this was ping xdd (I saw it on second monitor)
15:55 < bridge> <kekomonter> Sedonya is sent smth and deleted this, maybe this was ping xdd (I saw it on second monitor)
15:57 < bridge> <ryozuki> @learath2 do u thin sysv abi 64 bit is bloated?
15:57 < bridge> <ryozuki> think
15:57 < bridge> <learath2> Not particularly. Why?
15:57 < bridge> <ryozuki> did u look at the arm64 one
15:57 < bridge> <ryozuki> from macos
15:57 < bridge> <ryozuki> https://developer.apple.com/documentation/xcode/writing-arm64-code-for-apple-platforms#Pass-arguments-to-functions-correctly
15:58 < bridge> <ryozuki> > Pass arguments to functions correctly
15:58 < bridge> <ryozuki> > 
15:58 < bridge> <ryozuki> > The stack pointer on Apple platforms follows the ARM64 standard ABI and requires 16-byte alignment. When passing arguments to functions, Apple platforms diverge from the ARM64 standard ABI in the following ways:
15:58 < bridge> <ryozuki> > 
15:58 < bridge> <ryozuki> >     Function arguments may consume slots on the stack that are not multiples of 8 bytes. If the total number of bytes for stack-based arguments is not a multiple of 8 bytes, insert padding on the stack to maintain the 8-byte alignment requirements.
15:58 < bridge> <ryozuki> > 
15:58 < bridge> <ryozuki> >     When passing an argument with 16-byte alignment in integer registers, Apple platforms allow the argument to start in an odd-numbered xN register. The standard ABI requires it to begin in an even-numbered xN register.
15:58 < bridge> <ryozuki> > 
15:58 < bridge> <ryozuki> >     The caller of a function is responsible for signing or zero-extending any argument with fewer than 32 bits. The standard ABI expects the callee to sign or zero-extend those arguments.
15:58 < bridge> <ryozuki> > 
15:58 < bridge> <ryozuki> >     Functions may ignore parameters that contain empty struct types. This behavior applies to the GNU extension in C and, where permitted by the language, in C++. The AArch64 documentation doesn‚Äôt address the issue of empty structures as parameters, but Apple chose this path for its implementation.
15:58 < bridge> <ryozuki> > 
15:58 < bridge> <ryozuki> > The following example illustrates how Apple platforms specify stack-based arguments that are not multiples of 8 bytes. On entry to the function, s0 occupies one byte at the current stack pointer (sp), and s1 occupies one byte at sp+1. The compiler still adds padding after s1 to satisfy the stack‚Äôs 16-byte alignment requirements.
15:58 < bridge> <ryozuki> > 
15:58 < bridge> <ryozuki> > void two_stack_args(char w0, char w1, char w2, char w3, char w4, char w5, char w6, char w7, char s0, char s1) {}
15:58 < bridge> <ryozuki> > 
15:58 < bridge> <ryozuki> > The following example shows a function whose second argument requires 16-byte alignment. The standard ABI requires placing the second argument in the x2 and x3 registers, but Apple platforms allow it to be in the x1 and x2 registers.
15:58 < bridge> <ryozuki> > 
15:58 < bridge> <ryozuki> > void large_type(int x0, __int128 x1_x2) {}
16:00 < bridge> <learath2> This is just a document that has a clear explanation. The AArch64 documentation it references is about the same size as the amd64 sysv one I sent
16:01 < bridge> <learath2> So on the topic of bloated. I don't think so, but it is rather complicated, only because well ABIs aren't very trivial things if you want them performant
16:02 < bridge> <ryozuki> i see xd
16:02 < bridge> <learath2> The eight eightbytes thing is e.g. so structs can be decomposed into registers for efficient passing. You could have an ABI that just doesn't do that and always puts structs on the stack
16:06 < bridge> <learath2> (not that it gets decomposed for many things tbf, it rarely ends up getting chopped up)
16:08 < bridge> <heinrich5991> points are likely to get chopped up, no?
16:08 < bridge> <heinrich5991> like `struct { int x; int y; int z; }` is a zero-cost abstraction
16:09 < bridge> <heinrich5991> unlike in java, where it used to lead to lots of heap allocations
16:09 < bridge> <learath2> Anything bigger than 2 eightbytes immediately becomes MEMORY unless it's somethingsomething SSE
16:09 < bridge> <heinrich5991> wasn't it eight eightbytes?
16:09 < bridge> <ryozuki> yes the get"flattened"
16:09 < bridge> <ryozuki> this would be like fn(a: i32, b:i32, c:i32)
16:09 < bridge> <ryozuki> on registers iirc
16:10 < bridge> <ryozuki> 2 eightbytes or 8?
16:10 < bridge> <ryozuki> wasnt it 8
16:10 < bridge> <learath2> Anything bigger than 8 eightbytes is MEMORY
16:10 < bridge> <learath2> Anything between 2 and 8 eightbytes only get chopped if they SSE something something
16:10 < bridge> <heinrich5991> ah
16:10 < bridge> <learath2> Anything less than 2 can be chopped up
16:11 < bridge> <ryozuki> what does chopped mean here
16:11 < bridge> <heinrich5991> into registers
16:11 < bridge> <learath2> It's the post merger cleanup part 3.2.3.5c or L2306 in the gcc implementation I referred to
16:13 < bridge> <3x1st_> hey guys
16:13 < bridge> <learath2> (Atleast that's how I understand it, I only briefly dabbled in this while trying to understand some absurd assembly that made no sense to me with the naive understanding of the calling convention I had)
16:13 < bridge> <3x1st_> any  one can give me default auto-exec.cfg of ddnet++
16:13 < bridge> <3x1st_> ?
16:23 < bridge> <ryozuki> https://twitter.com/AnimaAnandkumar/status/1734080043196768348
16:23 < bridge> <ryozuki> https://vxtwitter.com/AnimaAnandkumar/status/1734080043196768348
16:23 < bridge> <ryozuki> https://github.com/lean-dojo/LeanCopilot
16:23 < bridge> <ryozuki> Lean Copilot allows large language models (LLMs) to be used in Lean for proof automation, e.g., suggesting tactics/premises and searching for proofs. You can use our built-in models from LeanDojo or bring your own models that run either locally (w/ or w/o GPUs) or on the cloud.
16:23 < bridge> <ryozuki> looks big ngl
16:23 < bridge> <ryozuki> https://github.com/leanprover/lean4
16:26 < bridge> <learath2> Not even math is safe
16:33 < bridge> <heinrich5991> holy shit
16:34 < bridge> <heinrich5991> in the current year, @robyt3 contributed 846 commits so far
16:35 < bridge> <heinrich5991> out of 1507
16:35 < bridge> <heinrich5991> that's ~56% of all ddnet development
16:35 < bridge> <heinrich5991> of 2023
16:36 < bridge> <learath2> Carrying DDNet on his shoulders
16:36 < bridge> <ryozuki> epic
16:37 < bridge> <ryozuki> @heinrich5991 how did u see this summary?
16:37 < bridge> <heinrich5991> https://github.com/ddnet/ddnet/graphs/contributors?from=2022-12-31&to=2023-12-11&type=c
16:37 < bridge> <heinrich5991> and manually added the numbers
16:39 < bridge> <ryozuki> >    952  Robert M√ºller
16:39 < bridge> <ryozuki> >    381  bors[bot]
16:39 < bridge> <ryozuki> >    361  Dennis Felsing
16:39 < bridge> <ryozuki> >    128  heinrich5991
16:39 < bridge> <ryozuki> >    104  furo
16:39 < bridge> <ryozuki> >     83  marmare314
16:39 < bridge> <ryozuki> >     60  Alexander Akulich
16:39 < bridge> <ryozuki> >     46  Jupeyy
16:39 < bridge> <ryozuki> >     39  ChillerDragon
16:39 < bridge> <ryozuki> >     34  Edgar Luque
16:39 < bridge> <ryozuki> >     25  dobrykafe
16:39 < bridge> <ryozuki> >     15  Chairn
16:39 < bridge> <ryozuki> >     14  Zwelf
16:39 < bridge> <ryozuki> >     12  trml
16:39 < bridge> <ryozuki> >     10  Tarun Samanta
16:39 < bridge> <ryozuki> >     10  Valentin Bashkirov
16:39 < bridge> <ryozuki> >      9  Corantin H
16:39 < bridge> <ryozuki> >      9  Learath2
16:39 < bridge> <ryozuki> >      9  Samuele Radici
16:39 < bridge> <ryozuki> >      9  devdenn
16:39 < bridge> <ryozuki> >      9  lolipodass
16:39 < bridge> <ryozuki> >      8  Rafael Fontenelle
16:39 < bridge> <ryozuki> >      8  VoxelDoesCode
16:39 < bridge> <ryozuki> >      8  noKetchup
16:39 < bridge> <ryozuki> >      7  By
16:39 < bridge> <ryozuki> >      5  Cheeser0613
16:39 < bridge> <ryozuki> >      5  Pavukoplov
16:39 < bridge> <ryozuki> >      4  JSaurusRex
16:39 < bridge> <ryozuki> >      4  JuraIBOZO
16:39 < bridge> <ryozuki> >      4  Ravie
16:39 < bridge> <ryozuki> >      4  Tater
16:39 < bridge> <ryozuki> ‚ùØ git shortlog -sn --since "01 Jan 2023"
16:40 < bridge> <ryozuki> hey atleast im up there a bit XD
16:40 < bridge> <learath2> I fell off. L
16:40 < bridge> <ryozuki> why is oy there
16:40 < bridge> <ryozuki> hmm
16:40 < bridge> <ryozuki> idk if this includes merge commits
16:40 < bridge> <learath2> Maybe one of chillers 0.7 obsessed prs pulled it in?
16:40 < bridge> <ryozuki> lol
16:41 < bridge> <ryozuki> discord marked my edit unsafe
16:41 < bridge> <ryozuki> ah wait it had emails
16:41 < bridge> <ryozuki> >    854    Robert M√ºller
16:41 < bridge> <ryozuki> >    104    furo
16:41 < bridge> <ryozuki> >     96    Dennis Felsing
16:41 < bridge> <ryozuki> >     83    marmare314
16:41 < bridge> <ryozuki> >     60    Alexander Akulich
16:41 < bridge> <ryozuki> >     49    heinrich5991
16:41 < bridge> <ryozuki> >     39    ChillerDragon
16:41 < bridge> <ryozuki> >     35    Jupeyy
16:41 < bridge> <ryozuki> >     25    dobrykafe
16:41 < bridge> <ryozuki> >     15    Edgar Luque
16:41 < bridge> <ryozuki> >     14    Zwelf
16:41 < bridge> <ryozuki> >     12    trml
16:42 < bridge> <ryozuki> >     10    Chairn
16:42 < bridge> <ryozuki> >     10    Tarun Samanta
16:42 < bridge> <ryozuki> >     10    Valentin Bashkirov
16:42 < bridge> <ryozuki> >      9    Corantin H
16:42 < bridge> <ryozuki> >      9    Samuele Radici
16:42 < bridge> <ryozuki> >      9    devdenn
16:42 < bridge> <ryozuki> >      9    lolipodass
16:42 < bridge> <ryozuki> >      8    Learath2
16:42 < bridge> <ryozuki> >      8    Rafael Fontenelle
16:42 < bridge> <ryozuki> >      8    VoxelDoesCode
16:42 < bridge> <ryozuki> >      8    noKetchup
16:42 < bridge> <ryozuki> >      7    By
16:42 < bridge> <ryozuki> >      5    Cheeser0613
16:42 < bridge> <ryozuki> >      5    Pavukoplov
16:42 < bridge> <ryozuki> >      4    JSaurusRex
16:42 < bridge> <ryozuki> >      4    Ravie
16:42 < bridge> <ryozuki> >      4    Tater
16:42 < bridge> <ryozuki> >      3    +KZ
16:42 < bridge> <ryozuki> >      3    BurnyLlama
16:42 < bridge> <ryozuki> i edited it
16:42 < bridge> <ryozuki> without merge commits
16:42 < bridge> <ryozuki> git shortlog -sn --since "01 Jan 2023" --no-merges
16:42 < bridge> <heinrich5991> hey, I've not completely dropped out \o/
16:42 < bridge> <ryozuki> my new year resolution: do more work on ddnet
16:42 < bridge> <ryozuki> but to my defense i did some projects
16:43 < bridge> <ryozuki> maintained the wiki, did ddstats.org
16:43 < bridge> <ryozuki> and db.ddstats.org
16:44 < bridge> <ryozuki> :sadboi:
17:28 < bridge> <milkeeycat> can i set password using ddnet custom browser protocol üòÆ
17:29 < bridge> <cyberfighter> yes its 4
17:32 < bridge> <furo321> With the `ddnet://` uri? Not possible.
17:32 < bridge> <milkeeycat> üò¶
18:23 < bridge> <Bota> where are the ddnet live logs stored again? I cant find the folder
18:28 < bridge> <chillerdragon> Why? Just look into config\_variables.cfg for the defaults. Also the settings I use on my servers are on GitHub as well in a repo called cfg or something like that
18:30 < bridge> <robyt3> Probably from #5737
18:30 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/5737
18:33 < bridge> <furo321> Logs when using `logfile`? They get stored in your DDNet config directory.
18:34 < bridge> <Bota> the local chat output
18:40 < bridge> <furo321> I think you're looking for `logfile`, it will have everything that gets printed to the local console. There is no way of only logging the chat output.
18:41 < bridge> <Bota> i cant find the folder
18:41 < bridge> <furo321> $configdir
18:42 < bridge> <Bota> https://cdn.discordapp.com/attachments/293493549758939136/1183826049100947456/image.png?ex=6589beec&is=657749ec&hm=ce55636952bc02936a61fab6cabe65065b944e3a58771cd786d3a6d8c8e6157f&
18:43 < bridge> <furo321> Ah no, `logfile` is a command. So, you do `logfile output.log` for example.
18:44 < bridge> <Bota> there is no output.log in my files
18:50 < bridge> <kekomonter> Press f1, type "logfile output.log" and somewhere output.log will be generated
18:51 < bridge> <Bota> i did that
18:51 < bridge> <robyt3> You also need to restart the client after that
18:51 < bridge> <Bota> makes more sense
18:51 < bridge> <Bota> nice "live logs" üòÑ
18:52 < bridge> <kekomonter> This will not record rcon messages, i think xd
18:52 < bridge> <robyt3> It's live but the changed filename only takes effect when launching the client
18:52 < bridge> <Bota> i think i wont come arround conneting a client
18:52 < bridge> <Bota> welp
19:43 < bridge> <Bota> is there something like this but for typescrip?
19:43 < bridge> <Bota> https://www.npmjs.com/package/teeworlds
19:43 < bridge> <Bota> is there something like this but for typescript?
19:43 < bridge> <Bota> https://www.npmjs.com/package/teeworlds
19:53 < bridge> <_voxeldoesart> i wonder when heinrich will just close all the PRs people dont evem care about anymore
19:53 < bridge> <_voxeldoesart> i wonder when heinrich will just close all the PRs people dont even care about anymore
20:02 < bridge> <Bota> is there somewhere a documentation what i need to send to the gameserver go get counted as client?
20:18 < bridge> <Bota> is there somewhere a documentation what i need to send to the gameserver to get counted as client?
20:26 < bridge> <kekomonter> I think there is not detailed guide
20:26 < bridge> <kekomonter> I think there is no detailed guide
20:27 < bridge> <kekomonter> You can check libtw2 docs
20:27 < bridge> <kekomonter> Or source code of js tw lib
20:28 < bridge> <Bota> i need typescript üò¶
20:29 < bridge> <kekomonter> Twlib bot writen in ts and have "compilated" js source
20:29 < bridge> <kekomonter> You can use it in ts or js
20:32 < bridge> <Bota> https://gitlab.com/swarfey/teeworlds-client you mean this?
20:34 < bridge> <Bota> https://cdn.discordapp.com/attachments/293493549758939136/1183854436091703378/image.png?ex=6589d95c&is=6577645c&hm=84359d9ccbe01dc5827af9f9b8afd8ee0d054088fc34645a4fa27e9a88c77411&
20:45 < bridge> <Bota> if you mean https://github.com/heinrich5991/libtw2 i havw no idea how to use it
20:46 < bridge> <Bota> in angular
20:56 < bridge> <ryozuki> https://orlp.net/blog/magical-fibonacci-formulae/
21:04 < bridge> <Bota> @swarfey can you help?
21:04 < bridge> <Ewan> not unless you did make install‚Ä¶
21:05 < bridge> <Bota> https://cdn.discordapp.com/attachments/293493549758939136/1183862031368077392/image.png?ex=6589e06f&is=65776b6f&hm=b18f0cce79a8b8da7ada90789c56e4be35c6befe6818f01974e89b949ce5876b&
21:07 < bridge> <swarfey> that error is kinda odd, I have never seen it before
21:07 < bridge> <swarfey> did you install the package using `npm install teeworlds`?
21:07 < bridge> <Bota> ye
21:08 < bridge> <Bota> https://cdn.discordapp.com/attachments/293493549758939136/1183862857662738524/image.png?ex=6589e134&is=65776c34&hm=916908be969a6b2dcbf45016e8833b690707112bdb8904c17a6bec84a44fd2ca&
21:08 < bridge> <swarfey> o_o i've never worked with angular, kinda thought it would work the same as normal js
21:08 < bridge> <swarfey> 1 sec
21:08 < bridge> <Bota> wenn i use .ts
21:08 < bridge> <Bota> but it should normally work
21:09 < bridge> <Bota> i use .ts
21:10 < bridge> <swarfey> can you send me your typescript version? (`tsc -v`)
21:10 < bridge> <swarfey> might be something with that, but the library already ships the compiled .js files, so i dont know why it is getting recompiled
21:11 < bridge> <Bota> https://cdn.discordapp.com/attachments/293493549758939136/1183863638587613264/image.png?ex=6589e1ee&is=65776cee&hm=e0cde466d6b91b12cea5bd53d16f67a45d6d42a8c0a21517d064b4019fed7698&
21:12 < bridge> <milkeeycat> npx tsc -v?
21:13 < bridge> <Bota> above is the version ^^
21:13 < bridge> <Bota> over message
21:13 < bridge> <Bota> üòÑ
21:13 < bridge> <Bota> https://cdn.discordapp.com/attachments/293493549758939136/1183864239270678618/image.png?ex=6589e27d&is=65776d7d&hm=2ca4b1506a502bf2f57e212deac56bef60b2b9260d007390a9c6d091792c1edb&
21:14 < bridge> <Ewan> i hope u are not trying to set up automod on ddnet servers
21:14 < bridge> <Bota> not automatic
21:15 < bridge> <Bota> ppl still have to execute bans
21:15 < bridge> <Bota> but a tool that highlights
21:15 < bridge> <Bota> and translates
21:15 < bridge> <swarfey> ah xd in my library it uses "typescript": "^3.9.5", you might want to try that
21:15 < bridge> <Ewan> yea maybe now that you realized you can‚Äôt get ips through the client. Lol
21:15 < bridge> <swarfey> otherwise i dont know, maybe theres some fancy angular stuff i have no idea of
21:16 < bridge> <Bota> if i connect to rcon i should get ips
21:16 < bridge> <swarfey> iirc i didnt add any rcon support
21:16 < bridge> <Ewan> i think any sort of extra tooling for rcon besides what they give you through the console should be 100% vetted by ddnet admins first
21:16 < bridge> <Ewan> if using on a ddnet server
21:17 < bridge> <Bota> well i have dump_logs
21:17 < bridge> <Bota> there is ¬¥names and ips
21:17 < bridge> <Bota> and logs
21:17 < bridge> <Bota> but i wanted to make it automated
21:18 < bridge> <Bota> so you dont have to press a button each time go get new logs
22:17 < bridge> <ryozuki> https://twitter.com/fabianstelzer/status/1734296159873536214
22:18 < bridge> <ryozuki> @jupeyy_keks chatgpt is depressed on december
22:27 < bridge> <Jupstar ‚ú™> understandable xd
