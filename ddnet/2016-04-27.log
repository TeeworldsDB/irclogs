01:29 < Shaka> Hi
01:29 < Shaka> How uninstall DDnet
01:29 < ddnet-commits> [ddnet] def- pushed 2 new commits to master: https://git.io/vwVUv
01:29 < ddnet-commits> ddnet/master 847b6f3 def: Optimize PNGs
01:29 < ddnet-commits> ddnet/master 3aeb1ae def: Version 9.3.1
01:30 < Shaka> my client bug
01:35 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwVUj
01:35 < ddnet-commits> ddnet/master ecca293 def: Use tar.xz instead of tar.gz
02:19 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwVt6
02:19 < ddnet-commits> ddnet/master 7d63db2 def: fix permissions
02:26 <@deen> ok, so updating a ttf file while it's loaded with freetype crashes the client
14:04 < Learath2> why would you update a ttf file while its loaded ?
14:08 <@deen> Learath2: because it changed
14:08 <@deen> auto-updater updates it
14:09 < Learath2> oh then i guess #316 should fix that too with a little modification
14:09 < Learath2> or maybe not given it will end up changed either way
14:11 < Learath2> should have done this all differently... should have prolly downloaded the update and restart to a state where it just updates the files and restart again in normal mode
14:11 <@deen> Learath2: yeah, i also notice this now
14:12 <@deen> Learath2: so basically a launcher autoupdater. i guess now i understand why other games opt for this
14:12 < Learath2> I didnt realize there would be this many files requiring special treatment
14:12 <@deen> yeah, me neither. i thought just the binary
14:12 <@deen> but then also libraries and ttf files suddenly
14:13 < Learath2> if i was doing it today i'd prolly go with the client booting up in a stripped down state to just update stuff and restart again
14:14 < Learath2> i just dont like having a seperate launcher
14:28 <@deen> or just don't have an auto-updater at all, just unzip and run, perfect.
14:28 <@deen> or use package managers. isn't windows supposed to have one by now?
15:03 < Shaka_> hi
15:21 < Shaka__> i have a problem with my client : http://puu.sh/oxBii/cc491f60b6.png
15:22 <@deen> Shaka__: you got DDNet 9.3?
15:22 <@deen> This was fixed with 9.3.1
15:24 < Shaka__> it is since the last update
15:25 <@deen> yeah, the update was broken for an hour or so :/
15:25 <@deen> get version 9.3.1 and it should be fixed
15:27 < Shaka__> How to completely uninstall DDnet ?
15:30 <@deen> Shaka__: remove the directory, download it again
15:32 < Shaka__> http://puu.sh/oxCmQ/900e191b91.png ?
15:33 <@deen> no need to remove that
15:33 <@deen> just the directory where the DDNet.exe and DDNet-Server.exe files are
15:42 < Shaka__> okok
15:42 < Shaka__> ty
15:52 < ddnet-commits> [ddnet] def- closed pull request #393: Added initial yubikey support (master...yubikey) https://git.io/vED7c
15:53 < ddnet-commits> [ddnet] def- pushed 2 new commits to master: https://git.io/vwwu8
15:53 < ddnet-commits> ddnet/master 02a8b89 gamertyp: Updated rules for latest automapper
15:53 < ddnet-commits> ddnet/master b3ffc94 Dennis Felsing: Merge pull request #426 from gamertyp/master...
15:57 < ddnet-commits> [ddnet] def- closed pull request #338: Added vital flag for mapdata (includes fast download) (master...mapvital) https://git.io/vnehw
16:01 <@heinrich5991> deen: have you tested the last commit you merged?
16:01 <@heinrich5991> it sets the VITAL flag on fast download map data
16:01 <@EastByte> I just wanted to discuss that
16:01 < ddnet-commits> [ddnet] def- closed pull request #347: added race mode (sv_solo_server 2) (master...race) https://git.io/vCJol
16:01 <@heinrich5991> whcih means that it'll make sure to send each client the map data twice (?)
16:02 <@EastByte> afaik, fast download does some packet flooding
16:03 <@EastByte> on a slow connections it might cause a lot of useless resending
16:03 <@heinrich5991> yup
16:04 <@EastByte> so I guess we remove the flag for fast download and keep it for general download?
16:04 <@EastByte> so 0.6.4 mapdownload isn't completely broken 
16:05 <@EastByte> (is 0.6.4 even going to be released at some point?)
16:07 <@heinrich5991> EastByte: maybe only keep fast download with VITAL?
16:07 <@EastByte> ehm, why?
16:08 <@heinrich5991> that way the network concerns itself with the possible resends
16:09 <@heinrich5991> if we do download with VITAL, then we'll send each client the map data twice
16:11 <@EastByte> hm, I don't understand
16:11 <@EastByte> every client is requesting the map data based on the current chunk index
16:11 <@EastByte> and fast download sends additional chunks
16:12 < ddnet-commits> [ddnet] def- closed pull request #424: made fading border in menu more customizeable (master...master) https://git.io/vg5iv
16:12 <@EastByte> fast download is sending chunks that the client might not even need
16:13 <@heinrich5991> well, it sends them in the order the client wants them
16:13 <@heinrich5991> and VITAL flag results in the chunks arriving in the order the client wants them
16:13 <@EastByte> okay I get your point now
16:14 <@EastByte> hm
16:18 <@EastByte> heinrich5991: are you sure we can trust the network engine in this case?
16:18 <@EastByte> I'm still curious why the vital flag was removed in the first place
16:18 <@heinrich5991> the only question is whether it'll flood the clients too much
16:18 <@heinrich5991> well, from fast download so it doesn't resend all the chunks twice
16:18 <@heinrich5991> from normal download, dunno
16:19 <@EastByte> hmm
16:19 <@EastByte> what happens if a map chunk is getting lost and resend later
16:20 <@EastByte> the order will break
16:21 <@EastByte> I guess the client will continue waiting for the lost index
16:21 <@EastByte> and ignore chunks with a higher index
16:23 <@EastByte> yes, the client would skip map chunks if a single chunk is resend at a later point
16:52 <@heinrich5991> EastByte: no.
16:52 <@heinrich5991> the order can't break
16:52 <@heinrich5991> the network engine ensures that
16:58 <@EastByte> heinrich5991: oh, I thought it doesn't care about order
16:59 <@heinrich5991> VITAL cares about order
16:59 <@heinrich5991> non-VITAL doesn't
17:00 <@EastByte> so vital packets are kept in a queue until the lost one arrives
17:05 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwwy9
17:05 < ddnet-commits> ddnet/master 0f5611c def: Add function to filter chat out of demo when slicing (fixes #382)
17:06 <@EastByte> hm I can't find anything like that
17:07 <@heinrich5991> nah, think dumber
17:08 <@heinrich5991> EastByte: all packets that arrive out of order are discarded
17:08 <@EastByte> the server resends all packets behind the lost packet?
17:08 <@heinrich5991> and a resend is requested
17:08 <@EastByte> every packet is resend requested?
17:09 <@heinrich5991> vital chunks have a number
17:09 <@EastByte> yes
17:10 <@heinrich5991> the client always tells the highest number it has received
17:10 <@heinrich5991> and when it receives a packet out of order, it requests a resend of all packets >= the number it has already seen
17:10 <@EastByte> okay
17:11 <@EastByte> did matricks explain why he did it this way?
17:11 <@EastByte> I mean there is no reason to resend packets that actually arrived
17:13 <@EastByte> and also, even if no packet is getting lost but the order is simply broken because of different routing, also requires resending of everything
17:16 <@heinrich5991> EastByte: probably the reason is that it doesn't really happen often enough
17:16 <@heinrich5991> also, how many packets are usually in transit at once?
17:17 <@EastByte> ^ why care about order then?
17:18 <@heinrich5991> because chat messages should arrive in the correct order
17:18 <@heinrich5991> or rcon commands
17:19 <@heinrich5991> note that the most commonly sent packets are non-VITAL: snapshots and input data
17:21 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwwQP
17:21 < ddnet-commits> ddnet/master ccbdf1d def: Add demo_speed command (fixes #354)
17:30 <@EastByte> okay then, I guess matricks also wanted to keep the implementation rather simple
17:30 <@EastByte> heinrich5991: thanks for clarifying
17:30 <@heinrich5991> I guess. but that's also how tcp works
17:33 <@EastByte> tcp doesn't cache already arrived packets on packet-loss?
17:33 <@EastByte> I'm pretty sure I read that somewhere
17:36 <@heinrich5991> eh yes it does that
17:36 <@heinrich5991> but it can also only request complete re-sends
17:37 <@heinrich5991> but I don't think packet reorder happens very often (?)
17:37 <@EastByte> every time a single packet is lost?
17:38 <@heinrich5991> no, then it'll request everything again anyway (tcp)
17:38 <@heinrich5991> for that to matter it'd need to arrive in different order, but must not be lost
17:38 <@EastByte> so a single packet lost can cause hundreds of resends?
17:39 <@heinrich5991> if that much is in transit, yes
17:39 <@EastByte> that might double the traffic on a lossy link
17:39 <@heinrich5991> EastByte: tcp adjusts the packet size according to the lossiness (? to the word lossiness)
17:41 <@EastByte> I don't know
17:47 <@EastByte> I'm curious about tcp now, looks like there are a lot of things I do not know about
17:49 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwwNr
17:49 < ddnet-commits> ddnet/master 618dc9a def: Alert if layer size too big in editor (thanks to Lady Saavik, fixes #404)
17:59 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwwx9
17:59 < ddnet-commits> ddnet/master d019eb8 def: Use default page when ingame browser uses invalid page (fixes #345)
19:00 < ddnet-commits> [ddnet] def- pushed 8 new commits to master: https://git.io/vwrLs
19:00 < ddnet-commits> ddnet/master 988a8f5 timgame: remove colflags
19:00 < ddnet-commits> ddnet/master dc89301 timgame: clean up intersect line code
19:00 < ddnet-commits> ddnet/master a6a4187 timgame: add new hookthrough and hookblocker
19:23 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwrOZ
19:23 < ddnet-commits> ddnet/master 740868c def: Add cl_show_local_time_always (fixes #319)
19:55 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwrcC
19:55 < ddnet-commits> ddnet/master c473689 def: Remove VITAL flag in fastdownload map packets (as suggested by heinrich5991)
20:04 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwrWt
20:04 < ddnet-commits> ddnet/master b495b16 def: Double click works on votes (and vote window disappears after server setting vote)
20:14 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwr8m
20:14 < ddnet-commits> ddnet/master ec7d28e def: Change ingame menu layout a bit: Browser, Ghost directly instead of Network tab
20:17 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwr81
20:17 < ddnet-commits> ddnet/master dc162d0 def: F5 to refresh server browser
20:26 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwrBl
20:26 < ddnet-commits> ddnet/master d3a411a def: Key up/down only change selected server, not friend list
22:09 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwrP8
22:09 < ddnet-commits> ddnet/master 86a0f46 def: Add a connection limit (fixes #408)
22:18 < ddnet-commits> [ddnet] def- pushed 5 new commits to master: https://git.io/vwr1R
22:18 < ddnet-commits> ddnet/master d08bd06 Learath2: Fix variable naming
22:18 < ddnet-commits> ddnet/master 8504dbc Learath2: Create directories if they are missing
22:18 < ddnet-commits> ddnet/master 5f4e251 Learath2: Allow updating dll files. Replace vectors with map.
23:54 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vwrho
23:54 < ddnet-commits> ddnet/master 7dd593a def: A bit nicer ingame browser menu corners
