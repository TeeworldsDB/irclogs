02:43 < bridge> <Ewan> you can use `str_append()`
02:44 < bridge> <Ewan> you can use `str_append()` on aBuf
02:44 < bridge> <KDaniel> yea nah not working
02:44 < bridge> <Ewan> you can also str_format()
02:45 < bridge> <Ewan> `str_format(aBuf2, "%s %s", aBuf, " --map");`
02:45 < bridge> <Ewan> something like that
02:46 < bridge> <Ewan> ```cpp
02:46 < bridge> <Ewan> char *mapArg = " --map"; // Whatever
02:46 < bridge> <Ewan> char *aBuf2 = static_cast<char *>(malloc(sizeof(aBuf) + sizeof(mapArg)));
02:46 < bridge> <Ewan> str_format(aBuf2, "%s %s", aBuf, mapArg); // i can't remember if this takes a size argument
02:46 < bridge> <Ewan> ```
02:47 < bridge> <Ewan> ```cpp
02:47 < bridge> <Ewan> char *mapArg = "--map"; // Whatever
02:47 < bridge> <Ewan> char *aBuf2 = static_cast<char *>(malloc(sizeof(aBuf) + sizeof(mapArg)));
02:47 < bridge> <Ewan> str_format(aBuf2, "%s %s", aBuf, mapArg); // i can't remember if this takes a size argument
02:47 < bridge> <Ewan> ```
03:04 < bridge> <heinrich5991> VITAL net messages are received in order
03:04 < bridge> <heinrich5991> using `static` would be not so good, better would be using a member variable
03:05 < bridge> <Ewan> ```cpp
03:05 < bridge> <Ewan> char *mapArg = "--map"; // Whatever
03:05 < bridge> <Ewan> char *aBuf2 = static_cast<char *>(malloc(sizeof(aBuf) + sizeof(mapArg)));
03:05 < bridge> <Ewan> str_format(aBuf2, "\"%s\" %s", aBuf, mapArg); // i can't remember if this takes a size argument
03:05 < bridge> <Ewan> ```
03:09 < bridge> <Ewan> static will be the same variable across all instances of the class
03:10 < bridge> <Ewan> sometimes it does not matter but a member is definitely safer
03:10 < bridge> <Voxel> Don't we already have `m_KillmsgCurrent`?
03:13 < bridge> <Voxel> And, if I were to store multiple tees in killfeed like this, would I need an outside `CTeeRenderInfo` buffer?
03:13 < bridge> <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1085022882490499102/image.png
03:14 < bridge> <heinrich5991> I don't know about `CTeeRenderInfo`, sorry
03:15 < bridge> <Voxel> It's used in `void CKillMessages::OnMessage` like this
03:15 < bridge> <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1085023455763775498/image.png
03:16 < bridge> <Voxel> The whole thing is basically, read whatever the packet is sending and send it to a 5 long list called `m_aKillmsgs` to be renderede
03:16 < bridge> <Voxel> The whole thing is basically, read whatever the packet is sending and send it to a 5 long list called `m_aKillmsgs` to be rendered
03:17 < bridge> <Ewan> shell_execute probably just boils down to `std::`/`system()` so you just have to pass it one string
07:03 < bridge> <Jupstar âœª> Arch and Debian worked basically the same. Wayland gave me more fps than x11
07:31 < bridge> <Ewan> weird
07:32 < bridge> <Ewan> id have thought drm would eliminate any differences in stuff like that
07:32 < bridge> <Ewan> waylon Smithers
07:55 < bridge> <Jupstar âœª> i guess its simply CPU bound. so whatever lib is more performant is faster
08:01 < bridge> <Brown> https://t.me/+v3XDhIbKzj42ZWQ0
08:01 < bridge> <Brown> https://t.me/+v3XDhIbKzj42ZWQ0
08:01 < bridge> <Brown> (@Jupeyy_Keks)
08:24 < bridge> <Ryozuki> gentoo
10:51 < bridge> <Robyt3> On Unix mostly yes, but it uses `fork`/`execvp` directly; on Windows not really, there are several layers of functionality in `ShellExecute` that probably nobody fully understands outside of Microsoft
12:06 < bridge> <Brown> https://t.me/+v3XDhIbKzj42ZWQ0
12:06 < bridge> <Brown> (@Robyt3)
12:06 < bridge> <Brown> https://t.me/+v3XDhIbKzj42ZWQ0
12:06 < bridge> <Brown> (@Robyt3)
15:28 < bridge> <johnaxwell> https://t.me/+G_QvLoiilF4yOGJk
18:03 < bridge> <chillerdragon> Nice font. Where can I buy it?
18:03 < bridge> <chillerdragon> (@Voxel)
18:04 < bridge> <Voxel> i forgor
18:04 < bridge> <Voxel> + im at my job
18:11 < bridge> <Chairn> oh, i thought you were still a student
19:35 <+ChillerDragon> SOS my brain broke im trying to migrate my jump server that i use to access my home network to a new hoster. Copied my ~/.ssh folder over and expected it to just work :( but it says connection refused what am i not seeing here?
19:35 <+ChillerDragon> https://zillyhuhn.com/cs/.1678818840.png
19:38 < bridge> <Voxel> @ChillerDragon Cascadia Codr
19:38 <+ChillerDragon> ty
19:38 < bridge> <Voxel> Cascadia Code
19:38 < bridge> <Voxel> np
19:38 <@heinrich5991> ChillerDragon: check the ssh server logs
19:38 <+ChillerDragon> whos?
19:38 <@heinrich5991> the one where your auth is failing
19:38 <+ChillerDragon> idk which one its using even :D
19:39 <+ChillerDragon> guess ima check all
19:39 <+ChillerDragon> o helo irc user
19:40 <@heinrich5991> also, check DM :p
19:41 <+ChillerDragon> a thats why irc
19:43 < bridge> <heinrich5991> ChillerDragon: how does this proxy even work?
19:43 < bridge> <heinrich5991> connecting clients expect certain messages, no?
19:44 < bridge> <heinrich5991> you're really just dropping close messages?
19:49 <+ChillerDragon> yes
19:49 <+ChillerDragon> now i would like to share the code but its so messy its not open src yet xd
19:49 <+ChillerDragon> https://paste.zillyhuhn.com/qB
19:50 <+ChillerDragon> here is the code in its uglyness xd
19:51 <+ChillerDragon> im also honestly suprised how well it works xd
19:51 <@heinrich5991> interestingâ€¦ I wouldn't have thought that this would work for connecting again
19:51 <+ChillerDragon> same here
19:51 <+ChillerDragon> just proofs that i didnt fully understand the protocol yet
19:51 <+ChillerDragon> after 1000 hours reading and documenting it xd
19:52 <+ChillerDragon> i assume the client just sends the messages on join that make the server respond with the infos
19:53 <+ChillerDragon> https://github.com/heinrich5991/libtw2/blob/master/doc/connection.md
19:53 <+ChillerDragon> i guess this jus gets triggered
19:53 <+ChillerDragon> and there is no disconnect or tee death in between
20:04 <+ChillerDragon> heinrich5991: how did you pick those names? https://github.com/heinrich5991/libtw2/blob/a6e26ebd0a8669034404ab5b59de61e25e16a2a8/gamenet/generate/spec/ddnet-16.7.2.json#L52
20:18 < bridge> <Ryozuki> @Jupeyy_Keks @Learath2 https://openai.com/research/gpt-4
20:18 < bridge> <Ryozuki> https://news.ycombinator.com/item?id=35154527
20:21 < bridge> <Jupstar âœª> nais, we getting closer
20:23 <+ChillerDragon> thanks for the pointers i managed to solve it @heinrich5991 :) it pointed me in the right direction of understanding it doesnt get reached. There is no log output and it says refused so the thing im talking to doesnt listen.
20:25 <+ChillerDragon> then i noticed in ``ss -lt`` it bound ::1 and 127.0.0.1 instead of :: and 0.0.0.0 and i rememberd that was a ssh config in /etc/ssh/sshd_config its `GatewayPorts yes` :)
20:41 < bridge> <heinrich5991> ChillerDragon: it's in the network.py
20:42 < bridge> <heinrich5991> https://github.com/ddnet/ddnet/blob/5f7f30d0093fce01394dd8ad08539098f7219db6/datasrc/network.py#L39
20:42 <+ChillerDragon> ah yea i see it
20:42 <+ChillerDragon> https://github.com/teeworlds/teeworlds/blob/26d24ec061d44e6084b2d77a9b8a0a48e354eba6/datasrc/network.py#L5
20:42 <+ChillerDragon> i was looking here :p
20:42 < bridge> <heinrich5991> but you were looking at the ddnet json ðŸ˜‰
20:42 <+ChillerDragon> omg i was deciding on the names for so long and also witing here and asked for help
20:42 <+ChillerDragon> yeye
20:44 <+ChillerDragon> https://github.com/TeeworldsDB/irclogs/blob/2f5ae0e87f9f92c75ac8c53ff82a7886b4bab31a/ddnet/2022-11-15.log#L128-L140
20:44 <+ChillerDragon> @jopster ^
20:44 <+ChillerDragon> now u know its in network.py .-.
20:49 <+ChillerDragon> love to see that after all this time you are still working so activley on the dissector @heinrich5991
20:49 < bridge> <heinrich5991> just a couple of bug fixes
20:50 <+ChillerDragon> yes those are the best
20:50 < bridge> <heinrich5991> I'd love to see the snap stuff at some point
20:50 <+ChillerDragon> yes also looking forward to that
20:51 < bridge> <Voxel> remind me in like, two hours to comtinue my PR idea
20:51 < bridge> <Voxel> i have a solid idea for how i can impliment it now
20:51 <+ChillerDragon> @heinrich5991 you can prepare your self by proof reading this and reporting bugs :p https://chillerdragon.github.io/teeworlds-protocol/07/snap_items.html
20:53 < bridge> <Ryozuki> @heinrich5991 today is the day of ur logo on gh
20:54 < bridge> <Voxel> oh yea
20:55 < bridge> <Voxel> i also need to draw heinrich tee again
20:56 < bridge> <Ryozuki> its pi day in murica
20:57 <+ChillerDragon> only in murica? xd
20:58 < bridge> <heinrich5991> ChillerDragon: first thing I notice, NETMSG_SNAPSMALL does not actually exist
20:58 < bridge> <heinrich5991> is containing â†’ contains
20:58 < bridge> <heinrich5991> build â†’ built
21:00 < bridge> <heinrich5991> and please turn your link to libtw2 into a permalink
21:02 < bridge> <Ryozuki> cuz in murica they show month before days
21:03 < bridge> <Ryozuki> 3/14
21:03 < bridge> <heinrich5991> you can have it in europe as well ðŸ™‚
21:03 < bridge> <heinrich5991> 2023-03-14
21:03 < bridge> <Ryozuki> xD
21:12 < bridge> <Ryozuki> https://blogs.bing.com/search/march_2023/Confirmed-the-new-Bing-runs-on-OpenAI%E2%80%99s-GPT-4
21:12 < bridge> <Ryozuki> bing do be trying hard
21:22 <+ChillerDragon> seems like i missed NETMSG_SNAPSMALL in my `// unused` prs then havent gotten to documenting the snap stuff in the messages section yet
21:30 < bridge> <Ryozuki> https://github.com/Genymobile/scrcpy
21:30 < bridge> <Ryozuki> i just discovered this exists
22:34 < bridge> <Mr.Gh0s7> it's pretty useful ;)
23:15 < bridge> <Robyt3> Can we close the issues labelled with "3rd party" or is there still some value in keeping this issues that we cannot solve open? https://github.com/ddnet/ddnet/issues?q=is%3Aopen+is%3Aissue+label%3A%223rd+party%22
23:17 < bridge> <Jupstar âœª> Probably not worth. If one of these issues happen again we can still reopen
