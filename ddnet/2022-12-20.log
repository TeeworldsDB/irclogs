05:14 <+bridge> [ddnet] <Voxel> its easier to make concept art than to actually do it
05:14 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1054612689999118416/image.png
05:16 <+bridge> [ddnet] <Voxel> wait i did it wrong
05:17 <+bridge> [ddnet] <Voxel> its easier to make concept art than to actually do it
05:17 <+bridge> [ddnet] <Voxel> this is what i want to change the killfeed behavior to
05:17 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1054613476116529202/image.png
08:54 <+bridge> [ddnet] <chillerdragon> Honestly not much since all my attempts were more than annoying. The result of google translate for example was always so broken that it barely helped the situation and was totally not worth the effort. But yea I was also told it has gotten better but I yet have to see it with my own eyes.
08:54 <+bridge> [ddnet] <chillerdragon> (@heinrich5991)
10:15 <+bridge> [ddnet] <fokkonaut> Yea and I am also telling people to not do it, but I am not 24/7 online & its a block server where people more or less are used to insulting each other
10:25 <+bridge> [ddnet] <Botond> Fokko removes the nword?
10:25 <+bridge> [ddnet] <Botond> Ohno
10:32 <+bridge> [ddnet] <uwu> Can someone remove block servers
10:34 <+bridge> [ddnet] <bencie> ChillerDragon: have you ever played on liveoverflow's mc server? I think i recall seeing a player join that reminded me of you or smth 🤔
10:36 <+bridge> [ddnet] <bencie> ChillerDragon: have you ever played on liveoverflow's mc server? I think i recall seeing (in one of his vids)  a player join that reminded me of you or smth 🤔
11:27 <+bridge> [ddnet] <Souly> n
11:27 <+bridge> [ddnet] <fokkonaut> Troully
11:28 <+bridge> [ddnet] <bencie> I'll say it
11:28 <+bridge> [ddnet] <bencie> noby
13:32 <+bridge> [ddnet] <OR-MAhdiyar> hi Chiller 
13:32 <+bridge> [ddnet] <OR-MAhdiyar> The normal port of the master server is 8080, but with apache proxy, the procedure is 443
13:32 <+bridge> [ddnet] <OR-MAhdiyar> Our problem is not solved yet
13:32 <+bridge> [ddnet] <OR-MAhdiyar> We changed to 443 in order to get SSL
14:48 <+bridge> [ddnet] <deen> I think the proxy will cause problems, it will try to register the ip of the proxy server, not the actual ip
15:06 <+bridge> [ddnet] <OR-MAhdiyar> What should I do now?
15:20 <+bridge> [ddnet] <deen> Run it without the proxy and see if it works. We use nginx for the server with
15:20 <+bridge> [ddnet] <deen> ```
15:20 <+bridge> [ddnet] <deen>   location /ddnet/15/register {
15:20 <+bridge> [ddnet] <deen>     proxy_pass http://unix:/home/httpmaster/httpmaster.sock:/ddnet/15/register;
15:20 <+bridge> [ddnet] <deen>   }
15:20 <+bridge> [ddnet] <deen> ```
15:20 <+bridge> [ddnet] <deen> And this works fine
15:21 <+bridge> [ddnet] <deen> But in the end @heinrich5991 should know best about these things since he implemented it and set it up
15:24 <+bridge> [ddnet] <OR-MAhdiyar> ✅
15:36 <+bridge> [ddnet] <Ryozuki> lmao
15:36 <+bridge> [ddnet] <Ryozuki> gcc is bound to clang
15:36 <+bridge> [ddnet] <Ryozuki> on macos
15:46 <+bridge> [ddnet] <deen> you mean it's just a symlink?
15:46 <+bridge> [ddnet] <deen> makes sense since clang supports most of gcc's command line flags
15:50 <+bridge> [ddnet] <OR-MAhdiyar> Are you using port 8080 or did you change it to 443? @deen
15:53 <+bridge> [ddnet] <OR-MAhdiyar> Are you using port 8080 or did you change it to 443? @deen
15:59 <+bridge> [ddnet] <Chairn> it also supports compiler extension i believe
16:04 <+bridge> [ddnet] <deen> 443, it's at https://master1.ddnet.org/
16:10 <+bridge> [ddnet] <Ryozuki> i get some warns ccompiling on mac
16:10 <+bridge> [ddnet] <Ryozuki> im on ventura
16:11 <+bridge> [ddnet] <Ryozuki> ```
16:11 <+bridge> [ddnet] <Ryozuki> ld: warning: dylib (/opt/homebrew/Cellar/opus/1.3.1/lib/libopus.dylib) was built for newer macOS version (13.0) than being linked (11.0)
16:11 <+bridge> [ddnet] <Ryozuki> ld: warning: dylib (/opt/homebrew/Cellar/opusfile/0.12/lib/libopusfile.dylib) was built for newer macOS version (13.0) than being linked (11.0)
16:11 <+bridge> [ddnet] <Ryozuki> ld: warning: dylib (/opt/homebrew/Cellar/libogg/1.3.5/lib/libogg.dylib) was built for newer macOS version (13.0) than being linked (11.0)
16:11 <+bridge> [ddnet] <Ryozuki> ld: warning: object file (release/libddnet_engine_shared.a(cxx.o)) was built for newer macOS version (13.0) than being linked (11.0)
16:11 <+bridge> [ddnet] <Ryozuki> ld: warning: object file (release/libddnet_engine_shared.a(dummy.o)) was built for newer macOS version (13.0) than being linked (11.0)
16:11 <+bridge> [ddnet] <Ryozuki> ld: warning: object file (release/libddnet_engine_shared.a(lse_cas1_relax.o)) was built for newer macOS version (13.0) than being linked (11.0)
16:11 <+bridge> [ddnet] <Ryozuki> ld: warning: object file (release/libddnet_engine_shared.a(lse_cas1_acq.o)) was built for newer macOS version (13.0) than being linked (11.0)
16:11 <+bridge> [ddnet] <Ryozuki> ld: warning: object file (release/libddnet_engine_shared.a(lse_cas1_rel.o)) was built for newer macOS version (13.0) than being linked (11.0)
16:11 <+bridge> [ddnet] <Ryozuki> ld: warning: object file (release/libddnet_engine_shared.a(lse_cas1_acq_rel.o)) was built for newer macOS version (13.0) than being linked (11.0)
16:12 <+bridge> [ddnet] <Ryozuki> ld: warning: object file (release/libddnet_engine_shared.a(lse_cas2_relax.o)) was built for newer macOS version (13.0) than being linked (11.0)
16:12 <+bridge> [ddnet] <Ryozuki> ld: warning: object file (release/libddnet_engine_shared.a(lse_cas2_acq.o)) was built for newer macOS version (13.0) than being linked (11.0)
16:12 <+bridge> [ddnet] <Ryozuki> ld: warning: object file (release/libddnet_engine_shared.a(lse_cas2_rel.o)) was built for newer macOS version (13.0) than being linked (11.0)
16:12 <+bridge> [ddnet] <Ryozuki> ld: warning: object file (release/libddnet_engine_shared.a(lse_cas2_acq_rel.o)) was built for newer macOS version (13.0) than being linked (11.0)
16:12 <+bridge> [ddnet] <Ryozuki> ```
16:12 <+bridge> [ddnet] <Ryozuki> way more tja
16:12 <+bridge> [ddnet] <Ryozuki> than this
16:12 <+bridge> [ddnet] <Ryozuki> this is just a part
16:12 <+bridge> [ddnet] <Ryozuki> but they all the same
16:12 <+bridge> [ddnet] <Chairn> clean build folder and rebuild
16:13 <+bridge> [ddnet] <Ryozuki> same
16:13 <+bridge> [ddnet] <Ryozuki> btw it builds in 16s
16:13 <+bridge> [ddnet] <Ryozuki> impresive
16:13 <+bridge> [ddnet] <Ryozuki> 15*
16:14 <+bridge> [ddnet] <Chairn> im betting this warning is inoffensive
16:14 <+bridge> [ddnet] <Ryozuki> ye probs
16:14 <+bridge> [ddnet] <Ryozuki> but spammy xd
16:14 <+bridge> [ddnet] <Ryozuki> ah its probs from brew
16:14 <+bridge> [ddnet] <Ryozuki> the dep im using is build for macos 11
16:14 <+bridge> [ddnet] <Ryozuki> anyway
16:14 <+bridge> [ddnet] <Ryozuki> oh wait
16:14 <+bridge> [ddnet] <Ryozuki> i read it wrong
16:15 <+bridge> [ddnet] <Ryozuki> its build for macos 13
16:15 <+bridge> [ddnet] <Ryozuki> the one im using is 13.1 and linked for 11.0?
16:15 <+bridge> [ddnet] <Ryozuki> xd
16:15 <+bridge> [ddnet] <Chairn> yes, but some files are built by yourself and it still complains
16:15 <+bridge> [ddnet] <Ryozuki> i guess ddnet is targeting macos 11
16:15 <+bridge> [ddnet] <Ryozuki> and it complains
16:15 <+bridge> [ddnet] <Ryozuki> or smth
16:15 <+bridge> [ddnet] <Ryozuki> @deen seen this before?
16:17 <+bridge> [ddnet] <OR-MAhdiyar> Ok
16:17 <+bridge> [ddnet] <Ryozuki> curious
16:17 <+bridge> [ddnet] <Ryozuki> it uses opiengl 1.5 by default xd
16:17 <+bridge> [ddnet] <Ryozuki> my res is 3024x1964 @ 120hz
16:17 <+bridge> [ddnet] <Ryozuki> lol
16:20 <+bridge> [ddnet] <Ryozuki> setting the game to windowed fullscreen or desktop fullscreen crashes
16:20 <+bridge> [ddnet] <Ryozuki> or smth
16:21 <+bridge> [ddnet] <Ryozuki> windows shows the top thingy
16:21 <+bridge> [ddnet] <Ryozuki> sad
16:21 <+bridge> [ddnet] <Ryozuki> any resizing crashes it lol xd
16:21 <+bridge> [ddnet] <Jupstar ✪> just skip the pain and install https://asahilinux.org/
16:21 <+bridge> [ddnet] <Ryozuki> i would
16:22 <+bridge> [ddnet] <Ryozuki> but this laptop is from work
16:22 <+bridge> [ddnet] <Ryozuki> xd
16:23 <+bridge> [ddnet] <Jupstar ✪> try molten-vk
16:27 <+bridge> [ddnet] <Ryozuki> later
16:27 <+bridge> [ddnet] <Ryozuki> this cpu compiles fasty
16:27 <+bridge> [ddnet] <Ryozuki> didnt expect this
19:07 <+bridge> [ddnet] <Learath2> It's honestly not a bad cpu by any measure
19:07 <+bridge> [ddnet] <Learath2> Impressive chip
19:08 <+bridge> [ddnet] <Ryozuki> since its a rly closed arch do u think all compiled binaries are optimized for such arch
19:09 <+bridge> [ddnet] <Ryozuki> unlike x86 which precompiled bins come foor x86-64-v1
19:09 <+bridge> [ddnet] <Ryozuki> xd
19:09 <+bridge> [ddnet] <Ryozuki> cant type
19:09 <+bridge> [ddnet] <Ryozuki> lmao
19:09 <+bridge> [ddnet] <Ryozuki> aka no need to compile for old cpus since there are none
19:10 <+bridge> [ddnet] <Learath2> I guess any compiled binary for m1 would be pretty well optimized for it, no?
19:10 <+bridge> [ddnet] <Ryozuki> thats what i guess ye
19:11 <+bridge> [ddnet] <Learath2> Afaik the ISA is aarch64 with very few extensions
20:01 <+bridge> [ddnet] <OR-MAhdiyar> @heinrich5991 The normal port of the master server is 8080, but with apache proxy, the procedure is 443
20:01 <+bridge> [ddnet] <OR-MAhdiyar> Our problem is not solved yet
20:01 <+bridge> [ddnet] <OR-MAhdiyar> We changed to 443 in order to get SSL
20:19 <+bridge> [ddnet] <chillerdragon> Yes ZillyHuhn and chillerbot\_png is me \:) I big liveoverflow simp
20:19 <+bridge> [ddnet] <chillerdragon> (@bencie)
20:19 <+bridge> [ddnet] <bencie> ooh i did see you then :D
20:32 <+bridge> [ddnet] <heinrich5991> how do you start the masterserver currently?
20:34 <+bridge> [ddnet] <heinrich5991> can you add `RUST_LOG=mastersrv,info` in front of the command line?
20:40 <+bridge> [ddnet] <heinrich5991> note that the simple forwarding works because cloudflare tells us the original IP address in a header
20:40 <+bridge> [ddnet] <heinrich5991> otherwise we'd have to make nginx forward the original requester IP address in a header
21:56 <+bridge> [ddnet] <deen> yes, get the same, also 15 s compilation
21:57 <+bridge> [ddnet] <deen> hm, that has been fixed for me a long time with recent sdl2
21:58 <+bridge> [ddnet] <Ryozuki> hmm i installed the deps from brew
21:58 <+bridge> [ddnet] <Ryozuki> copy pasting
21:58 <+bridge> [ddnet] <Ryozuki> well tomorrow ill check again
21:58 <+bridge> [ddnet] <deen> do you get a crash log dialog?
21:58 <+bridge> [ddnet] <Ryozuki> no
21:58 <+bridge> [ddnet] <Ryozuki> it freezes
21:58 <+bridge> [ddnet] <Ryozuki> i have  to pkill -9
21:58 <+bridge> [ddnet] <deen> then i haven‘t seen that issue
21:58 <+bridge> [ddnet] <Ryozuki> are u on macos 13.1?
21:59 <+bridge> [ddnet] <deen> yes
21:59 <+bridge> [ddnet] <Ryozuki> hm idk
21:59 <+bridge> [ddnet] <Ryozuki> macos thigns xd
21:59 <+bridge> [ddnet] <Ryozuki> macos things xd
21:59 <+bridge> [ddnet] <deen> would be cool if you can attach with lldb and check where it hangs
21:59 <+bridge> [ddnet] <Ryozuki> ye
21:59 <+bridge> [ddnet] <Ryozuki> tomorrow ill try
22:02 <+bridge> [ddnet] <Ryozuki> or maybe now xD
22:06 <+bridge> [ddnet] <Ryozuki> hmm
22:06 <+bridge> [ddnet] <Ryozuki> my lldb skills are none
22:06 <+bridge> [ddnet] <Ryozuki> how do iget where it hangs
22:06 <+bridge> [ddnet] <Ryozuki> xd
22:08 <+bridge> [ddnet] <Ryozuki> found
22:08 <+bridge> [ddnet] <Ryozuki> its prob a deadlock
22:08 <+bridge> [ddnet] <Ryozuki> on a cond_waitr
22:09 <+bridge> [ddnet] <Ryozuki> ```
22:09 <+bridge> [ddnet] <Ryozuki> Process 43889 stopped
22:09 <+bridge> [ddnet] <Ryozuki> * thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGSTOP
22:09 <+bridge> [ddnet] <Ryozuki>     frame #0: 0x00000001aac11564 libsystem_kernel.dylib`__psynch_cvwait + 8
22:09 <+bridge> [ddnet] <Ryozuki> libsystem_kernel.dylib`:
22:09 <+bridge> [ddnet] <Ryozuki> ->  0x1aac11564 <+8>:  b.lo   0x1aac11584               ; <+40>
22:09 <+bridge> [ddnet] <Ryozuki>     0x1aac11568 <+12>: pacibsp 
22:09 <+bridge> [ddnet] <Ryozuki>     0x1aac1156c <+16>: stp    x29, x30, [sp, #-0x10]!
22:09 <+bridge> [ddnet] <Ryozuki>     0x1aac11570 <+20>: mov    x29, sp
22:09 <+bridge> [ddnet] <Ryozuki> Target 0: (DDNet) stopped.
22:09 <+bridge> [ddnet] <Ryozuki> (lldb) bt
22:09 <+bridge> [ddnet] <Ryozuki> * thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGSTOP
22:09 <+bridge> [ddnet] <Ryozuki>   * frame #0: 0x00000001aac11564 libsystem_kernel.dylib`__psynch_cvwait + 8
22:09 <+bridge> [ddnet] <Ryozuki>     frame #1: 0x00000001aac4d638 libsystem_pthread.dylib`_pthread_cond_wait + 1232
22:09 <+bridge> [ddnet] <Ryozuki>     frame #2: 0x00000001aab9aac4 libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&) + 28
22:09 <+bridge> [ddnet] <Ryozuki>     frame #3: 0x00000001000197b4 DDNet`CGraphicsBackend_Threaded::WaitForIdle() + 80
22:09 <+bridge> [ddnet] <Ryozuki>     frame #4: 0x00000001000298a8 DDNet`CClient::Run() + 3608
22:09 <+bridge> [ddnet] <Ryozuki>     frame #5: 0x0000000100030170 DDNet`TWMain + 3268
22:09 <+bridge> [ddnet] <Ryozuki>     frame #6: 0x00000001aa923e50 dyld`start + 2544
22:09 <+bridge> [ddnet] <Ryozuki> ```
22:10 <+bridge> [ddnet] <Ryozuki> @deen @Jupeyy_Keks
22:16 <+bridge> [ddnet] <Jupstar ✪> bra blame sdl xd
22:16 <+bridge> [ddnet] <Jupstar ✪> ddnet has no bugs
22:16 <+bridge> [ddnet] <Jupstar ✪> 0
22:16 <+bridge> [ddnet] <Ryozuki> lmao
22:17 <+bridge> [ddnet] <Ryozuki> its a feature
23:48 <+bridge> [ddnet] <Ryozuki> https://web.law.duke.edu/cspd/publicdomainday/2023/
23:48 <+bridge> [ddnet] <Ryozuki> books becoming public domain on 2023 jan 1
23:51 <+bridge> [ddnet] <Ryozuki> > And it is a theme this year because in 2023 the copyright will finally expire over The Case-Book of Sherlock Holmes, which contains the last two Sherlock Holmes stories by Arthur Conan Doyle. For years the Doyle estate has tried to prolong copyright over the characters of Sherlock Holmes and Dr. Watson. Now its character-copyright game is up.
23:52 <+bridge> [ddnet] <Ryozuki> > In December 2013, a court decisively rejected this theory and confirmed that all of the elements in the out-of-copyright Sherlock Holmes stories are “free for public use.” It explained: “Where an author has used the same character in a series of works, some of which are in the public domain, the public is free to copy story elements from the public domain works.”
