02:12 <@heinrich5991> deen: TSC?
02:15 <@deen> time stamp counter
02:16 <@deen> fastest clock source by far on x86-64, just a cpu instruction, 40 ns, but broken on my system after suspend
02:17 <@deen> manwhile hpet takes 4000 ns...
02:28 <+Neruell> objs/base/system.o: In function `time_get':
02:28 <+Neruell> system.c:(.text+0x546): undefined reference to `clock_gettime'
02:28 <+Neruell> collect2: ld returned 1 exit status
02:28 <+Neruell> bam: 'DDNet-Server' error 256
02:30 <@deen> Oh, we need to link with -lrt for old glibc versions
02:31 <@deen> thanks Neruell 
02:31 <+Neruell> np
02:32 <@deen> Please try again
02:33 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vobfz
02:33 < ddnet-commits> ddnet/master 3c7a9bc def: Link with -lrt for clock_gettime for glibc < 2.17
02:36 <+Neruell> gj it works
02:36 <+Neruell> :P
02:40 <@deen> the more difficult test is whether this breaks anything
02:40 <@deen> prediction, physics, animations
02:44 <+Neruell> why do u use CLOCK_MONOTONIC?
02:45 <@deen> instead of?
02:51 <@deen> the problem with gettimeofday was that it jumps around when you change the system time
02:51 <@deen> CLOCK_MONOTONIC doesn't, so we can now use ntp on servers without having to worry about that
02:52 <+Neruell> i prefer CLOCK_MONOTONIC_RAW
02:53 <@deen> it's linux specific
02:53 <@deen> oh wait
02:53 <@deen> from what I read in clock_gettime CLOCK_MONOTONIC is affected by NTP...
07:19 <+minus> It is? I thought the point of it was that it isn't
11:36 <@heinrich5991> minus: it is, but it is good that it is
11:36 <@heinrich5991> it basically makes 1 second one second even if the hardware doesn't
11:37 <@heinrich5991> do that correctly
11:37 <@heinrich5991> it's not affected by clock jumps though
11:57 <+ScottKevill> It can be affected by NTP while still being monotonic.
12:07 <@heinrich5991> yes
