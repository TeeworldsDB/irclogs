00:15 < bridge> <borsmatyas02> where is the boundery between cheating and dummy commands? your dummy automatcly watching you and hits you in time periods. he can mirror your movements. so what exactly sets away dummy commands from botting?
00:17 < bridge> <chillerdragon> That’s skill issue on my side
00:18 < bridge> <chillerdragon> @teero777: xd
08:29 < bridge> <0xdeen> Dummy is part of official DDNet client, so it's ok.
08:35 < bridge> <cellegenrih> Botting is considered a person using tools / cheats which unrelates to actual, intended features, thus being bannable and illegal.
08:36 < bridge> <cellegenrih> dummy, as well as it's commands provided by the DDNet community is considered legal in their own terms in many cokmunities such as Gores and Block. Other servers might restrict you from using dummy, but thats about it.
08:37 < bridge> <cellegenrih> dummy, as well as it's commands provided by the DDNet community is considered legal in their own terms in many communities such as Gores and Block. Other servers might restrict you from using dummy, but thats about it.
10:00 < bridge> <ryozuki> thursday vulkan
10:00 < bridge> <ryozuki> sadly no jupstar <a:sadSnail:785072987815804929>
10:13 < bridge> <ryozuki> https://twitter.com/icculus/status/1773056354984317398
10:13 < bridge> <ryozuki> @robyt3 sdl3 soon out :justatest: :poggers2:
10:13 < bridge> <ryozuki> https://vxtwitter.com/icculus/status/1773056354984317398
10:13 < bridge> <ryozuki> https://vxtwitter.com/icculus/status/1773073603119972786
11:37 < bridge> <zhn> https://teerank.io
11:40 < bridge> <avolicious> (connecting) :gigachad:
12:15 < bridge> <meloƞ> :feelsbadman:
12:15 < bridge> <ryozuki> fake
12:15 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1222866744561893537/image.png?ex=6617c667&is=66055167&hm=dc04bcd6efedef74819cb000ced992127e0b379277a57aa030d10d4e704ddb80&
12:16 < bridge> <meloƞ> Imagine ryo actually playing the Game :kek:
12:16 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1222866994592874606/image.png?ex=6617c6a3&is=660551a3&hm=1055a96f16c72555c876bd367487da039cb567947588d738d2ac00996c62c3b1&
12:16 < bridge> <ryozuki> i played it before it was on steam more tho
12:17 < bridge> <ryozuki> also i play using the gentoo build
12:17 < bridge> <ryozuki> so it doesnt count xd
12:18 < bridge> <avolicious> My brain automatically corrected: 11,17 GB required.
12:18 < bridge> <meloƞ> I used to play teeworlds on Ubuntu 8.04 Back in 2009, since that was the only Game that looked interesting back then
12:19 < bridge> <meloƞ> Fetched IT freshly Out the App Store :greenthing:
12:20 < bridge> <learath2> It's very concerning how much chiller is working on 0.7 stuff no one asked for
12:20 < bridge> <meloƞ> :KEKW:
12:20 < bridge> <ryozuki> xd
12:20 < bridge> <ryozuki> whats going on? i havent followed lately
12:21 < bridge> <learath2> I'm serious, he'll get angry when we don't feel like merging things we don't want
12:21 < bridge> <meloƞ> He got His GitHub acc locked by copying upstream 0.7 with issues and prs and stuff, and now Hes cooking 0.7^2
12:22 < bridge> <ryozuki> lol
12:22 < bridge> <meloƞ> https://github.com/teeworlds-community/teeworlds
12:25 < bridge> <meloƞ> Chiller fact Check that btw, that was what i remember
12:25 < bridge> <meloƞ> Dont wanna accuse you of anything :justatest:
12:33 < bridge> <cyberFighter> wtf is this logo
12:53 < bridge> <matodor> just stole the repository name and logo from tee-community repository :pepeW: :lol: 
12:53 < bridge> <matodor> https://github.com/tee-community/
12:53 < bridge> <matodor> just stole the organization name and logo from tee-community organization :pepeW: :lol: 
12:53 < bridge> <matodor> https://github.com/tee-community/
13:22 < bridge> <matodor> chiller stole the organization name and logo from tee-community organization :pepeW: :lol: 
13:22 < bridge> <matodor> https://github.com/tee-community/
13:23 < bridge> <matodor> chiller stole the organization name and logo idea from tee-community organization :pepeW: :lol: 
13:23 < bridge> <matodor> https://github.com/tee-community/
13:25 < bridge> <matodor> chiller stole the organization name and logo idea from tee-community organization :pepeW: :lol: 
13:25 < bridge> <matodor> https://github.com/tee-community/
13:25 < bridge> <matodor> 
13:25 < bridge> <matodor> * but `tee` in `tee-community` it's not teeworlds, it's name of game characters
13:25 < bridge> <matodor> chiller stole the organization name and logo idea from tee-community organization :pepeW: :lol: 
13:25 < bridge> <matodor> https://github.com/tee-community/
13:25 < bridge> <matodor> 
13:25 < bridge> <matodor> \* but `tee` in `tee-community` it's not teeworlds, it's name of game characters
15:39 < bridge> <murpi> Looking at the player count at https://steamcharts.com/app/380840 it really seems like a pointless use of life energy
16:19 < bridge> <robyt3> Doesn't seem like the update is immediately relevant for us though. https://www.phoronix.com/news/SDL-3.0-Preview-Release
16:22 < bridge> <bro_0421> # Free 24/7 Onlyfans LEAKS 
16:22 < bridge> <bro_0421>  **https://discord.gg/onlyfansleaks ** 
16:22 < bridge> <bro_0421>  @everyone @here
16:22 < bridge> <meloƞ> "pro player" - clicks on spoofed links :kek:
16:22 < bridge> <meloƞ> gawd damn you mods are fast
17:04 < bridge> <borsmatyas02> okay thanks
17:58 < bridge> <teero777> another day, another quick c++ question.
17:58 < bridge> <teero777> when iterating over an std::vector<T> by doing smth like for(auto &t : MyVector)
17:58 < bridge> <teero777> will it go from begin() to end() or the other way around?
17:58 < bridge> <teero777> another day, another quick c++ question.
17:58 < bridge> <teero777> when iterating over an `std::vector<T>` by doing smth like `for(auto &t : MyVector)`
17:58 < bridge> <teero777> will it go from begin() to end() or the other way around?
17:59 < bridge> <teero777> another day, another quick c++ question.
17:59 < bridge> <teero777> when iterating over an `std::vector<T>` by doing smth like `for(auto &t : v)`
17:59 < bridge> <teero777> will it go from begin() to end() or the other way around?
18:00 < bridge> <teero777> or is it bound by some condition? im kinda confused rn since in my program it seems to be going from end to begin where as when i try it as a minimal example it goes from begin to end
18:01 < bridge> <cyberFighter> who
18:01 < bridge> <teero777> ```cpp
18:01 < bridge> <teero777> #include <iostream>
18:01 < bridge> <teero777> #include <vector>
18:01 < bridge> <teero777> 
18:01 < bridge> <teero777> int main() {
18:01 < bridge> <teero777>     std::vector<int> v = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
18:01 < bridge> <teero777>     for (auto &t : v) {
18:01 < bridge> <teero777>         std::cout << t;
18:01 < bridge> <teero777>     }
18:01 < bridge> <teero777>     std::cout << '\n';
18:01 < bridge> <teero777> }
18:01 < bridge> <teero777> ```
18:01 < bridge> <teero777> output: `0123456789`
18:02 < bridge> <meloƞ> shouldnt it? :D
18:03 < bridge> <meloƞ> an iteration in a ranged-based loop should always iterate from begin to end
18:03 < bridge> <teero777> thats what i thought too
18:04 < bridge> <teero777> `m_vPriority.emplace(m_vPriority.begin(), z);` should emplace z to the start of the vector right?
18:04 < bridge> <teero777> so when iterating it should be the first element
18:05 < bridge> <teero777> yes
18:05 < bridge> <teero777> that is correct
18:05 < bridge> <teero777> im kinda confused
18:05 < bridge> <teero777> my code doesnt work
18:05 < bridge> <milkeeycat> classic
18:06 < bridge> <meloƞ> what you learn in school vs whats asked in the exam
18:06 < bridge> <meloƞ> :kek:
18:06 < bridge> <meloƞ> ah wait - you're using emplace
18:06 < bridge> <meloƞ> try it with .insert
18:07 < bridge> <meloƞ> `m_vPriority.insert(m_vPriority.begin(), z);`
18:07 < bridge> <teero777> okay no i think i know where the problem was
18:08 < bridge> <teero777> i was doing `for(int &i : v)` and then returned the element `i` instead of what place it was
18:08 < bridge> <teero777> so i was returning like 23 instead of 0 since 23 was the 0th element
18:09 < bridge> <-StormAx> :sendhelp: -  how  do i set oppisite side for Y?
18:09 < bridge> <-StormAx> so i have         Graphics()->DrawRect(0.0f, 0.0f, 250.0f, 12.5f, ColorRGBA(0.0f, 0.0f, 0.0f, 0.7f), IGraphics::CORNER_B, 3.75f);
18:09 < bridge> <-StormAx> but i want Y to draw  in down side of the screen
18:15 < bridge> <teero777> what do you mean?
18:21 < bridge> <robyt3> Use `Ui()->Screen()` to get the size of the screen and then offset the Y position of the rect so the bottom side of the rect aligns with the bottom of the screen, if I understand the question correctly
18:54 < bridge> <-StormAx> i hope i understand right
18:54 < bridge> <-StormAx> but
18:54 < bridge> <-StormAx> ```cpp
18:54 < bridge> <-StormAx> 
18:54 < bridge> <-StormAx> float rectY = UI()->Screen()->h;
18:55 < bridge> <-StormAx> 
18:55 < bridge> <-StormAx>         Graphics()->DrawRect(0.0f, rectY, 250.0f, 12.5f, ColorRGBA(0.0f, 0.0f, 0.0f, 0.7f), IGraphics::CORNER_B, 3.75f);
18:55 < bridge> <-StormAx>     ```
18:55 < bridge> <-StormAx> idk is that supposed to work like that
18:55 < bridge> <robyt3> The Y position is the top edge, so this rect would appear outside of the screen
18:56 < bridge> <robyt3> You need to subtract the height of the rect
18:56 < bridge> <-StormAx> fair
18:56 < bridge> <-StormAx> ohh
18:56 < bridge> <-StormAx> let's try
18:58 < bridge> <-StormAx> wait, height of the rect?
18:59 < bridge> <meloƞ> UI()->Screen()->h - 12.5f
18:59 < bridge> <-StormAx> float rectY = ScreenRect - 12.5
18:59 < bridge> <-StormAx> yeah
19:00 < bridge> <meloƞ> UI()->Screen()->h - 12.5f ig
19:00 < bridge> <robyt3> Or `ScreenRect.HSplitBottom(12.5f, nullptr, &Row)`
19:00 < bridge> <-StormAx> well, somewhere here supposed to appear line xd https://i.imgur.com/z5DhqOR.png
19:01 < bridge> <-StormAx> lets find out ;0
19:01 < bridge> <robyt3> This won't set the width yet though
19:19 < bridge> <-StormAx> https://i.imgur.com/6omOoQU.png
19:19 < bridge> <-StormAx> i've just noticed
20:03 < bridge> <ryozuki> @heinrich5991 artkukumomo@gmail.com
20:03 < bridge> <ryozuki> ops wrong copy paste
20:03 < bridge> <ryozuki> anyway @heinrich5991 look  at this when u can https://bugs.gentoo.org/927880
20:09 < bridge> <ryozuki> its possible its a new thing in gcc 14
20:10 < bridge> <robyt3> Want to fix it? Seems like a missing `#include <algorithm>` in `jobs.cpp` which was previously supplied from some other header I assume
20:11 < bridge> <ryozuki> but why is it detected only there?
20:11 < bridge> <ryozuki> ok by only there i mean, why ci doesnt detect that
20:11 < bridge> <ryozuki> but yeah i can fix it
20:12 < bridge> <robyt3> Maybe different (order of) includes in standard headers
20:12 < bridge> <robyt3> Definitely looks like algorithm include is missing there
20:12 < bridge> <ryozuki> hm i dont have gcc 14
20:29 < bridge> <Ewan> when are you doing this
20:29 < bridge> <Ewan> because it's probably not the best idea
20:30 < bridge> <Ewan> when you emplace an item the vector will move every item after your index later by the amount you're inserting
20:31 < bridge> <Ewan> so if you do this in a loop it means it's really spending most of its time moving shit in the vector
20:32 < bridge> <Ewan> you might just wanna use a different container
20:33 < bridge> <meloƞ> it depends on the amount of elements in the vector, but the time complexity will increase for each element newly added - might want to just use std::deque or std::list
20:33 < bridge> <Ewan> deque is probably best
20:33 < bridge> <meloƞ> agreed
20:44 < bridge> <zhn> maybe he even needs std::stack only
20:44 < bridge> <Ewan> possible
20:45 < bridge> <Ewan> i think he really only needs the O(1) reads/writes to front and back
20:45 < bridge> <Ewan> which stack gets from deque
20:47 < bridge> <Ewan> i think he really only needs the O(1) writes to front and back
20:49 < bridge> <learath2> Or add to the back and iterate backwards instead
20:50 < bridge> <Ewan> can't do that with the epic loop syntax though
20:52 < bridge> <ryozuki> u can in rust tho 🤓 ☝️
20:52 < bridge> <chairn> if you want, i can ask him to either turn it back on or just shut it down. He uses it for other game as well (not sure he's still playing as he used to). Snail also has ways to contact him
20:52 < bridge> <ryozuki> ye snail plays dota with him
20:53 < bridge> <ryozuki> @snailx3
20:53 < bridge> <ryozuki> wake up sleeper
20:53 < bridge> <Ewan> if it's been shut down and nobody's complained for a while then i think it should just be kept off
20:53 < bridge> <Ewan> i would use it over discord if any american ddracers used teamspeak but alas
20:54 < bridge> <Ewan> even then maybe not if it's located in a far off land
20:58 < bridge> <chairn> it was quite useful before discord, back in time, from 2014 to 2016 i'd say
21:14 < bridge> <sedonya> How do I convert timestamp to date?
22:01 < bridge> <teero777> i have at most 20 elements and this is only done when clicking on another window so its probably fine imo
22:01 < bridge> <learath2> You can with C++20
22:02 < bridge> <teero777> just for context: that was for layering windows (like a floating window manager)
22:02 < bridge> <Ewan> why is a vector better than a deque in this case though
22:03 < bridge> <Ewan> if you can make an optimization you should
22:03 < bridge> <Ewan> even if it’s fine without it
22:03 < bridge> <teero777> can you iterate over a deque without popping elements?
22:04 < bridge> <learath2> `for(auto i : vec | std::ranges::views::reverse)`
22:05 < bridge> <teero777> whats that syntax? ive never seen it before? (exept bit operations)
22:05 < bridge> <ryozuki> is this a bitwise or overload
22:05 < bridge> <ryozuki> cursed
22:05 < bridge> <teero777> whats that syntax? ive never seen it before? (except bit operations)
22:06 < bridge> <teero777> ah ok you can just do []
22:06 < bridge> <teero777> https://stackoverflow.com/questions/8965504/what-is-the-best-way-to-access-deques-element-in-c-stl
22:06 < bridge> <teero777> okay thx
22:06 < bridge> <teero777> i will try
22:11 < bridge> <learath2> Deque gives you O(1) push at both ends, it is implemented differently to a vector. Might not be desirable the way it allocates
22:11 < bridge> <learath2> Indexing into a deque always entails 2 levels of indirection
22:12 < bridge> <learath2> Overload
22:14 < bridge> <Ewan> this is barely shorter than just writing the full non-range based for with rbegin and rend
22:15 < bridge> <teero777> xDD
22:15 < bridge> <teero777> its for the flex
22:15 < bridge> <Ewan> actually
22:15 < bridge> <Ewan> ```cpp
22:15 < bridge> <Ewan> for(auto it : vec | std::ranges::views::reverse) ;
22:15 < bridge> <Ewan> for(auto it = vec.rbegin; it != vec.rend; it++) ;
22:15 < bridge> <Ewan> ```
22:15 < bridge> <Ewan> longer by 1
22:15 < bridge> <Ewan> 😃
22:15 < bridge> <learath2> There is also `std::ranges::reverse_view`
22:16 < bridge> <Ewan> innovation
22:16 < bridge> <Ewan> i almost feel like you should be able to use an iterator in the range expression of the range based for
22:18 < bridge> <Ewan> ```cpp
22:18 < bridge> <Ewan> for(auto it : vec.rbegin()) ;
22:18 < bridge> <Ewan> ```
22:18 < bridge> <Ewan> also i forgot parens on my rbegin and rend here
22:18 < bridge> <Ewan> it's actually longer by several
22:18 < bridge> <Ewan> actually
22:18 < bridge> <Ewan> ```cpp
22:18 < bridge> <Ewan> for(auto it : v | std::ranges::views::reverse) ;
22:18 < bridge> <Ewan> for(auto it = v.rbegin(); it != vec.rend(); it++) ;
22:18 < bridge> <Ewan> ```
22:18 < bridge> <learath2> Problem is that end is not trigvial to derive from begin
22:18 < bridge> <learath2> trivial*
22:19 < bridge> <Ewan> yeah
22:19 < bridge> <Ewan> oh well
22:20 < bridge> <Ewan> longer by at least 3 when not tapped into any of `std::/ranges::/views::`
22:20 < bridge> <Ewan> longer by at least 2 when not tapped into any of `std::/ranges::/views::`
22:21 < bridge> <Ewan> longer by at least 3 when not tapped into any of `std::/ranges::/views::`
22:21 < bridge> <Ewan> brain off rn
22:21 < bridge> <learath2> If ranges were types we could have had a more rust like interface. But I'm sure there are issues with that too
22:26 < bridge> <ryozuki> yes i said is this "bitwise or overload"
22:26 < bridge> <ryozuki> not a logical or in the sentence
22:26 < bridge> <ryozuki> :d
22:28 < bridge> <learath2> Sorry far too tired
22:29 < bridge> <learath2> Some guy on the metro asked me for directions. I replied with "Don't you know?". That tired
22:37 < bridge> <teero777> poor guy
23:30 < bridge> <ryozuki> @learath2 u know my name is Edgar right
23:30 < bridge> <ryozuki> someone made a IA
23:30 < bridge> <ryozuki> https://playedgar.netlify.app/
23:32 < bridge> <ryozuki> someone made a AI
23:32 < bridge> <ryozuki> :justatest:
23:37 < bridge> <learath2> Cute little “game”/“experience”
23:37 < bridge> <ryozuki> ye
