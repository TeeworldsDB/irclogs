02:33 <+bridge> [ddnet] <KDaniel> Hey hey, I working right now on a infrastructure using nats.io 
02:33 <+bridge> [ddnet] <KDaniel> And building a master slave things and some unnecessary stuff. 
02:33 <+bridge> [ddnet] <KDaniel> My first idea is that slaves can controll some Teeworlds server by writing into FIFO files but would be it cooler to controll them too over NATS.io
02:33 <+bridge> [ddnet] <KDaniel> 
02:33 <+bridge> [ddnet] <KDaniel> Is there some interest that I publish my investigation? 
02:33 <+bridge> [ddnet] <KDaniel> 
02:33 <+bridge> [ddnet] <KDaniel> Like getting one more way to controll servers
02:33 <+bridge> [ddnet] <KDaniel> 
02:33 <+bridge> [ddnet] <KDaniel> In-game rcon 
02:33 <+bridge> [ddnet] <KDaniel> Econ
02:33 <+bridge> [ddnet] <KDaniel> Fifo
02:33 <+bridge> [ddnet] <KDaniel> Message Server (nats.io) 
02:33 <+bridge> [ddnet] <KDaniel> 
02:33 <+bridge> [ddnet] <KDaniel> ** I got the idea because I want the teeworlds server data and metrics outside of the server and store them somewhere.... 
02:34 <+bridge> [ddnet] <KDaniel> 
02:34 <+bridge> [ddnet] <KDaniel> 
02:34 <+bridge> [ddnet] <KDaniel> If someone is interested just write me or answer to this message. Don't get notifications for this server 🙂
07:57 < _FUN12PLAYWITH> "/notice Nimda
07:59 <+_FUN12PLAYWITH> "/notice Nimda I am not a bot"
07:59 <+bridge> [ddnet] <chillerdragon> sus
08:03 <+bridge> [ddnet] <Anime.pdf> sus
08:22 <+bridge> [ddnet] <Ryozuki> sus
09:08 <+bridge> [ddnet] <Voxel> sus
10:46 <+bridge> [ddnet] <Nouaa> sus
10:48 <+bridge> [ddnet] <ReiTW> sus
11:00 <+bridge> [ddnet] <Meekrioz> sus
11:06 <+bridge> [ddnet] <ReiTW> deen broke the sus
11:19 <+bridge> [ddnet] <Meekrioz> :ban:
11:19 <+bridge> [ddnet] <Meekrioz> ?
14:05 <+bridge> [ddnet] <wille> Is it possible to remove snowflakes that appear when in freeze?
14:24 <+bridge> [ddnet] <Skeith> https://cdn.discordapp.com/attachments/293493549758939136/1032268020795576420/unknown.png
14:26 <+bridge> [ddnet] <Skeith> https://cdn.discordapp.com/attachments/293493549758939136/1032268426082779137/extras.png
14:26 <+bridge> [ddnet] <Skeith> put this in there, then select it
14:52 <+bridge> [ddnet] <Cellegen | RiH> second picture is a blank image
14:52 <+bridge> [ddnet] <Cellegen | RiH> oh you meant that's the picture
14:57 <+bridge> [ddnet] <wille> thank you 😄
17:18 <+bridge> [ddnet] <Avolicious> We're using redis/keydb/dragonflydb for such task 🙂
17:19 <+bridge> [ddnet] <heinrich5991> nats.io is a single proprietrary queue implementation?
17:20 <+bridge> [ddnet] <Avolicious> Its open source actually
17:20 <+bridge> [ddnet] <Avolicious> They even support MQTT
17:22 <+bridge> [ddnet] <Avolicious> We've evaluated NATS in my company too, but we used nsq.io now
17:47 <+bridge> [ddnet] <Ryozuki> Why control a server with a message queue rather than say grpc?
17:48 <+bridge> [ddnet] <Ryozuki> tshock (a custom terraria sv with support for plugins) had a rest api itself to contro and get info about the sv
17:53 <+bridge> [ddnet] <heinrich5991> does grpc provide something like a message queue?
17:54 <+bridge> [ddnet] <heinrich5991> it's nice if the game server knows whether it's currently connected to the masterserver
17:55 <+bridge> [ddnet] <KDaniel> its cool if you can controll the server where some teeworlds servers is running on to controll from externally. not the server himself.
17:55 <+bridge> [ddnet] <KDaniel> like you can say your server to add a gameserver and it will automatically deploy it.
17:55 <+bridge> [ddnet] <KDaniel> its like a servicewrapper for teeworlds servers
17:56 <+bridge> [ddnet] <KDaniel> Yes, I thought that you have built your infrastructure around redis and others.  Yes would keep it for now something over-kill for our small community. Had but as I said me something in rust and stumbled across nats.io and find the idea of multiple server handling about it quite cool. nsq.io sounds very much the same. Cool that you also use this technique
18:05 <+bridge> [ddnet] <Fanvy> @everyone please return the map Multimap
19:01 <+bridge> [ddnet] <Mr.Gh0s7> How to (re)-add Red/Blue team while supporting DDRace's Teams (/team <number>)?
19:08 <+bridge> [ddnet] <heinrich5991> what happens when that main service needs to be updated or restarted? do all game servers go down as well?
19:14 <+bridge> [ddnet] <heinrich5991> I don't know if that's possible
19:14 <+bridge> [ddnet] <Mr.Gh0s7> ok thanks :D
19:16 <+bridge> [ddnet] <Jupstar ✪> have u tried to use the client's color codes for teams?
19:16 <+bridge> [ddnet] <Jupstar ✪> in the snap of the server
19:16 <+bridge> [ddnet] <Mr.Gh0s7> good idea lemme try that :D
19:16 <+bridge> [ddnet] <Jupstar ✪> except u need the team scoreboard or smth like that
19:17 <+bridge> [ddnet] <Jupstar ✪> in 4teams fng i gave all teams a scoreoffset so the sorting will group the teams
19:17 <+bridge> [ddnet] <Mr.Gh0s7> btw It would be funny to have fng with abilities xD like dash grenade and ninja jetpack while support ddrace tiles
19:17 <+bridge> [ddnet] <Mr.Gh0s7> btw It would be funny to have fng with abilities xD like ninja dash grenade and ninja jetpack while support ddrace tiles
19:18 <+bridge> [ddnet] <heinrich5991> what are you writing? @Reteah
19:19 <+bridge> [ddnet] <KDaniel> You can have a cluster of several master servers. e.g. when updating several of them could be on and the requests are processed or even if you want you can start several version of a master and the clients or masters you could then choose which processes. would build a version control in such a case but yes would be feasible without gameserver reboot... if e.g a gameserver update would come I would have sv_shutdown_on_empty and then at shut
19:19 <+bridge> [ddnet] <KDaniel> 
19:19 <+bridge> [ddnet] <KDaniel> Translated with www.DeepL.com/Translator (free version)
19:19 <+bridge> [ddnet] <KDaniel> You can have a cluster of several master servers. e.g. when updating several of them could be on and the requests are processed or even if you want you can start several version of a master and the clients or masters you could then choose which processes. would build a version control in such a case but yes would be feasible without gameserver reboot... if e.g a gameserver update would come I would have sv_shutdown_on_empty and then at shut
19:19 <+bridge> [ddnet] <Mr.Gh0s7> I am porting fng to ddnet codebase. I had started before summer and I am continuing now.
19:20 <+bridge> [ddnet] <heinrich5991> cool 🙂
19:20 <+bridge> [ddnet] <heinrich5991> is there something I could look at?
19:21 <+bridge> [ddnet] <Mr.Gh0s7> hmm I haven't yet uploaded it. I will once I have teams working :D
19:21 <+bridge> [ddnet] <Mr.Gh0s7> I can send a diff though
19:25 <+bridge> [ddnet] <Mr.Gh0s7> May I send a link from pastebin ?
19:25 <+bridge> [ddnet] <heinrich5991> yes
19:25 <+bridge> [ddnet] <Mr.Gh0s7> https://pastebin.com/kVztVzqX
19:26 <+bridge> [ddnet] <Voxel> ooh sounds interesting
19:27 <+bridge> [ddnet] <Voxel> so you said once this is up there will be more abilities to fng?
19:31 <+bridge> [ddnet] <Mr.Gh0s7> Yeah and would be very easy to implent like a dash. Would be cool for wall, smoke, blind, flash to exist too.
19:32 <+bridge> [ddnet] <Mr.Gh0s7> Although idk how many changes that would require
19:32 <+bridge> [ddnet] <Chairn> you can still play the map on oldschool server
19:33 <+bridge> [ddnet] <Voxel> idk if you heard but since sg has its own laser color, what if red team had shotguns 
19:33 <+bridge> [ddnet] <Voxel> they do the same thing but yk, red team blue team
19:35 <+bridge> [ddnet] <Alexander> what if server could send you custom content like assets and change your laser color if you accept
19:35 <+bridge> [ddnet] <Alexander> That way fng could have red laser skin and laser beam
19:37 <+bridge> [ddnet] <Voxel> someone tried that
19:38 <+bridge> [ddnet] <Voxel> https://github.com/Jupeyy/ddnet/tree/client_team_laser_color
19:39 <+bridge> [ddnet] <Jupstar ✪> laser just needs the owner's id
19:39 <+bridge> [ddnet] <Jupstar ✪> then we could do star wars
19:41 <+bridge> [ddnet] <heinrich5991> star wars? ^^
19:42 <+bridge> [ddnet] <Jupstar ✪> u dont know star wars?
19:42 <+bridge> [ddnet] <heinrich5991> I know the star wars movies
19:42 <+bridge> [ddnet] <heinrich5991> oh
19:43 <+bridge> [ddnet] <heinrich5991> because they also shoot laser beams of different colors? do they? I don't remember
19:43 <+bridge> [ddnet] <Jupstar ✪> yes they do, green for evil, red for good xD
19:44 <+bridge> [ddnet] <Jupstar ✪> and for light sabers its red evil, purple good but controlled his evil
19:44 <+bridge> [ddnet] <Jupstar ✪> green yedi master, blue yedi fighter
19:44 <+bridge> [ddnet] <Jupstar ✪> and some others were added later
19:44 <+bridge> [ddnet] <Jupstar ✪> star wars wiki
19:44 <+bridge> [ddnet] <Chairn> star wars expert heer
19:44 <+bridge> [ddnet] <Chairn> where yellow and white?
19:45 <+bridge> [ddnet] <Jupstar ✪> and black
19:45 <+bridge> [ddnet] <Jupstar ✪> i dunno, i only watched the real star wars xd
19:45 <+bridge> [ddnet] <Jupstar ✪> not the disney stuff xdd
19:45 <+bridge> [ddnet] <Chairn> only rogue one is good
19:46 <+bridge> [ddnet] <Jupstar ✪> star wars 3-6 are good, 1 & 2 are kinda bad
19:46 <+bridge> [ddnet] <Jupstar ✪> 
19:46 <+bridge> [ddnet] <Jupstar ✪> 7-9 are complete trash
19:46 <+bridge> [ddnet] <Jupstar ✪> rouge is a nice to have. but no jedi no fun
19:46 <+bridge> [ddnet] <Jupstar ✪> but i thats about it, i didnt watch obiwan story and stuff like that ^^
19:47 <+bridge> [ddnet] <Jupstar ✪> disney destroyed star wars, like amazon destroys LOTR
19:59 <+bridge> [ddnet] <Ryozuki> since u cant make the screen white for flash, i got quite a funny idea, send like hundreds of tees using the same skins as nearby tees and move them around a little while the flashbang effect lasts
19:59 <+bridge> [ddnet] <Ryozuki> (those tees would not get affected by collision etc)
20:00 <+bridge> [ddnet] <Mr.Gh0s7> xD it's not a flash it's a teenvasioin
20:00 <+bridge> [ddnet] <Ryozuki> ah xd
20:00 <+bridge> [ddnet] <Ryozuki> i imagined csgo in teeworlds
20:00 <+bridge> [ddnet] <Mr.Gh0s7> Throwing Teenvasion
20:03 <+bridge> [ddnet] <Mr.Gh0s7> Hmm what about sending that someone is spawning? Also would be cool if ddnet will support server-emited particles/effects for fire/blind/etc
20:04 <+bridge> [ddnet] <Mr.Gh0s7> Hmm what about sending that someone is spawning (like 1920/50x1080/50 spawns)? Also would be cool if ddnet will support server-emited particles/effects for fire/blind/etc
20:13 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1032355945667371028/unknown.png
20:14 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
20:15 <+bridge> [ddnet] <Mr.Gh0s7> I prefer Kernighan's & Richie's
20:31 <+bridge> [ddnet] <Jupstar ✪> dito, but funny that teeworlds uses allman (except the space after while)
20:31 <+bridge> [ddnet] <Jupstar ✪> 
20:31 <+bridge> [ddnet] <Jupstar ✪> bcs teeworlds mostly maintained by almans
20:44 <+bridge> [ddnet] <Voxel> about the hex values PR
20:44 <+bridge> [ddnet] <Voxel> i still dont know what this means LOL
20:44 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1032363727208579112/unknown.png
20:46 <+bridge> [ddnet] <Robyt3> How do I have to compile the client so I can get source lines or function names from someone else's crash report? `addr2line` only outputs `??:0` for every address.
20:48 <+bridge> [ddnet] <Jupstar ✪> u need the debug symbols from https://ddnet.org/downloads/symbols
20:49 <+bridge> [ddnet] <Jupstar ✪> i thought ur problem is that the tile numbers dont align
20:49 <+bridge> [ddnet] <Jupstar ✪> so i suggested to make them like this
20:49 <+bridge> [ddnet] <Jupstar ✪> ```
20:49 <+bridge> [ddnet] <Jupstar ✪> 255
20:49 <+bridge> [ddnet] <Jupstar ✪>  10
20:49 <+bridge> [ddnet] <Jupstar ✪>   1
20:49 <+bridge> [ddnet] <Jupstar ✪> ```
20:49 <+bridge> [ddnet] <Jupstar ✪> 
20:49 <+bridge> [ddnet] <Jupstar ✪> but appranetly u mean smth different, but dunno if smone understands you xD
20:52 <+bridge> [ddnet] <Voxel> i mean if you look at any doodad with this on, you can see how nicely the values line up. this is pretty much an X and Y grid
20:52 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1032365628239138987/unknown.png
20:53 <+bridge> [ddnet] <Robyt3> Thanks, now it's working.
20:56 <+bridge> [ddnet] <Jupstar ✪> ah u mean bcs its 16 tiles per row
20:56 <+bridge> [ddnet] <Jupstar ✪> well makes sense then, even tho i cannot imagine the usecase anyway
20:57 <+bridge> [ddnet] <Jupstar ✪> isnt it annoying to require converting the hex to decimal again whenever u add the number to the automapper
20:57 <+bridge> [ddnet] <Jupstar ✪> or does the automapper also support hex
20:58 <+bridge> [ddnet] <Voxel> like i said, automapper making TOOLS support some variant of this
20:58 <+bridge> [ddnet] <Voxel> and i find it easier to create automappers in those than from scratch
21:04 <+bridge> [ddnet] <Jupstar ✪> who even is that guy who create it
21:04 <+bridge> [ddnet] <Jupstar ✪> its such a big tool lol
21:05 <+bridge> [ddnet] <Voxel> it's Pulsar, actually
21:16 <+bridge> [ddnet] <timakro> @heinrich5991 I got pinged because trashmap servers appear multiple times in the server browser. Do you want to look into this? You should still have access I think
21:21 <+bridge> [ddnet] <heinrich5991> ah right, I forgot
21:22 <+bridge> [ddnet] <heinrich5991> I can't find the server https://github.com/ddnet/ddnet/issues/5956 is talking about. I did a `grep -r 'Behemoth 2'`, but only a server started today is found
21:23 <+bridge> [ddnet] <heinrich5991> (5f9f20762d8c8)
21:27 <+bridge> [ddnet] <timakro> Seems like that log only goes back to 4 pm of today
22:33 <+bridge> [ddnet] <heinrich5991> https://github.com/ddnet/ddnet/pull/5599 ready for review
22:33 <+bridge> [ddnet] <heinrich5991> @Ryozuki
22:33 <+bridge> [ddnet] <Ryozuki> :poggers:
22:36 <+bridge> [ddnet] <Ryozuki> -- Rust version: rustc 1.64.0 (a55dd71d5 2022-09-19)
22:37 <+bridge> [ddnet] <Jupstar ✪> nais
22:37 <+bridge> [ddnet] <Voxel> awesome!
22:37 <+bridge> [ddnet] <Jupstar ✪> now i can add as many dependencies as i want?
22:37 <+bridge> [ddnet] <Jupstar ✪> 
22:37 <+bridge> [ddnet] <Jupstar ✪> how do i know if they work on android?
22:37 <+bridge> [ddnet] <Ryozuki> chad linux
22:37 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1032392187092140093/unknown.png
22:38 <+bridge> [ddnet] <Jupstar ✪> wtf xD that string
22:38 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1032392317606314094/unknown.png
22:38 <+bridge> [ddnet] <Ryozuki> damn would be cool to show the rust version it was compiled with
22:38 <+bridge> [ddnet] <Jupstar ✪> ur first project
22:39 <+bridge> [ddnet] <Ryozuki> yes
22:39 <+bridge> [ddnet] <heinrich5991> ehm
22:39 <+bridge> [ddnet] <Ryozuki> if this gets merged that is
22:39 <+bridge> [ddnet] <heinrich5991> the rust PR does this 😄
22:39 <+bridge> [ddnet] <Ryozuki> oh
22:39 <+bridge> [ddnet] <Ryozuki> i dont see it
22:39 <+bridge> [ddnet] <Ryozuki> maybe im blind
22:40 <+bridge> [ddnet] <heinrich5991> hm, I'll check later. playing rn
22:40 <+bridge> [ddnet] <Ryozuki> my uname
22:40 <+bridge> [ddnet] <Ryozuki> ❯ uname -a
22:40 <+bridge> [ddnet] <Ryozuki> Linux gentoo 6.0.1-gentoo #1 SMP PREEMPT_DYNAMIC Fri Oct 14 19:30:25 CEST 2022 x86_64 AMD Ryzen 5 5600X 6-Core Processor AuthenticAMD GNU/Linux
22:40 <+bridge> [ddnet] <DDNet> https://github.com/ddnet/ddnet/issues/1
22:40 <+bridge> [ddnet] <Ryozuki> lmao
22:40 <+bridge> [ddnet] <Jupstar ✪> ez
22:40 <+bridge> [ddnet] <Ryozuki> its not linux
22:40 <+bridge> [ddnet] <Ryozuki> its
22:40 <+bridge> [ddnet] <Ryozuki> Linux gentoo 6.0.1-gentoo #1 SMP PREEMPT_DYNAMIC Fri Oct 14 19:30:25 CEST 2022 x86_64 AMD Ryzen 5 5600X 6-Core Processor AuthenticAMD GNU/Linux
22:41 <+bridge> [ddnet] <DDNet> https://github.com/ddnet/ddnet/issues/1
22:41 <+bridge> [ddnet] <Ryozuki> get it?
22:41 <+bridge> [ddnet] <Ryozuki> omg
22:41 <+bridge> [ddnet] <Ryozuki> stupid bot
22:41 <+bridge> [ddnet] <Ryozuki> ruining my joek
22:41 <+bridge> [ddnet] <Ryozuki> joke
22:41 <+bridge> [ddnet] <Jupstar ✪> @Ryozuki rust fanboy
22:41 <+bridge> [ddnet] <Jupstar ✪> 
22:41 <+bridge> [ddnet] <Jupstar ✪> what about rust libs that use a clib internally?
22:41 <+bridge> [ddnet] <Jupstar ✪> is it static linked? how does that work? are they precompiled for android?
22:41 <+bridge> [ddnet] <Ryozuki> easy
22:41 <+bridge> [ddnet] <Ryozuki> use pure rust libs
22:41 <+bridge> [ddnet] <Ryozuki> idk if they statically link or not
22:41 <+bridge> [ddnet] <Ryozuki> probs not
22:42 <+bridge> [ddnet] <Jupstar ✪> where can i see what targets they compile to?
22:42 <+bridge> [ddnet] <Ryozuki> in the Cargo.toml you can find most info
22:42 <+bridge> [ddnet] <Jupstar ✪> https://crates.io/crates/regex/1.6.0
22:42 <+bridge> [ddnet] <Jupstar ✪> 
22:42 <+bridge> [ddnet] <Jupstar ✪> why does this website not show anything
22:42 <+bridge> [ddnet] <Ryozuki> but usually if u dont see a weird exception in the cargo toml then it compiles to all targets llvm supports
22:42 <+bridge> [ddnet] <heinrich5991> regex is pure-rust
22:42 <+bridge> [ddnet] <Ryozuki> yeah
22:42 <+bridge> [ddnet] <Jupstar ✪> yes but what targets are supported, what if compilation fails on one target
22:43 <+bridge> [ddnet] <Ryozuki> if you want a pure rust ssl there is rustls
22:43 <+bridge> [ddnet] <Ryozuki> they dont fail
22:43 <+bridge> [ddnet] <Jupstar ✪> lmao
22:43 <+bridge> [ddnet] <heinrich5991> generally pure-rust crates don't fail on any architecture
22:43 <+bridge> [ddnet] <Ryozuki> as long as its pure rust
22:43 <+bridge> [ddnet] <Jupstar ✪> pure = not unsafe?
22:43 <+bridge> [ddnet] <Ryozuki> if they fail its probs cuz C shenanigans
22:43 <+bridge> [ddnet] <Ryozuki> pure = not using FFI
22:43 <+bridge> [ddnet] <Ryozuki> like a c lib
22:44 <+bridge> [ddnet] <Jupstar ✪> or no OS calls?
22:44 <+bridge> [ddnet] <Jupstar ✪> mh ok
22:44 <+bridge> [ddnet] <Ryozuki> i mean do u make os calls explicitly?
22:44 <+bridge> [ddnet] <Ryozuki> most stuff is covered by the std
22:44 <+bridge> [ddnet] <Jupstar ✪> no but i guess most libs have other deps
22:44 <+bridge> [ddnet] <Ryozuki> but yeah if you use the windows api
22:44 <+bridge> [ddnet] <Ryozuki> https://crates.io/crates/windows
22:44 <+bridge> [ddnet] <Jupstar ✪> at some point some lib will probs call some foreign function
22:44 <+bridge> [ddnet] <Ryozuki> i havent used any crate that does that yet
22:45 <+bridge> [ddnet] <Ryozuki> thats how much ppl push for pure rust
22:45 <+bridge> [ddnet] <Jupstar ✪> ok
22:45 <+bridge> [ddnet] <Ryozuki> that said i havent done OS specific stuff
22:45 <+bridge> [ddnet] <Ryozuki> cuz i never had to xd
22:47 <+bridge> [ddnet] <Jupstar ✪> nice we need regex, fuzzy search
22:47 <+bridge> [ddnet] <Ryozuki> @Not Keks https://doc.rust-lang.org/nightly/rustc/platform-support.html
22:47 <+bridge> [ddnet] <Ryozuki> i think ripgrep has a library mode
22:47 <+bridge> [ddnet] <Jupstar ✪> all stuff i'd never implement my own xd
22:47 <+bridge> [ddnet] <Ryozuki> we could use that directly
22:47 <+bridge> [ddnet] <Ryozuki> did you know vscode uses ripgrep
22:48 <+bridge> [ddnet] <Jupstar ✪> didnt know, but i like vscode regex
22:48 <+bridge> [ddnet] <Jupstar ✪> its pretty fast and pretty ez syntax
22:49 <+bridge> [ddnet] <Ryozuki> well rust regex is fast
22:49 <+bridge> [ddnet] <Ryozuki> cuz it executes in linear time
22:49 <+bridge> [ddnet] <Ryozuki> > A Rust library for parsing, compiling, and executing regular expressions. Its syntax is similar to Perl-style regular expressions, but lacks a few features like look around and backreferences. In exchange, all searches execute in linear time with respect to the size of the regular expression and search text. Much of the syntax and implementation is inspired by RE2.
22:50 <+bridge> [ddnet] <heinrich5991> nah, I think guaranteed-linear regex engines are generally slower
22:50 <+bridge> [ddnet] <Ryozuki> rly?
22:51 <+bridge> [ddnet] <heinrich5991> yes
22:51 <+bridge> [ddnet] <Ryozuki> why edition 2018
22:51 <+bridge> [ddnet] <Ryozuki> ?
22:51 <+bridge> [ddnet] <heinrich5991> to compile on old rustc
22:52 <+bridge> [ddnet] <heinrich5991> what does edition 2021 offer?
22:52 <+bridge> [ddnet] <Ryozuki> ugh when does centos die already
22:52 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1032395859612143686/unknown.png
22:52 <+bridge> [ddnet] <Ryozuki> disjoint capture is specially useful
22:52 <+bridge> [ddnet] <heinrich5991> ah yea, that sounds useful
22:53 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1032396072879923331/unknown.png
22:54 <+bridge> [ddnet] <heinrich5991> boo, sharing code as image
22:54 <+bridge> [ddnet] <heinrich5991> but yes
22:54 <+bridge> [ddnet] <Ryozuki> also rust updates itself have amazing changes too
22:54 <+bridge> [ddnet] <Ryozuki> also edition 2021 allows settings a msrv
22:54 <+bridge> [ddnet] <Ryozuki> iirc
22:54 <+bridge> [ddnet] <heinrich5991> MSRV is not well integrated yet, unfortunately
22:55 <+bridge> [ddnet] <heinrich5991> https://github.com/rust-lang/libc/issues/2850
22:55 <+bridge> [ddnet] <heinrich5991> ah, I mean https://github.com/rust-lang/libs-team/issues/72
22:56 <+bridge> [ddnet] <Ryozuki> the rust side will only implement c++ types as they are needed right?
22:56 <+bridge> [ddnet] <heinrich5991> that's the current strategy, yes
22:56 <+bridge> [ddnet] <heinrich5991> it's unfortunately manual
22:57 <+bridge> [ddnet] <Ryozuki> it would be cool to have maybe some small tutorial
22:57 <+bridge> [ddnet] <Ryozuki> on basics of the ffi
22:57 <+bridge> [ddnet] <Ryozuki> e.g if someone wants to add a type to do stuff in rust
22:57 <+bridge> [ddnet] <Ryozuki> idk
22:57 <+bridge> [ddnet] <Ryozuki> i gotta learn cxx
22:57 <+bridge> [ddnet] <Jupstar ✪> i first want to see smone else than heinrich using it xD
22:58 <+bridge> [ddnet] <Jupstar ✪> 1000 rust fanboys in this chat
22:58 <+bridge> [ddnet] <Jupstar ✪> now is ur time
22:58 <+bridge> [ddnet] <Ryozuki> u mean me
22:58 <+bridge> [ddnet] <Ryozuki> i dont know any other
22:58 <+bridge> [ddnet] <Jupstar ✪> there are many around here
22:58 <+bridge> [ddnet] <Ryozuki> <a:ModCheck:841759449957138443>
22:58 <+bridge> [ddnet] <Jupstar ✪> patiga, raitw i dunno the names
22:58 <+bridge> [ddnet] <Jupstar ✪> but probs much more
23:04 <+bridge> [ddnet] <Ryozuki> @heinrich5991 i guess its unavoidable to use this naming convention? `IConsole_FCommandCallback`
23:04 <+bridge> [ddnet] <Ryozuki> rly grinds my gears
23:04 <+bridge> [ddnet] <Ryozuki> xd
23:04 <+bridge> [ddnet] <Ryozuki> `IConsole::FCommandCallback`
23:04 <+bridge> [ddnet] <Ryozuki> `IConsole::FnCommandCallback` would be even more rusty
23:05 <+bridge> [ddnet] <Ryozuki> or just CommandCallback
23:05 <+bridge> [ddnet] <heinrich5991> implement support for it in cxx
23:05 <+bridge> [ddnet] <Ryozuki> so its a cxx limitation?
23:06 <+bridge> [ddnet] <heinrich5991> yes
23:12 <+bridge> [ddnet] <Ryozuki> ah the rust version is a command
23:13 <+bridge> [ddnet] <heinrich5991> oh
23:13 <+bridge> [ddnet] <heinrich5991> I thought I added calls to RustVersionPrint in client and server
23:14 <+bridge> [ddnet] <heinrich5991> but maybe they were lost
23:14 <+bridge> [ddnet] <heinrich5991> you can run rust tests with `cmake --build <build> --target run_rust_tests`
23:14 <+bridge> [ddnet] <heinrich5991> and build rustdoc with `DDNET_TEST_NO_LINK=1 cargo doc --open`
23:15 <+bridge> [ddnet] <Ryozuki> ```
23:15 <+bridge> [ddnet] <Ryozuki>   = help: some `extern` functions couldn't be found; some native libraries may need to be installed or have their path specified
23:15 <+bridge> [ddnet] <Ryozuki>   = note: use the `-l` flag to specify native libraries to link
23:15 <+bridge> [ddnet] <Ryozuki>   = note: use the `cargo:rustc-link-lib` directive to specify the native libraries to link with Cargo (see https://doc.rust-lang.org/cargo/reference/build-scripts.html#cargorustc-link-libkindname)
23:15 <+bridge> [ddnet] <Ryozuki> 
23:15 <+bridge> [ddnet] <Ryozuki> error: could not compile `ddnet-engine-shared` due to previous error
23:15 <+bridge> [ddnet] <Ryozuki> warning: build failed, waiting for other jobs to finish...
23:15 <+bridge> [ddnet] <Ryozuki> FAILED: CMakeFiles/run_rust_tests /home/edgar/data/ddnet/build/CMakeFiles/run_rust_tests
23:15 <+bridge> [ddnet] <Ryozuki> cd /home/edgar/data/ddnet && /usr/bin/cmake -E env "DDNET_TEST_LIBRARIES=/usr/lib64/libcrypto.so;/usr/lib64/libcurl.so;/usr/lib64/libsqlite3.so;/usr/lib64/libz.so;rt;dl;/home/edgar/data/ddnet/build/librust_test.a" /usr/bin/cmake -E env CARGO_TARGET_DIR=/home/edgar/data/ddnet/build /home/edgar/.cargo/bin/cargo test
23:15 <+bridge> [ddnet] <Ryozuki> ninja: build stopped: subcommand failed.
23:15 <+bridge> [ddnet] <Ryozuki> ```
23:15 <+bridge> [ddnet] <Ryozuki> oof
23:15 <+bridge> [ddnet] <Ryozuki> ```
23:15 <+bridge> [ddnet] <Ryozuki> /usr/lib/gcc/x86_64-pc-linux-gnu/11.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: /home/edgar/data/ddnet/src/base/unicode/tolower.cpp:14: undefined reference to `__gcov_indirect_call_profiler_v4'
23:15 <+bridge> [ddnet] <Ryozuki>           /usr/lib/gcc/x86_64-pc-linux-gnu/11.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: /home/edgar/data/ddnet/src/base/unicode/tolower.cpp:14: undefined reference to `__gcov_time_profiler_counter'
23:15 <+bridge> [ddnet] <Ryozuki>           /usr/lib/gcc/x86_64-pc-linux-gnu/11.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: /home/edgar/data/ddnet/src/base/unicode/tolower.cpp:14: undefined reference to `__gcov_time_profiler_counter'
23:15 <+bridge> [ddnet] <Ryozuki> ```
23:16 <+bridge> [ddnet] <heinrich5991> using `cmake --build <build> --target run_rust_tests`?
23:16 <+bridge> [ddnet] <Ryozuki> i see stuff like this
23:16 <+bridge> [ddnet] <Ryozuki> ye
23:16 <+bridge> [ddnet] <Ryozuki> oh
23:16 <+bridge> [ddnet] <Ryozuki> im compiling with pgo
23:16 <+bridge> [ddnet] <Ryozuki> so it breaks xd
23:17 <+bridge> [ddnet] <heinrich5991> pgo is profile-guided optimizations?
23:17 <+bridge> [ddnet] <Ryozuki> ye
23:19 <+bridge> [ddnet] <Ryozuki> but i was missing smth thats why
23:19 <+bridge> [ddnet] <Ryozuki> all tests pass
23:21 <+bridge> [ddnet] <heinrich5991> what was wrong?
23:22 <+bridge> [ddnet] <Ryozuki> i was missing my pgo data
23:22 <+bridge> [ddnet] <Ryozuki> but i just removed pgo altogether
23:22 <+bridge> [ddnet] <Ryozuki> it doesnt give fps
