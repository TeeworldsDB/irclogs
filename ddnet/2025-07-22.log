00:18 < bridge> <learath2> What do you guys use as a http testing server? I use `python3 -m http.server`, but was wondering what others do
00:46 < bridge> <totar> I also do that
01:15 < bridge> <learath2> I fell into a dependency hell in rust that made me miss python, I didn't think I'd ever say that
01:17 < bridge> <kollpotato> dependency hell is actually good
01:17 < bridge> <kollpotato> ive been trying to avoid it but got nowhere
01:17 < bridge> <kollpotato> writing a gui with 0 dependencies is not that easy
01:19 < bridge> <learath2> What on earth is this?
01:19 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1396995135832719452/image.png?ex=68801c9b&is=687ecb1b&hm=68ca7ac0675020f2c48cd305afd4ce0fc07ad78b1204f1b1980e4c4a5aa699d7&
01:21 < bridge> <kollpotato> lmaooooo
01:21 < bridge> <kollpotato> what the hell
01:21 < bridge> <kollpotato> is that ur dependency or dependency of a dependency
01:21 < bridge> <totar> I dont understand how python is better in this regard, if youre doing anything with ML its surely worse
01:22 < bridge> <learath2> A dependency I have conditionally depends on `rand_core` specifically version 0.6.4, but the authors of rand in all their wisdom just fling everything around every version
01:22 < bridge> <totar> maybe idk enough about rust
01:22 < bridge> <learath2> If I bump the dependency to the pre-release version, they upgraded the rand package, but then the pkcs8 encoder is broken
01:23 < bridge> <learath2> If I keep it on the old one, and use an old version of rand myself I thought it'd work, but `rand 0.6.4` pulls in `rand_os 0.1.3`, which depends on and implements the `rand_code 0.4.2` interface which doesn't work because the library expects the `rand_core 0.6.4` interface
01:25 < bridge> <kollpotato> it seems absurd to have 10 crates to do the same thing
01:25 < bridge> <kollpotato> and they all depend on different version of rand_core
01:25 < bridge> <kollpotato> so you drag about 10 more dependencies
01:26 < bridge> <learath2> I do not understand anything, I'll sleep on this
01:26 < bridge> <learath2> I just said oh let me generate a key and give it a go before I sleep, how long could it take, max 10 minutes
01:28 < bridge> <learath2> Ah, rand 0.6.4 does not pull in rand_core 0.6.4, it pulls in rand_core 0.3 as one would think
01:28 < bridge> <kollpotato> i think its possible to disable most of sub dependencies with features
01:28 < bridge> <kollpotato> default-features = false
01:28 < bridge> <learath2> What I want is rand 0.8.5 to get my rand_core 0.6.4 compatible rand
01:28 < bridge> <learath2> I think I got it this time
01:29 < bridge> <kollpotato> 0.6.4 triggers me
01:31 < bridge> <kollpotato> fork the dependency you use and manually change the version
01:31 < bridge> <kollpotato> problem solved
01:32 < bridge> <learath2> finally, I managed to write a der file, I wanted to write a pem file but for some godforsaken reason only the der writer is working
01:32 < bridge> <learath2> so I'll take it, der files it is
01:32 < bridge> <kollpotato> ðŸŽ‰
01:36 < bridge> <learath2> Allah willing tomorrow I'll figure out how to save a PEM file
01:50 < bridge> <winratesss> https://media.discordapp.net/attachments/1083075203732607096/1396974494521757867/image.png?ex=68800962&is=687eb7e2&hm=4dd51ac1699dbee13799a4470a106ca4357fe403ad48abb16bc731eb34f4d846&=&format=webp&quality=lossless
01:50 < bridge> <winratesss> https://media.discordapp.net/attachments/1083075203732607096/1396974564692721694/image.png?ex=68800972&is=687eb7f2&hm=da8d38f7fc35afbc9383d480968cddf9ce084e2f969495bfc2259f9d96bc9f59&=&format=webp&quality=lossless
01:50 < bridge> <winratesss> https://media.discordapp.net/attachments/1083075203732607096/1396974998605795489/image.png?ex=688009da&is=687eb85a&hm=ff376b4ad294015121a0d3a3af4bc04139c81fac306f39687727a72441a413c8&=&format=webp&quality=lossless
01:50 < bridge> <winratesss> https://media.discordapp.net/attachments/1083075203732607096/1396975087185297518/image.png?ex=688009ef&is=687eb86f&hm=f86f2f1a9c6708f1ae3da7e28cb55c20ceabecded49171373370f0c2d49d913c&=&format=webp&quality=lossless&width=419&height=559 @everyone
01:51 < bridge> <teero777> @Discord Mod âˆ†
01:51 < bridge> <teero777> everywhere
01:51 < bridge> <learath2> Why didnt the ban delete them :/
01:52 < bridge> <teero777> you have to actually select it on the menu....
01:53 < bridge> <learath2> Well duh, I thought I did
01:54 < bridge> <teero777> duh doesn't look like you did
01:54 < bridge> <teero777> In every channel pllsss
01:59 < bridge> <totar> It doesn't always delete them for some reason even when you select it in the menu
03:04 < bridge> <xabers> https://media.discordapp.net/attachments/1083075203732607096/1396974494521757867/image.png?ex=68800962&is=687eb7e2&hm=4dd51ac1699dbee13799a4470a106ca4357fe403ad48abb16bc731eb34f4d846&=&format=webp&quality=lossless
03:04 < bridge> <xabers> https://media.discordapp.net/attachments/1083075203732607096/1396974564692721694/image.png?ex=68800972&is=687eb7f2&hm=da8d38f7fc35afbc9383d480968cddf9ce084e2f969495bfc2259f9d96bc9f59&=&format=webp&quality=lossless
03:04 < bridge> <xabers> https://media.discordapp.net/attachments/1083075203732607096/1396974998605795489/image.png?ex=688009da&is=687eb85a&hm=ff376b4ad294015121a0d3a3af4bc04139c81fac306f39687727a72441a413c8&=&format=webp&quality=lossless
03:05 < bridge> <xabers> https://media.discordapp.net/attachments/1083075203732607096/1396975087185297518/image.png?ex=688009ef&is=687eb86f&hm=f86f2f1a9c6708f1ae3da7e28cb55c20ceabecded49171373370f0c2d49d913c&=&format=webp&quality=lossless&width=419&height=559 @everyone
03:19 < bridge> <qxdfoxy> woah is this real?
03:20 < bridge> <qxdfoxy> @Discord Mod i think thats the right role to ping
04:39 < bridge> <totar> except that barely any of the mods have it afaik
05:56 < bridge> <syrinok> No mods have it, murpi learath and heinrich have it
05:57 < bridge> <syrinok> I used to have it, but I'm not active enough anymore
06:45 < ws-client> **<ChillerDragon>** @learath2 i also use pyson http
06:45 < ws-client> **<ChillerDragon>** but not only for testing <:justatest:572499997178986510>
07:13 < bridge> <louis> where do I set the client version number
07:14 < bridge> <louis> nvm
07:21 < bridge> <pilonpl> Caddy is better, more features. I specifically care about video streaming which seems to work better with caddy.
07:30 < bridge> <zhn> LOL
07:42 < bridge> <zhn> ah yeah
07:42 < bridge> <zhn> thats why i don't see part of skins in serverbrowser xd
08:13 < bridge> <ryozuki> https://www.tomshardware.com/tablets/worlds-first-risc-v-tablet-is-finally-fully-baked-pinetab-v-now-ships-with-completely-functional-linux-for-usd149
08:13 < ws-client> **<ChillerDragon>** can we get some progress on #10399
08:13 < chillerbot> https://github.com/ddnet/ddnet/issues/10399
10:04 < bridge> <louis> hi, i updated #10529 if anyone wants to take a look. would be nice if a maintainer gave opinion so I know if there's anything I especially need to fix earlier than later
10:04 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/10529
10:04 < bridge> <louis> btw how am i supposed to get clang format 10 on fedora lmao
10:18 < bridge> <Ewan> Macros
10:19 < bridge> <learath2> If you are releasing crates that are all tightly integrated like this, you should be required by law to version them in lockstep
10:19 < bridge> <Ewan> What difference does it make
10:19 < bridge> <Ewan> Itâ€™s all statically linked and comes from crates io
10:22 < bridge> <learath2> Well in this case the rng itself comes from rand. But the package I'm using only needs to commit to the interface in rand_core
10:24 < bridge> <learath2> It only took 1 hour of my life to figure out why I couldn't pass the rng engine
10:29 < bridge> <learath2> `ed25519_dalek` is the crate I was using btw
10:36 < bridge> <Ewan> Beware gen_range deprecation
10:53 < bridge> <Assa> on it ðŸ™‚
11:10 < bridge> <Assa> you still have other requested changes open. I know this sometimes can be annoying
12:35 < bridge> <Assa> @pioooooo thank you for reporting the rendering bug. it's amazing, how stupid it is and it went unnoticed, because it only affects overlays and only on map borders
12:45 < bridge> <Assa> cool, discord gh bot doesn't even show image links
13:34 < bridge> <robyt3> Would anyone else like to help review #9965?
13:34 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/9965
14:03 < bridge> <Assa> @robyt3 
14:03 < bridge> <Assa> ```C++
14:03 < bridge> <Assa>     for(int i = 0; i < m_pLayerQuads->m_NumQuads; ++i)
14:03 < bridge> <Assa>     {
14:03 < bridge> <Assa>         const CQuad *pQuad = &pQuads[i];
14:03 < bridge> <Assa> 
14:03 < bridge> <Assa>         // calculate clip region
14:03 < bridge> <Assa>         for(int QuadIdPoint = 0; QuadIdPoint < 4; ++QuadIdPoint)
14:03 < bridge> <Assa>         {
14:03 < bridge> <Assa>             for(int Channel = 0; Channel < 2; ++Channel)
14:03 < bridge> <Assa>             {
14:03 < bridge> <Assa>                 aQuadOffsetMin[Channel] = std::min(aQuadOffsetMin[Channel], pQuad->m_aPoints[QuadIdPoint][Channel]);
14:03 < bridge> <Assa>                 aQuadOffsetMax[Channel] = std::max(aQuadOffsetMax[Channel], pQuad->m_aPoints[QuadIdPoint][Channel]);
14:03 < bridge> <Assa>             }
14:03 < bridge> <Assa>         }
14:03 < bridge> <Assa>     }
14:03 < bridge> <Assa> ```
14:03 < bridge> <Assa> 
14:04 < bridge> <Assa> This is not possible, because the CQuad is const and you can't access m_aPoints for some reason, if pQuad is const ðŸ¤” 
14:04 < bridge> <Assa> 
14:04 < bridge> <Assa> Seems like `constexpr T &operator[](const int index) { return index ? y : x; }` in vmath.h is not const correct.
14:04 < bridge> <Assa> it isn't, because it returns a reference
14:07 < bridge> <robyt3> Does `constexpr T &operator[](const int index) const { return index ? y : x; }` work?
14:09 < bridge> <Assa> currently trying, I wouldn't wonder if it crashes somewhere else
14:11 < bridge> <Assa> you mean `constexpr const T &operator[](const int index) const { return index ? y : x; }`
14:11 < bridge> <Assa> 
14:11 < bridge> <Assa> And no, it crashes on 5 other places
14:11 < bridge> <Assa> you mean `constexpr const T &operator[](const int index) const { return index ? y : x; }`
14:11 < bridge> <Assa> 
14:11 < bridge> <Assa> And no, it ~~crashes~~ doesn't compile on 5 other places
14:11 < bridge> <robyt3> Maybe you need both operators
14:11 < bridge> <robyt3> const and non-const
14:12 < bridge> <Assa> wouldn't that be ambigous?
14:12 < bridge> <Assa> well compiler says it works
14:37 < bridge> <.puch> @totar Hello i'd like to know if it would be possible to force tclient to 0.7 in a bridge gctf server?
14:49 < bridge> <slimi.1> block
14:50 < bridge> <robyt3> I assume it should work the same as in DDNet client. Use `tw-0.7+udp://<server-ip>:<port>` to connect to the server
15:08 < bridge> <Solly (bun bun)> is there a better way
15:08 < bridge> <Solly (bun bun)> `    DoPopupMenu(pContext, X, Y, TextWidth + 10.0f, TextHeight + 10.0f, pContext, [this](auto... Args) { return this->PopupMessage(Args...); });`
15:09 < bridge> <Solly (bun bun)> if pfnFunction now takes an std::function, force the Cui::* func ptr to a lambda
15:09 < bridge> <Solly (bun bun)> without the stupid bind or lambda
15:09 < bridge> <Solly (bun bun)> i could overload DoPopupMenu to also accept Cui::* and do the wrapping for you
15:09 < bridge> <melon> Ddnet context or t-client context
15:10 < bridge> <Solly (bun bun)> ddnet
15:40 < bridge> <ryozuki> https://www.businessinsider.com/replit-ceo-apologizes-ai-coding-tool-delete-company-database-2025-7
15:40 < bridge> <ryozuki> kek
17:01 < bridge> <learath2> I may or may not be cooking something here
17:02 < bridge> <learath2> https://paste.pr0.tips/MII
17:04 < bridge> <pilonpl> What is this
17:06 < bridge> <learath2> It's a signed manifest file for updates, want to finally replace the old insecure autoupdater with an external binary
17:06 < bridge> <learath2> The external binary will also serve as a crash pad of sorts to do crash reporting and any other thing we might want to do while starting ddnet
17:07 < bridge> <learath2> It's a signed manifest file for updates, want to finally replace the old insecure (not exactly insecure, but it would be if we ever lose the ddnet domains) autoupdater with an external binary
17:37 < bridge> <louis> thx
17:38 < bridge> <louis> btw are inline conditionals used much elsewhere in dd code?
17:38 < bridge> <louis> i love me inline conditionals but sometimes it makes the flow of logic a bit less readable
17:39 < bridge> <learath2> Ternaries? We use a few
17:40 < bridge> <learath2> They look ugly when chained though and reading them is a little annoying. So avoid chaining too many ðŸ˜„
17:43 < bridge> <louis> also what's the maintainer opinion on adding new sounds if there even is one
17:43 < bridge> <learath2> No opinion afaik, I don't think anyone added one in years
17:48 < bridge> <robyt3> Would probably be a good idea for target switches
17:49 < bridge> <robyt3> (and fallback to an existing sound for old clients)
18:33 < bridge> <louis> bro gave an agent free access to production database? lmao
18:33 < bridge> <louis> kinda deserved
18:34 < bridge> <pilonpl> Was it literally free access or was the wrong command approved by a human?
18:35 < bridge> <louis> not familiar with replit but i assume it's like agent mode on other llm tools where you describe what you want changed and it just builds code and runs commands in terminal
18:35 < bridge> <louis> if you don't double check the changes before you hit run all then you may get cooked
18:36 < bridge> <melon> If it works similar to claudes integration in the zed editor which i tried, it can automatically apply and run code/commands
18:36 < bridge> <melon> Like, "generate me a unit Test and run it on X and Y" would work without further confirmation needed
18:38 < ws-client> **<ChillerDragon>** found a vanilla 0.6 player o.O
18:39 < ws-client> **<ChillerDragon>** @louis from github
18:40 < bridge> <melon> Who???
18:41 < bridge> <louis> ChillerDragon: what from github
18:49 < bridge> <learath2> smartest vibe coder
18:55 < ws-client> **<ChillerDragon>** @louis clang
18:55 < ws-client> **<ChillerDragon>** can announcementns.txtx do comments?
18:57 < bridge> <Assa> I'd be willing to create some sounds, I have a few options and ideas
18:59 < ws-client> **<ChillerDragon>** nvm no comments needed anymore
19:00 < bridge> <louis> sure, its been a while since ive worked with audio
19:38 < ws-client> **<ChillerDragon>** where download clang format??
19:38 < chillerbot> you can download clang-format-10 here https://github.com/muttleyxd/clang-tools-static-binaries/releases
19:38 < ws-client> **<ChillerDragon>** epic
19:50 < bridge> <kollpotato> chiller are you botting again
19:50 < bridge> <vahemaaa> no
19:52 < bridge> <chillerdragon> no proof
19:53 < bridge> <kollpotato> proof is above
19:53 < bridge> <kollpotato> https://cdn.discordapp.com/attachments/293493549758939136/1397275368431423590/image.png?ex=68812197&is=687fd017&hm=17c88dbcb8e86424238efbdea837787c41152cad2641cfd2094d003008b6a460&
19:56 < bridge> <vahemaaa> https://cdn.discordapp.com/attachments/293493549758939136/1397276168922726622/image.png?ex=68812256&is=687fd0d6&hm=b1f7520d5b09c752c6d6656db8d4160d29329245f8f526b75b8014d86126e5d0&
19:56 < bridge> <vahemaaa> im stalking chillerdragon
20:01 < bridge> <teero777> what do you get from stalking yourself?? xD
20:03 < bridge> <soulyvevo> hi can we add #10529 please thanks
20:03 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/10529
20:19 < bridge> <pathos3005> Is anyone familiar with how to use this? https://gitlab.com/Patiga/twgpu/-/blob/master/twgpu-tools/src/bin/twgpu-encode-demo.rs
20:22 < bridge> <Ewan> all the things in the Cli struct are command line options
20:22 < bridge> <Ewan> `cargo r --bin twgpu-encode-demo.rs`
20:22 < bridge> <Ewan> `cargo r --bin twgpu-encode-demo`
20:23 < bridge> <milkeeycat> if you pass `-h`, it should show descriptions for all flags
20:37 < bridge> <pilonpl> how are macros in rust any better than macros in C?
20:38 < bridge> <pilonpl> don't they have the same issues?
20:38 < bridge> <pilonpl> i mean obviously rust is more powerful but it still seems like macros aren't entirely aware about your code
20:42 < bridge> <Ewan> yeah they're more powerful
20:42 < bridge> <Ewan> yeah they're still macros
20:49 < bridge> <ryozuki> rust macros are based on the AST and modifying it, C macros are text based with no notion of tokens and the like
20:50 < bridge> <ryozuki> proc macros, the ones with derive are more powerful
20:50 < bridge> <ryozuki> but they need a separate crate
20:51 < bridge> <learath2> Rust macros are dope, but they need to make scoped versions of them
20:51 < bridge> <milkeeycat> have anyone make a proc macro which takes a prompt, sends it to chat gpt, takes the code and pastes the result as its body? xd
20:51 < bridge> <ryozuki> https://github.com/edg-l/formy
20:51 < bridge> <ryozuki> i made this long time ago
20:51 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1397290023266685132/image.png?ex=68812f3d&is=687fddbd&hm=4f7ee2b85a7d24772e65514bb71707340be1b9d62ef32c0b91325f1e3c912d4e&
20:51 < bridge> <ryozuki> it makes a html form xd
20:51 < bridge> <ryozuki> idk the use but idk why i did this
20:52 < bridge> <Ewan> neat
20:52 < bridge> <Ewan> that's cool honestly
20:53 < bridge> <Ewan> + https://github.com/jprochazk/garde
20:53 < bridge> <ryozuki> https://crates.io/crates/validator
20:53 < bridge> <ryozuki> i always used this
20:53 < bridge> <ryozuki> didnt know
20:54 < bridge> <ryozuki> This crate is heavily inspired by the validator crate. It is essentially a full rewrite of validator. The creation of this crate was prompted by this comment and a few others talking about a potential rewrite.
20:54 < bridge> <ryozuki> looks like validator is not maintained a lot
20:54 < bridge> <Ewan> yeah
20:55 < bridge> <Ewan> i have yet to use either i just keep it in my brain's index of cool crates
21:47 < bridge> <learath2> Idk if they are that capable, but a build.rs could do this I guess
21:48 < bridge> <milkeeycat> have anyone made a proc macro which takes a prompt, sends it to chat gpt, takes the code and pastes the result as its body? xd
21:59 < bridge> <totar> https://cdn.discordapp.com/attachments/293493549758939136/1397307103030546633/20250720_233020.jpg?ex=68813f26&is=687feda6&hm=a5a935dbd259049050aa0804c86d0bfccb018aac3bdc19bb09385ddb809a9a89&
22:07 < bridge> <totar> https://anuraag2601.github.io/gemini_cli_disaster.html
22:33 < bridge> <pathos3005> Thanks but oufff it's not working
22:33 < bridge> <pathos3005> Finally figured out all the dependencies though
22:33 < bridge> <pathos3005> Wish there was Docker for it
22:39 < bridge> <Ewan> you should only need rust
22:39 < bridge> <Ewan> rustup is the best place to install it assuming you're not on a weird os
22:39 < bridge> <pathos3005> Oh yeah I should clarify, I mean without DDNet, but DDNet also uses Rust, so yeah
22:39 < bridge> <pathos3005> I was trying on Linux Mint locally, before trying anything on cloud
22:40 < bridge> <Ewan> idk what you mean but good luck
22:40 < bridge> <pathos3005> I mean I didn't install DDNet and all of its dependencies
22:40 < bridge> <chillerdragon> teeworlds is becoming more and more attractive for contributors. It has less than 50 pending PRs and in 2 years Oy will come back to merge 20 at once. While DDNet has 100 stale PRs and in 2 years it will have 200 stale PRs.
22:41 < bridge> <pathos3005> lol
22:41 < bridge> <melon> you know.. it all started when 0.7 was merged
22:42 < bridge> <chillerdragon> Nah bro you canâ€™t defend ddnet here
22:42 < bridge> <chillerdragon> You maintain a teeworlds fork non ddnet based
22:44 < bridge> <melon> hey listen, we're migrating
22:44 < bridge> <melon> :kek:
22:44 < bridge> <chillerdragon> We should do a cleanup arc
22:44 < bridge> <chillerdragon> No more new prs
22:45 < bridge> <chillerdragon> Everyone who wants to open a new pr has to close 2. And all the plebs who donâ€™t have close powers have to review 3 prs to be allowed to open one.
22:45 < bridge> <melon> hey, as long as #10529 gets merged i dont mind.
22:45 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/10529
22:45 < bridge> <chillerdragon> I mind
22:46 < bridge> <chillerdragon> Because everyone has favorites in the 100 pr pile and itâ€™s a constant cherry picking
22:46 < bridge> <chillerdragon> We should just reach a low number so stuff doesnâ€™t get stale again
22:47 < bridge> <melon> tho to be fair, stuff like #10496 is hard to merge because reviewing takes a long time
22:47 < bridge> <melon> its 1K loc changed, with UI and code structure changes
22:47 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/10496
22:47 < bridge> <chillerdragon> Oh yea my rule for that is atomic prs
22:47 < bridge> <chillerdragon> Prs should do one thing and one thing only
22:47 < bridge> <chillerdragon> Big diffs should be discussed in issues and then merged instantly
22:47 < bridge> <melon> roby would kill you!
22:48 < bridge> <melon> i love his `see commits` PR's
22:48 < bridge> <chillerdragon> I think he doesnâ€™t fully disagree
22:48 < bridge> <Ewan> we should merge everything unconditionally
22:48 < bridge> <Ewan> :f3:
22:48 < bridge> <chillerdragon> I say close not merge
22:48 < bridge> <chillerdragon> Reject is better than stale
22:48 < bridge> <Ewan> merge 100 bad prs and make 100 new ones to fix
22:49 < bridge> <melon> merge 1 bad pr and 0.7 sits within hands reach, unused by 95% of the playerbase
22:49 < bridge> <melon> :dTeuMonkaW:  i'll never forgive you chiller
22:49 < bridge> <melon> merge 1 ~~bad~~ pr and 0.7 sits within hands reach, unused by 95% of the playerbase
22:50 < bridge> <Ewan> I don't think it's bad there's just no way to gracefully handle 0.7 specific behavior
22:50 < bridge> <chillerdragon> @mpft: thatâ€™s also a strategy. Test on master
22:50 < bridge> <chillerdragon> Canâ€™t do that always but at least as a phase
22:52 < bridge> <chillerdragon> @blaiszephyr: canâ€™t tell if your joking but since I invested a lot of time into 0.7 Iâ€™ll defined it anyway. Does it even hurt you? Itâ€™s good stuff. The ctf community really needed it itâ€™s struggeling to survive.
22:53 < bridge> <Ewan> I haven't actually seen any bugs or lingering shortcomings from 0.7 make it past the review stage. it seems stable
22:53 < bridge> <melon> whats wrong about having ctf on 0.6
22:53 < bridge> <melon> an issue i have with it is that we had dozens of PR's to fix 0.7 behavior on a 0.6 based client
22:53 < bridge> <melon> https://cdn.discordapp.com/attachments/293493549758939136/1397320729460084888/image.png?ex=68814bd6&is=687ffa56&hm=ef03c98b1d4c2e813bd58445cd954a4403072de24e21b17d0fabeb469134c8e8&
22:53 < bridge> <Ewan> Oh
22:54 < bridge> <chillerdragon> The PRs arenâ€™t bad
22:54 < bridge> <chillerdragon> Smol things get merged quickly
22:54 < bridge> <chillerdragon> It splits the community
22:54 < bridge> <chillerdragon> Its bad if players try to follow each other and half of them donâ€™t arrive
22:55 < bridge> <chillerdragon> Not everyone uses ddnet. Or at least used 4 years ago when I started the port
22:56 < bridge> <chillerdragon> Whatâ€™s wrong with ctf on 0.6 is like saying whatâ€™s wrong with ddrace on ddnet 9.2
22:56 < bridge> <Ewan> I think this is still better than 0.7 servers shrinking to extinction
22:57 < bridge> <chillerdragon> They sadly are kinda extinct
22:58 < bridge> <chillerdragon> But occasionally I see some 1v1 of old pros xd
22:58 < bridge> <chillerdragon> Which I wouldnâ€™t see if my client was stuck in 0.6
22:58 < bridge> <Ewan> everything seems extinct here except ddnet where there are at least 5 npcs online in usa at any given moment
22:59 < bridge> <melon> it's obviously totally subjective - within the last year my respect towards backwards compatibility dropped to almost zero.
22:59 < bridge> <melon> i'll dip now, i think i said everything i had to say, and it gets quite late
22:59 < bridge> <melon> didnt mean to bash your port or the implementation by the way, it was great work. its just me being annoyed that we even need to have it.
22:59 < bridge> <Ewan> that is kinda what it seems like
22:59 < bridge> <robyt3> Adding support for multiple editor maps won't exactly be easy to review either, currently`64 files changed, 4025 insertions(+), 3623 deletions(-)` without even adding the feature
22:59 < bridge> <chillerdragon> But 0.6 is the backwards stuff
22:59 < bridge> <Ewan> it's fair to be frustrated
23:00 < bridge> <melon> ouch.. - and respect.
23:00 < bridge> <chillerdragon> I think there is no cost to 0.7 especially if you have me who is willing to maintain it
23:00 < bridge> <chillerdragon> My biggest pain point is that I used up all my Heinrich points with that pr
23:00 < bridge> <Ewan> yeag
23:00 < bridge> <Ewan> you took all his remaining fucks to give
23:00 < bridge> <Ewan> for all of ddnet
23:01 < bridge> <chillerdragon> He was the big 0.7 defender. And after that pr was merged. He made sure to disagree with me on every single opinion to be ever existed
23:01 < bridge> <melon> is Heinrich a maintainer on teeworlds? or is Oy the only one with merge access.
23:01 < bridge> <melon> 
23:01 < bridge> <melon> i worry that Oy may just, not come back. and then we have ddnet with constant updates and teeworlds will vanish into the depths of FOSS software
23:01 < bridge> <pioooooo> well you have to get a second one
23:01 < bridge> <Ewan> oy inherited it
23:01 < bridge> <chillerdragon> Heinrich is just a technical maintainer
23:01 < bridge> <Ewan> Afaik he is the only one with merge access
23:01 < bridge> <Ewan> Hein has seniority tho
23:01 < bridge> <chillerdragon> He has powers but shouldnâ€™t use them
23:02 < bridge> <Ewan> O
23:04 < bridge> <learath2> chillerdragon try not to glaze teeworlds challange, impossible difficulty
23:04 < bridge> <Ewan> it's a pretty good game
23:04 < bridge> <learath2> last commit 1 year ago before robyt3 and heinrich merged a security fix ðŸ˜„
23:05 < bridge> <learath2> any day now oy will come back and 0.8 will happen, trust
23:06 < bridge> <Ewan> it will have trails and pets
23:06 < bridge> <Ewan> the future of ddnet!!!!! :kek:
23:06 < bridge> <Ewan> ddnet will be completely obsolete by the time the update hits steam
23:07 < bridge> <teero777> no players = no botters
23:07 < bridge> <teero777> this is the current anti cheat
23:07 < bridge> <learath2> ngl, that is kinda true
23:08 < bridge> <learath2> @mpft have you ever used a `std::cell:LazyCell`?
23:12 < bridge> <Ewan> yeah what's up
23:13 < bridge> <Ewan> lazy loaded static memory for 1 thread
23:14 < bridge> <learath2> What use is it? It's explicitly `!Sync` so it can't be in a static
23:14 < bridge> <zhn> i don't know any vani person who used ddnet 0.7 to actually play on 0.7 servers
23:14 < bridge> <zhn> 0.7 scene died the moment ddnet-insta appeared
23:15 < bridge> <zhn> i still see no reason of having both bridge client and server
23:15 < bridge> <zhn> it's a complete disaster
23:15 < bridge> <kollpotato> Sync is used for programs with many threads
23:16 < bridge> <kollpotato> so !Sync means it can't be used in more than one
23:16 < bridge> <kollpotato> compiler markers
23:16 < bridge> <kollpotato> or whatever
23:16 < bridge> <learath2> yet Rust will happily require all statics be `Sync` whether you spawn multiple threads, or not, or use the static from multiple threads
23:16 < bridge> <learath2> So I'm curious what the use of `LazyCell` which is explicitly `!Sync` is. You can't put it in a static, so what use is the lazy initialization?
23:17 < bridge> <kollpotato> hmm i thnk i have used statics without sync
23:17 < bridge> <kollpotato> im gonna check
23:19 < bridge> <kollpotato> nvm i did not
23:19 < bridge> <kollpotato> i probably encountered the same issue
23:22 < bridge> <kollpotato> so thats why `once_cell` crate exists
23:22 < bridge> <kollpotato> it provides LazyCell without the need for Sync implementation
23:22 < bridge> <Ewan> I'm sure whatever I wanted to use it for required Send+Sync anyway so I used a LazyLock
23:23 < bridge> <Ewan> perhaps it's just to specify your own synchronization mechanism
23:23 < bridge> <kollpotato> nvm unsync::OnceCell can't be used in statics
23:23 < bridge> <kollpotato> rust shenanigans
23:24 < bridge> <Ewan> so when using static memory over multiple threads you can do LazyCell<sqlx::PgPool> for example, when you hsge a type that has its own synchronization mechanism (by virtue of an Arc or its own RwLock or whatever)
23:25 < bridge> <Ewan> LazyLock<> would provide redundant traits & worse performance for that I think
23:29 < bridge> <kollpotato> hmm i think i have used statics without sync
23:30 < bridge> <learath2> Are you sure? LazyCell contains an UnsafeCell which is explicitly !Sync, the LazyCell itself will never be Sync
23:30 < bridge> <Ewan> I'm not sure
23:31 < bridge> <Ewan> I don't think there's a remaining instance of the struct in any code I have
23:31 < bridge> <Ewan> i used it when trying to figure stuff out and eventually settled on something else
23:31 < bridge> <kollpotato> the solution is don't use statics
23:31 < bridge> <Ewan> saw that you needed a crate like once_cell to get that behavior and decided to just do something else
23:32 < bridge> <Ewan> statics are fairly aids
23:32 < bridge> <kollpotato> arc mutex everything
23:32 < bridge> <learath2> I'll ask the rust people in the rust discord, I'm curious now what the use for this is
23:32 < bridge> <Ewan> arc tokio rwlock
23:32 < bridge> <Ewan> for more explicit access control
23:32 < bridge> <Ewan> and no panic
23:32 < bridge> <learath2> Arc tokio RwLock everything in a single threaded application
23:32 < bridge> <Ewan> no
23:32 < bridge> <learath2> Yes
23:32 < bridge> <kollpotato> just to initialize a value when its being accessed xd
23:32 < bridge> <kollpotato> maybe it is that simple
23:33 < bridge> <learath2> but where would you have one if not in a static? just local in a function? ::D
23:33 < bridge> <learath2> but where would you have one if not in a static? just local in a function? ðŸ˜„
23:33 < bridge> <kollpotato> yeah it does seem useless
23:34 < bridge> <kollpotato> an example from the source code 
23:34 < bridge> <kollpotato> ```rs
23:34 < bridge> <kollpotato> /// use std::cell::LazyCell;
23:34 < bridge> <kollpotato> ///
23:34 < bridge> <kollpotato> /// let lazy: LazyCell<i32> = LazyCell::new(|| {
23:34 < bridge> <kollpotato> ///     println!("initializing");
23:34 < bridge> <kollpotato> ///     92
23:34 < bridge> <kollpotato> /// });
23:34 < bridge> <kollpotato> /// println!("ready");
23:34 < bridge> <kollpotato> /// println!("{}", *lazy);
23:34 < bridge> <kollpotato> /// println!("{}", *lazy);
23:34 < bridge> <kollpotato> ```
23:34 < bridge> <learath2> I'm sure it has some use, Rust people discuss for 8 billion years before merging anything, there is no way they merged something that isn't useful
23:39 < bridge> <learath2> Rust discord enlightened me, it can be used in `thread_local`s and it can be used in a construction like 
23:39 < bridge> <learath2> ```rust
23:39 < bridge> <learath2> struct Foo {
23:39 < bridge> <learath2>   ...
23:39 < bridge> <learath2>   expensive_to_calculate_field: Lazy<T>
23:39 < bridge> <learath2> };
23:39 < bridge> <learath2> ```
23:39 < bridge> <learath2> Rust discord enlightened me, it can be used in `thread_local`s and it can be used in a construction like 
23:39 < bridge> <learath2> ```rust
23:39 < bridge> <learath2> struct Foo {
23:39 < bridge> <learath2>   ...
23:39 < bridge> <learath2>   expensive_to_calculate_field: LazyCell<T>
23:39 < bridge> <learath2> };
23:39 < bridge> <learath2> ```
23:40 < bridge> <Ewan> oh yeah the struct thing is kinda obvious in hindsight
23:40 < bridge> <Ewan> but it'd have to be expensive to justify that
23:40 < bridge> <Ewan> lmao
23:40 < bridge> <kollpotato> so the only advantage is for use in thread_local
23:40 < bridge> <kollpotato> i have never used it tbh
23:41 < bridge> <learath2> Yeah, maybe something like a type that holds a file handle and parses it only when accessed through that field
23:41 < bridge> <louis> facts
23:41 < bridge> <louis> only after i get mine in tho
23:42 < bridge> <kollpotato> maybe for embedded stuff
23:42 < bridge> <kollpotato> where doing many things at once can make the microcontroller go kaboom
23:42 < bridge> <soulyvevo> xd
23:44 < bridge> <soulyvevo> i mean matricks should also have merge perms but iirc he said he doesnt want to interfere
23:46 < bridge> <Ewan> makes sense
23:47 < bridge> <learath2> I'll try one rn
