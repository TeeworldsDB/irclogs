00:33 < bridge_> <cyberFighter> is there a way to view demos at speeds higher than 64
00:34 < bridge_> <cyberFighter> oh there is but it makes my game lag like crazy
00:46 < bridge_> <Dale Y Pearlman> hello
00:46 < bridge_> <Dale Y Pearlman> 
00:46 < bridge_> <Dale Y Pearlman> This new software creates 100% AUTOMATED
00:46 < bridge_> <Dale Y Pearlman> 
00:46 < bridge_> <Dale Y Pearlman> CRYPTOCURRENCY Sites to get 50% FOR LIFE
00:46 < bridge_> <Dale Y Pearlman> 
00:46 < bridge_> <Dale Y Pearlman> automated commissions from COINBASE, BINANCE
00:46 < bridge_> <Dale Y Pearlman> 
00:46 < bridge_> <Dale Y Pearlman> and many others... Claim your first BITC0IN commissions
00:46 < bridge_> <Dale Y Pearlman> Message manager on Telegram
00:46 < bridge_> <Dale Y Pearlman> 👇 👇 👇
00:46 < bridge_> <Dale Y Pearlman> https://t.me/PROFITSWITHSTEVE
00:57 < bridge_> <chillerdragon> defs a Feature
00:57 < bridge_> <chillerdragon> (@teero777)
01:42 < bridge_> <heinrich5991> amazing. we needed a reproducer for this issue for a long time ^^
02:35 < bridge_> <louis> when two issues love eachother very much...
07:56 < bridge_> <chillerdragon> BTC price dropped. Financial advice from chiler buy it when it cheap.
08:10 < bridge_> <Ewan> how buy the coin
08:23 < bridge_> <chillerdragon> Consult your financial advisor to find a trustworthy broker
08:44 < bridge_> <Ewan> my financial advisor LOL
08:44 < bridge_> <Ewan> u think i have a financial advisor?
10:26 < bridge_> <chillerdragon> I can lend you mine\: mr jupsti
10:40 < bridge_> <Gewinum> chillerdragon\: u sittin in matrix i see
11:54 < bridge_> <sedonya> How to redo the updates?
11:54 < bridge_> <sedonya> 
11:54 < bridge_> <sedonya> Is it possible to make it so that when the client starts, it checks the repository on GitHub, and automatically updates if there are changes?
13:42 < bridge_> <deen> chillerdragon: please don't advertise pyramid schemes in #developer
15:07 < bridge_> <matodor> pyramid schemes = 0.7 :thonk:
15:42 < bridge_> <chillerdragon> Which pyramid?
15:42 < bridge_> <chillerdragon> (@deen)
15:42 < bridge_> <heinrich5991> don't advertise cryptocurrencies, I guess, chillerdragon
15:43 < bridge_> <chillerdragon> It’s not a pyramid scheme?
15:44 < bridge_> <chillerdragon> I don’t gain anything if you invest. That’s how I thought pyramid schemes are defined.
15:45 < bridge_> <chillerdragon> The Bitcoin price dropped 10% in the last week. I just shared that info.
15:45 < bridge_> <ryozuki> u gain in that ur interested in others investing so price goes up, which benefits you if you have invested
15:45 < bridge_> <ryozuki> piramid scheme
15:46 < bridge_> <ryozuki> buying makes price go up
15:46 < bridge_> <chillerdragon> I assume your troling so I won’t react to that xd
15:49 < bridge_> <ryozuki> im not trolling lol
15:49 < bridge_> <chillerdragon> Okay then let me respond
15:49 < bridge_> <ryozuki> ultimately crypto tokens have no value itself
15:49 < bridge_> <chillerdragon> What you are saying is that talking about any kind of investment makes it a pyramid?
15:49 < bridge_> <ryozuki> which is sad because the technology of blockchains itself is nice and interesting
15:49 < bridge_> <ryozuki> but they gotta put stupid tokens
15:50 < bridge_> <chillerdragon> What do you mean by stupid tokens?
15:50 < bridge_> <ryozuki> talking about a most probably unregulated investment
15:50 < bridge_> <ryozuki> a token is what u buy
15:50 < bridge_> <ryozuki> the btc
15:50 < bridge_> <chillerdragon> How does regulation make it not pyramid
15:50 < bridge_> <chillerdragon> How does the token make it bad?
15:51 < bridge_> <ryozuki> u dont want to read what insaid
15:51 < bridge_> <ryozuki> .
15:51 < bridge_> <chillerdragon> .
15:51 < bridge_> <ryozuki> .
15:51 < bridge_> <chillerdragon> ?
15:51 < bridge_> <ryozuki> u know rallying others to invest in smth is against law iirc
15:52 < bridge_> <ryozuki> ah u dont see replies
15:52 < bridge_> <chillerdragon> I did not know
15:52 < bridge_> <ryozuki> meh to lazy to repeat myself again
15:52 < bridge_> <ryozuki> https://www.investopedia.com/terms/p/pumpanddump.asp
15:53 < bridge_> <heinrich5991> bitcoin is probably not one of these tbh
15:53 < bridge_> <heinrich5991> but I think it's a good idea not to tell people to buy bitcoin, chillerdragon
15:53 < bridge_> <chillerdragon> Okay sure affecting price is illegal I knew that
15:54 < bridge_> <chillerdragon> But no matter what I do I will not affect the price
15:54 < bridge_> <chillerdragon> I just shared with you in case you did not know that the price dropped
15:55 < bridge_> <ryozuki> also regulations offer protections to investors obviously
15:55 < bridge_> <chillerdragon> Okay then do so. I will keep posting when btc drops here. It’s not a pyramid scheme or pump and dump by me. It might be bad financial advice it’s still a fact that it dropped.
15:55 < bridge_> <chillerdragon> (@heinrich5991)
15:55 < bridge_> <ryozuki> for example a regulation in trading requires u to pass some basic knowledge tests first
15:56 < bridge_> <ryozuki> i think the websites are audited for that too
15:56 < bridge_> <heinrich5991> I didn't have to pass a knowledge test to buy stocks
15:56 < bridge_> <ryozuki> where did u buy stocks?
15:56 < bridge_> <heinrich5991> at my bank
15:56 < bridge_> <ryozuki> through my bank and through degiro they required
15:56 < bridge_> <ryozuki> well maybe not for simple stocks
15:57 < bridge_> <ryozuki> but for investments with margin
15:57 < bridge_> <ryozuki> like options and futures
15:57 < bridge_> <heinrich5991> yea, those can lose a lot of money ^^
15:57 < bridge_> <heinrich5991> more than you put in
15:57 < bridge_> <ryozuki> ye
15:57 < bridge_> <chillerdragon> Ultimately neither you nor me know the future. So nobody knows if btc or some etf will perform better. I just like the decentralized and open technology about it and follow the price out of curiosity.
15:58 < bridge_> <ryozuki> but u know eth is better than btc in many regards
15:58 < bridge_> <ryozuki> altho still cripto shady
15:58 < bridge_> <heinrich5991> etf, not eth
15:58 < bridge_> <ryozuki> the evm is a interesting concept
15:58 < bridge_> <ryozuki> ah
15:59 < bridge_> <ryozuki> chiller u know who knows? (for normal stocks)
15:59 < bridge_> <ryozuki> the senators at US who do insider trading xd
15:59 < bridge_> <ryozuki> :pepeW:
16:00 < bridge_> <chillerdragon> Xd
16:05 < bridge_> <chillerdragon> That’s why btc is pog
16:05 < bridge_> <chillerdragon> (@ryozuki)
16:06 < bridge_> <chillerdragon> No us printing money
16:12 < bridge_> <ryozuki> a us politician can lobby a law about btc and fluctuate its price
16:12 < bridge_> <ryozuki> insider trading
16:55 < bridge_> <gerdoe> yay another mod rfc
16:59 < bridge_> <ryozuki> my god no lua pls
17:01 < bridge_> <learath2> Lua is hot
17:01 < bridge_> <kirmesbude> whats so bad about lua?
17:01 < bridge_> <ryozuki> nah
17:01 < bridge_> <ryozuki> i dislike the tables
17:01 < bridge_> <ryozuki> it feels so cumbersome and boring
17:01 < bridge_> <ryozuki> to write lua
17:01 < bridge_> <ryozuki> its not enjoyable
17:01 < bridge_> <ryozuki> i like static typing
17:01 < bridge_> <ryozuki> js has better syntax than lua
17:02 < bridge_> <ryozuki> we shouldnt use lua anyway
17:02 < bridge_> <ryozuki> we should be modern
17:02 < bridge_> <ryozuki> targert wasm for mods
17:02 < bridge_> <ryozuki> target*
17:02 < bridge_> <ryozuki> so u dont limit the developer language
17:02 < bridge_> <ryozuki> we are inclusive
17:02 < bridge_> <ryozuki> :gigachad:
17:03 < bridge_> <ryozuki> and it just happens that rust has first class wasm target
17:03 < bridge_> <learath2> But lua is hotter than wasm
17:03 < bridge_> <learath2> 3 letters > 4 letters
17:03 < bridge_> <ryozuki> https://wasmtime.dev/
17:04 < bridge_> <kirmesbude> once the API stands it would be not that difficult to expand it to other languages. im not familiar with wasm so i dont have an opinion on that
17:04 < bridge_> <ryozuki> thats the thing
17:04 < bridge_> <ryozuki> with wasm directly
17:04 < bridge_> <ryozuki> u allow all languages
17:04 < bridge_> <ryozuki> lua sucks
17:04 < bridge_> <ryozuki> wasm is not a language itself
17:05 < bridge_> <kirmesbude> wasm just binds the api or what?
17:05 < bridge_> <ryozuki> its a target compilation of languages
17:05 < bridge_> <ryozuki> > WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.
17:05 < bridge_> <kaffeine0> What is cumbersome and boring is write top-level gameplay specifc or situation-specific logic in a compilable language). Different languages fit different tasks. It makes no sense to use C++ in place of a script language.
17:05 < bridge_> <ryozuki> web doesnt matter, wasmtime is a runtime for non-browsers
17:05 < bridge_> <Voxel> what type of mods would ddnet accept tho
17:05 < bridge_> <Voxel> like how will weapons mods go
17:05 < bridge_> <learath2> Is the host interface for wasm good anyway?
17:06 < bridge_> <ryozuki> yeah, lets use rust
17:06 < bridge_> <kaffeine0> What is cumbersome and boring is write top-level gameplay specifc or situation-specific logic in a compilable language. Different languages fit different tasks. It makes no sense to use C++ in place of a script language.
17:06 < bridge_> <ryozuki> ye
17:06 < bridge_> <ryozuki> wasmtime has a C binding
17:06 < bridge_> <learath2> It won't be our business what mods people make
17:06 < bridge_> <ryozuki> the original is rust
17:06 < bridge_> <Jupstar ✪> with wasm u can do hot reloading
17:06 < bridge_> <ryozuki> wasm can be a target of scripting languages
17:07 < bridge_> <Jupstar ✪> wasm is better in every aspect than lua
17:07 < bridge_> <ryozuki> wasm is the solution to this
17:07 < bridge_> <ryozuki> it gives developer freedom
17:07 < bridge_> <ryozuki> while setting a host interface
17:07 < bridge_> <Jupstar ✪> in worst case compile a lua interpreter for wasm
17:07 < bridge_> <ryozuki> look up screeps
17:07 < bridge_> <ryozuki> they use wasm
17:07 < bridge_> <ryozuki> i can use rust to script there
17:07 < bridge_> <kaffeine0> Okay, see: I need to adjust config variables on some players count, I also need to toggle votes enablement based on conditions (last voted, current game time, players number, previously passed votes). It makes no sense to use C++ or Rust for that (hardcode votes and map names? no way)
17:08 < bridge_> <ryozuki> thats for u
17:08 < bridge_> <ryozuki> i want to mod in rust
17:08 < bridge_> <Voxel> best case scenario
17:08 < bridge_> <Voxel> rust for server sided
17:08 < bridge_> <Voxel> c++ for client sided
17:08 < bridge_> <ryozuki> wasm enables all languages
17:08 < bridge_> <ryozuki> all decent languages with a wasm target*
17:08 < bridge_> <ryozuki> which is all llvm based langs
17:08 < bridge_> <learath2> I guess one problem with wasm is indeed that one can't write it by hand
17:08 < bridge_> <ryozuki> there is wasm by hand
17:08 < bridge_> <kirmesbude> I don't think it would be fitting to discuss what type of language for the mods should should be used at this stage. it would be more fitting to talk about the API as the API brings security risks and has to be well thought of to enable lots of different mods
17:08 < bridge_> <ryozuki> but why would u do that
17:08 < bridge_> <ryozuki> do ppl rly get what wasm is
17:09 < bridge_> <ryozuki> wasm is more secure than lua for starters
17:09 < bridge_> <Voxel> oh yea true we would need to test runs in order for mods to not break your system
17:09 < bridge_> <Voxel> if mods were an accepted thing id have more fun coding
17:10 < bridge_> <ryozuki> the thing is, wasm allows us to not discuss the language itself
17:10 < bridge_> <kirmesbude> Does it really depend on the interpreted language for the mods? You can deny the Lua interpreter access to the host system and just make it able to call the API. With a well thought of API there shouldn't be any security risks
17:10 < bridge_> <ryozuki> cuz wasm allows all languages
17:10 < bridge_> <ryozuki> u are not understanding what wasm is
17:10 < bridge_> <Jupstar ✪> but u can compile a lua interpreter to wasm
17:10 < bridge_> <Jupstar ✪> i dont understand what the problem here is for you all
17:10 < bridge_> <ryozuki> @jupeyy_keks the problem is they dont know wasm
17:10 < bridge_> <Jupstar ✪> i suspect that too xD
17:10 < bridge_> <Voxel> idc about language; will it be fun to write
17:11 < bridge_> <ryozuki> i should setup wasmtime with ddnet
17:11 < bridge_> <ryozuki> fun experiment
17:11 < bridge_> <ryozuki> @_voxeldoesart good news with wasm, the language is the one u decide
17:11 < bridge_> <Jupstar ✪> i used wasmer
17:11 < bridge_> <Jupstar ✪> bcs best speed 😄
17:11 < bridge_> <ryozuki> and u dont force a choice upon others
17:11 < bridge_> <Voxel> yrah ryo
17:12 < bridge_> <learath2> You need a compiler to mod with wasm, I guess that's the discussion
17:12 < bridge_> <ryozuki> oh wasmer is faster?
17:12 < bridge_> <Jupstar ✪> why?
17:12 < bridge_> <Jupstar ✪> u only need to compile the interpreter
17:12 < bridge_> <Jupstar ✪> nothing more
17:12 < bridge_> <kirmesbude> I dont disagree with using wasm @ryozuki I'm just saying that the API is the most important aspect for the beginning. After that we can surely implement wasm support for the API. I see the advantages youre talking about.
17:13 < bridge_> <Jupstar ✪> from what i know yes
17:13 < bridge_> <ryozuki> u implement the api with wasm in mind ofc
17:13 < bridge_> <learath2> Wasm is hardly easy to type by hand, no?
17:13 < bridge_> <Jupstar ✪> i mean somewhere is an API written in c++ or rust or whatever
17:13 < bridge_> <Jupstar ✪> u plugin your interpreter and all stuff there
17:13 < bridge_> <Jupstar ✪> then rest is hot reload lua scripts
17:13 < bridge_> <ryozuki> why would u do that
17:14 < bridge_> <Jupstar ✪> wasm is just a compile target
17:14 < bridge_> <Jupstar ✪> i also compiled ddnet to wasm
17:14 < bridge_> <ryozuki> why u talk about writing wasm by hand
17:14 < bridge_> <Jupstar ✪> nobody writes it by hand
17:14 < bridge_> <learath2> Ok, stop. So if we use wasm as a modding language for ddnet one will need a compiler to mod it
17:14 < bridge_> <ryozuki> you SHOULDNT use it, but IT EXISTS https://developer.mozilla.org/en-US/docs/WebAssembly/Understanding_the_text_format
17:14 < bridge_> <learath2> That's why I said you'll need a compiler
17:14 < bridge_> <Jupstar ✪> well u also need a compiler rn for ddnet
17:15 < bridge_> <ryozuki> with lua u need a interpreter
17:15 < bridge_> <Jupstar ✪> u simply add a lua interpreter additionally
17:15 < bridge_> <ryozuki> wasm would be a dependency anyway
17:15 < bridge_> <ryozuki> a mod wouldnt need to add any dependency related to wasm
17:15 < bridge_> <ryozuki> it would be in the code already
17:15 < bridge_> <learath2> Yeah, but if we pick python or lua one could mod ddnet without a full compiler suite
17:15 < bridge_> <ryozuki> what compiler suite?
17:15 < bridge_> <Jupstar ✪> u also need a interpreter without wasm
17:16 < bridge_> <learath2> One of the many that can target wasm
17:16 < bridge_> <Jupstar ✪> the only difference is that the interpreter is not compiled to wasm then
17:16 < bridge_> <learath2> But interpreter would come with the game server. It wouldnt be a dev dependency
17:16 < bridge_> <ryozuki> rust is the easiest wasm target to install on windows iirc
17:16 < bridge_> <ryozuki> no problem
17:16 < bridge_> <ryozuki> sincer  we require rust
17:16 < bridge_> <ryozuki> idk about msvc
17:17 < bridge_> <learath2> Anyway I'm not saying it's better or worse. I'm just saying it's disingenuous to say wasm modding would be as trivial as lua or python or something else interpreted
17:17 < bridge_> <Jupstar ✪> but its more flexable 😄
17:17 < bridge_> <Jupstar ✪> bcs u can use lua AND python xD
17:17 < bridge_> <ryozuki> wasmnn modding would be more dev friendly, less forcing people to usel anguages they hate and more they love
17:18 < bridge_> <learath2> But it would make hobbyist modding more annoying in exchange. So less skiddies
17:18 < bridge_> <Jupstar ✪> why tho
17:18 < bridge_> <Jupstar ✪> most ppl wouldnt compile ddnet
17:18 < bridge_> <Jupstar ✪> they get it precompiled
17:18 < bridge_> <Jupstar ✪> with the interpreters(if wanted)
17:18 < bridge_> <Jupstar ✪> and simply write their scripts
17:18 < bridge_> <ryozuki> how so
17:18 < bridge_> <Jupstar ✪> as if wasm wasnt there
17:18 < bridge_> <learath2> You are assuming there are intepreters. I'm guessing ryo wouldn't want that at all
17:18 < bridge_> <ryozuki> now i rly want to try adding wasm
17:19 < bridge_> <Jupstar ✪> well they are wasm modules.. if ryo doesnt want them. delete them xD
17:19 < bridge_> <Jupstar ✪> use a stub instead
17:19 < bridge_> <learath2> Because modding would require a compiler capable of producing wasm from some language
17:19 < bridge_> <ryozuki> i can make a guide no worries
17:19 < bridge_> <ryozuki> ppl can use their loved js
17:19 < bridge_> <Jupstar ✪> anyway, since i have experience already
17:19 < bridge_> <ryozuki> this would attract many script kiddies in fact
17:20 < bridge_> <Jupstar ✪> i can tell you, no matter if wasm or lua or whatever
17:20 < bridge_> <Jupstar ✪> 
17:20 < bridge_> <Jupstar ✪> it has quite some overhead
17:20 < bridge_> <ryozuki> yeah
17:20 < bridge_> <ryozuki> and code complexity increases
17:20 < bridge_> <kirmesbude> That would be cool. Maybe as a first step - 
17:20 < bridge_> <kirmesbude> 
17:20 < bridge_> <kirmesbude> Make a small API 
17:20 < bridge_> <kirmesbude> 
17:20 < bridge_> <kirmesbude> write the bindings and do a small server sided mod saying "hello" everytime a player joins
17:20 < bridge_> <ryozuki> maintenance
17:20 < bridge_> <Jupstar ✪> so it might sound nice to simply add it, but in fact just adding it everywhere will kill perf extremly
17:20 < bridge_> <ryozuki> is this rly feasible with the current state of ddnet
17:20 < bridge_> <kirmesbude> Sort of as a proof of concept. Maybe that would be a good start?
17:20 < bridge_> <ryozuki> this feels like a thing u need from the ground up
17:22 < bridge_> <Jupstar ✪> i hope you also understand that it's not easy to share memory between host and guest
17:22 < bridge_> <Jupstar ✪> so if u say
17:22 < bridge_> <Jupstar ✪> 
17:22 < bridge_> <Jupstar ✪> blabla(player)
17:22 < bridge_> <Jupstar ✪> it doesnt magically work
17:22 < bridge_> <Jupstar ✪> especially not if you want it to be memory safe
17:22 < bridge_> <ryozuki> blabla car
17:23 < bridge_> <kirmesbude> I mean thats what the API is for isnt it?
17:23 < bridge_> <kirmesbude> 
17:23 < bridge_> <kirmesbude> "get_player_names()"
17:23 < bridge_> <kirmesbude> returns a read only copy of the player names
17:23 < bridge_> <ryozuki> @kirmesbude r u a dev?
17:23 < bridge_> <kirmesbude> yes but not familiar with wasm tbh
17:23 < bridge_> <ryozuki> c++?
17:23 < bridge_> <ryozuki> ddnet?
17:23 < bridge_> <kirmesbude> c++ backend developer
17:24 < bridge_> <kirmesbude> i made a mod in ddnet a while ago
17:24 < bridge_> <kirmesbude> tournament block
17:24 < bridge_> <Jupstar ✪> does the script call this or is this a script function you call from the host?
17:24 < bridge_> <kirmesbude> the script calls this. I've been using node API to make C++ code callable from JS for example
17:24 < bridge_> <Jupstar ✪> see, so the c++ host needs to export this function
17:25 < bridge_> <Jupstar ✪> the memory location of it
17:25 < bridge_> <kirmesbude> yes
17:25 < bridge_> <Jupstar ✪> no you have a c++ pointer.. what does lua want to do with this?
17:25 < bridge_> <Jupstar ✪> u need to exchange the memory somehow
17:25 < bridge_> <kirmesbude> there are ways to bind c++ functions to lua by compiling a runtime lua library
17:26 < bridge_> <Jupstar ✪> yes but i hope u understand that exchanging this memory is quite some overhead
17:26 < bridge_> <Jupstar ✪> bcs u need to create the memory on the lua interpreter and then copy it over
17:26 < bridge_> <Jupstar ✪> (in memory safe version at least)
17:27 < bridge_> <kirmesbude> of course there exists overhead nothing comes without it. but i dont think it would be that of a problem. how else would you enable mod support?
17:27 < bridge_> <Jupstar ✪> well wasm for example offers good performance
17:27 < bridge_> <Jupstar ✪> u could make bigger chunks moddable at once
17:27 < bridge_> <Jupstar ✪> e.g. the whole player
17:27 < bridge_> <Jupstar ✪> or the whole physics
17:28 < bridge_> <kirmesbude> its interesting but as i said i dont have experience in wasm but ill look into it. until then i cant agree nor disagree with you
17:29 < bridge_> <kirmesbude> i would appreciate if youd write your thoughts as a comment on the github issue so it doesnt get lost in this discord chat
17:29 < bridge_> <Jupstar ✪> ok my point is also not about wasm
17:29 < bridge_> <Jupstar ✪> 
17:29 < bridge_> <Jupstar ✪> my point is the more API calls u have, the more memory u need to exchange, the more functions (callstack) you create to reach the guest function, the slower it gets
17:30 < bridge_> <kirmesbude> i mean i dont really care on how we'd do it. Id like to help because i love this game and it would bring endless new possibilities for game modes. I dont say that I know how to do anything but I can surely help. If you give me the requirements the C++ API should have I can look into it and make it work.
17:31 < bridge_> <kirmesbude> At least on server side, i never worked with the client side code of ddnet before
17:31 < bridge_> <ryozuki> i disgree in new possiblities for game modes
17:31 < bridge_> <ryozuki> u can already do that with c++
17:31 < bridge_> <ryozuki> what we need is a more mod oriented protocol
17:31 < bridge_> <ryozuki> for example
17:32 < bridge_> <ryozuki> the map cant be extended without losing client side support
17:32 < bridge_> <kirmesbude> https://nodes.teeworlds.dev/
17:32 < bridge_> <kirmesbude> 
17:32 < bridge_> <kirmesbude> how would you do this mod without a special client?
17:32 < bridge_> <ryozuki> the map format needs change
17:32 < bridge_> <kirmesbude> and with a special client no one will play your mod
17:32 < bridge_> <ryozuki> well read my point xd
17:32 < bridge_> <ryozuki> adding lua wont solve this
17:33 < bridge_> <kirmesbude> what protocol are you talking about
17:33 < bridge_> <ryozuki> the network protocol, the map format
17:34 < bridge_> <ryozuki> adding ur tile will leave the client without proper prediction
17:34 < bridge_> <kirmesbude> how would you display this dialoge just by changing the network protocol
17:34 < bridge_> <kirmesbude> https://cdn.discordapp.com/attachments/293493549758939136/1142119306101018786/buildmenu.png
17:34 < bridge_> <ryozuki> easy, u add a set of packets to make server-side UI
17:34 < bridge_> <ryozuki> thats how u make it more mod friendly
17:34 < bridge_> <ryozuki> lua has nothing to do here
17:35 < bridge_> <kirmesbude> i dont care about lua
17:36 < bridge_> <kirmesbude> it was a suggestion. if you have a better suggestion, and it seems that way, id be happy if youd write down and explain your thoughts on the github issue so we can discuss it further and eventually get to a point where I can help implementing the architecture we've agreed on
17:40 < bridge_> <kirmesbude> Thanks for the comment @kaffeine0 it was a very interesting read. I like the idea of improving the network protocol to handle more types of entities or whatever. It would surely help not imposing any security risks in ddnet
17:42 < bridge_> <kaffeine0> There is a way to display a menu, infclass mod does it. Don't repeat it at home, the code is dangerous for your eyes and feeling.
17:42 < bridge_> <kaffeine0> https://cdn.discordapp.com/attachments/293493549758939136/1142121228505722920/infc_headquarter_2023-08-18_18-40-07.mp4
17:43 < bridge_> <kaffeine0> There is a way to display a menu, infclass mod does it. Don't repeat it at home, the code is dangerous for your eyes and feeling.
17:43 < bridge_> <kaffeine0> It abuses the map animations.
17:43 < bridge_> <kaffeine0> https://cdn.discordapp.com/attachments/293493549758939136/1142121228505722920/infc_headquarter_2023-08-18_18-40-07.mp4
17:44 < bridge_> <kaffeine0> There is a way to display a menu, infclass mod does it. Don't try this at home, the code is dangerous for your eyes and feeling.
17:44 < bridge_> <kaffeine0> It abuses the map animations.
17:44 < bridge_> <kaffeine0> https://cdn.discordapp.com/attachments/293493549758939136/1142121228505722920/infc_headquarter_2023-08-18_18-40-07.mp4
17:46 < bridge_> <Jupstar ✪> here little sneak peak
17:46 < bridge_> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1142122419633520802/test.mp4
17:46 < bridge_> <Jupstar ✪> of the modablstest client xd
17:47 < bridge_> <Jupstar ✪> u can literally replace the whole physics and it will still have client side prediction
17:47 < bridge_> <Jupstar ✪> thanks to this
17:47 < bridge_> <Jupstar ✪> in action
17:47 < bridge_> <ryozuki> epic
17:47 < bridge_> <ryozuki> in rust
17:47 < bridge_> <ryozuki> as it should
17:48 < bridge_> <Jupstar ✪> yeah finished in 20 years
17:49 < bridge_> <kirmesbude> Thats cool
17:51 < bridge_> <kaffeine0> There is a way to display a menu, infclass mod does it. Don't try this at home, the code is dangerous for your eyes and feeling.
17:51 < bridge_> <kaffeine0> It abuses the map animations: the server bake two dozen animations, and then adjust the current game tick for the client to make it displaying different quads in different states.
17:51 < bridge_> <kaffeine0> https://cdn.discordapp.com/attachments/293493549758939136/1142121228505722920/infc_headquarter_2023-08-18_18-40-07.mp4
17:52 < bridge_> <kaffeine0> @kirmesbude: this can be interesting for you: https://github.com/AllTheHaxx/lua-srv/blob/master/src/engine/server/lua_apidef.cpp
17:58 < bridge_> <kaffeine0> How heavy is this? `liblua.so` is 527Kb and it does not add more dependencies. The server-side bindings add 6Kb.
17:58 < bridge_> <kaffeine0> How heavy is this? `liblua.so` is 527Kb and it does not pull more dependencies. The server-side bindings add 6Kb.
17:59 < bridge_> <Jupstar ✪> let's see, note in rust everything is static linked
17:59 < bridge_> <kaffeine0> How heavy is this? `liblua.so` is 527Kb and it does not pull more dependencies. The server-side bindings add 6Kb to the ~~DDNet-Server~~ Infclass-Server binary size.
17:59 < bridge_> <Jupstar ✪> so that gives a huge advantage
17:59 < bridge_> <cyberFighter> cool though
18:00 < bridge_> <kaffeine0> How heavy is this? `liblua.so` is 527KB and it does not pull more dependencies. The server-side bindings add 6Kb to the ~~DDNet-Server~~ Infclass-Server binary size (2.0MB => 2.0MB).
18:00 < bridge_> <ryozuki> we shouldnt need to care about a few mb if we provide perfomance
18:00 < bridge_> <Jupstar ✪> ofc not xD
18:01 < bridge_> <ryozuki> also use more ram if we can get more perf
18:01 < bridge_> <Jupstar ✪> binaries generally aren't the stuff that create huge sizes
18:01 < bridge_> <Jupstar ✪> one PNG and u have a second binary from size
18:01 < bridge_> <Jupstar ✪> xd
18:01 < bridge_> <ryozuki> xd
18:01 < bridge_> <Jupstar ✪> it's linking
18:02 < bridge_> <Jupstar ✪> i have the feeling im not using mold xd
18:03 < bridge_> <Jupstar ✪> even in idle it uses like 2 cores, lmao
18:03 < bridge_> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1142126592349446275/image.png
18:04 < bridge_> <Jupstar ✪> around 16MBytes
18:04 < bridge_> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1142126804220510329/image.png
18:04 < bridge_> <Jupstar ✪> it contains the client too btw
18:04 < bridge_> <Jupstar ✪> and all libs
18:04 < bridge_> <Jupstar ✪> so no extra .so files
18:06 < bridge_> <Jupstar ✪> ah yeah
18:06 < bridge_> <Jupstar ✪> i can also build server only
18:06 < bridge_> <Jupstar ✪> let me do that
18:06 < bridge_> <ryozuki> @jupeyy_keks does it have symbols
18:06 < bridge_> <Jupstar ✪> no all stripped
18:06 < bridge_> <ryozuki> strip sstrip
18:06 < bridge_> <Jupstar ✪> but it has no SDL deps, or anything else
18:06 < bridge_> <ryozuki> did u setup the cargo with
18:06 < bridge_> <Jupstar ✪> it's 100% rust and static linked
18:06 < bridge_> <ryozuki> lto=true
18:06 < bridge_> <ryozuki> codegen-units=1
18:06 < bridge_> <Jupstar ✪> not the second
18:06 < bridge_> <ryozuki> use second for max
18:07 < bridge_> <Jupstar ✪> ok let first let me try server only
18:07 < bridge_> <ryozuki> codegen-units
18:07 < bridge_> <ryozuki> 
18:07 < bridge_> <ryozuki> This flag controls how many code generation units the crate is split into. It takes an integer greater than 0.
18:07 < bridge_> <ryozuki> 
18:07 < bridge_> <ryozuki> When a crate is split into multiple codegen units, LLVM is able to process them in parallel. Increasing parallelism may speed up compile times, but may also produce slower code. Setting this to 1 may improve the performance of generated code, but may be slower to compile.
18:07 < bridge_> <ryozuki> 
18:07 < bridge_> <ryozuki> The default value, if not specified, is 16 for non-incremental builds. For incremental builds the default is 256 which allows caching to be more granular.
18:07 < bridge_> <Jupstar ✪> but well, don't expect less
18:07 < bridge_> <Jupstar ✪> wasmer defs huge
18:08 < bridge_> <Jupstar ✪> server is also 10MByte
18:08 < bridge_> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1142127960338464788/image.png
18:08 < bridge_> <Jupstar ✪> so 6MBytes for client only stuff xd
18:09 < bridge_> <Jupstar ✪> now i try this for server
18:11 < bridge_> <Jupstar ✪> 10,3 MiB (10.808.104)
18:11 < bridge_> <Jupstar ✪> 
18:11 < bridge_> <Jupstar ✪> so not much less xd
18:11 < bridge_> <Jupstar ✪> but at least a bit
18:11 < bridge_> <ryozuki> i see
18:11 < bridge_> <ryozuki> but it makes it faster
18:11 < bridge_> <ryozuki> not less size
18:12 < bridge_> <ryozuki> xd
18:12 < bridge_> <Jupstar ✪> then it stays
18:12 < bridge_> <Jupstar ✪> xd
18:16 < bridge_> <Jupstar ✪> @ryozuki i love rust for static linking:
18:16 < bridge_> <Jupstar ✪> left is rust version, right c++ version
18:16 < bridge_> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1142129839063699566/image.png
18:16 < bridge_> <ryozuki> epic
18:17 < bridge_> <ryozuki> 0 deps ddnet
18:18 < bridge_> <Jupstar ✪> but i still need a sound encoder that works with webm 😬
18:18 < bridge_> <Jupstar ✪> in pure rust
18:18 < bridge_> <Jupstar ✪> video encoder exists
18:18 < bridge_> <kaffeine0> You're not a distro maintainer. 😄
18:18 < bridge_> <kaffeine0> Rebuilding packages after a dependency update is a huge PITA, so a number of distros ban static linking.
18:19 < bridge_> <Jupstar ✪> they make their world complicated xd
18:19 < bridge_> <Jupstar ✪> just rebuild and call it a day
18:20 < bridge_> <ryozuki> @jupeyy_keks does this work https://crates.io/crates/cpal
18:21 < bridge_> <ryozuki> https://github.com/rustaudio/cpal
18:21 < bridge_> <kaffeine0> > Just rent a few supercomputers for all platforms, wait for a few days, and call it a week.
18:21 < bridge_> <kaffeine0> It is a terrible solution from software engineering PoV.
18:21 < bridge_> <ryozuki> https://github.com/RustAudio/cpal/wiki/Setting-up-a-new-CPAL-WASM-project
18:21 < bridge_> <Jupstar ✪> i specifically need an encoder
18:22 < bridge_> <Jupstar ✪> are debians build servers always at 100%?
18:22 < bridge_> <kaffeine0> I don't think so — thanks to the dynamic linkage.
18:22 < bridge_> <Jupstar ✪> well debian "only" has ~60k packages
18:23 < bridge_> <Jupstar ✪> if  on average a package needs two minutes to build, it's around 80 days
18:23 < bridge_> <Jupstar ✪> to build all
18:25 < bridge_> <Jupstar ✪> and static build programs are highly portable
18:25 < bridge_> <Jupstar ✪> so static linking the solution
18:25 < bridge_> <Jupstar ✪> now i just need to wait for future OS to catch up to the idea
18:46 < bridge_> <kaffeine0> Also typically very large and vulnerable. I see the benefits of static linking but also a lot of issues.
18:47 < bridge_> <Jupstar ✪> well large depends.
18:47 < bridge_> <Jupstar ✪> 
18:47 < bridge_> <Jupstar ✪> most games for example ship their deps
18:48 < bridge_> <Jupstar ✪> and vulnerable.. depends too xd
18:48 < bridge_> <Jupstar ✪> most ppl wouldnt update shipped deps by hand, and if u use distros, u probably get newest versions anyway
18:54 < bridge_> <kaffeine0> > 60k packages
18:54 < bridge_> <kaffeine0> Ofc it depends but typically (statistically) it is that (large and vulnerable)
18:55 < bridge_> <kaffeine0> > 60k packages
18:55 < bridge_> <kaffeine0> Ofc it depends but typically (statistically) it is that (statically linked => large and vulnerable)
18:58 < bridge_> <Jupstar ✪> fast & portable you meant 😉
18:58 < bridge_> <Jupstar ✪> 
18:58 < bridge_> <Jupstar ✪> join the static club, it's the master race
19:23 < bridge_> <deen> I think dynamic linking mattered more when HDD were measured in MBs. Static linking is cool with LTO, can even save space if you have libs which are rarely used or only small parts of it are used.
19:53 < bridge_> <ryozuki> @jupeyy_keks sadly many distro maintainers are crazy about this
19:53 < bridge_> <ryozuki> i saw a gentoo helper say static linking was a bug
20:08 < bridge_> <Voxel> whats dynamic linking
20:12 < bridge_> <Jupstar ✪> linking to a dynamic library
20:12 < bridge_> <Jupstar ✪> basically create .dll
20:16 < bridge_> <Voxel> ohhhh
20:18 < bridge_> <totar> does the MAX_CLIENTS enum actually work? could you change that and make a 128 player server if the client supported it?
20:22 < bridge_> <Jupstar ✪> mostly it should work
20:23 < bridge_> <Jupstar ✪> NET_MAX_CLIENTS maybe too
20:24 < bridge_> <totar> the snap size would have to be increased eventually also
20:24 < bridge_> <totar> I think?
20:24 < bridge_> <totar> probably not for 128
20:24 < bridge_> <Jupstar ✪> yeah dunno
20:25 < bridge_> <totar> what happens if the number of projectiles exceeds the snap size? lol
20:25 < bridge_> <Jupstar ✪> invisible
20:25 < bridge_> <totar> ah
20:25 < bridge_> <totar> interesting
21:11 < bridge_> <Jurai!> what about to add config for rename it to other languages
21:11 < bridge_> <Jurai!> https://cdn.discordapp.com/attachments/293493549758939136/1142173957181689966/image.png
21:11 < bridge_> <Jurai!> https://cdn.discordapp.com/attachments/293493549758939136/1142173957513027655/image.png
21:11 < bridge_> <Jurai!> its really go easier to mappers what doesnt understand english
22:53 < bridge_> <sedonya> Is it possible to make it so that when the client starts, it checks the repository on GitHub, and automatically updates if there are changes?
23:03 < bridge_> <rickslambiase20> Hello guys just wanna let you know have got some products in Top quality Gas🍁 ⛽️ , shrooms🍄, coke, meth &Vapes🥢, Ice capz, Edibles🍪, Chocolate Bars🍫, LSD, Syrups, Skittles, pills , 💊 clone cards etc. Both for smokers are patients, Offer at moderate price, and also some polkadot gummies, edibles,road trip available just wanna know if you're interested in grabbing some?
23:03 < bridge_> <rickslambiase20> https://t.me/lambiaserickLtdstore
23:14 < bridge_> <deen> Just use https://ddnet.org/news/nightly-build-revived/
23:15 < bridge_> <deen> Making the client check GitHub sounds kind of weird
23:15 < bridge_> <totar> I think he wants to use it for his own client
23:17 < bridge_> <deen> Yeah, still seems weird to me
23:17 < bridge_> <deen> If you want it to just work on your local system, make starting the client a shell script that does `git pull && make -j $(nproc) && ./DDNet`
23:17 < bridge_> <deen> That's what I do whenever I run ddnet
23:17 < bridge_> <deen> and then keep complaining to @davide55 that my self-compiled client doesn't get whitelisted on GER10 every time again 😄
23:37 < bridge_> <totar> I know how to fix that xd
23:37 < bridge_> <totar> he told me
23:41 < bridge_> <totar> do ddnet servers with MySQL still use sqlite database?
