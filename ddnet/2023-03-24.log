07:51 < bridge> <fokkonaut> @Robyt3 you already did so many prs on tw (which is dead :c) but hey, you make ddnet a better place aswell :)
07:51 < bridge> <fokkonaut> Thanks for all the fixes and features
08:34 < bridge> <Jupstar ✪> sleeping a night over the account discussion and have to say i still kinda dislike the solution in total.
08:34 < bridge> <Jupstar ✪> 
08:34 < bridge> <Jupstar ✪> 1. the account lists that would need to be refreshed all the time
08:34 < bridge> <Jupstar ✪> 2. the advanced complexicity of how runs are considered authed
08:34 < bridge> <Jupstar ✪> 3. using registry to play hide and seek
08:34 < bridge> <Jupstar ✪> 4. trusting only the email and that alone.
08:34 < bridge> <Jupstar ✪> 
08:34 < bridge> <Jupstar ✪> i'd say a fully centralized approach can do anythign you want while still being so complicated. 
08:34 < bridge> <Jupstar ✪> 1. a session can have a key pair. so the game server can ask the auth server if the session key is connected to an account and can cache itself how long it wants to trust the session in case the auth server is down.. else it can always ask it.
08:34 < bridge> <Jupstar ✪> 2. if auth server is down  u either once connected to the game server and it remembers you. It could still use the session id to verify if it was related to an account. I generally dunno if this can't get messy
08:34 < bridge> <Jupstar ✪> 3. yeah dunno, just don't save the key on the computer. problems solved
08:34 < bridge> <Jupstar ✪> 4. we could make steam authing and other methods a higher priority. I dunno how a forced strong password is worse than sending an email that probably also has a bad password xdd
08:34 < bridge> <Jupstar ✪> 
08:34 < bridge> <Jupstar ✪> 
08:34 < bridge> <Jupstar ✪> I feel like you want the advantages of decentralized account system. But you don't have them
08:34 < bridge> <Jupstar ✪> 
08:34 < bridge> <Jupstar ✪> Teamspeak 3 has a one time key, and this is why the teamspeak 3 approach works. If we'd do that aswell it would eliminate especially point 1. & 2. which is a huge mess IMHO
08:35 < bridge> <Jupstar ✪> sleeping a night over the account discussion and have to say i still kinda dislike the solution in total.
08:35 < bridge> <Jupstar ✪> 
08:35 < bridge> <Jupstar ✪> 1. the account lists that would need to be refreshed (and downloaded) all the time
08:35 < bridge> <Jupstar ✪> 2. the advanced complexicity of how runs are considered authed
08:35 < bridge> <Jupstar ✪> 3. using registry to play hide and seek
08:35 < bridge> <Jupstar ✪> 4. trusting only the email and that alone.
08:35 < bridge> <Jupstar ✪> 
08:35 < bridge> <Jupstar ✪> i'd say a fully centralized approach can do anythign you want while still not being so complicated. 
08:35 < bridge> <Jupstar ✪> 1. a session can have a key pair. so the game server can ask the auth server if the session key is connected to an account and can cache itself how long it wants to trust the session in case the auth server is down.. else it can always ask it.
08:35 < bridge> <Jupstar ✪> 2. if auth server is down  u either once connected to the game server and it remembers you. It could still use the session id to verify if it was related to an account. I generally dunno if this can't get messy
08:35 < bridge> <Jupstar ✪> 3. yeah dunno, just don't save the key on the computer. problems solved
08:35 < bridge> <Jupstar ✪> 4. we could make steam authing and other methods a higher priority. I dunno how a forced strong password is worse than sending an email that probably also has a bad password xdd
08:35 < bridge> <Jupstar ✪> 
08:35 < bridge> <Jupstar ✪> 
08:35 < bridge> <Jupstar ✪> I feel like you want the advantages of decentralized account system. But you don't have them
08:35 < bridge> <Jupstar ✪> 
08:35 < bridge> <Jupstar ✪> Teamspeak 3 has a one time key, and this is why the teamspeak 3 approach works. If we'd do that aswell it would eliminate especially point 1. & 2. which is a huge mess IMHO
08:35 < bridge> <iriska> Let's play with pu$$y here🔞💦
08:35 < bridge> <iriska> https://clck.ru/33rRoo
08:36 < bridge> <Jupstar ✪> @Discord Mod ^
08:36 < bridge> <Ryozuki> fast, click it!
08:36 < bridge> <Ryozuki> for science
08:36 < bridge> <Ryozuki> research
08:37 < bridge> <Ryozuki> :gigachad:
08:38 < bridge> <Jupstar ✪> e.g. lets say what happens if u join a kog server. the auth server is down
08:38 < bridge> <Jupstar ✪> u finish a map.
08:38 < bridge> <Jupstar ✪> You change the keys
08:38 < bridge> <Jupstar ✪> KoG can't auth your finish
08:38 < bridge> <Jupstar ✪> player complains the rank is missing.
08:38 < bridge> <Jupstar ✪> The stupid worst case that might never happen.
08:38 < bridge> <Jupstar ✪> 
08:38 < bridge> <Jupstar ✪> The player won't understand why it cannot work.
08:38 < bridge> <Jupstar ✪> 
08:38 < bridge> <Jupstar ✪> Or creating an account while the auth server is down.. kinda sounds scary too
09:10 < bridge> <DefaultO> > Or creating an account while the auth server is down.. kinda sounds scary too
09:10 < bridge> <DefaultO> 
09:10 < bridge> <DefaultO> Then don't allow account creation in that case? Could be as simple as pinging the server and or providing an api to check if it is running.
09:11 < bridge> <DefaultO> Adding a messagebox to the client that tells the user than the account server is currently offline makes sense too
09:11 < bridge> <DefaultO> Adding a messagebox to the client that tells the user that the account server is currently offline and that they can't make accounts at the moment makes sense too
09:13 < bridge> <Jupstar ✪> Yeah obviously. But this was something Heinrich didn't seem to want
09:13 < bridge> <Jupstar ✪> Probably BCS it's again less decentralized
09:13 < bridge> <Jupstar ✪> So understandable
09:16 < bridge> <Avolicious> I'd suggest using an already existing protocol like OAuth2, so you can for example use Keycloak and federate User Accounts between multiple instances
09:52 < bridge> <iriska> Let's play with pu$$y here🔞💦
09:52 < bridge> <iriska> https://clck.ru/33rRoo
09:52 < bridge> <Jupstar ✪> Zwelf\: ban ^
09:53 < bridge> <bencie> he can still see it on matrix if i deleted on discord right?
09:53 < bridge> <Jupstar ✪> no
09:53 < bridge> <Jupstar ✪> its double sided bridge
09:53 < bridge> <Jupstar ✪> but it says that u deleted the message
09:53 < bridge> <bencie> User was "iriska"
09:54 < bridge> <Zwelf> done
09:54 < bridge> <DefaultO> Then why do old edited messages stay
09:54 < bridge> <DefaultO> It was a bot
09:54 < bridge> <DefaultO> Someone invited them
09:54 < bridge> <DefaultO> Ban the inviter too
09:54 < bridge> <Jupstar ✪> he knows the name
09:55 < bridge> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1088747812168147004/image.png
09:55 < bridge> <DefaultO> Also can you take away permissions to invite bots?
09:55 < bridge> <DefaultO> Or is that Discord being trash again
09:55 < bridge> <Jupstar ✪> they arent bot accounts i think
09:55 < bridge> <Zwelf> all users on matrix appear as bot here
09:55 < bridge> <Jupstar ✪> they are normal matrix users
09:56 < bridge> <Jupstar ✪> just like me
09:56 < bridge> <DefaultO> Oh so they did post it on matrix
09:56 < bridge> <Jupstar ✪> its the bridge that flags it as bot
09:56 < bridge> <Jupstar ✪> (or better the bot itself is the bridge ^^)
10:49 < bridge> <Ewan> the bot does nothing but generate webhooks and read messages
10:49 < bridge> <Ewan> the webhooks are what show aa ‘bot’
10:49 < bridge> <Ewan> the webhooks are what show as ‘bot’
10:49 < bridge> <Ewan> the bot does nothing but generate webhooks and read messages to send in matrix using a similar mechanism
10:52 < bridge> <Jupstar ✪> we really need them for all channels
10:52 < bridge> <Jupstar ✪> matrix is so cool
10:55 < bridge> <Ewan> yeah
11:16 < bridge> <DefaultO> *DefaultO editing their message 50+ times intensifies :mhmokay:*
12:28 < bridge> <Learath2> The finish would never be lost though, finishes would belong to keys until the account is resolved.
12:40 < bridge> <Jupstar ✪> yeah thats pretty cool, but my point is not that its not cool
12:40 < bridge> <Learath2> I just wanted to say it won't be lost. That's all
13:43 < bridge> <Jupstar ✪> @Ryozuki when a client is 0.7 client it will not send the skin json stuff at all?
13:44 < bridge> <Jupstar ✪> some ppl are still missing skin data in server info, but its only individuals
13:44 < bridge> <Ryozuki> it should send 0.7 skins
13:44 < bridge> <Jupstar ✪> ok
13:44 < bridge> <Jupstar ✪> so they are simply not parsed as default
13:44 < bridge> <Jupstar ✪> good to know
13:45 < bridge> <Jupstar ✪> but good way to know which nobos play 0.7 xdd
14:53 < bridge> <KOF> what's your ingame name
14:53 < bridge> <Learath2> He hides it from everyone, mr anonymous
15:32 < bridge> <Jupstar ✪> i dont hide it
15:33 < bridge> <Jupstar ✪> i mostly played as nameless tee. but actually its keks
15:33 < bridge> <Jupstar ✪> or Glückskeks
15:33 < bridge> <Jupstar ✪> or Detektiv Keks
15:33 < bridge> <Jupstar ✪> i simply dislike to play in big groups esp. t0
15:34 < bridge> <Jupstar ✪> and playing as nameless tee gives some degree of annonymity
15:35 < bridge> <bencie> I played with a guy called Butterkeks and thought it was u :justatest: he told me he wasn't
15:35 < bridge> <bencie> Unless you lied to me :D
15:35 < bridge> <Jupstar ✪> yeah thats not me
15:35 < bridge> <Jupstar ✪> i usually have my clan tag in
15:36 < bridge> <Jupstar ✪> ΛLIVΣ
15:40 < bridge> <Jupstar ✪> u are a 0.7 enjoyer
15:40 < bridge> <Jupstar ✪> 
15:41 < bridge> <Jupstar ✪> But let me clearly tell you something.
15:41 < bridge> <Jupstar ✪> We'd need to fix the map format. We'd need to improve network security etc.
15:41 < bridge> <Jupstar ✪> And the 0.7 client is an annoying useless problem. Sadly some devs are so obsessed to help the 5 users with their 0.7 instead of making ddnet better for all other 99% of the players, like every other game in extistence would do.
15:41 < bridge> <Jupstar ✪> 
15:41 < bridge> <Jupstar ✪> So yes, please stop using it you are part of the problem with that client
15:41 < bridge> <Jupstar ✪> same applies to old ddnet clients btw
15:42 < bridge> <KOF> Bro I'll be happy if you make your servers not accessible with 0.7 clients, then I'll make my own ddrace community like in 2019 and it'll be great
15:42 < bridge> <KOF> Pls do it faster
15:42 < bridge> <Jupstar ✪> mh ok gl
16:35 < bridge> <Ryozuki> edlang incoming
16:35 < bridge> <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1088848681266073610/image.png
16:37 < bridge> <Jupstar ✪> u meant rused-lang
16:37 < bridge> <Ryozuki> kek
16:37 < bridge> <Ryozuki> i have 0 originality
16:37 < bridge> <Ryozuki> imagine inventing syntax
16:52 < bridge> <Ryozuki> ```
16:52 < bridge> <Ryozuki> input:
16:52 < bridge> <Ryozuki> 
16:52 < bridge> <Ryozuki> fn add(a: i64, b: i64) -> i64 {
16:52 < bridge> <Ryozuki>     return a + b;
16:52 < bridge> <Ryozuki> }
16:52 < bridge> <Ryozuki> 
16:52 < bridge> <Ryozuki> fn main() -> i64 {
16:52 < bridge> <Ryozuki>     let x = 2 + 3;
16:52 < bridge> <Ryozuki>     let y = add(x, 4);
16:52 < bridge> <Ryozuki>     return y * 2;
16:52 < bridge> <Ryozuki> }
16:52 < bridge> <Ryozuki> 
16:52 < bridge> <Ryozuki> output:
16:52 < bridge> <Ryozuki> ; ModuleID = 'source'
16:52 < bridge> <Ryozuki> source_filename = "source"
16:52 < bridge> <Ryozuki> 
16:52 < bridge> <Ryozuki> define i64 @add(i64 %0, i64 %1) {
16:53 < bridge> <Ryozuki> entry:
16:53 < bridge> <Ryozuki>   %add = add i64 %0, %1
16:53 < bridge> <Ryozuki>   ret i64 %add
16:53 < bridge> <Ryozuki> }
16:53 < bridge> <Ryozuki> 
16:53 < bridge> <Ryozuki> define i64 @main() {
16:53 < bridge> <Ryozuki> entry:
16:53 < bridge> <Ryozuki>   %add_call = call i64 @add(i64 5, i64 4)
16:53 < bridge> <Ryozuki>   %mul = mul i64 %add_call, 2
16:53 < bridge> <Ryozuki>   ret i64 %mul
16:53 < bridge> <Ryozuki> }
16:53 < bridge> <Ryozuki> ```
16:53 < bridge> <Ryozuki> function calls pog
16:54 < bridge> <Jupstar ✪> epic
16:56 < bridge> <Ryozuki> tbh its not rly good rn xd
16:56 < bridge> <Ryozuki> i probs need some type inference
16:56 < bridge> <Ryozuki> for constants
16:56 < bridge> <Ryozuki> rn it assumets its i64
16:56 < bridge> <Ryozuki> assumes
16:57 < bridge> <Jupstar ✪> fix all rust annoyances
16:57 < bridge> <Ryozuki> i would need to know how to make rust itself first
16:57 < bridge> <Jupstar ✪> xD
16:57 < bridge> <Ryozuki> and thats impossible for me
16:57 < bridge> <Ryozuki> xd
16:58 < bridge> <Ryozuki> https://gist.github.com/edg-l/06a442118a996bae5218b24d134173d3
16:58 < bridge> <Ryozuki> this is the grammar rn
16:59 < bridge> <Jupstar ✪> r u professionally working on compiler now btw or what
16:59 < bridge> <Ryozuki> ye
16:59 < bridge> <Jupstar ✪> cool
17:00 < bridge> <Jupstar ✪> who'd have thought its u doin it and not learath
17:00 < bridge> <Ryozuki> well
17:00 < bridge> <Ryozuki> learath is in the endless loop of university
17:00 < bridge> <Ryozuki> he just needs to go and work
17:00 < bridge> <Jupstar ✪> xD
17:01 < bridge> <Ryozuki> things get more complex when i get to if else
17:01 < bridge> <Ryozuki> u need to do some control flow analisys
17:01 < bridge> <Ryozuki> and build phi nodes
17:02 < bridge> <Ryozuki> https://mapping-high-level-constructs-to-llvm-ir.readthedocs.io/en/latest/control-structures/ssa-phi.html
18:08 < bridge> <Lucas Miranda> ENVÍEME EL NOMBRE DE SU PAÍS ESTAMOS BENDICIENDO A ALGUIEN ANTES DE LA MEDIANOCHE $300 $500 - $800 Y $1200
18:08 < bridge> <Lucas Miranda> 👇👇👇👇
18:08 < bridge> <Lucas Miranda> https://t.me/+aDWFgb_tv_NmOTVk
18:56 < bridge> <Learath2> Why were you reinventing rust btw? Just for the lulz?
19:10 < bridge> <Ryozuki> im not reinventing it
19:10 < bridge> <Ryozuki> im learning more llvm ir
19:10 < bridge> <Ryozuki> making a language
19:10 < bridge> <Ryozuki> idk
19:10 < bridge> <Ryozuki> xD
19:10 < bridge> <Ryozuki> i wanted maybe to do a teeworlds oriented language, whathever that means
19:10 < bridge> <Ryozuki> but i have no idea how it would be "teeworlds oriented"
19:11 < bridge> <Ryozuki> anyways expect nothing useful out of this
20:09 < bridge> <Learath2> matricks was working on a non turing complete language for teeworlds so servers could push game code to clients
20:25 < bridge> <судный день.> the assembler
20:27 < bridge> <DefaultO> matricks inventing shellcode
20:27 < bridge> <DefaultO> omg
20:28 < bridge> <<~{Barsik}~>> edlang = rust 1.67?
20:28 < bridge> <Ryozuki> its a safe lang too cuz there are no allocations! kek
20:29 < bridge> <<~{Barsik}~>> lulz
20:29 < bridge> <<~{Barsik}~>> no code is the best code
20:29 < bridge> <<~{Barsik}~>> not that "no code" zoomer thingie but
20:29 < bridge> <<~{Barsik}~>> okey nvm
20:33 < bridge> <Voxel> wait, does this mean we can have modded servers be real?
20:34 < bridge> <Ryozuki> they are already real lol
20:34 < bridge> <Voxel> fair
20:34 < bridge> <Ryozuki> ddnet is a modded server
20:34 < bridge> <Voxel> no i mean- why the turing thing
20:34 < bridge> <Voxel> then
20:35 < bridge> <Ryozuki> non turing complete so no halting problem
20:35 < bridge> <Voxel> ah
20:35 < bridge> <Jupstar ✪> the server could then tell the client a moditication
20:35 < bridge> <Jupstar ✪> but this cant be good enough anyway
20:37 < bridge> <Jupstar ✪> wasm ez
