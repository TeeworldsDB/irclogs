08:25 < bridge> <chillerdragon> C++ trash we should rewrite in Java for better performance
09:41 < bridge> <Ryozuki> https://lwn.net/Articles/923732/
09:42 < bridge> <Ryozuki> @ReiTW there is a BPF change
12:15 < bridge> <Ewan> ‚òπÔ∏è
12:22 < bridge> <ReiTW> They should implement eBPF stuff in rust
12:24 < bridge> <ReiTW> But damn this is sick af, love it
12:29 < bridge> <Ryozuki> :gigachad:
13:11 < bridge> <Ewan> i made a bar
13:11 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1077200861417177138/image.png
13:16 < bridge> <bencie> cool bar!
13:16 < bridge> <Ewan> thanks
14:07 < bridge> <Chairn> ah nice, maybe you should reserve some space to avoid speed x,y to move around when stopping/starting
14:07 < bridge> <Chairn> i guess same for position (maybe 4 digits before comma)
15:00 <+ChillerDragon> hax
15:00 < bridge> <Ewan> just the y pos would move. the width calculations are sized for 6 digits w/ negative sign (-9999.99)
15:01 < bridge> <Ewan> it uses a string expression thing to order them & since they‚Äôre drawn and calculated from left to right i made their width not change ever
15:01 < bridge> <Ewan> is a thing
18:36 < bridge> <Matodor> the main thing is that without support 07 ü•∫
18:43 < bridge> <Matodor> can someone explain what it is used for?
18:43 < bridge> <Matodor> https://cdn.discordapp.com/attachments/293493549758939136/1077284472644456499/image.png
18:53 < bridge> <Matodor> @heinrich5991 üôÇ
18:56 < bridge> <deen> The version and variant from here I guess: https://en.wikipedia.org/wiki/Universally_unique_identifier#Format
18:57 < bridge> <furo> ```c
18:57 < bridge> <furo> Result.m_aData[6]  &= 0x0f;  /* clear version        */
18:57 < bridge> <furo> Result.m_aData[6]  |= 0x40;  /* set to version 4     */
18:57 < bridge> <furo> Result.m_aData[8]  &= 0x3f;  /* clear variant        */
18:57 < bridge> <furo> Result.m_aData[8]  |= 0x80;  /* set to IETF variant  */
18:57 < bridge> <furo> ```
19:00 < bridge> <Matodor> thx üôèüèª
19:10 < bridge> <Matodor> > versions 3 and 5 produce deterministic UUIDs generated by hashing a namespace identifier and name; and version-4 UUIDs are generated using a random or pseudo-random number.
19:10 < bridge> <Matodor> great, now I understand why the third version is in the bottom block
19:22 < bridge> <Robyt3> ^ @ChillerDragon time for some codedoc PR
19:25 <+ChillerDragon> hm?
19:27 <+ChillerDragon> sometimes im not sure if im stupid or just not getting things because i dont see images,replys and the github bot msgs
19:27 <+ChillerDragon> its usually me being stupid :D
19:28 <+ChillerDragon> idk stuff about uuids i am just network code pro now
19:33 < bridge> <Robyt3> It was about these lines: https://github.com/ddnet/ddnet/blob/d347bfcbe9007d7528247cc01dfba132f2554d9e/src/engine/shared/uuid_manager.cpp#L18-L21 and L41-L44
19:38 <+ChillerDragon> yea idk stuff about it :D why ping me? cuz im the docs guy now? :D
19:42 < bridge> <Robyt3> yes üòÑ
20:16 <+ChillerDragon> wat about the new map format pr? how is it progressin?
20:17 <+ChillerDragon> ryo cant wait to download 0.7 maps he told me in dms
20:17 < bridge> <Learath2> Lies, ryo can't wait to nuke 0.7 altogether üòõ
20:24 < bridge> <Ryozuki> ü•π
20:26 <+ChillerDragon> ryo usin mac kek
20:26 <+ChillerDragon> or even better using brew on linux axaxax
20:27 < bridge> <Ryozuki> nah
20:27 < bridge> <Ryozuki> but ye i need to use mac for work
20:34 < bridge> <Robyt3> slowly, I only did some thinking, but I'll try to work on it next
23:47 < bridge> <Patiga> ChillerDragon: there is matricks right now in the ddnet discord general chat
