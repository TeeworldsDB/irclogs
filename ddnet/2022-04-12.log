00:09 <+bridge> [ddnet] <c0d3d3v> mh I see
09:57 <+bridge> [ddnet] <timakro> @deen Done
13:15 <+bridge> [ddnet] <Assa> just tested your vulcan backend, it doubled my fps, good work devs üëç
15:00 <+bridge> [ddnet] <c0d3d3v> In the editor there is a note "hold shift to select multiple quads". This is a little strange because normally shift deletes the selected blocks. I suppose only in the special case of quads it selects multiple quads.
15:00 <+bridge> [ddnet] <c0d3d3v> 
15:00 <+bridge> [ddnet] <c0d3d3v> maybe we should make a help window, which is visible when you hold H, where the shortcuts are listed which are currently active. in the bottom bar just point to this: "hold H to see help for active shortcuts".
16:19 <+bridge> [ddnet] <Ryozuki> @deen have u seen this pr? https://github.com/ddnet/ddnet-scripts/pull/38
16:19 <+bridge> [ddnet] <Ryozuki> is it feasible to upgrade or is it too bothersome?
16:21 <+bridge> [ddnet] <Ryozuki> i wanted to make the web more feasible to develop, so my first plan was to upgrade to python 3, and then move out all the prints for html into [jinja](https://jinja.palletsprojects.com/en/3.1.x/) templates which i think are really simple but would make the code way easier to understand
16:21 <+bridge> [ddnet] <Ryozuki> what do you think?
16:22 <+bridge> [ddnet] <Ryozuki> oh and it also tries to use env vars (with defaults to what was already there) to make the web more reproducible locally
16:22 <+bridge> [ddnet] <Ryozuki> :monkaS:
16:26 <+bridge> [ddnet] <Ryozuki> i rly want to improve the web, but editing html in python prints with millions of %s is not fun :Sadge:
16:42 <+bridge> [ddnet] <Learath2> I wanted to check the feasibility of moving away from pregenerated pages
17:23 <+bridge> [ddnet] <Jupstar> yes
17:23 <+bridge> [ddnet] <Jupstar> dynamic content
17:23 <+bridge> [ddnet] <Jupstar> yes xd
18:17 <+bridge> [ddnet] <Learath2> Maybe we can generate the more rsc intensive stats but the site can still access it via an API
19:51 <+bridge> [ddnet] <Ryozuki> oh well that would be what i would do too
19:51 <+bridge> [ddnet] <Ryozuki> but deen likes pregenerated pages
20:48 <+bridge> [ddnet] <timakro> @Silex trashmap should be working again. It listens on the game server's stdout and looks for "player ready" messages. For some reason there are now some strange escape codes in front of every log message which threw the regex parsing off. 
20:48 <+bridge> [ddnet] <timakro> 
20:48 <+bridge> [ddnet] <timakro> ```
20:48 <+bridge> [ddnet] <timakro> \x1b[39m\x1b[39m[2022-04-12 20:24:42][server]: player is ready. ClientID=0 addr=<{130.83.5.183:18808}> secure=yes'
20:48 <+bridge> [ddnet] <timakro> ```
20:49 <+bridge> [ddnet] <timakro> I think those ansi escape codes are resetting color to default
20:49 <+bridge> [ddnet] <timakro> Didn't see any color output though
20:50 <+bridge> [ddnet] <timakro> @Silex trashmap should be working again. It listens on the game server's stdout and looks for "player ready" messages. For some reason there are now some strange escape codes in front of every log message which threw the regex parsing off. 
20:50 <+bridge> [ddnet] <timakro> 
20:50 <+bridge> [ddnet] <timakro> ```
20:50 <+bridge> [ddnet] <timakro> \x1b[39m\x1b[39m[2022-04-12 20:24:42][server]: player is ready. ClientID=0 addr=<{maybe i should censor my ip:18808}> secure=yes'
20:50 <+bridge> [ddnet] <timakro> ```
20:51 <+bridge> [ddnet] <timakro> Ah, and I forgot to mention. If there is no player on the server for 5 minutes it shuts off, so that's what you were seeing.
22:00 <+bridge> [ddnet] <c0d3d3v> I know now why the collision with other tees on oco laggs so hard if you have cl_predict on
22:02 <+bridge> [ddnet] <c0d3d3v> on the map is the server setting tune player_collision set to 0 but ddnet does not support this tune parameter normally, somehow the prediction code in the client still use it and misspredicts collision. But the server does not use this tune parameter
22:03 <+bridge> [ddnet] <fokkonaut> when i used it on my server for a passive item it worked nicely
22:39 <+bridge> [ddnet] <deen> yes, but would have to test and fix those extensively. unicode changes are huge with py3
22:39 <+bridge> [ddnet] <Ryozuki> i guess
22:39 <+bridge> [ddnet] <Ryozuki> maybe someday ill try to replicate the web infrastructure or smth xd
22:39 <+bridge> [ddnet] <Ryozuki> so i can test
23:20 <+bridge> [ddnet] <Ryozuki> facebook just open sourced this https://github.com/facebookexperimental/eden
23:20 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/963549210840543272/unknown.png
23:20 <+bridge> [ddnet] <Ryozuki> :BASED:
23:21 <+bridge> [ddnet] <Ryozuki> https://news.ycombinator.com/item?id=31006003
23:21 <+bridge> [ddnet] <Ryozuki> >      
23:21 <+bridge> [ddnet] <Ryozuki> > ctur 1 hour ago | next [‚Äì]
23:21 <+bridge> [ddnet] <Ryozuki> > 
23:21 <+bridge> [ddnet] <Ryozuki> > The SCM ecosystem at Facebook is tremendously powerful and the result of some of the best minds at Facebook working on those systems for many years. From the scaling of the monorepos to the code review workflows, nothing really matches it. The ergonomics of most of the tooling was simply top notch (which it needed to be... engineers, particularly at Meta, are an opinionated lot who don't tolerate poor tools).
23:21 <+bridge> [ddnet] <Ryozuki> > 
23:21 <+bridge> [ddnet] <Ryozuki> > It's great to see this out in the wild now.
