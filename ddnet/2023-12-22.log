00:54 < bridge> <Ewan> hi
00:54 < bridge> <Ewan> :owo:
01:40 < bridge> <fokkonaut> hi
01:40 < bridge> <fokkonaut> :owo:
01:40 < bridge> <Ewan> hi
01:40 < bridge> <Ewan> :owo:
01:41 < bridge> <Ewan> who was it that wanted kill tile to act as /r in practice mode
01:41 < bridge> <fokkonaut> https://tenor.com/view/shannon-sharpe-shay-nope-nah-nuhuh-gif-19620873
01:42 < bridge> <Ewan> well that's just the thing
01:42 < bridge> <Ewan> idk of a way that i can enable this per-player
01:42 < bridge> <fokkonaut> why
01:42 < bridge> <Ewan> because it's up to the server
01:42 < bridge> <fokkonaut> per team*
01:42 < bridge> <fokkonaut> huh
01:42 < bridge> <Ewan> i guess
01:42 < bridge> <Ewan> that would complicate things
01:43 < bridge> <fokkonaut> What exactly is the issue?
01:43 < bridge> <Ewan> idk how to inform the server of the team's desired behavior when they hit a kill tile in practice mode
01:43 < bridge> <Ewan> to either /r or kill like normal
01:43 < bridge> <fokkonaut> I'd probably make it a non changable option
01:44 < bridge> <fokkonaut> Lil
01:44 < bridge> <fokkonaut> lol*
01:44 < bridge> <Ewan> yea i already added a per-map opt out thing
01:44 < bridge> <Ewan> sv_
01:44 < bridge> <Ewan> zxzxzx
01:44 < bridge> <fokkonaut> when the tee is about to touch a kill tile (HandleNonSkippableTiles) then just check whether it's in practice, if yes -> call Rescue
01:45 < bridge> <Ewan> yea
01:45 < bridge> <Ewan> ouuuu it's handlenonskippabletiles
01:45 < bridge> <Ewan> i was doing handlecharactertiles
01:45 < bridge> <fokkonaut> Yea u gotta check the kill tile
01:45 < bridge> <fokkonaut> HandleTiley
01:45 < bridge> <fokkonaut> s
01:46 < bridge> <Ewan> funny how ddrace handles the tiles differently
01:46 < bridge> <Ewan> is it a priori/posteriori thing
01:46 < bridge> <Ewan> and why can we not make all tiles non-skippable for new maps
01:46 < bridge> <Ewan> opt-in
01:47 < bridge> <fokkonaut> These are checked differently
01:47 < bridge> <fokkonaut> + wider hitbox
01:47 < bridge> <Ewan> yea
01:49 < bridge> <fokkonaut> ah btw
01:49 < bridge> <fokkonaut> its called HandleSkippableTiles
01:49 < bridge> <Ewan> yea i noticed there was no nonskippabletiles lol
01:50 < bridge> <fokkonaut> u see there is already something for teams
01:50 < bridge> <fokkonaut> a check
01:50 < bridge> <fokkonaut> u can just extend that
01:52 < bridge> <fokkonaut> gn
01:52 < bridge> <Ewan> gn
01:59 < bridge> <Ewan> i forgot to pause music forgive me
01:59 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1187559929352048771/practicekilltile-24.mp4?ex=6597545e&is=6584df5e&hm=dfffef25ed78c8d353d87e12dc060af72330402c34199881b77a0f5d65bdba70&
02:14 < bridge> <Ewan> should i keep the msg
02:14 < bridge> <Ewan> i think if not someone's gonna hit a kill tile and go WTF why am i not dead
02:14 < bridge> <Ewan> but i dont want system msg spam
02:52 < bridge> <Ewan> oh u know what i had not considered is dummy maps where the dummy is deliberately killed at the end
02:52 < bridge> <Ewan> maybe i should only do it if the team is locked
05:18 < bridge> <Ewan> @murpi not seeing any of this behavior
05:18 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1187609984977080340/image.png?ex=659782fd&is=65850dfd&hm=4b5ebfcf0ce193eebf790a36686308ae8b053c2680e52e0dd209d6f2c1b29b60&
05:18 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1187610012739194950/image.png?ex=65978303&is=65850e03&hm=4dc327cafeae494b0d0e07d41e5442ef7bb0f2adab8a884e4e3a0920d65593c0&
05:18 < bridge> <Ewan> nvm
05:18 < bridge> <Ewan> you can't leave LMFAO
05:18 < bridge> <Ewan> yea idk what is even happening rn
05:19 < bridge> <Ewan> not seeing the first thing anyway
05:19 < bridge> <Ewan> when i teleport into/onto a kill tile it tps me back to where i should be
05:21 < bridge> <Ewan> you can edge a kill tile normally but whenever you pass the threshold that would normally kill you then you become softlocked. i don't know why it isn't just rescuing sooner
05:21 < bridge> <Ewan> because you should be dead in the position that you're softlocked in
05:21 < bridge> <Ewan> i'm pretty sure .75 is way further than you could ever enter
05:21 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1187610876048592936/image.png?ex=659783d1&is=65850ed1&hm=a92478258248b61cc1747bc050c3e530a3c8d63b95c62e4f8d9261c5508802f5&
05:22 < bridge> <Ewan> nvm
06:28 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1187627773779521556/image.png?ex=6597938e&is=65851e8e&hm=ac55410ebebf7729d7f7d3d830142e733f4a2b4eb22276faaabb025134db8226&
06:29 < bridge> <Ewan> you should probably just remove this field from the template because it's already in the CI and it can never be merged unless it passes... lol
06:47 < bridge> <TsFreddie> man, i see edging and my first thought isnt ddnet related
06:48 < bridge> <Ewan> it's very funny
06:48 < bridge> <Ewan> i dont want to reintroduce the bug to give u a video but
06:49 < bridge> <Ewan> unlike freeze, there's no actual kill tile bounds check when it sets the rescue location, because you just died before
06:49 < bridge> <Ewan> so it would set your rescue inside the kill tile, and on the next frame it'd check if you're in a kill tile, and if you are, then it rescues you...
06:49 < bridge> <Ewan> forever
06:53 < bridge> <cyberfighter> sisyphus' rescue
06:53 < bridge> <Ewan> true
08:37 < bridge> <ryozuki> aproving prs before holidays
08:37 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1187660218339950692/image.png?ex=6597b1c5&is=65853cc5&hm=33c895af66278fcd64b69519db3925dec28cecd253c0e8c5c124add18509d3ca&
08:56 < bridge> <Jupstar ‚ú™> @ryozuki stop reading this message and get to work
08:56 < bridge> <Jupstar ‚ú™> Also ffr
08:56 < bridge> <ryozuki> bro
08:56 < bridge> <ryozuki> i start work at 12
08:56 < bridge> <Jupstar ‚ú™> A.m.
08:56 < bridge> <ryozuki> ok its flexible
08:56 < bridge> <ryozuki> i can start at 11 too
08:56 < bridge> <ryozuki> give or take
08:57 < bridge> <Jupstar ‚ú™> Gg
08:59 < bridge> <ryozuki> the crate of today is https://github.com/zesterer/chumsky
08:59 < bridge> <ryozuki> which im gonna try instead of lalrpop for my pascal compiler cuz im stuck solving a reduce-reduce conflcit
09:00 < bridge> <ryozuki> also it supports errors out of the box
09:00 < bridge> <ryozuki> looks rly dope
09:02 < bridge> <Ewan> true
09:02 < bridge> <Ewan> #7691 needs attention
09:02 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/7691
09:02 < bridge> <Ewan> opinions
09:02 < bridge> <Ewan> i have the gut feeling that 99% of ppl will want this feature but then one person will either not understand it or not want it
09:05 < bridge> <Jupstar ‚ú™> sounds actually useful, without checking its limitations
09:06 < bridge> <Jupstar ‚ú™> cool feature
09:08 < bridge> <ryozuki> @mpft that kill tile check looks expensive
09:08 < bridge> <ryozuki> u sure we dont check for that in any other place in the code later?
09:08 < bridge> <ryozuki> (its also on ddracetick so)
09:09 < bridge> <ryozuki> maybe u can make the check only if practice is enabled?
09:09 < bridge> <ryozuki> looks like a obvious opt
09:09 < bridge> <ryozuki> `Teams()->IsPractice(GameServer()->GetDDRaceTeam(ClientID)) | <massive  check>`
09:09 < bridge> <ryozuki> || *
09:09 < bridge> <ryozuki> wait it should be and
09:09 < bridge> <ryozuki> &&
09:10 < bridge> <ryozuki> since it short circuits it would skip the check if no practice
09:11 < bridge> <ryozuki> i wrote it in a review
09:11 < bridge> <ryozuki> kek
09:17 < bridge> <Jupstar ‚ú™> what the fuck. i legit forgot my root pw of my VPS.
09:17 < bridge> <Jupstar ‚ú™> 
09:17 < bridge> <Jupstar ‚ú™> i'm 100% sure i type the correct characters, but apparently in the wrong order xDD
09:17 < bridge> <Jupstar ‚ú™> 
09:17 < bridge> <Jupstar ‚ú™> human brian too weak
09:18 < bridge> <cyberfighter> brian griffin
09:21 < bridge> <Ewan> it's literally how it was written in HandleSkippableTiles
09:21 < bridge> <Ewan> i copy pasted
09:22 < bridge> <Ewan> but if you say so
09:24 < bridge> <ryozuki> @mpft dont u see it obviously better?
09:24 < bridge> <Ewan> yea
09:24 < bridge> <ryozuki> why does it matter how it is in other places
09:24 < bridge> <Ewan> i am not opposed to such things
09:24 < bridge> <ryozuki> u can also change it there
09:24 < bridge> <Ewan> i just can't wait for the nagging from other ddnet programmers
09:24 < bridge> <Ewan> why is it 35  lines change for such a simple feature???
09:24 < bridge> <ryozuki> i doubt anyone will complain about this possibly perf win
09:25 < bridge> <ryozuki> @mpft rather than being nagged at that, u will probs get nagged due to the option u adding XD
09:25 < bridge> <Ewan> i cannot please anyone tbh
09:25 < bridge> <Ewan> i couldn't care less about the opt
09:25 < bridge> <Ewan> but someone would surely complain if it was not there
09:33 < bridge> <louis> idt it should be a server config
09:33 < bridge> <louis> dont know a single person who would be opposed to it
09:34 < bridge> <louis> but nice addition ive been waiting for something like this for a while
09:41 < bridge> <Ewan> you would be surprised
09:42 < bridge> <cyberfighter> chiller?
09:46 < bridge> <Ewan> sometimes the ddnet codebase really baffles me
09:48 < bridge> <Ewan> it;'s so stupid
09:48 < bridge> <Ewan> it does 4x as much math as it has to first of all
09:48 < bridge> <Ewan> and the whole GetCollisionAt/GetFCollisionAt redundancy is probably completely unnecessary
09:53 < bridge> <Ewan> it's so stupid but if i remove it then i break 100 maps LOL
09:54 < bridge> <Ewan> https://www.kdab.com/mixing-c-and-rust-for-fun-and-profit-part-1/
09:56 < bridge> <Ewan> i love to see ppl advocating for dlang
10:01 < bridge> <cyberfighter> what maps does it break i dont get it
10:06 < bridge> <Ewan> idk
10:28 < bridge> <Ewan> i got rid of it
10:28 < bridge> <Ewan> ü§∑‚Äç‚ôÇÔ∏è
10:28 < bridge> <Ewan> really have no idea where ddnet devs are
10:28 < bridge> <Ewan> in the galaxy
10:39 < bridge> <Jupstar ‚ú™> what r u talkn about? xd
10:39 < bridge> <Jupstar ‚ú™> it's 10 a.m. here
10:43 < bridge> <ryozuki> @jupeyy_keks i have a c++ pr
10:43 < bridge> <ryozuki> using a modern feature
10:43 < bridge> <ryozuki> üò¨
10:45 < bridge> <ryozuki> as they say, less code is best code
10:49 < bridge> <Jupstar ‚ú™> lol you know about cpp's pmr?
10:49 < bridge> <Jupstar ‚ú™> 
10:49 < bridge> <Jupstar ‚ú™> did you have to use it for llvm or what?
10:49 < bridge> <ryozuki> no
10:49 < bridge> <ryozuki> i googled it
10:49 < bridge> <ryozuki> i literally googled: c++ std bump allocator
10:49 < bridge> <ryozuki> and as always c++ loves weird names
10:50 < bridge> <Jupstar ‚ú™> well if your pr works gg, nice refactor
10:50 < bridge> <ryozuki> it works
10:51 < bridge> <ryozuki> robyt is gonna say its bad
10:51 < bridge> <ryozuki> i see him typing
10:51 < bridge> <ryozuki> üò¨
10:52 < bridge> <robyt3> Not every change is covered by the CI though
10:52 < bridge> <ryozuki> i should try with asan
10:53 < bridge> <robyt3> What's the initial size of `std::pmr::monotonic_buffer_resource`? Should we use the same as before?
10:53 < bridge> <Ewan> pull request changes are
10:53 < bridge> <Ewan> where the template exists
10:54 < bridge> <robyt3> `memory_resource` include is experimental on macOS :pepeW:
10:55 < bridge> <ryozuki> Constructs a monotonic_buffer_resource. The constructors not taking an upstream memory resource pointer use the return value of std::pmr::get_default_resource as the upstream memory resource.
10:55 < bridge> <ryozuki> i would say leave default
10:55 < bridge> <ryozuki> fuck macos üò¨
10:56 < bridge> <ryozuki> constructor without initial size says this
10:56 < bridge> <ryozuki> 1,2) Sets the current buffer to null and the next buffer size to an implementation-defined size.
10:56 < bridge> <ryozuki> this is why i hate cpp
10:57 < bridge> <ryozuki> cant use modern shit even if u want
10:57 < bridge> <ryozuki> mimimi safetry in modern mimimi
10:57 < bridge> <ryozuki> mimimi safety in modern mimimi
10:57 < bridge> <ryozuki> (sorry i got angry XD)
10:58 < bridge> <ryozuki> https://en.cppreference.com/w/cpp/memory/monotonic_buffer_resource
10:58 < bridge> <ryozuki> in all macos versions?
10:59 < bridge> <Jupstar ‚ú™> rust nightly üò¨
10:59 < bridge> <robyt3> Maybe you can conditionally include `<experimental/memory_resource>` instead
11:00 < bridge> <ryozuki> base rust is modern already üò¨
11:00 < bridge> <ryozuki> do u know the snippet
11:00 < bridge> <ryozuki> idk the ifdef guards for macos
11:01 < bridge> <robyt3> Not sure if `__has_include` would be better or `#ifdef CONF_PLATFORM_MACOSX` https://gcc.gnu.org/onlinedocs/cpp/_005f_005fhas_005finclude.html
11:01 < bridge> <Jupstar ‚ú™> @robyt3 is it also experimental in cpp20 on macos?
11:01 < bridge> <ryozuki> https://codereview.qt-project.org/c/qt/qtbase/+/483351/1
11:02 < bridge> <ryozuki> <memory_resource>     P0220R1     
11:02 < bridge> <ryozuki> 
11:02 < bridge> <ryozuki> Requires Xcode 15
11:02 < bridge> <ryozuki> 
11:02 < bridge> <ryozuki> Minimum deployment target: iOS 17.0, macOS 14.0, watchOS 10.0 and tvOS 17.0.
11:02 < bridge> <ryozuki> https://developer.apple.com/xcode/cpp/
11:02 < bridge> <robyt3> I don't really know what's going on with macOS https://developer.apple.com/forums/thread/729688
11:02 < bridge> <ryozuki> whats our minimum macos
11:03 < bridge> <robyt3> macOS 10.15
11:03 < bridge> <ryozuki> xd
11:03 < bridge> <Jupstar ‚ú™> i dont even understand why it's experimental at all xD
11:03 < bridge> <Jupstar ‚ú™> 
11:03 < bridge> <Jupstar ‚ú™> i mean does it require some special kernel feature or what
11:03 < bridge> <ryozuki> is there ppl using that
11:05 < bridge> <ryozuki> @robyt3 how would the experimental include be like
11:05 < bridge> <ryozuki> <experimental/memory_resource>
11:05 < bridge> <robyt3> If normal include exists, include it, else include the experimental one.
11:05 < bridge> <ryozuki> ```cpp
11:05 < bridge> <ryozuki> #if __has_include(<memory_resource>)
11:05 < bridge> <ryozuki> #include <memory_resource>
11:05 < bridge> <ryozuki> #else
11:05 < bridge> <ryozuki> #include << experimental / memory_resource>>
11:05 < bridge> <ryozuki> #endif
11:05 < bridge> <ryozuki> ```
11:05 < bridge> <ryozuki> ok i fix the typo
11:05 < bridge> <ryozuki> ```cpp
11:05 < bridge> <ryozuki> #if __has_include(<memory_resource>)
11:05 < bridge> <ryozuki> #include <memory_resource>
11:05 < bridge> <ryozuki> #else
11:05 < bridge> <ryozuki> #include <experimental/memory_resource>
11:05 < bridge> <ryozuki> #endif
11:06 < bridge> <ryozuki> ```
11:06 < bridge> <robyt3> Looks good, `__has_include` should always be available with C++17 AFAICT
11:07 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1187697862511964200/image.png?ex=6597d4d4&is=65855fd4&hm=ad87cb039beb0a56987f440728b4c20548a3ee6f04edbddf864a3dcd6fa3c70c&
11:07 < bridge> <ryozuki> done
11:09 < bridge> <robyt3> Let's see if it builds for now. If macOS is the only platform where it needs this different include then using `CONF_PLATFORM_MACOSX` seems a bit cleaner though.
11:10 < bridge> <ryozuki> well this sounds more portable
11:10 < bridge> <fokkonaut> hi
11:11 < bridge> <Jupstar ‚ú™> hai
11:11 < bridge> <Ewan> give me review
11:11 < bridge> <Ewan> good morning
11:12 < bridge> <ryozuki> @mpft give me review
11:12 < bridge> <ryozuki> i used modern cpp
11:12 < bridge> <Ewan> send link
11:12 < bridge> <robyt3> Yeah, if there are cases of macOS also having the normal include
11:12 < bridge> <ryozuki> .
11:12 < bridge> <robyt3> Otherwise hardcoding the behavior for macOS seems cleaner than using `__has_include`
11:12 < bridge> <Jupstar ‚ú™> @ryozuki 
11:12 < bridge> <Jupstar ‚ú™> just implement a bump allocator for cpp std using rust bridge
11:12 < bridge> <Jupstar ‚ú™> then it's not experimental
11:13 < bridge> <ryozuki> xdd
11:13 < bridge> <robyt3> `error: no member named 'pmr' in namespace 'std'; did you mean 'std::experimental::pmr'?` :kek:
11:14 < bridge> <ryozuki> but allocating in rust is not compatibler with c++
11:14 < bridge> <ryozuki> xdd
11:15 < bridge> <ryozuki> fixed
11:16 < bridge> <Ewan> looks fine
11:16 < bridge> <Ewan> almost seems like a typedef should be used instead lol
11:16 < bridge> <ryozuki> ```cpp
11:16 < bridge> <ryozuki> class CHeap
11:16 < bridge> <ryozuki> {
11:16 < bridge> <ryozuki> #if __has_include(<memory_resource>)
11:17 < bridge> <ryozuki>     std::pmr::monotonic_buffer_resource
11:17 < bridge> <ryozuki> #else
11:17 < bridge> <ryozuki>     std::experimental::pmr::monotonic_buffer_resource
11:17 < bridge> <ryozuki> #endif
11:17 < bridge> <ryozuki>         m_BumpAllocator;
11:17 < bridge> <ryozuki> ```
11:17 < bridge> <ryozuki> i did this
11:17 < bridge> <ryozuki> so @mpft did u know about pmr and this monotonic buffer?
11:18 < bridge> <Ewan> i seen it before
11:18 < bridge> <Ewan> never used it
11:19 < bridge> <ryozuki> @mpft wait ewan
11:19 < bridge> <ryozuki> u didnt get what i mean
11:19 < bridge> <Ewan> what
11:19 < bridge> <Jupstar ‚ú™> why not simply using namespace ...; near the include
11:19 < bridge> <ryozuki> bool InKillTile =
11:20 < bridge> <Jupstar ‚ú™> better than somewhere in the source üòÑ
11:20 < bridge> <Ewan> i know what you meant but it's not right
11:20 < bridge> <ryozuki> only calculate this variable inside the if
11:20 < bridge> <Ewan> i did
11:20 < bridge> <Ewan> look
11:20 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1187701189836537907/image.png?ex=6597d7ee&is=658562ee&hm=bcd70a8e18b4144ef01d61d4c7fd26504f1d9744a380181955ac916dd6ccd979&
11:20 < bridge> <ryozuki> its outside?
11:20 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1187701287815487569/image.png?ex=6597d805&is=65856305&hm=a650f20391b3e06cf0f59ac36c38a13867093b278f86dc885fd690f170e6bc98&
11:21 < bridge> <ryozuki> yeah
11:21 < bridge> <ryozuki> put it inside the if
11:21 < bridge> <ryozuki> but not the inner if
11:21 < bridge> <ryozuki> before the if where u use it
11:21 < bridge> <ryozuki> why calculate that if team doesnt have rescue on?
11:21 < bridge> <Ewan> team always have rescue on
11:22 < bridge> <ryozuki> ok but
11:22 < bridge> <ryozuki> u can still put it inside that if
11:23 < bridge> <Ewan> does not make a difference
11:23 < bridge> <ryozuki> then that if would not be there
11:23 < bridge> <ryozuki> it certainly there is a branch it would do
11:23 < bridge> <Ewan> yea
11:23 < bridge> <Ewan> i added the if
11:23 < bridge> <Ewan> because
11:24 < bridge> <ryozuki> because? xd
11:24 < bridge> <ryozuki> did u die
11:25 < bridge> <ryozuki> >  /Users/runner/work/ddnet/ddnet/src/engine/shared/memheap.h:23:26: error: no type named 'monotonic_buffer_resource' in namespace 'std::experimental::pmr'
11:25 < bridge> <ryozuki> >         std::experimental::pmr::monotonic_buffer_resource
11:25 < bridge> <ryozuki> >         ~~~~~~~~~~~~~~~~~~~~~~~~^
11:25 < bridge> <ryozuki> @robyt3 whats  going on
11:26 < bridge> <Ewan> what host
11:26 < bridge> <ryozuki> macos <14
11:27 < bridge> <ryozuki> way to lose my motivation for ddnet cpp again
11:27 < bridge> <Ewan> who cares
11:27 < bridge> <Ewan> kill macos <14
11:27 < bridge> <ryozuki> yeah agree
11:27 < bridge> <ryozuki> but idk probs not
11:27 < bridge> <ryozuki> xd
11:29 < bridge> <Ewan> there is nothing experimental about a pre-2017 feature
11:36 < bridge> <TsFreddie> @ryozuki hi
11:36 < bridge> <cyberfighter> hi
11:37 < bridge> <ryozuki> hi
11:37 < bridge> <cyberfighter> im ryozuki. i love oxidized iron.
11:56 < bridge> <Jupstar ‚ú™> hi ryozuki üê¥
12:40 < bridge> <robyt3> Looks like clang libc++ does not implement `monotonic_buffer_resource` :feelsbadman:
12:40 < bridge> <robyt3> https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=266748
12:42 < bridge> <robyt3> Looks like we would need at least AppleClang 15.0.0, see "Polymorphic memory resources" in https://en.cppreference.com/w/cpp/compiler_support/17
12:43 < bridge> <Jupstar ‚ú™> And why don't we use it?
12:43 < bridge> <Jupstar ‚ú™> Not like anybody here compiles on outdated macos
12:46 < bridge> <ryozuki> @deen what do u think
12:46 < bridge> <ryozuki> my understanding is that macos forces updates on users so
12:46 < bridge> <ryozuki> xd
13:00 < bridge> <Jupstar ‚ú™> But isn't it about the compiler only anyway?
13:00 < bridge> <Jupstar ‚ú™> Or does it also always mean upgrading the os bcs some symbols can't resolve
13:09 < bridge> <Ewan> good luck getting modern apple clang on an outdated macos xd
13:09 < bridge> <Ewan> your best bet is using homebrew or macports gcc or clang
13:09 < bridge> <Ewan> non-apple varieties
13:11 < bridge> <ryozuki> i use brew on my m1
13:11 < bridge> <ryozuki> and use llvm 17
13:14 < bridge> <Jupstar ‚ú™> That's not my point tho
13:14 < bridge> <Jupstar ‚ú™> Q is if compatible
13:14 < bridge> <Ewan> what
13:14 < bridge> <Ewan> oh
13:14 < bridge> <Ewan> can a new binary run on old mac
13:14 < bridge> <Ewan> yea
13:14 < bridge> <Jupstar ‚ú™> Yeah then i don't see why we shouldn't upgrade
13:15 < bridge> <Jupstar ‚ú™> But deen will know better in this case. He had so much trouble with building for macos xd
13:55 < bridge> <Ewan> It‚Äôs over
13:57 < bridge> <Jupstar ‚ú™> Then rest in peace
13:57 < bridge> <ryozuki> my last day before holidays
13:57 < bridge> <Ewan> my last day before tomorrow
13:57 < bridge> <Ewan> :feelsbadman:
13:58 < bridge> <Ewan> my last day before 3 days late on my sound submission
13:58 < bridge> <Ewan> but Mr tambourine man
13:58 < bridge> <Ewan> i quite like Bob Dylan
13:59 < bridge> <ryozuki> i feel like i ate too much
13:59 < bridge> <ryozuki> i made potatos
13:59 < bridge> <ryozuki> they sure fill u
13:59 < bridge> <Ewan> i ate too much
13:59 < bridge> <Ewan> rocks
13:59 < bridge> <ryozuki> xd
13:59 < bridge> <Ewan> but they would probably taste good rn
13:59 < bridge> <ryozuki> why u down
13:59 < bridge> <ryozuki> get up
13:59 < bridge> <ryozuki> @mpft talking about rocks
13:59 < bridge> <ryozuki> https://www.youtube.com/watch?v=D_Vg4uyYwEk
14:00 < bridge> <Ewan> Idk
14:00 < bridge> <Ewan> Sylvester Stallone
14:02 < bridge> <ryozuki> btw
14:02 < bridge> <ryozuki> insane this man hasnt won a oscar
14:02 < bridge> <ryozuki> the oscar awards suck ass
14:02 < bridge> <Ewan> yeah
14:03 < bridge> <Ewan> most big awards don‚Äôt matter
14:03 < bridge> <ryozuki> rocky movies are classics
14:12 < bridge> <Ewan> Yeah
14:12 < bridge> <Ewan> i don‚Äôt see many movies
14:14 < bridge> <Ewan> i just listen to music
14:15 < bridge> <Ewan> nature is a language can‚Äôt you read
14:38 < bridge> <Ewan> it‚Äôs over
14:39 < bridge> <Jupstar ‚ú™> ok
14:39 < bridge> <ryozuki> guy is having the american depression
14:39 < bridge> <ryozuki> reminded me of this
14:39 < bridge> <ryozuki> http://www.temporarilyembarrassedmillionaires.org/
14:40 < bridge> <ryozuki> > 
14:40 < bridge> <ryozuki> > 
14:40 < bridge> <ryozuki> >     "Socialism never took root in America because the poor see themselves not as an exploited proletariat but as temporarily embarrassed millionaires."
14:40 < bridge> <ryozuki> > 
14:40 < bridge> <ryozuki> >     John Steinbeck
14:40 < bridge> <ryozuki> @learath2 xd
14:40 < bridge> <ryozuki> > 
14:40 < bridge> <ryozuki> > 
14:40 < bridge> <ryozuki> > Are you temporarily embarrassed?
14:40 < bridge> <ryozuki> > 
14:40 < bridge> <ryozuki> > You may not realise it, but you could be a temporarily embarrassed millionaire. Do you plan to someday in the future have more money? Are you concerned that your taxes are too high, because someday you might pay too much tax. Do you ride the bus only because this year you can‚Äôt afford that luxury car you‚Äôre going to have? Do you live pay cheque to pay cheque like most people just because you haven‚Äôt had your lucky break.
14:40 < bridge> <ryozuki> > 
14:40 < bridge> <ryozuki> > You aren‚Äôt rich and it‚Äôs very unlikely you ever will be. The economic and power systems of this planet are not designed for you to get rich. The American dream doesn‚Äôt exist and it never did. Stop being a temporarily embarrassed millionaire and just be a person.
14:40 < bridge> <Ewan> wow thanks
14:40 < bridge> <Ewan> :feelsbadman:
14:40 < bridge> <ryozuki> :owo:
14:41 < bridge> <Ewan> it‚Äôs so over
14:42 < bridge> <Jupstar ‚ú™> 911
14:42 < bridge> <Ewan> how do i run ddnet on my breadboard calculator
14:43 < bridge> <Ewan> wdym
14:43 < bridge> <Ewan> :justatest:
14:43 < bridge> <Jupstar ‚ú™> buy one with vulkan suport
14:43 < bridge> <Jupstar ‚ú™> buy one with vulkan support
14:43 < bridge> <Ewan> how do i buy vulkan support
14:43 < bridge> <ryozuki> even RPI has vulkan
14:43 < bridge> <Ewan> my transistors don‚Äôt speak the same language
14:44 < bridge> <Ewan> I‚Äôm eating pizza
14:44 < bridge> <Ewan> I will never have money
14:44 < bridge> <ryozuki> go to gym
14:45 < bridge> <ryozuki> @mpft do u see a lot of morbidly obese ppl in america?
14:45 < bridge> <ryozuki> like is it real
14:45 < bridge> <Ewan> yes it‚Äôs real
14:45 < bridge> <ryozuki> :WhenPooPooWontLeaveAss:
14:45 < bridge> <Ewan> and i live in a skinnier region
14:45 < bridge> <Ewan> i fucking hate fat people
14:46 < bridge> <ryozuki> well the environment does a lot
14:46 < bridge> <ryozuki> parents dont know how to feed healthy food or educate their kids
14:46 < bridge> <Ewan> precisely
14:46 < bridge> <ryozuki> also usually the healthier option is more costly
14:46 < bridge> <ryozuki> mcdonalds is too cheap
14:46 < bridge> <Ewan> mcdonalds cheaper than making burgers yourself
14:46 < bridge> <Ewan> even if you also use horse meat
14:47 < bridge> <ryozuki> xd
14:47 < bridge> <ryozuki> honestly healthy food can be tasty
14:47 < bridge> <Ewan> mongodb cattle farmer
14:47 < bridge> <ryozuki> its all about cooking, spices, seasoning
14:47 < bridge> <Ewan> healthy food rocks my socks
14:47 < bridge> <ryozuki> what does that mean
14:47 < bridge> <Ewan> i like healthy food as long as it isn‚Äôt quinoa
14:48 < bridge> <ryozuki> oh same
14:48 < bridge> <ryozuki> i dont eat  vegan shit either
14:48 < bridge> <ryozuki> xd
14:48 < bridge> <ryozuki> i tried tofu but
14:48 < bridge> <ryozuki> its tasteless even with other stuff
14:48 < bridge> <ryozuki> i dont like it i think
14:48 < bridge> <ryozuki> im open to someone cooking something and changing my opinioon tho
14:49 < bridge> <ryozuki> @mpft but honestly, other than the main foods
14:49 < bridge> <ryozuki> ppl snack too much
14:49 < bridge> <ryozuki> and the snacks have insane cals
14:49 < bridge> <Ewan> yea
14:49 < bridge> <ryozuki> chips have like 500kcal per 100g iirc
14:49 < bridge> <ryozuki> 1 bottle of white beans has 80kcal for 100g
14:49 < bridge> <ryozuki> and more nutritious
14:49 < bridge> <Ewan> yea
14:49 < bridge> <ryozuki> btw i love white beans
14:50 < bridge> <Ewan> i don‚Äôt have any
14:50 < bridge> <ryozuki> is it rare there?
14:51 < bridge> <Ewan> yea u don‚Äôt see ppl eating beans
14:51 < bridge> <Ewan> by themselves
14:51 < bridge> <ryozuki> :justatest:
14:52 < bridge> <ryozuki> smth i love too is spinachs with Scrambled eggs and maybe chickpeas
14:52 < bridge> <ryozuki> :justatest:
14:52 < bridge> <ryozuki> i find the chickpeas name funny
14:52 < bridge> <ryozuki> in spanish its garbanzos
14:52 < bridge> <Ewan> yea
14:52 < bridge> <Ewan> ppl call them garbanzo beans here too
14:53 < bridge> <ryozuki> lmao
14:53 < bridge> <Ewan> scrambled eggs common too
14:54 < bridge> <ryozuki> @mpft is spinachs good for muscles
14:54 < bridge> <Ewan> no
14:54 < bridge> <Ewan> myth
14:54 < bridge> <Ewan> it‚Äôs good for you brain mostly
14:55 < bridge> <ryozuki> rly
14:55 < bridge> <Ewan> probably
14:55 < bridge> <Ewan> it‚Äôs made of brain goo
14:55 < bridge> <ryozuki> they have  this https://en.wikipedia.org/wiki/Lutein
14:55 < bridge> <Ewan> they don‚Äôt call it a head of spinach for nothing
14:55 < bridge> <ryozuki> > In 2013, findings of the Age-Related Eye Disease Study (AREDS2) showed that a dietary supplement formulation containing lutein reduced progression of age-related macular degeneration (AMD) by 25 percent.[10][11] However, lutein and zeaxanthin had no overall effect on preventing AMD, but rather "the participants with low dietary intake of lutein and zeaxanthin at the start of the study, but who took an AREDS formulation with lutein and zeaxanthin 
14:56 < bridge> <Ewan> i want to develop advanced amd
14:56 < bridge> <ryozuki> xd
14:56 < bridge> <Ewan> i will be the processor
14:58 < bridge> <Ewan> your hydrocarbons are obsolete
15:17 < bridge> <Ewan> it‚Äôs over
15:17 < bridge> <Jupstar ‚ú™> you're over
15:20 < bridge> <ryozuki> the year of linux desktop
15:20 < bridge> <Ewan> it‚Äôs all so very over
15:20 < bridge> <Ewan> concluded
15:20 < bridge> <Ewan> see you next time
15:21 < bridge> <ryozuki> ur win app is over
15:23 < bridge> <Ewan> my pull request is over
15:24 < bridge> <Jupstar ‚ú™> just bcs nobody reviews it after 1 minute? XD
15:24 < bridge> <Ewan> ya
15:25 < bridge> <Ewan> my life
15:25 < bridge> <Jupstar ‚ú™> i waited fucking 2 years for my libpng
15:25 < bridge> <Ewan> sad
15:25 < bridge> <Jupstar ‚ú™> just to hear from heinrich that so much time passed, that we have to be backward compatible
15:25 < bridge> <Jupstar ‚ú™> to the skin db that came afterwards
15:25 < bridge> <Jupstar ‚ú™> xD
15:25 < bridge> <Ewan> i don‚Äôt wanna hear a whole lot from heinrich
15:25 < bridge> <Ewan> usually
15:25 < bridge> <Jupstar ‚ú™> xD
15:55 < bridge> <learath2> So true
17:20 < bridge> <ryozuki> @learath2 did u see my modern cpp pr
17:20 < bridge> <ryozuki> https://github.com/ddnet/ddnet/pull/7692
17:20 < bridge> <ryozuki> sadly we are blocked by macOS old shenigans
17:20 < bridge> <ryozuki> <14.0
20:14 < bridge> <Bota> Can someone tell me whats wrong?
20:14 < bridge> <Bota> https://cdn.discordapp.com/attachments/293493549758939136/1187835473410916352/image.png?ex=659854fd&is=6585dffd&hm=44b690a622fc6f930cc52e10281f9521ab248f170a788e2593a6145331cc1dd1&
20:48 < bridge> <chairn> looks like your forgot to link a library (proto sth)
21:16 < ChillerDragon> ewww windows
21:16 < ChillerDragon> wat u doin @Bota
