01:02 <+bridge> [ddnet] <SPYRES> What's 1 + 1 = ? 🤔
01:19 <+bridge> [ddnet] <Chairn> ask GPT
01:21 <+bridge> [ddnet] <heinrich5991> 1 + 1 usually 2
08:10 <+bridge> [ddnet] <Graves> @uwu а че ты перестал решать aoc
08:12 <+bridge> [ddnet] <heinrich5991> @doubtx russian → #off-topic
08:48 <+bridge> [ddnet] <uwu> fancy arrow :greenthing:
10:02 <+bridge> [ddnet] <ReiTW> False :feelsbadman:
10:04 <+bridge> [ddnet] <chillerdragon> lmao 12yo lerato
10:04 <+bridge> [ddnet] <chillerdragon> (@Not Keks)
10:15 <+bridge> [ddnet] <Learath2> How did I become 12?
10:16 <+bridge> [ddnet] <ReiTW> be happy u have a longer life now
10:22 <+bridge> [ddnet] <Jupstar ✪> 11 quite obvious
10:23 <+bridge> [ddnet] <Jupstar ✪> U Young af and beast nice. U started with 3 years debugging compilers while others still **it in their pants stop lie
10:24 <+bridge> [ddnet] <Learath2> It’s obv 10. What are you on about?
10:24 <+bridge> [ddnet] <Jupstar ✪> Beast mode
10:25 <+bridge> [ddnet] <Jupstar ✪> That's not false ^^
10:25 <+bridge> [ddnet] <Jupstar ✪> Depending on the numeric system
10:32 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1049981715109662720/FjXCbYbWQAIX6EN.jpg
10:34 <+bridge> [ddnet] <Learath2> I'm actually surprised chatgpt didn't turn into a raging racist yet
10:35 <+bridge> [ddnet] <Ryozuki> its moderated probs
10:35 <+bridge> [ddnet] <Ryozuki> u could have a second ai look at the output and determine if its racist by today standards
10:35 <+bridge> [ddnet] <Ryozuki> (since standards change kek)
10:36 <+bridge> [ddnet] <Patiga> halp my haskell is eating my ram
10:36 <+bridge> [ddnet] <Ryozuki> from my little learning with functional langs
10:36 <+bridge> [ddnet] <Ryozuki> turn recursion into tail recursion
10:36 <+bridge> [ddnet] <Ryozuki> idk xd
10:38 <+bridge> [ddnet] <Learath2> Stable-diffusion did this for it's 1.x releases. But 2.0 is out and the model is trained on a heavily filtered dataset instead thia time because the post filtering was too easy to remove 😭
10:39 <+bridge> [ddnet] <Learath2> Now it can't generate anything nsfw as it doesn't know what a body looks like even
10:39 <+bridge> [ddnet] <Ryozuki> meh
11:13 <+bridge> [ddnet] <ReiTW> https://twitter.com/Shadertoy/status/1600135159835074560
11:13 <+bridge> [ddnet] <ReiTW> 
11:13 <+bridge> [ddnet] <ReiTW> bruh those tryharders
11:28 <+bridge> [ddnet] <deen> I'm happy with my Advent of Code solution today. Just create the file system and measure the size, why code anything? 😄
11:28 <+bridge> [ddnet] <deen> https://cdn.discordapp.com/attachments/293493549758939136/1049995763670847498/day07.sh
11:31 <+bridge> [ddnet] <Patiga> neat :D
11:31 <+bridge> [ddnet] <deen> The main trick is that truncate can generate files of any size without taking actual space on disk.
11:31 <+bridge> [ddnet] <Patiga> I just finished coding, today was exhausting for me
11:32 <+bridge> [ddnet] <Patiga> https://cdn.discordapp.com/attachments/293493549758939136/1049996728776019988/7.hs
11:32 <+bridge> [ddnet] <Patiga> my solution is a bit longer than yours 😅
11:33 <+bridge> [ddnet] <deen> I started in Python with a similar solution at first, yours looks cleaner though
11:33 <+bridge> [ddnet] <Patiga> it also took 3.5h ^^
11:34 <+bridge> [ddnet] <Patiga> I just saw that if I rushed part 2, I might've finished before you, I was ahead with part 1
11:35 <+bridge> [ddnet] <Patiga> I hope the next days will be shorter again, I'm not prepared to spend multiple hours each day solving aoc
11:37 <+bridge> [ddnet] <deen> iirc that was usually why I stopped doing AoC
11:47 <+bridge> [ddnet] <Patiga> yeah, same
12:01 <+bridge> [ddnet] <Alexander> I figured it's better for me to focus on my own projects than spend hours for AoC
12:46 <+bridge> [ddnet] <heinrich5991> where is it not?
12:47 <+bridge> [ddnet] <heinrich5991> I like your out-of-the box thinking 🙂
12:47 <+bridge> [ddnet] <heinrich5991> my solution:
12:47 <+bridge> [ddnet] <heinrich5991> ```py
12:47 <+bridge> [ddnet] <heinrich5991> import sys
12:47 <+bridge> [ddnet] <heinrich5991> from collections import Counter
12:47 <+bridge> [ddnet] <heinrich5991> input = open(sys.argv[1] if len(sys.argv) > 1 else "input").read().splitlines()
12:47 <+bridge> [ddnet] <heinrich5991> 
12:47 <+bridge> [ddnet] <heinrich5991> in_ls = False
12:47 <+bridge> [ddnet] <heinrich5991> cwd = []
12:47 <+bridge> [ddnet] <heinrich5991> files = {}
12:47 <+bridge> [ddnet] <heinrich5991> for line in input:
12:47 <+bridge> [ddnet] <heinrich5991>     line = line.split()
12:47 <+bridge> [ddnet] <heinrich5991>     if line[0] == "$":
12:47 <+bridge> [ddnet] <heinrich5991>         in_ls = False
12:47 <+bridge> [ddnet] <heinrich5991>         if len(line) < 2:
12:48 <+bridge> [ddnet] <heinrich5991>             raise ValueError("missing command")
12:48 <+bridge> [ddnet] <heinrich5991>         if line[1] == "cd":
12:48 <+bridge> [ddnet] <heinrich5991>             if len(line) != 3:
12:48 <+bridge> [ddnet] <heinrich5991>                 raise ValueError("cd")
12:48 <+bridge> [ddnet] <heinrich5991>             if line[2] == "/":
12:48 <+bridge> [ddnet] <heinrich5991>                 cwd = []
12:48 <+bridge> [ddnet] <heinrich5991>             elif line[2] == "..":
12:48 <+bridge> [ddnet] <heinrich5991>                 cwd.pop()
12:48 <+bridge> [ddnet] <heinrich5991>             else:
12:48 <+bridge> [ddnet] <heinrich5991>                 cwd.append(line[2])
12:48 <+bridge> [ddnet] <heinrich5991>         elif line[1] == "ls":
12:48 <+bridge> [ddnet] <heinrich5991>             if len(line) != 2:
12:48 <+bridge> [ddnet] <heinrich5991>                 raise ValueError("ls")
12:48 <+bridge> [ddnet] <heinrich5991>             in_ls = True
12:48 <+bridge> [ddnet] <heinrich5991>         else:
12:48 <+bridge> [ddnet] <heinrich5991>             raise ValueError("unknown command {}".format(line[1]))
12:48 <+bridge> [ddnet] <heinrich5991>     else:
12:48 <+bridge> [ddnet] <heinrich5991>         if not in_ls:
12:52 <+bridge> [ddnet] <deen> I'm just happy there was no `; rm -rf /` hidden somewhere 😄
12:52 <+bridge> [ddnet] <deen> Ah, I could have used a chroot, then no need for different directory
12:59 <+bridge> [ddnet] <Learath2> `rm -rf --no-preserve-root /`
12:59 <+bridge> [ddnet] <Patiga> I also always run my aoc code with sudo for maximum immersion
13:01 <+bridge> [ddnet] <deen> Today's task reminded me of the ChatGPT VM
13:02 <+bridge> [ddnet] <heinrich5991> `rm -rf /*`
13:02 <+bridge> [ddnet] <deen> Lucky that I put all my important stuff in /.secret
13:03 <+bridge> [ddnet] <deen> Woah, even with error handling
13:04 <+bridge> [ddnet] <Tater> 0b5vr is insane, I was competing in that shader royale against him if he actually finished that shader in 2 hours it would have been the best livecoded shader ever imo
13:15 <+bridge> [ddnet] <ReiTW> 1+1 = 11
13:15 <+bridge> [ddnet] <ReiTW> the maths needed for that 💀
13:16 <+bridge> [ddnet] <heinrich5991> ah, string concatenation
13:16 <+bridge> [ddnet] <heinrich5991> fair
13:19 <+bridge> [ddnet] <Tater> the actual math in that shader is not that bad it's just an insane amount of details and really well executed
13:20 <+bridge> [ddnet] <ReiTW> I mean 478 lines of code, it can't be it lol
13:20 <+bridge> [ddnet] <ReiTW> tff
13:21 <+bridge> [ddnet] <Tater> assuming you already know a lot about raymarching and shadertoy meta haha
13:22 <+bridge> [ddnet] <Tater> probably the only actually hard math is the linear algebra for the camera
13:22 <+bridge> [ddnet] <Ryozuki> i also wanna do aoc but it requires more time as more problems come
13:22 <+bridge> [ddnet] <Ryozuki> and one gotta work rip
13:38 <+bridge> [ddnet] <Jupstar ✪> Are you a professional gpu coder btw?
13:39 <+bridge> [ddnet] <Jupstar ✪> Or just for fun? Or don't want to say xd
13:45 <+bridge> [ddnet] <Tater> idk it would be fun to be a professional gpu coder but I need to learn more about graphics apis
13:47 <+bridge> [ddnet] <Jupstar ✪> Well that's a very technical part. There are also creative people like on shader toys required that are good in math to create new effects
13:49 <+bridge> [ddnet] <Tater> I probably do not have enough skills to be a good technical artist
13:49 <+bridge> [ddnet] <Tater> dunno
13:50 <+bridge> [ddnet] <Jupstar ✪> Dunno either. But i guess you could always say that. The weird thing here is probably that it's hard to say how good you are because it's a mix of technical stuff and creative stuff
13:51 <+bridge> [ddnet] <Jupstar ✪> Everyone played this one game that is good but runs like a potato did it xd
13:55 <+bridge> [ddnet] <Tater> I assume you are some kind of professional gpu coder. one does not simply add vulkan support to ddnet without background knowledge
13:57 <+bridge> [ddnet] <Jupstar ✪> My only background knowledge was OpenGL game engine
13:57 <+bridge> [ddnet] <Jupstar ✪> But yeah that helps since Vulkan is just more low level
13:57 <+bridge> [ddnet] <Tater> damn really?
13:58 <+bridge> [ddnet] <Tater> I assumed you were an experienced vulkan dev
13:58 <+bridge> [ddnet] <Jupstar ✪> And i also failed before trying to use OpenGL multi threaded xdd
13:58 <+bridge> [ddnet] <Jupstar ✪> Vulkan is still relatively new
13:58 <+bridge> [ddnet] <Tater> true I guess
13:58 <+bridge> [ddnet] <Jupstar ✪> When i started such things i used open gl 4 first
13:59 <+bridge> [ddnet] <Jupstar ✪> Around 8 years ago
14:00 <+bridge> [ddnet] <Tater> yeah I only started in 2021
14:01 <+bridge> [ddnet] <Tater> I guess that's already 2 years ago
14:01 <+bridge> [ddnet] <Jupstar ✪> But maybe u try harded more xd
14:01 <+bridge> [ddnet] <Tater> lol it feels like I am lazy
14:02 <+bridge> [ddnet] <Jupstar ✪> I also focused on other aspects of game engines such as physic collision 3d sounds etc. But in no field to a professional level. Only wanted to understand a bit of all
14:06 <+bridge> [ddnet] <Tater> yeah I should do a project like that, it seems like good experience
14:10 <+bridge> [ddnet] <Jupstar ✪> Yes. Tho if you want to work on such things professionally it might not really help you. Most companies i know look at your educational degree or want a specific skill. Only deen convinced me of the opposite lately
14:16 <+bridge> [ddnet] <Tater> yeah I should probably do it anyway just to be less shit of a developer since I never make big projects.
14:17 <+bridge> [ddnet] <Jupstar ✪> How old are you?^^
14:18 <+bridge> [ddnet] <Tater> 21
14:19 <+bridge> [ddnet] <Jupstar ✪> Ah nice i think that's around the time i started xd
14:20 <+bridge> [ddnet] <Jupstar ✪> With the engine specifically at least
14:20 <+bridge> [ddnet] <Jupstar ✪> I did opengl stuff before
14:20 <+bridge> [ddnet] <Jupstar ✪> And i think around 2017 i also added gl 3.3 to ddnet
14:21 <+bridge> [ddnet] <Tater> oh nice
14:21 <+bridge> [ddnet] <Jupstar ✪> So same age as u r
14:21 <+bridge> [ddnet] <Jupstar ✪> I was back then
14:21 <+bridge> [ddnet] <Tater> lol
14:21 <+bridge> [ddnet] <Jupstar ✪> Bcs now I'm grandpa;)
14:22 <+bridge> [ddnet] <Learath2> No I'm grandpa
14:22 <+bridge> [ddnet] <Jupstar ✪> U 12
14:24 <+bridge> [ddnet] <Learath2> Sorry
14:24 <+bridge> [ddnet] <Learath2> Forgot
14:25 <+bridge> [ddnet] <Jupstar ✪> #861
14:25 <+bridge> [ddnet] <DDNet> https://github.com/ddnet/ddnet/pull/861
14:25 <+bridge> [ddnet] <Jupstar ✪> No force pushing nobo
14:25 <+bridge> [ddnet] <Jupstar ✪> Most of my commits today are probably from there xddd
14:27 <+bridge> [ddnet] <Chairn> lol, you can guess which battery is charged based on how high it bounces off
14:27 <+bridge> [ddnet] <Chairn> https://www.youtube.com/watch?v=1PRks_euajI
14:28 <+bridge> [ddnet] <Tater> I've used that before
14:28 <+bridge> [ddnet] <Tater> it does seem to work
14:29 <+bridge> [ddnet] <Learath2> I had a weird experience a couple days ago. Never used batteries, a year old. Out of a box of 10, 3 were completely dead with oxidation on their negative terminals and maybe a little leak
14:30 <+bridge> [ddnet] <Learath2> It was bizarre. I have a box of unused batteries much older than a year and they are all fine. Same brand too
14:34 <+bridge> [ddnet] <Jupstar ✪> With batteries do we talk about accumulators?
14:34 <+bridge> [ddnet] <Jupstar ✪> Rechargable batteries?
14:34 <+bridge> [ddnet] <deen> bad batch I guess
15:02 <+bridge> [ddnet] <Ryozuki> learning functional languages (erlang):
15:02 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1050049559302254622/73gvfx.png
15:48 <+bridge> [ddnet] <Devinci> Excuse me, mind explaining how can you add the size of a file to every directory (current + parents). 
15:48 <+bridge> [ddnet] <Devinci> I'm not that familiar with python nor with tuples ^^'
17:08 <+bridge> [ddnet] <deen> He splits the paths into their subparts, so `a/b/c/d` will be split into `a`, `a/b`, `a/b/c` and the size added in the Counter for each of them
17:44 <+bridge> [ddnet] <Voxel> is the bot not working anymore? #📬submit-skins
17:44 <+bridge> [ddnet] <Voxel> the reactions arent showing
18:07 <+bridge> [ddnet] <Devinci> Oh okay, and I guess this is done with "files[tuple(cwd) + (line[1],)] = int(line[0])" this line? (at least part of it..?).
18:07 <+bridge> [ddnet] <Devinci> Still feels like a bit of magic for me but thanks ^^.
18:07 <+bridge> [ddnet] <Devinci> 
18:07 <+bridge> [ddnet] <Devinci> I had to do some half-assed tree for today's problem 😣 .
18:08 <+bridge> [ddnet] <Ryozuki> can you tell at a glance what this does and whats the algorithm name?
18:08 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1050096380615598180/image.png
18:08 <+bridge> [ddnet] <Ryozuki> functional programming kek
18:08 <+bridge> [ddnet] <Ryozuki> i think i can understand implerative code way faster than functional
18:08 <+bridge> [ddnet] <Ryozuki> i think i can understand imperative code way faster than functional
18:09 <+bridge> [ddnet] <murpi> Should work again
18:09 <+bridge> [ddnet] <murpi> Had to remove the recently submitted skins and I can't find the guy who submitted them 😅
18:18 <+bridge> [ddnet] <Voxel> same :((
18:22 <+bridge> [ddnet] <murpi> I found them
18:23 <+bridge> [ddnet] <Ravie> poor chinese guy risked his life to get on discord and submit some skins and this happens
18:26 <+bridge> [ddnet] <murpi> They were all in the wrong image resolution anyway :P
18:27 <+bridge> [ddnet] <Ravie> :bluestripe:
18:27 <+bridge> [ddnet] <Voxel> i think we should make the bot automatically detect this
18:27 <+bridge> [ddnet] <murpi> It already does
18:28 <+bridge> [ddnet] <Voxel> oh, i never noticed
18:28 <+bridge> [ddnet] <Voxel> i mean some guy sent like 6 4k images so
18:50 <+bridge> [ddnet] <Jupstar ✪> @heinrich5991 what are ur rust projects except libtw2 and the stuff that is in ddnet?
18:51 <+bridge> [ddnet] <heinrich5991> I contributed to rust and its standard library (even pre-1.0 🙂 ), and a few external libs, and worked a bit as a rust developer (I probably won't disclose more info about the last thing)
18:53 <+bridge> [ddnet] <Jupstar ✪> to the rust compiler or ecosystem? 😄
18:53 <+bridge> [ddnet] <heinrich5991> ah, and I did a network stack implementation in rust, arp, ip, tcp, udp, http, in uni. we were given free language choice, I picked rust. also pre-1.0, had to update it to 1.0 at some point
18:54 <+bridge> [ddnet] <Ryozuki> damn
18:54 <+bridge> [ddnet] <heinrich5991> rust compiler, rust standard library, but also third party libraries
18:54 <+bridge> [ddnet] <Ryozuki> ill go hide
18:54 <+bridge> [ddnet] <Jupstar ✪> nice nice didnt know u were a man from day 0
18:55 <+bridge> [ddnet] <Ryozuki> i think i got into rust at around 1.42 or smth
18:55 <+bridge> [ddnet] <Ryozuki> idk
18:55 <+bridge> [ddnet] <heinrich5991> it was actually also matricks who pushed me into the direction of rust ^^
18:55 <+bridge> [ddnet] <Ryozuki> 1.42 is march 2020 ~~
18:55 <+bridge> [ddnet] <Ryozuki> really?
18:55 <+bridge> [ddnet] <heinrich5991> talking about what language you could possibly use to implement libraries used by other languages
18:55 <+bridge> [ddnet] <heinrich5991> yes
18:55 <+bridge> [ddnet] <deen> I'm not familiar with Erlang syntax, but looks like counting the length of the list
18:56 <+bridge> [ddnet] <deen> calculating the length of the list*
18:56 <+bridge> [ddnet] <deen> In Haskell course we'd let students implement that kind of calculation manually for a few things (length, sum, product), and then implement foldr/foldl as the pattern for these calculations
18:56 <+bridge> [ddnet] <murpi> Yeah, I've added it just recently
18:56 <+bridge> [ddnet] <Ryozuki> well kinda but no
18:57 <+bridge> [ddnet] <Ryozuki> its run length encoding
18:57 <+bridge> [ddnet] <Jupstar ✪> @heinrich5991 do they still know you? xD
18:57 <+bridge> [ddnet] <Ryozuki> ```erlang
18:57 <+bridge> [ddnet] <Ryozuki> run_length_encode([a,a,a,a,b,c,c,a,a,d,e,e,e,e]).
18:57 <+bridge> [ddnet] <Ryozuki> %%[{4,a},{1,b},{2,c},{2,a},{1,d},{4,e}]```
18:57 <+bridge> [ddnet] <Ryozuki> ```erlang
18:57 <+bridge> [ddnet] <Ryozuki> run_length_encode([a,a,a,a,b,c,c,a,a,d,e,e,e,e]).
18:57 <+bridge> [ddnet] <Ryozuki> %% [{4,a},{1,b},{2,c},{2,a},{1,d},{4,e}]```
18:57 <+bridge> [ddnet] <Jupstar ✪> i mean now that it is a foundation arent you interested working there?
18:57 <+bridge> [ddnet] <deen> ah, so the {a,b} is a tuple 😄
18:57 <+bridge> [ddnet] <heinrich5991> hm. I don't think they know me
18:57 <+bridge> [ddnet] <Ryozuki> yeah xD
18:58 <+bridge> [ddnet] <heinrich5991> I was in the top100 contributors once, but that was it
18:58 <+bridge> [ddnet] <Ryozuki> yeah i also did foldl
18:58 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1050109027608178729/image.png
18:59 <+bridge> [ddnet] <Ryozuki> fold is like the base of functional languages i think xd
18:59 <+bridge> [ddnet] <Jupstar ✪> is there still history for that or is it gone? XD
18:59 <+bridge> [ddnet] <heinrich5991> it's still in the history, but by now, people have far more commits 🙂
19:03 <+bridge> [ddnet] <Ryozuki> rust has lots of ppl working on it
19:03 <+bridge> [ddnet] <Ryozuki> rn
19:04 <+bridge> [ddnet] <Jupstar ✪> its just funny how many tryhard devs are around on a relatively small game like ddnet xDD
19:05 <+bridge> [ddnet] <Jupstar ✪> @heinrich5991 2 month tryhard to be "very good" in rust? do you think its possible?
19:06 <+bridge> [ddnet] <Learath2> Depends on what you mean by "very good" probably 😄
19:07 <+bridge> [ddnet] <Learath2> You'd imo definitely be good enough to code almost anything you want in rust but you probably still wouldn't know the best practices for everything
19:07 <+bridge> [ddnet] <Jupstar ✪> yes
19:07 <+bridge> [ddnet] <Jupstar ✪> thats very good
19:07 <+bridge> [ddnet] <Jupstar ✪> best practices = master
19:08 <+bridge> [ddnet] <Ryukthe2nd> Where is Editors Open source located at?
19:08 <+bridge> [ddnet] <Ryukthe2nd> can't find it
19:08 <+bridge> [ddnet] <deen> Not so small :D: https://steamdb.info/graph/?compare=220,335300,412220
19:08 <+bridge> [ddnet] <Jupstar ✪> well from player count defs not
19:08 <+bridge> [ddnet] <Jupstar ✪> but most devs here were around before the player count
19:08 <+bridge> [ddnet] <Jupstar ✪> src/game/editor probs
19:08 <+bridge> [ddnet] <Learath2> Honestly, I've found you can get "very good" very quickly in most languages when you have solid problem solving skills and are very good in another language
19:10 <+bridge> [ddnet] <Jupstar ✪> yes i assume so too, i also dont find rust especially hard yet
19:10 <+bridge> [ddnet] <Jupstar ✪> its really more that you design your code differently (or are forced to)
19:11 <+bridge> [ddnet] <Ryukthe2nd> Thanks because i was thinking of adding a 2nd Switch to the editor
19:11 <+bridge> [ddnet] <Learath2> Most of the trouble I've had (and still sometimes have) is wrestling with the borrow checker
19:13 <+bridge> [ddnet] <Jupstar ✪> i mean its not like i never struggle with it, but its ok.
19:13 <+bridge> [ddnet] <Jupstar ✪> but havent wrote a very complex code base yet
19:19 <+bridge> [ddnet] <Ryozuki> i like it
19:19 <+bridge> [ddnet] <Ryozuki> hard
19:20 <+bridge> [ddnet] <Ryozuki> honestly when you reach the point of knowing if they borrow checker will complain and code naturally in a way that fits it i would say u are already there mostly
19:21 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1050114873306124348/rust-memory-container-cs-3840x2160-dark-back.png
19:21 <+bridge> [ddnet] <Ryozuki> also  this is pretty nice
19:21 <+bridge> [ddnet] <Ryozuki> https://cheats.rs/
19:22 <+bridge> [ddnet] <Ryozuki> @Not Keks but actual masters in rust are not people who know to follow best practices for me
19:22 <+bridge> [ddnet] <Ryozuki> but people who
19:22 <+bridge> [ddnet] <Ryozuki> understand how to write sound unsafe code
19:22 <+bridge> [ddnet] <Ryozuki> unsafe rust is actually pretty hard
19:23 <+bridge> [ddnet] <Ryozuki> https://doc.rust-lang.org/nomicon/safe-unsafe-meaning.html
19:23 <+bridge> [ddnet] <Ryozuki> must read
19:24 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1050115607615512606/image.png
19:27 <+bridge> [ddnet] <Ryozuki> https://doc.rust-lang.org/nomicon/vec/vec.html
19:27 <+bridge> [ddnet] <Ryozuki> this is also good
19:27 <+bridge> [ddnet] <Ryozuki> https://doc.rust-lang.org/nomicon/subtyping.html
19:28 <+bridge> [ddnet] <Ryozuki> too
19:29 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1050116807823990877/image.png
19:29 <+bridge> [ddnet] <Ryozuki> you need to know this stuff well for unsafe
19:33 <+bridge> [ddnet] <Ryozuki> --
19:33 <+bridge> [ddnet] <Ryozuki> i need some day to put myself and read lisp
19:33 <+bridge> [ddnet] <Ryozuki> everyone says lisp is like the best to get things done
19:34 <+bridge> [ddnet] <Ryozuki> i need some day to put myself and learn lisp
19:43 <+bridge> [ddnet] <Ryozuki> i think u can get very good in the general sense in most langs, but u are probs missing out on some of the things u would discover by spending way more time
19:44 <+bridge> [ddnet] <Ryozuki> well it also depends on ur bar for "very good"
19:45 <+bridge> [ddnet] <Ryozuki> *and that would for example make some stuff more clean or efficient
19:48 <+bridge> [ddnet] <Jupstar ✪> @nori kwin tearing wayland support is merged, guess i'll try the next week then 😄
19:48 <+bridge> [ddnet] <Jupstar ✪> does obs work well?
19:48 <+bridge> [ddnet] <Jupstar ✪> defs a must work for me
19:53 <+bridge> [ddnet] <Ryozuki> @Not Keks streamer?
19:53 <+bridge> [ddnet] <Ryozuki> where is ur vtuber avatar
19:53 <+bridge> [ddnet] <Ryozuki> vulkan themed
19:53 <+bridge> [ddnet] <Jupstar ✪> do u want to see me coding or what
19:54 <+bridge> [ddnet] <Ryozuki> not rly
19:54 <+bridge> [ddnet] <Ryozuki> honestly watching others code is boring
19:54 <+bridge> [ddnet] <Jupstar ✪> sad story
19:54 <+bridge> [ddnet] <Ryozuki> only the result is interessting
19:54 <+bridge> [ddnet] <Jupstar ✪> yes xD
19:54 <+bridge> [ddnet] <Ryozuki> unless ur a rly good explainer
19:54 <+bridge> [ddnet] <Ryozuki> which most devs arent
19:54 <+bridge> [ddnet] <Jupstar ✪> bcs most time they struggle, esp when its smth new xD
19:54 <+bridge> [ddnet] <Ryozuki> ye
20:06 <+bridge> [ddnet] <heinrich5991> idk how it long it takes to get good in a language tbh. I wanna learn some javascript/typescript, but haven't made a lot of progress. I haven't tryharded though
20:07 <+bridge> [ddnet] <Jupstar ✪> typescript easiest shit ever
20:08 <+bridge> [ddnet] <Jupstar ✪> @Ryozuki have u heard of dioxus?
20:08 <+bridge> [ddnet] <Jupstar ✪> 
20:08 <+bridge> [ddnet] <Jupstar ✪> its still pretty alpha, but i implemented clan website in it
20:08 <+bridge> [ddnet] <Jupstar ✪> 
20:08 <+bridge> [ddnet] <Jupstar ✪> except for some javascript handlers that wasm doesnt implement yet its 100% rust and html/css only 😄
20:08 <+bridge> [ddnet] <Jupstar ✪> and its react like
20:09 <+bridge> [ddnet] <Ryozuki> i think its pretty easy
20:09 <+bridge> [ddnet] <Ryozuki> its all objects
20:09 <+bridge> [ddnet] <Ryozuki> but u gotta learn some weird things
20:09 <+bridge> [ddnet] <Ryozuki> https://wtfjs.com/
20:14 <+bridge> [ddnet] <Jupstar ✪> i'd defs use eslint with pretty much all warnings on with typescript
20:14 <+bridge> [ddnet] <Jupstar ✪> else u have so many implicit string conversations xD
20:14 <+bridge> [ddnet] <Ryozuki> xd
20:14 <+bridge> [ddnet] <Ryozuki> as any
20:14 <+bridge> [ddnet] <Ryozuki> ez escape hatch
20:14 <+bridge> [ddnet] <Ryozuki> but u know typescript type system is turing complete
20:14 <+bridge> [ddnet] <Ryozuki> iirc
20:15 <+bridge> [ddnet] <Ryozuki> https://github.com/microsoft/TypeScript/issues/14833
20:15 <+bridge> [ddnet] <Ryozuki> https://gist.github.com/hediet/63f4844acf5ac330804801084f87a6d4
20:16 <+bridge> [ddnet] <Jupstar ✪> nice write gpu driver in it
20:24 <+bridge> [ddnet] <Ryozuki> if its turing complete
20:25 <+bridge> [ddnet] <Ryozuki> this means u can have the halting problem right
20:25 <+bridge> [ddnet] <Ryozuki> i wonder if its desireable to have a turing complete type system
20:32 <+bridge> [ddnet] <Jupstar ✪> oh really? i thought its when its the opposite
20:32 <+bridge> [ddnet] <Jupstar ✪> when there are finite operations
20:33 <+bridge> [ddnet] <Ryozuki> no
20:34 <+bridge> [ddnet] <Ryozuki> given
20:34 <+bridge> [ddnet] <Ryozuki> >  computability theory, the halting problem is the problem of determining, from a description of an arbitrary computer program and an input, whether the program will finish running, or continue to run forever
20:34 <+bridge> [ddnet] <Ryozuki> > in computability theory, the halting problem is the problem of determining, from a description of an arbitrary computer program and an input, whether the program will finish running, or continue to run forever
20:34 <+bridge> [ddnet] <Ryozuki> > For any program f that might determine whether programs halt, a "pathological" program g, called with some input, can pass its own source and its input to f and then specifically do the opposite of what f predicts g will do. No f can exist that handles this case. A key part of the proof is a mathematical definition of a computer and program, which is known as a Turing machine; the halting problem is undecidable over Turing machines. It is
20:34 <+bridge> [ddnet] <Ryozuki> <https://en.wikipedia.org/wiki/Halting_problem>
21:00 <+bridge> [ddnet] <uwu> i was helping my friend to mount his hdd to /home directory, and after all things system cannot boot saying
21:00 <+bridge> [ddnet] <uwu> ```
21:00 <+bridge> [ddnet] <uwu> [FAILED] Failed to mount /home
21:00 <+bridge> [ddnet] <uwu> [DEPEND] Dependency failed for Local File Systems
21:00 <+bridge> [ddnet] <uwu> ```
21:00 <+bridge> [ddnet] <uwu> but with manual mount `mount /dev/sda2 /home` + `Ctrl + D` it boots normally (till next reboot)
21:00 <+bridge> [ddnet] <uwu> we made sure uuid in `/etc/fstab` is correct and all other things...
21:00 <+bridge> [ddnet] <uwu> he uses Arch btw 🥹
21:32 <+bridge> [ddnet] <uwu> Nvm, we tried to revert everything and all files from /home disappeared
21:32 <+bridge> [ddnet] <uwu> No help needed now
22:12 <+bridge> [ddnet] <nori> yes but i think only with pipewire
22:12 <+bridge> [ddnet] <nori> .
22:18 <+bridge> [ddnet] <Jupstar ✪> ok will test weekend. never used pipewire hopefully not too unstable xD
22:18 <+bridge> [ddnet] <Jupstar ✪> 
22:18 <+bridge> [ddnet] <Jupstar ✪> idc if single apps are unstable but prefer a stable desktop ^^
22:32 <+bridge> [ddnet] <Learath2> I use pipewire on my laptop, it's pretty 11/10
23:56 <+bridge> [ddnet] <deen> @Jore reported that every time you run DDNet client on Steam on Windows you have to select the option here. Anyone know if there is a good way to hide this? Sounds annoying
23:56 <+bridge> [ddnet] <deen> https://cdn.discordapp.com/attachments/293493549758939136/1050184044530380892/image.png
