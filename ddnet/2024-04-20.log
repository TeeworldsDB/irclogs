02:50  * Tyrone slaps Tyrone around a bit with a large fishbot
03:13 < bridge_> <Ewan> yea
04:55 < ws-client> <ChillerDragon> endianess is such a pain but i managed to understand ddnet snap uuids :D  ... i know im late to the party 
04:57 < ws-client> <ChillerDragon> so teeworlds uses types starting from 1 to max teeworlds snap items and ddnet uses types starting from max snap type (32767) going down to 32703
04:58 < ws-client> <ChillerDragon> the teeworlds types are known at compile time and can be looked up in a table. The ddnet ex items are not known at compile time and change even while a tee is connected
04:59 < ws-client> <ChillerDragon> There can only be 64 unique ddnet ex items in a single snapshot but there can be as many ddnet ex items during one play session as there are uuids
05:00 < ws-client> <ChillerDragon> So 128 player support that snaps 128 ddnet ex characters in one snap would be impossible?
06:53 < bridge_> <Ewan> http://2143.christmas/f/Ge2h.png
06:54 < bridge_> <Ewan> i own rtx 3060 now
06:54 < bridge_> <Ewan> i have 4 more gigs of vram
11:06 < bridge_> <Jupstar âœª> wtf dude
11:06 < bridge_> <Jupstar âœª> 2 GPUs 64GB RAM, did u get a paycheck or what did i miss xD
11:06 < bridge_> <Ewan> one is integrated gpu
11:06 < bridge_> <Ewan> misleading
11:06 < bridge_> <Jupstar âœª> ah yeah it even says so
11:07 < bridge_> <Ewan> i have had multi gpu setups before
11:07 < bridge_> <Ewan> it's great for VMs
11:07 < bridge_> <Jupstar âœª> nice PC, bad OS xd
11:07 < bridge_> <Ewan> yea
11:32 < bridge_> <Ewan> i could even rn but i would have to sacrifice my third nvme drive
11:32 < bridge_> <Ewan> and thatâ€™s a part of a non redundant raid array with
11:32 < bridge_> <Ewan> and thatâ€™s a part of a non redundant raid array with important os stuff on it
11:32 < bridge_> <Ewan> so i would needa linux
11:33 < bridge_> <Ewan> https://youtu.be/AmW2v4XWV-0?si=NDW5koIfj4XSgQug
12:51 < bridge_> <Jupstar âœª> chillerdragon: do you have stats for delta sizes?
12:51 < bridge_> <Jupstar âœª> i'm interested in the size of deltas after network compression
13:20 < ws-client> <ChillerDragon> LEEERATOOOOOOOOO
13:21 < ws-client> <ChillerDragon> @Jupstar âœª you mean the size thats sent over the network and how big it is unpacked?
13:22 < bridge_> <Jupstar âœª> yes and no i want the packed size
13:22 < bridge_> <Jupstar âœª> 
13:22 < bridge_> <Jupstar âœª> i want the size what is actually sent
13:22 < bridge_> <Jupstar âœª> but only from snapshot deltas, not other traffic
13:23 < ws-client> <ChillerDragon> i guess
13:23 < ws-client> <ChillerDragon> lemme check
13:24 < bridge_> <Jupstar âœª> and ofc it would be nice to know how many characters were in the game at that moment ðŸ˜„
13:26 < ws-client> <ChillerDragon> just me :D 
13:26 < bridge_> <Jupstar âœª> perfect
13:26 < ws-client> <ChillerDragon> but ye i would need too much time to properly look it up i think
13:26 < bridge_> <godly13> <a:banouis:807483811541286972>
13:26 < ws-client> <ChillerDragon> im in the middle of a debugging sessions
13:26 < bridge_> <Jupstar âœª> yeah np
13:27 < bridge_> <Jupstar âœª> if u some day can just look up the packet size if u stand still and do nothing
13:27 < bridge_> <Jupstar âœª> that would already help
13:27 < bridge_> <Jupstar âœª> but i will otherwise just do it
13:27 < ws-client> <ChillerDragon> my first guess would be 83 bytes get unpacked to 88 bytes :D 
13:27 < bridge_> <Jupstar âœª> i am just bad and finding it in cpp code xd
13:27 < ws-client> <ChillerDragon> but thats 99% totally off
13:28 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1713612473.png
13:28 < ws-client> <ChillerDragon> 83 bytes are sent over the network
13:28 < bridge_> <Jupstar âœª> that's a vanilla server?
13:28 < bridge_> <Jupstar âœª> or ddnet server
13:28 < ws-client> <ChillerDragon> for a fresh 0.7 connection
13:28 < ws-client> <ChillerDragon> no thats ddnet with ddnet ex items too
13:28 < bridge_> <Jupstar âœª> ok
13:29 < ws-client> <ChillerDragon> https://paste.zillyhuhn.com/f7
13:29 < ws-client> <ChillerDragon> on connect it updates the character items
13:29 < ws-client> <ChillerDragon> duuudde i am THIS close to fixing the last bug
13:30 < ws-client> <ChillerDragon> where is lerato!?
13:31 < ws-client> <ChillerDragon> implicit cast of bool sixup to size_t size !?
13:31 < ws-client> <ChillerDragon> lerato watafak were you thinking
13:31 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1713612625.png
13:31 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1713612681.png
13:32 < ws-client> <ChillerDragon> @learath2 i feel like this code could use a comment :D 
13:32 < bridge_> <Jupstar âœª> chillerdragon: ah interesting
13:32 < bridge_> <Jupstar âœª> is that a dumb of single character?
13:32 < ws-client> <ChillerDragon> thats me fresh after connect ye
13:33 < bridge_> <Jupstar âœª> i'm suprised it is so small
13:33 < ws-client> <ChillerDragon> it creates a delta for both vanilla char and ddnet char
13:33 < ws-client> <ChillerDragon> 83 bytes?
13:33 < bridge_> <Jupstar âœª> well my diff results in 56 bytes, after compression
13:33 < bridge_> <Jupstar âœª> but the initial diff size is insanely much bigger
13:33 < bridge_> <Jupstar âœª> https://pastebin.com/euRNUVyJ
13:33 < ws-client> <ChillerDragon> pls dont benchmark my numbers
13:34 < ws-client> <ChillerDragon> i told u i didnt do measurements just a random screenshot xd
13:34 < ws-client> <ChillerDragon> idk what that number means
13:34 < ws-client> <ChillerDragon> its probably mostly ip udp headers
13:34 < bridge_> <Jupstar âœª> the biggest difference in my approach is, that it is a binary diff
13:34 < bridge_> <Jupstar âœª> 
13:34 < bridge_> <Jupstar âœª> so it's not aware of the snapshot content
13:34 < ws-client> <ChillerDragon> the snapshot data is 44 bytes ðŸ¤·
13:34 < bridge_> <Jupstar âœª> that surprises me too
13:35 < bridge_> <Jupstar âœª> ah, but 0.7 removes player info from snapshot right?
13:35 < ws-client> <ChillerDragon> ye pls do ur own benchmark :D 
13:35 < ws-client> <ChillerDragon> ye it does
13:35 < bridge_> <Jupstar âœª> nah i totally trust your benchmarks
13:36 < ws-client> <ChillerDragon> omg i should have said nothing
13:36 < ws-client> <ChillerDragon> instead of gaslighting you
13:37 < bridge_> <Jupstar âœª> it's ok chiller. why should your dumb tool not show the truth xd
13:37 < ws-client> <ChillerDragon> its heinrichs dissector
13:37 < bridge_> <Jupstar âœª> see
13:37 < ws-client> <ChillerDragon> its OG tool but idk how to use it
13:38 < ws-client> <ChillerDragon> dude lerato
13:39 < ws-client> <ChillerDragon> the item size of sound world is 0 for 0.6 and 1 for 0.7?!
13:39 < ws-client> <ChillerDragon> i cant
13:39 < bridge_> <Jupstar âœª> wtf is a sound world
13:39 < ws-client> <ChillerDragon> ok watever im pretty sure whatever this satanistic code is doing i need it too because fakin sound world was breaking my demo deltas
13:39 < ws-client> <ChillerDragon> https://chillerdragon.github.io/teeworlds-protocol/07/snap_items.html#event_sound_world
13:40 < bridge_> <Jupstar âœª> ah lol
13:40 < bridge_> <Jupstar âœª> ah right
13:40 < bridge_> <Jupstar âœª> in teeworlds events are part of the snapshot
13:40 < bridge_> <Jupstar âœª> i don't understand that decision tbh
13:40 < bridge_> <Jupstar âœª> aren't events a one time thing
13:40 < ws-client> <ChillerDragon> ye ye you convinced me on that one
13:41 < bridge_> <Jupstar âœª> ah did we even talk about that ðŸ˜„
13:41 < ws-client> <ChillerDragon> yes 
13:41 < bridge_> <Jupstar âœª> well defs was fun
13:41 < ws-client> <ChillerDragon> i liked your point of some events being important
13:41 < bridge_> <Jupstar âœª> we should repeat that
13:41 < ws-client> <ChillerDragon> and snapshots might be lost including all their events and they will never be resend
13:42 < ws-client> <ChillerDragon> ye we should
13:42 < bridge_> <Jupstar âœª> but i'd like to have heinrich in too next time
13:42 < bridge_> <Jupstar âœª> but he afk ignores me
13:42 < bridge_> <Jupstar âœª> ðŸ˜¬
13:42 < ws-client> <ChillerDragon> ye that be fun
13:42 < bridge_> <Jupstar âœª> jupstar vs heinrich
13:42 < bridge_> <Jupstar âœª> 
13:42 < bridge_> <Jupstar âœª> the best buddies ever
13:42 < ws-client> <ChillerDragon> epic
13:43 < bridge_> <Jupstar âœª> but i also want to talk about other things anyway
13:43 < ws-client> <ChillerDragon> ok i gotta get back to debugging before bed time
13:50 < bridge_> <Jupstar âœª> i dont understand anything xd
13:50 < bridge_> <Jupstar âœª> 
13:50 < bridge_> <Jupstar âœª> netmsg = simply a new packet?
14:47 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1713617218.png
14:47 < ws-client> <ChillerDragon> that was a weird one after switching branch back and forth i can not reproduce anymore
14:47 < ws-client> <ChillerDragon> i think ccache starts to troll me 
14:48 < ws-client> <ChillerDragon> i am surprised that this is the first weird thing i see given that for quite some time ccache was hiding compile errors from me for quite some time
14:48 < ws-client> <ChillerDragon> cant fail to build a file if its loaded from cache lmao
14:49 < ws-client> <ChillerDragon> @Jupstar âœª if you ask me leratos message does not make much sense xd
14:50 < bridge_> <Jupstar âœª> CHILLER, wazzup, u awake already? or does the debugging session haunt your sleep
14:50 < ws-client> <ChillerDragon> i just rq 
14:50 < ws-client> <ChillerDragon> i fixed the thing which i thought was the last bug and finish all features of ddnet7 with leratos weirdest code ever
14:50 < ws-client> <ChillerDragon> only to realize that demos do not work when the dummy is connected and that seems to be a nasty new quest
14:51 < bridge_> <Jupstar âœª> ah good thing this will never happen with dd-pg
14:51 < bridge_> <Jupstar âœª> bcs dummies dont really exist
14:51 < bridge_> <Jupstar âœª> i mean they exist, but not as a new network entity
14:51 < ws-client> <ChillerDragon> https://github.com/ddnet/ddnet/blob/master/src/engine/client/client.cpp#L2300
14:52 < ws-client> <ChillerDragon> ``void CClient::ProcessServerPacket(CNetChunk *pPacket, int Conn, bool Dummy)``
14:52 < ws-client> <ChillerDragon> if Conn is 0 Dummy is true and vice versa
14:52 < ws-client> <ChillerDragon> so confusing :D  i thought since there are two variables they have two different informations such as wether the packet is sent to the active tee or not
14:53 < ws-client> <ChillerDragon> but both arguments ``Conn`` and ``Dummy`` have the same information 
14:53 < ws-client> <ChillerDragon> Dummy is false*
14:53 < bridge_> <Jupstar âœª> ?
14:53 < bridge_> <Jupstar âœª> Conn is an enum isnt it
14:53 < ws-client> <ChillerDragon> yes
14:53 < bridge_> <robyt3> `Dummy` is true if the message is not from the active connection
14:53 < bridge_> <robyt3> pretty confusing, yes
14:54 < ws-client> <ChillerDragon> i dont think so
14:54 < ws-client> <ChillerDragon> https://github.com/ddnet/ddnet/blob/master/src/engine/client/client.cpp#L2300
14:54 < ws-client> <ChillerDragon> oh wait
14:54 < ws-client> <ChillerDragon> aaaa
14:54 < ws-client> <ChillerDragon> because cl_dummy changes
14:54 < ws-client> <ChillerDragon> ah right nvm then
14:54 < ws-client> <ChillerDragon> ah no then its totally fine xd
14:55 < ws-client> <ChillerDragon> But i still have no idea how leratos code works
14:56 < bridge_> <Jupstar âœª> it's still confusing
14:56 < ws-client> <ChillerDragon> by setting sound world to the wrong size of 0.7 connections
14:56 < ws-client> <ChillerDragon> for*
14:56 < bridge_> <Jupstar âœª> sound world ðŸ˜­
14:56 < bridge_> <Jupstar âœª> world sound
14:56 < bridge_> <Jupstar âœª> rename it
14:56 < ws-client> <ChillerDragon> lerato be like ``true == 3``
14:57 < ws-client> <ChillerDragon> sound in da world
14:57 < ws-client> <ChillerDragon> im ok with that
14:58 < ws-client> <ChillerDragon> but im not native i dont use the saying "oh thats a sound thing"
14:58 < ws-client> <ChillerDragon> like "a sound plan"
14:59 < bridge_> <Jupstar âœª> xd
14:59 < ws-client> <ChillerDragon> sound world
14:59 < bridge_> <Jupstar âœª> you use that library unsound
14:59 < ws-client> <ChillerDragon> wowowo
15:00 < bridge_> <Jupstar âœª> yeah i agree, world sound is better
15:00 < bridge_> <Jupstar âœª> i agree with myself
15:00 < ws-client> <ChillerDragon> did you know clang built a C repl?
15:00 < ws-client> <ChillerDragon> they copied my project
15:00 < bridge_> <Jupstar âœª> hillerDragon
15:01 < bridge_> <Jupstar âœª> hashset uses 48 bytes xDD
15:01 < bridge_> <Jupstar âœª> 
15:01 < bridge_> <Jupstar âœª> sadly tinyset is broken
15:01 < bridge_> <Jupstar âœª> now i use Option<Box<HashSet>>
15:01 < bridge_> <Jupstar âœª> 
15:01 < bridge_> <Jupstar âœª> epyc
15:01 < bridge_> <Jupstar âœª> 
15:01 < bridge_> <Jupstar âœª> totally not over complicated to use
15:02 < bridge_> <Jupstar âœª> but at least only uses 8 bytes, which is important in my case
15:03 < bridge_> <Jupstar âœª> @robyt3 i have an important question and you need to answer honestly:
15:03 < bridge_> <Jupstar âœª> 
15:03 < bridge_> <Jupstar âœª> - do you think tee-ish UI is something desirable?
15:03 < bridge_> <Jupstar âœª> - Do you think that a new user that never seen ddnet, likes the home menu page?
15:04 < bridge_> <Jupstar âœª> 
15:04 < bridge_> <Jupstar âœª> Like imagine u open any game and it looks like ddnet's first impression
15:04 < bridge_> <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1231229026006466560/image.png?ex=66250ee2&is=6623bd62&hm=3af468aaf5d3e50f23687c0e5b9ec88c82d9b6f77513edd74316e4783aa34036&
15:04 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1713618254.png
15:05 < ws-client> <ChillerDragon> they dont have readline support yet so no history and emacs mode thats pretty cring
15:05 < ws-client> <ChillerDragon> all in all my repl still feels supirior to clangs but im sure they will catch up
15:10 < bridge_> <robyt3> I don't feel anything particular wrong with it, I think it fits the game. Certainly better than others modern games that immediately open 3 popups telling you about sales and updates while you just want to start playing. Though the first thing you see if you open the game as a new player would be the language selection, name selection and tutorial (unless you skip it).
15:14 < bridge_> <Jupstar âœª> ok
15:23 < ws-client> <ChillerDragon> jopsti u like dis menu?
15:23 < ws-client> <ChillerDragon> https://www.youtube.com/watch?v=TN0zLNKQsGg
15:24 < bridge_> <Jupstar âœª> i mean for a pause menu it looks pretty good xd
15:25 < ws-client> <ChillerDragon> a bit bloated but ye i think super meat boy managed to fit their 2d cartoon style while also being applealing to mainstream
15:26 < bridge_> <remakepower> ChillerDragon: Could I translate your Teeworlds programming videos and upload them to chinese video website?
15:27 < ws-client> <ChillerDragon> @fred axaxax
15:27 < ws-client> <ChillerDragon> i dont speak chinese ._.
15:28 < ws-client> <ChillerDragon> you mean like bilibili? sounds annoying to sign up there but i assume its a big market
15:28 < bridge_> <remakepower> Yes
15:30 < bridge_> <remakepower> Ah so, I think the best way to translate them is to add subtitles
15:30 < ws-client> <ChillerDragon> i still have trauma from when i tried to create a email on chinese yahoo or something like that
15:30 < ws-client> <ChillerDragon> so google translate subtitles?
15:30 < bridge_> <Jupstar âœª> he said, he translate it
15:30 < bridge_> <Jupstar âœª> not you
15:31 < ws-client> <ChillerDragon> ah lol thanks jopsti
15:31 < ws-client> <ChillerDragon> he also does the uploading then i assume
15:32 < ws-client> <ChillerDragon> @remakepower ah you are just asking for permissions? ye sure
15:32 < bridge_> <remakepower> I was asking the premissions
15:32 < ws-client> <ChillerDragon> i licensed the videos on youtube under creative commons they are free to use and redistribute
15:32 < ws-client> <ChillerDragon> credits are appreciated
15:35 < bridge_> <remakepower> Thank you for your permission. Also, there is someone had upload them 4 years ago
15:36 < bridge_> <remakepower> And he only upload 7 videos in them.
15:36 < bridge_> <remakepower> So that's why i ask now
15:37 < bridge_> <remakepower> So that's why i asked just now
15:37 < ws-client> <ChillerDragon> do you have a link? :) 
15:39 < bridge_> <remakepower> What's the link?
15:39 < ws-client> <ChillerDragon> to the old 7 videos
15:40 < ws-client> <ChillerDragon> i would like to see how it looks like c:
15:40 < bridge_> <remakepower> https://www.bilibili.com/video/BV1da4y177Tc
15:42 < ws-client> <ChillerDragon> ty
15:42 < bridge_> <remakepower> he didn't do any translate
15:42 < ws-client> <ChillerDragon> it even links youtube
15:42 < ws-client> <ChillerDragon> is that a common practice? to reupload youtube videos to bilibili and then link the original video?
15:42 < ws-client> <ChillerDragon> almost like trying to advertise youtube on bilibili :D 
15:42 < bridge_> <remakepower> Yes
15:42 < bridge_> <remakepower> if someone don't link the original video?
15:42 < bridge_> <Jupstar âœª> chiller: but nobody reads description xdd
15:42 < ws-client> <ChillerDragon> yeye ofc
15:42 < ws-client> <ChillerDragon> i store my passwords in youtube descriptions
15:42 < ws-client> <ChillerDragon> safest place on earth
15:42 < bridge_> <remakepower> The uploader will be accused
15:43 < ws-client> <ChillerDragon> oh by whom?
15:43 < ws-client> <ChillerDragon> by the community? bilibili? or youtube?
15:43 < bridge_> <remakepower> community
15:43 < ws-client> <ChillerDragon> ah i see
15:44 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.chinadragon.png
15:44 < ws-client> <ChillerDragon> easy captcha 
15:44 < bridge_> <remakepower> Hm
15:45 < bridge_> <remakepower> There will be a problem for you(probably)
16:36 < bridge_> <learath2> It's not always a packet, without flushing netmsgs are grouped into netchunks which are packets
16:37 < bridge_> <Jupstar âœª> ah right there clicks something in my head
16:37 < bridge_> <learath2> The issue in teeworlds is that we have both state and events. So the source of truth for things is mixed, but they need to stay in sync
16:38 < bridge_> <learath2> e.g. grenade explosion is an event, but it's effects on tees are only visible in the new state in the snapshot
16:38 < bridge_> <learath2> if you send the explosion in a netmsg but it's effects of pushing tees around in the snapshot, now it is possible the netmsg arrives late, and since it has no facility to sync to a tick it's not possible to apply retroactively either
16:38 < bridge_> <Jupstar âœª> i'd claim on a stable connection events come in _almost_ when snapshots come in ðŸ˜„
16:39 < bridge_> <learath2> I'm guessing matricks just didn't feel like thinking about all the complexity of moving everything to events or everything to state and just had events that affect state visibly in the snapshot as a simple solution
16:41 < bridge_> <learath2> but we don't have a guaranteed way to make that happen in the current form of network we have without flushing all the time
16:41 < bridge_> <Jupstar âœª> are netchunks per connection?
16:42 < bridge_> <learath2> We have a sendqueue of cnetchunks per cconnection iirc
16:43 < bridge_> <Jupstar âœª> ah our queue sytem is not multiplex?
16:43 < bridge_> <learath2> If a chunk with a flush flag is added to the sendqueue, the entire queue is sent without <I don't remember what the regular forced flush event is> event happening
16:44 < bridge_> <Jupstar âœª> if you ask me, that should be done anyway
16:44 < bridge_> <Jupstar âœª> 
16:44 < bridge_> <Jupstar âœª> ideally the server only sends snapshots and events to a single connection
16:45 < bridge_> <Jupstar âœª> at least i don't see a huge reason to not directly flush. maybe the implementation is not built for it
16:45 < bridge_> <Jupstar âœª> 
16:45 < bridge_> <Jupstar âœª> but locking the mutex to put a packet on a send queue doesn't sound too expensive
16:46 < bridge_> <Jupstar âœª> well ok the implementation is also single threaded
16:47 < bridge_> <Jupstar âœª> that could defs be a problem
16:50 < bridge_> <Jupstar âœª> mh interesting
17:13 < bridge_> <rootjie> bring back rainbow team colors this randomized one suck
17:14 < bridge_> <rootjie> who decided to change even
17:24 < bridge_> <Jupstar âœª> it's not random
17:24 < bridge_> <Jupstar âœª> 
17:24 < bridge_> <Jupstar âœª> it's just different order
17:25 < bridge_> <Jupstar âœª> https://cdn.discordapp.com/attachments/342454474117218334/1151990562900160662/265515094-3ee7a052-a2fa-4fd6-b950-d8c2711a91a1.png?ex=66340351&is=66218e51&hm=8b648e2de27be35bdc92fa97e434e736e7cdb4a82902fbe41f43d0a37d8335ee&
17:28 < bridge_> <rootjie> looks uglier on tab tho :(
17:46 < bridge_> <milkeeycat> why was the order changed btw?
17:46 < bridge_> <Jupstar âœª> apparently to make it easier to distinguish between the teams
17:51 < bridge_> <Jupstar âœª> @milkeeycat what happens if you skill necromancer on max level?
17:52 < bridge_> <milkeeycat> wot
17:52 < bridge_> <milkeeycat> xd
17:52 < bridge_> <Jupstar âœª> correct answer
17:52 < bridge_> <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1231271299700232253/necro.mp4?ex=663659c1&is=6623e4c1&hm=5a9601c73c6653fcd2f2e623a6d814baf9e3067d9cdf5366b81fe822177ad88f&
17:53 < bridge_> <milkeeycat> ```rust
17:53 < bridge_> <milkeeycat> pub fn new(op: BinOp, left: Option<Box<Self>>, right: Option<Box<Self>>) -> Self {
17:53 < bridge_> <milkeeycat>   Self { op, left, right }
17:53 < bridge_> <milkeeycat> }
17:53 < bridge_> <milkeeycat> ```
17:53 < bridge_> <milkeeycat> would you use `Self` as type or write type name? :thonk:
17:53 < bridge_> <Jupstar âœª> i'd write Self
17:54 < bridge_> <milkeeycat> now make binds system for 10+ dummies
17:54 < bridge_> <Jupstar âœª> lmao
17:55 < bridge_> <milkeeycat> and add vim motions to chat ðŸ˜¬
17:57 < bridge_> <sans._.> Hello, I've got a question about @DDNet, how is it able to find people online? I am trying to make an npm package which should facilitate all things about ddnet and seeing that I want to also implement some sort of PlayerFinder class, but I am not sure how it's done
17:57 < bridge_> <sans._.> Hello, I've got a question about @DDNet, how is it able to find people online? I am trying to make an npm package which should facilitate all things about ddnet and ddnet data and seeing that I want to also implement some sort of PlayerFinder class, but I am not sure how it's done
17:58 < bridge_> <Jupstar âœª> u mean in server browser?
17:58 < bridge_> <sans._.> no, i meant this
17:58 < bridge_> <sans._.> $find Sans3108
17:58 < bridge_> <DDNet> Found 1 server(s) with "Sans3108" currently playing:
17:58 < bridge_> <DDNet> 1. Server: DDNet RUS - Moderate â€” Link: <https://ddnet.org/connect-to/?addr=37.230.210.231:8340/>
17:59 < bridge_> <Jupstar âœª> but that is probably using the server browser information
17:59 < bridge_> <Jupstar âœª> https://master1.ddnet.org/ddnet/15/servers.json
17:59 < bridge_> <Jupstar âœª> ^ here are all currently playing players
17:59 < bridge_> <Jupstar âœª> all server etc,
17:59 < bridge_> <sans._.> all of them from 1 single master server?
17:59 < bridge_> <sans._.> that makes stuff easier, nice
17:59 < bridge_> <Jupstar âœª> yep ðŸ˜„
18:34 < bridge_> <sans._.> I'm having a bit of trouble finding the script/part of the code that sends the final response, I want to inspect it so I know what types I'm working with as well as construct a schema that I can use to validate the data
18:34 < bridge_> <sans._.> Do you know where can I find it?
18:38 < bridge_> <Jupstar âœª> i think every server can send what they want to a certain extend
18:38 < bridge_> <Jupstar âœª> but you could look how the client parses it
18:39 < bridge_> <sans._.> I've noticed that with some other parts of the api ðŸ˜„ 
18:39 < bridge_> <sans._.> Still, there should be some code that constructs that json, and I think it might help me better understand it
18:39 < bridge_> <sans._.> but I'm not sure where to find it
18:40 < bridge_> <Jupstar âœª> https://github.com/ddnet/ddnet/blob/a00d6a311971cafe96f2ec7baf9637a9c5989be4/src/engine/client/serverbrowser_http.cpp#L258-L269
18:40 < bridge_> <Jupstar âœª> sadly i cannot tell you where in the server it happens. simply search for http_register or similar
18:42 < bridge_> <Jupstar âœª> i mostly work client side
18:42 < bridge_> <sans._.> alright, thank you! :tip:
18:42 < bridge_> <murpi> https://github.com/ddnet/ddnet-discordbot/blob/master/cogs/playerfinder.py
18:43 < bridge_> <murpi> the entire bot is open source
18:43 < bridge_> <sans._.> I've seen that, hence my question, thanks
23:40 < bridge_> <sans._.> What's this about?
23:40 < bridge_> <sans._.> 
23:40 < bridge_> <sans._.> maxTime isn't being used where I'm assuming it should be, instead minTime is used for both keys, is this intended? 
23:40 < bridge_> <sans._.> [maps.py](<https://github.com/ddnet/ddnet-scripts/blob/master/servers/scripts/maps.py>)
23:40 < bridge_> <sans._.> https://cdn.discordapp.com/attachments/293493549758939136/1231358833159438376/image.png?ex=6636ab47&is=66243647&hm=6772ec2083b101406e06e86a6931ff75f367ab6a484f2dd75ce744417e37a389&
23:40 < bridge_> <sans._.> What's this about?
23:40 < bridge_> <sans._.> 
23:40 < bridge_> <sans._.> maxTime isn't being used where I'm assuming it should be, instead minTime is used for both keys, is this intended? 
23:40 < bridge_> <sans._.> right here: [maps.py](<https://github.com/ddnet/ddnet-scripts/blob/master/servers/scripts/maps.py>)
23:40 < bridge_> <sans._.> https://cdn.discordapp.com/attachments/293493549758939136/1231358833159438376/image.png?ex=6636ab47&is=66243647&hm=6772ec2083b101406e06e86a6931ff75f367ab6a484f2dd75ce744417e37a389&
23:54 < bridge_> <Ewan> should have naded down ðŸ˜”
