00:00 <+bridge> [ddnet] <heinrich5991> not sure
00:00 <+bridge> [ddnet] <Learath2> We shouldn't be using the ban list for blocking reflections anyway
00:00 <+bridge> [ddnet] <noby> lightens load during inforequest flood
00:00 <+bridge> [ddnet] <noby> for attacks it should be part of fw not banlist i guess
00:03 <+bridge> [ddnet] <noby> and i guess at ~50 of the bans or so are just undetected vpn ranges
00:04 <+bridge> [ddnet] <Jupstar ✪> @TsFreddie 🌈 have u tried btw? 
00:04 <+bridge> [ddnet] <Jupstar ✪> the algorithm generally has O(n), but in real world scenario its O(n)  + the character bitmap size, maybe in worst case a 2xO(n)
00:05 <+bridge> [ddnet] <Jupstar ✪> @TsFreddie 🌈 you use bin packing?
00:05 <+bridge> [ddnet] <TsFreddie> yes, it was better (7ms) and yes i'm using bin packing
00:06 <+bridge> [ddnet] <TsFreddie> skyline bottom left. heard it from you guys
00:10 <+bridge> [ddnet] <Jupstar ✪> mhh ok
00:11 <+bridge> [ddnet] <Jupstar ✪> its just called like 5 times as much, but ok 2048 is unfair xDDD
00:11 <+bridge> [ddnet] <TsFreddie> just use larger texture™️
00:13 <+bridge> [ddnet] <Jupstar ✪> i would if there wouldnt be plp with gl 1.x, i fear a bit that their pcs will suffer from it
00:14 <+bridge> [ddnet] <TsFreddie> :EeveeShy:
00:14 <+bridge> [ddnet] <Jupstar ✪> @TsFreddie 🌈 anyway, have u found out why getchar is called twice?
00:14 <+bridge> [ddnet] <Jupstar ✪> thats a problem too
00:14 <+bridge> [ddnet] <TsFreddie> not really
00:15 <+bridge> [ddnet] <Jupstar ✪> strange :/
00:15 <+bridge> [ddnet] <TsFreddie> but I do know `Grow` is pretty stupid
00:16 <+bridge> [ddnet] <Jupstar ✪> what do u mean by that
00:16 <+bridge> [ddnet] <TsFreddie> the outline texture
00:16 <+bridge> [ddnet] <Jupstar ✪> ah
00:16 <+bridge> [ddnet] <TsFreddie> https://cdn.discordapp.com/attachments/293493549758939136/754827872358629383/unknown.png
00:16 <+bridge> [ddnet] <TsFreddie> mine spend more than half of the time just doing the outline.
00:17 <+bridge> [ddnet] <Jupstar ✪> yeah thats huge
00:17 <+bridge> [ddnet] <TsFreddie> idk if freetype stroker would be faster
00:17 <+bridge> [ddnet] <Jupstar ✪> or maybe in the GPU shader directly xd
00:17 <+bridge> [ddnet] <TsFreddie> or that
00:17 <+bridge> [ddnet] <TsFreddie> if you can drop gl1
00:18 <+bridge> [ddnet] <Jupstar ✪> but grow could be optimized by just taking the grow param with how much it should grow
00:18 <+bridge> [ddnet] <deen> @TsFreddie 🌈 did you test if https://github.com/ddnet/ddnet/pull/2818 helps btw?
00:18 <+bridge> [ddnet] <TsFreddie> plus MSDF, you won't need that many font sizes
00:19 <+bridge> [ddnet] <TsFreddie> @deen sorry, just went bed:EeveeShy:
00:19 <+bridge> [ddnet] <Jupstar ✪> but renderglyph isnt cvalled by fallback
00:19 <+bridge> [ddnet] <deen> @TsFreddie 🌈 np, it's quit late 😄
00:19 <+bridge> [ddnet] <Jupstar ✪> and i don't see anything suspicious
00:35 <+bridge> [ddnet] <Jupstar ✪> i get same count
00:35 <+bridge> [ddnet] <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/754832650711203910/unknown.png
00:35 <+bridge> [ddnet] <Jupstar ✪> with a shorter sentence tho
00:36 <+bridge> [ddnet] <Jupstar ✪> can vanilla still only handle 128 chars in chat?
00:36 <+bridge> [ddnet] <Jupstar ✪> or maybe less than ddnet
00:36 <+bridge> [ddnet] <Jupstar ✪> maybe somewhere there is the difference
00:38 <+bridge> [ddnet] <Jupstar ✪> @TsFreddie 🌈 when u on tomorrow, you maybe check if the sentence is displayed 100% the same 😄 else i really dunno what the difference should be
00:40 <+bridge> [ddnet] <TsFreddie> > can vanilla still only handle 128 chars in chat?
00:40 <+bridge> [ddnet] <TsFreddie> @Jupstar ✪ yes, but I only rendered like 30 glyphs for both. they displayed the same.
00:40 <+bridge> [ddnet] <TsFreddie> maybe the profiler lied
00:40 <+bridge> [ddnet] <Jupstar ✪> or the name of your tee was uploaded too
00:41 <+bridge> [ddnet] <TsFreddie> my name aren't 30 glyphs long tho.
00:41 <+bridge> [ddnet] <Jupstar ✪> xd
00:41 <+bridge> [ddnet] <TsFreddie> anyway i'll _probably_ keep checking tomorrow
00:41 <+bridge> [ddnet] <Jupstar ✪> yeah maybe also without fullscreen
00:42 <+bridge> [ddnet] <Jupstar ✪> i think it only worked on linux, but i know that resizing will reset some stuff
00:42 <+bridge> [ddnet] <TsFreddie> it was borderless windowed :watermeron:
00:42 <+bridge> [ddnet] <Jupstar ✪> and (atleast on my linux) minimize is also resizing 😄
00:42 <+bridge> [ddnet] <Jupstar ✪> ah ok
00:42 <+bridge> [ddnet] <Jupstar ✪> then i dunno xD
00:42 <+bridge> [ddnet] <TsFreddie> on windows you can't even tab out if a breakpoint hit
00:43 <+bridge> [ddnet] <Jupstar ✪> maybe ddnet renders a magical spell in background
00:43 <+bridge> [ddnet] <TsFreddie> at least my pc can't
00:43 <+bridge> [ddnet] <TsFreddie> so I don't run debugger with fullscreen app lol
00:43 <+bridge> [ddnet] <Jupstar ✪> ah ok, strange i always had the opposite
00:43 <+bridge> [ddnet] <TsFreddie> OS magic
00:43 <+bridge> [ddnet] <Jupstar ✪> for me it always only worked in windows, in linux i have to press META(windows key) + D, to get my cursor back xD
02:22 <+bridge> [ddnet] <Андрей Рудой> What do you think of implementing permamute feature? Some kid just rejoins his dummy and gets unmuted each time he reconnecta it
02:22 <+bridge> [ddnet] <noby> its add_foe
02:22 <+bridge> [ddnet] <Андрей Рудой> In console?
02:23 <+bridge> [ddnet] <noby> yes f1 add_foe name
02:23 <+bridge> [ddnet] <Андрей Рудой> And how UI muting way does work?
02:23 <+bridge> [ddnet] <noby> idk it resets
07:37 <+bridge> [ddnet] <deen> @Jupstar ✪  @TsFreddie 🌈 ah, I think I know the reason. DDNet displays the text with a shadow
07:39 <+bridge> [ddnet] <TsFreddie> ah. but shouldn't it stored the uv of glyphs in the first pass already? so the second pass shouldnt call renderglyph again. sounds like a bug.
07:40 <+bridge> [ddnet] <TsFreddie> if you are talking about getchar then, ye that make sense.
07:40 <+bridge> [ddnet] <deen> But isn't the shadow larger than the original?
07:40 <+bridge> [ddnet] <deen> yes, about getchar
07:40 <+bridge> [ddnet] <TsFreddie> the are processed in one pass
07:40 <+bridge> [ddnet] <TsFreddie> in renderglyph
07:40 <+bridge> [ddnet] <deen> oh, ok
07:40 <+bridge> [ddnet] <TsFreddie> with that grow function
11:34 <+bridge> [ddnet] <Brokecdx-> https://gyazo.com/a136f3cd58ee5c16ae79c6c99a8accf7 Doesnt show teamranks after finish
11:49 <+bridge> [ddnet] <TsFreddie> https://cdn.discordapp.com/attachments/293493549758939136/755002347419205683/unknown.png
12:54 <+bridge> [ddnet] <TsFreddie> https://cdn.discordapp.com/attachments/293493549758939136/755018685881647117/unknown.png
12:55 <+bridge> [ddnet] <TsFreddie> freetype stroker for outline is definitely faster
12:55 <+bridge> [ddnet] <TsFreddie> https://cdn.discordapp.com/attachments/293493549758939136/755018804022738982/unknown.png
12:57 <+bridge> [ddnet] <Learath2> But if something you changed makes outlines cost more, then switching to a cheaper algorithm to create the outlines is only masking the performance degradation, no?
12:59 <+bridge> [ddnet] <TsFreddie> i think the performance drop recently is a separate issue
12:59 <+bridge> [ddnet] <TsFreddie> i'm just saying the `Grow` function should go.
13:00 <+bridge> [ddnet] <Learath2> Probably, but be careful not to forget that there is another issue
13:00 <+bridge> [ddnet] <TsFreddie> i mean i'm working on vanilla rn :EeveeShy:
13:01 <+bridge> [ddnet] <TsFreddie> i can port everything i find back to ddnet later
13:02 <+bridge> [ddnet] <TsFreddie> nvm, i'll take a look at ddnet rn. since it is pretty bad on eki's machine.
13:02 <+bridge> [ddnet] <Learath2> Traitor :catGun:
13:02 <+bridge> [ddnet] <TsFreddie> :thonk:
13:03 <+bridge> [ddnet] <TsFreddie> aren't you the one supporting me rewriting everything in the vanilla discord
13:04  * bridge [ddnet] <Learath2> is a double agent
13:04 <+bridge> [ddnet] <TsFreddie> it is coming along pretty nicely. it barely drop any frames when rendering `dbg_tuning` now, which has quite a lot of text
13:04 <+bridge> [ddnet] <Learath2> Nice, how much are you caching?
13:04 <+bridge> [ddnet] <TsFreddie> haven't rewrite chat and console yet so we'll see.
13:04 <+bridge> [ddnet] <TsFreddie> depends. I can't cache anything on UI
13:05 <+bridge> [ddnet] <TsFreddie> every static text is cached
13:05 <+bridge> [ddnet] <TsFreddie> but immediate mode is already much faster than before
13:05 <+bridge> [ddnet] <TsFreddie> every static text is cached on HUD
13:05 <+bridge> [ddnet] <Learath2> Why can't you cache anything on UI? I'd guess that's where you'll have the most improvement
13:06 <+bridge> [ddnet] <Learath2> Chat, console and menus have the most cacheable text
13:06 <+bridge> [ddnet] <TsFreddie> UI uses a DoLabel wrapper. The way i'm caching quads are just use static CTextCursor. so it can be reused.
13:06 <+bridge> [ddnet] <TsFreddie> chat console should be fine with caching.
13:07 <+bridge> [ddnet] <TsFreddie> UI needs more work to do the same stuff. but i think it is not the top priority since you usually don't look at menus when playing.
13:07 <+bridge> [ddnet] <TsFreddie> Menus needs more work to do the same stuff. but i think it is not the top priority since you usually don't look at menus when playing.
13:07 <+bridge> [ddnet] <TsFreddie> Menus needs more work to do the cache stuff. but i think it is not the top priority since you usually don't look at menus when playing.
13:08 <+bridge> [ddnet] <TsFreddie> And since you have access to every quad position after a text call. Text selection should be easier by just searching quad position in relation to cursor
13:09 <+bridge> [ddnet] <Jupstar ✪> Can also optimize grow function to be only called once
13:09 <+bridge> [ddnet] <TsFreddie> just use stroker
13:09 <+bridge> [ddnet] <Learath2> Did you see my text selection patch for vanilla? I don't really like it at all, feels soo bolted on
13:09 <+bridge> [ddnet] <TsFreddie> you don't need grow anymore
13:10 <+bridge> [ddnet] <Jupstar ✪> And have u any resource what freetype doing there
13:10 <+bridge> [ddnet] <TsFreddie> what have me resource
13:11 <+bridge> [ddnet] <Jupstar ✪> What the performance impact is
13:11 <+bridge> [ddnet] <TsFreddie> all i know it is faster than grow in profiler
13:11 <+bridge> [ddnet] <Jupstar ✪> Yes but what when grow is only called once
13:12 <+bridge> [ddnet] <TsFreddie> but you'll need to make a better convolution algorithm tho?
13:12 <+bridge> [ddnet] <Jupstar ✪> But the text outline is barely visible
13:13 <+bridge> [ddnet] <TsFreddie> larger text need larger outline
13:13 <+bridge> [ddnet] <TsFreddie> that's why grow is called multiple times
13:13 <+bridge> [ddnet] <Jupstar ✪> Yeah
13:13 <+bridge> [ddnet] <TsFreddie> if you only care about chat then ye. you can just call grow once
13:13 <+bridge> [ddnet] <Jupstar ✪> I know but u know how much it grows
13:13 <+bridge> [ddnet] <Jupstar ✪> So I don't see a problem
13:13 <+bridge> [ddnet] <Learath2> @Jupstar ✪ I'd be very surprised if a text library used by thousands of products is doing worse than us
13:13 <+bridge> [ddnet] <TsFreddie> i don't think a convolution works like that
13:14 <+bridge> [ddnet] <Jupstar ✪> Optimize it...
13:14 <+bridge> [ddnet] <Jupstar ✪> Not leave as is
13:14 <+bridge> [ddnet] <Learath2> Why bother optimizing it when it's already optimized for us and in a library that we already link to
13:14 <+bridge> [ddnet] <TsFreddie> ^ ths
13:14 <+bridge> [ddnet] <TsFreddie> besides freetype stroker produce much cleaner outline
13:14 <+bridge> [ddnet] <Jupstar ✪> @Learath2 if it's interpolating..
13:15 <+bridge> [ddnet] <TsFreddie> :thonk: we can do both. and see which is better. but i'm not optimizing that shit personally tho.
13:16 <+bridge> [ddnet] <Learath2> I don't get why that's an issue
13:17 <+bridge> [ddnet] <TsFreddie> anyway other than outline, there should be another issue. i'll try taking a look rn
13:30 <+bridge> [ddnet] <Jupstar ✪> > @Jupstar ✪ I'd be very surprised if a text library used by thousands of products is doing worse than us
13:30 <+bridge> [ddnet] <Jupstar ✪> @Learath2 btw, just yesterday we found out that FT_NEW_FACE keeps the file open on windows. so it trades execution time for 16MB of RAM 😄
13:30 <+bridge> [ddnet] <Jupstar ✪> so its not really an argument, only math is
13:31 <+bridge> [ddnet] <TsFreddie> keeping file open doesn't mean it is taking memory space
13:31 <+bridge> [ddnet] <Jupstar ✪> yes
13:31 <+bridge> [ddnet] <Jupstar ✪> thats what i said
13:31 <+bridge> [ddnet] <Jupstar ✪> it rather keeps the file open instead of loading it
13:32 <+bridge> [ddnet] <TsFreddie> :thonk:
13:32 <+bridge> [ddnet] <Jupstar ✪> but fact is, accessing HDDs is insanly slow
13:32 <+bridge> [ddnet] <Learath2> Are you sure? That sounds quite stupid
13:32 <+bridge> [ddnet] <Jupstar ✪> https://github.com/ddnet/ddnet/pull/2818
13:33 <+bridge> [ddnet] <TsFreddie> should i give it a profiler treatment?
13:33 <+bridge> [ddnet] <Jupstar ✪> yes, you can do it
13:34 <+bridge> [ddnet] <Jupstar ✪> but i doubt freetype, used by thousand of ppl, would do somekind of binary search to find its keys XD
13:34 <+bridge> [ddnet] <Jupstar ✪> but i doubt freetype, used by thousand of ppl, wouldnt do somekind of binary search to find its keys XD
13:34 <+bridge> [ddnet] <Jupstar ✪> so the chance isnt small that it actually loads from HDD causing over 1 second of lag
13:34 <+bridge> [ddnet] <TsFreddie> oh right i don't have a hdd
13:35 <+bridge> [ddnet] <TsFreddie> nvm
13:36 <+bridge> [ddnet] <TsFreddie> :thonk: but wait
13:36 <+bridge> [ddnet] <TsFreddie> what do you mean binary search?
13:37 <+bridge> [ddnet] <TsFreddie> font have charmap. the encoding map should be loaded. and you get the glyph index out of the charmap, and it should be able to just seek once and pull the glyph
13:38 <+bridge> [ddnet] <TsFreddie> but again, pulling multiple glyphs at once might be slower. but i doubt it would seek the disk more than once to find a glyph
13:39 <+bridge> [ddnet] <TsFreddie> Truetype and Opentype containers aren't designed to be stupid :doggo_lol:
13:39 <+bridge> [ddnet] <Jupstar ✪> yes
13:39 <+bridge> [ddnet] <Jupstar ✪> i know, but why would such a thing cause 1second lag?
13:39 <+bridge> [ddnet] <TsFreddie> it is confirmed?
13:39 <+bridge> [ddnet] <TsFreddie> by eki?
13:39 <+bridge> [ddnet] <Jupstar ✪> yes
13:40 <+bridge> [ddnet] <Jupstar ✪> he even posted a video
13:40 <+bridge> [ddnet] <Jupstar ✪> > Only when I receive message full with CJK characters which had not encountered before, I feel lag. Repeated CJK characters message didn't make me lag. I upload a video to youtube https://youtu.be/et_SsWyCd5U?t=27 . The lag is begin at 0:26.
13:40 <+bridge> [ddnet] <Jupstar ✪> > 
13:40 <+bridge> [ddnet] <Jupstar ✪> > And I found maybe most of the older player use old version of DDNet Client, so they did not encount this issue. When most of new player use steam client, they may think it is normal behavior.
13:40 <+bridge> [ddnet] <TsFreddie> i know about the lag
13:40 <+bridge> [ddnet] <TsFreddie> is the fix confirmed?
13:40 <+bridge> [ddnet] <TsFreddie> to solve the problem?
13:40 <+bridge> [ddnet] <Jupstar ✪> no, but else, freetype must be really slow finding its glyphs
13:41 <+bridge> [ddnet] <Jupstar ✪> and i mean realllyy slooww
13:41 <+bridge> [ddnet] <TsFreddie> you can't just say freetype causes 1 sec of lag when you haven't fully checked your own impl.
13:41 <+bridge> [ddnet] <Jupstar ✪> i know that the impl is doing a bit more since fallback
13:41 <+bridge> [ddnet] <Jupstar ✪> but that would never explain such a huge lag
13:42 <+bridge> [ddnet] <Jupstar ✪> and then again, why would a freetype api call be so costly
13:43 <+bridge> [ddnet] <TsFreddie> are you sure there aren't other things holding back the performance in the fallback code?
13:43 <+bridge> [ddnet] <Jupstar ✪> as i said
13:43 <+bridge> [ddnet] <Jupstar ✪> at worst it loads a char twice
13:43 <+bridge> [ddnet] <Learath2> Without profiling you are all just making wild guesses
13:43 <+bridge> [ddnet] <Jupstar ✪> but that wouldnt cost 1 second of lag
13:44 <+bridge> [ddnet] <TsFreddie> but eki doesn't see any lag pre fallback. aren't the freetype calls the same?
13:44 <+bridge> [ddnet] <Jupstar ✪> yes but the font was like 1mb
13:44 <+bridge> [ddnet] <Jupstar ✪> not 16mb
13:44 <+bridge> [ddnet] <Jupstar ✪> iterating thorugh it is obviously slow
13:44 <+bridge> [ddnet] <TsFreddie> :thonk:
13:45 <+bridge> [ddnet] <Jupstar ✪> and otf is often even smaller than ttf
13:45 <+bridge> [ddnet] <Jupstar ✪> so 1mb ttf vs 16mb otf 😄
13:45 <+bridge> [ddnet] <Learath2> There is no way they iterate through that many glyphs
13:46 <+bridge> [ddnet] <Jupstar ✪> no but accessing the file on a HDD is still a problem
13:46 <+bridge> [ddnet] <Jupstar ✪> even if they binary search over it
13:46 <+bridge> [ddnet] <Learath2> Yeah, let's see if loading it into the memory helps
13:47 <+bridge> [ddnet] <Jupstar ✪> if its not, we cant use that font probs, bcs then its even slow on memory
13:47 <+bridge> [ddnet] <Jupstar ✪> but even with 64k glyphs it should have max. 16 iterations to find the glyph
13:48 <+bridge> [ddnet] <TsFreddie> :thonk: but other software using freetype don't have that problem?
13:48 <+bridge> [ddnet] <Jupstar ✪> well either they use memory fonts
13:48 <+bridge> [ddnet] <Jupstar ✪> or u just dont notice it
13:48 <+bridge> [ddnet] <TsFreddie> you know what. i'll nuke the grow function rn and sent it to eki as well
13:48 <+bridge> [ddnet] <Learath2> We can also try memory mapping the font file
13:49 <+bridge> [ddnet] <Learath2> Grow doesn't look like something that would cause spikes though
13:49 <+bridge> [ddnet] <Jupstar ✪> ofc not
13:49 <+bridge> [ddnet] <TsFreddie> not if you grow like 100+ times in one frame
13:49 <+bridge> [ddnet] <Jupstar ✪> nothing inside a cpu/ram should cause such lags
13:49 <+bridge> [ddnet] <Jupstar ✪> it really needs to be a heavy algorithm
13:50 <+bridge> [ddnet] <TsFreddie> but grow is literally O(wh)
13:50 <+bridge> [ddnet] <Jupstar ✪> grow is slow
13:50 <+bridge> [ddnet] <TsFreddie> bitmap isn't that small
13:50 <+bridge> [ddnet] <Jupstar ✪> but it iterates over like 50x50
13:50 <+bridge> [ddnet] <Jupstar ✪> thats nothing
13:50 <+bridge> [ddnet] <TsFreddie> how about we try it anyway
13:50 <+bridge> [ddnet] <Jupstar ✪> even if u do it 10000 times
13:50 <+bridge> [ddnet] <TsFreddie> or are you telling me not even bother
13:50 <+bridge> [ddnet] <Jupstar ✪> i think a rewrite is nice @TsFreddie 🌈
13:51 <+bridge> [ddnet] <Learath2> Well this kind of spikes happen with sub optimally growing vectors e.g. so you can get it to happen even on the cpu
13:51 <+bridge> [ddnet] <Jupstar ✪> bcs every wasted performance is still wasted
13:51 <+bridge> [ddnet] <Jupstar ✪> @Learath2 yeah but by freetype? xd
13:51 <+bridge> [ddnet] <TsFreddie> :thonk:
13:51 <+bridge> [ddnet] <Learath2> I'd look at our code before I look at theirs
13:51 <+bridge> [ddnet] <Jupstar ✪> our vectors built just as before 😄
13:52 <+bridge> [ddnet] <Jupstar ✪> the only thing changes is, that it loads from 2 freetype faces and that it uses a different font
13:52 <+bridge> [ddnet] <Learath2> Revision: I'd look at the profiler output before anything
13:52 <+bridge> [ddnet] <TsFreddie> the profiler says RenderGlyph spend half of its life time on Grow yesterday
13:52 <+bridge> [ddnet] <TsFreddie> at least on mine impl.
13:52 <+bridge> [ddnet] <TsFreddie> i'll profile ddnet rn
13:53 <+bridge> [ddnet] <Jupstar ✪> @TsFreddie 🌈 yes its 100% slow function, and it should be optimized, i totally agree 😄
13:53 <+bridge> [ddnet] <Jupstar ✪> you can do what it does in one call
13:53 <+bridge> [ddnet] <TsFreddie> I literally cut mine from 28ms to 7ms by replacing it with freetype.. but sure if you want to rewrite the thing then do it.
13:54 <+bridge> [ddnet] <TsFreddie> i'm not spending that time rn
13:54 <+bridge> [ddnet] <Jupstar ✪> the only thing i fear is, that freetype is doing too well
13:54 <+bridge> [ddnet] <Jupstar ✪> we dont need cubic outline
13:54 <+bridge> [ddnet] <TsFreddie> I just want to see if replacing it with freetype would help eki
13:54 <+bridge> [ddnet] <TsFreddie> if it does then yeah, you can optimize it better
13:54 <+bridge> [ddnet] <TsFreddie> if it doesn't we look elsewhere
13:55 <+bridge> [ddnet] <TsFreddie> is it that unreasonable
13:55 <+bridge> [ddnet] <TsFreddie> or am i being dumb
14:49 <+bridge> [ddnet] <Pure_luck> @heinrich5991 wow, you're using wireshark for teehistorian. How cool
14:52 <+bridge> [freenode] <b3z> Does anyone know FuN~EleFaNt and have some contact details of him?
15:09 <+bridge> [ddnet] <Pure_luck> b3z, do you want to get battlefield mode sources from him?
15:10 <+bridge> [ddnet] <Pure_luck> b3z, do you want to get battlefield mod sources from him?
15:25 <+bridge> [ddnet] <deen> @Brokecdx- it takes an hour to refresh
15:25 <+bridge> [ddnet] <Brokecdx-> kk
15:27 <+bridge> [ddnet] <deen> @TsFreddie 🌈 @Learath2 @Jupstar ✪ He confirmed that it's faster when we load it from memory
15:27 <+bridge> [ddnet] <Jupstar ✪> @TsFreddie 🌈 so if u want to load from memory for vanilla too
15:27 <+bridge> [ddnet] <TsFreddie> :thonk: already did
15:27 <+bridge> [ddnet] <Jupstar ✪> 😄
15:29 <+bridge> [ddnet] <Jupstar ✪> @BannZay do u want to fix the entity text?
15:34 <+bridge> [ddnet] <Eki> yes when it seem much more better than before
15:34 <+bridge> [ddnet] <Eki> yes it seem much more better than before
15:39 <+bridge> [ddnet] <TsFreddie> https://cdn.discordapp.com/attachments/293493549758939136/755060066469543956/unknown.png
15:43 <+bridge> [ddnet] <TsFreddie> is this clear what it is doing?
15:44 <+bridge> [ddnet] <TsFreddie> i don't want it to be too confusing, since textrender does work differently from before.
15:45 <+bridge> [ddnet] <Learath2> @Eki how much better? Is there still lag?
15:45 <+bridge> [ddnet] <TsFreddie> "Silky smooth"
15:45 <+bridge> [ddnet] <TsFreddie> https://cdn.discordapp.com/attachments/293493549758939136/755061768983805952/unknown.png
15:48 <+bridge> [ddnet] <TsFreddie> ~~DM leak~~
15:50 <+bridge> [ddnet] <Learath2> Nice, we should probably memory map the large file
15:50 <+bridge> [ddnet] <deen> I prefer reading it in once over mmap
15:50 <+bridge> [ddnet] <deen> The most important thing is that we don't start doing disk IO during gameplay
15:51 <+bridge> [ddnet] <deen> 16 MB in memory is not too bad
15:52 <+bridge> [ddnet] <Learath2> Hm, I don't think mmap would lazy load it either
15:52 <+bridge> [ddnet] <deen> Isn't that the whole idea of mmap?
15:53 <+bridge> [ddnet] <Learath2> Ah, it does by default, I was thinking of MAP_POPULATE
15:53 <+bridge> [ddnet] <Learath2> anyway, 16M isn't too bad, malloc should put it somewhere sane too
15:56 <+bridge> [ddnet] <Jupstar ✪> can we document what is required for using clang format
15:56 <+bridge> [ddnet] <Jupstar ✪> i mean, what to execute
15:56 <+bridge> [ddnet] <Jupstar ✪> "python scripts/fix_style.py --base HEAD"
15:58 <+bridge> [ddnet] <Jupstar ✪> @TsFreddie 🌈 the funny thing about grow is, you dont even need to change alot xD
15:58 <+bridge> [ddnet] <Jupstar ✪> ```
15:58 <+bridge> [ddnet] <Jupstar ✪>                 for(int sy = -OutlineCount; sy <= OutlineCount; sy++)
15:59 <+bridge> [ddnet] <Jupstar ✪>                     for(int sx = -OutlineCount; sx <= OutlineCount; sx++)```
15:59 <+bridge> [ddnet] <Jupstar ✪> all i did is passing the outline and changing the check
15:59 <+bridge> [ddnet] <Jupstar ✪> still looks normal to me
16:00 <+bridge> [ddnet] <TsFreddie> :thonk:
16:02 <+bridge> [ddnet] <deen> @Jupstar ✪ yeah, I think when something is wrong, there should be a big fat message telling the developer how to fix it automatically. @heinrich5991 could you take care of that?
16:04 <+bridge> [ddnet] <deen> @Learath2 can we just use your warning popup to display all unexpected io permission problems?
16:04 <+bridge> [ddnet] <Learath2> I didn't put any limitation on it, idk how jupstar ended up changing it, but it shouldn't be too hard to make the text change
16:04 <+bridge> [ddnet] <deen> Yeah, I used it already for something
16:04 <+bridge> [ddnet] <Jupstar ✪> it only displays ingane i think
16:05 <+bridge> [ddnet] <Jupstar ✪> oh
16:05 <+bridge> [ddnet] <deen> I used it in menu I think 😄
16:05 <+bridge> [ddnet] <Jupstar ✪> ok then it just checks if no other popup is blocking
16:05 <+bridge> [ddnet] <deen> I used it for `"Server executable not found, can't run server"`
16:05 <+bridge> [ddnet] <deen> in the start menu
16:05 <+bridge> [ddnet] <Learath2> Though, popups should probably be a layer on top of all other layers and not part of the menu
16:07 <+bridge> [ddnet] <deen> @Learath2 also, can we get https://github.com/ddnet/ddnet/pull/2819 in? Otherwise there are no nightly builds
16:13 <+bridge> [ddnet] <BannZay> > @BannZay do u want to fix the entity text?
16:13 <+bridge> [ddnet] <BannZay> @Jupstar ✪ yea, I will try if none started to work with it
16:14 <+bridge> [ddnet] <Jupstar ✪> i can also do it
16:15 <+bridge> [ddnet] <Jupstar ✪> just fear to run the style check xDDDDD
16:19 <+bridge> [ddnet] <BannZay> okay then. I guess you'll done it in a better way
16:20 <+bridge> [ddnet] <BannZay> then me
16:20 <+bridge> [ddnet] <BannZay> than me
16:22 <+bridge> [ddnet] <BannZay> why wouldnt we run script on all ddnet to fix the styles ? To avoid huge merges?
16:22 <+bridge> [ddnet] <BannZay> why wouldnt we run script on ddnet solution to fix all style issues ? To avoid huge merges?
16:23 <+bridge> [ddnet] <BannZay> why wouldnt we run script on ddnet solution to fix all style issues ? Beacause it leads to big amount of merges?
16:23 <+bridge> [ddnet] <Jupstar ✪> i think it changed around 15k lines and few things didnt look well
16:24 <+bridge> [ddnet] <Learath2> ^^ It creates a massive diff
16:24 <+bridge> [ddnet] <Jupstar ✪> #2791
16:24 <+bridge> [ddnet] <DDNet> https://github.com/ddnet/ddnet/pull/2791
16:24 <+bridge> [ddnet] <deen> Not sure if it's better to do it in each change though
16:24 <+bridge> [ddnet] <deen> Now it becomes impossible to find the actual change inbetween the style changes
16:24 <+bridge> [ddnet] <Learath2> @deen you can ignore whitespace changes on github
16:24 <+bridge> [ddnet] <deen> so it should at least be done in separate commits
16:24 <+bridge> [ddnet] <Jupstar ✪> just ignore style check xdd
16:24 <+bridge> [ddnet] <Learath2> not optimal but you can
16:26 <+bridge> [ddnet] <Learath2> It's either this or we just don't enforce any styling
16:26 <+bridge> [ddnet] <deen> or do it one large change
16:26 <+bridge> [ddnet] <a gerdoe> fix_style should be ran only on new version tag imo
16:26 <+bridge> [ddnet] <BannZay> fixing 1 by 1 annoys a lot of peolpe because they have to fix things they didnt even touch. Just to satisfy build
16:27 <+bridge> [ddnet] <Learath2> https://github.com/ddnet/ddnet/pull/2820/files?diff=unified&w=1 if you omit whitespace changes, it looks fine
16:27 <+bridge> [ddnet] <Learath2> We can do the one massive commit if you prefer, that'll kill git blame though
16:27 <+bridge> [ddnet] <deen> In this case yes,but others no
16:27 <+bridge> [ddnet] <a gerdoe> fix_style should be run only on new version tag imo
16:27 <+bridge> [ddnet] <deen> git blame supports -w too
16:27 <+bridge> [ddnet] <Learath2> Oh, TIL
16:28 <+bridge> [ddnet] <deen> and maybe you can even somehow tell it to exclude specific changes
16:28 <+bridge> [ddnet] <deen> yes, --ignore-rev <rev>
16:28 <+bridge> [ddnet] <Learath2> I guess we can just do the entire repo
16:28 <+bridge> [ddnet] <deen> and even --ignore-revs-file <file> for a list of revisions to ignore
16:28 <+bridge> [ddnet] <Learath2> There were a couple issues with the formatting that should be fixed though
16:29 <+bridge> [ddnet] <deen> I'd give it a try later today to reformat everything and try to keep the changes nicer
16:30 <+bridge> [ddnet] <Learath2> Oh btw, I was wondering the performance of conntrack, but it was all too speculative so now I'm coding a conntrack module for tw
16:30 <+bridge> [ddnet] <deen> @heinrich5991 opinion? ^
16:30 <+bridge> [ddnet] <deen> @Learath2 very cool!
16:30 <+bridge> [ddnet] <Learath2> I fear it will do more harm than good though
16:30 <+bridge> [ddnet] <deen> without the large packet?
16:30 <+bridge> [ddnet] <Learath2> Yeah, just the current protocol we support
16:31 <+bridge> [ddnet] <a gerdoe> #2792
16:31 <+bridge> [ddnet] <DDNet> https://github.com/ddnet/ddnet/issues/2792
16:34 <+bridge> [ddnet] <Learath2> The trojan horse they make you install to have remote exams messes macOS up
16:41 <+bridge> [ddnet] <Jupstar ✪> ```
16:41 <+bridge> [ddnet] <Jupstar ✪> -                                               size_t GlyphOffset = (OffY) * SlotW + OffX;
16:41 <+bridge> [ddnet] <Jupstar ✪> +                                               size_t GlyphOffset = (OffY)*SlotW + OffX;
16:41 <+bridge> [ddnet] <Jupstar ✪> ```
16:41 <+bridge> [ddnet] <Jupstar ✪> why does it do this xd
16:41 <+bridge> [ddnet] <Jupstar ✪> makes it wrose readable
16:46 <+bridge> [ddnet] <deen> @Jupstar ✪ always same number of spaces between operators
16:47 <+bridge> [ddnet] <Jupstar ✪> and why did it remove the space then?
16:47 <+bridge> [ddnet] <Ryozuki> maybe it thinks ) is enough or counts it as a space
16:47 <+bridge> [ddnet] <Jupstar ✪> xd, its just strange xD
16:48 <+bridge> [ddnet] <Ryozuki> `(OffY)*SlotW ` `OffY*SlotW ` i guess it finds the former readable xd
16:57 <+bridge> [ddnet] <Learath2> Huh, is that a cast?
16:58 <+bridge> [ddnet] <Jupstar ✪> no it probs was a calc inside the () some day
16:58 <+bridge> [ddnet] <Learath2> Rather, is it confusing it with one
16:58 <+bridge> [ddnet] <Learath2> It's impossible to control the spacing between operators
17:05 <+bridge> [ddnet] <BannZay> () mean cast? I wonder why result of '(Flags) & CFGFLAG_COLLIGHT' differ from 'Flags & CFGFLAG_COLLIGHT)'
17:06 <+bridge> [ddnet] <BannZay> () mean cast? I wonder why result of '(Flags) & CFGFLAG_COLLIGHT' differ from 'Flags & CFGFLAG_COLLIGHT'
17:06 <+bridge> [ddnet] <Jupstar ✪> it only means cast, if the text inside the paranthesis is a datatype and right from it is some variable
17:06 <+bridge> [ddnet] <Learath2> For it to be a cast, Flag needs to be a datatype
17:06 <+bridge> [ddnet] <Jupstar ✪> sure it isnt (Flags & CFGFLAG_COLLIGHT)?
17:07 <+bridge> [ddnet] <Jupstar ✪> bcs & operator has a weak binding
17:07 <+bridge> [ddnet] <Jupstar ✪> so its safer to pack them into paranthesis
17:08 <+bridge> [ddnet] <Jupstar ✪> https://en.cppreference.com/w/cpp/language/operator_precedence
17:08 <+bridge> [ddnet] <Jupstar ✪> 
17:08 <+bridge> [ddnet] <Jupstar ✪> see 10 and 11
17:08 <+bridge> [ddnet] <Jupstar ✪> != would bind before &
17:11 <+bridge> [ddnet] <BannZay> static CColVariableData Data = { this, &g_Config.m_##Name, static_cast<bool>((Flags) & CFGFLAG_COLLIGHT)
17:12 <+bridge> [ddnet] <Ryozuki> pls use
17:12 <+bridge> [ddnet] <Ryozuki> backsticks
17:12 <+bridge> [ddnet] <Ryozuki> discord messes ur msg
17:13 <+bridge> [ddnet] <Ryozuki> do we rly use { } to initialize structs tho?
17:13 <+bridge> [ddnet] <Ryozuki> i dont think so
17:13 <+bridge> [ddnet] <Learath2> You can, it's fine
17:13 <+bridge> [ddnet] <Ryozuki> ah well its static
17:13 <+bridge> [ddnet] <Ryozuki> yeah but doesnt fit the code
17:14 <+bridge> [ddnet] <Ryozuki> triggers me
17:14 <+bridge> [ddnet] <Ryozuki> xd
17:14 <+bridge> [ddnet] <Learath2> 😛
17:14 <+bridge> [ddnet] <Learath2> Oh I just noticed now, it's my code 😄
17:14 <+bridge> [ddnet] <Ryozuki> why is there ##
17:14 <+bridge> [ddnet] <Ryozuki> is it some macro
17:14 <+bridge> [ddnet] <Ryozuki> ?
17:14 <+bridge> [ddnet] <Learath2> Yep it's inside a macro
17:14 <+bridge> [ddnet] <BannZay> yes
17:15 <+bridge> [ddnet] <BannZay> so we need to cast flags to perform & operator for enum?
17:15 <+bridge> [ddnet] <BannZay> I feels stupid but its still unclear for me
17:15 <+bridge> [ddnet] <Learath2> We don't need to cast anything
17:15 <+bridge> [ddnet] <Learath2> Flags is an integer, the enum members are integers, you just & them together
17:17 <+bridge> [ddnet] <BannZay> so nothing should change if we remove () from Flags ?
17:17 <+bridge> [ddnet] <Jupstar ✪> it would
17:17 <+bridge> [ddnet] <Jupstar ✪> well it depends xd
17:17 <+bridge> [ddnet] <Jupstar ✪> but there could be more than 1 flag
17:18 <+bridge> [ddnet] <Jupstar ✪> CF_SAVE | CF_CLIENT
17:18 <+bridge> [ddnet] <Jupstar ✪> 
17:18 <+bridge> [ddnet] <Jupstar ✪> what do i know and & binds stornger than |
17:18 <+bridge> [ddnet] <BannZay> yes
17:18 <+bridge> [ddnet] <BannZay> but in particular case it will not?
17:18 <+bridge> [ddnet] <BannZay> but in particular case it will not change?
17:18 <+bridge> [ddnet] <Jupstar ✪> if e.g. Flags is an variable
17:19 <+bridge> [ddnet] <Jupstar ✪> it couild be removed
17:19 <+bridge> [ddnet] <Jupstar ✪> if e.g. Flags is a variable
17:24 <+bridge> [ddnet] <BannZay> thx for the explanations guys, there is no magic as I thought xD
17:26 <+bridge> [ddnet] <Soreu> 🧙
17:26 <+bridge> [ddnet] <Ryozuki> 🧙
17:32 <+bridge> [ddnet] <Jupstar ✪> @deen the mapconverter 0_7 should also detect invalid textures, with width of 0 or height of 0
17:32 <+bridge> [ddnet] <Jupstar ✪> appearently the client allows them to load
17:33 <+bridge> [ddnet] <Jupstar ✪> the client shouldn't even allow this
17:33 <+bridge> [ddnet] <Soreu> but how does someone even embedds such mapres lol
17:34 <+bridge> [ddnet] <Jupstar ✪> i dunno xD
17:34 <+bridge> [ddnet] <Jupstar ✪> but that is way too undefined behaviour even for non tile sets
17:35 <+bridge> [ddnet] <Jupstar ✪> malloc can return a pointer or null
17:35 <+bridge> [ddnet] <Jupstar ✪> pretty undefined xd
18:03 <+bridge> [ddnet] <deen> @Jupstar ✪ done
18:07 <+bridge> [ddnet] <Learath2> We don't chunk teeworlds packets, right?
18:07 <+bridge> [ddnet] <Learath2> Or rather, teeworlds chunks
18:07 <+bridge> [ddnet] <Learath2> Are chunks always transmitted in one piece is my question
18:24 <+bridge> [ddnet] <zelda.> hi, i have the rank from the test server on the new novice map (Inure).  when I write /times it says “3 weeks ago” but the map was released yesterday 😅
18:25 <+bridge> [ddnet] <Learath2> Hm, it's really hard to write a heuristic for teeworlds packets, almost any random string of bytes can be a teeworlds packet
18:26 <+bridge> [ddnet] <Ryozuki> @Learath2 it is hard to filter cuz udp is connectless and the filter doesnt know if the server considers the client as already connected right
18:27 <+bridge> [ddnet] <Ryozuki> are ddos made of packets before connection or after?
18:27 <+bridge> [ddnet] <Ryozuki> i guess it doesnt matter
18:27 <+bridge> [ddnet] <Jupstar ✪> @deen can i trigger bors btw for ur things?
18:27 <+bridge> [ddnet] <Learath2> That's not hard to handle, conntrack adds state
18:28 <+bridge> [ddnet] <Learath2> I'm working on a wireshark dissector too, but I'm having trouble deciding how to figure out something is a teeworlds packet
18:28 <+bridge> [ddnet] <Learath2> I could decode almost anything as a teeworlds packet
18:28 <+bridge> [ddnet] <Ryozuki> they dont have any header or stuff
18:28 <+bridge> [ddnet] <Ryozuki> ?
18:28 <+bridge> [ddnet] <Ryozuki> xd
18:28 <+bridge> [ddnet] <Ryozuki> well if a packet consists of cnetobjs u can find the type and maybe match the size of any cnetobj
18:29 <+bridge> [ddnet] <Ryozuki> i may be talking shit tho idk how it works
18:29 <+bridge> [ddnet] <Learath2> We do but it's 3 bytes, first byte has flags and ack, second byte has ack, third byte has the chunk code
18:29 <+bridge> [ddnet] <Learath2> All of those bytes can be any value and the packet would be valid
18:30 <+bridge> [ddnet] <Learath2> @heinrich5991 how did you do it for your old wireshark dissector?
18:31 <+bridge> [ddnet] <deen> @zelda. thanks for report, removed
18:31 <+bridge> [ddnet] <Learath2> Ah, he cheated, he only dissects for port 8303 :S
18:31 <+bridge> [ddnet] <deen> (and it's been long fixed, but was still a problem 3 weeks ago)
18:36 <+bridge> [ddnet] <zelda.> ah okey ☺️
18:36 <+bridge> [ddnet] <zelda.> ah okey ☺️ ty
18:55 <+bridge> [ddnet] <Ryozuki> @Learath2 https://twitter.com/nvidia/status/1305290653761503232
18:55 <+bridge> [ddnet] <Ryozuki> is this good or bad
18:55 <+bridge> [ddnet] <Ryozuki> :justatest:
18:55 <+bridge> [ddnet] <Ryozuki> :justatest::justatest:
18:55 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/755109504391184504/Eh11QIUUMAAjXh9.png
18:55 <+bridge> [ddnet] <Ryozuki> i would have prefered amd
18:55 <+bridge> [ddnet] <Learath2> eh, I would have preferred no one bought out ARM
18:56 <+bridge> [ddnet] <Ryozuki> yeah that
18:56 <+bridge> [ddnet] <Ryozuki> too
18:56 <+bridge> [ddnet] <Learath2> Multiple vendors is nice to have
18:56 <+bridge> [ddnet] <Learath2> Monopolies are very meh
18:56 <+bridge> [ddnet] <Ryozuki> but nvidia is the worst
18:56 <+bridge> [ddnet] <Learath2> They should give it to me
18:57 <+bridge> [ddnet] <Learath2> I promise to not sell it to anyone
18:57 <+bridge> [ddnet] <Ryozuki> @Learath2 is arm better than x86_64?
18:58 <+bridge> [ddnet] <Ryozuki> i guess it fits better for the internet of things
18:58 <+bridge> [ddnet] <Ryozuki> they cal
18:58 <+bridge> [ddnet] <Ryozuki> call
18:58 <+bridge> [ddnet] <Learath2> Eeeeeeh, not really easy to compare
18:59 <+bridge> [ddnet] <Learath2> ARM has a much saner ISA imho
18:59 <+bridge> [ddnet] <Ryozuki> > Processors that have a RISC architecture typically require fewer transistors than those with a complex instruction set computing (CISC) architecture (such as the x86 processors found in most personal computers), which improves cost, power consumption, and heat dissipation. These characteristics are desirable for light, portable, battery-powered devices‍—‌including smartphones, laptops and tablet computers, and other embedded systems
19:00 <+bridge> [ddnet] <Ryozuki> $40 Billion tho
19:00 <+bridge> [ddnet] <Ryozuki> companies have  so much money
19:00 <+bridge> [ddnet] <Ryozuki> insane
19:00 <+bridge> [ddnet] <Ryozuki> well its american billions
19:00 <+bridge> [ddnet] <deen> Well, most of it is just given as stock of their own company, not in cash
19:00 <+bridge> [ddnet] <Ryozuki> american billions are thousand millions here iirc
19:00 <+bridge> [ddnet] <Learath2> ARM isn't strictly RISC or CISC
19:01 <+bridge> [ddnet] <Ryozuki> arm literally means Advanced RISC Machine
19:01 <+bridge> [ddnet] <Ryozuki> where do u get that from
19:02 <+bridge> [ddnet] <Learath2> Well in thumb mode arm processors can do variable length instructions, which isn't really RISCy
19:03 <+bridge> [ddnet] <Jupstar ✪> if u want modded minecraft with 60fps u need intel 20k clocking at 8ghz, if u want blender at 5 watt, u need arm xd
19:03 <+bridge> [ddnet] <Ryozuki> that depends on the mods
19:04 <+bridge> [ddnet] <Jupstar ✪> no thread optimized ones
19:04 <+bridge> [ddnet] <Ryozuki> well i mostly play those kitchen sink packs that are in a void world
19:04 <+bridge> [ddnet] <Ryozuki> so xd
19:04 <+bridge> [ddnet] <Learath2> Apple makes some very strong A64 processors
19:04 <+bridge> [ddnet] <Jupstar ✪> yes, will be interesting
19:04 <+bridge> [ddnet] <Jupstar ✪> but i only believe what comes from many independent sources 😄
19:04 <+bridge> [ddnet] <Learath2> Strong enough that they were atleast considering making the next macbook arm, not sure if that'll happen tho
19:05 <+bridge> [ddnet] <Ryozuki> @Learath2 why u use a mac and not linux tho
19:05 <+bridge> [ddnet] <Ryozuki> do u se some propietary software?
19:05 <+bridge> [ddnet] <Ryozuki> or u just had a mac around
19:06 <+bridge> [ddnet] <Learath2> Kryo 585 is an octa core with a whopping 3.1ghz, it can even do fancy speculative execution
19:06 <+bridge> [ddnet] <Ryozuki> 3.1 isnt much tho
19:07 <+bridge> [ddnet] <Learath2> @Ryozuki I had a laptop that was dying, someone offered to get me a macbook if I coded them an iOS app, I took him up on the offer
19:07 <+bridge> [ddnet] <Learath2> When I'm back home I'm on my desktop anyway, so this is my portable solution for now
19:08 <+bridge> [ddnet] <Ryozuki> @Learath2 u cannot install linux there? xd
19:08 <+bridge> [ddnet] <a gerdoe> arm founder says that its bad @Ryozuki
19:08 <+bridge> [ddnet] <Learath2> Kryo 585 is a phone sized arm chip, fits in a fraction of the actual cpu of the phone even
19:08 <+bridge> [ddnet] <Ryozuki> ah thats nice then
19:08 <+bridge> [ddnet] <Learath2> @Ryozuki I can but space is quiiite tight (ssd not upgradable 😦 )
19:08 <+bridge> [ddnet] <Ryozuki> eh
19:09 <+bridge> [ddnet] <Ryozuki> linux should take less space
19:09 <+bridge> [ddnet] <Ryozuki> if u completly wipe mac tho
19:09 <+bridge> [ddnet] <Ryozuki> xd
19:09 <+bridge> [ddnet] <Ryozuki> u probs can get more perfomance too
19:11 <+bridge> [ddnet] <Learath2> There is some software I still need on the mac side
19:11 <+bridge> [ddnet] <Learath2> darktable is very meh compared to lightroom and adobe doesn't feel like supporting linux at all
19:11 <+bridge> [ddnet] <Ryozuki> :frozen:
19:11 <+bridge> [ddnet] <Ryozuki> yeah adobe sucks
19:11 <+bridge> [ddnet] <Ryozuki> gimp best
19:11 <+bridge> [ddnet] <Learath2> though it is quickly getting better, maybe next year I'll be able to hop over
19:11 <+bridge> [ddnet] <Ryozuki> :lol:
19:12 <+bridge> [ddnet] <Ryozuki> have u tried krita
19:12 <+bridge> [ddnet] <Learath2> gimp is no replacement to darktable 😄
19:12 <+bridge> [ddnet] <Ryozuki> https://krita.org/
19:12 <+bridge> [ddnet] <Learath2> I'm okay with gimp as a replacement to PS tho, it works great
19:12 <+bridge> [ddnet] <Ryozuki> gimp is not a direct replacement of PS
19:12 <+bridge> [ddnet] <Learath2> Lightroom is for photography
19:12 <+bridge> [ddnet] <Ryozuki> well maybe yes
19:12 <+bridge> [ddnet] <Ryozuki> xd
19:12 <+bridge> [ddnet] <Ryozuki> but krita has more stuff
19:12 <+bridge> [ddnet] <Ryozuki> than gimp iirc
19:12 <+bridge> [ddnet] <Learath2> I don't illustrate, so I doubt krita's features of much use to me
19:13 <+bridge> [ddnet] <Learath2> I actually wanted to learn how to draw for quite some time, it's just that it seems to take a whole lot of time
19:13 <+bridge> [ddnet] <Learath2> I get demotivated and unfocused sooooo quick, it's really hard for me to pick up new things
19:13 <+bridge> [ddnet] <Ryozuki> if u want to animate, blender is powerful
19:14 <+bridge> [ddnet] <Ryozuki> they improved that special pencil they have
19:14 <+bridge> [ddnet] <Learath2> Greasepen?
19:14 <+bridge> [ddnet] <Learath2> I use blender a bit, but mostly for modeling
19:14 <+bridge> [ddnet] <Ryozuki> https://www.youtube.com/watch?v=lriYv4P4TcE
19:14 <+bridge> [ddnet] <Ryozuki> this looks awesome
19:16 <+bridge> [ddnet] <Learath2> Blender 2.8 brought so many new things, I'm expecting greatness from 2.9 too
19:16 <+bridge> [ddnet] <Ryozuki> 2.9 is out already
19:16 <+bridge> [ddnet] <Ryozuki> https://www.youtube.com/watch?v=7M1UaDe0qsk
19:16 <+bridge> [ddnet] <Ryozuki> :greenthing:
19:16 <+bridge> [ddnet] <Ryozuki> breathtaking
19:17 <+bridge> [ddnet] <Learath2> Heh, if I ever get back to italy and do more modelling, I can move to 2.9 😄
19:17 <+bridge> [ddnet] <Learath2> Extrude manifold looks awesome
19:22 <+bridge> [ddnet] <Learath2> Another great looking release
19:23 <+bridge> [ddnet] <Learath2> I love how blender started from "unusable", became "competent", became "usable" and now it's becoming "great"
19:23 <+bridge> [ddnet] <Learath2> It's an open source success story
19:26 <+bridge> [ddnet] <Ryozuki> yeah
19:27 <+bridge> [ddnet] <Ryozuki> :feelsbadman:
19:27 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/755117604896768040/unknown.png
19:29 <+bridge> [ddnet] <Ryozuki> "this will give nvidia and stronger mobile presence"
19:29 <+bridge> [ddnet] <Ryozuki> xD
19:29 <+bridge> [ddnet] <Learath2> Why is it ARM that's taking off though 😦
19:30 <+bridge> [ddnet] <Ryozuki> @Learath2 tho ppl are saying arm sold cuz they are not taking off anytime soon
19:30 <+bridge> [ddnet] <Ryozuki> even worse they falling
19:30 <+bridge> [ddnet] <Learath2> We need more work on RISC-V
19:30 <+bridge> [ddnet] <Learath2> A simple ISA is soooo much more fun to work with
20:05 <+bridge> [ddnet] <Learath2> Now that I think about it, I think I agree with freetype being flexible. They should have documented the fact that the font isnt loaded though
20:09 <+bridge> [ddnet] <TsFreddie> :thonk: Since they gave you the FT_New_Memory_Face, so they might think it is obvious the other one isn't "in memory"
20:09 <+bridge> [ddnet] <TsFreddie> but ye, they should probably say that some where in the doc
20:17 <+bridge> [ddnet] <heinrich5991> @deen don't like the "one change", especially since we're probably missing something, and it would all need to be reformatted again. I'd prefer to make it easier to fix the style
20:19 <+bridge> [ddnet] <heinrich5991> @BannZay the fixes for stuff you didn't even touch, is that mostly the binary operators in the config variables?
20:20 <+bridge> [ddnet] <heinrich5991> @Learath2 not all flag combinations are possible, I think. not all packets can contain a payload
20:20 <+bridge> [ddnet] <Ryozuki> @Learath2 have u heard about https://gpuweb.github.io/gpuweb/ ?
20:22 <+bridge> [ddnet] <Ryozuki> an example implementation https://github.com/gfx-rs/wgpu 👀
20:22 <+bridge> [ddnet] <Learath2> Hadn't yet, looks quite intriguing
20:23 <+bridge> [ddnet] <Ryozuki> @Learath2 from what i understnad, its a api that abstracts metal directx vulkan and opengl, it even has its own shader language spec
20:23 <+bridge> [ddnet] <Ryozuki> https://gpuweb.github.io/gpuweb/wgsl.html
20:23 <+bridge> [ddnet] <BannZay> > @BannZay the fixes for stuff you didn't even touch, is that mostly the binary operators in the config variables?
20:23 <+bridge> [ddnet] <BannZay> @heinrich5991 mostly yes. (here is another couple of style issueshttps://github.com/ddnet/ddnet/pull/2778/checks?check_run_id=1108826164)
20:23 <+bridge> [ddnet] <Learath2> Whats up with the horrendous opengl support?
20:24 <+bridge> [ddnet] <Ryozuki> u mean in the implementation?
20:24 <+bridge> [ddnet] <Learath2> Ye
20:24 <+bridge> [ddnet] <Ryozuki> idk
20:24 <+bridge> [ddnet] <Ryozuki> bear in mind this is new stuff
20:24 <+bridge> [ddnet] <Ryozuki> xd
20:24 <+bridge> [ddnet] <Learath2> What happened to open source brotherhood?
20:24 <+bridge> [ddnet] <Ryozuki> but i guess they dont prioritize it since there is vulkan
20:24 <+bridge> [ddnet] <Ryozuki> whats open source brotherhood
20:25 <+bridge> [ddnet] <Learath2> What is all this directx support <a:triggeredField:427811541455470602>
20:25 <+bridge> [ddnet] <Ryozuki> :justatest:
20:25 <+bridge> [ddnet] <Learath2> Remove directx
20:25 <+bridge> [ddnet] <Ryozuki> well its unrealistic to not support it
20:25 <+bridge> [ddnet] <Ryozuki> many gamedevs think it is better
20:25 <+bridge> [ddnet] <Ryozuki> than opengl
20:25 <+bridge> [ddnet] <Ryozuki> do u have nitro btw
20:25 <+bridge> [ddnet] <Ryozuki> who is gifting them
20:25 <+bridge> [ddnet] <Ryozuki> :justatest:
20:26 <+bridge> [ddnet] <Learath2> I was helping someone with some ddnet thing and he gifted it
20:26 <+bridge> [ddnet] <abcqwerty> :justatest:
20:26 <+bridge> [ddnet] <abcqwerty> https://cdn.discordapp.com/attachments/293493549758939136/755132340254015589/unknown.png
20:26 <+bridge> [ddnet] <Ryozuki> oh
20:26 <+bridge> [ddnet] <Ryozuki> they say thanks to u?
20:26 <+bridge> [ddnet] <Ryozuki> i only met rude ppl asking for help
20:26 <+bridge> [ddnet] <Ryozuki> "hey you, do this for me!
20:26 <+bridge> [ddnet] <Ryozuki> right now!
20:26 <+bridge> [ddnet] <Ryozuki> :justatest:
20:26 <+bridge> [ddnet] <Learath2> I help make bots
20:26 <+bridge> [ddnet] <heinrich5991> @BannZay I guess we can reformat these config files. that would conflict with your PR though, so either you do it, or I do it and you have to fix the conflicts
20:26 <+bridge> [ddnet] <Ryozuki> :troll:
20:27 <+bridge> [ddnet] <Ryozuki> what kind of bots
20:27 <+bridge> [ddnet] <Ryozuki> @abcqwerty learath closet weeb
20:27 <+bridge> [ddnet] <abcqwerty> ryozoozki out of closet weeb
20:28 <+bridge> [ddnet] <Ryozuki> i only manifesty my weeb against weebs
20:29 <+bridge> [ddnet] <Ryozuki> @Learath2 https://bevyengine.org/
20:29 <+bridge> [ddnet] <Ryozuki> look how shiny and cool it looks
20:29 <+bridge> [ddnet] <Ryozuki> but sadly all these things are early in dev
20:29 <+bridge> [ddnet] <Ryozuki> :feelsbadman:
20:30 <+bridge> [ddnet] <Learath2> Data driven game engine sounds like something I would hate
20:31 <+bridge> [ddnet] <Ryozuki> @Learath2 it means using a ECS mostly
20:31 <+bridge> [ddnet] <heinrich5991> but sounds like something you want to have for performance, I think(?)
20:31 <+bridge> [ddnet] <Ryozuki> do u have ecs then yes
20:31 <+bridge> [ddnet] <heinrich5991> I think unity also shifts into that direction
20:31 <+bridge> [ddnet] <Learath2> Oh then, I might like it
20:31 <+bridge> [ddnet] <Learath2> I feared it might be some declarative bs
20:31 <+bridge> [ddnet] <Ryozuki> amethyst rs is also good but they are changing stuff drastically rn
20:31 <+bridge> [ddnet] <Ryozuki> so not a good option rn
20:32 <+bridge> [ddnet] <Ryozuki> has anyone worked with godot + rust?
20:32 <+bridge> [ddnet] <Ryozuki> is it good
21:14 <+bridge> [ddnet] <m!ki> why client doesn't render textures when gpu v-ram is small?
21:14 <+bridge> [ddnet] <m!ki> https://cdn.discordapp.com/attachments/293493549758939136/755144533070577684/screenshot_2020-09-14_21-13-16.png
21:16 <+bridge> [ddnet] <Jupstar ✪> what client version r u using
21:16 <+bridge> [ddnet] <Jupstar ✪> @m!ki
21:16 <+bridge> [ddnet] <m!ki> latest one
21:16 <+bridge> [ddnet] <Jupstar ✪> that doesnt look like a vram problem
21:17 <+bridge> [ddnet] <m!ki> i have no problem with other versions
21:17 <+bridge> [ddnet] <m!ki> like 10.x.x
21:17 <+bridge> [ddnet] <Jupstar ✪> yeah
21:17 <+bridge> [ddnet] <Jupstar ✪> set gfx_opengl_major 1 in f1 and restart
21:17 <+bridge> [ddnet] <Jupstar ✪> still has nothing todo with it
21:17 <+bridge> [ddnet] <Jupstar ✪> its bcs ur driver is buggy
21:18 <+bridge> [ddnet] <Jupstar ✪> normally the new client downgrades your gl version automatically, but it seems ur driver is just lieing
21:19 <+bridge> [ddnet] <m!ki> my bad, it was 14.0.3
21:19 <+bridge> [ddnet] <m!ki> but with latest client crash
21:20 <+bridge> [ddnet] <m!ki> while loading it crash
21:20 <+bridge> [ddnet] <Jupstar ✪> have u used the autoupdater?
21:20 <+bridge> [ddnet] <m!ki> i compiled client by myself
21:20 <+bridge> [ddnet] <Jupstar ✪> then see where it crashes
21:20 <+bridge> [ddnet] <Jupstar ✪> would really help 🙂
21:21 <+bridge> [ddnet] <m!ki> https://cdn.discordapp.com/attachments/293493549758939136/755146250768089107/Screenshot_10.png
21:22 <+bridge> [ddnet] <Jupstar ✪> ty, seems like the sample function is buggy
21:23 <+bridge> [ddnet] <Jupstar ✪> can u also give me the stacktrace?
21:23 <+bridge> [ddnet] <Jupstar ✪> the function caller list
21:24 <+bridge> [ddnet] <m!ki> https://cdn.discordapp.com/attachments/293493549758939136/755146982624067644/Screenshot_11.png
21:24 <+bridge> [ddnet] <m!ki> this one?
21:24 <+bridge> [ddnet] <Jupstar ✪> ty alot
21:26 <+bridge> [ddnet] <Jupstar ✪> @m!ki btw what does gfx_texture_quality say in f1 in version 14.x
21:26 <+bridge> [ddnet] <m!ki> 0
21:26 <+bridge> [ddnet] <Jupstar ✪> ah
21:26 <+bridge> [ddnet] <Jupstar ✪> set it to 1 and try the new client
21:27 <+bridge> [ddnet] <Jupstar ✪> i think its the because the sample function only works with specific texture sizes
21:27 <+bridge> [ddnet] <Jupstar ✪> maybe i'll just remove it
21:27 <+bridge> [ddnet] <m!ki> that's working now
21:27 <+bridge> [ddnet] <m!ki> ty
22:43 <+bridge> [ddnet] <BannZay> > @BannZay I guess we can reformat these config files. that would conflict with your PR though, so either you do it, or I do it and you have to fix the conflicts
22:43 <+bridge> [ddnet] <BannZay> @heinrich5991 I can do it. But I guess its better to run script on repo to prevent people from fixing things in other files and copying wrong style. It was big problem to me earlier. I copied the style that I thought was good from the repo, but later some say that I should fix the copied style 😦
