02:59 < bridge> <_voxeldoesart> based
08:53 < bridge> <matodor> https://www.jetbrains.com/rust/
08:56 < bridge> <ryozuki> @jupeyy_keks prepare tomorrow question
08:56 < bridge> <ryozuki> <a:aPES4_Noted:838744541497393152>
09:05 < bridge> <Jupstar ‚ú™> Good reminder next question i have, i should write down so i don't forget again xd
10:20 < bridge> <ryozuki> https://wiki.gentoo.org/wiki/Mirrorselect
10:21 < bridge> <ryozuki> `sudo mirrorselect -s3 -b10 -D -c Germany`
10:21 < bridge> <ryozuki> for best mirrors
10:46 < bridge> <Jupstar ‚ú™> very useful for our, in meantime 2, gentoo users üòÇ
10:46 < bridge> <ryozuki> xD
10:46 < bridge> <ryozuki> learath is one too
10:48 < bridge> <learath2> Gentoo is the best thing since sliced bread
10:50 < bridge> <ryozuki> xD
10:51 < bridge> <learath2> I just flunked an accounting exam so bad
10:52 < bridge> <learath2> My balance sheet was off by 200k and I somehow managed to end up with negative work in progress inventory. Then the company that made profit on the balance sheet ended up making loss on the income statement
11:43 < bridge> <ryozuki> @patiga ur twmap lib is awesome, but i have  one request, often to modify tiles u need to deal with the load and the compressed data enum, maybe make a utility method that loads and returns the loaded tiles reference which u can read and modify easily?
11:43 < bridge> <ryozuki> ```rust
11:43 < bridge> <ryozuki>     let mut map_old = TwMap::parse_file(map1)?;
11:43 < bridge> <ryozuki>     map_old.load()?;
11:43 < bridge> <ryozuki>     let mut map_new = TwMap::parse_file(map2)?;
11:43 < bridge> <ryozuki>     map_new.load()?;
11:44 < bridge> <ryozuki>     let mut result = map_old.clone();
11:44 < bridge> <ryozuki> 
11:44 < bridge> <ryozuki>     let map_old_game: &GameLayer = map_old.find_physics_layer().expect("couldn't find game layer");
11:44 < bridge> <ryozuki>     let map_new_game: &GameLayer = map_new.find_physics_layer().expect("couldn't find game layer");
11:44 < bridge> <ryozuki> 
11:44 < bridge> <ryozuki>     let tiles_old = match map_old_game.tiles() {
11:44 < bridge> <ryozuki>         twmap::CompressedData::Compressed(_, _, _) => unreachable!(),
11:44 < bridge> <ryozuki>         twmap::CompressedData::Loaded(x) => x,
11:44 < bridge> <ryozuki>     };
11:44 < bridge> <ryozuki>     let tiles_new = match map_new_game.tiles() {
11:44 < bridge> <ryozuki>         twmap::CompressedData::Compressed(_, _, _) => unreachable!(),
11:44 < bridge> <ryozuki>         twmap::CompressedData::Loaded(x) => x,
11:44 < bridge> <ryozuki>     };
11:44 < bridge> <ryozuki> ```
11:44 < bridge> <ryozuki> to reduce boilerplate on the match i mean
11:44 < bridge> <ryozuki> (hope im using it correctly)
11:45 < bridge> <patiga> have you tried `.load_conditionally(some_closure)`?
11:45 < bridge> <patiga> and then you can just do `find_physics_layer_mut()` (if that exists ^^)
11:46 < bridge> <ryozuki> finding the layer is not a problem
11:46 < bridge> <ryozuki> hm i cant find load_conditionally
11:46 < bridge> <ryozuki> my point is about the code in tiles_old and tiles_new
11:46 < bridge> <ryozuki> the match
11:48 < bridge> <patiga> ah right, you do map.load() anyways, you can use `unwrap[_mut]()` on the `CompressedData` enum.
11:48 < bridge> <ryozuki> ohh it has a unwrap
11:48 < bridge> <ryozuki> TIL
11:48 < bridge> <ryozuki> ye thats what i wanted
11:49 < bridge> <patiga> nice üëç
11:49 < bridge> <ryozuki> maybe it should be renamed
11:49 < bridge> <ryozuki> to
11:49 < bridge> <ryozuki> get_loaded
11:49 < bridge> <ryozuki> unwrap is smth rust users like to avoid
11:49 < bridge> <ryozuki> well i do
11:49 < bridge> <ryozuki> xD
11:49 < bridge> <patiga> I do think the decompression interface could be done in some nicer way, but I wanted to give the error enough context info so that you can find the exact layer in the map and identify if you just read the error message
11:51 < bridge> <patiga> due to mutability and this concern of mine, the first thing you do with the map is decompressing the parts of it which you want to access
11:51 < bridge> <patiga> so a later unwrap is fine there I think, else you didn't hold up your contract with twmap or smth :d
11:51 < bridge> <ryozuki> ye it makes sense
11:52 < bridge> <ryozuki> i guess i should only load the tiles
11:52 < bridge> <ryozuki> does find_physics_layer work without loading on map?
11:52 < bridge> <patiga> (though if you save the map again, it will decompress everything before saving anyways currently)
11:52 < bridge> <patiga> yes, but the tiles will stay compressed
11:52 < bridge> <ryozuki> im porting and improving ravies map diff script
11:53 < bridge> <ryozuki> to rust
11:53 < bridge> <patiga> oh nice, that tool seemed very useful :)
11:53 < bridge> <ryozuki> ye
11:59 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1151819400547160114/image.png
11:59 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1151819400823967795/image.png
12:14 < bridge> <ryozuki> @patiga epic generics
12:14 < bridge> <ryozuki> i could abstract this for all layers
12:14 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1151823243678842970/image.png
12:15 < bridge> <patiga> :poggers: generics paying off
12:18 < bridge> <ryozuki> cargo install ddnet-map-diff
12:18 < bridge> <ryozuki> https://github.com/edg-l/ddnet-map-diff
12:19 < bridge> <ryozuki> i gotta run clippy pedantic
12:23 < bridge> <ryozuki> @patiga would be fun to maybe put this as a command for the testing bot, and generate a image
12:23 < bridge> <ryozuki> i wonder who deals with this
14:41 < bridge> <ryozuki> i wish c++ had better tooling
14:42 < bridge> <ryozuki> i wish to do cargo flamegraph on ddnet
14:42 < bridge> <ryozuki> and it work out of the box
14:42 < bridge> <heinrich5991> maybe clion can do that for you out of the box
14:43 < bridge> <ryozuki> https://wiki.xfce.org/releng/wayland_roadmap
14:43 < bridge> <ryozuki> too much bloat
14:43 < bridge> <ryozuki> and paid
14:44 < bridge> <Jupstar ‚ú™> Do they rename to wlce? Xd
14:44 < bridge> <heinrich5991> you can probably get it for free because you're contributing to ddnet, not sure
14:51 < bridge> <ryozuki> oh
14:51 < bridge> <ryozuki> i remembered u can visualize perf records with firefox
15:30 < bridge> <Alexander> why doesn't http://ger10.ddnet.org/ have an ssl certificate?
15:33 < bridge> <Jupstar ‚ú™> It does
15:33 < bridge> <Jupstar ‚ú™> Use https
15:35 < bridge> <heinrich5991> works for me as well
16:12 < bridge> <Alexander> then why doesn't it have an https redirect?
16:15 < bridge> <avolicious> No need
16:15 < bridge> <Alexander> i mean yeah it doesn't need it to function correctly but why not
16:29 < bridge> <Jupstar ‚ú™> Because
16:54 < bridge> <ryozuki> https://profiler.firefox.com/
16:57 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1151894585770004570/image.png
16:57 < bridge> <ryozuki> hm unknown
16:58 < bridge> <ryozuki> how to get in debug symbols there
16:58 < bridge> <ryozuki> i compiled with relwithdeb
17:00 < bridge> <Jupstar ‚ú™> wasnt there a command that automatically generated a link
17:00 < bridge> <Jupstar ‚ú™> then it worked for me
18:48 < bridge> <_voxeldoesart> i havent gotten the time to code it yet but im gonna make a program that sort of works side by side with an extension for adobe animate, that takes an array of points and does a bunch of math to them to output voronoi lines based on their positions
18:50 < bridge> <_voxeldoesart> i just have to find a way to make it optimized for more than like   30 points because i made a basic mockup (including a renderer) in scratch and it was slow as fuck
18:50 < bridge> <_voxeldoesart> maybe raw python code for Just the math would work fine
18:54 < bridge> <_voxeldoesart> i almost *want* to try another language for this but i have no idea how memory works and tbh the last thing id want is a segfault
19:33 < bridge> <cyberFighter> hey why isnt killing predicted btw
19:34 < bridge> <cyberFighter> is it because of the spawns working in a funny way
19:52 < bridge> <reitw> @ryozuki lmao someone did a video about moving from unity to godot. He installed godot while starting an unity project :issou:
19:52 < bridge> <ryozuki> xd
19:55 < bridge> <_voxeldoesart> LOL
19:57 < bridge> <fokkonaut> @heinrich5991 @robyt3 
19:57 < bridge> <fokkonaut> could one of you provide a calculation which i can use to translate the colors on my server to the new ones without a hardcoded map?
19:59 < bridge> <robyt3> A hardcoded map seems like the best solution
19:59 < bridge> <fokkonaut> ü´°
19:59 < bridge> <ryozuki> ü´°
20:00 < bridge> <Jupstar ‚ú™> üó∫Ô∏è
20:01 < bridge> <ryozuki> https://docs.rs/lazy_format/latest/lazy_format/
20:02 < bridge> <robyt3> Since the keys of the map are 1-64 you only need an array with the numbers in the second row of this image
20:02 < bridge> <robyt3> https://cdn.discordapp.com/attachments/293493549758939136/1151941040685719623/265515094-3ee7a052-a2fa-4fd6-b950-d8c2711a91a1.png
20:03 < bridge> <robyt3> That should give you team that has a color similar to the old one
20:03 < bridge> <robyt3> That should give you a team that has a color similar to the old one
20:03 < bridge> <fokkonaut> yes
20:03 < bridge> <fokkonaut> isnt it the same?
20:03 < bridge> <fokkonaut> or at least unnoticable
20:04 < bridge> <robyt3> unnoticable, yes
20:04 < bridge> <robyt3> Only team 1 is 100% the same
20:04 < bridge> <robyt3> All others would be very unlikely
20:04 < bridge> <fokkonaut> I see
20:04 < bridge> <fokkonaut> at least its somewhat a rainbow
20:14 < bridge> <marmare_314> Does someone know what the dilate functions in  `image_manipulation.cpp`do? `Dilate` seems to overwrite transparent pixels with the average color of its neighbours. But I dont see why you would want to do this
20:17 < bridge> <robyt3> https://wiki.ddnet.org/wiki/Extra_tools#dilate
20:23 < bridge> <marmare_314> ah makes sense, thanks. I'm wondering if they could be optimized since they take up most of the time when adding images to the editor
20:23 < bridge> <robyt3> Dilate takes most of the time? I thought it would be the PNG decoding
20:25 < bridge> <marmare_314> at least for `basic_freeze` it does
20:28 < bridge> <cyberFighter> gonna be honest im against this, i like the old scoreboard being in a nice rainbow and like what if teams 1, 56 and 22 are close together? aint the problem still gonna be there?
20:29 < bridge> <cyberFighter> though i would probably get used to it in like 2 days anyway lmao
20:29 < bridge> <marmare_314> Also I'm confused about this comment and the functions taking a `BPP` argument
20:29 < bridge> <marmare_314> ```
20:29 < bridge> <marmare_314> // Seems safe for BPP = 3, 4 which we use. clang-analyzer seems to
20:29 < bridge> <marmare_314> // assume being called with larger value. TODO: Can make this
20:29 < bridge> <marmare_314> // safer anyway.
20:29 < bridge> <marmare_314> ```
20:29 < bridge> <marmare_314> How does it even make sense to apply this operation to RGB images?
20:32 < bridge> <robyt3> We only ever pass BPP=4 to the function anyway, could probably be removed if the parameter makes no sense and we already check before calling
20:35 < bridge> <teero777> bug: 
20:35 < bridge> <teero777> when you open the game and close it while an error message is up then it wont close until the error message is gone and the background goes gray.
20:36 < bridge> <teero777> im too lazy to report this on gh or check if it has already been fixed. can someone try this on a non-linux machine?
20:42 < bridge> <robyt3> What kind of error message do you mean?
20:42 < bridge> <teero777> for example the skin error messages for formats etc
20:43 < bridge> <teero777> the big red ones that pop up
20:43 < bridge> <teero777> ingame
20:43 < bridge> <robyt3> I see
20:43 < bridge> <teero777> they block the exiting process
20:46 < bridge> <Jupstar ‚ú™> just fix xd
20:46 < bridge> <teero777> probably just some if statement but i have exams tmrw
20:47 < bridge> <teero777> atleast thats my excuise
20:47 < bridge> <teero777> atleast thats my excuse
20:47 < bridge> <Jupstar ‚ú™> i mean just fix the error xD
20:47 < bridge> <teero777> its the new popom thing
20:47 < bridge> <teero777> its the new pompom thing
20:48 < bridge> <teero777> btw whats up with the new "quitting please wait" thing before closing?
20:48 < bridge> <teero777> kinda gay if you ask me
20:49 < bridge> <robyt3> Not quitting seems like the desired behavior, but the background going gray is a bug
20:49 < bridge> <robyt3> Because the warning is shown when you quit and saving the config fails
20:50 < bridge> <robyt3> Client needs to wait so the users has read the warning
20:50 < bridge> <robyt3> Client needs to wait so the user has read the warning
20:50 < bridge> <teero777> what if i dont have a mouse and want to quit the game? xd
20:50 < bridge> <robyt3> Press enter
20:50 < bridge> <teero777> i cant click the button obviously
20:50 < bridge> <robyt3> Or escape
20:50 < bridge> <teero777> that works?
20:50 < bridge> <teero777> k
20:50 < bridge> <robyt3> It should, otherwise it's a bug
20:51 < bridge> <Jupstar ‚ú™> is that still a problem tho?
20:51 < bridge> <robyt3> All dialogs should be usable with enter and escape
20:51 < bridge> <Jupstar ‚ú™> just wondering
20:51 < bridge> <teero777> seems like qutting twice also does the job
20:52 < bridge> <teero777> maybe its already fixed. havent updated anything
20:52 < bridge> <Jupstar ‚ú™> good
21:14 < bridge> <Jupstar ‚ú™> @robyt3 when copy image to clipboard support for windows
21:14 < bridge> <Jupstar ‚ú™> then we can overload the printscreen key in fullscreen and save the image to clipboard
21:15 < bridge> <Jupstar ‚ú™> bcs windows is a joke and cant do that
21:15 < bridge> <Jupstar ‚ú™> lmao
21:16 < bridge> <robyt3> Does SDL3 still not have more clipboard API?
21:16 < bridge> <Jupstar ‚ú™> i think they had an issue for that
21:18 < bridge> <robyt3> Windows already supports several clipboard formats, nobody added support to SDL yet
21:18 < bridge> <ryozuki> we need to update to sdl3 because its a higher number
21:18 < bridge> <ryozuki> higher better
21:18 < bridge> <robyt3> https://learn.microsoft.com/en-us/windows/win32/dataxchg/standard-clipboard-formats
21:18 < bridge> <ryozuki> asap
21:20 < bridge> <robyt3> We could update to latest and likely last SDL2 version 2.28.3 though
21:24 < bridge> <ryozuki> well windows always gives problems with sdl
21:26 < bridge> <robyt3> Looked mostly like bugfixes in the SDL changelog, so hopefully less issues
21:26 < bridge> <robyt3> 2.28 should be the last version of SDL2
21:27 < bridge> <robyt3> After that there's an SDL3-bridge and eventually SDL3 itself
21:28 < bridge> <Jupstar ‚ú™> perf issue here, bug there
21:28 < bridge> <Jupstar ‚ú™> 
21:28 < bridge> <Jupstar ‚ú™> makes no fun xd
21:28 < bridge> <Jupstar ‚ú™> i bet sdl3 wont be stable until after 2 years after release
21:33 < bridge> <ryozuki> another reason for rust
21:33 < bridge> <ryozuki> winit
21:33 < bridge> <ryozuki> the problem with sdl is it tackles all stuff
21:33 < bridge> <Jupstar ‚ú™> i used winit
21:33 < bridge> <ryozuki> so if u have a bug cuz input u cant update everything else
21:33 < bridge> <ryozuki> in rust the ecosystem is more modular
21:33 < bridge> <Jupstar ‚ú™> it sucks more than sdl, no front xD
21:33 < bridge> <ryozuki> winit just does 1 thing
21:33 < bridge> <Jupstar ‚ú™> yes that is good ideed
21:33 < bridge> <Jupstar ‚ú™> indeed
21:48 < bridge> <gerdoe> ideed sounds better
21:55 < bridge> <Jupstar ‚ú™> iJupstar
21:57 < bridge> <gerdoe> ipaid
21:58 < bridge> <teero777> ilovepiracy
23:18 < bridge> <ryozuki> https://twitter.com/KenneyNL/status/1700199272757485798
23:18 < bridge> <ryozuki> i  love that unity shat themselves
23:18 < bridge> <ryozuki> cuz its the best time for godot to become more fmaous
23:21 < bridge> <ryozuki> https://fund.godotengine.org/
23:21 < bridge> <ryozuki> 30k‚Ç¨ per month nice
23:30 < bridge> <ryozuki> https://www.reddit.com/r/gamedev/comments/16hnibp/unity_silently_removed_their_github_repo_to_track/
23:32 < bridge> <_voxeldoesart> Rather you die a hero, or you live long enough to become the villain.
