11:18 < bridge_> [ddnet] <Astramast> how can i know if a jump is possible or not ?
11:24 < SSS> hello
11:24 <@deen> hi
11:24 < SSS> do you use quakenet in browser or in client?
11:24 <@deen> irssi client
11:25 < SSS> is it possible to make teeworlds client with quakenet in it?
11:25 <@deen> yes, there were some clients that had that
11:25 <@deen> but i don't think it's a good idea
11:25 < SSS> why?
11:25 <@deen> just use a chat program, don't put all functionality into DDNet client
11:26 < SSS> True, last question
11:26 < SSS> who owns teeworlds?
12:37 < bridge_> [ddnet] <Ryozuki> https://github.com/rhaiscript/rhai
12:37 < bridge_> [ddnet] <Ryozuki> actually interesting
12:38 < bridge_> [ddnet] <Ryozuki> you can even forbid keywords or extend it
12:38 < bridge_> [ddnet] <Ryozuki> > For those who actually want their own language
12:38 < bridge_> [ddnet] <Ryozuki> > 
12:38 < bridge_> [ddnet] <Ryozuki> >     Use as a DSL.
12:38 < bridge_> [ddnet] <Ryozuki> >     Restrict the language by surgically disabling keywords and operators.
12:38 < bridge_> [ddnet] <Ryozuki> >     Define custom operators.
12:38 < bridge_> [ddnet] <Ryozuki> >     Extend the language with custom syntax.
16:29 < bridge_> [ddnet] <TsFreddie> ðŸ¤” is there a battle royal game for coding?
16:29 < bridge_> [ddnet] <TsFreddie> battle royale*
16:31 < bridge_> [ddnet] <heinrich5991> what would that be?
18:50 < bridge_> [ddnet] <TsFreddie> i hate macos
18:51 < bridge_> [ddnet] <TsFreddie> my mac updated recently and it started to treat `src/engine/external/pnglite/version` as a source file for some reason
19:00 < bridge_> [ddnet] <heinrich5991> we explicitly list source files in our cmakelists.txt
19:00 < bridge_> [ddnet] <heinrich5991> how does it end up getting compiled?
19:00 < bridge_> [ddnet] <Scrumplex> Would it be possible to ship SDL for the Steam binary with Wayland support?
19:01 < bridge_> [ddnet] <Scrumplex> Or is it limited by the Steam Runtime or something?
19:01 < bridge_> [ddnet] <Scrumplex> https://steamdb.info/depot/412225/ I guess it's already shipping it's own SDL so no?
19:04 < bridge_> [ddnet] <Scrumplex> https://steamdb.info/depot/412225/ I guess it's already shipping it's own SDL
19:05 < bridge_> [ddnet] <TsFreddie> that's exactly what i'm wondering.
19:05 < bridge_> [ddnet] <TsFreddie> both teeworlds and ddnet are affected.
19:37 < bridge_> [ddnet] <Jupstar âœª> Sdl  supports Wayland. But you need xwayland bcs egl only supports EOGL in SDL apparently
21:44 < bridge_> [ddnet] <Jupstar âœª> anyone uses wayland here?
21:46 < bridge_> [ddnet] <Jupstar âœª> would be nice if someone could set a breakpoint here
21:46 < bridge_> [ddnet] <Jupstar âœª> https://github.com/ddnet/ddnet/blob/master/src/engine/client/backend_sdl.cpp#L4368
21:46 < bridge_> [ddnet] <Jupstar âœª> 
21:46 < bridge_> [ddnet] <Jupstar âœª> and tell me the value of `s_SDLGLContextProfileMask`
21:46 < bridge_> [ddnet] <Jupstar âœª> 
21:46 < bridge_> [ddnet] <Jupstar âœª> I want to know if SDL lets you easily detect if the default API request is GLES or OGL
21:55 < bridge_> [ddnet] <Jupstar âœª> @Scrumplex or @nori ^
21:55 < bridge_> [ddnet] <Jupstar âœª> would be nice if you could check it
22:36 < bridge_> [ddnet] <Scrumplex> sure
22:45 < bridge_> [ddnet] <Scrumplex> @Jupstar âœª 
22:45 < bridge_> [ddnet] <Scrumplex> ```
22:45 < bridge_> [ddnet] <Scrumplex> [2021-04-30 22:44:14][sdl]: SDL version 2.0.14 (compiled = 2.0.14)
22:45 < bridge_> [ddnet] <Scrumplex> 
22:45 < bridge_> [ddnet] <Scrumplex> Thread 1 "DDNet" hit Breakpoint 1, CGraphicsBackend_SDL_OpenGL::Init (this=0x555555b07f80, pName=0x5555557d59c4 "DDNet Client", Screen=0x555555a29264 <g_Config+3876>, pWidth=0x555555a29268 <g_Config+3880>, 
22:45 < bridge_> [ddnet] <Scrumplex>     pHeight=0x555555a2926c <g_Config+3884>, FsaaSamples=0, Flags=1, pDesktopWidth=0x7ffff4a9e028, pDesktopHeight=0x7ffff4a9e02c, pCurrentWidth=0x7ffff4a9e020, pCurrentHeight=0x7ffff4a9e024, 
22:45 < bridge_> [ddnet] <Scrumplex>     pStorage=0x555555ad8910) at /home/scrumplex/ddnet/src/engine/client/backend_sdl.cpp:4368
22:45 < bridge_> [ddnet] <Scrumplex> 4368        if(g_Config.m_GfxOpenGLMajor == 1)
22:45 < bridge_> [ddnet] <Scrumplex> (gdb) p (int) s_SDLGLContextProfileMask
22:45 < bridge_> [ddnet] <Scrumplex> $1 = 0
22:45 < bridge_> [ddnet] <Scrumplex> (gdb) 
22:45 < bridge_> [ddnet] <Scrumplex> ```
22:45 < bridge_> [ddnet] <Scrumplex> @Jupstar âœª 
22:45 < bridge_> [ddnet] <Scrumplex> ```c
22:45 < bridge_> [ddnet] <Scrumplex> [2021-04-30 22:44:14][sdl]: SDL version 2.0.14 (compiled = 2.0.14)
22:45 < bridge_> [ddnet] <Scrumplex> 
22:45 < bridge_> [ddnet] <Scrumplex> Thread 1 "DDNet" hit Breakpoint 1, CGraphicsBackend_SDL_OpenGL::Init (this=0x555555b07f80, pName=0x5555557d59c4 "DDNet Client", Screen=0x555555a29264 <g_Config+3876>, pWidth=0x555555a29268 <g_Config+3880>, 
22:45 < bridge_> [ddnet] <Scrumplex>     pHeight=0x555555a2926c <g_Config+3884>, FsaaSamples=0, Flags=1, pDesktopWidth=0x7ffff4a9e028, pDesktopHeight=0x7ffff4a9e02c, pCurrentWidth=0x7ffff4a9e020, pCurrentHeight=0x7ffff4a9e024, 
22:45 < bridge_> [ddnet] <Scrumplex>     pStorage=0x555555ad8910) at /home/scrumplex/ddnet/src/engine/client/backend_sdl.cpp:4368
22:45 < bridge_> [ddnet] <Scrumplex> 4368        if(g_Config.m_GfxOpenGLMajor == 1)
22:45 < bridge_> [ddnet] <Scrumplex> (gdb) p (int) s_SDLGLContextProfileMask
22:45 < bridge_> [ddnet] <Scrumplex> $1 = 0
22:46 < bridge_> [ddnet] <Scrumplex> (gdb) 
22:46 < bridge_> [ddnet] <Scrumplex> ```
22:46 < bridge_> [ddnet] <Scrumplex> looks meh if you ask me
22:46 < bridge_> [ddnet] <Scrumplex> ```
22:46 < bridge_> [ddnet] <Scrumplex> malloc_consolidate(): unaligned fastbin chunk detected
22:46 < bridge_> [ddnet] <Scrumplex> --Type <RET> for more, q to quit, c to continue without paging--
22:46 < bridge_> [ddnet] <Scrumplex> 
22:46 < bridge_> [ddnet] <Scrumplex> Thread 1 "DDNet" received signal SIGABRT, Aborted.
22:46 < bridge_> [ddnet] <Scrumplex> 0x00007ffff6ddcef5 in raise () from /usr/lib/libc.so.6
22:46 < bridge_> [ddnet] <Scrumplex> (gdb) bt
22:46 < bridge_> [ddnet] <Scrumplex> #0  0x00007ffff6ddcef5 in raise () at /usr/lib/libc.so.6
22:46 < bridge_> [ddnet] <Scrumplex> #1  0x00007ffff6dc6862 in abort () at /usr/lib/libc.so.6
22:46 < bridge_> [ddnet] <Scrumplex> #2  0x00007ffff6e1ef38 in __libc_message () at /usr/lib/libc.so.6
22:46 < bridge_> [ddnet] <Scrumplex> #3  0x00007ffff6e26bea in  () at /usr/lib/libc.so.6
22:46 < bridge_> [ddnet] <Scrumplex> #4  0x00007ffff6e27c94 in malloc_consolidate () at /usr/lib/libc.so.6
22:46 < bridge_> [ddnet] <Scrumplex> #5  0x00007ffff6e284a0 in _int_free () at /usr/lib/libc.so.6
22:46 < bridge_> [ddnet] <Scrumplex> #6  0x00007ffff6e2bca8 in free () at /usr/lib/libc.so.6
22:46 < bridge_> [ddnet] <Scrumplex> #7  0x00005555557a0237 in CHeap::Clear() (this=0x555555a210b0 <gs_Voting+16>) at /home/scrumplex/ddnet/src/engine/shared/memheap.cpp:71
22:46 < bridge_> [ddnet] <Scrumplex> #8  0x00005555557a0191 in CHeap::~CHeap() (this=0x555555a210b0 <gs_Voting+16>, __in_chrg=<optimized out>) at /home/scrumplex/ddnet/src/engine/shared/memheap.cpp:53
22:46 < bridge_> [ddnet] <Scrumplex> #9  0x00005555556da101 in CVoting::~CVoting() (this=0x555555a210a0 <gs_Voting>, __in_chrg=<optimized out>) at /home/scrumplex/ddnet/src/game/client/components/voting.h:12
22:46 < bridge_> [ddnet] <Scrumplex> #10 0x00007ffff6ddf697 in __run_exit_handlers () at /usr/lib/libc.so.6
22:46 < bridge_> [ddnet] <Scrumplex> #11 0x00007ffff6ddf83e in  () at /usr/lib/libc.so.6
22:46 < bridge_> [ddnet] <Scrumplex> #12 0x00007ffff6dc7b2c in __libc_start_main () at /usr/lib/libc.so.6
22:46 < bridge_> [ddnet] <Scrumplex> #13 0x000055555557a3de in _start ()
22:46 < bridge_> [ddnet] <Scrumplex> (gdb) 
22:46 < bridge_> [ddnet] <Scrumplex> ```
22:46 < bridge_> [ddnet] <DDNet> https://github.com/ddnet/ddnet/issues/1
22:47 < bridge_> [ddnet] <DDNet> https://github.com/ddnet/ddnet/issues/2
22:47 < bridge_> [ddnet] <DDNet> https://github.com/ddnet/ddnet/issues/3
22:47 < bridge_> [ddnet] <DDNet> https://github.com/ddnet/ddnet/issues/4
22:47 < bridge_> [ddnet] <DDNet> https://github.com/ddnet/ddnet/issues/5
22:47 < bridge_> [ddnet] <DDNet> https://github.com/ddnet/ddnet/issues/6
22:47 < bridge_> [ddnet] <DDNet> https://github.com/ddnet/ddnet/pull/7
22:47 < bridge_> [ddnet] <DDNet> https://github.com/ddnet/ddnet/pull/8
22:47 < bridge_> [ddnet] <DDNet> https://github.com/ddnet/ddnet/issues/9
22:47 < bridge_> [ddnet] <DDNet> https://github.com/ddnet/ddnet/pull/10
22:47 < bridge_> [ddnet] <DDNet> https://github.com/ddnet/ddnet/issues/11
22:47 < bridge_> [ddnet] <Scrumplex> doesnt even start at all
22:47 < bridge_> [ddnet] <Scrumplex> WTF
22:47 < bridge_> [ddnet] <Scrumplex> lol
22:47 < bridge_> [ddnet] <Jupstar âœª> yeahj
22:47 < bridge_> [ddnet] <Jupstar âœª> bcs wayland uses EGL, which doesnt really support opengl with SDL
22:47 < bridge_> [ddnet] <Jupstar âœª> thats why i need a way to detect if opengl es is requested on runtime
22:47 < bridge_> [ddnet] <Jupstar âœª> so we dont need to ship 2 exe
22:48 < bridge_> [ddnet] <Jupstar âœª> but since the value is 0, SDL doesnt seem to help me with that, so we could e.g. only do a if video driver == wayland patch, which i dont really like
23:06 < bridge_> [ddnet] <Scrumplex> wtf i cant get it to run at all
23:09 < bridge_> [ddnet] <Jupstar âœª> u need xwayland @Scrumplex
23:10 < bridge_> [ddnet] <Jupstar âœª> without it, it wont work, bcs opengl works differently to GLES, it loads all functions at runtime
23:10 < bridge_> [ddnet] <Scrumplex> `env SDL_VIDEOBACKEND=x11 ./DDNet`
23:10 < bridge_> [ddnet] <Scrumplex> works with the steam binary
23:10 < bridge_> [ddnet] <Scrumplex> aborts with the above trace
23:11 < bridge_> [ddnet] <Jupstar âœª> SDL_VIDEODRIVER ?
23:12 < bridge_> [ddnet] <Scrumplex> yeah thats the one
23:13 < bridge_> [ddnet] <Scrumplex> (clipboard with Steam via XWayland is weird)
23:13 < bridge_> [ddnet] <Scrumplex> ok that one works :D
