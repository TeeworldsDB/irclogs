00:10 < bridge> <Ewan> could u add some anti-jitter for when on top of/walking into lasers
00:38 < bridge> <Learath2> door prediction has been on the schedule for a while now
00:48 < bridge> <newlesstee> how to create the ```c++
00:48 < bridge> <newlesstee> void CGameContext::CreatePlayerSpawn(vec2 Pos, int64_t Mask)
00:48 < bridge> <newlesstee> ````
00:48 < bridge> <newlesstee> without sound ?
00:48 < bridge> <newlesstee> how to create the ```c++
00:48 < bridge> <newlesstee> void CGameContext::CreatePlayerSpawn(vec2 Pos, int64_t Mask)
00:48 < bridge> <newlesstee> ```
00:48 < bridge> <newlesstee> without sound ?
00:49 < bridge> <newlesstee> (i want the particle effect)
07:48 < bridge> <ReiTW> If sendsound isn't called in that function then it is client side
07:53 < bridge> <fokkonaut> ❤️
07:54 < bridge> <fokkonaut> For some reason I see a rise in new devs coding own little mods. So cool :)
07:55 < bridge> <fokkonaut> cant, client creates sound when it receives this thing
08:25 < bridge> <yeeeey> Why maximal speed in ddnet 75 block in second?
08:38 < bridge> <yeeeey> ay
08:50 < bridge> <Jupstar ✪> That's 270km/h . Faster than most racing games
08:59 < bridge> <fokkonaut> https://tenor.com/view/pedro-monkey-puppet-meme-awkward-gif-15268759
08:59 < bridge> <cauldron> What, but they aren‘t played that much are they?
08:59 < bridge> <fokkonaut> I'm not sure, but its cool anyways
08:59 < bridge> <fokkonaut> Its growth in the community
09:00 < bridge> <cauldron> I played teeware, it‘s really fun.
09:04 < bridge> <fokkonaut> Yea, its cool
09:12 < bridge> <yeeeey> Please give me a link to download teewars 1.0
13:03 < bridge> <<~{Barsik}~>> https://downloads.teeworlds.com/teewars/
13:03 < bridge> <<~{Barsik}~>> https://downloads.teeworlds.com/old_releases/
15:26 < bridge> <Ryozuki> is it safe to cast a `int x[32]` to `unsigned char *` ?
15:26 < bridge> <heinrich5991> yes
15:27 < bridge> <heinrich5991> everything is safe to cast to `unsigned char *`
15:27 < bridge> <Ryozuki> hmm i see
15:27 < bridge> <Ryozuki> and will the sizeof(x) work
15:27 < bridge> <Ryozuki> for that unsigned char*?
15:27 < bridge> <Ryozuki> `func(const unsigned char*pBuf, size_t BufLen)`
15:28 < bridge> <Ryozuki> `func((unsigned char *)x, sizeof(x))`
15:28 < bridge> <Ryozuki> ?
15:28 < bridge> <Ryozuki> xd
15:28 < bridge> <Ryozuki> my c++ is now rusty
15:28 < bridge> <Ryozuki> hehe pun intended
15:29 < bridge> <Jupstar ✪> If x is the original data type. It works
15:30 < bridge> <Jupstar ✪> The cast happens in place and not for the original variable
15:31 < bridge> <Ryozuki> x is a int[32]
15:31 < bridge> <Ryozuki> a array with a known size
15:31 < bridge> <Ryozuki> array decay sux
15:31 < bridge> <Ryozuki> std::array best
15:31 < bridge> <Ryozuki> its like c++ loves to lose info
15:31 < bridge> <Jupstar ✪> Then it will give u the size of the full array
15:32 < bridge> <Jupstar ✪> Same for std array
15:32 < bridge> <Ryozuki> meh my problem is that the print looks like overruns
15:32 < bridge> <Ryozuki> but in another place it doesnt happen xd
15:32 < bridge> <Jupstar ✪> In bytes
15:32 < bridge> <Jupstar ✪> Std::size for element count
15:33 < bridge> <Ryozuki> std::size fixed it
15:33 < bridge> <Ryozuki> sizeof is evil
15:34 < bridge> <Jupstar ✪> size of is still important tho
15:35 < bridge> <Jupstar ✪> Working with binary data etc
15:35 < bridge> <Ryozuki> yeye
15:35 < bridge> <Ryozuki> im just rly rusty
15:35 < bridge> <Jupstar ✪> i even use it in rust
15:35 < bridge> <Jupstar ✪> xd
15:35 < bridge> <Ryozuki> xd
15:35 < bridge> <Ryozuki> its so hard to use modern c++ in ddnet code
15:35 < bridge> <Ryozuki> cuz old code
15:36 < bridge> <Ryozuki> bjorne is wrong
15:36 < bridge> <Ryozuki> https://www.thecodedmessage.com/posts/stroustrup-response/
15:36 < bridge> <Ryozuki> good read
15:36 < bridge> <Jupstar ✪> modern c++ core features, or modern c++ standard library?
15:36 < bridge> <Ryozuki> both i guess xd
15:36 < bridge> <Ryozuki> probs library
15:36 < bridge> <Jupstar ✪> bcs i really think the core features are cool,
15:36 < bridge> <Jupstar ✪> like variadic templates would be awesome in rust
15:36 < bridge> <Ryozuki> cuz idk the features
15:37 < bridge> <Jupstar ✪> its compile time safe too
15:37 < bridge> <Ryozuki> variadic is the infinite params right
15:37 < bridge> <Jupstar ✪> (type safe)
15:37 < bridge> <Ryozuki> i think thats haard
15:37 < bridge> <Jupstar ✪> yes but at compile time
15:37 < bridge> <Ryozuki> there is a rfc somewhere with comments
15:37 < bridge> <Jupstar ✪> not like var args
15:37 < bridge> <Ryozuki> u can probs emulate it with a macro tho
15:37 < bridge> <Jupstar ✪> yeah macros are basically infinite power
15:37 < bridge> <Ryozuki> https://www.memorysafety.org/blog/remy-rakic-compile-times/
15:38 < bridge> <Jupstar ✪> but also lot of work, esp procedual ones
15:38 < bridge> <heinrich5991> int[32] parameter or int[32] something else?
15:38 < bridge> <heinrich5991> int[32] parameter is actually int*
15:38 < bridge> <Ryozuki> its from a struct
15:38 < bridge> <Ryozuki> i get from a pRawMsg
15:38 < bridge> <heinrich5991> then sizeof should work
15:39 < bridge> <Jupstar ✪> template <size_t a>
15:39 < bridge> <Jupstar ✪> void my_func((& myarray)[a]){}
15:39 < bridge> <Jupstar ✪> then u have the array as param
15:39 < bridge> <Ryozuki> @heinrich5991 well im using that size and multiplying it by 2 + 1 to print its hex value
15:39 < bridge> <Ryozuki> with std::size it worked
15:39 < bridge> <Ryozuki> xd
15:39 < bridge> <Ryozuki> im working on smth that will probs not be accepted
15:39 < bridge> <Ryozuki> but its fun
15:39 < bridge> <Ryozuki> been long i didnt do ddnet
15:39 < bridge> <Jupstar ✪> yeah std::array is maybe more intuitive generally spoken
15:40 < bridge> <heinrich5991> is there a type missing?
15:40 < bridge> <Jupstar ✪> .size()
15:40 < bridge> <heinrich5991> for the array
15:40 < bridge> <Jupstar ✪> yeah
15:41 < bridge> <Jupstar ✪> comes before (&
15:41 < bridge> <Jupstar ✪> int (& array)[a]
15:42 < bridge> <Jupstar ✪> what were u workin on again?
15:42 < bridge> <Jupstar ✪> fix skin master register xddd
15:42 < bridge> <Ryozuki> im tryna make a secure channel
15:42 < bridge> <Ryozuki> i doont like that rust code
15:42 < bridge> <Ryozuki> im not touching it
15:42 < bridge> <Jupstar ✪> xDDDD
15:43 < bridge> <Jupstar ✪> bcs of the includes?
15:43 < bridge> <Ryozuki> its a cumulative thing
15:43 < bridge> <Jupstar ✪> why doesn't rust-analyzer manages them btw?
15:43 < bridge> <Ryozuki> includes, style, old versions, warp
15:43 < bridge> <Ryozuki> it makes me itchy
15:43 < bridge> <Jupstar ✪> feels wrong to me
15:43 < bridge> <Ryozuki> rustfmt manages it
15:43 < bridge> <Ryozuki> i think vscode keeps the style used
15:44 < bridge> <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1071078701535596646/image.png
15:44 < bridge> <Ryozuki> i hecking love c++
15:44 < bridge> <Jupstar ✪> i'd have thought rustfmt is part of rust-analyzer? at least for the vscode extension?
15:45 < bridge> <Ryozuki> no
15:45 < bridge> <Jupstar ✪> smth formats my code
15:45 < bridge> <Jupstar ✪> ^
15:45 < bridge> <Ryozuki> rust-analyzer is like running cargo c
15:45 < bridge> <Ryozuki> if u right click format in vscode
15:45 < bridge> <Ryozuki> it calls rustfmt
15:45 < bridge> <Jupstar ✪> i told vscode to use rust-analyze but i guess its doing it internally
15:45 < bridge> <Ryozuki> xd
15:45 < bridge> <Jupstar ✪> yes
15:46 < bridge> <Jupstar ✪> 1. it needs auto remove of unused imports
15:46 < bridge> <Jupstar ✪> 
15:46 < bridge> <Jupstar ✪> 2. there is no include all missing includes
15:46 < bridge> <Ryozuki> rust-analyzer is a LSP not a foormatter
15:46 < bridge> <Jupstar ✪> any ideas?
15:46 < bridge> <Ryozuki> cargo fix
15:46 < bridge> <Jupstar ✪> i find the vscode extension too bad
15:46 < bridge> <Jupstar ✪> 
15:46 < bridge> <Jupstar ✪> it only runs on save
15:46 < bridge> <Jupstar ✪> didnt find an option to always work
15:47 < bridge> <Jupstar ✪> clangd is better default
15:47 < bridge> <Ryozuki> hmm i save 5 times per second so
15:47 < bridge> <Jupstar ✪> yes but it runs on save and is relatively slow
15:47 < bridge> <Ryozuki> clangd is incredibly fast
15:47 < bridge> <Ryozuki> i will give u that
15:47 < bridge> <Ryozuki> but i think its a much simpler work xd
15:47 < bridge> <Jupstar ✪> i'd prefer it makes smaller analyze steps
15:48 < bridge> <Ryozuki> btw if u made rust-analyzer use cargo clippy
15:48 < bridge> <Ryozuki> its a bit slower
15:48 < bridge> <Ryozuki> cuz more checks
15:48 < bridge> <Ryozuki> @Jupeyy_Keks wanna have fun in ur code?=
15:48 < bridge> <Ryozuki> ```rust
15:48 < bridge> <Ryozuki> #![warn(
15:49 < bridge> <Ryozuki>      clippy::all,
15:49 < bridge> <Ryozuki>      clippy::restriction,
15:49 < bridge> <Ryozuki>      clippy::pedantic,
15:49 < bridge> <Ryozuki>      clippy::nursery,
15:49 < bridge> <Ryozuki>      clippy::cargo,
15:49 < bridge> <Ryozuki>  )]
15:49 < bridge> <Ryozuki> ```
15:49 < bridge> <Ryozuki> add this
15:49 < bridge> <Ryozuki> on ur lib
15:49 < bridge> <Ryozuki> at top
15:49 < bridge> <Jupstar ✪> i just use
15:49 < bridge> <Jupstar ✪> https://twitter.com/m_ou_se/status/1527209443309633536
15:49 < bridge> <Ryozuki> oh u found her
15:49 < bridge> <Ryozuki> the wizard xd
15:49 < bridge> <Jupstar ✪> yeah its really funny
15:50 < bridge> <Ryozuki> > How it works? Simple: It reads the compiler errors that happen in the future, parses the suggestions for missing imports, then travels back in time to include those in its expansion before the errors even happened. ⏪ ✨
15:50 < bridge> <Ryozuki> > 
15:50 < bridge> <Ryozuki> > (Without any unsafe code at all!)
15:50 < bridge> <Ryozuki> epic
15:51 < bridge> <Ryozuki> ```
15:51 < bridge> <Ryozuki> 2023-02-03 15:51:14 I crypto: received client '0' public key '2500bbdb2033f8352aa56fd024746148a54b620a30a578cc6fdfedf355194900'
15:51 < bridge> <Ryozuki> 2023-02-03 15:51:14 I crypto: established a secure channel with client=0
15:51 < bridge> <Ryozuki> ```
15:51 < bridge> <Ryozuki> good shit
15:51 < bridge> <Ryozuki> 30 mins to  find i was using pMsg instead of Msg somewhere
15:55 < bridge> <Ryozuki> <https://github.com/ddnet/ddnet/compare/master...edg-l:ddnet:encrypted_messages>
15:55 < bridge> <Jupstar ✪> i'd really love to know which of my rust deps use a c compiler
15:55 < bridge> <Ryozuki> they will have a build.rs
15:55 < bridge> <Jupstar ✪> yeah, heinrich said, replace gcc with a dummy
15:55 < bridge> <Jupstar ✪> probs the easiest xD
15:56 < bridge> <Ryozuki> @Jupeyy_Keks btw do u knoow how to forward declare a define?
15:56 < bridge> <Ryozuki> or if its possible
15:57 < bridge> <Jupstar ✪> a define as like c macro?
15:57 < bridge> <Ryozuki> i want to "re export" a define from a include from a library, but not expose the include
15:57 < bridge> <Ryozuki> yeah im talking about c++
15:57 < bridge> <Jupstar ✪> i mean like
15:57 < bridge> <Jupstar ✪> 
15:57 < bridge> <Jupstar ✪> #define
15:57 < bridge> <Ryozuki> ye
15:57 < bridge> <Ryozuki> since i didnt know i just defined it too the value i know from the lib
15:57 < bridge> <Jupstar ✪> i mean u can always #undef any define
15:57 < bridge> <Ryozuki> and use static_assert oon the cpp file xd
15:58 < bridge> <Ryozuki> but it kind of didnt work
15:58 < bridge> <Ryozuki> when i tried
15:58 < bridge> <Ryozuki> the value is not updated
15:58 < bridge> <Ryozuki> i think cuz cpp files are last or smth
15:59 < bridge> <Ryozuki> `#define CRYPTO_SESSION_BYTES crypto_kx_SESSIONKEYBYTES`
15:59 < bridge> <Ryozuki> i want to do this define in a header, but not include the whole library
15:59 < bridge> <Ryozuki> xd
16:11 < bridge> <Jupstar ✪> then just do it
16:11 < bridge> <Jupstar ✪> defines are not source code
16:12 < bridge> <Ryozuki> dooing that will include the library header
16:12 < bridge> <Ryozuki> into my header
16:12 < bridge> <Ryozuki> which i avoid xd
16:12 < bridge> <Jupstar ✪> why
16:12 < bridge> <Ryozuki> so that all library functionality is contained within that cpp file
16:12 < bridge> <Jupstar ✪> you can just copy that line into your header file
16:12 < bridge> <Ryozuki> i did copy the value
16:12 < bridge> <Ryozuki> and then added a static_assert on the cpp file
16:12 < bridge> <Ryozuki> to maake sure its the saame
16:12 < bridge> <Ryozuki> but feels haacky
16:12 < bridge> <Ryozuki> check the link i sent xd
16:13 < bridge> <Jupstar ✪> which commit
16:13 < bridge> <Ryozuki> <https://github.com/ddnet/ddnet/compare/master...edg-l:ddnet:encrypted_messages#diff-3d269a8b9112e38f6e076b6921916a034692e9dc59506fbb9f218881cdf132c2R11>
16:13 < bridge> <Ryozuki> the define
16:13 < bridge> <Ryozuki> <https://github.com/ddnet/ddnet/compare/master...edg-l:ddnet:encrypted_messages#diff-c80b2c76d31cef98f83a3c363c0c7566286bdab072aa00588ac63e0878255617R13>
16:13 < bridge> <Ryozuki> the assert
16:13 < bridge> <Jupstar ✪> ah i see
16:16 < bridge> <Jupstar ✪> i mean if the value never changes i guess this is good enough
16:17 < bridge> <Jupstar ✪> except including the header any other hack might be more messy
16:18 < bridge> <Ryozuki> now i need to find a nice way to wrap a msg into another that encrypts it
16:18 < bridge> <Ryozuki> or smth like that
16:21 < bridge> <Ryozuki> time to check python xd
16:22 < bridge> <Jupstar ✪> "do you want to install the configuration file from the package maintainers"
16:22 < bridge> <Jupstar ✪> 
16:22 < bridge> <Jupstar ✪> grub config
16:22 < bridge> <Jupstar ✪> 
16:22 < bridge> <Jupstar ✪> 
16:22 < bridge> <Jupstar ✪> sweating hard xDD
16:22 < bridge> <Jupstar ✪> but i pressed yes. lets see what breaks
16:25 < bridge> <Ryozuki> xd
16:25 < bridge> <Ryozuki> what u dooin
16:25 < bridge> <Jupstar ✪> just did a apt upgrade
16:25 < bridge> <Jupstar ✪> but i dont remember wtf i changed in the grub config
16:29 < bridge> <Ryozuki> ok i need too do it decoupled
16:29 < bridge> <Ryozuki> and u can even do in place encryption and decryption
16:29 < bridge> <Ryozuki> this might be possible
16:29 < bridge> <Ryozuki> hacker time
17:36 < bridge> <Learath2> Isn't there a way to diff configs in whatever distro you use?
17:39 < bridge> <Jupstar ✪> yes but i was too lazy, now its too late xD
17:57 < bridge> <Ryozuki> zzz
17:57 < bridge> <Ryozuki> too much effort
17:58 < bridge> <ReiTW> u can diff normally before that
17:58 < bridge> <Ryozuki> my head is spinning from looking at packers and unpackers
17:58 < bridge> <Ryozuki> and the sixup code mixed there
17:59 < bridge> <ReiTW> fix it by removing sixup
17:59 < bridge> <ReiTW> improvement feature
17:59 < bridge> <Ryozuki> i need to mutate the data of packets marked for encryption by adding a nonce, and then the encryption, which changes the size by adding a MAC at the start
17:59 < bridge> <Ryozuki> and then too decrypt the same
18:00 < bridge> <Ryozuki> i wonder if this would ever work xd
18:00 < bridge> <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1071112928998199339/image.png
18:01 < bridge> <Ryozuki> im 2 lazy too finish this
18:01 < bridge> <Ryozuki> back to playing ff
18:19 < bridge> <MilkeeyCat> @Ryozuki cors still doesnt work 🙃
18:19 < bridge> <Ryozuki> no u
18:19 < bridge> <Ryozuki> how do u do the calls
18:20 < bridge> <MilkeeyCat> https://cdn.discordapp.com/attachments/293493549758939136/1071117870760726639/image.png
18:21 < bridge> <Ryozuki> this time its ur fault
18:21 < bridge> <Ryozuki> curl woorks
18:21 < bridge> <Ryozuki> u should learn coors
18:22 < bridge> <Ryozuki> ````
18:22 < bridge> <Ryozuki> < access-control-allow-origin: *
18:22 < bridge> <Ryozuki> < access-control-allow-headers: Authorization
18:22 < bridge> <Ryozuki> < access-control-expose-headers: Link
18:22 < bridge> <Ryozuki> < cache-control: max-age=31536000, public```
18:22 < bridge> <Ryozuki> curl returns this
18:22 < bridge> <Ryozuki> @MilkeeyCat
18:22 < bridge> <Ryozuki> are u using fetch()
18:22 < bridge> <Ryozuki> oor another library
18:22 < bridge> <MilkeeyCat> fetch
18:22 < bridge> <Ryozuki> add mode: 'cors', // no-cors, *cors, same-origin
18:22 < bridge> <Ryozuki> to ur fetch
18:22 < bridge> <Ryozuki> https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options
18:23 < bridge> <Ryozuki> my keyboard is rly on its end
18:23 < bridge> <Ryozuki> it repeats so many keys
18:23 < bridge> <Ryozuki> @Learath2 @Jupeyy_Keks any good mechanical keyboard u know?
18:23 < bridge> <Ryozuki> i dont mind up to 200€
18:24 < bridge> <MilkeeyCat> it responds with 200 but gives this
18:24 < bridge> <MilkeeyCat> https://cdn.discordapp.com/attachments/293493549758939136/1071118966824648744/image.png
18:25 < bridge> <Ryozuki> send me the url of the request
18:25 < bridge> <Ryozuki> soo i can test
18:25 < bridge> <MilkeeyCat> https://ddstats.org/ddnet-693575f.json?sql=SELECT+*%2C+SUM%28Points%29+FROM%0D%0A%28SELECT+race.Timestamp%2C+maps.Points+FROM+race+INNER+JOIN+maps+ON+maps.Map+%3D+race.Map+WHERE+race.Name+%3D+%22Lumpy+%E2%97%90%CF%89%E2%97%91%22+GROUP+BY+race.Map%29%0D%0AGROUP+BY+strftime%28%22%25Y%22%2C+Timestamp%29
18:26 < bridge> <Ryozuki> it  works with curl
18:27 < bridge> <Jupstar ✪> depends
18:27 < bridge> <Jupstar ✪> for gaming:
18:27 < bridge> <Jupstar ✪> Corsair K70 with cherry mx speed
18:27 < bridge> <Jupstar ✪> 
18:27 < bridge> <Jupstar ✪> best keyboard i used so far
18:27 < bridge> <Jupstar ✪> 
18:27 < bridge> <Jupstar ✪> for general purose my logitec was better tho: it was more silent and less often missclicks
18:27 < bridge> <Jupstar ✪> 
18:27 < bridge> <Jupstar ✪> the mx speed switches are insanely responsive, even at light touching
18:27 < bridge> <Ryozuki> i game and program
18:27 < bridge> <Ryozuki> xd
18:27 < bridge> <Ryozuki> ill check the corsair
18:28 < bridge> <Ryozuki> @Jupeyy_Keks holy
18:28 < bridge> <Ryozuki> thats one expensive keyboard
18:30 < bridge> <Jupstar ✪> 160€
18:30 < bridge> <Ryozuki> uh
18:30 < bridge> <Jupstar ✪> i bought mine (without RGB) for 130€ i think
18:30 < bridge> <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1071120479827529768/image.png
18:30 < bridge> <Jupstar ✪> https://www.amazon.de/Corsair-Profile-Rapidfire-Mechanische-Tastatur/dp/B07HX65JHB/ref=sr_1_2?keywords=corsair+k70+speed&qid=1675445423&sprefix=%2Caps%2C68&sr=8-2
18:30 < bridge> <Jupstar ✪> buy from germany xd
18:31 < bridge> <Ryozuki> nonono
18:31 < bridge> <Ryozuki> i dont want a german keyboard
18:31 < bridge> <Jupstar ✪> xdd
18:32 < bridge> <Ryozuki> @Jupeyy_Keks https://www.amazon.es/Corsair-K95-RGB-Platinum-Retroiluminaci%C3%B3n/dp/B06XD7W3YZ/
18:32 < bridge> <Ryozuki> what about this
18:32 < bridge> <Ryozuki> mx speed
18:32 < bridge> <Jupstar ✪> yeah maybe its the newer generation i dunno
18:32 < bridge> <Ryozuki> oohh
18:32 < bridge> <Ryozuki> it supports usb and bluetooth
18:32 < bridge> <Ryozuki> perfect cuz my mac doesnt have usbs
18:33 < bridge> <Jupstar ✪> xDD
18:35 < bridge> <Jupstar ✪> https://www.amazon.de/gp/product/B01E5LSCS6/ref=ppx_yo_dt_b_asin_title_o02_s00?ie=UTF8&psc=1
18:35 < bridge> <Jupstar ✪> 
18:35 < bridge> <Jupstar ✪> this was the one i bought, for 116€ according to my buying history
18:35 < bridge> <Jupstar ✪> but i guess this would be even better since its newer?  😄
18:35 < bridge> <Jupstar ✪> it looks pretty good to me, not cheap
18:35 < bridge> <Jupstar ✪> logitech is good but always feels like the cheapest crap
18:36 < bridge> <Ryozuki> ye
18:36 < bridge> <Ryozuki> xd
18:37 < bridge> <MilkeeyCat> if you have * in access-control-allow-origin it means it will respond any origin
18:37 < bridge> <MilkeeyCat> right?
18:38 < bridge> <Jupstar ✪> should
18:39 < bridge> <Ryozuki> @MilkeeyCat ah maybe its cuz ur localhost
18:39 < bridge> <Ryozuki> sometimes its weird and localhost is not accepted
18:39 < bridge> <MilkeeyCat> fair enough
18:39 < bridge> <Ryozuki> https://bugs.chromium.org/p/chromium/issues/detail?id=67743
18:39 < bridge> <Ryozuki> Chrome does not support localhost for CORS requests (a bug opened in 2010, marked WontFix in 2014).
18:39 < bridge> <Ryozuki> @MilkeeyCat did u try with firefox
18:40 < bridge> <Ryozuki> https://chrome.google.com/webstore/detail/allow-cors-access-control/lhobafahddgcelffkeicbaginigeejlf
18:40 < bridge> <Ryozuki> or use this
18:40 < bridge> <Ryozuki> when developing
18:40 < bridge> <Ryozuki> when u deploy it to a domain it should work^tm
18:41 < bridge> <MilkeeyCat> but it should work with any other origins
18:41 < bridge> <MilkeeyCat> riight?
18:41 < bridge> <Ryozuki> when u use fetch i think the browser ultimately sets the oorigin
18:41 < bridge> <Ryozuki> but idk
18:41 < bridge> <MilkeeyCat> just open any website
18:42 < bridge> <MilkeeyCat> open dev tools and paste this ```fetch("https://ddstats.org/ddnet-693575f.json?sql=SELECT+*%2C+SUM%28Points%29+FROM%0D%0A%28SELECT+race.Timestamp%2C+maps.Points+FROM+race+INNER+JOIN+maps+ON+maps.Map+%3D+race.Map+WHERE+race.Name+%3D+%22Lumpy+%E2%97%90%CF%89%E2%97%91%22+GROUP+BY+race.Map%29%0D%0AGROUP+BY+strftime%28%22%25Y%22%2C+Timestamp%29")```
18:44 < bridge> <Jupstar ✪> for firefox there is also an extension to force allow it
18:50 < bridge> <scar17off> cors unblocker
18:59 < bridge> <Learath2> I’ve been very happy with my leopold fc660m
18:59 < bridge> <Learath2> If it wasn’t insanely expensive I know a keyboard you’d love. UHK 60 v2
19:00 < bridge> <Learath2> Completely open source, including the hardware, you can even modify the firmware as you wish
19:04 < bridge> <MilkeeyCat> It didnt work in browser because server didnt send Access-Control-Allow-Origin header :0 im stoopid
19:06 < bridge> <Ryozuki> omg
19:07 < bridge> <Ryozuki> maybe my next
19:25 < bridge> <MilkeeyCat> But if so, it wont work on website even if i host it :thonk:
20:20 < bridge> <404wilson> the fuck
21:14 < bridge> <straightop> @Ryozuki\: hey uhm could you unban me on the official ddnet discord, meek banned me cause he had a arguement with me in the dms
21:18 < bridge> <DefaultO> not even I managed to get banned yetz
21:18 < bridge> <DefaultO> not even I managed to get banned yet
21:18 < bridge> <DefaultO> and people want me to shut up
21:19 < bridge> <straightsux> thats your own problem
21:19 < bridge> <straightsux> (@DefaultO)
21:19 < bridge> <straightsux> i got banned for nothing
21:19 < bridge> <DefaultO> xd
21:19 < bridge> <DefaultO> am I talking to the IRC guys using this channel?
21:21 < bridge> <Ryozuki> im not admin in discord
21:27 < bridge> <straightsux> you are a dev tho
21:27 < bridge> <straightsux> (@Ryozuki)
21:28 < bridge> <DefaultO> doesn't change anything. he got no permission on the discord. all he can do is say a good word about you.
21:28 < bridge> <straightsux> oh bruh
21:28 < bridge> <straightsux> (@DefaultO)
21:30 < bridge> <newlesstee> How would I make it so that a player(specifc) cannot be hooked by another?
21:30 < bridge> <newlesstee> I don't know how to do it in Character core(it can be made in character entity?)
23:56 < bridge> <heinrich5991> check for it in the place where hooking another character happens, I guess
23:56 < bridge> <heinrich5991> probably somewhere in gamecore.cpp
