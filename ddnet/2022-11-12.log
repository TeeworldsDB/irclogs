00:01 <+bridge> [ddnet] <Voxel> well, the free packet is. we have the free solid packet, which is why i filtered it out in the link
00:40 <+bridge> [ddnet] <Voxel> So far so good! How readable is this?
00:40 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1040773087836246066/image.png
00:41 <+bridge> [ddnet] <Voxel> Also, I wanted to change these to icons as well.
00:41 <+bridge> [ddnet] <Voxel> Are these any good? Or is the original prefered?
00:41 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1040773200625287241/image.png
00:41 <+bridge> [ddnet] <Voxel> Also, I wanted to change these to icons as well.
00:41 <+bridge> [ddnet] <Voxel> Are these any good? Or is the original preferred?
00:41 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1040773200625287241/image.png
00:41 <+bridge> [ddnet] <Voxel> @Ravie mapper feedback pl0x
00:43 <+bridge> [ddnet] <Ravie> I like it but not sure what some of them mean
00:43 <+bridge> [ddnet] <Voxel> arrows = animation speed
00:43 <+bridge> [ddnet] <Voxel> squares = grid size
00:43 <+bridge> [ddnet] <Voxel> arrows to right = animation speed
00:43 <+bridge> [ddnet] <Voxel> squares = grid size
00:43 <+bridge> [ddnet] <Chairn> double arrows are resize?
00:43 <+bridge> [ddnet] <Ravie> the fullscreen things?
00:44 <+bridge> [ddnet] <Voxel> yea
00:44 <+bridge> [ddnet] <Ravie> those aren't very clear
00:44 <+bridge> [ddnet] <Ravie> but u said these are from a font?
00:44 <+bridge> [ddnet] <Voxel> yea
00:44 <+bridge> [ddnet] <Voxel> this one
00:45 <+bridge> [ddnet] <Voxel> so we have, **zoom, flip horiz/vert, rotate quad, anim speed, resize grid**
00:45 <+bridge> [ddnet] <Ravie> those could work, sadly not square
00:45 <+bridge> [ddnet] <Ravie> https://cdn.discordapp.com/attachments/293493549758939136/1040774361566683297/image.png
00:45 <+bridge> [ddnet] <Voxel> thank! i'll try those!
00:46 <+bridge> [ddnet] <Ravie> I just searched `grid` :justatest:
00:46 <+bridge> [ddnet] <Voxel> damn
00:48 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1040775033888456804/image.png
00:49 <+bridge> [ddnet] <Voxel> actually what if i try a different approach to this?
00:51 <+bridge> [ddnet] <Voxel> What if I do something like this instead?
00:51 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1040775759419150476/image.png
00:52 <+bridge> [ddnet] <Ravie> I like that but the middle is still reset?
00:52 <+bridge> [ddnet] <Voxel> Yeah.
00:52 <+bridge> [ddnet] <Voxel> I was just thinking about this too.
00:55 <+bridge> [ddnet] <Ryozuki> <a:nekospin:1039804721378111548>
00:55 <+bridge> [ddnet] <Voxel> @Pipou You're a mapper. What're your take on these changes for the editor UI?
01:35 <+bridge> [ddnet] <Voxel> I think it's worth the risk doing it this way
01:35 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1040786940208889866/image.png
01:35 <+bridge> [ddnet] <Voxel> dont know what symbol to use for animation
01:37 <+bridge> [ddnet] <Pipou> @Voxel It seems much better
01:38 <+bridge> [ddnet] <Pipou> I'm just too used to the keyboard shortcut
01:38 <+bridge> [ddnet] <Pipou> I believe it would be very helpful for newcomers
01:38 <+bridge> [ddnet] <Pipou> I'm just too used to the keyboard shortcuts
02:07 <+bridge> [ddnet] <Voxel> I'll go with this variation for now, and if it's too confusing I can change it
05:09 <+bridge> [ddnet] <Voxel> omg i just got a genius idea for this. what if when you hover your mouse over the middle buttons they turn into a reset symbol, so it indicates better it's meant for resetting the value
08:03 <+bridge> [ddnet] <chillerdragon> Imo the crossed out eye looks bloat. Not simple enough for tw style. Can you change it‚Äôs opacity instead? As in grey it out when it‚Äôs inactive?
08:03 <+bridge> [ddnet] <chillerdragon> (@Voxel)
08:20 <+bridge> [ddnet] <Voxel> Yeah I can try that
08:22 <+bridge> [ddnet] <Jupstar ‚ú™> Why the hell must the editor GUI look tw style xd
08:23 <+bridge> [ddnet] <Voxel> speaking of bloat, we dont even use like 3/4th of the entire font icon pack
08:23 <+bridge> [ddnet] <Voxel> when i have enough time and will i want to attempt to make a localized icon pack with custom made icons
08:23 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1040889604640874546/image.png
08:39 <+ChillerDragon> Omg jopstar ur lawyer and financial advisor but u know nothin about design sorri
08:39 <+ChillerDragon> editor does have to look nice and clean!
08:39 <+ChillerDragon> complex textures are ugly
09:19 <+ChillerDragon> my new favorite snap type: SNAPEMPTY
09:19 <+ChillerDragon> axaxax
09:20 <+ChillerDragon> even better than SNAPCHAT
09:27 <+bridge> [ddnet] <Alexander> @Voxel Maybe could consider https://fonts.google.com/icons?icon.query=visibility
09:28 <+bridge> [ddnet] <Alexander> Material Symbols and Icons has much less icons than fontawesome but I think they look better and more similar to eachother
09:28 <+bridge> [ddnet] <Alexander> @Voxel Maybe could consider <https://fonts.google.com/icons?icon.query=visibility>
09:30 <+ChillerDragon> First screenshot of a vanilla client being connected to a server written in ruby! pog https://zillyhuhn.com/cs/.1668241778.png
09:30 <+bridge> [ddnet] <Alexander> node-tw-server when‚Ñ¢Ô∏è?
09:30 <+ChillerDragon> @Swarfey
09:31 <+ChillerDragon> he is da typescript boi you wanna lobby to
09:31 <+bridge> [ddnet] <Alexander> https://tenor.com/view/eminem-job-for-me-gif-10358335
09:31 <+bridge> [ddnet] <Alexander> Swarfey be like:
09:31 <+ChillerDragon> I remember zeta bullying heinrich for implementing the tw server side in rust instead of client because its "the easy part" but so far I do not agree :D
09:32 <+bridge> [ddnet] <Alexander> xd
09:32 <+bridge> [ddnet] <Alexander> As it seems nothing is easy when it comes to teeworlds coding
09:32 <+ChillerDragon> In the client one can get pretty far without snaps. The server is pretty useless withou them.
09:32 <+ChillerDragon> But luckily there is snap empty which is magic hack :D
09:33 <+bridge> [ddnet] <Alexander> I'm not very fluent in teeworlds server terminology so I don't know what snaps are
09:33 <+ChillerDragon> its like a image you send
09:33 <+ChillerDragon> and it disappears after a few seconds
09:33 <+bridge> [ddnet] <Alexander> ü§î
09:33 <+ChillerDragon> https://www.snapchat.com/
09:34 <+ChillerDragon> trolololol
09:34 <+bridge> [ddnet] <Alexander> Okay I understand that but what does it have to do with the server
09:34 <+ChillerDragon> No like snaps are basically the game state the server sends to the client. It holds all the entities like players and their positions etc
09:34 <+bridge> [ddnet] <Alexander> Ah okay you trolled me
09:34 <+bridge> [ddnet] <Alexander> I'm dumb
09:34 <+ChillerDragon> hrhrhrhr
09:34 <+ChillerDragon> get stickbugged
09:35 <+bridge> [ddnet] <Alexander> Oh I understand
09:35 <+ChillerDragon> and the client is really sad if the server sends no snaps
09:35 <+ChillerDragon> but building snaps is hard
09:35 <+ChillerDragon> but there is a empty snap type  that is ez to build and makes the client happy 
09:35 <+ChillerDragon> hackerdragon doing ugly hax
09:35 <+bridge> [ddnet] <Alexander> It's like a way for the client and the server to be on the same page
09:35 <+ChillerDragon> ye
09:35 <+bridge> [ddnet] <Alexander> I mean the client
09:36 <+bridge> [ddnet] <Alexander> The server doesn't care
09:36 <+ChillerDragon> actually the server does care a bit if the client got the snap
09:36 <+bridge> [ddnet] <Alexander> How much does it care
09:36 <+bridge> [ddnet] <Alexander> I mean it won't break if the client didn't get it
09:37 <+ChillerDragon> That part im currently trying to figure out but stuff breaks if the client does not tell the server it got the correct stuff
09:38 <+bridge> [ddnet] <Alexander> Does that mean that one could technically mod their client to troll the server?
09:38 <+ChillerDragon> Yes troll the server into kicking you for "Too weak connection" if you do not properly ack all server packets xd
09:39 <+bridge> [ddnet] <Alexander> In that case no =]
09:39 <+ChillerDragon> prank gone wrong
09:39 <+bridge> [ddnet] <Alexander> [Backfired] [Gone wrong]
09:40 <+ChillerDragon> when tw server in pure css?
09:40 <+ChillerDragon> aw shit im procrastinating again xd
09:42 <+bridge> [ddnet] <Alexander> maybe not css
09:43 <+ChillerDragon> Isnt css turing complete
09:43 <+ChillerDragon> there is even a chat app build in css
09:43 <+ChillerDragon> https://github.com/kkuchta/css-only-chat
09:43 <+ChillerDragon> ruby pog
09:43 <+bridge> [ddnet] <Alexander> Idk if thats the one i saw
09:44 <+bridge> [ddnet] <Alexander> But that is pretty epic
09:44 <+ChillerDragon> faq section of readme is gold
09:44 <+bridge> [ddnet] <Alexander> Okay while you are here
09:44 <+bridge> [ddnet] <Alexander> And since you know what teeassembler is
09:45 <+bridge> [ddnet] <Alexander> <https://github.com/AlexIsTheGuy/TeeAssembler-2.0>
09:45 <+bridge> [ddnet] <Alexander> Star this and don't ask any questions
09:45 <+bridge> [ddnet] <Alexander> üëÄ
09:45 <+ChillerDragon> FOLLOW LIKE SHARE SUBSCRIBE
09:45 <+ChillerDragon> STAR4STAR
09:45 <+ChillerDragon> follow4follow
09:45 <+ChillerDragon> axaxax
09:45 <+bridge> [ddnet] <Alexander> exactly xd
09:45 <+ChillerDragon> i didnt even use it yet
09:45 <+ChillerDragon> so idk if it any gud
09:46 <+ChillerDragon> but it has nice documentation in readme
09:46 <+ChillerDragon> u got my star
09:46 <+bridge> [ddnet] <Alexander> ayy
09:46 <+ChillerDragon> TEE ASS EMBLER
09:46 <+bridge> [ddnet] <Alexander> it's kinda not perfect
09:46 <+ChillerDragon> hihi
09:47 <+ChillerDragon> Last time i looked into those things was like years ago when building this beauty https://zillyhuhn.com/DDNetPP-web/players.php
09:48 <+bridge> [ddnet] <Alexander> ayoo its using the old version
09:48 <+bridge> [ddnet] <Alexander> which was quite frankly shit
09:48 <+ChillerDragon> xd
09:48 <+bridge> [ddnet] <Alexander> you can try the new one I think there is a link on github
09:48 <+bridge> [ddnet] <Alexander> it works with colors too
09:49 <+ChillerDragon> i aint touching that php monster today :D
09:49 <+bridge> [ddnet] <Alexander> It literally has 0 php
09:49 <+ChillerDragon> the todos are just too overwhelming
09:49 <+ChillerDragon> nah i mean my old php website that makes use of teeassembler
09:50 <+bridge> [ddnet] <Alexander> Ah
09:50 <+bridge> [ddnet] <Alexander> well there is your problem
09:50 <+bridge> [ddnet] <Alexander> php
09:50 <+ChillerDragon> xd
09:50 <+ChillerDragon> php is so nice to get started
09:50 <+ChillerDragon> no dependencies or boilerplating needed
09:50 <+ChillerDragon> just add 1 more line and one more line
09:51 <+ChillerDragon> copy from w3 schools
09:51 <+ChillerDragon> and ez done website
09:51 <+bridge> [ddnet] <Alexander> lmao
09:51 <+bridge> [ddnet] <Alexander> I'm a classic javascript dev
09:51 <+bridge> [ddnet] <Alexander> as fireship said
09:51 <+ChillerDragon> soydev
09:51 <+bridge> [ddnet] <Alexander> I like reinventing the wheel as much as the next javascript developer
09:51 <+ChillerDragon> well at least js ecosystem uses packages
09:52 <+ChillerDragon> C and C++ developers do reinvent all wheels cuz they dont use other peoples code xd
09:52 <+bridge> [ddnet] <Alexander> also fireship said C++ is bloated
09:52 <+ChillerDragon> wot
09:52 <+bridge> [ddnet] <Alexander> I don't know since i havent used
09:55 <+ChillerDragon> lmao i managed to bug client graphics using crack server
09:55 <+bridge> [ddnet] <Alexander> looks like someone forgot to send the right data to client
10:02 <+ChillerDragon> looks like someone forgot to handle incorrect data in the client :p
10:34 <+bridge> [ddnet] <Ryozuki> good morning ddnet
10:36 <+bridge> [ddnet] <murpi> morning, good day for fishing ain't it
10:40 <+ChillerDragon> murpi NPC
10:42 <+ChillerDragon> I think I slowly got the hype about test driven development!
10:42 <+ChillerDragon> I added so many CI pipelines that no matter how drunk i was while editing the code if the pipeline is green i can be sure notjing broke
10:43 <+ChillerDragon> https://zillyhuhn.com/cs/.1668246138.png
10:43 <+bridge> [ddnet] <jao> morning
10:44 <+ChillerDragon> jao alive
10:44 <+ChillerDragon> omg
10:45 <+bridge> [ddnet] <deen> That is not test driven development though, but just having good test coverage
10:46 <+bridge> [ddnet] <deen> and using CI as a merge barrier
10:46 <+ChillerDragon> TDD is write test first then code huh?
10:46 <+bridge> [ddnet] <deen> TDD would mean you write a new test before you even start writing the feature
10:46 <+ChillerDragon> ah yea
10:46 <+bridge> [ddnet] <deen> which is a bit awkward and extreme I think
10:47 <+ChillerDragon> yea ok then im not hyped about TDD ... yet
10:47 <+bridge> [ddnet] <deen> a fair enough compromise is to say you have to submit test and code together (thus not decreasing code coverage)
10:47 <+ChillerDragon> but about good test coverage
10:47 <+ChillerDragon> ye i write code and then tests that pass for the code i wrote
10:47 <+ChillerDragon> so i see when my behavior changed
10:47 <+ChillerDragon> and it worked pretty dope so far!
10:48 <+ChillerDragon> Especially full integration tests that run the whole thing are gold 
10:48 <+bridge> [ddnet] <deen> hi jao
10:48 <+ChillerDragon> xd
10:49 <+bridge> [ddnet] <deen> yes, integration tests are more valuable than unit tests since you know the feature actually works for the user. but they run much slower than unit tests, so more expensive
10:56 <+bridge> [ddnet] <Learath2> I find TDD works decently for user facing APIs. Though I don't do it all the time either. Sometimes I just think of some behaviour or edgecase for an api endpoint and I'll jot down a test first mostly so I remember
11:17 <+ChillerDragon> Imo the thing is that while you write the code you might notice that the api would be better/easier to code if it looked differently
12:27 <+bridge> [ddnet] <Swarfey> üßå i believe that would take ages
12:28 <+bridge> [ddnet] <Swarfey> took me already a few months of irregular updates to finish the client
12:28 <+bridge> [ddnet] <Swarfey> not even completely finished yet, i bet there are still some things to add
12:38 <+ChillerDragon> thats motivating thanks swarfey xd
12:39 <+ChillerDragon> omg rubys missing types drive me nuts
12:39 <+bridge> [ddnet] <Swarfey> well the worst things were snapshot uuid's which i was procrastinating away for months
12:39 <+bridge> [ddnet] <Swarfey> finally implemented it yesterday
12:41 <+ChillerDragon> im back to being stuck at tokens again :D
12:41 <+ChillerDragon> idk how that happend
12:43 <+bridge> [ddnet] <Swarfey> whats the problem with the token
12:44 <+bridge> [ddnet] <Swarfey> just store the last 4 bytes and append them to every packet
12:44 <+bridge> [ddnet] <Ryozuki> chiller come to rust
12:44 <+bridge> [ddnet] <Ryozuki> lots of types there
12:44 <+bridge> [ddnet] <Swarfey> or idk where it is in 0.7
12:44 <+bridge> [ddnet] <Ryozuki> and now GATs
12:44 <+bridge> [ddnet] <Ryozuki> generic associated types
12:44 <+bridge> [ddnet] <Ryozuki> im trying to do what u doing in ruby but in rust
12:45 <+bridge> [ddnet] <Ryozuki> time to learn wireshark
12:53 <+ChillerDragon> @Swarfey I store my tokens as strings xd so they might either be "\x01\x01\x01\x01" or "1111" or "01010101" depending how i currently formatted them. Or better its suddenly the array [1,1,1,1]
12:54 <+bridge> [ddnet] <Swarfey> o_O
12:54 <+bridge> [ddnet] <Swarfey> dont you have something like buffers or something in ruby?
12:57 <+bridge> [ddnet] <chillerdragon> Idk
13:09 <+bridge> [ddnet] <Jupstar ‚ú™> @deen nightly from steam under linux not starting :/
13:09 <+bridge> [ddnet] <Jupstar ‚ú™> it simply hangs
13:10 <+bridge> [ddnet] <Jupstar ‚ú™> mhh RC too, weird, self compiling works tho
13:11 <+bridge> [ddnet] <Alexander> https://tenor.com/view/cat-shaking-radlcies-gif-24378563
13:11 <+bridge> [ddnet] <Alexander> Ryozuki trying not to mention rust for 5 seconds
13:12 <+bridge> [ddnet] <Jupstar ‚ú™> maybe the steam update broke it or smth, bcs nightly from website works
13:14 <+bridge> [ddnet] <uwu> Its new "btw im using linux"
13:14 <+bridge> [ddnet] <Jupstar ‚ú™> steam non beta client works
13:17 <+bridge> [ddnet] <Jupstar ‚ú™> lol change to beta again now it works. i love random bugs
13:17 <+bridge> [ddnet] <Jupstar ‚ú™> they always easy to answer
16:57 <+bridge> [ddnet] <Chairn> https://cdn.discordapp.com/attachments/293493549758939136/1041018906468429844/logo.jpeg
16:57 <+bridge> [ddnet] <Chairn> @Ryozuki ^
17:00 <+bridge> [ddnet] <Cellegen | RiH> oui()
17:07 <+ChillerDragon> https://github.com/bnjbvr/rouille
17:09 <+ChillerDragon> I identify with this one
17:09 <+ChillerDragon> https://github.com/Sanceilaks/rzhavchina/raw/principale/logo.png
17:11 <+bridge> [ddnet] <Chairn> turkish image is quite good as well
17:11 <+bridge> [ddnet] <Chairn> https://cdn.discordapp.com/attachments/293493549758939136/1041022538521784400/image.png
17:11 <+bridge> [ddnet] <Chairn> https://cdn.discordapp.com/attachments/293493549758939136/1041022538916036728/logo.png
17:11 <+bridge> [ddnet] <Chairn> turkish image is quite good as well
17:11 <+bridge> [ddnet] <Chairn> https://cdn.discordapp.com/attachments/293493549758939136/1041022538521784400/image.png
17:12 <+ChillerDragon> kraaal
17:13 <+bridge> [ddnet] <Chairn> uh, do i need visual studio now to build ddnet?
17:14 <+bridge> [ddnet] <Jupstar ‚ú™> yep, u need visual studio we dropped linux support
17:14 <+bridge> [ddnet] <Chairn> nah, on windows obviously...
17:15 <+bridge> [ddnet] <Jupstar ‚ú™> why do you think so?
17:15 <+bridge> [ddnet] <Chairn> rust says it needs visual studio dependencies
17:15 <+bridge> [ddnet] <Jupstar ‚ú™> how did you install rust?
17:15 <+bridge> [ddnet] <Chairn> ```
17:15 <+bridge> [ddnet] <Chairn> Rust Visual C++ prerequisites
17:15 <+bridge> [ddnet] <Chairn> 
17:15 <+bridge> [ddnet] <Chairn> Rust requires a linker and Windows API libraries but they don't seem to be
17:15 <+bridge> [ddnet] <Chairn> available.
17:15 <+bridge> [ddnet] <Chairn> 
17:15 <+bridge> [ddnet] <Chairn> These components can be acquired through a Visual Studio installer.
17:16 <+bridge> [ddnet] <Chairn> ```
17:16 <+bridge> [ddnet] <Chairn> didn't install yet
17:16 <+bridge> [ddnet] <Chairn> installer says that
17:16 <+bridge> [ddnet] <heinrich5991> how do you compile ddnet?
17:16 <+bridge> [ddnet] <heinrich5991> with the gnu toolchain?
17:16 <+bridge> [ddnet] <Chairn> yes
17:16 <+bridge> [ddnet] <Chairn> mingw
17:16 <+bridge> [ddnet] <heinrich5991> then you can download the mingw toolchain for rust
17:16 <+bridge> [ddnet] <heinrich5991> let me check how
17:16 <+bridge> [ddnet] <Jupstar ‚ú™> cant u simply download rust for msys
17:17 <+bridge> [ddnet] <Jupstar ‚ú™> pacman -S mingw-w64-x86_64-rust
17:17 <+bridge> [ddnet] <heinrich5991> ah maybe that as well
17:17 <+bridge> [ddnet] <heinrich5991> if not, try this: https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-gnu/rustup-init.exe
17:18 <+bridge> [ddnet] <heinrich5991> > On Windows, download and run the `rustup-init.exe` built for the `x86_64-pc-windows-msvc` target. In general, this is the build of rustup one should install on Windows. This will require the Visual C++ Build Tools 2019 or equivalent (Visual Studio 2019, etc.) to already be installed. If you would prefer to install GNU toolchains or the i686 toolchains by default this can be modified at install time, either interactively, with the `--
17:20 <+bridge> [ddnet] <Chairn> okay, trying with the x86_64-pc-windows-gnu host
17:24 <+bridge> [ddnet] <heinrich5991> tell us how it goes
17:27 <+bridge> [ddnet] <Chairn> so far seems to work
17:27 <+bridge> [ddnet] <Chairn> just need to make sure that CARGO_HOME and RUSTUP_HOME are properly set in bash
17:27 <+bridge> [ddnet] <heinrich5991> if you want to redirect it to some non-default place, yes
17:27 <+bridge> [ddnet] <Chairn> yup, using /c/rust
17:28 <+bridge> [ddnet] <heinrich5991> I see
17:29 <+bridge> [ddnet] <Chairn> ```
17:29 <+bridge> [ddnet] <Chairn> [0/255] Generating debug/libddnet_engine_shared.a
17:29 <+bridge> [ddnet] <Chairn>     Updating crates.io index
17:29 <+bridge> [ddnet] <Chairn>   Downloaded cc v1.0.73
17:29 <+bridge> [ddnet] <Chairn>   Downloaded link-cplusplus v1.0.6
17:29 <+bridge> [ddnet] <Chairn>   Downloaded cxx v1.0.71
17:29 <+bridge> [ddnet] <Chairn>   Downloaded proc-macro2 v1.0.40
17:29 <+bridge> [ddnet] <Chairn>   Downloaded quote v1.0.20
17:29 <+bridge> [ddnet] <Chairn>   Downloaded syn v1.0.98
17:29 <+bridge> [ddnet] <Chairn>   Downloaded cxxbridge-flags v1.0.71
17:29 <+bridge> [ddnet] <Chairn>   Downloaded unicode-ident v1.0.1
17:29 <+bridge> [ddnet] <Chairn>   Downloaded cxxbridge-macro v1.0.71
17:29 <+bridge> [ddnet] <Chairn>   Downloaded 9 crates (664.7 KB) in 2.64s
17:29 <+bridge> [ddnet] <Chairn>    Compiling cc v1.0.73
17:29 <+bridge> [ddnet] <Chairn>    Compiling proc-macro2 v1.0.40
17:29 <+bridge> [ddnet] <Chairn>    Compiling quote v1.0.20
17:29 <+bridge> [ddnet] <Chairn>    Compiling unicode-ident v1.0.1
17:29 <+bridge> [ddnet] <Chairn>    Compiling syn v1.0.98
17:30 <+bridge> [ddnet] <Chairn>    Compiling cxxbridge-flags v1.0.71
17:30 <+bridge> [ddnet] <Chairn>    Compiling ddnet-engine-shared v0.0.1 (E:\Teeworlds_DDNet\ddnet\src\engine\shared)
17:30 <+bridge> [ddnet] <Chairn>    Compiling ddnet-test v0.0.1 (E:\Teeworlds_DDNet\ddnet\src\rust-bridge\test)
17:30 <+bridge> [ddnet] <Chairn>    Compiling link-cplusplus v1.0.6
17:30 <+bridge> [ddnet] <Chairn>    Compiling cxx v1.0.71
17:30 <+bridge> [ddnet] <Chairn>    Compiling cxxbridge-macro v1.0.71
17:30 <+bridge> [ddnet] <Chairn>    Compiling ddnet-base v0.0.1 (E:\Teeworlds_DDNet\ddnet\src\base)
17:30 <+bridge> [ddnet] <Chairn>    Compiling ddnet-engine v0.0.1 (E:\Teeworlds_DDNet\ddnet\src\engine)
17:30 <+bridge> [ddnet] <Chairn>     Finished dev [unoptimized + debuginfo] target(s) in 2m 20s
17:30 <+bridge> [ddnet] <Chairn> ```
17:30 <+bridge> [ddnet] <Chairn> üôÇ
17:30 <+bridge> [ddnet] <heinrich5991> üôÇ
17:37 <+bridge> [ddnet] <Chairn> ```bash
17:37 <+bridge> [ddnet] <Chairn> $ CXXFLAGS="-fdiagnostics-color=always" CFLAGS="-fdiagnostics-color=always" cmake -G Ninja -DDEV=ON -DPREFER_BUNDLED_LIBS=ON -DIPO=OFF -DAUTOUPDATE=OFF -DDOWNLOAD_GTEST=ON ..
17:37 <+bridge> [ddnet] <Chairn> $ time ninja
17:37 <+bridge> [ddnet] <Chairn> ## with rust
17:37 <+bridge> [ddnet] <Chairn> real    1m47,277s
17:37 <+bridge> [ddnet] <Chairn> ## 16.5
17:37 <+bridge> [ddnet] <Chairn> real    1m26,152s
17:37 <+bridge> [ddnet] <Chairn> ```
17:44 <+bridge> [ddnet] <Ryozuki> https://github.com/edg-l/teeint
17:44 <+bridge> [ddnet] <Ryozuki> i know libtw has it but i made my own
17:45 <+bridge> [ddnet] <Learath2> Cool
17:45 <+bridge> [ddnet] <Ryozuki> ```rust
17:45 <+bridge> [ddnet] <Ryozuki> use teeint::UnPackTwInt;
17:45 <+bridge> [ddnet] <Ryozuki> 
17:45 <+bridge> [ddnet] <Ryozuki> let buff = [0b1000_0000, 0b0000_0001];
17:45 <+bridge> [ddnet] <Ryozuki> let result = buff.as_slice().unpack().unwrap();
17:45 <+bridge> [ddnet] <Ryozuki> assert_eq!(result, 64);
17:45 <+bridge> [ddnet] <Ryozuki> ```
17:45 <+bridge> [ddnet] <Ryozuki> with a fancy trait
17:45 <+bridge> [ddnet] <Learath2> Did you make it for sth or just for fun?
17:45 <+bridge> [ddnet] <Ryozuki> to call it on buffers directly
17:45 <+bridge> [ddnet] <Ryozuki> yeah idk i want to make parts of tw in rust like heinrich did
17:45 <+bridge> [ddnet] <Ryozuki> but ill publish them
17:45 <+bridge> [ddnet] <Ryozuki> as small crates
17:46 <+bridge> [ddnet] <Learath2> libtwzuki, go
17:46 <+bridge> [ddnet] <Ryozuki> ill also obey clippy like a god
17:46 <+bridge> [ddnet] <Ryozuki> :BASED:
17:48 <+bridge> [ddnet] <Ryozuki> ‚ùØ cargo clippy --all-targets
17:48 <+bridge> [ddnet] <Ryozuki> 
17:48 <+bridge> [ddnet] <Ryozuki>     Checking teeint v0.1.0 (/data1/edgar/teeint)
17:48 <+bridge> [ddnet] <Ryozuki>     Finished dev [unoptimized + debuginfo] target(s) in 0.14s
17:48 <+bridge> [ddnet] <Ryozuki> :PES3_Sus:
17:48 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1041031696444821604/image.png
17:48 <+bridge> [ddnet] <heinrich5991> nice üôÇ
17:49 <+bridge> [ddnet] <Ryozuki> the new code viewer in github is dope
17:49 <+bridge> [ddnet] <Ryozuki> i can search code on ddnet without needing to open it locally
17:49 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1041032115963306079/image.png
17:51 <+bridge> [ddnet] <heinrich5991> you could do that before, with the search at the top
17:52 <+bridge> [ddnet] <Ryozuki> it worked rly bad
17:52 <+bridge> [ddnet] <Ryozuki> they changed it
17:52 <+bridge> [ddnet] <heinrich5991> but I can't find the string you searched for üòÆ
17:52 <+bridge> [ddnet] <Ryozuki> well its in beta
17:52 <+bridge> [ddnet] <heinrich5991> so it's apparently bad
17:52 <+bridge> [ddnet] <Ryozuki> cuz im using the new code view
17:52 <+bridge> [ddnet] <Ryozuki> are you using it too?
17:53 <+bridge> [ddnet] <Ryozuki> https://github.com/orgs/community/discussions/38692
17:53 <+bridge> [ddnet] <heinrich5991> no, I checked using the old search
17:53 <+bridge> [ddnet] <Ryozuki> yeah old search is pretty bad
17:54 <+bridge> [ddnet] <heinrich5991> you could add some tests testing multi-byte representations
17:54 <+bridge> [ddnet] <heinrich5991> e.g. for the lowest and highest numbers
17:55 <+bridge> [ddnet] <Ryozuki> i have one for 64 but yeah i was a bit lazy to add more
17:55 <+bridge> [ddnet] <Ryozuki> ill add them sometime :D
17:56 <+bridge> [ddnet] <Learath2> Old search is that elasticsearch thing that tries to be way too smart. I absolutely hate what full text search has become in the last decade
17:57 <+ChillerDragon> @Ryozuki thanks for doing that! I do really appreciate individual crates with a nice readme on how to use them. Much more accessible for nobs than libtw2
17:57 <+bridge> [ddnet] <Ryozuki> yeah
17:57 <+bridge> [ddnet] <Ryozuki> thats how i felt too
17:57 <+bridge> [ddnet] <Learath2> 7-8 years ago you'd search for stuff and get pretty decent results. Now every site has this weird search behaviour, stemming words, ranking with weird metrics that makes no sense
17:57 <+bridge> [ddnet] <Ryozuki> altho libtw2 are loto of small crates internally tho
17:57 <+bridge> [ddnet] <Ryozuki> well idk if they are small
17:57 <+ChillerDragon> no docs and install command tho
17:57 <+ChillerDragon> and it all feels a bit interconnected
17:58 <+ChillerDragon> well i never bothered to understand libtw2 since i cant speak rust anyways but looking at your repos on github it does make a lot of sense at first glance
18:00 <+bridge> [ddnet] <heinrich5991> yea, libtw2 needs more documentation üò¶
18:01 <+bridge> [ddnet] <Ryozuki> i have rustyman and teeint now
18:01 <+bridge> [ddnet] <Ryozuki> building blocks to make a protocol parser or smth idk
18:01 <+bridge> [ddnet] <Ryozuki> havent tested rustyman (my huffman in rust) with the tw table tho
18:02 <+bridge> [ddnet] <heinrich5991> this documents the correct bit representations for each byte value in the tw table: https://github.com/heinrich5991/libtw2/blob/48a2573af66105fc38f032fe22cfcc60f95f7485/doc/huffman.md#appendix
18:02 <+bridge> [ddnet] <Ryozuki> oh nice
18:03 <+bridge> [ddnet] <heinrich5991> there's also an example compression in the docs
18:03 <+ChillerDragon> there is no headless tw client in apt huh? :(
18:03 <+bridge> [ddnet] <Ryozuki> btw what is a .ksy file?
18:03 <+bridge> [ddnet] <heinrich5991> katai struct
18:03 <+bridge> [ddnet] <heinrich5991> https://kaitai.io/
18:04 <+bridge> [ddnet] <Ryozuki> oh nice
18:04 <+bridge> [ddnet] <Ryozuki> no rust tho
18:04 <+bridge> [ddnet] <Ryozuki> that feels like smth that would fit a macro in rust
18:04 <+bridge> [ddnet] <Ryozuki> xd
18:04 <+ChillerDragon> can i run a gui tw client in github ci? anyone ever tried that?
18:04 <+ChillerDragon> like with some linux hax commands
18:04 <+bridge> [ddnet] <heinrich5991> probably, in some way
18:04 <+ChillerDragon> sounds like work
18:05 <+ChillerDragon> might as well just build -DHEADLESS_CLIENT=ON in the ci
18:05 <+ChillerDragon> or maybe server the binary on some sketchy url xd
18:05 <+ChillerDragon> serve*
18:05 <+bridge> [ddnet] <heinrich5991> https://amiralizadeh9480.medium.com/how-to-run-opengl-based-tests-on-github-actions-60f270b1ea2c
18:06 <+bridge> [ddnet] <heinrich5991> basically: only possible using software rendering
18:06 <+ChillerDragon> curl.exe
18:06 <+ChillerDragon> yikes
18:06 <+ChillerDragon> i also feel like it slows down the ci and i dont even need the gui
18:06 <+ChillerDragon> i think ill go with wget'ing the headless binary from some url
18:08 <+bridge> [ddnet] <Ryozuki> the MASKS and SHIFTS on c++ uses a static storage but in rust i decided to use const instead cuz according to the docs:
18:08 <+bridge> [ddnet] <Ryozuki> 
18:08 <+bridge> [ddnet] <Ryozuki> ```
18:08 <+bridge> [ddnet] <Ryozuki> Using Statics or Consts
18:08 <+bridge> [ddnet] <Ryozuki> 
18:08 <+bridge> [ddnet] <Ryozuki> It can be confusing whether or not you should use a constant item or a static item. Constants should, in general, be preferred over statics unless one of the following are true:
18:08 <+bridge> [ddnet] <Ryozuki>     Large amounts of data are being stored
18:08 <+bridge> [ddnet] <Ryozuki>     The single-address property of statics is required.
18:08 <+bridge> [ddnet] <Ryozuki>     Interior mutability is required.
18:08 <+bridge> [ddnet] <Ryozuki> ```
18:08 <+bridge> [ddnet] <Ryozuki> is there a reason they are static in c++?
18:09 <+bridge> [ddnet] <Ryozuki> <https://github.com/ddnet/ddnet/blob/79df5893ff26fa75d67e46f99e58f75b739ac362/src/engine/shared/compression.cpp#L49>
18:09 <+bridge> [ddnet] <Ryozuki> <https://doc.rust-lang.org/reference/items/static-items.html>
18:10 <+bridge> [ddnet] <Chairn> has anyone used twmap on windows?
18:10 <+bridge> [ddnet] <Chairn> twmap python binding
18:10 <+bridge> [ddnet] <Jupstar ‚ú™> dont care too much about such stuff, const is const
18:10 <+bridge> [ddnet] <Ryozuki> not the binding
18:11 <+bridge> [ddnet] <Ryozuki> i like to nitpick
18:11 <+bridge> [ddnet] <Chairn> ```
18:11 <+bridge> [ddnet] <Chairn> import twmap
18:11 <+bridge> [ddnet] <Chairn> Traceback (most recent call last):
18:11 <+bridge> [ddnet] <Chairn>   File "<pyshell#0>", line 1, in <module>
18:11 <+bridge> [ddnet] <Chairn>     import twmap
18:11 <+bridge> [ddnet] <Chairn>   File "C:\Python38\lib\site-packages\twmap\__init__.py", line 1, in <module>
18:11 <+bridge> [ddnet] <Chairn>     from .twmap import *
18:11 <+bridge> [ddnet] <Chairn> ImportError: DLL load failed while importing twmap: La proc√©dure sp√©cifi√©e est introuvable.
18:11 <+bridge> [ddnet] <Chairn> ```
18:11 <+bridge> [ddnet] <Ryozuki> and learn more if possible
18:11 <+bridge> [ddnet] <Ryozuki> :BASED:
18:11 <+bridge> [ddnet] <Jupstar ‚ú™> i'd use constexpr
18:11 <+bridge> [ddnet] <Chairn> looks like it tries to read a DLL, but there's no dll file
18:11 <+ChillerDragon> yikes windows
18:11 <+bridge> [ddnet] <Ryozuki> would it change anything herE?
18:11 <+bridge> [ddnet] <Ryozuki> here*
18:11 <+bridge> [ddnet] <Chairn> only a twmap.pyd
18:11 <+bridge> [ddnet] <Jupstar ‚ú™> but i doubt any sane compiler cannot optimize it
18:11 <+bridge> [ddnet] <Ryozuki> yeah xd
18:11 <+bridge> [ddnet] <Jupstar ‚ú™> i doubt it but try it out
18:11 <+bridge> [ddnet] <Ryozuki> but they use static
18:12 <+bridge> [ddnet] <Chairn> @Patiga https://discord.com/channels/252358080522747904/293493549758939136/1041037290459381810, any idea?
18:12 <+bridge> [ddnet] <Ryozuki> does `The single-address property of statics` help?
18:12 <+ChillerDragon> if you have HAVE to use windows why not use at least WSL? @Chairn
18:12 <+bridge> [ddnet] <Chairn> its windows 7
18:12 <+ChillerDragon> wtf
18:12 <+bridge> [ddnet] <Jupstar ‚ú™> mhh since its a scope var, it doesnt matter at all probably
18:12 <+ChillerDragon> this is getting better and better xd
18:12 <+bridge> [ddnet] <Ryozuki> yeah
18:12 <+ChillerDragon> why would you be using windows 7?
18:13 <+bridge> [ddnet] <Jupstar ‚ú™> he is one of the 10 trolls that hate ddnet
18:13 <+bridge> [ddnet] <Jupstar ‚ú™> and try everything to keep us supporting win7
18:13 <+ChillerDragon> trol
18:14 <+ChillerDragon> yea imo its cool to support win7
18:14 <+ChillerDragon> but its not cool to run win7
18:14 <+bridge> [ddnet] <Jupstar ‚ú™> its cool if it works on win7, its shit to give support for outdated stuff
18:14 <+ChillerDragon> so im curious why 
18:14 <+bridge> [ddnet] <Jupstar ‚ú™> it creates work for us
18:14 <+ChillerDragon> oke yea dpeends on the effort i guess
18:15 <+bridge> [ddnet] <Ryozuki> yeah
18:15 <+bridge> [ddnet] <Ryozuki> just use linux with kernel 6.1
18:15 <+bridge> [ddnet] <Ryozuki> otherwise no support
18:15 <+ChillerDragon> xd
18:15 <+bridge> [ddnet] <Jupstar ‚ú™> tru
18:15 <+ChillerDragon> yikes i use 6.0
18:15 <+bridge> [ddnet] <Ryozuki> same xd
18:15 <+bridge> [ddnet] <Ryozuki> 6.1 hasnt released
18:15 <+ChillerDragon> oh trol
18:15 <+bridge> [ddnet] <Jupstar ‚ú™> you so mainstream guys
18:15 <+bridge> [ddnet] <Jupstar ‚ú™> im hipstar
18:16 <+bridge> [ddnet] <Ryozuki> hi hipstar
18:16 <+ChillerDragon> yes?
18:16 <+bridge> [ddnet] <Ryozuki> im dad
18:16 <+ChillerDragon> how so?
18:16 <+bridge> [ddnet] <Jupstar ‚ú™> i use 6.1
18:16 <+ChillerDragon> oof
18:16 <+ChillerDragon> i use 6.2 my own linux fork who is ahead of mainline
18:16 <+bridge> [ddnet] <Jupstar ‚ú™> i made 6.3
18:16 <+ChillerDragon> xd
18:16 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1041038903521583224/image.png
18:16 <+bridge> [ddnet] <Ryozuki> the world shall be like this
18:17 <+bridge> [ddnet] <Ryozuki> god said
18:17 <+bridge> [ddnet] <Ryozuki> https://media.discordapp.net/attachments/342454474117218334/979686303492890654/11.gif
18:17 <+ChillerDragon> https://zillyhuhn.com/cs/.1668273326.png
18:17 <+bridge> [ddnet] <Ryozuki> ew
18:17 <+ChillerDragon> WHITE THEME GITHUB MASTERRACE
18:17 <+bridge> [ddnet] <Jupstar ‚ú™> i need to turn off my room light now
18:17 <+bridge> [ddnet] <Jupstar ‚ú™> thanks
18:17 <+bridge> [ddnet] <Ryozuki> xd
18:17 <+ChillerDragon> xd
18:18 <+ChillerDragon> dark theme is cool and all
18:19 <+ChillerDragon> but there are 3 OG whitetheme apps: discord, youtube, github
18:19 <+ChillerDragon> change my mind
18:19 <+ChillerDragon> heck 4
18:19 <+ChillerDragon> duck.com
18:19 <+bridge> [ddnet] <Jupstar ‚ú™> i miss the good old times
18:19 <+bridge> [ddnet] <Jupstar ‚ú™> https://badhtml.com/
18:20 <+ChillerDragon> im too young for that
18:20 <+ChillerDragon> dad
18:21 <+ChillerDragon> still waitin' for @Chairn to tell me why he runs win7
18:21 <+bridge> [ddnet] <Ryozuki> cuz he wants to be spied on
18:21 <+ChillerDragon> he can also get spied on on win10
18:21 <+ChillerDragon> even better there actually
18:21 <+bridge> [ddnet] <Ryozuki> @Not Keks u know geocities?
18:21 <+bridge> [ddnet] <Ryozuki> https://neocities.org/
18:22 <+bridge> [ddnet] <Jupstar ‚ú™> ez
18:22 <+bridge> [ddnet] <Ryozuki> https://cinni.net/
18:22 <+bridge> [ddnet] <Ryozuki> https://fauux.neocities.org/
18:22 <+bridge> [ddnet] <Ryozuki> they all so cool
18:22 <+bridge> [ddnet] <Jupstar ‚ú™> neo is the new hipster prefix it seems
18:22 <+ChillerDragon> weeb
18:22 <+bridge> [ddnet] <Jupstar ‚ú™> neovim neocities neodragon
18:22 <+bridge> [ddnet] <Ryozuki> https://mebious.neocities.org/
18:23 <+ChillerDragon> my fav site is dis: itanimulli.com
18:23 <+bridge> [ddnet] <Jupstar ‚ú™> the websites i have been waiting for
18:23 <+ChillerDragon> https://itanimulli.com
18:23 <+ChillerDragon> ah fak no https
18:23 <+ChillerDragon> http://itanimulli.com xd
18:23 <+ChillerDragon> fail
18:24 <+bridge> [ddnet] <Ryozuki> xd
18:26 <+bridge> [ddnet] <Patiga> is that the twmap package installed via pip or manually built?
18:30 <+ChillerDragon> he gone
18:32 <+bridge> [ddnet] <Chairn> because old pc
18:32 <+bridge> [ddnet] <Chairn> pip python3.8 on win7
18:34 <+ChillerDragon> Hm rip. So win blocks installation on old hardware? Rude windows.
18:38 <+bridge> [ddnet] <Patiga> anyone else on windows who can try out the twmap bindings?
18:39 <+ChillerDragon> I got a win10 drive but i really do not want to boot there now sori :(
18:40 <+ChillerDragon> @Ryozuki you did switch from vscode to vim right? How did you cope with missing multi cursors?
18:40 <+bridge> [ddnet] <Patiga> my win10 is also bricked for some reason
18:40 <+bridge> [ddnet] <Ryozuki> i always used vim
18:40 <+bridge> [ddnet] <Ryozuki> i only used vscode temporarely
18:40 <+ChillerDragon> oh ok gigachad sory
18:40 <+bridge> [ddnet] <Ryozuki> and u can do multi cursor in vim
18:40 <+ChillerDragon> how?
18:40 <+ChillerDragon> u mean ctrl+v?
18:41 <+bridge> [ddnet] <Ryozuki> https://github.com/mg979/vim-visual-multi
18:41 <+bridge> [ddnet] <Ryozuki> https://camo.githubusercontent.com/100be83770daaa30cdd285bcd321f00badd14a40c3415066e4de5cc347e0025e/68747470733a2f2f692e696d6775722e636f6d2f677746665578712e676966
18:41 <+ChillerDragon> ah yes this!
18:41 <+ChillerDragon> i need that xd
18:41 <+ChillerDragon> with word jump and stuff
18:42 <+ChillerDragon> plugin for neovim
18:42 <+ChillerDragon> oof
18:42 <+ChillerDragon> ah vim too
18:42 <+bridge> [ddnet] <Ryozuki> vim or neovim
18:42 <+ChillerDragon> pog
18:42 <+bridge> [ddnet] <Ryozuki> but use neovim
18:42 <+bridge> [ddnet] <Ryozuki> already
18:42 <+bridge> [ddnet] <Ryozuki> bruh
18:42 <+ChillerDragon> hehe
18:42 <+bridge> [ddnet] <Ryozuki> literally drop in replacement
18:42 <+bridge> [ddnet] <Ryozuki> it will use ur vim config
18:42 <+ChillerDragon> thats what they said about vi too
18:43 <+ChillerDragon> omg vi worst editor btw
18:43 <+ChillerDragon> i rather use notepad than vi
18:43 <+ChillerDragon> or microsoft word
18:44 <+ChillerDragon> u got that cursor plugin?
18:44 <+ChillerDragon> okok ima give it a try
18:44 <+bridge> [ddnet] <Ryozuki> nah
18:44 <+bridge> [ddnet] <Ryozuki> i never needed multiple cursors
18:44 <+bridge> [ddnet] <Ryozuki> u can use vim smarter
18:45 <+ChillerDragon> ok brain
18:45 <+bridge> [ddnet] <Ryozuki> chiller
18:45 <+bridge> [ddnet] <Ryozuki> do u use markers
18:45 <+ChillerDragon> if u rename a variable how u do that?
18:45 <+ChillerDragon> no
18:45 <+ChillerDragon> i use like 4 letters in vim
18:45 <+bridge> [ddnet] <Ryozuki> i use the lsp rename if its in lot of places
18:45 <+ChillerDragon> 3 of them are arrow keys xd
18:45 <+bridge> [ddnet] <Ryozuki> otherwise i just go to the word
18:46 <+bridge> [ddnet] <Ryozuki> dw
18:46 <+bridge> [ddnet] <Ryozuki> and type
18:46 <+ChillerDragon> whats lsp
18:46 <+bridge> [ddnet] <Ryozuki> or V
18:46 <+bridge> [ddnet] <Ryozuki> and replace
18:46 <+bridge> [ddnet] <Ryozuki> language server protocol
18:46 <+bridge> [ddnet] <Ryozuki> it knows language context
18:46 <+bridge> [ddnet] <Ryozuki> so u can to variable renames
18:46 <+bridge> [ddnet] <Ryozuki> clangd is the lsp for c/cpp
18:46 <+ChillerDragon> i manually search with /
18:46 <+ChillerDragon> or use :%s/pat/sub/g
18:46 <+bridge> [ddnet] <Ryozuki> i use a mapping i have
18:46 <+bridge> [ddnet] <Ryozuki> that uses FZF
18:46 <+bridge> [ddnet] <Ryozuki> to search
18:46 <+ChillerDragon> but its so bad
18:46 <+bridge> [ddnet] <Ryozuki> and it uses ripgrep internally
18:46 <+ChillerDragon> im such a beast with vscode
18:47 <+bridge> [ddnet] <Ryozuki> https://github.com/junegunn/fzf.vim
18:47 <+bridge> [ddnet] <Ryozuki> check this
18:47 <+ChillerDragon> ctrl+d is so poggers in vscode
18:47 <+ChillerDragon> and the multi cursor vim plugin remapped it to ctrl+n this fucks my muzzle memory
18:47 <+ChillerDragon> i never needed fuzzyness in my search
18:47 <+ChillerDragon> only for file open
18:48 <+ChillerDragon> but i got my ``vim "$(fzf)"`` alias for that
18:48 <+bridge> [ddnet] <Chairn> i think it just cannot find some rust libraries or some libraries that is needed for rust
18:48 <+bridge> [ddnet] <Ryozuki> maybe u need some c++ redist
18:49 <+bridge> [ddnet] <Patiga> I would expect everything to be statically linked
18:50 <+bridge> [ddnet] <Ryozuki> not libc
18:50 <+bridge> [ddnet] <Ryozuki> if its used somewhere
18:50 <+bridge> [ddnet] <Ryozuki> i think he needs a c++ redistribuible
18:50 <+bridge> [ddnet] <Ryozuki> or smth
18:51 <+ChillerDragon> im not sure if making vim work like vscode is even the correct approach
18:51 <+bridge> [ddnet] <Ryozuki> what
18:51 <+bridge> [ddnet] <Ryozuki> u make vim work like u want
18:51 <+bridge> [ddnet] <Ryozuki> thats the point of vim
18:51 <+bridge> [ddnet] <Ryozuki> + vim keybinds
18:51 <+bridge> [ddnet] <Chairn> yeah, any idea of how that .pyd file is generated?
18:53 <+bridge> [ddnet] <heinrich5991> @Patiga you need to take special care to statically link msvcrt. if you haven't done that, it's probably dynamically linked
18:54 <+bridge> [ddnet] <Chairn> any idea on how to get more detail from that python error? it doesn't even list the file
18:54 <+bridge> [ddnet] <Chairn> error attribute has no info...
18:55 <+bridge> [ddnet] <Patiga> hm, that is unfortunate, my pyo3 guide didn't mention anything there, it mostly just talked about python version compatibility
18:55 <+bridge> [ddnet] <Patiga> https://pyo3.rs/v0.17.3/building_and_distribution.html#cross-compiling
18:56 <+bridge> [ddnet] <Chairn> hmmm, so all rust libs are statically linked?
18:56 <+bridge> [ddnet] <heinrich5991> it's windows that is probably not giving more info
18:56 <+bridge> [ddnet] <Chairn> i tried ldd and readelf on the twmap.pyd, but both says unknown format
18:56 <+bridge> [ddnet] <heinrich5991> can you point `file` at twmap.pyd?
18:57 <+bridge> [ddnet] <Ryozuki> pure rust libs yes
18:57 <+bridge> [ddnet] <Ryozuki> by default
18:57 <+bridge> [ddnet] <Ryozuki> but rust uses libc
18:57 <+bridge> [ddnet] <Ryozuki> iirc
18:58 <+bridge> [ddnet] <Ryozuki> rust itself
18:58 <+bridge> [ddnet] <Chairn> `twmap.pyd: PE32+ executable (DLL) (console) x86-64 (stripped to external PDB), for MS Windows`
18:58 <+bridge> [ddnet] <heinrich5991> you can try using some windows tools to inspect it
18:58 <+bridge> [ddnet] <Chairn> dumpbin but is not installed, is in visual studio...
18:58 <+bridge> [ddnet] <Chairn> https://stackoverflow.com/a/64620736
18:59 <+bridge> [ddnet] <Ryozuki> @Chairn https://aka.ms/vs/17/release/vc_redist.x86.exe
18:59 <+bridge> [ddnet] <Ryozuki> maybe installing this helps
18:59 <+bridge> [ddnet] <Ryozuki> https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170
18:59 <+bridge> [ddnet] <Ryozuki> > The Visual C++ Redistributable installs Microsoft C and C++ (MSVC) runtime libraries. These libraries are required by many applications built by using Microsoft C and C++ tools. If your app uses those libraries, a Microsoft Visual C++ Redistributable package must be installed on the target system before you install your app. The Redistributable package architecture must match your app's target architecture. The Redistributable version mus
18:59 <+bridge> [ddnet] <Chairn> already did
18:59 <+bridge> [ddnet] <Ryozuki> oh
18:59 <+bridge> [ddnet] <Chairn> no change
18:59 <+bridge> [ddnet] <Ryozuki> and doesnt work?
19:00 <+bridge> [ddnet] <Patiga> https://doc.rust-lang.org/reference/linkage.html#static-and-dynamic-c-runtimes
19:00 <+bridge> [ddnet] <Patiga> this seems to be the relevant compiler flag which I can enable permanently in a repository like this
19:00 <+bridge> [ddnet] <Patiga> https://doc.rust-lang.org/rustc/codegen-options/index.html?highlight=%2Bcrt-static#target-feature
19:00 <+bridge> [ddnet] <Patiga> the linux twmap packages should still work btw, since they are built in a very compatibility-focused docker, not on arch
19:01 <+bridge> [ddnet] <Ryozuki> https://www.microsoft.com/en-gb/download/details.aspx?id=48145
19:01 <+bridge> [ddnet] <Ryozuki> @Chairn and this?
19:01 <+bridge> [ddnet] <Patiga> am I on the right track here @heinrich5991? :)
19:02 <+bridge> [ddnet] <heinrich5991> target-feature=+crt-static
19:02 <+bridge> [ddnet] <heinrich5991> `target-feature=+crt-static`
19:02 <+bridge> [ddnet] <heinrich5991> this is what I was talking about
19:02 <+bridge> [ddnet] <heinrich5991> it's in your link, so I guess yes
19:02 <+bridge> [ddnet] <Patiga> üëç
19:03 <+bridge> [ddnet] <Patiga> I guess I activate that feature for windows only?
19:03 <+bridge> [ddnet] <heinrich5991> yes
19:03 <+bridge> [ddnet] <Chairn> a newer version is already installed, cannot proceed
19:03 <+bridge> [ddnet] <Ryozuki> ah ok
19:03 <+bridge> [ddnet] <Ryozuki> idk
19:03 <+bridge> [ddnet] <Chairn> trying this, but doesn't output anything interesting
19:03 <+bridge> [ddnet] <Chairn> https://github.com/lucasg/Dependencies
19:13 <+bridge> [ddnet] <Chairn> nvinitx.dll not found
19:14 <+bridge> [ddnet] <Chairn> https://cdn.discordapp.com/attachments/293493549758939136/1041053298041573498/image.png
19:14 <+bridge> [ddnet] <Chairn> kinda weird that a module depends on itself, but the path is `C:/Windows/System32` instead of `C:/Windows/system32`
19:16 <+bridge> [ddnet] <Chairn> oh, it contains a comma
19:19 <+bridge> [ddnet] <Chairn> well, even with a comma, python doesn't find it, but the dependency tool doesn't complain anymore...
19:23 <+bridge> [ddnet] <Patiga> @Chairn I published a new version for windows, where I explicitly turned on the static linking, could you please try it out? its version 0.4.2
19:27 <+bridge> [ddnet] <Chairn> same error...
19:28 <+bridge> [ddnet] <Patiga> darn
19:28 <+bridge> [ddnet] <Chairn> do you know a way to get python to be more verbose about tis error?
19:29 <+bridge> [ddnet] <Patiga> I don't
19:29 <+bridge> [ddnet] <heinrich5991> it's the error from the winapi, likely
19:29 <+bridge> [ddnet] <heinrich5991> given that it's translated
19:29 <+bridge> [ddnet] <heinrich5991> there is no more information available
19:30 <+bridge> [ddnet] <Patiga> not sure if you are already on it, but you could install rust and see if that does anything. then you could try if you can manually build it again. if that fails, then I'd blame your setup :d
19:31 <+bridge> [ddnet] <Patiga> but I do really want it to run on any normal setup, sucks that it doesn't yet
19:32 <+bridge> [ddnet] <Chairn> rust is already installed
19:32 <+bridge> [ddnet] <Chairn> but i don't think it tries to load a rust library
19:32 <+bridge> [ddnet] <Learath2> You can also use a winapi monitor to see what dll it's trying to open
19:32 <+bridge> [ddnet] <Chairn> how do i do that?
19:33 <+bridge> [ddnet] <Learath2> I honestly don't know the modern tool for it, but there used to be one literally called API Monitor
19:34 <+bridge> [ddnet] <Chairn> ah, with the cli, i managed to get this:
19:34 <+bridge> [ddnet] <Chairn> `[NOT_FOUND] gdiplus.dll :`
19:34 <+bridge> [ddnet] <Learath2> Most of the development tooling on windows is rotting because it's proprietary garbage
19:40 <+ChillerDragon> /usr/bin/ld.gold: error: /home/chiller/Desktop/git/ddnet/ddnet-libs/png/linux/lib64/libpng16.a(pngtrans.o): requires dynamic R_X86_64_32 reloc which may overflow at runtime; recompile with -fPIC
19:40 <+ChillerDragon> watafek
19:41 <+bridge> [ddnet] <Jupstar ‚ú™> dont use bundled libs
19:42 <+bridge> [ddnet] <Jupstar ‚ú™> r u shipping it?
19:42 <+bridge> [ddnet] <Chairn> or add -mcmodel=large to CFLAGS
19:43 <+ChillerDragon> yes ima ship dis build
19:43 <+ChillerDragon> how to create proper rls then? :(
19:43 <+bridge> [ddnet] <Jupstar ‚ú™> i mean it tells u what to do
19:44 <+ChillerDragon> oke
19:44 <+ChillerDragon> why dont we do that in cmake alr?
19:44 <+bridge> [ddnet] <Jupstar ‚ú™> its the libpng
19:45 <+bridge> [ddnet] <Jupstar ‚ú™> tbh i guess nobody noticed yet
19:45 <+bridge> [ddnet] <Jupstar ‚ú™> the official builds run on a dated linux
19:45 <+bridge> [ddnet] <Jupstar ‚ú™> it probs doesnt warn xd
19:46 <+bridge> [ddnet] <Jupstar ‚ú™> also i dunno if we use the gold linker tbh
19:46 <+bridge> [ddnet] <Jupstar ‚ú™> who uses that xd
19:46 <+bridge> [ddnet] <Jupstar ‚ú™> just ship a clang build
19:47 <+bridge> [ddnet] <Jupstar ‚ú™> but to whom are u sharing btw?
19:47 <+bridge> [ddnet] <Jupstar ‚ú™> if u use a modern linux it might still use a new libc requirement
19:47 <+ChillerDragon> i dont get it i tried this ``CC=clang CXX=clang++ CXXFLAGS=-fPIC CFLAGS=-fPIC cmake .. -DHEADLESS_CLIENT=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo -DPREFER_BUNDLED_LIBS=ON``
19:47 <+bridge> [ddnet] <Jupstar ‚ú™> u cannot really expect it to just work xd
19:47 <+ChillerDragon> idk i do a github rls for now my main use case is to dl it in github pipeline
19:48 <+bridge> [ddnet] <Jupstar ‚ú™> ok
19:48 <+bridge> [ddnet] <Jupstar ‚ú™> just make sure to analyse the objects dependencies
19:48 <+ChillerDragon> so i should probably do it on debian instead on arch xd
19:49 <+ChillerDragon> wat are object depdencies
19:49 <+bridge> [ddnet] <Jupstar ‚ú™> its not a must have that newer libc is required.. it depends what new features in libc are used in some other libs, e.g. libstdc++
19:49 <+bridge> [ddnet] <Jupstar ‚ú™> i mean the shared object dependecies, the exported symbols basically
19:49 <+bridge> [ddnet] <Jupstar ‚ú™> the symbols it needs to resolve
19:49 <+bridge> [ddnet] <Jupstar ‚ú™> u know
19:50 <+ChillerDragon> no i dont know
19:50 <+bridge> [ddnet] <Jupstar ‚ú™> % objdump -p DDNet                                                                                                                         git:tmp_alaiasing*
19:50 <+bridge> [ddnet] <Jupstar ‚ú™> % objdump -p DDNet
19:50 <+bridge> [ddnet] <Jupstar ‚ú™> look for GLIBC
19:50 <+bridge> [ddnet] <Jupstar ‚ú™> it should tell ya the versions
19:50 <+ChillerDragon> i don thave DDNet
19:50 <+ChillerDragon> it didnt compile
19:50 <+bridge> [ddnet] <Jupstar ‚ú™> bra after u fixed the other shit xD
19:50 <+ChillerDragon> oh wait you talk about compability
19:50 <+bridge> [ddnet] <Jupstar ‚ú™> yes
19:50 <+ChillerDragon> yea i wanna get it to compile first
19:51 <+bridge> [ddnet] <Jupstar ‚ú™> if u use cmake with env clean the build dir first
19:51 <+ChillerDragon> i dont get why it broke in the first place its not the first time i compile with bundled libs
19:51 <+bridge> [ddnet] <Jupstar ‚ú™> else use -DCMAKE_CXX_FLAGS="..."
19:51 <+ChillerDragon> i did clean
19:51 <+bridge> [ddnet] <Learath2> The issue is probably the other way around, the library is compiled without fPIC and you are compiling ddnet with -fPIC
19:51 <+ChillerDragon> did not help
19:52 <+ChillerDragon> so compile with -no-fPIC ?
19:52 <+bridge> [ddnet] <Jupstar ‚ú™> ah u compile ddnet?
19:52 <+ChillerDragon> yes
19:52 <+bridge> [ddnet] <Jupstar ‚ú™> i said libpng bra
19:52 <+ChillerDragon> idk wat u say
19:52 <+ChillerDragon> so why is libpng bundled withwout fPIC?
19:52 <+bridge> [ddnet] <Jupstar ‚ú™> i dunno maybe gcc changed defaults?
19:53 <+bridge> [ddnet] <Learath2> We probably disabled PIC on the official build because of that weird gnome issue where the executable didn't appear executable
19:53 <+bridge> [ddnet] <Jupstar ‚ú™> maybe deen downloaded libpng from some shady place
19:53 <+ChillerDragon> watever PIC is
19:53 <+ChillerDragon> so i need to disable it rite?
19:53 <+bridge> [ddnet] <Jupstar ‚ú™> download.chiller.dragon/libpng.a
19:53 <+bridge> [ddnet] <Learath2> position independent code
19:53 <+bridge> [ddnet] <Learath2> give it a try, I might be a little too deep into this bottle of wine but I thiink it sounds sane
19:54 <+ChillerDragon> but how to build ddnet w out pic
19:54 <+ChillerDragon> im about to edit cmakelist
19:54 <+bridge> [ddnet] <Jupstar ‚ú™> no-
19:54 <+bridge> [ddnet] <Learath2> -fno-pic üòÑ
19:54 <+ChillerDragon> ah fno not no-f
19:55 <+bridge> [ddnet] <Jupstar ‚ú™> f no pic
19:55 <+bridge> [ddnet] <Jupstar ‚ú™> 
19:55 <+bridge> [ddnet] <Jupstar ‚ú™> sounds like a classic twitch comment
19:55 <+ChillerDragon> ye
19:55 <+ChillerDragon> da bitch didnt help
19:55 <+bridge> [ddnet] <Jupstar ‚ú™> rest in peeze
19:56 <+ChillerDragon> why are bundled libs binaries in the first place?
19:56 <+bridge> [ddnet] <Jupstar ‚ú™> no-pie
19:56 <+bridge> [ddnet] <Jupstar ‚ú™> maybe
19:56 <+ChillerDragon> why not compile from source
19:56 <+bridge> [ddnet] <Jupstar ‚ú™> also push them to linker
19:56 <+bridge> [ddnet] <Jupstar ‚ú™> to be sure
19:56 <+bridge> [ddnet] <Chairn> okay, i give up on my python twmap binding
19:56 <+bridge> [ddnet] <Chairn> ill try to compile it myself üòÑ
19:57 <+bridge> [ddnet] <Jupstar ‚ú™> `cmake .. -DCMAKE_CXX_FLAGS="-fno-pic" -DCMAKE_C_FLAGS="-fno-pic" -DCMAKE_LINKER_FLAGS="-fno-pie"`
19:57 <+bridge> [ddnet] <Jupstar ‚ú™> if it doesnt work im nobo
19:57 <+ChillerDragon> yes u nobo
19:57 <+bridge> [ddnet] <Jupstar ‚ú™> ah do they require capitcal letters? i dunno if gcc is strict
19:57 <+ChillerDragon> cuz udk how bash quote work
19:57 <+ChillerDragon> xd
19:57 <+bridge> [ddnet] <Jupstar ‚ú™> ah totally soz
19:58 <+bridge> [ddnet] <Jupstar ‚ú™> ```bash
19:58 <+bridge> [ddnet] <Jupstar ‚ú™> #!/bin/bash
19:58 <+bridge> [ddnet] <Jupstar ‚ú™> cmake .. -DCMAKE_CXX_FLAGS="-fno-pic" -DCMAKE_C_FLAGS="-fno-pic" -DCMAKE_LINKER_FLAGS="-fno-pie"
19:58 <+bridge> [ddnet] <Jupstar ‚ú™> ```
19:58 <+ChillerDragon> https://zillyhuhn.com/cs/.1668279388.png
19:58 <+bridge> [ddnet] <Jupstar ‚ú™> ah
19:58 <+bridge> [ddnet] <Jupstar ‚ú™> then LINK
19:58 <+bridge> [ddnet] <Jupstar ‚ú™> not LINKER
19:58 <+ChillerDragon> u dont need da quotes
19:58 <+bridge> [ddnet] <Jupstar ‚ú™> confusing namings
19:58 <+ChillerDragon> cuz no space
19:58 <+bridge> [ddnet] <Learath2> You can also do `CXXFLAGS="..." LDFLAGS="..." CFLAGS="..." cmake ...`
19:59 <+bridge> [ddnet] <Learath2> cmake will put them into the correct cmake variables
19:59 <+ChillerDragon> but dat need clean build dir
19:59 <+ChillerDragon> as he said
19:59 <+bridge> [ddnet] <Jupstar ‚ú™> yeah i dunno
19:59 <+bridge> [ddnet] <Jupstar ‚ú™> i had trouble in past
19:59 <+bridge> [ddnet] <Jupstar ‚ú™> with env vars
19:59 <+bridge> [ddnet] <Jupstar ‚ú™> but maybe cmake 3.3213131 is just too OP
19:59 <+ChillerDragon> CMAKE_LINK_FLAGS also njownw
19:59 <+ChillerDragon> it is not depending on cmake
20:00 <+ChillerDragon> thats why u nob
20:00 <+ChillerDragon> cmake does not know if u put quotes or not
20:00 <+ChillerDragon> wait
20:00 <+bridge> [ddnet] <Jupstar ‚ú™> CMAKE_CXX_LINK_FLAGS
20:00 <+bridge> [ddnet] <Jupstar ‚ú™> bra
20:00 <+ChillerDragon> a
20:00 <+ChillerDragon> no i bad
20:00 <+bridge> [ddnet] <Jupstar ‚ú™> why do they need CXX before
20:00 <+ChillerDragon> nah ok now im confused xd
20:00 <+bridge> [ddnet] <Jupstar ‚ú™> try CMAKE_CXX_LINK_FLAGS
20:00 <+bridge> [ddnet] <Jupstar ‚ú™> they biggest trolls ever i swear
20:01 <+ChillerDragon> ez
20:01 <+ChillerDragon> https://zillyhuhn.com/cs/.1668279608.png
20:02 <+ChillerDragon> xxxxxxxxxxxxD
20:02 <+ChillerDragon> watafak
20:02 <+ChillerDragon> last time i had so mouche trouble buildin tw was on my mac when i was 14yo
20:03 <+bridge> [ddnet] <Jupstar ‚ú™> try gcc xd
20:03 <+ChillerDragon> u mean clang?
20:03 <+ChillerDragon> i think it uses gcc by default rite?
20:03 <+bridge> [ddnet] <Jupstar ‚ú™> no u already used clang
20:03 <+bridge> [ddnet] <Jupstar ‚ú™> try whatever u not used
20:03 <+ChillerDragon> i cleaned my build dir
20:03 <+ChillerDragon> xd
20:04 <+ChillerDragon> neither work
20:04 <+ChillerDragon> omg this is taking waaaaaaaaaaaaaay more time than i expected i lost my patience
20:07 <+ChillerDragon> heck not even -DIPO=OFF works
20:07 <+ChillerDragon> and deend used that 
20:07 <+ChillerDragon> https://github.com/ddnet/ddnet-scripts/commit/30df2cafb86a49a550690a79adce40e8e0330c45
20:08 <+bridge> [ddnet] <Chairn> @Patiga i manually compiled twmap-py on windows, how do i wrap the dll so that i can import it in python?
20:10 <+bridge> [ddnet] <Patiga> you should only need to rename it from `libtwmap.dll` to `twmap.dll` and place it into the directory where you want to import it
20:10 <+bridge> [ddnet] <Chairn> btw, i think it used twmap-0.9.0 rather than 0.9.1 üôÇ
20:10 <+bridge> [ddnet] <Patiga> ouch
20:10 <+bridge> [ddnet] <Patiga> yup
20:12 <+bridge> [ddnet] <Patiga> nice find, thanks for notifying
20:12 <+ChillerDragon> gg i compiled libpng without pic and now i got dis bitch ``/home/chiller/Desktop/git/ddnet/src/engine/gfx/image_loader.cpp:241: error: undefined reference to 'png_read_image'``
20:12 <+bridge> [ddnet] <Chairn> `Compiling twmap v0.9.0`
20:12 <+ChillerDragon> wait -m32 is 32 bit? xd
20:12 <+bridge> [ddnet] <Learath2> yes
20:12 <+bridge> [ddnet] <Chairn> it is
20:13 <+ChillerDragon> ah shit i followed wrong tutorial
20:14 <+bridge> [ddnet] <Chairn> hmm, in site-packages, i create subdir and put it there, and you sure i don't need a __init__.py ?
20:15 <+bridge> [ddnet] <Patiga> oops
20:15 <+bridge> [ddnet] <Patiga> you should really only need the file
20:15 <+bridge> [ddnet] <Chairn> ah no
20:15 <+ChillerDragon> ok libpng fixed
20:15 <+bridge> [ddnet] <Chairn> it does import now üôÇ
20:15 <+bridge> [ddnet] <Patiga> I forgot you need to change the file extension to `.pyd`
20:15 <+ChillerDragon> now vulkan bitchin
20:15 <+bridge> [ddnet] <Chairn> nah
20:15 <+bridge> [ddnet] <Chairn> it works as .dll
20:15 <+ChillerDragon> https://zillyhuhn.com/cs/.1668280434.png
20:16 <+ChillerDragon> whatever i got binary yeet on that
20:16 <+ChillerDragon> that was a mess
20:16 <+bridge> [ddnet] <Patiga> does it work as .dll everywhere, or only if it is specifically in the site-packages directory?
20:16 <+bridge> [ddnet] <Chairn> nvm, it does import but doesn't work
20:17 <+bridge> [ddnet] <Jupstar ‚ú™> nice chillerdragon
20:17 <+bridge> [ddnet] <Chairn> AttributeError: module 'twmap' has no attribute 'Map'
20:17 <+bridge> [ddnet] <Jupstar ‚ú™> now u linux hacker
20:17 <+ChillerDragon> thanks sensei
20:17 <+bridge> [ddnet] <Chairn> i made a `twmap` directory in site-packages and put the dll there
20:17 <+bridge> [ddnet] <Chairn> so import works, but when i use the module, it misses all attributes
20:18 <+ChillerDragon> @deen what is the reason for ddnet-libs being binaries btw?
20:18 <+bridge> [ddnet] <Patiga> could you simply try to put it into a random directory, rename it to `twmap.pyd` and import it in that directory?
20:18 <+bridge> [ddnet] <Learath2> I seem to have horrible stutters for the last couple versions on windows :/
20:18 <+bridge> [ddnet] <Learath2> can't figure out why for the life of me
20:19 <+bridge> [ddnet] <Chairn> opkay, it works that way
20:19 <+bridge> [ddnet] <Chairn> both import and module use
20:19 <+bridge> [ddnet] <Patiga> nice :+1.
20:19 <+bridge> [ddnet] <Chairn> now, ill try to make it work from everywhere
20:20 <+bridge> [ddnet] <Chairn> okay, just have to put the .pyd in site-packages without a subdirectory named twmap
20:21 <+bridge> [ddnet] <Patiga> nice that it works at least this way, I'll get a win wm again and try to figure out how to get it to work via pip
20:26 <+bridge> [ddnet] <Chairn> nice 64p team cannot be disoplayed in top5 üòÑ
20:26 <+ChillerDragon> o m g!
20:26 <+ChillerDragon> after i spend one hour buildin ddnet i relaized..
20:27 <+ChillerDragon> ddnet can not even do 0.7
20:27 <+ChillerDragon> ok fuck this good night ima sleep now
20:30 <+bridge> [ddnet] <Chairn> note also that my dll is 12MB while pip .pyd was only 5MB
20:30 <+bridge> [ddnet] <Chairn> so my compilation seems to statically link more stuff
20:30 <+bridge> [ddnet] <Patiga> on pip its without symbols iirc
20:30 <+bridge> [ddnet] <Patiga> you can compile with `--strip` to have a similar file size
20:34 <+bridge> [ddnet] <Patiga> https://www.maturin.rs/distribution.html#cross-compile-to-windows
20:35 <+bridge> [ddnet] <Patiga> seems like I shouldn't cross compile from linux to windows
20:37 <+bridge> [ddnet] <Patiga> it doesn't explicitly state that a natively compiled wheel doesn't require those things to be installed, but I'd assume so since that incompatibility notice is only in the cross-compiling section
20:55 <+bridge> [ddnet] <Robyt3> `At global scope: cc1plus.exe: note: unrecognized command-line option '-Wno-nullability-completeness' may have been intended to silence earlier diagnostics`
20:55 <+bridge> [ddnet] <Robyt3> I get this warning whenever the compiler prints another error or warning.
20:55 <+bridge> [ddnet] <Robyt3> Shouldn't this warning be prevented by using `add_cxx_compiler_flag_if_supported` in CMakeLists?
21:02 <+bridge> [ddnet] <heinrich5991> no, because the compiler pretends to know all `-Wno-` flags
21:02 <+bridge> [ddnet] <heinrich5991> for future and backward compatibility
22:24 <+bridge> [ddnet] <Mr.Gh0s7> How to cross compile from linux to windows? I am on arch and installed `mingw-w64-gcc` after that I tried to run `cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchains/mingw64.toolchain ..` inside a `build4w` folder. But it returns ```You must install Curl/SQLite3/libpng/Freetype/Ogg/Opus/Opusfile/SDL2/Vulkan libraries to compile the DDNet client```. Should do I specify that I only want to compile the server via -DCLIENT=OFF?
22:24 <+bridge> [ddnet] <Mr.Gh0s7> Would that cause any problems to the server executable?
22:27 <+bridge> [ddnet] <heinrich5991> have you initialized the git submodule?
22:27 <+bridge> [ddnet] <heinrich5991> `git submodule update --init --recursive`
22:29 <+bridge> [ddnet] <Mr.Gh0s7> ok that was it for that error :D
22:29 <+bridge> [ddnet] <Mr.Gh0s7> now it throws this one ```CMake Error in CMakeLists.txt:
22:29 <+bridge> [ddnet] <Mr.Gh0s7>   IMPORTED_IMPLIB not set for imported target "GTest::gtest" configuration
22:29 <+bridge> [ddnet] <Mr.Gh0s7>   "Release".```
22:50 <+bridge> [ddnet] <heinrich5991> try `-DCMAKE_DISABLE_FIND_PACKAGE_GTest=ON`
22:52 <+bridge> [ddnet] <Mr.Gh0s7> thanks a lot that was it :D
22:58 <+bridge> [ddnet] <heinrich5991> can you show me the complete error message?
22:59 <+bridge> [ddnet] <Mr.Gh0s7> sure
23:00 <+bridge> [ddnet] <Mr.Gh0s7> https://pastebin.com/kjSTMRKS here
23:02 <+bridge> [ddnet] <heinrich5991> ty
