08:26 <+bridge> [ddnet] <Ryozuki> https://github.com/NixOS/nixpkgs/blob/nixos-22.05/pkgs/games/ddnet/default.nix#L73
08:26 <+bridge> [ddnet] <Ryozuki> oh ddnet exists
08:59 <+ChillerDragon> @Ryozuki agree ventoy is awesome
15:17 <+bridge> [ddnet] <Ryozuki> @deen saw u forked nixpkgs
15:17 <+bridge> [ddnet] <Ryozuki> Btw they say we use apache 2.0
15:17 <+bridge> [ddnet] <Ryozuki> I think its wrong xD
15:17 <+bridge> [ddnet] <deen> I see mention of ddnet.tw, I make PR
15:17 <+bridge> [ddnet] <Ryozuki> Good thing about nix is its not bound to nixos, you can use it on any distro
16:03 <+bridge> [ddnet] <Ryozuki> @deen do you know if ddnet logs are always valid utf8?
16:16 <+bridge> [ddnet] <deen> Jumping through the code it could print invalid utf8, we don't validate the output
16:16 <+bridge> [ddnet] <deen> some places have validation, but probably not all
16:17 <+bridge> [ddnet] <deen> You could add something like str_utf8_check in log_log_impl
16:18 <+bridge> [ddnet] <deen> But I think it's more important to get any output at all than to only output utf8, or to skip non-utf8 chars
16:42 <+bridge> [ddnet] <Ryozuki> I see
16:42 <+bridge> [ddnet] <Ryozuki> Just wanted to know to make a pretty parser
16:52 <+bridge> [ddnet] <Learath2> If nothing went wrong we probably don’t output invalid utf8, but there is nothing that guarantees it, so if you are doing sth in rust, you should properly check it
16:52 <+bridge> [ddnet] <Learath2> It happened before, e.g. names with utf8 in them getting truncated wrong
16:53 <+bridge> [ddnet] <Learath2> Teeworlds not being properly designed considering utf8 from the start is a shame, bolting it on always has bugs
17:00 <+bridge> [ddnet] <Ryozuki> Yeah im doing it in rust thats why i asked
17:01 <+bridge> [ddnet] <Ryozuki> To know wether to make the parser using [u8] or str
17:02 <+bridge> [ddnet] <Ryozuki> I can always convert it to str using lossy
17:02 <+bridge> [ddnet] <Ryozuki> It doesnt even allocate iirc
17:02 <+bridge> [ddnet] <Learath2> u8 and lossy yeah
17:05 <+bridge> [ddnet] <Ryozuki> I wanna install gentoo and go back to contributing more to ddnet
17:05 <+bridge> [ddnet] <Ryozuki> Tomorrow im getting my super fast usb
17:06 <+bridge> [ddnet] <Ryozuki> 400mb/s
17:06 <+bridge> [ddnet] <Learath2> Putting gentoo on a usb?
17:06 <+bridge> [ddnet] <Ryozuki> Im gonna make a multiboot usb
17:06 <+bridge> [ddnet] <Ryozuki> So i dont have to bother again
17:07 <+bridge> [ddnet] <Ryozuki> This
17:07 <+bridge> [ddnet] <Ryozuki> Ill install gentoo on my system ofc
17:07 <+bridge> [ddnet] <Learath2> You might want a ramdisk or ssd partition to put your portage tmp in. Compiling everything from scratch implies a lot of IO
17:07 <+bridge> [ddnet] <Ryozuki> Yeah
17:07 <+bridge> [ddnet] <Ryozuki> Nixos had a option to copy all to ram before install
17:08 <+bridge> [ddnet] <Learath2> Oh btw, gentoo has no installer still to this day iirc
17:08 <+bridge> [ddnet] <Ryozuki> Yeah no probs
17:08 <+bridge> [ddnet] <Ryozuki> Like arch
17:08 <+bridge> [ddnet] <Ryozuki> Well arch now has smth i think
17:08 <+bridge> [ddnet] <Ryozuki> Optionally
17:08 <+bridge> [ddnet] <Learath2> The handbook is excellent, though not as good as the arch wiki, still very complete
17:09 <+bridge> [ddnet] <Ryozuki> Ill embrace rust fully on my new system
17:09 <+bridge> [ddnet] <Ryozuki> Ill use leftwm probs
17:09 <+bridge> [ddnet] <Ryozuki> A rust wm
17:09 <+bridge> [ddnet] <Ryozuki> Alacritty for term
17:09 <+bridge> [ddnet] <Learath2> If you use genkernel to configure the kernel for you instead of configuring it yourself you can probably get it all set up within an hour or two
17:09 <+bridge> [ddnet] <Ryozuki> And rust binutils if possible
17:10 <+bridge> [ddnet] <Ryozuki> @Learath2 when i tried to install gentoo on a vm i think i used genkernel
17:10 <+bridge> [ddnet] <Learath2> You mean coreutils?
17:10 <+bridge> [ddnet] <Ryozuki> Yeah
17:10 <+bridge> [ddnet] <Learath2> Uutils does work on gentoo last I checked
17:11 <+bridge> [ddnet] <Ryozuki> https://github.com/uutils/coreutils
17:11 <+bridge> [ddnet] <Ryozuki> nice
17:11 <+bridge> [ddnet] <Ryozuki> but appart from that i alias ls to exa
17:11 <+bridge> [ddnet] <Ryozuki> and i use fd instead of find
17:11 <+bridge> [ddnet] <Learath2> Exa?
17:11 <+bridge> [ddnet] <Ryozuki> exa is a better ls
17:11 <+bridge> [ddnet] <Ryozuki> way better
17:11 <+bridge> [ddnet] <Ryozuki> https://edgarluque.com/blog/modernize-your-tools/
17:11 <+bridge> [ddnet] <Learath2> Ooh, i thought you have an alias for ls called exa
17:11 <+bridge> [ddnet] <Ryozuki> kek
17:11 <+bridge> [ddnet] <Ryozuki> nono xd
17:12 <+bridge> [ddnet] <Ryozuki> sd for sed too
17:12 <+bridge> [ddnet] <Ryozuki> and ripgrep for grep
17:13 <+bridge> [ddnet] <Learath2> Is there a syslog written in rust? Traditional system logging and rust would have polar opposite fanclubs I imagine 😄
17:13 <+bridge> [ddnet] <Learath2> Maybe some cutting edge binary format, elastic search on redis syslogger 😛
17:13 <+bridge> [ddnet] <Ryozuki> xd
17:13 <+bridge> [ddnet] <Cellegen | RiH> when wine on rust?
17:14 <+bridge> [ddnet] <Ryozuki> i see there is lot of competition vs redist
17:14 <+bridge> [ddnet] <Ryozuki> for a redist with less mem usage but as fast as it
17:14 <+bridge> [ddnet] <Ryozuki> redis*
17:14 <+bridge> [ddnet] <Ryozuki> https://rocksdb.org/
17:14 <+bridge> [ddnet] <Learath2> I should find some use for a key value store so I have an excuse to mess around with redis
17:15 <+bridge> [ddnet] <Learath2> I just love traditional rdbms I never get to use web scale things like redis and nosql mongodb
17:16 <+bridge> [ddnet] <Ryozuki> web scale kek
17:16 <+bridge> [ddnet] <Ryozuki> u dont need mongodb ever
17:16 <+bridge> [ddnet] <Ryozuki> if u need dynamic-ish data but u probs will have some sort of structured data
17:16 <+bridge> [ddnet] <Ryozuki> jut use postgresql with a json column
17:17 <+bridge> [ddnet] <Learath2> But is postgres web scale?
17:17 <+bridge> [ddnet] <Ryozuki> @Learath2 i think its cuz premature-scale is not worth it, and you/we never built anything that needs to scal to the point of needing a shared cache using redis
17:17 <+bridge> [ddnet] <deen> @timakro Can you support https://trashmap.ddnet.org and redirect https://trashmap.ddnet.tw/ to it?
17:17 <+bridge> [ddnet] <deen> Did you just make up a new slogan for the company I work? 😄
17:18 <+bridge> [ddnet] <deen> at*
17:18 <+bridge> [ddnet] <Ryozuki> because i doubt redis is faster than a hashmap using a fast hash embedded into the app if you dont need to share the store
17:18 <+bridge> [ddnet] <Learath2> 😄 do you make web scale postgres?
17:18 <+bridge> [ddnet] <deen> postgresql + rocksdb = yugabytedb
17:18 <+bridge> [ddnet] <deen> yes
17:18 <+bridge> [ddnet] <Ryozuki> oh i seen yugabyte mentioned on a hn comment today
17:18 <+bridge> [ddnet] <Ryozuki> thats why i said the rocksdb thing
17:19 <+bridge> [ddnet] <Ryozuki> https://news.ycombinator.com/item?id=33117650
17:19 <+bridge> [ddnet] <Ryozuki> here
17:19 <+bridge> [ddnet] <Ryozuki> this new shiny thing came out
17:19 <+bridge> [ddnet] <Ryozuki> it uses rocksdb
17:19 <+bridge> [ddnet] <Learath2> Well ofc. But if you didn’t need to share it, why would you be looking at an external key value store anyway?
17:19 <+bridge> [ddnet] <Ryozuki> >      
17:19 <+bridge> [ddnet] <Ryozuki> > tmikaeld 8 hours ago | prev | next [–]
17:19 <+bridge> [ddnet] <Ryozuki> > 
17:19 <+bridge> [ddnet] <Ryozuki> > Will be interesting to see the benchmarks!
17:19 <+bridge> [ddnet] <Ryozuki> > 
17:19 <+bridge> [ddnet] <Ryozuki> > There's a lot of KV engines that uses RocksDB now, like CockroachDB (Forked into PebbleDB though), YugabyteDB and TiDB.
17:19 <+bridge> [ddnet] <Ryozuki> > 
17:19 <+bridge> [ddnet] <Ryozuki> > Those are all many times slower than Redis though, so having a middle-ground aimed to be similar to Redis, that doesn't eat all RAM, is very exciting!
17:19 <+bridge> [ddnet] <Ryozuki> > 
17:19 <+bridge> [ddnet] <Ryozuki> > reply
17:19 <+bridge> [ddnet] <Ryozuki> cuz you can say you use redis?
17:19 <+bridge> [ddnet] <Ryozuki> hip hip
17:20 <+bridge> [ddnet] <Ryozuki> :BASED:
17:20 <+bridge> [ddnet] <Learath2> Also, just how bad is postgres/mariadb are at being a KV store that people created specific engines for these uses? Indexes improve lookups significantly
17:21 <+bridge> [ddnet] <Ryozuki> i think its too overkill for key val
17:21 <+bridge> [ddnet] <deen> That's not the main reason for these KV stores. The main reason for is because you can distribute them easier
17:21 <+bridge> [ddnet] <Ryozuki> yeah
17:22 <+bridge> [ddnet] <Learath2> Sure but say rest of your backend uses postgres, instead of hosting one more piece of software with it’s maintenance overhead, why do companies prefer a dedicated KV store to just another table?
17:23 <+bridge> [ddnet] <deen> You are making up more arguments for YugabyteDB, it's a single DBMS with Postgres, Cassandra and Redis interface 😄
17:23 <+bridge> [ddnet] <Learath2> Hm, idk enough about how the internals of a rdbms compare to a kv store to know for sure, but wouldn’t replication be solved in a similar manner?
17:23 <+bridge> [ddnet] <Ryozuki> whats Cassandra
17:23 <+bridge> [ddnet] <Ryozuki> so many software
17:23 <+bridge> [ddnet] <Ryozuki> oh its apache take on mongodb
17:24 <+bridge> [ddnet] <deen> if you only need one writer and have the replica as reader, it can work. But if you want lower latency for a DB distributed around the world, it's a bit more complicated
17:24 <+bridge> [ddnet] <Learath2> That sounds like a very useful piece of software actually. Solves all your data storage problems, can you refer between the 3 distinct(?) types of data?
17:25 <+bridge> [ddnet] <deen> Nope, unfortunately not (yet?)
17:25 <+ChillerDragon> > Good thing about nix is its not bound to nixos, you can use it on any distro
17:25 <+ChillerDragon> @Ryozuki that sounds nice
17:26 <+ChillerDragon> i ended up writing my own package manager for debian to get updated software and was close to hacking something together that can install aurs on debian :D
17:26 <+bridge> [ddnet] <Ryozuki> yuga is free right?
17:26 <+bridge> [ddnet] <Learath2> It’d actually be super cool if a column in a postgres table could refer to a nosql document or a kv store key. You could have best of all worlds 😄
17:26 <+bridge> [ddnet] <deen> The DBMS itself is free and open source, if you want a fancy web interface to orchestrate it, that costs
17:26 <+bridge> [ddnet] <Ryozuki> i see
17:27 <+bridge> [ddnet] <deen> but we have open source users who are happy to write a few scripts instead
17:27 <+bridge> [ddnet] <Ryozuki> is it worth for a small or medium scale app
17:27 <+bridge> [ddnet] <Learath2> Oh, btw is it just 3 different pieces of software under the hood or do you guys implement each part?
17:28 <+bridge> [ddnet] <Ryozuki> what does cloud native mean?
17:28 <+bridge> [ddnet] <Learath2> Web scale
17:28 <+bridge> [ddnet] <Ryozuki> > YugabyteDB uniquely combines enterprise-grade relational database capabilities with the horizontal scalability and resilience of cloud native architectures. YugabyteDB is like PostgreSQL reimagined for a cloud native world.
17:28 <+bridge> [ddnet] <Learath2> I actually don’t know these new terms 😛
17:28 <+bridge> [ddnet] <Ryozuki> me neither xd
17:29 <+bridge> [ddnet] <deen> Didn't want to say anything before, but found an open issue for, so it's planned: https://github.com/yugabyte/yugabyte-db/issues/830
17:29 <+bridge> [ddnet] <deen> via https://docs.yugabyte.com/preview/faq/compatibility/#can-i-insert-data-using-ycql-but-read-using-ysql-or-vice-versa
17:29 <+bridge> [ddnet] <Ryozuki> is there a rust lib for yugabyte
17:29 <+bridge> [ddnet] <Ryozuki> doesnt look like
17:29 <+bridge> [ddnet] <deen> Sure: https://docs.yugabyte.com/preview/develop/build-apps/rust/cloud-ysql-rust/
17:30 <+bridge> [ddnet] <Ryozuki> oh
17:30 <+bridge> [ddnet] <deen> You can just use rust-postgres, we are wire-compatible
17:31 <+bridge> [ddnet] <deen> I don't know about the redis and cassandra interfaces, the postgres one is just Postgres source code adapted to our rocksdb layer
17:31 <+bridge> [ddnet] <deen> which makes sense because Postgres is huge and we want 100% compatibility
17:32 <+bridge> [ddnet] <Learath2> I like your companies project and how it’s open source 👍
17:32 <+bridge> [ddnet] <Ryozuki> yeah looks like a fun project to be in
17:33 <+bridge> [ddnet] <Ryozuki> @Learath2 lets make the ddnet foundation and fund ourselves :BASED: so we can be in fun projects too
17:33 <+bridge> [ddnet] <Learath2> Well we are in the most fun project ever, ddnet itself
17:34 <+bridge> [ddnet] <Ryozuki> it is fun to code in ddnet yeah but imagine working full time on it
17:35 <+bridge> [ddnet] <Learath2> I think I’d be okay with that for an average wage
17:36 <+bridge> [ddnet] <Ryozuki> funding just 1 dev would cost  a lot anyway
17:36 <+bridge> [ddnet] <Ryozuki> there is truly lot of free will work here
17:37 <+bridge> [ddnet] <Ryozuki> and most ppl dont even notice xd
17:37 <+bridge> [ddnet] <Ryozuki> maybe we could apply to some open source projects grants
17:37 <+bridge> [ddnet] <Ryozuki> and do a per issue funding
17:38 <+bridge> [ddnet] <Learath2> Yeah, no way this project could sustain even one full time dev
17:38 <+bridge> [ddnet] <Learath2> Not with this business model. We need to start selling nfts and hats and skins
17:38 <+bridge> [ddnet] <Ryozuki> and not a js dev, a c++ dev
17:38 <+bridge> [ddnet] <Ryozuki> the avg wage is way higher
17:38 <+bridge> [ddnet] <Learath2> Let’s port ddnet to electron and js, then we can hire a js dev instead
17:39 <+bridge> [ddnet] <Ryozuki> based
17:40 <+bridge> [ddnet] <Ryozuki> https://opencollective.com/
19:06 <+bridge> [ddnet] <Ravie Senpai> @heinrich5991 I can agree, it works fine. Thanks for your attitude!
19:39 <+ChillerDragon> @Ryozuki just build trade stonks bot that prints moni to fund ddnet devs
20:24 <+bridge> [ddnet] <timakro> done
20:56 <+bridge> [ddnet] <Ryozuki> @heinrich5991 is there a reason you do python style imports on rust?
20:56 <+bridge> [ddnet] <Ryozuki> when most ppl group by crate
20:56 <+bridge> [ddnet] <Ryozuki> btw format can do it for you
20:57 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1028018177629769728/unknown.png
20:57 <+bridge> [ddnet] <Ryozuki> so much lines for nothing
20:58 <+bridge> [ddnet] <heinrich5991> it plays nicer with diffing tools
20:58 <+bridge> [ddnet] <Ryozuki> idk about that
20:58 <+bridge> [ddnet] <heinrich5991> it's not really python-style though, is it? ^^
20:58 <+bridge> [ddnet] <Ryozuki> it is
20:58 <+bridge> [ddnet] <Ryozuki> cuz in python they recommend one import per line
20:58 <+bridge> [ddnet] <heinrich5991> from decimal import Decimal
20:58 <+bridge> [ddnet] <heinrich5991> no, only one module per line, I think
20:58 <+bridge> [ddnet] <Ryozuki> well yeah not exactly equivalent if you wanna be pedantic
20:59 <+bridge> [ddnet] <heinrich5991> I thought this was a pretty objective advantage
20:59 <+bridge> [ddnet] <Ryozuki> i dont think so
20:59 <+bridge> [ddnet] <heinrich5991> in what way does it not play nicer with diffing tools?
20:59 <+bridge> [ddnet] <Ryozuki> i prefer smaller size of imports
20:59 <+bridge> [ddnet] <Ryozuki> as in code wise
20:59 <+bridge> [ddnet] <Ryozuki> it looks rly ugly imho
20:59 <+bridge> [ddnet] <heinrich5991> we seem to talk past each other already
21:00 <+bridge> [ddnet] <heinrich5991> I'm saying it plays nicer with diffing tools, and I thought you disagreed with that
21:00 <+bridge> [ddnet] <heinrich5991> but apparently you only disagree with the worthwhileness of that, which I didn't even intend to argue about
21:00 <+bridge> [ddnet] <Ryozuki> diffing tools c an perfectly show the diff
21:00 <+bridge> [ddnet] <Ryozuki> idk
21:00 <+bridge> [ddnet] <Learath2> Well naive diffing tools yes, but honestly most modern diff tools will mark just the changed part
21:01 <+bridge> [ddnet] <Ryozuki> i like t his more
21:01 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1028019136523149353/unknown.png
21:01 <+bridge> [ddnet] <Ryozuki> my whole screen is imports xd
21:01 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1028019270313050262/unknown.png
21:01 <+bridge> [ddnet] <Ryozuki> also why are we bound to rust 1.48 or smth
21:01 <+bridge> [ddnet] <heinrich5991> I have yet to see a tool that supports the list style. note that it's being line-wrapped so imports moving to a different line will screw up word-based diffs
21:02 <+bridge> [ddnet] <heinrich5991> my solution to that is not looking at the top of the file
21:02 <+bridge> [ddnet] <Learath2> I also prefer the braces, but honestly I'm just a weirdo in that aspect, I have a thing for shorter source
21:02 <+bridge> [ddnet] <Learath2> Oh, I usually append them to the end, but I guess people also sort them, that might indeed make it more annoying
21:02 <+bridge> [ddnet] <heinrich5991> if you do happen to have such a diff tool, I'd be happy, because I sometimes have to look at these kinds of diffs
21:02 <+bridge> [ddnet] <Ryozuki> in all rust code i seen
21:03 <+bridge> [ddnet] <Ryozuki> you are the weirdest somehow heinrich
21:03 <+bridge> [ddnet] <Ryozuki> xd
21:03 <+bridge> [ddnet] <Ryozuki> not in a bad way, but you are the most picky
21:03 <+bridge> [ddnet] <Ryozuki> https://github.com/tokio-rs/axum/blob/main/axum/src/json.rs
21:03 <+bridge> [ddnet] <Ryozuki> everyone uses this style
21:03 <+bridge> [ddnet] <Ryozuki> also since rust automatically detects if you are using a import
21:04 <+bridge> [ddnet] <Ryozuki> diffing such a thing is not that hard requirement
21:04 <+bridge> [ddnet] <heinrich5991> because I like being able to compile it on the debians we use for hosting the game servers, without managing another tool like rustup
21:04 <+bridge> [ddnet] <Ryozuki> since cargo c will tell you
21:04 <+bridge> [ddnet] <Ryozuki> unlike python where unused imports dont make warnings
21:04 <+bridge> [ddnet] <Ryozuki> diffint imports is not a thing u rly need
21:04 <+bridge> [ddnet] <Ryozuki> diffing imports is not a thing u rly need
21:04 <+bridge> [ddnet] <heinrich5991> translates to "I don't see why you need to diff imports"
21:05 <+bridge> [ddnet] <Ryozuki> yeah i dont
21:05 <+bridge> [ddnet] <Ryozuki> just cargo c
21:05 <+bridge> [ddnet] <Ryozuki> u should also do cargo clippy
21:05 <+bridge> [ddnet] <Ryozuki> while at it
21:05 <+bridge> [ddnet] <heinrich5991> I did cargo clippy on the masterservers because you asked for it
21:05 <+bridge> [ddnet] <heinrich5991> and implemented all non-nonsensical suggestions
21:05 <+bridge> [ddnet] <Ryozuki> you didnt fix the issues
21:05 <+bridge> [ddnet] <Learath2> This is what I meant, it can handle the case of adding things to the end and this pretty decently
21:05 <+bridge> [ddnet] <Learath2> https://cdn.discordapp.com/attachments/293493549758939136/1028020337943777392/unknown.png
21:05 <+bridge> [ddnet] <Ryozuki> they arent nonsensical
21:06 <+bridge> [ddnet] <heinrich5991> nonsensical to me. what are ones that you'd like to see fixed for reasons other than "clippy says so"?
21:06 <+bridge> [ddnet] <Ryozuki> the pages on clippy explain the reasoning
21:06 <+bridge> [ddnet] <Ryozuki> well the ones u were missing was doing stuff like Ok(someresult.map_err(blah)?) when  someresult.map_err(blah) does t he trick
21:07 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1028020693297791057/unknown.png
21:07 <+bridge> [ddnet] <heinrich5991> I don't see the readability improvement there
21:07 <+bridge> [ddnet] <Ryozuki> i see it
21:07 <+bridge> [ddnet] <Ryozuki> urs is less readable
21:07 <+bridge> [ddnet] <Ryozuki> actually
21:07 <+bridge> [ddnet] <Ryozuki> if you know rust u know map_err returns a result already
21:08 <+bridge> [ddnet] <Learath2> Hm, I like clippy's suggestion aswell, though I don't find either more readable. I just have a thing for less characters in source code
21:08 <+bridge> [ddnet] <Ryozuki> its nonsensical to wrap a result in a result again
21:08 <+bridge> [ddnet] <Ryozuki> unless you need to rely on the into() from ?, which isnt the case here
21:09 <+bridge> [ddnet] <heinrich5991> anyway, despite different opinions, I think we focus on the wrong thing
21:09 <+bridge> [ddnet] <heinrich5991> what's much more important is that there's not enough documentation on how the protocol works, e.g.
21:09 <+bridge> [ddnet] <Ryozuki> im just sad we gotta take ur weird takes on rust
21:09 <+bridge> [ddnet] <Ryozuki> you go against all the norms
21:09 <+bridge> [ddnet] <Ryozuki> xd
21:10 <+bridge> [ddnet] <Ryozuki> why cant we be normal
21:10 <+bridge> [ddnet] <Learath2> So? Normality =/> Good
21:10 <+bridge> [ddnet] <Ryozuki> a code that looks like most other rust codebases attracts more rust devs
21:10 <+bridge> [ddnet] <Learath2> It's normal to beat women in saudi arabia
21:10 <+bridge> [ddnet] <Ryozuki> i look at our rust code and find it ugly
21:11 <+bridge> [ddnet] <Ryozuki> ok
21:11 <+bridge> [ddnet] <heinrich5991> I rustfmt-ed the source code even though it made stuff look worse IMO, and implemented clippy suggestions that sounded reasonable to me (for reasons other than "clippy says so")
21:11 <+bridge> [ddnet] <heinrich5991> I even reported bugs to clippy where it suggested worse things
21:12 <+bridge> [ddnet] <Ryozuki> well i just want the imports grouped
21:12 <+bridge> [ddnet] <Ryozuki> they look better and diff tools can handle it
21:13 <+bridge> [ddnet] <heinrich5991> they handle it worse than line-based imports
21:13 <+bridge> [ddnet] <Ryozuki> :fuckyousnail:
21:13 <+bridge> [ddnet] <Learath2> It seems the argument here is that your opinion doesn't matter, it's classic appeal to authority, clippy and rustfmt know better than you, they are sanctioned by the language
21:13 <+bridge> [ddnet] <heinrich5991> rustfmt doesn't even have an opinion on grouped vs non-grouped imports
21:13 <+bridge> [ddnet] <Ryozuki> yes, cuz this way everyone can read the code like they are used to
21:13 <+bridge> [ddnet] <heinrich5991> if you have a tool that can actually show me the semantic differences between two imports, tell me
21:14 <+bridge> [ddnet] <Ryozuki> and clippy is reasonable most of the time, maybe there are bugs yeah but most of the suggestions i found made sense
21:14 <+bridge> [ddnet] <Ryozuki> the rly opinionated ones are disabled by default
21:14 <+bridge> [ddnet] <heinrich5991> I mean it is right in that you can *also* write the code another way
21:14 <+bridge> [ddnet] <Learath2> Your desire for nice diffs doesn't matter either, he said as much, "diffing such a thing is not that hard requirement"
21:14 <+bridge> [ddnet] <heinrich5991> it's kinda like the clang-tidy checks that made the code look non-uniform
21:14 <+bridge> [ddnet] <Ryozuki> yeah sadly it doesnt, which is why we got a discussion here
21:15 <+bridge> [ddnet] <Ryozuki> a formatter shouldnt have options and enforce a consistent style
21:15 <+bridge> [ddnet] <Ryozuki> so we dont lose time
21:15 <+bridge> [ddnet] <Ryozuki> it is not, when u have a tool to check for unused imports
21:15 <+bridge> [ddnet] <Learath2> I'll go hard disagree on that chief, but you do you
21:15 <+bridge> [ddnet] <Ryozuki> i think im being reasonable there
21:16 <+bridge> [ddnet] <heinrich5991> I guess most people do all the time
21:16 <+bridge> [ddnet] <heinrich5991> that's like not even a data point 😄
21:16 <+bridge> [ddnet] <Ryozuki> xd
21:16 <+bridge> [ddnet] <Learath2> Your opinion is reasonable, your assertion that it's objectively true is what's not reasonable
21:16 <+bridge> [ddnet] <heinrich5991> e.g. they also work better with merge conflicts (or even create fewer)
21:16 <+bridge> [ddnet] <Ryozuki> anyway yeah, im rly opinionated in that i want to use the consistent most used style across rust codebases
21:16 <+bridge> [ddnet] <Ryozuki> ok yeah thats true
21:17 <+bridge> [ddnet] <Ryozuki> assume when i say "should" as "in my opinion it should"
21:17 <+bridge> [ddnet] <heinrich5991> I'm not sure that your preferred import style is the most used one btw
21:17 <+bridge> [ddnet] <heinrich5991> i.e. the grouping of imports from different modules
21:18 <+bridge> [ddnet] <Ryozuki> rand, syn, libc use it
21:18 <+bridge> [ddnet] <Ryozuki> the top 3 ones
21:18 <+bridge> [ddnet] <Ryozuki> im sure if i look at the others too
21:18 <+bridge> [ddnet] <Learath2> I just wing it. If it looks good to my eye and doesn't waste too many characters I'll ship it
21:19 <+bridge> [ddnet] <Learath2> I think my behaviour would piss off @Ryozuki the most 😄 No rules
21:19 <+bridge> [ddnet] <Ryozuki> yeah we are oppsite
21:19 <+bridge> [ddnet] <Ryozuki> i like consistency
21:19 <+bridge> [ddnet] <Learath2> I think @heinrich5991 might be with you on that one
21:19 <+bridge> [ddnet] <Ryozuki> so far rustfmt is only bad for big arrays formatted in a way like matrices, there its fine to ignore the line
21:19 <+bridge> [ddnet] <heinrich5991> can you link a file with that import style?
21:19 <+bridge> [ddnet] <Ryozuki> *in my opinion*
21:20 <+bridge> [ddnet] <heinrich5991> a random one from the rand crate didn't have it: https://github.com/rust-random/rand/blob/766c7eccd73a1f2768f7ce2a4469005a65f7f9a2/src/prelude.rs
21:20 <+bridge> [ddnet] <Ryozuki> <https://github.com/rust-random/rand/blob/master/src/rng.rs#L12>
21:20 <+bridge> [ddnet] <Ryozuki> this one is literally using it?
21:20 <+bridge> [ddnet] <heinrich5991> this does not group imports from different paths together
21:20 <+bridge> [ddnet] <Ryozuki> look at the {}
21:20 <+bridge> [ddnet] <heinrich5991> like you suggest
21:20 <+bridge> [ddnet] <heinrich5991> it only groups imports from the same path together
21:20 <+bridge> [ddnet] <Ryozuki> i guess
21:20 <+bridge> [ddnet] <heinrich5991> like I said 3 minutes ago
21:20 <+bridge> [ddnet] <Ryozuki> yours doesnt even do that
21:20 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1028024133923119185/unknown.png
21:21 <+bridge> [ddnet] <Learath2> Here is one change rustfmt does that I don't like
21:21 <+bridge> [ddnet] <Learath2> https://cdn.discordapp.com/attachments/293493549758939136/1028024171730571305/unknown.png
21:21 <+bridge> [ddnet] <Ryozuki> @Learath2 remove the {}
21:21 <+bridge> [ddnet] <Ryozuki> i think it works
21:21 <+bridge> [ddnet] <Learath2> There are others too, but I just remembered this one
21:21 <+bridge> [ddnet] <heinrich5991> yes, I'm just saying I'm not sure you follow "the most popular import style" either
21:22 <+bridge> [ddnet] <Ryozuki> hmm maybe
21:22 <+bridge> [ddnet] <Ryozuki> thats why i wish it had a default grouping
21:22 <+bridge> [ddnet] <Ryozuki> instead of doing nothing
21:22 <+bridge> [ddnet] <Ryozuki> rustfmt
21:22 <+bridge> [ddnet] <Ryozuki> i think they discussed it some time ago
21:22 <+bridge> [ddnet] <Ryozuki> @heinrich5991 how did u check the msrv
21:23 <+bridge> [ddnet] <Ryozuki> i did cargo update, which updates the lockfile
21:23 <+bridge> [ddnet] <Ryozuki> it should keep the msrv i think but idk
21:23 <+bridge> [ddnet] <heinrich5991> it doesn't
21:23 <+bridge> [ddnet] <Ryozuki> meh
21:23 <+bridge> [ddnet] <Ryozuki> there is some urge in my about disliking outdated deps
21:23 <+bridge> [ddnet] <Ryozuki> xd
21:23 <+bridge> [ddnet] <Ryozuki> there is some urge in me about disliking outdated deps
21:24 <+bridge> [ddnet] <Ryozuki> meh i wont even pr
21:24 <+bridge> [ddnet] <Ryozuki> this isnt worth
21:24 <+bridge> [ddnet] <heinrich5991> delete the lockfile if you want everything as up-to-date as possible
21:24 <+bridge> [ddnet] <heinrich5991> the lockfile helps you with a reproducible build
21:24 <+bridge> [ddnet] <Ryozuki> cargo update does that
21:24 <+bridge> [ddnet] <Ryozuki> it updates the lockfile based on the cargo.toml
21:24 <+bridge> [ddnet] <Ryozuki> im not talking about the custom cargo upgrade
21:24 <+bridge> [ddnet] <heinrich5991> what's the custom cargo upgrade?
21:24 <+bridge> [ddnet] <heinrich5991> ah
21:25 <+bridge> [ddnet] <heinrich5991> it updates cargo.toml?
21:25 <+bridge> [ddnet] <Ryozuki> cargo upgrade does ye
21:25 <+bridge> [ddnet] <Ryozuki> cargo update updates the lockfile based on semver from cargo toml
21:25 <+bridge> [ddnet] <Ryozuki> or smth
21:25 <+bridge> [ddnet] <Ryozuki> https://crates.io/crates/cargo-edit
21:28 <+bridge> [ddnet] <Ryozuki> https://github.com/ddnet/ddnet/issues/4415
21:28 <+bridge> [ddnet] <Ryozuki> wanted to do this and the other
21:28 <+bridge> [ddnet] <Ryozuki> shouldnt be hard
21:28 <+bridge> [ddnet] <Ryozuki> which is why i looked at mastersrv and noticed that
21:28 <+bridge> [ddnet] <Ryozuki> and lost my time xd
21:28 <+bridge> [ddnet] <heinrich5991> seems like the best improvement would be stopping to lose your time over that 😛
21:29 <+bridge> [ddnet] <heinrich5991> I had a rust crate that used (in my opinion) horrendous tabs whereas I thought rust had standardized on spaces
21:29 <+bridge> [ddnet] <heinrich5991> but I still managed to contribute to it even though I considered pinging the author about it (which I didn't, in the end)
21:29 <+bridge> [ddnet] <heinrich5991> btw, the master server isn't involved in your server info
21:30 <+bridge> [ddnet] <heinrich5991> you just give it free-form data
21:30 <+bridge> [ddnet] <Ryozuki> yeah i know
21:30 <+bridge> [ddnet] <Ryozuki> xd
21:30 <+bridge> [ddnet] <heinrich5991> free-form json data
21:31 <+bridge> [ddnet] <Ryozuki> @heinrich5991 well
21:31 <+bridge> [ddnet] <Ryozuki> atleast fix the test on mastersrv
21:31 <+bridge> [ddnet] <Ryozuki> its missing a import
21:32 <+bridge> [ddnet] <Ryozuki> RegisterAddr is not imported
21:32 <+bridge> [ddnet] <heinrich5991> I mean I'm probably gonna fix it
21:32 <+bridge> [ddnet] <heinrich5991> but your attitude that I must fix it is wrong
21:32 <+bridge> [ddnet] <Ryozuki> ok sry
21:32 <+bridge> [ddnet] <Ryozuki> ill fix it
21:32 <+bridge> [ddnet] <heinrich5991> ah thanks. I'd have also fixed it, whatever you like
21:33 <+bridge> [ddnet] <heinrich5991> ty
21:34 <+bridge> [ddnet] <Ryozuki> does the r come before p
21:34 <+bridge> [ddnet] <Ryozuki> its probs not ordered
21:34 <+bridge> [ddnet] <Ryozuki> oh it is
21:34 <+bridge> [ddnet] <heinrich5991> I just saw a bad pattern here, but it was probably not meant as such from you, as I haven't seen that from you so far, sorry for being rude in response
21:34 <+bridge> [ddnet] <heinrich5991> your alphabet is correct 😉
21:34 <+bridge> [ddnet] <heinrich5991> A < P < R
21:35 <+bridge> [ddnet] <Ryozuki> nah it was my bad
21:35 <+bridge> [ddnet] <Ryozuki> i was rude xd
21:41 <+bridge> [ddnet] <Ryozuki> by free-form you mean that for example, on the players array, i can add a new field to each player?
21:41 <+bridge> [ddnet] <heinrich5991> yes
21:41 <+bridge> [ddnet] <heinrich5991> well, I don't mean that by free-form
21:42 <+bridge> [ddnet] <heinrich5991> but yes, you can
21:42 <+bridge> [ddnet] <heinrich5991> the masterserver doesn't care
21:42 <+bridge> [ddnet] <Ryozuki> but it still reports it right
21:42 <+bridge> [ddnet] <Ryozuki> to the clients
21:42 <+bridge> [ddnet] <heinrich5991> yes
21:42 <+bridge> [ddnet] <Ryozuki> ok
21:42 <+bridge> [ddnet] <heinrich5991> but it'll also report `{}` to the clients
21:42 <+bridge> [ddnet] <heinrich5991> if you send that
21:42 <+bridge> [ddnet] <heinrich5991> it's the clients that do the filtering
21:42 <+bridge> [ddnet] <heinrich5991> but they don't care about extra fields they don't know
21:43 <+bridge> [ddnet] <heinrich5991> I could probably look at the rust PR again
21:44 <+bridge> [ddnet] <Ryozuki> i didnt make a pr
21:44 <+bridge> [ddnet] <Ryozuki> but if you want
21:48 <+bridge> [ddnet] <heinrich5991> I'm talking about the "add rust to ddnet PR"
21:48 <+bridge> [ddnet] <heinrich5991> did you want to make additions there?
21:48 <+bridge> [ddnet] <Ryozuki> ah maybe i said smth before
21:48 <+bridge> [ddnet] <Ryozuki> but i should recheck
21:49 <+bridge> [ddnet] <Ryozuki> hmm since UpdateRegisterServerInfo is on the server engine and not gameserver
21:49 <+bridge> [ddnet] <Ryozuki> i wonder how should i get the player info xd
21:50 <+bridge> [ddnet] <Ryozuki> guess i can move it
21:50 <+bridge> [ddnet] <heinrich5991> you could theoretically ask for extra data from the game server
21:50 <+bridge> [ddnet] <Ryozuki> true
21:51 <+bridge> [ddnet] <Ryozuki> RegisterExtraPlayerInfo
21:51 <+bridge> [ddnet] <Ryozuki> but gotta take care to format the json correctly
22:14 <+bridge> [ddnet] <Ryozuki> @heinrich5991 i guess lan server list uses the old model right
22:16 <+bridge> [ddnet] <heinrich5991> yes
22:16 <+bridge> [ddnet] <heinrich5991> haven't thought about what to do there yet
22:17 <+bridge> [ddnet] <heinrich5991> it would be nice if we could get the json server info there, too
22:17 <+bridge> [ddnet] <Ryozuki> yeah
22:17 <+bridge> [ddnet] <heinrich5991> if you have a design, tell me
22:17 <+bridge> [ddnet] <heinrich5991> or if you want to discuss one
22:17 <+bridge> [ddnet] <heinrich5991> (even before having one)
22:18 <+bridge> [ddnet] <Ryozuki> maybe we  can discuss it tomorrow
22:18 <+bridge> [ddnet] <Ryozuki> i wanna see if i can finish the skin thing
22:18 <+bridge> [ddnet] <Ryozuki> @Learath2 do u know how to know if a teeinfo skin is 0.6 or 0.7
22:18 <+bridge> [ddnet] <Ryozuki> should i bother to tell both formats or just convert to 0.6
22:18 <+bridge> [ddnet] <heinrich5991> both
22:19 <+bridge> [ddnet] <heinrich5991> in the future, we might want to support 0.7 skins in the client
22:19 <+bridge> [ddnet] <heinrich5991> e.g. https://github.com/ddnet/ddnet/pull/5660
22:19 <+bridge> [ddnet] <Ryozuki> i see
22:55 <+bridge> [ddnet] <Ryozuki> idk why http://ddnet.org/ doesnt load on my browser
22:55 <+bridge> [ddnet] <Ryozuki> maybe my internet is acting up
22:57 <+bridge> [ddnet] <Voxel> doesnt load for me either
22:58 <+bridge> [ddnet] <Ryozuki> this is so odfd
22:58 <+bridge> [ddnet] <Ryozuki> https://ddnet.org/downloads/ loads
22:58 <+bridge> [ddnet] <Ryozuki> but https://ddnet.org/
22:58 <+bridge> [ddnet] <Ryozuki> doesnt
22:58 <+bridge> [ddnet] <Ryozuki> @deen something is up with ddnet.org
22:58 <+bridge> [ddnet] <Alexander> What do you mean it doesnt load
22:59 <+bridge> [ddnet] <Alexander> It loads for me
22:59 <+bridge> [ddnet] <heinrich5991> both work for me
22:59 <+bridge> [ddnet] <heinrich5991> can you check devtools?
22:59 <+bridge> [ddnet] <Alexander> Maybe CTRL + F5 could help
23:02 <+bridge> [ddnet] <Ryozuki> it works now
23:02 <+bridge> [ddnet] <Ryozuki> but it didnt before
23:02 <+bridge> [ddnet] <Ryozuki> and i did ctrl f5 obviously
23:22 <+bridge> [ddnet] <deen> Strange, nothing suspicious in logs or graphs
23:23 <+bridge> [ddnet] <Ryozuki> i guess it was my net
