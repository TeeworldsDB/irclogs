07:54 < bridge> <Ewan> name is familiar
10:32 < bridge> <k2d222> r=10
10:43 < bridge> <ryozuki> gm
10:43 < bridge> <ryozuki> :owo:
11:06 < bridge> <teero777> I need two more pieces, any ideas to optimise the font?
11:06 < bridge> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1167026523648307290/IMG_20231026_110543226.jpg?ex=654ca125&is=653a2c25&hm=4d245fe6143067355a7f1b829711d2f90f1b6849aa9bcab6fd0fa733296e9d09&
11:07 < bridge> <teero777> two missing pieces for the last parameter closing bracked on int main
11:08 < bridge> <teero777> @jupeyy_keks @ryozuki this is important
11:09 < bridge> <k2d222> your semi si upside down üòá
11:09 < bridge> <k2d222> your semi is upside down üòá
11:17 < bridge> <k2d222> maybe some ligatures? the N and C of include, the S and the T of stdio or the M and the A of main?
11:19 < bridge> <k2d222> or, you could include cstdio which is shorter üôÇ
11:20 < bridge> <kekomonter> This is new IDE? :gigachad:
11:22 < bridge> <teero777> I will implement syntax highlighting and auto completion soon
11:22 < bridge> <kekomonter> Killer of CLion
11:23 < bridge> <teero777> good fix but you cant use cstdio in c99 right?
11:35 < bridge> <Jupstar ‚ú™> Tf is that
11:35 < bridge> <Jupstar ‚ú™> Godot
11:35 < bridge> <Jupstar ‚ú™> With gi?
11:44 < bridge> <teero777> looks pretty real right?
11:56 < bridge> <Jupstar ‚ú™> Looks photo realistic at least. Hard to say if light would look like that in a static scene ^^
11:57 < bridge> <Jupstar ‚ú™> I couldn't tell if it's not a real photo from my phone
12:34 < bridge> <Jupstar ‚ú™> So what r u doing? Creating a coding game?
12:40 < bridge> <patiga> :twinbop:
13:04 < bridge> <teero777> üòÇüòÇüòÇ
13:39 < bridge> <Jupstar ‚ú™> Don't tell me u had nothing better to do than doing this in rl xd
13:40 < bridge> <teero777> ü§£ü§£ü§£üòÇ
13:40 < bridge> <Mr.Gh0s7> üíÄ xD
13:40 < bridge> <teero777> the new vim
13:40 < bridge> <Mr.Gh0s7> I started doing opengl again üéâ
13:41 < bridge> <Mr.Gh0s7> The point that I rq everytime was the build system.
13:41 < bridge> <teero777> just use cmake and ure fine if?
13:41 < bridge> <teero777> just use cmake and ure fine ig?
13:41 < bridge> <Mr.Gh0s7> :justatest:
13:42 < bridge> <Mr.Gh0s7> I do it manually for now.
13:42 < bridge> <teero777> https://tenor.com/view/crazy-insane-stewie-family-guy-finals-gif-5655336
13:42 < bridge> <Mr.Gh0s7> First I gotta understand how it works, else I don't remember anything ;)
13:43 < bridge> <Mr.Gh0s7> more like ü•º üé©
13:43 < bridge> <teero777> Do it on paper I dare u
13:43 < bridge> <Jupstar ‚ú™> U could also not do it cross platform
13:43 < bridge> <Jupstar ‚ú™> That makes it easier
13:43 < bridge> <Mr.Gh0s7> Yeah for now it's only for linux (only at my machine but could work on others ¬Ø\_(„ÉÑ)_/¬Ø)
13:44 < bridge> <Jupstar ‚ú™> I also dislike working with build systems
13:44 < bridge> <Mr.Gh0s7> zogtib has made an implementation of the redo build system
13:44 < bridge> <Mr.Gh0s7> But it triggers me every time because I can't grasp it xD (shell nobo)
13:45 < bridge> <Mr.Gh0s7> https://github.com/gotroyb127/baredo
13:48 < bridge> <Mr.Gh0s7> Plus I hadn't work much with C and C++ besides tw so and I wanted to write it in C so the translation from C++ to C from the tutorial (<https://learnopengl.com>) also was difficult for me xD
13:49 < bridge> <Mr.Gh0s7> But I kinda worked with OpenCascade CAD Kernel in C++ at first (I didn't know there was build123d which is in python) so I got a little bit more familiar
13:50 < bridge> <zogtib> POSIX shell makes redo seem ugly (although redo is not restricted in using it, just the scripts)
13:51 < bridge> <Mr.Gh0s7> ye look at this https://github.com/gotroyb127/deeworlds/blob/master/default.shdStr.do
13:53 < bridge> <zogtib> that's pretty simple, I'd say this is not even a just bad example but it even supports the opposite
13:53 < bridge> <Mr.Gh0s7> no u
13:58 < bridge> <Jupstar ‚ú™> Just try to use no build system at all
13:58 < bridge> <Jupstar ‚ú™> Lmao
13:58 < bridge> <Jupstar ‚ú™> You won't need it for a simple project
13:58 < bridge> <Mr.Gh0s7> f3
13:59 < bridge> <heinrich5991> I wonder what you mean by "no build system" ^^ probably "a simple build system" like a project file in your IDE or a bash script?
14:00 < bridge> <zogtib> prob they mean something without support for incremental builds
14:02 < bridge> <heinrich5991> ah
14:02 < bridge> <zogtib> just `c++ -o out.exe srf1.cpp srcf2.cpp ...`
14:11 < bridge> <Mr.Gh0s7> Quick question. Do you have 2 mice in your disposal?
14:13 < bridge> <Mr.Gh0s7> I am having an argument with @gotroyb. I say that a game that would use 2 mice and no keyboard (maybe sometimes uses keyboard but not the main focus) would be really fun and innovative. zogtib says that using 2 mice wouldn't really change much and 2 mice are hard to find anyway. What do you think?
14:14 < bridge> <Mr.Gh0s7> React with hat to vote for 2 mice and Z to vote for zogtib
14:14 < bridge> <MilkeeyCat> I have 0 mice, i just have a touchpad :pepeW:
14:14 < bridge> <Mr.Gh0s7> get another laptop so you have 2
14:16 < bridge> <zogtib> (I'm mostly saying that using 2 mice wouldn't help as much currently while also having great difficulties (no current support etc))
14:16 < bridge> <Mr.Gh0s7> We would make the support. You have to be the change you want to see in the world (ft. Ryozuki)
14:31 < bridge> <Jupstar ‚ú™> @mr.gh0s7 which ogl do you target?
14:32 < bridge> <Mr.Gh0s7> 3.3 is the tutorial.
14:32 < bridge> <Jupstar ‚ú™> mh ok
14:32 < bridge> <Mr.Gh0s7> which do you recommend?
14:33 < bridge> <Jupstar ‚ú™> well opengl 4.5 ofc xD
14:33 < bridge> <Mr.Gh0s7> xD
14:33 < bridge> <Jupstar ‚ú™> besides new features, they often also fix stuff in a sense that they don't do it so overcomplicated
14:34 < bridge> <Jupstar ‚ú™> e.g. in newer opengl versions u can just bind a texture to a shader slot, instead of binding it to a slot and bind that slot to the shader
14:34 < bridge> <Jupstar ‚ú™> i dunno afaik they added a lot of these named bindings, instead of doing it as stateful as in older versions
14:34 < bridge> <Mr.Gh0s7> üëç
14:35 < bridge> <_voxeldoesart> related but unrelated
14:35 < bridge> <_voxeldoesart> has there been Any game that utilizes svg rendering
14:35 < bridge> <Mr.Gh0s7> I'll look to it when I am done with the tutorial (maybe earlier too ;))
14:35 < bridge> <Jupstar ‚ú™> well the problem with SVG is really, u either have very optimized clean SVGs or u waste perf
14:35 < bridge> <Jupstar ‚ú™> it's simply not a data format that targets max perf
14:35 < bridge> <Jupstar ‚ú™> and that's usually something desired by games
14:36 < bridge> <_voxeldoesart> fair enough
14:36 < bridge> <Jupstar ‚ú™> but i'd look out for 2d games
14:36 < bridge> <Jupstar ‚ú™> they might have it
14:37 < bridge> <Jupstar ‚ú™> for 3d i never seen it.. the maximum i've seen is clear text rendering(since fonts are also kind of SVGs/vector graphics)
14:37 < bridge> <Jupstar ‚ú™> but yeah, fonts are much less powerful ofc^^
14:37 < bridge> <_voxeldoesart> was thinking 2d since i recall us babbling about svg rendering in ddnet
14:38 < bridge> <Jupstar ‚ú™> i mean i'd defs like to test it out.. but lot of work just to already know that it's 100% slower xD
14:38 < bridge> <Jupstar ‚ú™> and only worth for zooming in
14:38 < bridge> <Jupstar ‚ú™> and what also is annoying is, integrating it into your renderer
14:40 < bridge> <heinrich5991> I mean a polygon mesh is kinda like an SVG
14:40 < bridge> <heinrich5991> I think in 3d, voxels are rather rare
14:41 < bridge> <Jupstar ‚ú™> yeah true, but also simpler
14:41 < bridge> <Jupstar ‚ú™> SVGs support blur etc
14:42 < bridge> <_voxeldoesart> im right here ü•π
14:42 < bridge> <Jupstar ‚ú™> xd
14:43 < bridge> <Mr.Gh0s7> :kek:
14:43 < bridge> <Jupstar ‚ú™> but voxels are 3d pixels only right?
14:43 < bridge> <Jupstar ‚ú™> not vector graphics
14:43 < bridge> <Jupstar ‚ú™> i know a few games
14:43 < bridge> <_voxeldoesart> i mean 2d cubes are easy
14:43 < bridge> <Jupstar ‚ú™> xd
14:43 < bridge> <_voxeldoesart> *3d
14:44 < bridge> <Jupstar ‚ú™> minecraft are textured voxels xdd
14:44 < bridge> <_voxeldoesart> yea
14:56 < bridge> <ryozuki> ```
14:56 < bridge> <ryozuki> Bus 003 Device 006: ID 0483:374b STMicroelectronics ST-LINK/V2.1
14:57 < bridge> <ryozuki> Bus 003 Device 005: ID 0483:374e STMicroelectronics STLINK-V3
14:57 < bridge> <ryozuki> ```
14:57 < bridge> <ryozuki> epic
14:57 < bridge> <Ewan> cool
14:57 < bridge> <Mr.Gh0s7> üëç
14:57 < bridge> <Ewan> good morning
14:57 < bridge> <ryozuki> ty
15:02 < bridge> <ryozuki> ```
15:02 < bridge> <ryozuki> ‚ùØ openocd -f interface/stlink.cfg -f target/stm32f3x.cfg
15:02 < bridge> <ryozuki> Open On-Chip Debugger 0.12.0
15:02 < bridge> <ryozuki> Licensed under GNU GPL v2
15:02 < bridge> <ryozuki> For bug reports, read
15:02 < bridge> <ryozuki>     http://openocd.org/doc/doxygen/bugs.html
15:02 < bridge> <ryozuki> Info : auto-selecting first available session transport "hla_swd". To override use 'transport select <transport>'.
15:02 < bridge> <ryozuki> Info : The selected transport took over low-level target control. The results might differ compared to plain JTAG/SWD
15:02 < bridge> <ryozuki> Info : Listening on port 6666 for tcl connections
15:02 < bridge> <ryozuki> Info : Listening on port 4444 for telnet connections
15:02 < bridge> <ryozuki> Info : clock speed 1000 kHz
15:02 < bridge> <ryozuki> Info : STLINK V2J37M26 (API v2) VID:PID 0483:374B
15:02 < bridge> <ryozuki> Info : Target voltage: 2.902491
15:02 < bridge> <ryozuki> Info : [stm32f3x.cpu] Cortex-M4 r0p1 processor detected
15:02 < bridge> <ryozuki> Info : [stm32f3x.cpu] target has 6 breakpoints, 4 watchpoints
15:02 < bridge> <ryozuki> Info : starting gdb server for stm32f3x.cpu on 3333
15:03 < bridge> <ryozuki> Info : Listening on port 3333 for gdb connections
15:03 < bridge> <ryozuki> ```
15:03 < bridge> <ryozuki> im a hacker
15:11 < bridge> <reitw> ST sux
15:12 < bridge> <reitw> How many times I had to reset my stm32 card
15:16 < bridge> <patiga> What sets apart svgs for me is that they have arbitrary quality. meshes don't really support curvature, so you need more and more complex meshes the closer the camera
15:22 < bridge> <Jupstar ‚ú™> @ryozuki in case i forget to ask tomorrow: ||do you know any allocator (that i can pass to Vec, Arc etc. that supports some kind of "initial memory size" and then "alloc size if full".. so basically it should be dynamic but i want to allocate lot in advance, since i can estimate the roundabout size. Additionally would be nice if it's using a spinlock instead of normal mutex or whatever||
15:22 < bridge> <Jupstar ‚ú™> only read tomorrow ofc xD
15:30 < bridge> <ryozuki> ill get a microbit soon
15:30 < bridge> <ryozuki> thhe new rust embedded tutorial uses microbit
15:30 < bridge> <ryozuki> hmm explain further
15:30 < bridge> <ryozuki> initial memory size? u can ask vec to preallocate using with_capacity
15:31 < bridge> <ryozuki> idk what u mean by alloc size if full
15:31 < bridge> <ryozuki> but maybe u want a bump allocator?
15:31 < bridge> <ryozuki> https://docs.rs/bumpalo/latest/bumpalo/
15:32 < bridge> <ryozuki> u also got https://docs.rs/slab/0.4.9/slab/
15:32 < bridge> <ryozuki> > Slab provides pre-allocated storage for a single data type. If many values of a single type are being allocated, it can be more efficient to pre-allocate the necessary storage. Since the size of the type is uniform, memory fragmentation can be avoided. Storing, clearing, and lookup operations become very cheap.
15:32 < bridge> <ryozuki> > 
15:32 < bridge> <ryozuki> > While Slab may look like other Rust collections, it is not intended to be used as a general purpose collection. The primary difference between Slab and Vec is that Slab returns the key when storing the value.
15:32 < bridge> <ryozuki> > 
15:32 < bridge> <ryozuki> > It is important to note that keys may be reused. In other words, once a value associated with a given key is removed from a slab, that key may be returned from future calls to insert.
15:32 < bridge> <heinrich5991> why use a spinlock instead of a mutex?
15:33 < bridge> <heinrich5991> afaik, normal mutexes only enter the kernel on contention
15:33 < bridge> <ryozuki> ye a spinlock should be worse right?
15:33 < bridge> <reitw> I was using micropython + some async lib for BLE
15:33 < bridge> <ryozuki> but maybe he has no_std needs @heinrich5991
15:33 < bridge> <reitw> The documentation was horrible af
15:33 < bridge> <ryozuki> i wont touch python
15:34 < bridge> <Jupstar ‚ú™> u should read it tomorrow keks
15:34 < bridge> <ryozuki> xd
15:34 < bridge> <Jupstar ‚ú™> why not, i never want to enter any sleep
15:35 < bridge> <ryozuki> i think slab is quite good when making trees
15:35 < bridge> <Jupstar ‚ú™> if the crates doesn't use a spinlock, it's probably a slow implementation
15:36 < bridge> <Jupstar ‚ú™> well i need it as allocator i can pass to vec etc.
15:36 < bridge> <Jupstar ‚ú™> to rust std data types
15:37 < bridge> <heinrich5991> hm. in that case I'd still prefer a normal mutex. if contention is a bug, then I'd prefer the process to sleep over using a lot of CPU when that assumption is broken
15:38 < bridge> <Jupstar ‚ú™> well additionally i don't trust the implementations. e.g. windows xd
15:44 < bridge> <Jupstar ‚ú™> a lockfree impl is also welcome, but probably doesn't work with a heap like data structure
15:45 < bridge> <heinrich5991> https://stackoverflow.com/a/70355738/870079 according to a random stackoverflow post, srwlock (which rust's mutexes use on windows) behave like futexes on linux
15:45 < bridge> <heinrich5991> not sure if I trust a random stackoverflow post though
15:46 < bridge> <Jupstar ‚ú™> i just don't like that in theory the hybrid system can decide to go to the thread scheduler...
17:37 < bridge> <ryozuki> https://doc.rust-lang.org/stable/std/cell/struct.UnsafeCell.html
17:45 < bridge> <ryozuki> https://blog.rust-lang.org/2023/10/26/broken-badges-and-23k-keywords.html
17:46 < bridge> <ryozuki> @heinrich5991
17:46 < bridge> <ryozuki> a crate with 23000 features
17:46 < bridge> <ryozuki> cargo features
18:19 < bridge> <Jupstar ‚ú™> geschichten aus dem paulaner garten
18:20 < bridge> <ryozuki> i like paulaner beer
18:20 < bridge> <Jupstar ‚ú™> xd
18:20 < bridge> <Jupstar ‚ú™> actually this is exactly this
18:20 < bridge> <Jupstar ‚ú™> it's a beer garden xd
18:20 < bridge> <ryozuki> xd
18:21 < bridge> <Jupstar ‚ú™> when ppl tell their fairy tails about stuff that doesnt exist
18:21 < bridge> <Jupstar ‚ú™> xd
18:22 < bridge> <Jupstar ‚ú™> https://docs.rs/crate/icondata/0.1.0/features
18:22 < bridge> <Jupstar ‚ú™> this is the crate btw
18:23 < bridge> <Jupstar ‚ú™> he made one feature per font icon
18:23 < bridge> <Jupstar ‚ú™> wtf
18:23 < bridge> <Jupstar ‚ú™> is wrong with some ppl
18:24 < bridge> <Jupstar ‚ú™> " Every icon is packaged as its own cargo feature to reduce build times."
18:24 < bridge> <Jupstar ‚ú™> 
18:24 < bridge> <Jupstar ‚ú™> sure.. parsing 23000 features is soo much faster
18:24 < bridge> <Jupstar ‚ú™> lmao
18:31 < bridge> <Ewan> howdy
18:31 < bridge> <MilkeeyCat> morning üçµ
18:31 < bridge> <Ewan> morning
18:31 < bridge> <Ewan> foggy today
18:32 < bridge> <MilkeeyCat> @ryozuki im in ddnet gentoo club, right? its been more than 1 month :gigachad:
18:33 < bridge> <ryozuki> yes
18:33 < bridge> <Ewan> how are u enjoying it
18:33 < bridge> <ryozuki> @milkeeycat put gentoo logo as pfp
18:34 < bridge> <MilkeeyCat> and ill be as jupstar :justatest:
18:34 < bridge> <MilkeeyCat> but with gentoo
18:35 < bridge> <MilkeeyCat> its definitely go + htmx thursday
18:35 < bridge> <MilkeeyCat> today is definitely go + htmx thursday
18:39 < bridge> <Jupstar ‚ú™> use this
18:39 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1109067034848919562/Voxel.png?ex=6544cd2a&is=6532582a&hm=6d364e449eea618317e168e5fe81bbc6ced89805b57e47688fd4912c0e8decda&
18:43 < bridge> <Ewan> lol
18:51 < bridge> <MilkeeyCat> not a huge voxel fan
18:51 < bridge> <MilkeeyCat> can put js logo
18:51 < bridge> <MilkeeyCat> :justatest:
18:51 < bridge> <MilkeeyCat> can put js logo tho
18:52 < bridge> <MilkeeyCat> not a huge voxel's fan
18:53 < bridge> <Jupstar ‚ú™> MilkeeyCat sadly doesn't fit. way too long name xd
18:54 < bridge> <MilkeeyCat> most ppl read my name as MickeyCat :feelsbadman:
18:54 < bridge> <Jupstar ‚ú™> https://upload.wikimedia.org/wikipedia/commons/e/e9/Opengl-logo.svg
18:54 < bridge> <Jupstar ‚ú™> and when u spanish person:
18:54 < bridge> <Jupstar ‚ú™> https://upload.wikimedia.org/wikipedia/commons/3/3f/OpenGL_ES_logo_%28Nov14%29.svg
18:54 < bridge> <Jupstar ‚ú™> xd
18:58 < bridge> <Ewan> lmfao
18:59 < bridge> <ryozuki> xd
18:59 < bridge> <ryozuki> luckily im catalan
19:00 < bridge> <Ewan> ya but in barcelona
19:02 < bridge> <teero777> i want one tooo
19:05 < bridge> <_voxeldoesart> i forgot you did that :justatest:
19:13 < bridge> <Ewan> wait he did that lmfao
19:13 < bridge> <Ewan> i thought you would have
19:32 < bridge> <chairn> https://www.reddit.com/r/ProgrammerHumor/comments/17goyxf/sqldevlearningmongodb/
19:50 < bridge> <_voxeldoesart> thats not in character
21:57 < bridge> <chairn> hmm, admin impostor?
21:57 < bridge> <chairn> there's a deen on every pol server, and a robyt as well
21:57 < bridge> <chairn> https://cdn.discordapp.com/attachments/293493549758939136/1167190230995046512/image.png?ex=654d399c&is=653ac49c&hm=201aad27a17d71dcdea3b776c6a682a2bc6a9765cd6fd3ce70f54afa2c6188ee&
22:03 < bridge> <yekrm> sus
22:08 < bridge> <Ewan> this is the same as what was happening to USA a few months ago, their names were also colors in case the admin names were temporarily banned
22:08 < bridge> <Ewan> blue green yellow etc
22:08 < bridge> <Ewan> same source iirc
22:26 < bridge> <Ewan> oh look at that
22:26 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1167197565008220190/image.png?ex=654d4070&is=653acb70&hm=58782922a5b1281e53236c74b4289f4b711ebeed605655065a3315b89e4d0c95&
22:28 < bridge> <Ewan> im getting flashbacks
22:28 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1167198191352021002/image.png?ex=654d4106&is=653acc06&hm=e711a16fab621c5bbcd6232a978fb5356a247aae3fb7acb5431b3f3a308a0e1f&
22:31 < bridge> <Ewan> deen's here too
22:32 < bridge> <Jupstar ‚ú™> yeah
22:32 < bridge> <Jupstar ‚ú™> annoying
22:32 < bridge> <Jupstar ‚ú™> @robyt3 swing your master ban hammer
22:32 < bridge> <Ewan> someone's doign it already
22:32 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1167199164342480897/image.png?ex=654d41ee&is=653accee&hm=e8ddd8f604fcbdac5b32f5deb32dab865c5b70916a3c575712df767b59d58d5c&
22:32 < bridge> <Ewan> no mod in lobby
22:33 < bridge> <Ewan> or maybe this is how bans work if done on another server
22:33 < bridge> <Ewan> never seen it
22:56 < bridge> <chairn> you might want to censor that link though
23:02 < bridge> <Ewan> i... guess so
23:02 < bridge> <Ewan> oh look at that
23:02 < bridge> <Ewan> oh look at that (i removed an image containing a link to a cheat client discord server as per chairn's request)
23:03 < bridge> <the_whitebull> hopefully that bot can be detected and banned on usage ...
23:03 < bridge> <Ewan> unfortunately not
23:03 < bridge> <Ewan> unless someone decides to add text blacklist features & auto-ban accordingly
23:04 < bridge> <the_whitebull> nah i mean the bot client he is talkin about
23:06 < bridge> <Ewan> oh this is actually a different client than i thought
23:08 < bridge> <_gwendal> yeah i was thinking about this just right now and came here to propose it, any message containing their discord invite link > ban gg
23:08 < bridge> <Ewan> it is so very easy to make a new invite link, it would not be worth it
23:08 < bridge> <MilkeeyCat> ban for sending links
23:08 < bridge> <MilkeeyCat> gg ez
23:09 < bridge> <_gwendal> @mpft I think they use a bot to spam every servers, it would probably make them struggle if they had to automatically create a new invite idk..
23:10 < bridge> <Ewan> if the person who made these bots did it the way a sane person would then it would be very easy to change the link
23:10 < bridge> <_gwendal> the thing is we would need mods to be able to say "hey this link is that spambot discord" so we can refresh the autoban/blacklist messages feature when they change inv ig
23:10 < bridge> <yekrm> Fast login and ban
23:11 < bridge> <yekrm> :gigachad:
23:11 < bridge> <Ewan> well i would see it in the chat
23:12 < bridge> <yekrm> 3 seconds is enough
23:12 < bridge> <yekrm> :owo:
23:32 < bridge> <learath2> I knew deen was a spambot
23:40 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1167216104662372372/F9XXUyHXAAARkE0.jpg?ex=654d51b5&is=653adcb5&hm=04fc1537f20086b896a43611f3c4230f8e6b820c00e73392c9f2987ee725949e&
23:40 < bridge> <ryozuki> c++23 is Rust--
23:40 < bridge> <ryozuki> change my mind
23:42 < bridge> <Mr.Gh0s7> üß† + üîß
23:42 < bridge> <_voxeldoesart> are vectors just a fixed list of numbers
23:42 < bridge> <ryozuki> fixed would be array
23:42 < bridge> <ryozuki> vectors are growable list
23:42 < bridge> <ryozuki> also its numbers in this case, its generic over the data type
23:43 < bridge> <gerdoe> bruh i still libe in a world where c++20 is unsupported by all compilers xd
23:43 < bridge> <gerdoe> there's c++23
