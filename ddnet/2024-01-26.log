00:35 < bridge> <Ewan> https://www.youtube.com/watch?v=Mc_JCFUzbXA
00:36 < bridge> <Ewan> i was mad when he was presenting but actually i think he's right
01:10 < bridge> <blazulite> hello
01:10 < bridge> <blazulite> https://github.com/Siile/KillingFloor How do I compile this on Linux?
01:10 < bridge> <blazulite> I forgorðŸ’€
01:10 < bridge> <blazulite> I wanna test sum mods ppl uploaded on gh
01:41 < bridge> <zhn> compiling_everything_linux
01:41 < bridge> <zhn> https://www.teeworlds.com/?page=docs&wiki=compiling_everything_linux
01:55 < bridge> <blazulite> alr tyyy
06:56 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1200318258306351164/image.png?ex=65c5be7d&is=65b3497d&hm=ed10edc14643a9903c1971a5126dc7409e50719ed26d1b48d1b5c0a89aab7045&
06:56 < bridge> <Ewan> it still says 2022
06:56 < bridge> <Ewan> lmfao
06:56 < bridge> <Ewan> who wanna take a funny picture with me
09:42 < bridge> <Ewan> gm
09:43 < bridge> <milkeeycat> morning
10:05 < bridge> <Ewan> idk where to put myself in the thing...
10:48 < bridge> <teero777> I'm down right hanging off of a tee on the bottom of the island ðŸ¤«
11:19 < ws-client> <ChillerDragon> Monthly shoutout to @Patiga for building twmap <3
11:19 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1706264321.png
11:20 < ws-client> <ChillerDragon> Being able to quickly parse digits placed by the mapper and use them in a script is so cool!
13:09 < bridge> <learath2> Did you see `std::linalg` is coming in C++26? ðŸ˜„
13:12 < bridge> <Ewan> cool
13:47 < bridge> <Jupstar âœª> chillerdragon: r u twmap pro?
13:47 < bridge> <Jupstar âœª> i have a request:
13:47 < bridge> <Jupstar âœª> i want to know the map with the most layers in a single group
13:48 < bridge> <Jupstar âœª> ok no, i actually want the most tile count of the whole group.. so the sum of all tile layers in a single group
13:48 < bridge> <Jupstar âœª> ah and only the theoretical tile count, so tiles with index 0 count too
13:49 < bridge> <Jupstar âœª> max of (group w * group h * tile layer count in group)
14:28 < bridge> <ryozuki> welcome to friday rust
14:28 < bridge> <ryozuki> the crates of the day
14:28 < bridge> <ryozuki> - https://docs.rs/internment/0.7.4/internment/index.html
14:29 < bridge> <ryozuki> https://docs.rs/hashconsing/1.6.0/hashconsing/
14:33 < bridge> <ryozuki> https://inference-review.com/article/the-man-who-carried-computer-science-on-his-shoulders
14:40 < bridge> <Jupstar âœª> I've seen this before and wonder if it's ever useful for anything other than a static str
14:41 < bridge> <ryozuki> i recommend reading this, its extremely interesting
14:41 < bridge> <ryozuki> its specially useful for compilers
14:42 < bridge> <ryozuki> @jupeyy_keks rust MIR uses interning everywhere
14:42 < bridge> <ryozuki> for basic blocks, and all mir structures
14:42 < bridge> <ryozuki> like types
14:42 < bridge> <ryozuki> etc
14:42 < bridge> <Jupstar âœª> K
14:43 < bridge> <Jupstar âœª> I wanted to use it for efficient indices. But isn't better than simply using a hashmap. In fact even worse xd
14:43 < bridge> <Jupstar âœª> Chatgpt baited me
14:45 < bridge> <patiga> @jupeyy_keks this script is rly close to what you want
14:52 < bridge> <Jupstar âœª> Nice
15:04 < bridge> <chillerdragon> I am fully booked atm sorry
15:05 < bridge> <Jupstar âœª> it's fine
15:05 < ChillerDragon> did patiga attach a script? i see neither a reply on matrix nor irc atrifacts
15:05 < bridge> <Jupstar âœª> i have to touch pyson
15:05 < bridge> <Jupstar âœª> my nightmare
15:05 < ChillerDragon> xd
15:05 < bridge> <Jupstar âœª> he replied to a previous post where he attached a script
15:06 < ChillerDragon> too old for matrix maybe
15:06 < bridge> <Jupstar âœª> https://discord.com/channels/252358080522747904/293493549758939136/999263776140447794
15:06 < bridge> <Jupstar âœª> if that helps
15:42 < bridge> <ryozuki> @jupeyy_keks when publish hiarc
15:42 < bridge> <ryozuki> make ur lib correct: https://rust-lang.github.io/api-guidelines/checklist.html
15:42 < bridge> <Jupstar âœª> you have a great taste ðŸ˜¬
15:43 < bridge> <Jupstar âœª> WTF
15:43 < bridge> <Jupstar âœª> who reads all these
15:43 < bridge> <ryozuki> me
15:43 < bridge> <ryozuki> most is common sense
15:43 < bridge> <ryozuki> but an important one is to eagerly implement derives
15:43 < bridge> <ryozuki> all u can
15:43 < bridge> <ryozuki> in libs
15:44 < bridge> <ryozuki> Types eagerly implement common traits (C-COMMON-TRAITS)
15:44 < bridge> <ryozuki> 
15:44 < bridge> <ryozuki>     Copy, Clone, Eq, PartialEq, Ord, PartialOrd, Hash, Debug, Display, Default
15:44 < bridge> <Jupstar âœª> yeah i agree with all except Default
15:44 < bridge> <ryozuki> u dont know how annoying it is to use a lib with structs that dont implement for example Debug when they cn for free
15:45 < bridge> <ryozuki> @jupeyy_keks eagerly for me means implement them if a simple derive works and it doesnt make it error prone
15:45 < bridge> <ryozuki> if default rly makes no sense then dont
15:45 < bridge> <Jupstar âœª> i see
15:45 < bridge> <Jupstar âœª> but except 2 structs hiarc is really only a trait + derive macro
15:45 < bridge> <ryozuki> > Conversions use the standard traits From, AsRef, AsMut
15:45 < bridge> <Jupstar âœª> but what sucks is implementing the trait for all std types
15:46 < bridge> <Jupstar âœª> this is probably the biggest thing that holds me back xd
15:46 < bridge> <learath2> https://zed.dev/ anyone tried this yet? it's open source and made in rust
15:46 < bridge> <Jupstar âœª> no
15:46 < bridge> <ryozuki> bro we mentioned this yesterday
15:46 < bridge> <Jupstar âœª> does it have debugger support?
15:46 < bridge> <ryozuki> its macos only
15:46 < bridge> <ryozuki> i tried it
15:47 < bridge> <ryozuki> it looks nice
15:47 < bridge> <learath2> macos only...
15:47 < bridge> <learath2> I'll definitely hate it if the developers are mac enjoyers, will pass
15:47 < bridge> <Jupstar âœª> :lol:
15:47 < bridge> <Jupstar âœª> but true
15:48 < bridge> <Jupstar âœª> who the fuck develops using metal
15:48 < bridge> <Jupstar âœª> instead of vulkan
15:48 < bridge> <learath2> mac enjoyers
15:49 < bridge> <ryozuki> ye its stupid
15:49 < bridge> <ryozuki> the editor looks neat and responsive
15:49 < bridge> <ryozuki> its written in rust
15:49 < bridge> <ryozuki> its idiocy its only macos
15:49 < bridge> <Jupstar âœª> i want to know if it has debugger support
15:49 < bridge> <Jupstar âœª> else it's just a text editor, not better than lapce probably xdd
15:50 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1200452584662646905/image.png?ex=65c63b97&is=65b3c697&hm=72b0afa8269b7f21a4fef79ecfbaf89b05b609168ecaa093871c8ba8411cbc85&
15:50 < bridge> <learath2> How is lapce?
15:51 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1200452983431905331/image.png?ex=65c63bf6&is=65b3c6f6&hm=213caea8ee9879f3b01c70c428cdc29f627b0b7fb6de2d34e0171cded8bd0069&
15:51 < bridge> <Jupstar âœª> pros:
15:51 < bridge> <Jupstar âœª> - very fast (esp the rust analyzer integration)
15:51 < bridge> <Jupstar âœª> cons:
15:51 < bridge> <Jupstar âœª> - no debugger support
15:51 < bridge> <Jupstar âœª> - it still feels worse as a text editor than most text editors, moving selected text doesnt work etc.
15:51 < bridge> <learath2> I've been thinking of migrating to something new, I'm kinda feeling neovim but exploring other stuff
15:52 < bridge> <Jupstar âœª> but i used it 3 months ago
15:52 < bridge> <Jupstar âœª> i should try today
15:52 < bridge> <ryozuki> neovim rocks
15:52 < bridge> <Jupstar âœª> but i am 99% sure they still dont have debugger integration
15:52 < bridge> <Jupstar âœª> and that is simply a red flag for me
15:52 < bridge> <learath2> no debugger support is completely fine for me, I've never had debugger support anyway
15:52 < bridge> <ryozuki> me neither xd
15:52 < bridge> <ryozuki> gdb
15:52 < bridge> <Jupstar âœª> nani
15:52 < bridge> <Jupstar âœª> gdb per hand is way too slow to use xD
15:52 < bridge> <ryozuki> try gdb with gef
15:53 < bridge> <learath2> I've gotten so used to it that I honestly don'
15:53 < bridge> <learath2> 't even feel slow anymore
15:53 < bridge> <Jupstar âœª> we can host a competition
15:53 < bridge> <learath2> no we can't, you are far more in shape than me
15:53 < bridge> <learath2> I haven't written code in months
15:54 < bridge> <learath2> If I truly need to see my code while debugging exactly at the line I'm at, I'll use the tui
15:55 < bridge> <learath2> but honestly don't even remember last I activated the tui, I just have the code up on the window next to me
15:55 < bridge> <Jupstar âœª> well it's also about watchers and thread lists etc for me
15:55 < bridge> <Jupstar âœª> local variables
15:55 < bridge> <Jupstar âœª> hovering over variables
15:56 < bridge> <Jupstar âœª> i dunno, i mean i also often do log driven debugging
15:56 < bridge> <learath2> watchers and thread list I can have with the cli quickly
15:56 < bridge> <Jupstar âœª> but sometimes a debugger is simply nicer.. and a good GUI enhances that
15:56 < bridge> <learath2> hovering over local variables would be great though ngl
15:56 < bridge> <learath2> I mean I don't mind doing a quick `p` but still it'd be better UX
16:00 < bridge> <Jupstar âœª> lapce
16:00 < bridge> <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/1200455107444219964/image.png?ex=65c63df0&is=65b3c8f0&hm=7abe0963938c24f3ab380dc3cbf1f54778efbcc4a96d299f24cfa82982e4f57b&
16:00 < bridge> <Jupstar âœª> feels already closer to vscode  since i used it last time
16:00 < bridge> <Jupstar âœª> but still feels worse overall xd
16:01 < bridge> <heinrich5991> what's it do?
16:01 < bridge> <learath2> Linear Algebra
16:02 < bridge> <learath2> So we can have matrix multiplication without having to get a library
16:02 < bridge> <learath2> (or doing it by hand :D)
16:04 < bridge> <heinrich5991> I wonder how you design that in a general purpose fashion
16:04 < bridge> <heinrich5991> does it use indices?
16:04 < bridge> <ryozuki> https://en.cppreference.com/w/cpp/header/linalg
16:04 < bridge> <ryozuki> execution policy
16:05 < bridge> <ryozuki> template<class ExecutionPolicy,
16:05 < bridge> <ryozuki>          __inout_vector InOutVec1, __inout_vector InOutVec2, class Real>
16:05 < bridge> <ryozuki> void apply_givens_rotation(ExecutionPolicy&& exec,
16:05 < bridge> <ryozuki>                            InOutVec1 x, InOutVec2 y, Real c, Real s);
16:05 < bridge> <ryozuki> xd
16:05 < bridge> <ryozuki> for cuda?
16:05 < bridge> <ryozuki> ```cpp
16:05 < bridge> <ryozuki> template<class ExecutionPolicy,
16:05 < bridge> <ryozuki>          __inout_vector InOutVec1, __inout_vector InOutVec2, class Real>
16:05 < bridge> <ryozuki> void apply_givens_rotation(ExecutionPolicy&& exec,
16:05 < bridge> <ryozuki>                            InOutVec1 x, InOutVec2 y, Real c, Real s);
16:05 < bridge> <ryozuki> ```
16:05 < bridge> <Jupstar âœª> looks horrible to use, ngl xD
16:10 < bridge> <learath2> There is a signature that doesn't require an execution policy too
16:10 < bridge> <learath2> ```c++
16:10 < bridge> <learath2> template<__in_matrix InMat1, __in_matrix InMat2, __out_matrix OutMat>
16:10 < bridge> <learath2> void matrix_product(InMat1 A, InMat2 B, OutMat C);
16:10 < bridge> <learath2> ```
16:10 < bridge> <learath2> Idk, it doesn't look particularly awful to use, just ignore the templating
16:10 < bridge> <heinrich5991> how does it access the numbers?
16:12 < bridge> <learath2> No idea, I don't even know if there is any implementation of it tbf
16:12 < bridge> <learath2> Let me take a look at the proposal
16:17 < bridge> <learath2> It seems to be through accessors functions, why?
16:21 < bridge> <learath2> Oh, nope, it's accessed directly with offsets it seems, you need to use a "BLAS-compatible memory layout" for your vectors and matrices
16:22 < bridge> <heinrich5991> does that mean it's slices with optional stride?
16:24 < bridge> <learath2> I think so, yes. It's a little hard to read through a proposal this quickly but that's what it seems to be
16:25 < bridge> <learath2> A matrix/vector is basically an `std::mdspan`, which is like a slice with optionally a stride
16:51 < bridge> <meloÆž> afair vsc has a vim motion plugin, nice getting used to it while still having the possibility to dodge to mouse if needed - but after getting used to neovim once any other IDE just feels soooo slow :D
16:51 < bridge> <learath2> That's what I'm using, currently, but I feel it's time to do something new
16:51 < bridge> <meloÆž> learn emacs :justatest:
16:51 < bridge> <meloÆž> jkjk
16:52 < bridge> <learath2> I actually never tried emacs, hm
16:52 < bridge> <meloÆž> :D oh no
16:52 < bridge> <meloÆž> https://cdn.discordapp.com/attachments/293493549758939136/1200468420932681819/image.png?ex=65c64a57&is=65b3d557&hm=656e2abf0477da8501d6ff1a40cb6b20aa014d215b2e7c7782fb3eff45cdd663&
16:53 < bridge> <Jupstar âœª> u should join a emacs discord. i bet they convert you to a emacian
16:53 < bridge> <Jupstar âœª> have u tried emacs OS?
16:53 < bridge> <Jupstar âœª> xd
16:53 < bridge> <learath2> emacs as PID1
16:53 < bridge> <Jupstar âœª> hvae u tried emacs on your washing machine
16:53 < bridge> <meloÆž> why not try an nvim pre config? there are some nice one's out there: "nvchad, lunarvim, lazyvim"
16:54 < bridge> <learath2> I don't do that
16:54 < bridge> <meloÆž> they have important things preconfigured (treesitter, LSP, filetree)
16:54 < bridge> <learath2> If I'm going to use neovim I'll do it myself ðŸ˜„
16:54 < bridge> <meloÆž> even tho :Ex exists ofc
16:55 < bridge> <meloÆž> configuring vim from scratch was a lot of fun for me personally, i used it as a way to learn lua on the way
16:55 < bridge> <meloÆž> and then i completly dumped my config and rewrote it in nix
16:55 < bridge> <learath2> Or maybe I should go all the way back to where I started to vim
16:56 < bridge> <meloÆž> go back to the roots of all things, use Vi
16:57 < bridge> <learath2> vi is just too janky
16:57 < bridge> <ryozuki> use ed
16:57 < bridge> <ryozuki> https://en.wikipedia.org/wiki/Ed_(text_editor)
16:59 < bridge> <ryozuki> > (In)famous for its terseness, ed, compatible with teletype terminals like Teletype Model 33, gives almost no visual feedback,[8] and has been called (by Peter H. Salus) "the most user-hostile editor ever created", even when compared to the contemporary (and notoriously complex) TECO.[2] For example, the message that ed will produce in case of error, and when it wants to make sure the user wishes to quit without saving, is "?". It does not report 
17:07 < bridge> <milkeeycat> who even needs those fancy things called editors, just use `echo "blah blah" > file` :justatest:
17:08 < bridge> <Jupstar âœª> ```sh
17:08 < bridge> <Jupstar âœª> 
17:08 < bridge> <Jupstar âœª> #!/bin/bash
17:08 < bridge> <Jupstar âœª> 
17:08 < bridge> <Jupstar âœª> # Simple Bash Text Editor
17:08 < bridge> <Jupstar âœª> 
17:08 < bridge> <Jupstar âœª> # Check if a filename was provided
17:08 < bridge> <Jupstar âœª> if [ $# -eq 0 ]; then
17:08 < bridge> <Jupstar âœª>     echo "Please provide a filename."
17:08 < bridge> <Jupstar âœª>     exit 1
17:08 < bridge> <Jupstar âœª> fi
17:08 < bridge> <Jupstar âœª> 
17:08 < bridge> <Jupstar âœª> FILENAME=$1
17:08 < bridge> <Jupstar âœª> 
17:09 < bridge> <Jupstar âœª> # Function to display the file content
17:09 < bridge> <Jupstar âœª> function view_file() {
17:09 < bridge> <Jupstar âœª>     clear
17:09 < bridge> <Jupstar âœª>     echo "Editing: $FILENAME"
17:09 < bridge> <Jupstar âœª>     echo "--------------------------"
17:09 < bridge> <Jupstar âœª>     cat $FILENAME
17:09 < bridge> <Jupstar âœª>     echo
17:09 < bridge> <Jupstar âœª>     echo "--------------------------"
17:09 < bridge> <Jupstar âœª>     echo "Type 'SAVE' to save."
17:09 < bridge> <Jupstar âœª>     echo "Type 'EXIT' to exit without saving."
17:09 < bridge> <Jupstar âœª>     echo
17:09 < bridge> <Jupstar âœª> }
17:09 < bridge> <Jupstar âœª> 
17:09 < bridge> <Jupstar âœª> # Main loop
17:09 < bridge> <Jupstar âœª> while true; do
17:09 < bridge> <Jupstar âœª>     view_file
17:09 < bridge> <Jupstar âœª>     echo "Enter your text (append mode):"
17:09 < bridge> <Jupstar âœª> leak of chillerdragons editor
17:09 < bridge> <teero777> :poggers2:
17:09 < bridge> <milkeeycat> he probably uses irc as editor
17:21 < bridge> <chillerdragon> I have seen this guy use cat unironically as a editor casually in a coding video https://youtube.com/@awesomekling?si=ELlMlmlUO3Y6gtMV
17:28 < bridge> <reitw> lmao the C++ integration into the Linux kernel discussion is back
17:28 < bridge> <reitw> https://lore.kernel.org/lkml/3465e0c6-f5b2-4c42-95eb-29361481f805@zytor.com/
17:52 < bridge> <ryozuki> its pointless with rust
17:59 < bridge> <Jupstar âœª> well c is an 99.99% subset of cpp xd
18:00 < bridge> <Jupstar âœª> so it could be used for existing c code
19:29 < bridge> <chairn> no video description, what is it about ?
19:34 < bridge> <chairn> damn, some guys are really upset about this ðŸ˜„
19:34 < bridge> <chairn> <https://bugzilla.kernel.org/show_bug.cgi?id=191051>
19:35 < bridge> <chairn> damn, some guys are really passionate about this ðŸ˜„
19:35 < bridge> <chairn> <https://bugzilla.kernel.org/show_bug.cgi?id=191051>
19:35 < bridge> <chairn> damn, some guys are really passionnate about this ðŸ˜„
19:35 < bridge> <chairn> <https://bugzilla.kernel.org/show_bug.cgi?id=191051>
20:18 < bridge> <cyberfighter> https://cdn.discordapp.com/attachments/293493549758939136/1200520271417852054/2024-01-26_20-16-52.mp4?ex=65c67aa1&is=65b405a1&hm=061fbe39ee4c173ddd94b837c4f3923c51921f41f5bad0a7eb955997743762ce&
20:19 < bridge> <cyberfighter> the game doesnt really like 2 of itself being opened lol
20:19 < bridge> <Jupstar âœª> should be no problem
20:19 < bridge> <Jupstar âœª> only limit is your ram
20:20 < bridge> <heinrich5991> that cqwrteur should just be banned
20:20 < bridge> <cyberfighter> 32 gb not enough to run 2 ddnets?
20:21 < bridge> <heinrich5991> 32 gb should be plenty to run two copies of ddnet
20:22 < bridge> <cyberfighter> ok it doesnt happen on opengl
20:25 < bridge> <heinrich5991> sounds like it might be a bug with vulkan
20:26 < bridge> <Jupstar âœª> @cyberfighter when will u finally reinstall your os
20:26 < bridge> <cyberfighter> which
20:26 < bridge> <Jupstar âœª> u always have problems even after changing your setup
20:26 < bridge> <cyberfighter> i reinstalled it already
20:27 < bridge> <cyberfighter> im just best bug reporter
20:27 < bridge> <cyberfighter> :troll:
20:35 < bridge> <cyberfighter> ok i restarted my game after setting it to vulkan
20:35 < bridge> <cyberfighter> and the screen is completely black
20:36 < bridge> <cyberfighter> https://cdn.discordapp.com/attachments/293493549758939136/1200524611125780521/2024-01-26_20-35-15.mp4?ex=65c67eab&is=65b409ab&hm=06bb95230b0120b3419423d954a8f116348a43d73cad037eb5aaf7e980daf233&
20:36 < bridge> <milkeeycat> just imagine that its ddnet client
20:37 < bridge> <Mr.Gh0s7> wdym I usually open multiple clients like 2+ is a standard on 16GB.
20:40 < bridge> <reitw> damn fsr 3 is out since a week & it's horrible on cod lmao
20:41 < bridge> <robyt3> Should be fixed by #7859 and #7860
20:41 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/7859
20:41 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/7860
20:50 < bridge> <cyberfighter> ok
21:21 < bridge> <teero777> seems to be working fine xd
21:21 < bridge> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1200535975080775850/2024-01-26_21-20-12.mp4?ex=65c68941&is=65b41441&hm=933a2e1a9a658635605162df4ec481f91041f7e2c8e09f24fedac3271ed67fdd&
21:26 < bridge> <Jupstar âœª> xd
21:30 < bridge> <Jupstar âœª> @robyt3 so it's blackscreen, what happened yesterday
21:31 < bridge> <Jupstar âœª> validation errors should close the game or not?
21:31 < bridge> <robyt3> yeah, I also still get the same validation errors with #7860
21:31 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/7860
21:31 < bridge> <Jupstar âœª> mh ok
21:32 < bridge> <Jupstar âœª> well guess i have to start windows tomorrow xd
21:32 < bridge> <robyt3> doesn't seem like it's fatal.
21:32 < bridge> <robyt3> `vulkan_debug: validation error: Validation Error`
21:32 < bridge> <Jupstar âœª> mhh ok
21:33 < bridge> <robyt3> I think #7859 is fine unrelated to this though, the client should definitely start in the foreground when using the restart button, which is fixed by that PR
21:33 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/7859
21:33 < bridge> <Jupstar âœª> but surprises me
21:33 < bridge> <Jupstar âœª> bcs `m_RenderingPaused = false;` is only called on a specfic sdl event
21:33 < bridge> <Jupstar âœª> mh ok
21:35 < bridge> <teero777> who of you broke aiming ðŸ˜«
21:35 < bridge> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1200539558685720757/2024-01-26_21-34-30.mp4?ex=65c68c97&is=65b41797&hm=1abab3ec7996b061911ce928f51cd138a7c03ae044c5d068fbcf35d3ae4a1fde&
21:37 < bridge> <teero777> happens on latest version
21:37 < bridge> <Jupstar âœª> ?
21:37 < bridge> <Jupstar âœª> why is the hookline so wrong
21:37 < bridge> <Jupstar âœª> it was never wrong for me
21:38 < bridge> <Jupstar âœª> r u all compiling with Ofast or smth
21:38 < bridge> <teero777> just pulled from ddnet-git arch aur
21:38 < bridge> <teero777> just pulled from ddnet-git aur
21:52 < bridge> <Jupstar âœª> if it also happens on a nightly from website
21:52 < bridge> <Jupstar âœª> report to github
21:53 < bridge> <teero777> what website xd
21:53 < bridge> <Jupstar âœª> https://ddnet.org/news/nightly-build-revived/
21:54 < bridge> <furo321> Probably me ðŸ¥´
21:55 < bridge> <teero777> yep
21:55 < bridge> <teero777> its the smae
21:55 < bridge> <teero777> its the same
21:56 < bridge> <teero777> :banhammer:
21:57 < bridge> <teero777> be quick and blame chiller
21:57 < bridge> <teero777> https://github.com/jayphelps/git-blame-someone-else
22:03 < bridge> <teero777> what did you change?
22:09 < bridge> <teero777> be quick, blame chiller
22:26 < bridge> <furo321> <https://github.com/ddnet/ddnet/pull/7512>
22:26 < bridge> <teero777> lol
22:27 < bridge> <teero777> no one noticed anything since it works on default zoom
23:12 < bridge> <Ewan> it's about how using a tab width of 3 is better than 2 or 4
23:13 < bridge> <Ewan> he did another equally jarring talk about using lizard to ensure every single function in their codebase was below like 20 loc
23:13 < bridge> <Ewan> and he claims it cleaned it up a lot
23:18 < bridge> <furo321> ^ @teero777
23:22 < bridge> <chairn> it was always like that when cursor is close to tee
23:22 < bridge> <ryozuki> @jupeyy_keks https://github.com/oasislinux/oasis
23:28 < bridge> <teero777> No xd. The aimline was always correct
23:28 < bridge> <chairn> when exactly on the tee, it was always wrong
23:28 < bridge> <chairn> for close, but not exactly on, i don't remember
23:29 < bridge> <teero777> Are u still stuck in 0.5? This is the future
