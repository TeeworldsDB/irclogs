03:09 < bridge> <0xdeen> Thanks @zwelf2 and @murpi for all the figuring out on this issue!
07:21 < bridge> <milkeeycat> Morning üçµ
07:21 < bridge> <Ewan> gm
07:21 < bridge> <Ewan> i will be sleeping soon
07:27 < bridge> <Ewan> is it possible that the unusual exploit allowing people to finish any map in absurdly short time is related to the bug where you get the new map's appearance but the old map's collision/behavior?
07:27 < bridge> <Ewan> i think it's possible that every once in a while the map's game layer is not reset on map change which would be responsible for the latter bug
07:29 < bridge> <Ewan> but the exploit could just be people vote picking maps (some known very short map) to the map they want finish on and then playing the old map
07:29 < bridge> <Ewan> as far as the server knows, it's running the new map (since that's the same info used to send the map download to the client, and every time i've seen it the client expects the new map entirely) so fraudulent ranks would be submitted based on that
07:29 < bridge> <Ewan> i don't know the tech behind it because apparently the people skipping are very secretive
07:29 < bridge> <Ewan> this is word of mouth
07:30 < bridge> <furo> It's due to \#8221
07:31 < bridge> <Ewan> nice
07:31 < bridge> <Ewan> the exploit i'm talking about is months old actually
07:34 < bridge> <Ewan> the bug related to it that i'm talking about AFAICT has not been addressed in this channel in the time that i've been here and has only happened 3 or 4 times in the 18 or so months i've played this game
07:35 < bridge> <Ewan> it's quite rare
07:37 < bridge> <Ewan> btw how can i query my ddnet activity?
07:37 < bridge> <Ewan> maybe make a graph like the one on ddnet.org but that goes further than 1y
07:37 < bridge> <Ewan> is that data even remembered
07:41 < bridge> <0xdeen> https://ddnet.org/players/?json2=Ewan
07:41 < bridge> <0xdeen> Yes, it's remembered all the way back to 2021
08:09 < bridge> <Ewan> this json breaks my pyson xd
08:11 < bridge> <0xdeen> Really? We generate it with Python
08:11 < bridge> <Ewan> seems it uses `'`
08:11 < bridge> <Ewan> instead of double quotes
08:11 < bridge> <Ewan> which require special parsing
08:12 < bridge> <0xdeen> no
08:12 < bridge> <Ewan> to which
08:13 < bridge> <0xdeen> This is valid json, we don't use `'`, it's part of some strings, but that is allowed
08:35 < bridge> <chillerdragon> Which
09:07 < bridge> <robyt3> That should be a client-side only bug (#2804). I haven't found a way to reproduce it without using dummy yet.
09:07 < bridge> <DDNet> https://github.com/ddnet/ddnet/issues/2804
09:09 < bridge> <Ewan> i feel like the client wigs out whenever it happens tho? like it's also anticipating the new map
09:10 < bridge> <Ewan> also PSA the bottom of the rim on a jar of almonds can be sharp
09:19 < bridge> <melo∆û> Did you Just Cut yourself
09:19 < bridge> <Ewan> nearly
09:19 < bridge> <melo∆û> Lmao, Bad almonds
09:21 < bridge> <reitw> Lol wut magnus worked on starfield
09:22 < bridge> <Ewan> wtf
09:22 < bridge> <Ewan> source
09:28 < bridge> <reitw> https://www.mobygames.com/person/41843/magnus-auvinen/
09:31 < bridge> <reitw> Gigachad
09:31 < bridge> <reitw> Oh rip did he leave ddnet
09:31 < bridge> <reitw> Ah np
09:38 < bridge> <milkeeycat> teeworlds mentioned :gigachad:
09:38 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1229697430799253504/image.png?ex=66309ffa&is=661e2afa&hm=36dab65bd44dac66194236d0380b8a5fdaa6482a13a8665789a10f6dddc5b78f&
09:48 < bridge> <ryozuki> damn
09:48 < bridge> <ryozuki> @tsfreddie he game deving
09:48 < bridge> <ryozuki> fr
09:51 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1229700722518655039/10813877-teeworlds-windows-server-browser.jpg?ex=6630a30a&is=661e2e0a&hm=f9ddcb9f8cf487a326bc16792ca2649522dbb9ca27126fcfd32b5639728bcec5&
09:52 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1229700889292443718/10813874-teeworlds-windows-im-a-bit-lonely-in-this-level.jpg?ex=6630a332&is=661e2e32&hm=cb065e5bf26db4017c00633b5a704749847a810b12405bec056c728e3cf2847e&
10:28 < bridge> <TsFreddie> what
10:44 < bridge> <Ewan> u asked where matricks was
10:44 < bridge> <Ewan> fred when are u gonna make bam good
10:48 < bridge> <melo∆û> Wut
11:03 < bridge> <learath2> Do any of you actually do test driven development?
11:35 < bridge> <cipy29> i do gpt4 driven development
12:20 < bridge> <patiga> @zwelf2 does, in his physics implementation
12:22 < bridge> <milkeeycat> Today i had my first interview :justatest:
12:22 < bridge> <Ewan> how come u dont respond to my questions in #bugs
12:50 < bridge> <ryozuki> i dont think so, we mostly use tests to avoid regresions
12:50 < bridge> <learath2> So you write your tests after the fact?
12:50 < bridge> <ryozuki> most of the time yes
12:50 < bridge> <ryozuki> for example i implement addition on unsigneds
12:51 < bridge> <ryozuki> then i add tests to ensure it works
12:51 < bridge> <ryozuki> edge cases
12:51 < bridge> <ryozuki> etc
12:51 < bridge> <ryozuki> i dont do the test first xd
12:52 < bridge> <teero777> @ryozuki xx v x cx C ccbc C cbccvc.
13:25 < ws-client> <ChillerDragon> Remember, Light mode attracts bugs! 
14:44 < bridge> <teero777> Ah lol my phone was in my pocket wtf @ryozuki
17:34 < bridge> <teero777> xDD
17:35 < bridge> <teero777> I have no idea
17:36 < bridge> <milkeeycat> https://github.com/0x0mer/doom-htop
17:57 < bridge> <Jupstar ‚ú™> wtf xd
17:57 < bridge> <Jupstar ‚ú™> implementing vulkan backend in htop
18:45 < bridge> <teero777> xDDD
19:43 < bridge> <Jupstar ‚ú™> i really wish AV1 adapts fast
19:43 < bridge> <Jupstar ‚ú™> i want high quality streaming
19:43 < bridge> <ryozuki> https://www.tomshardware.com/pc-components/cpus/amd-unveils-ryzen-pro-8040-hawk-point-and-8000-series-phoenix-processors-ai-engines-come-to-the-commercial-market
19:43 < bridge> <ryozuki> @jupeyy_keks
19:43 < bridge> <Jupstar ‚ú™> Zen 4 üò≠ üò≠ üò≠ üò≠ üò≠ üò≠ üò≠ üò≠ üò≠ üò≠ üò≠ üò≠
19:44 < bridge> <Jupstar ‚ú™> saddest moment in processor history
19:44 < bridge> <peter0x44> Love DRM built in browsers
19:45 < bridge> <ryozuki> https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/vuln-p521-bias.html
19:45 < bridge> <ryozuki> NIST P521 private keys are exposed by biased signature generation
19:51 < bridge> <chairn> all allocations are safe with a 0 size, it just returns you the heap pointer (at least for malloc)
19:51 < bridge> <ryozuki> in realloc its UB from C23
19:51 < bridge> <ryozuki> https://www.open-std.org/jtc1/sc22/wg14/www/docs/n2464.pdf
19:52 < bridge> <ryozuki> Proposal for C2x
19:52 < bridge> <ryozuki> WG14 n2464
19:52 < bridge> <ryozuki> Title: Zero-size Reallocations are Undefined Behavior
19:52 < bridge> <ryozuki> Author, affiliation: Robert C. Seacord, NCC Group
19:52 < bridge> <ryozuki> Date: 2019-09-10
19:52 < bridge> <ryozuki> Proposal category: Defect
19:52 < bridge> <ryozuki> Target audience: C programmers using the realloc functions
19:52 < bridge> <ryozuki> Abstract: Zero-size Reallocations are Undefined Behavior
19:52 < bridge> <ryozuki> Prior art: C
19:53 < bridge> <ryozuki> and no, its implementation defined
19:53 < bridge> <ryozuki> theorically it returns u a pointer, which u must never dereference anyway
19:54 < bridge> <Jupstar ‚ú™> i always surprised i live in a world where ryo knows so much about c
19:54 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1229852347920814170/image.png?ex=66313041&is=661ebb41&hm=caef832ada703380332bc8b9b6c8eb2d0dc53282418e9a767dd649cb976acdff&
19:54 < bridge> <Jupstar ‚ú™> üò¨
19:54 < bridge> <ryozuki> > if new_size is zero, the behavior is implementation defined (null pointer may be returned (in which case the old memory block may or may not be freed), or some non-null pointer may be returned that may not be used to access storage). Such usage is deprecated (via C DR 400).(since C17)
19:54 < bridge> <ryozuki> >     (until C23)
19:54 < bridge> <ryozuki> > 
19:54 < bridge> <ryozuki> > if new_size is zero, the behavior is undefined.
19:54 < bridge> <ryozuki> >     (since C23)
19:54 < bridge> <ryozuki> > 
19:54 < bridge> <ryozuki> > realloc is thread-safe: it behaves as though only accessing the memory locations visible through its argument, and not any static storage.
19:54 < bridge> <ryozuki> > 
19:54 < bridge> <ryozuki> > A previous call to free or realloc that deallocates a region of memory synchronizes-with a call to any allocation function, including realloc that allocates the same or a part of the same region of memory. This synchronization occurs after any access to the memory by the deallocating function and before any access to the memory by realloc. There is a single total order of all allocation and deallocation functions operating on each particular regi
19:54 < bridge> <ryozuki> text for futur heinrich
19:54 < bridge> <ryozuki> is he ever returns
19:54 < bridge> <Jupstar ‚ú™> he was active on github few days ago
19:54 < bridge> <Jupstar ‚ú™> insult him and he will spawn
19:55 < bridge> <ryozuki> xd
19:56 < bridge> <chairn> based but probably true "if you can't handle tabs as whitespaces, you probably shouldn't be parsing Linux Kconfig"
19:58 < bridge> <ryozuki> its chairn rewind time
19:59 < bridge> <Jupstar ‚ú™> it's not the same
19:59 < bridge> <Jupstar ‚ú™> xd
19:59 < bridge> <ryozuki> xd
20:00 < bridge> <chairn> i do for hw development
20:00 < bridge> <ryozuki> https://tenor.com/view/cool-fun-white-cat-dance-cool-and-fun-times-gif-16435335956387921912
20:01 < bridge> <learath2> üöÄ
20:01 < bridge> <chairn> done
20:01 < bridge> <ryozuki> https://tenor.com/view/rocket-lift-off-gif-10300477
20:03 < bridge> <learath2> The amount of emoji you have in your readme is a really good measure of how much I'll like your product/library
20:03 < bridge> <Jupstar ‚ú™> depends on the emoji
20:03 < bridge> <Jupstar ‚ú™> :brownbear:
20:03 < bridge> <Jupstar ‚ú™> :pepeW:
20:03 < bridge> <Jupstar ‚ú™> ^
20:04 < bridge> <Jupstar ‚ú™> the classic learath emoji for example
20:04 < bridge> <Jupstar ‚ú™> works 100%
20:04 < bridge> <learath2> If you have :pepeW: in your readme I'll 100% love your product
20:39 < bridge> <nouaa> DDNetRaceNetwork :frozen:
20:40 < bridge> <Jupstar ‚ú™> xd
20:40 < bridge> <Jupstar ‚ú™> also: "01:30.29"
20:40 < bridge> <Jupstar ‚ú™> 
20:40 < bridge> <Jupstar ‚ú™> real ddnet champs know that that isn't possible
20:40 < bridge> <Jupstar ‚ú™> üòè
20:42 < bridge> <nouaa> how to spot a multeasy player:
20:42 < bridge> <milkeeycat> who broke my firefox :feelsbadman:
20:42 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1229864602150506537/image.png?ex=66313baa&is=661ec6aa&hm=d44b4ef772a6abf1821d74d8c8d76b2b973c53070293b25c0ddf65d7c9c901bf&
20:43 < bridge> <Jupstar ‚ú™> time to use chromium
20:44 < bridge> <milkeeycat> https://tenor.com/view/crying-emoji-dies-gif-21956120
20:53 < bridge> <teero777> If has his birthday on the 29 of May how can you be 6 days younger and still be in May?
20:53 < bridge> <teero777> xDD
20:53 < bridge> <melo∆û> OH fuck
20:53 < bridge> <melo∆û> IM OLDER
20:53 < bridge> <melo∆û> LETSGOO
20:53 < bridge> <melo∆û> also i need sleep
20:53 < bridge> <teero777> lmaoo
20:53 < bridge> <Jupstar ‚ú™> xDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
20:53 < bridge> <teero777> Dates are hard
20:53 < bridge> <teero777> No problem melon
20:53 < bridge> <Jupstar ‚ú™> ngl you got me there melon
20:53 < bridge> <Jupstar ‚ú™> i didnt notice either
20:54 < bridge> <melo∆û> `No, dates are not hard. Dates are a type of fruit that is typically soft and chewy with a sweet flavor. They can also be dried and used in various recipes or eaten as a snack.`
20:54 < bridge> <melo∆û> lmao
20:56 < bridge> <teero777> https://youtu.be/akhWH6Q1R8M?si=kua7NrN39_rloTtm
20:56 < bridge> <Jupstar ‚ú™> @teero777 is that one guy that implements timezones for the weird nordic country
20:56 < bridge> <Jupstar ‚ú™> https://www.politico.eu/article/norway-arctic-region-asks-eu-commission-for-26-hour-day/
20:56 < bridge> <teero777> :owo:
21:02 < bridge> <melo∆û> RemindMe! 5/29/2024
21:02 < bridge> <melo∆û> damn why bot not working
21:02 < bridge> <learath2> Hahahhaha, I was so close
21:03 < bridge> <learath2> I just went upwards looking for the faulty condition. It was downwards
21:16 < bridge> <robyt3> Second idea was just starting the server at 100 ticks, but that somehow makes the client also wait 100 ticks before connecting
21:16 < bridge> <Jupstar ‚ú™> a better solution is to not rely on tick & tick speed for comparisions
21:16 < bridge> <Jupstar ‚ú™> 
21:16 < bridge> <Jupstar ‚ú™> better do smth like
21:16 < bridge> <Jupstar ‚ú™> 
21:16 < bridge> <Jupstar ‚ú™> freeze_tick = how_long_freezes
21:16 < bridge> <Jupstar ‚ú™> 
21:16 < bridge> <Jupstar ‚ú™> and then decrease that every tick
21:16 < bridge> <Jupstar ‚ú™> i rewrote most physics like that in my version at least
21:16 < bridge> <Jupstar ‚ú™> bcs i disliked the exact same problem
21:16 < Tyrone> Hello
21:20 < bridge> <learath2> But you will need a comparison after too, so that's two subtractions then
21:20 < bridge> <chairn> not on x86
21:20 < bridge> <learath2> Well I guess if it's a comparison with 0 you dont üòÑ
21:26 < bridge> <learath2> I'm unsure if it would be pulled into a register actually
21:45 < bridge> <zwelf2> yes
21:45 < bridge> <zwelf2> that is the current tick. Like GameServer->Tick() IIRC
22:04 < bridge> <zwelf2> or initialize the m_FreezeTick with -100
22:30 < bridge> <Jupstar ‚ú™> that didnt age well
22:30 < bridge> <Jupstar ‚ú™> üò¨
22:30 < bridge> <ryozuki> xd
22:30 < bridge> <ryozuki> :justatest:
22:54 < bridge> <Jupstar ‚ú™> bvb on the other hand side üòè
22:54 < bridge> <Jupstar ‚ú™> 2 spanish teams out xd
22:54 < bridge> <ryozuki> üíÄ
23:41 < bridge> <teero777> Are you talking about the issue that you can phase through freeze without freezing when you instantly join after the server start?
