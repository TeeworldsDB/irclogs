00:59 < bridge_> <totar> how can you have src == dst without them overlapping?
01:05 < bridge_> <Ewan> mmap
01:05 < bridge_> <Jupstar ‚ú™> Philosophical that is a interesting question.
01:05 < bridge_> <Jupstar ‚ú™> 
01:05 < bridge_> <Jupstar ‚ú™> Do two parallel lines intersect if they are equal.
01:05 < bridge_> <Jupstar ‚ú™> 
01:05 < bridge_> <Jupstar ‚ú™> xddd
01:05 < bridge_> <Jupstar ‚ú™> no that was just an observation that ubsan doesnt find that case
01:06 < bridge_> <Jupstar ‚ú™> Philosophically that is a interesting question.
01:06 < bridge_> <Jupstar ‚ú™> 
01:06 < bridge_> <Jupstar ‚ú™> Do two parallel lines intersect if they are equal.
01:06 < bridge_> <Jupstar ‚ú™> 
01:06 < bridge_> <Jupstar ‚ú™> xddd
01:06 < bridge_> <totar> do you mean src and dst as pointers or the actual data?
01:07 < bridge_> <Jupstar ‚ú™> it's the two pointers poiting to the same data
01:07 < bridge_> <Jupstar ‚ú™> i hope u read this
01:07 < bridge_> <Jupstar ‚ú™> bcs this topic is simply about ubsan not reporting this, which is very likely a bug in ubsan
01:08 < bridge_> <totar> I don't understand how you can have two pointers that point to the same memory and then not have it overlap if you copy from one to the other?
01:08 < bridge_> <totar> is that the bug?
01:09 < bridge_> <totar> you wrote it like src == dst is fine unless they overlap
01:10 < bridge_> <Jupstar ‚ú™> it probably is a bug yes.
01:16 < bridge_> <totar> yeah but you can clarify what you meant by 
01:16 < bridge_> <totar> 
01:16 < bridge_> <totar> > a. If you memcpy where src == dst. it's not UB
01:16 < bridge_> <totar> > b. but if src and dst overlap it is
01:16 < bridge_> <totar> 
01:16 < bridge_> <totar> How can you have a without b? I think b is always true given a
01:21 < bridge_> <Jupstar ‚ú™> yeah that is the whole point
01:22 < bridge_> <Jupstar ‚ú™> this is why ubsan probably contains a bug
01:22 < bridge_> <totar> how did you even figure this out tho
01:23 < bridge_> <Jupstar ‚ú™> we had a overlapping bug in ddnet depending on the pitch size vs width in resolution for the video encoding process
01:23 < bridge_> <Jupstar ‚ú™> robyte apparently had a non divisible by 4 resolution, i never tested it with that.
01:23 < bridge_> <Jupstar ‚ú™> 
01:23 < bridge_> <Jupstar ‚ú™> I found a different bug, reported that. Robyte tried to reproduce and found this
01:23 < bridge_> <Jupstar ‚ú™> i remove the if where it checked against the width and still didnt get his bug
01:24 < bridge_> <Jupstar ‚ú™> bcs ptr == dst, bcs width == pitch
01:24 < bridge_> <Jupstar ‚ú™> the code tried to repack itself without alignment, which was wrong anyway
01:24 < bridge_> <Jupstar ‚ú™> but i'd probably never have found it bcs ubsan also didnt report this bug xD
01:25 < bridge_> <totar> so what does ubsan even check for? it checks for src==dst but not for overlap?
01:26 < bridge_> <Jupstar ‚ú™> i dunno why it didnt catch this one. i assume they simply rely on the memcpy impl, and if the memcpy impl does a src == dst check to skip the copying it might never trigger
01:26 < bridge_> <Jupstar ‚ú™> or whoever added the check was drunk xd
01:27 < bridge_> <Jupstar ‚ú™> the ubsan check
05:28 < ws-client> <ChillerDragon> @Jupstar ‚ú™ i finally know now how u gamed with ping i assume you used cl_antiping :D i only had cl_predict on
05:44 < bridge_> <Ewan> u have never used antiping?? oh dear
05:50 < bridge_> <syrinok> Antiping haters should see the light like I have, it's worth it
06:10 < ws-client> <ChillerDragon> @Ewan i prefer good internet
06:10 < ws-client> <ChillerDragon> if my internet is not perfect i just dont play
06:10 < bridge_> <Ewan> lol
06:11 < ws-client> <ChillerDragon> I spend 2 days reverse engineering ddnet persian protocol
06:11 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1725768644.png
06:11 < ws-client> <ChillerDragon> chillerbot-zx can now connect to all ddnet persian servers xd
06:12 < ws-client> <ChillerDragon> figuring out their custom snapshots was a bit tricky but no problem for haxor dragon who can read network hexdumps of snaps and just sees tees
06:12 < ws-client> <ChillerDragon> https://www.youtube.com/watch?v=qAYXgbSlSv0
06:12 < ws-client> <ChillerDragon> im this guy
06:14 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1725768804.png
06:14 < ws-client> <ChillerDragon> all i see is cammostripes, twinbop and pinky
06:28 < bridge_> <pathos3005> Very nice
06:30 < bridge_> <pathos3005> Now you should help me develop this https://twelo.pages.dev
06:30 < bridge_> <pathos3005> And re: GitHub, yes it's me üòÑ
06:30 < ws-client> <ChillerDragon> nice site
06:31 < bridge_> <pathos3005> Thanks
06:31 < bridge_> <pathos3005> Only few pages are available as dummy front end
06:34 < bridge_> <pathos3005> So I think I can figure out how to setup Javascript (probably not secure?) to interact to a pythonanywhere Flask API, but I couldn't figure out how setup database that connects to the API :(
06:34 < bridge_> <pathos3005> 
06:34 < bridge_> <pathos3005> I explored a bit of pythonanywhere's Flask Alchemy SQL, as well as Turso. Turso I didn't delve in deep because it seems like it requires Rust (just for the Cargo I think). D:
06:37 < bridge_> <pathos3005> So I think I can figure out how to setup Javascript (probably not secure?) to interact to a pythonanywhere Flask API, but I couldn't figure out how setup database that connects to the API :(
06:37 < bridge_> <pathos3005> 
06:37 < bridge_> <pathos3005> I explored a bit of pythonanywhere's Flask Alchemy SQL, as well as Turso. Turso -- I didn't delve in deep because it seems like it requires Rust (just for the Cargo I think) and didn't want to install anything on the pythonanywhere env just yet
06:39 < bridge_> <pathos3005> If you happen to know anyone that can do backend, and someone that can mod a TW server... üòâ
06:42 < ws-client> <ChillerDragon> basically everyone who is active in this channel @pathos3005 xd
06:45 < ws-client> <ChillerDragon> btw if you want to do stats stuff i recommend ddnet-insta it already has a json api @pathos3005  https://github.com/ddnet-insta/ddnet-insta/blob/e2031acdac3040e9944fb785d97d934527a588ad/README.md#json---javascript-object-notation-format-4
06:45 < ws-client> <ChillerDragon> and it recently also got brand new CTF/DM support
06:47 < bridge_> <pathos3005> Needs a 'win' key :P but looking nice
06:47 < ws-client> <ChillerDragon> win key?
06:48 < bridge_> <pathos3005> Yeah key-value pair, win = 1 or win = 0 without deducing it
06:48 < ws-client> <ChillerDragon> where?
06:49 < ws-client> <ChillerDragon> you need to know which team won? Its the one with the higher score lol
06:49 < bridge_> <pathos3005> It could be something like
06:49 < bridge_> <pathos3005> ```
06:49 < bridge_> <pathos3005> ...
06:49 < bridge_> <pathos3005> "score_limit": 200,
06:49 < bridge_> <pathos3005> "win": -1, for red, 1 if blue, 0 if tied
06:49 < bridge_> <pathos3005> "time_limit": 0,
06:49 < bridge_> <pathos3005> ...
06:49 < bridge_> <pathos3005> ```
06:49 < bridge_> <pathos3005> Yeah you're right
06:49 < ws-client> <ChillerDragon> i mean i could add it but seems a bit redundant and also I don't like the magic values too much
06:50 < ws-client> <ChillerDragon> is looking at the score a problem for you?
06:50 < bridge_> <pathos3005> Now that I think about it, no -- just far future scope to have 'agree to tie' games, that's all
06:50 < bridge_> <pathos3005> Typically due to disconnects or emergencies etc.
06:51 < ws-client> <ChillerDragon> gctf community is building something similar
06:51 < ws-client> <ChillerDragon> TNT has some ranking website based on those stats
06:52 < bridge_> <pathos3005> You have link?
06:52 < ws-client> <ChillerDragon> no i lost it -.-
06:53 < ws-client> <ChillerDragon> https://gctfleague.org/
06:53 < ws-client> <ChillerDragon> ez found it
06:54 < bridge_> <pathos3005> Wait, is it automated? Like you log in through the client like Teerace?
06:54 < bridge_> <pathos3005> Auto upload results
06:54 < ws-client> <ChillerDragon> it posts the round stats to a http endpoint of every game
06:54 < ws-client> <ChillerDragon> no accounts 
06:54 < ws-client> <ChillerDragon> here is the code for the site btw https://github.com/TyeNTy/teeworlds-league
06:55 < bridge_> <pathos3005> So no account system, right? Or planned?
06:55 < ws-client> <ChillerDragon> Not planned
06:56 < bridge_> <pathos3005> Something like Teerace would be *ideal*
06:56 < ws-client> <ChillerDragon> I see
06:56 < bridge_> <pathos3005> Otherwise, it's basically another https://teerank.io
06:56 < ws-client> <ChillerDragon> yea
06:57 < ws-client> <ChillerDragon> i dont have time for accounts now first i want to get other stuff done but maybe somewhen far in the future. Guess for now you have to code it your self.
11:28 < bridge_> <0dpododdododo> chiller
11:28 < bridge_> <0dpododdododo> dragon
11:43 < bridge_> <maximumkivi> –∫—Ç–æ —Ä—É—Å—Å
12:09 < bridge_> <semka4323> –Ø
12:11 < bridge_> <ryozuki> morning fellas
12:52 < bridge_> <chairn> yes, they intersect at every points you consider
13:02 < bridge_> <aegisub> their intersection product in the projective plane is a single point, in the affine plane it's zero because the lines themselves are zero
13:08 < bridge_> <chairn> what the hell is intersection product ? you mean orthogonal projection ?
13:14 < bridge_> <aegisub> it's a concept in algebraic geometry
13:15 < bridge_> <aegisub> https://en.wikipedia.org/wiki/Intersection_theory#Intersection_theory_in_algebraic_geometry
13:41 < bridge_> <robyt3> # New Android beta version!
13:41 < bridge_> <robyt3> 
13:41 < bridge_> <robyt3> See https://github.com/ddnet/ddnet/pull/8632 for details. The controls are now adjustable, although you will need to use an external text editor for it:
13:41 < bridge_> <robyt3> 
13:41 < bridge_> <robyt3> 1. Export the touch configuration to the clipboard.
13:41 < bridge_> <robyt3> 2. Save the clipboard to a file so you can easily edit it (you should also do this to have a backup of your configuration in case you need to reinstall the app!).
13:41 < bridge_> <robyt3> 3. Edit the configuration (see link above for details about the format).
13:41 < bridge_> <robyt3> 4. Copy it to the clipboard and import it in the client again. If the configuration could not be loaded, check the local console for error messages containing `touch_controls` and fix it accordingly.
13:41 < bridge_> <robyt3> 5. Save the changes in the client when you are done. You can also discard your changes or revert to the default if you messed up.
13:41 < bridge_> <robyt3> 
13:41 < bridge_> <robyt3> Example for a new touch button:
13:41 < bridge_> <robyt3> 
13:41 < bridge_> <robyt3> ```json
13:41 < bridge_> <robyt3> {
13:41 < bridge_> <robyt3>     "x": 500000,
13:41 < bridge_> <robyt3>     "y": 500000,
13:42 < bridge_> <robyt3>     "w": 100000,
13:42 < bridge_> <robyt3>     "h": 100000,
13:42 < bridge_> <robyt3>     "shape": "rect",
13:42 < bridge_> <robyt3>     "visibilities": [
13:42 < bridge_> <robyt3>         "ingame"
13:42 < bridge_> <robyt3>     ],
13:42 < bridge_> <robyt3>     "behavior": {
13:42 < bridge_> <robyt3>         "type": "bind",
13:42 < bridge_> <robyt3>         "label": "Example",
13:42 < bridge_> <robyt3>         "label-type": "plain",
13:42 < bridge_> <robyt3>         "command": "echo Hello world!"
13:42 < bridge_> <robyt3>     }
13:42 < bridge_> <robyt3> },
13:42 < bridge_> <robyt3> ```
13:42 < bridge_> <robyt3> 
13:44 < bridge> <robyt3> Next Android beta version is now available, see https://discord.com/channels/252358080522747904/1277345584080097320/1282304450014482504
13:55 < bridge> <ryozuki> im bored so i decided to make my own rly simple isa and a emulator for it, what do u think
13:55 < bridge> <ryozuki> dont want to add immediate add cuz u can do that with a mov, since i want to keep it simple
13:55 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1282308394580967435/imagen.png?ex=66dee241&is=66dd90c1&hm=c2d0477af85f4273ab81160524b38d279a49816db4d0ff52fc6615cfe90c2854&
13:56 < bridge> <ryozuki> totally not riscv inspired
14:55 < bridge> <chairn> why no null opcode ?
