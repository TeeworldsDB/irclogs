00:34 < bridge_> <deen> @heinrich5991 Could you add Rust+Cargo information in https://forum.ddnet.org/viewtopic.php?t=5765 ?
00:40 < bridge_> <Ewan> maybe this whole page should be changed to use msys. much simpler
01:48 < bridge_> <Ewan> even the vulkan sdk can be gotten thru msys iirc
01:49 < bridge_> <Ewan> that makes the whole setup process p much install msys -> install a few pkgs -> cmake -> win
01:49 < bridge_> <Ewan> tho you'd prob still want to get rust thru rustup ig that adds an extra step
01:53 < bridge_> <Ewan> even the vulkan sdk can be installed thru msys iirc
08:34 < bridge_> <majefamous> Congratulations to everyone who benefited from my company yesterday. I still want more people to benefit. Ask me how And I will show on how you can earn $3500 in 24hours ...
08:34 < bridge_> <majefamous> ..join the telegram link below and Dm the Admin for more info 
08:34 < bridge_> <majefamous> 👇👇👇👇👇👇👇👇
08:34 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
08:34 < bridge_> <majefamous> 
08:34 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
08:34 < bridge_> <majefamous> Congratulations to everyone who benefited from my company yesterday. I still want more people to benefit. Ask me how And I will show on how you can earn $3500 in 24hours ...
08:34 < bridge_> <majefamous> ..join the telegram link below and Dm the Admin for more info 
08:34 < bridge_> <majefamous> 👇👇👇👇👇👇👇👇
08:34 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
08:34 < bridge_> <majefamous> 
08:34 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
08:55 < bridge_> <ryozuki> @learath2
08:55 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1128580484801245194/RDT_20230712_0855404301047760365904462.jpg
08:58 < bridge_> <majefamous> Congratulations to everyone who benefited from my company yesterday. I still want more people to benefit. Ask me how And I will show on how you can earn $3500 in 24hours ...
08:58 < bridge_> <majefamous> ..join the telegram link below and Dm the Admin for more info 
08:58 < bridge_> <majefamous> 👇👇👇👇👇👇👇👇
08:58 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
08:58 < bridge_> <majefamous> 
08:58 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
11:10 < bridge_> <heinrich5991> if you're familiar with it, maybe you could write a guide
11:18 < bridge_> <Ewan> Ok
11:19 < bridge_> <Ewan> I don’t really want to write a forum post, is there somewhere else I should do it
11:23 < bridge_> <heinrich5991> you could add a section to the readme.md
11:28 < bridge_> <ryozuki> wiki
11:35 < bridge_> <Ewan> Ok remind me later i'm doing awesome wave stuff
11:35 < bridge_> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1128620641160020048/image.png
11:35 < bridge_> <ryozuki> https://twitter.com/cjones3D/status/1678772727413616641
11:39 < bridge_> <ryozuki> @heinrich5991 have u xp compiling rust?
11:39 < bridge_> <ryozuki> i know they use x.py
11:39 < bridge_> <ryozuki> but it doesnt work for me
11:39 < bridge_> <ryozuki> ```
11:39 < bridge_> <ryozuki> rust on  master via 🐍 v3.11.4 via 🦀 v1.70.0
11:39 < bridge_> <ryozuki> ❯ ./x check
11:39 < bridge_> <ryozuki> Traceback (most recent call last):
11:39 < bridge_> <ryozuki>   File "/data1/edgar/rust/x.py", line 50, in <module>
11:39 < bridge_> <ryozuki>     bootstrap.main()
11:39 < bridge_> <ryozuki>   File "/data1/edgar/rust/src/bootstrap/bootstrap.py", line 1113, in main
11:39 < bridge_> <ryozuki>     bootstrap(args)
11:39 < bridge_> <ryozuki>   File "/data1/edgar/rust/src/bootstrap/bootstrap.py", line 1070, in bootstrap
11:39 < bridge_> <ryozuki>     build = RustBuild(config_toml, args)
11:39 < bridge_> <ryozuki>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11:39 < bridge_> <ryozuki>   File "/data1/edgar/rust/src/bootstrap/bootstrap.py", line 505, in __init__
11:39 < bridge_> <ryozuki>     self.build = args.build or self.build_triple()
11:39 < bridge_> <ryozuki>                                ^^^^^^^^^^^^^^^^^^^
11:39 < bridge_> <ryozuki>   File "/data1/edgar/rust/src/bootstrap/bootstrap.py", line 976, in build_triple
11:39 < bridge_> <ryozuki>     return config or default_build_triple(self.verbose)
11:39 < bridge_> <ryozuki>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11:39 < bridge_> <ryozuki>   File "/data1/edgar/rust/src/bootstrap/bootstrap.py", line 259, in default_build_triple
11:39 < bridge_> <ryozuki>     kernel, cputype, processor = uname.decode(default_encoding).split()
11:39 < bridge_> <ryozuki>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
11:39 < bridge_> <ryozuki> ValueError: too many values to unpack (expected 3)
11:40 < bridge_> <ryozuki> ```
11:40 < bridge_> <ryozuki> xd
11:40 < bridge_> <ryozuki> is it cuz python 3.11?
11:40 < bridge_> <heinrich5991> sounds like your target triple is wrong
11:40 < bridge_> <ryozuki> ❯ uname -a
11:40 < bridge_> <ryozuki> Linux gentoo 6.1.38-gentoo #1 SMP PREEMPT_DYNAMIC Mon Jul 10 08:28:17 CEST 2023 x86_64 AMD Ryzen 7 5800X 8-Core Processor AuthenticAMD GNU/Linux
11:40 < bridge_> <ryozuki> how to check it
11:41 < bridge_> <heinrich5991> try `uname -smp`
11:41 < bridge_> <ryozuki> ❯ uname -smp
11:41 < bridge_> <ryozuki> Linux x86_64 AMD Ryzen 7 5800X 8-Core Processor
11:41 < bridge_> <heinrich5991> ```
11:41 < bridge_> <heinrich5991> $ uname -smp
11:41 < bridge_> <heinrich5991> Linux x86_64 unknown
11:41 < bridge_> <heinrich5991> ```
11:41 < bridge_> <heinrich5991> the line with the exception expects 3 words separated by spaces
11:42 < bridge_> <heinrich5991> I suppose that's where the problem comes from?
11:42 < bridge_> <ryozuki> i guess
11:42 < bridge_> <ryozuki> @learath2 is this some gentoo thing? i remember something about uname
11:42 < bridge_> <heinrich5991> change the line to `.split(maxsplit=2)`
11:42 < bridge_> <heinrich5991> and make a pull request
11:43 < bridge_> <ryozuki> ohhh
11:43 < bridge_> <ryozuki> epic
11:43 < bridge_> <ryozuki> im rust contributor
11:43 < bridge_> <ryozuki> `-p, --processor          print the processor type (non-portable)`
11:43 < bridge_> <ryozuki> it says non portable
11:43 < bridge_> <ryozuki> so i would say my -p is ok
11:44 < bridge_> <ryozuki> my system i mean
11:44 < bridge_> <heinrich5991> it's only used on freebsd, anyway, according to the source
11:44 < bridge_> <heinrich5991> so `.split(maxsplit=2)` should not cause problems
11:45 < bridge_> <ryozuki> seems to work
11:45 < bridge_> <ryozuki> gotta fork rust
11:45 < bridge_> <heinrich5991> there's lots of pull requests you can send to rust-lang/rust
11:45 < bridge_> <heinrich5991> do it every time you find something lacking in the docs, e.g. 🙂
11:46 < bridge_> <ryozuki> what does e.g smile mean?
11:46 < bridge_> <ryozuki> confused xD
11:46 < bridge_> <ryozuki> actually i never rly searched what e.g means
11:46 < bridge_> <ryozuki> "for example"
11:46 < bridge_> <ryozuki> ah ok
11:46 < bridge_> <heinrich5991> e.g. = for example for weird latin reasons
11:46 < bridge_> <heinrich5991> e.g. = for example (for weird latin reasons)
11:46 < bridge_> <heinrich5991> i.e. = that is (for weird latin reasons)
11:56 < bridge_> <ryozuki> https://github.com/rust-lang/rust/pull/113616
11:57 < bridge_> <ryozuki> :justatest:
12:01 < bridge_> <ryozuki> damn their ci is fast
12:01 < bridge_> <ryozuki> ` AMD EPYC 7763 64-Core Processor`
12:01 < bridge_> <ryozuki> XD
12:03 < ws-client> <Jupstar> your first contribution to rust is python
12:03 < bridge_> <ryozuki> sadge
12:03 < bridge_> <ryozuki> wow rust compiled in 2 mins
12:03 < bridge_> <ryozuki> i think
12:03 < bridge_> <ryozuki> x build
12:04 < ws-client> <Jupstar> now say the same about llvm xd
12:04 < bridge_> <ryozuki> xd
12:05 < bridge_> <ryozuki> its amazing
12:05 < bridge_> <ryozuki> the x tool
12:05 < bridge_> <ryozuki> they setup env for either compiler library tools etc
12:05 < bridge_> <ryozuki> and it asks if u want a configured vscode settings
12:06 < bridge_> <ryozuki> @jupeyy_keks when epyc server for ddnet CI
12:07 < ws-client> <Jupstar> sounds good, only annoying thing is that u have to setup vm or smth for security
12:09 < bridge_> <ryozuki> true
12:10 < bridge_> <ryozuki> i guess i didnt need to compile llvm 16
12:10 < bridge_> <ryozuki> since i got it already
12:10 < ws-client> <Jupstar> pff llvm16
12:10 < ws-client> <Jupstar> non-hipster
12:11 < bridge_> <ryozuki> xd
12:11 < bridge_> <ryozuki> arch linux is on 15 still
12:11 < ws-client> <Jupstar> i am on 17 since like a month
12:11 < bridge_> <ryozuki> i think arch linux lacks slots
12:11 < bridge_> <ryozuki> gentoo portage slots
12:11 < bridge_> <ryozuki> u can have 15 and 16 side by side
12:11 < bridge_> <ryozuki> with proper deps
12:11 < bridge_> <Ewan> can’t u do that on nix as well
12:12 < bridge_> <ryozuki> probs
12:12 < bridge_> <Ewan> https://media.discordapp.net/attachments/1033076370420535398/1128628894312960030/audiomanip_LKuoc17JiC.mp4
12:12 < bridge_> <Ewan> i love wave
12:16 < ws-client> <Jupstar> thanks for destroying my ears
12:16 < bridge_> <Ewan> you are welcome
12:16 < bridge_> <Ewan> anyone know of a list of known ddnet spammers/ddossers/bots
12:17 < bridge_> <Ewan> ppl to blacklist
12:17 < bridge_> <Ewan> just banned one from unique usa and wondering if there's a list i can ban all of
12:17 < bridge_> <Jupstar ✪> Ask noby
12:17 < bridge_> <Ewan> he was on fastcap and his name was green i thought we were gonna be buddies
12:17 < bridge_> <Jupstar ✪> He has lists
12:17 < bridge_> <heinrich5991> names to blacklist?
12:17 < bridge_> <Ewan> ips
12:17 < bridge_> <heinrich5991> sounds futile, unfortunately
12:17 < bridge_> <heinrich5991> ah
12:19 < bridge_> <Ewan> ok i ask noby
12:26 < bridge_> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1128633405244985354/image.png
12:26 < bridge_> <Ewan> lmfao?????
12:28 < bridge_> <Iza> Cool map idea
12:30 < bridge_> <Ewan> anyone know what happened
12:30 < bridge_> <Ewan> i think i have to tell timakro his instagib server is broken
12:31 < bridge_> <murpi> zCatch?
12:32 < bridge_> <Ewan> hmm?
12:32 < bridge_> <Ewan> it was unique
12:32 < bridge_> <Ewan> in germany
12:32 < bridge_> <Ewan> i was getting rid of the spammers
12:34 < bridge_> <murpi> instagib isn't exactly a game mode I think, but rather a gametype
12:35 < bridge_> <murpi> deen recently found a zcatch related crash, so maybe it's that
12:35 < ws-client> <Jupstar> isnt that simply unused entities?
12:35 < bridge_> <Ewan> maybe. idk what are u talking about murpi, your words make sense but idk how they pertain to this
12:35 < ws-client> <Jupstar> is the design also broken?
12:36 < bridge_> <Ewan> that bug in my screenshot happened on the unique instagib server in germany. not ddrace
12:36 < bridge_> <Ewan> that bug in my screenshot happened on the unique instagib server in germany. not ddnet affiliated
12:36 < bridge_> <Ewan> or related to zcatch
12:37 < bridge_> <murpi> You said timakro's instagib server is broken. Instagib is a type of game, not a game mode. You can play instagib in zCatch or iCTF. Does that make sense?
12:37 < bridge_> <heinrich5991> probably ictf
12:38 < bridge_> <Ewan> ye
12:39 < bridge_> <Ewan> idk why u are talking about a crash rn
12:40 < bridge_> <Ewan> which i think is related to loading the game after ninja is voted in anyway. and probably on a different version of the game
12:44 < bridge_> <murpi> Ah, I see the confusion. I didn't see the screenshot, only your message saying that x is broken.
12:44 < bridge_> <Ewan> oh lol
12:45 < bridge_> <murpi> Oops 😄
12:45 < bridge_> <Ewan> idk what that crash was but if it's the one i reported a day or 2 ago i think i had it before as well
12:45 < bridge_> <Ewan> but only recalled after and mistook it for a crash on the vanilla server. to which deen said there were no recent crashes or logs when i asked
12:46 < bridge_> <Ewan> that would explain a bunch
12:55 < bridge_> <cyberFighter> the map got corrupted
12:55 < bridge_> <Ewan> well yeah
12:55 < bridge_> <Ewan> i think maps should be hashed before they are loaded tho
12:59 < ws-client> <Jupstar> maps have a hash
12:59 < ws-client> <Jupstar> or what do you mean
13:00 < ws-client> <Jupstar> if the hash is wrong, then thats a problem after downloading a map, not when loading a map
13:01 < bridge_> <Ewan> the only reason i can see it being corrupted is network issues
13:02 < ws-client> <Jupstar> mh i doubt that
13:02 < bridge_> <Ewan> which would be checked after downloading. which is before they are loaded
13:02 < bridge_> <Ewan> lol
13:02 < ws-client> <Jupstar> it must be broken on the server already
13:02 < ws-client> <Jupstar> does the prediction also think the map is broken ? :D
13:04 < bridge_> <Ewan> idk im not there anymore
13:09 < bridge_> <cyberFighter> yeah i think prediction makes u fall through the floor
13:11 < ws-client> <Jupstar> but the server resets your position?
13:12 < bridge_> <TsFreddie> i was in bed all day
13:13 < bridge_> <TsFreddie> My first time taking a leave to just chilling and napping
13:13 < bridge_> <TsFreddie> Didn't feel good tho lmao
13:13 < bridge_> <Ewan> yeah don't do that
13:13 < bridge_> <Ewan> bad for you
13:14 < ws-client> <Jupstar> yeah better continue working 18h a day
13:14 < bridge_> <Ewan> that's also bad
13:19 < bridge_> <TsFreddie> It's a paid leave so it was at least worth it
13:19 < bridge_> <TsFreddie> :kek:
13:20 < bridge_> <TsFreddie> I just forgot to stop working till 4am last night and i have trouble sleeping so i just requested a day off in the morning
13:22 < bridge_> <Ewan> :justatest:
13:37 < bridge_> <ryozuki> how one forgets to stop working?
13:47 < bridge_> <TsFreddie> Because unity sucks and i have to make my own emoji atlas and hack my way through a fake font format and when I'm done it's already 4
13:48 < bridge_> <TsFreddie> Also ADHD probably
13:52 < bridge_> <ryozuki> but
13:52 < bridge_> <ryozuki> only work on work hours
13:52 < bridge_> <ryozuki> if it takes longer it takes longer
13:53 < bridge_> <ryozuki> or the company hires more
13:53 < bridge_> <ryozuki> also if u dont get paid for those hours i find it stupid, and i dont think its cuz u need that job cuz living in a poor region
13:53 < bridge_> <ryozuki> but its bad for u health ultimately
13:54 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1128655724713619498/1MFz0B006yfzzo8KTALTrgQ.png
13:54 < bridge_> <ryozuki> inspirational quote
13:54 < bridge_> <ryozuki> #instagram
13:55 < bridge_> <ryozuki> #lifestyle
13:55 < bridge_> <ryozuki> :justatest:
14:07 < bridge_> <_voxeldoesart> im 14 and this is deep
14:11 < bridge_> <ryozuki> ikr
14:11 < bridge_> <ryozuki> but its true
14:12 < bridge_> <TsFreddie> i get bored at home
14:24 < bridge_> <ryozuki> then become unbored
14:24 < bridge_> <ryozuki> https://tenor.com/view/teeworlds-ddrace-teeworld-gif-24816713
14:24 < bridge_> <learath2> Me fr
14:25 < bridge_> <ryozuki> xd
14:26 < bridge_> <_voxeldoesart> ddnet is too laggy with my new internet
14:28 < bridge_> <Ewan> skill issue
14:35 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1128665939127316561/c3fjas3qodbb1.png
15:09 < bridge_> <TsFreddie> since when did SDL3 is a thing
15:10 < bridge_> <Ewan> a few months
15:10 < bridge_> <Ewan> it's still preview
15:10 < bridge_> <Ewan> very unstable
15:18 < bridge_> <TsFreddie> interesting
15:18 < bridge_> <TsFreddie> i bought a game on steam which is SDL3
15:18 < bridge_> <TsFreddie> so i was confused
15:18 < bridge_> <TsFreddie> https://cdn.discordapp.com/attachments/293493549758939136/1128676765636776006/image.png
15:19 < bridge_> <Ewan> wow that is a bad idea
15:22 < bridge_> <Jupstar ✪> That's hipster
15:22 < bridge_> <Jupstar ✪> I like
15:23 < bridge_> <Jupstar ✪> As if any sdl2 was ever stable xd
15:23 < bridge_> <Ewan> there are degrees to everything
15:23 < bridge_> <Ewan> lol
15:24 < bridge_> <TsFreddie> ~~like how i have a master degree~~
15:24 < bridge_> <Ewan> weird flex but ok
15:25 < bridge_> <TsFreddie> and it is 37 degrees outside even though it is 9 in the evening
15:25 < bridge_> <TsFreddie> that's 99 degrees for you americans btw
15:26 < bridge_> <ryozuki> where did u hear very unstable
15:26 < bridge_> <Ewan> i experienced it
15:27 < bridge_> <Ewan> libinput is completely broke on windows
15:27 < bridge_> <Ewan> build system and conflicts
15:27 < bridge_> <ryozuki> ah windows
15:27 < bridge_> <ryozuki> on linux?
15:27 < bridge_> <ryozuki> the only one and only
15:27 < bridge_> <TsFreddie> skill issue
15:27 < bridge_> <Ewan> windows is a target they platform and it doesn't work on there so it's an SDL issue
15:27 < bridge_> <Ewan> windows is a platform they target and it doesn't work on there so it's an SDL issue
15:27 < bridge_> <Ewan> words
15:28 < bridge_> <ryozuki> skill issue
15:28 < bridge_> <TsFreddie> excels and powerpoints
15:28 < bridge_> <ryozuki> @heinrich5991 regarding the rust pr i made
15:28 < bridge_> <ryozuki> im very confused
15:28 < bridge_> <ryozuki> apparently another did the same fix
15:28 < bridge_> <ryozuki> but mine was accepted
15:28 < bridge_> <ryozuki> https://github.com/rust-lang/rust/pull/113616
15:28 < bridge_> <ryozuki> https://github.com/rust-lang/rust/pull/113571
15:28 < bridge_> <ryozuki> i guess cuz theirs failed ci, but for unrelated reasons
15:29 < bridge_> <TsFreddie> you're just better
15:30 < bridge_> <TsFreddie> i do wonder how the guy feels tho, it's exactly the same change.
15:30 < bridge_> <Ewan> lmfao
15:31 < bridge_> <TsFreddie> https://github.com/rust-lang/rust/pull/113571#issuecomment-1630946289 like this conversation is pretty funny
15:32 < bridge_> <Ewan> ryo’s has a real description
15:32 < bridge_> <Ewan> that’s prob ig
15:32 < bridge_> <Ewan> it
15:32 < bridge_> <Ewan> words
15:32 < bridge_> <heinrich5991> the other person is a contributor already, they'll be fine
15:35 < bridge_> <ryozuki> my guess is that what the decision
15:36 < bridge_> <ryozuki> or maybe simply they dont want to rerun ci
15:36 < bridge_> <ryozuki> xd
15:38 < bridge_> <ryozuki> my guess is that was the decision
15:44 < bridge_> <heinrich5991> I don't think there was a conscious decision
15:44 < bridge_> <heinrich5991> these were separate reviewers
15:44 < bridge_> <heinrich5991> yours just got in faster, then the other was obsolete
15:49 < bridge_> <ryozuki> <a:aPES_Hacker:513527552976093204>
15:49 < bridge_> <ryozuki> new rust drama blog post incoming
15:49 < bridge_> <ryozuki> "pr approved other another pr"
15:49 < bridge_> <ryozuki> :kek:
15:50 < bridge_> <ryozuki> "pr approved over other another pr"
15:50 < bridge_> <ryozuki> god i cant type
15:50 < bridge_> <ryozuki> "pr approved over another pr"
15:51 < bridge_> <ryozuki> i also joined zulip
15:51 < bridge_> <ryozuki> the open source slack
15:51 < bridge_> <ryozuki> looks great
15:51 < bridge_> <ryozuki> a bit confusing at first
15:51 < bridge_> <ryozuki> https://rust-lang.zulipchat.com/#all_messages
15:51 < bridge_> <heinrich5991> yea, I also liked it
15:51 < bridge_> <heinrich5991> I wondered whether it'd be a good fit for ddnet
15:51 < bridge_> <heinrich5991> but I guess github issues is good enough
15:52 < bridge_> <ryozuki> true
15:52 < bridge_> <ryozuki> i wondered if it could replace discord
15:52 < bridge_> <ryozuki> but discord is too easy and used byeveryone
15:52 < bridge_> <heinrich5991> it'd be nice if the discord could be mirrored to some open platform
15:52 < bridge_> <Ewan> ohh sweet
15:52 < bridge_> <heinrich5991> but I haven't really found a solution for that
15:53 < bridge_> <Ewan> open source slack sounds awesome
15:53 < bridge_> <heinrich5991> not sure if it's slack tbh
15:53 < bridge_> <Ewan> is it the same API-wise or is it just similar
15:53 < bridge_> <heinrich5991> it sounded more like a replacement for forums
15:53 < bridge_> <heinrich5991> definitely not API-wise
15:53 < bridge_> <ryozuki> well i heard people say its like the open source slack
15:53 < bridge_> <TsFreddie> so like a self-hosted discord?
15:54 < bridge_> <ryozuki> self hosted slack
15:54 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1128685839824732281/image.png
15:54 < bridge_> <heinrich5991> this doesn't look like slack to me
15:54 < bridge_> <ryozuki> xd
15:54 < bridge_> <ryozuki> but it serves the same function
15:54 < bridge_> <heinrich5991> in slack you have a normal chat with optional threads
15:55 < bridge_> <heinrich5991> this is chat divided by topics
15:55 < bridge_> <ryozuki> i wonder if zulip has it
15:55 < bridge_> <heinrich5991> idk
15:55 < bridge_> <ryozuki> or its just how rust does things
16:26 < bridge_> <_voxeldoesart> it wont
16:26 < bridge_> <_voxeldoesart> discord is too big to be replacrd
16:27 < bridge_> <heinrich5991> it'll be replaced at one point
16:27 < bridge_> <heinrich5991> all these proprietrary systems are
16:27 < bridge_> <ryozuki> look at twitter
16:35 < bridge_> <TsFreddie> where are the mastodon gang
16:38 < bridge_> <_voxeldoesart> i barely see a difference with twitter
16:38 < bridge_> <_voxeldoesart> threads is a completely different demographic
16:40 < bridge_> <TsFreddie> is it bad to take melatonin every day
16:41 < bridge_> <ryozuki> ask ur doctor
16:41 < bridge_> <heinrich5991> twitter won't be gone for a couple of years
16:41 < bridge_> <heinrich5991> it's just so huge
16:41 < bridge_> <ryozuki> > Signs of melatonin overdose include excessive sleepiness, vomiting and trouble breathing. Other side effects of both low and high doses of melatonin can include headaches, excessive sleepiness, blood pressure changes, gastrointestinal problems, changes in other hormone levels and mood problems, McCall says
16:41 < bridge_> <ryozuki> since u can get overdose i guess yes
16:41 < bridge_> <ryozuki> it can be bad
16:43 < bridge_> <TsFreddie> sleeping is too hard
16:43 < bridge_> <ryozuki> go to gym
16:43 < bridge_> <ryozuki> im no doctor but i guess sleeping can be bad if u simply have a unhealthy lifestyle xd
16:43 < bridge_> <ryozuki> eat bad
16:43 < bridge_> <ryozuki> do nothing
16:43 < bridge_> <ryozuki> etc
16:43 < bridge_> <ryozuki> overwork
16:47 < bridge_> <TsFreddie> I walk 30 minutes to work does that count
16:49 < bridge_> <ryozuki> no xd
16:50 < bridge_> <Jupstar ✪> 18h - 30min or + ? Xd
16:55 < bridge_> <TsFreddie> if i work 18h i probably was sleeping at work
16:55 < bridge_> <TsFreddie> or just didn't go home that day
16:55 < bridge_> <_voxeldoesart> this looks absolutely boring LOL
16:56 < bridge_> <ryozuki> https://tenor.com/view/cats-animals-reaction-wow-surprised-gif-20914356
16:56 < bridge_> <TsFreddie> also it was 30 minutes one way so probably an hour in total for commute
16:56 < bridge_> <_voxeldoesart> idk i think id stick with discord
16:57 < bridge_> <ryozuki> some gifs are too big to be fun
17:06 < bridge_> <ryozuki> @jupeyy_keks
17:06 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1128703951483699240/qrdx62na9fbb1.png
17:23 < bridge_> <Jupstar ✪> 😬
17:48 < bridge_> <_voxeldoesart> texas sharpshooter fallacy :troll:
20:03 < bridge_> <learath2> Sometimes working with rust fills me with such primal rage, why on gods green earth am I not allowed an empty array without an `Option` being involved?
20:03 < bridge_> <learath2> I mean I know why, but still pisses me off
20:07 < bridge_> <learath2> let me have my uninitialized memory please aaaaaaaa
20:10 < bridge_> <ryozuki> ? u can
20:10 < bridge_> <ryozuki> maybeuninit
20:10 < bridge_> <ryozuki> https://doc.rust-lang.org/std/mem/union.MaybeUninit.html
20:10 < bridge_> <learath2> it's unsafe, meaning if you use it you'll get lynched
20:11 < bridge_> <ryozuki> nah
20:11 < bridge_> <ryozuki> specially for this use case
20:11 < bridge_> <ryozuki> initializing a array
20:11 < bridge_> <ryozuki> its well known
20:11 < bridge_> <ryozuki> but option is safer
20:11 < bridge_> <ryozuki> and usually no overhead
20:11 < bridge_> <ryozuki> depends on the type
20:11 < bridge_> <ryozuki> https://doc.rust-lang.org/std/mem/union.MaybeUninit.html#initializing-an-array-element-by-element
20:15 < bridge_> <heinrich5991> use case?
20:15 < bridge_> <heinrich5991> the use case I encounter often is a byte buffer for the read trait
20:16 < bridge_> <ryozuki> good to know ur using rust instead of C tho
20:16 < bridge_> <learath2> Something far simpler https://docs.rs/twilight-http/latest/twilight_http/request/channel/message/create_message/struct.CreateMessage.html#method.attachments
20:16 < bridge_> <learath2> I want to create a message inside a closure but I return it outside, so the backing storage for the attachments must be on the outside scope
20:16 < bridge_> <ryozuki> coming to the light
20:16 < bridge_> <learath2> Every second I use this language I miss the flexibility of C and C++
20:17 < bridge_> <ryozuki> rly? i dont
20:17 < bridge_> <ryozuki> that feeling of safety
20:17 < bridge_> <ryozuki> :cutestare:
20:17 < bridge_> <heinrich5991> @learath2 basically you're trying to initialize an array using a closure?
20:17 < bridge_> <learath2> I honestly hate it, it feels like there is this drill sergeant constantly watching over me. I know when I've initialized my variables I'm not an invertebrate
20:18 < bridge_> <ryozuki> std::array::from_fn
20:18 < bridge_> <ryozuki> yes yes ur a god
20:18 < bridge_> <learath2> Yes but the array must be declared on the outside scope
20:18 < bridge_> <heinrich5991> oh, cool, I didn't know stdlib had this already
20:18 < bridge_> <heinrich5991> I think @ryozuki posted the solution
20:18 < bridge_> <learath2> Don't need to be anything beyond simple human to lift your head from the line you are looking at to a couple lines above and see if you initialized something
20:19 < bridge_> <learath2> But thanks
20:19 < bridge_> <ryozuki> this is how i init [x; N] arrays
20:19 < bridge_> <ryozuki> thagt are not copy
20:19 < bridge_> <heinrich5991> back in my day™ we didn't have these fancy const generics :p
20:19 < bridge_> <heinrich5991> that's why I don't know these well yet
20:19 < bridge_> <ryozuki> oh i see
20:19 < bridge_> <ryozuki> well rust is getting better
20:19 < bridge_> <ryozuki> and learath is learning it
20:19 < bridge_> <ryozuki> its 2023
20:19 < bridge_> <ryozuki> :gigachad:
20:20 < bridge_> <learath2> This helps initialize an array using a closure, I need to initialize and use the array inside the closure and return a `CreateMessage<...>` instead
20:20 < bridge_> <learath2> It's just that the backing storage for the array needs to live the same duration as the `CreateMessage<...>` so they need to be declared in the same scope
20:21 < bridge_> <heinrich5991> ah
20:21 < bridge_> <learath2> but I can't yet initialize it because I don't know if a) I'll need it b) it's contents
20:21 < bridge_> <heinrich5991> you want to have a struct that has two fields, one depending on the other?
20:21 < bridge_> <heinrich5991> you want to have a struct that has two fields, one pointing into the other?
20:21 < bridge_> <learath2> `CreateMessage<...>` holds a reference to an `&[Attachment]`
20:22 < bridge_> <heinrich5991> yes
20:22 < bridge_> <ryozuki> what else
20:22 < bridge_> <learath2> Let me write a simple snippet so we can talk over that instead
20:22 < bridge_> <ryozuki> ye
20:27 < bridge_> <ryozuki> @heinrich5991 from_fn is fro m1.63.0
20:28 < bridge_> <ryozuki> so pretty recent
20:28 < bridge_> <ryozuki> we cant use it in ddnet code kek
20:28 < bridge_> <ryozuki> @heinrich5991 from_fn is from 1.63.0
20:28 < bridge_> <gerdoe> double irc ping :poggers:
20:28 < bridge_> <heinrich5991> tbf we're not using a lot of rust in ddnet yet
20:28 < bridge_> <heinrich5991> the only thing we do currently is the mastersrv, unfortunately
20:28 < bridge_> <majefamous> Hey everyone!!!  I am checking to see if anyone here is in need of a Full time or part-time job. Flexible and Easy Work From Home
20:28 < bridge_> <majefamous> 
20:28 < bridge_> <majefamous> BENEFITS!
20:28 < bridge_> <majefamous> 
20:28 < bridge_> <majefamous> Training\: 1 week.
20:29 < bridge_> <majefamous>  3 hours daily/ 5days Monday-Friday 
20:29 < bridge_> <majefamous> 
20:29 < bridge_> <majefamous> Payment\: Weekly $2500
20:29 < bridge_> <majefamous> 
20:29 < bridge_> <majefamous> Location\: Anywhere of your choice
20:29 < bridge_> <majefamous> 
20:29 < bridge_> <majefamous> Employment Type\: online promoter /ONLINE TASK
20:29 < bridge_> <majefamous> 
20:29 < bridge_> <majefamous> Work from Home Position 
20:29 < bridge_> <majefamous> 
20:29 < bridge_> <majefamous> JOIN THE CHAT ROOM FOR MORE INFORMATION
20:29 < bridge_> <majefamous> 👇👇👇👇👇
20:29 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
20:29 < bridge_> <majefamous> 
20:29 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
20:29 < bridge_> <heinrich5991> I'm working on doing more in rust 🙂
20:29 < bridge_> <heinrich5991> quic!
20:29 < bridge_> <ryozuki> nice
20:29 < bridge_> <ryozuki> i want to code more in ddnet but idk lazyiness
20:29 < bridge_> <ryozuki> and doing stuff in rust is more work cuz there is not a lot of cxx layer built yet
20:30 < bridge_> <heinrich5991> yes
20:30 < bridge_> <heinrich5991> maybe the cxx approach was the wrong one :/
20:30 < bridge_> <learath2> https://ideone.com/h1I1a7 this is the idea, as you can see this doesn't quite work as the array created on line 12 is a temporary that is dropped too early
20:31 < bridge_> <learath2> I recreated it with a match statement, but closures suffer from the exact same issue
20:32 < bridge_> <learath2> My inferior C brain immediately tells me that this issue is solved by allocating the backing storage before the block along with the msg, filling it in the match/closure, and then using that
20:34 < bridge_> <heinrich5991> maybe you can do a `let attachments;` in the beginning
20:34 < bridge_> <learath2> https://ideone.com/1g0ZJB this is the best I could come up with
20:34 < bridge_> <heinrich5991> and then in the `match`, you do `attachments = [your_attachment];`
20:35 < bridge_> <heinrich5991> and then pass `&attachements` to the function
20:35 < bridge_> <heinrich5991> that should work
20:36 < bridge_> <heinrich5991> and then pass `&attachments` to the function
20:37 < bridge_> <learath2> Aha, that does work, what is this magic called?
20:37 < bridge_> <heinrich5991> it's no magic :p
20:37 < bridge_> <heinrich5991> it's basically doing what you wanted to do, having an uninit variable
20:37 < bridge_> <learath2> `attachments` would be immutable no?
20:37 < bridge_> <heinrich5991> yes, you can only assign it once
20:37 < bridge_> <ryozuki> as long as u init the let in every branch it works
20:37 < bridge_> <learath2> I did not know you were allowed an assignment later huh
20:37 < bridge_> <heinrich5991> no, that's not necessary
20:38 < bridge_> <heinrich5991> you only have to init it before you use it
20:38 < bridge_> <ryozuki> everywhere where u use it*
20:38 < bridge_> <ryozuki> ye
20:38 < bridge_> <ryozuki> its initialization
20:38 < bridge_> <ryozuki> iirc
20:39 < bridge_> <learath2> It isn't mentioned in the book and I don't read enough rust code I guess
20:39 < bridge_> <learath2> Nice to know
20:40 < bridge_> <heinrich5991> I don't know how I learned that
20:40 < bridge_> <heinrich5991> perhaps just like this
20:40 < bridge_> <learath2> https://doc.rust-lang.org/reference/variables.html the reference does mention it however
20:40 < bridge_> <ryozuki> https://doc.rust-lang.org/reference/statements.html#let-statements
20:41 < bridge_> <learath2> let else is the best thing to happen in a while
20:42 < bridge_> <heinrich5991> `let else` is indeed nice
20:42 < bridge_> <heinrich5991> haven't used it yet though. so who am I to judge that ^^
20:42 < bridge_> <ryozuki> i also never used it
20:42 < bridge_> <ryozuki> if let else yes
20:43 < bridge_> <ryozuki> let is super powered
20:43 < bridge_> <ryozuki> its one of the things that makes me hate old langs
20:43 < bridge_> <ryozuki> pattern matching
20:43 < bridge_> <ryozuki> > The pattern is most commonly a single variable, which means no pattern matching is done and the expression given is bound to the variable. Apart from that, patterns used in let bindings can be as complicated as needed, given that the pattern is exhaustive. See the Rust book for more information on pattern matching. The type of the pattern is optionally given afterwards, but if left blank is automatically inferred by the compiler if possible.
20:44 < bridge_> <learath2> If y'all enjoy the usual rule of never having early returns it's normal that you don't use it
20:44 < bridge_> <ryozuki> i use early returns sometimes
20:44 < bridge_> <ryozuki> actually many times if u count ?
20:45 < bridge_> <ryozuki> `let (Ok(i) | Err(i)) = [1, 2, 3].binary_search(&2);`
20:45 < bridge_> <ryozuki> `fn f((Ok(i) | Err(i)): Result<i32, i32>) {}`
20:45 < bridge_> <learath2> The else block has to diverge, so it kinda only has a use for guards and stuff
20:45 < bridge_> <ryozuki> ```rust
20:45 < bridge_> <ryozuki> match value {
20:45 < bridge_> <ryozuki>     Some(p @ 2 | 3 | 5 | 7) => println!("{p} is a prime"),
20:45 < bridge_> <ryozuki>     Some(sq @ 0 | 1 | 4 | 9) => println!("{sq} is a square"),
20:45 < bridge_> <ryozuki>     None => println!("nothing"),
20:45 < bridge_> <ryozuki>     Some(n) => println!("{n} is something else"),
20:45 < bridge_> <ryozuki> }
20:45 < bridge_> <ryozuki> ```
20:45 < bridge_> <ryozuki> binary_search is funny cuz it returns a result
20:46 < bridge_> <ryozuki> Result<i32,32>
20:46 < bridge_> <ryozuki> > If the value is found then Result::Ok is returned, containing the index of the matching element. If there are multiple matches, then any one of the matches could be returned. The index is chosen deterministically, but is subject to change in future versions of Rust. If the value is not found then Result::Err is returned, containing the index where a matching element could be inserted while maintaining sorted order.
20:48 < bridge_> <learath2> This bot is so bad, I'm ashamed of having written it 😄
20:48 < bridge_> <ryozuki> xd
20:48 < bridge_> <ryozuki> what bot
20:48 < bridge_> <ryozuki> im interested
20:48 < bridge_> <ryozuki> i made RyoChan
20:48 < bridge_> <ryozuki> but it just has 1 command
20:49 < bridge_> <majefamous> Hey everyone!!!  I am checking to see if anyone here is in need of a Full time or part-time job. Flexible and Easy Work From Home
20:49 < bridge_> <majefamous> 
20:49 < bridge_> <majefamous> BENEFITS!
20:49 < bridge_> <majefamous> 
20:49 < bridge_> <majefamous> Training\: 1 week.
20:49 < bridge_> <majefamous>  3 hours daily/ 5days Monday-Friday 
20:49 < bridge_> <majefamous> 
20:49 < bridge_> <majefamous> Payment\: Weekly $2500
20:49 < bridge_> <majefamous> 
20:49 < bridge_> <majefamous> Location\: Anywhere of your choice
20:49 < bridge_> <majefamous> 
20:49 < bridge_> <majefamous> Employment Type\: online promoter /ONLINE TASK
20:49 < bridge_> <majefamous> 
20:49 < bridge_> <majefamous> Work from Home Position 
20:49 < bridge_> <majefamous> 
20:49 < bridge_> <majefamous> JOIN THE CHAT ROOM FOR MORE INFORMATION
20:49 < bridge_> <majefamous> 👇👇👇👇👇
20:49 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
20:49 < bridge_> <majefamous> 
20:49 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
20:49 < bridge_> <Jupstar ✪> ah right tomorrow last exam
20:49 < bridge_> <Jupstar ✪> for learath
20:49 < bridge_> <Jupstar ✪> then bot release 😬
20:49 < bridge_> <ryozuki> no open source?
20:49 < bridge_> <ryozuki> <a:aPES3_CursedDemon:804692009490186270>
20:50 < bridge_> <ryozuki> https://tenor.com/view/shame-go-t-game-of-thrones-walk-of-shame-shameful-gif-4949558
20:51 < bridge_> <heinrich5991> I like early returns
20:51 < bridge_> <learath2> it is open source
20:52 < bridge_> <ryozuki> https://github.com/rust-lang/rust/pull/113624
20:52 < bridge_> <ryozuki> rollup of my pr
20:52 < bridge_> <ryozuki> im rust contributor now
20:52 < bridge_> <ryozuki> :worrywhat:
20:52 < bridge_> <learath2> https://github.com/Learath2/discordbot don't look at it though, it's actually embarrasing code
20:52 < bridge_> <ryozuki> @learath2 in my book if it doesnt pass clippy with pedantic its embarrasing
20:53 < bridge_> <ryozuki> so ye the bar is high
20:53 < bridge_> <learath2> and the commit I'm about to push, don't judge me for it, I just need to fix the bug mods are complaining about before they kill me
20:53 < bridge_> <heinrich5991> that's a stupid rule IMO
20:53 < bridge_> <heinrich5991> anyone can push new clippy lints
20:53 < bridge_> <ryozuki> ```
20:53 < bridge_> <ryozuki> #![deny(missing_docs)]
20:53 < bridge_> <ryozuki> #![deny(warnings)]
20:53 < bridge_> <ryozuki> #![deny(clippy::nursery)]
20:53 < bridge_> <ryozuki> #![deny(clippy::pedantic)]
20:53 < bridge_> <ryozuki> #![deny(clippy::all)]
20:53 < bridge_> <ryozuki> ```
20:53 < bridge_> <ryozuki> add this
20:53 < bridge_> <learath2> I have warnings even without clippy 😄
20:53 < bridge_> <ryozuki> @heinrich5991 i knew u would say this, but i dont care
20:53 < bridge_> <ryozuki> and im half joking
20:53 < bridge_> <ryozuki> pedantic is a lot
20:53 < bridge_> <ryozuki> but atleast make clippy pass
20:54 < bridge_> <heinrich5991> and they only get reverted once enough people announce that the lint is actually not improving stuff
20:54 < bridge_> <ryozuki> (i unjokingly enable pedantic in my projects tho)
20:54 < bridge_> <ryozuki> so far the only annoying ones i found it too complex types and too many arguments
20:54 < bridge_> <ryozuki> so far the only annoying ones i found is too complex types and too many arguments
20:54 < bridge_> <_voxeldoesart> whys it called clippy
20:54 < bridge_> <ryozuki> cuz windows clippy
20:54 < bridge_> <ryozuki> its a linter
20:54 < bridge_> <_voxeldoesart> lmfao
20:55 < bridge_> <_voxeldoesart> the cult of anti windows praises the windows mascot
20:55 < bridge_> <_voxeldoesart> :justatest:
20:55 < bridge_> <ryozuki> many rust users use windows
20:55 < bridge_> <ryozuki> its a separate cult
20:55 < bridge_> <ryozuki> actually im not 100% sure its cuz windows tho
20:55 < bridge_> <_voxeldoesart> i always saw them as the same tbh
20:55 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1128761633741733948/Untitled.webp
20:55 < bridge_> <majefamous> undefined
20:55 < bridge_> <heinrich5991> wasn't clippy ms office, not windows?
20:55 < bridge_> <heinrich5991> is that a matrix bot gone wrong?
20:55 < bridge_> <ryozuki> idk what u say, the only rust community u seen is us here xd
20:56 < bridge_> <ryozuki> windows xp?
20:56 < bridge_> <majefamous> Hey everyone!!!  I am checking to see if anyone here is in need of a Full time or part-time job. Flexible and Easy Work From Home
20:56 < bridge_> <majefamous> 
20:56 < bridge_> <majefamous> BENEFITS!
20:56 < bridge_> <majefamous> 
20:56 < bridge_> <majefamous> Training\: 1 week.
20:56 < bridge_> <majefamous>  3 hours daily/ 5days Monday-Friday 
20:56 < bridge_> <majefamous> 
20:56 < bridge_> <majefamous> Payment\: Weekly $2500
20:56 < bridge_> <majefamous> 
20:56 < bridge_> <majefamous> Location\: Anywhere of your choice
20:56 < bridge_> <majefamous> 
20:56 < bridge_> <majefamous> Employment Type\: online promoter /ONLINE TASK
20:56 < bridge_> <majefamous> 
20:56 < bridge_> <majefamous> Work from Home Position 
20:56 < bridge_> <majefamous> 
20:56 < bridge_> <majefamous> JOIN THE CHAT ROOM FOR MORE INFORMATION
20:56 < bridge_> <majefamous> 👇👇👇👇👇
20:56 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
20:56 < bridge_> <majefamous> 
20:56 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
20:56 < bridge_> <heinrich5991> not AFAIK
20:56 < bridge_> <_voxeldoesart> i saw that
20:56 < bridge_> <ryozuki> i missed it
20:56 < bridge_> <_voxeldoesart> fair but i like it this way
20:57 < bridge_> <heinrich5991> e.g. check this wonderful lint that introduced bugs in people's projects: https://github.com/rust-lang/rust-clippy/pull/9484
20:57 < bridge_> <ryozuki> @learath2 atleast u using sqlx
20:58 < bridge_> <ryozuki> if a buggy lint got into pedantic its a misrelease by them, iirc the experimental lints are on nursery
20:58 < bridge_> <ryozuki> some may have false trues in stable but its ok
20:59 < bridge_> <heinrich5991> this was a warn-by-default lint
20:59 < bridge_> <ryozuki> i dont see the relation
21:00 < bridge_> <heinrich5991> this is a case where blindly following clippy's suggestions introduced bugs in people's code
21:00 < bridge_> <ryozuki> ok but i still dont see the problem
21:00 < bridge_> <heinrich5991> with clippy's default settings
21:00 < bridge_> <ryozuki> software can have bugs
21:00 < bridge_> <heinrich5991> okay
21:00 < bridge_> <ryozuki> also many ppl use clippy check
21:00 < bridge_> <ryozuki> on ci
21:00 < bridge_> <heinrich5991> I just want to say that you should critically evaluate the lints
21:00 < bridge_> <ryozuki> instead of a bare check
21:00 < bridge_> <ryozuki> i do
21:00 < bridge_> <ryozuki> so far they make lot of sense
21:00 < bridge_> <heinrich5991> if even bugs can get through, surely bad suggestions can also get through
21:00 < bridge_> <ryozuki> i think u should be more leniant
21:01 < bridge_> <heinrich5991> I thought I was being more lenient than you are on this
21:01 < bridge_> <heinrich5991> you're suggesting a "you need to fix all clippy warnings"
21:01 < bridge_> <heinrich5991> you're suggesting a "you need to fix all clippy warnings" policy
21:01 < bridge_> <ryozuki> i always seen u as a anti clippy guy
21:01 < bridge_> <ryozuki> yes, so far it worked good for me
21:01 < bridge_> <heinrich5991> and I'm providing a counterpoint
21:01 < bridge_> <heinrich5991> why fixing all clippy warnings is not always a good idea
21:01 < bridge_> <heinrich5991> as it even introduced bugs in the past
21:02 < bridge_> <heinrich5991> code linting tools are good, clippy is one of them
21:02 < bridge_> <ryozuki> which get fixed and is fine
21:02 < bridge_> <ryozuki> 99% of cases are good to fix
21:02 < bridge_> <heinrich5991> please don't make up percentages 😦
21:02 < bridge_> <heinrich5991> most of the cases are good to fix
21:02 < bridge_> <heinrich5991> I agree
21:02 < bridge_> <heinrich5991> but you should still *think* while doing so
21:02 < bridge_> <heinrich5991> if a suggestion doesn't make something better, don't do it
21:02 < bridge_> <ryozuki> i was about to make a joke but better not xd
21:04 < bridge_> <ryozuki> i aproach these tools like this: im certainly they will in most if not all cases now better than me, obv i also check if they make sense, and i read many lints descriptions
21:04 < bridge_> <ryozuki> and i find them reasonable
21:04 < bridge_> <heinrich5991> I also read lint descriptions
21:04 < bridge_> <heinrich5991> and when I don't find them reasonable, I don't apply them
21:04 < bridge_> <heinrich5991> seems like what you're doing, too. except we have different levels of what we deem sensible
21:04 < bridge_> <ryozuki> yea
21:05 < bridge_> <heinrich5991> but I wouldn't exactly call my stance "more extreme" than yours ^^
21:05 < bridge_> <majefamous> Hey everyone!!!  I am checking to see if anyone here is in need of a Full time or part-time job. Flexible and Easy Work From Home
21:05 < bridge_> <majefamous> 
21:05 < bridge_> <majefamous> BENEFITS!
21:05 < bridge_> <majefamous> 
21:05 < bridge_> <majefamous> Training\: 1 week.
21:05 < bridge_> <majefamous>  3 hours daily/ 5days Monday-Friday 
21:05 < bridge_> <majefamous> 
21:05 < bridge_> <majefamous> Payment\: Weekly $2500
21:05 < bridge_> <majefamous> 
21:05 < bridge_> <majefamous> Location\: Anywhere of your choice
21:05 < bridge_> <majefamous> 
21:05 < bridge_> <majefamous> Employment Type\: online promoter /ONLINE TASK
21:05 < bridge_> <majefamous> 
21:05 < bridge_> <majefamous> Work from Home Position 
21:05 < bridge_> <majefamous> 
21:05 < bridge_> <majefamous> JOIN THE CHAT ROOM FOR MORE INFORMATION
21:05 < bridge_> <majefamous> 👇👇👇👇👇
21:05 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
21:05 < bridge_> <majefamous> 
21:05 < bridge_> <majefamous> https://t.me/+s1mUKAv6bQMxOWE0
21:05 < bridge_> <ryozuki> lol i saw that
21:05 < bridge_> <heinrich5991> matrix spam?
21:05 < bridge_> <ryozuki> ye
21:05 < bridge_> <ryozuki> briefly xD
21:06 < bridge_> <heinrich5991> how do I check if I'm compiling for windows, in meson?
21:06 < bridge_> <ryozuki> never rly used meson
21:06 < bridge_> <ryozuki> host_machine.system()
21:06 < bridge_> <ryozuki> i think
21:06 < bridge_> <ryozuki> https://mesonbuild.com/Compiler-properties.html
21:07 < bridge_> <ryozuki> https://mesonbuild.com/Cross-compilation.html
21:07 < bridge_> <heinrich5991> thanks
21:07 < bridge_> <ryozuki> that was 1 quick google tho
21:08 < bridge_> <ryozuki> what u doing with meson?
21:08 < bridge_> <ryozuki> porting ddnet?
21:08 < bridge_> <heinrich5991> hmm, don't wanna reveal other identities
21:08 < bridge_> <heinrich5991> no
21:08 < bridge_> <ryozuki> a ok
21:09 < bridge_> <heinrich5991> typical need to define `NOMINMAX`
21:09 < bridge_> <heinrich5991> on windows
21:10 < bridge_> <heinrich5991> because the `windows.h` header thinks it's a good idea ot define `min`/`max` macros, breaking the c++ stdlib, among others
21:10 < bridge_> <ryozuki> xd
21:18 < bridge_> <learath2> fwiw I only used it because I was interested in it's Any interface, turns out it's not so good and it really isn't even a great idea to pursue that
21:19 < bridge_> <ryozuki> i never liked multi sql support
21:19 < bridge_> <ryozuki> its better to focus on one
21:19 < bridge_> <ryozuki> and use its neat features
21:19 < bridge_> <ryozuki> mainly psql
21:19 < bridge_> <heinrich5991> do you know anyhow btw?
21:19 < bridge_> <heinrich5991> do you know `anyhow` btw?
21:19 < bridge_> <learath2> Next time I might try `tokio_postgres`
21:19 < bridge_> <ryozuki> color_eyre*
21:20 < bridge_> <ryozuki> noo just use sqlx with postgres
21:20 < bridge_> <heinrich5991> would make code like this easier to write:
21:20 < bridge_> <heinrich5991> ```rs
21:20 < bridge_> <heinrich5991>     let Ok(msg) = msg else {
21:20 < bridge_> <heinrich5991>         return Err(Error("CME"));
21:20 < bridge_> <heinrich5991>     }
21:20 < bridge_> <heinrich5991> ```
21:20 < bridge_> <ryozuki> compile time checked queries
21:20 < bridge_> <learath2> Yeah, I use it in newer stuff I do, that bot is left from the very early times when I was learning Rust. So I also used it as a playground where I messed around with doing errors on my own without anyhow
21:21 < bridge_> <ryozuki> color_eyre is a fork of anyhow with better end user errors
21:21 < bridge_> <ryozuki> https://docs.rs/color-eyre/latest/color_eyre/
21:21 < bridge_> <heinrich5991> in what way "better end user errors"?
21:21 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1128768145105109043/image.png
21:21 < bridge_> <learath2> I never quite figured out how best to package that for a project btw, I just set `DATABASE_URL` and call it a day
21:22 < bridge_> <learath2> I think there is a way to generate a json file with the schema
21:22 < bridge_> <ryozuki> ye thats how i do it too but u can also do the json
21:22 < bridge_> <ryozuki> u need to install the sqlx cli tool
21:22 < bridge_> <heinrich5991> I also saw the documentation, it's not clear to me why this is "better end user errors"
21:22 < bridge_> <ryozuki> which btw, its a rly good tool to manage migrations
21:22 < bridge_> <heinrich5991> I was hoping for some small summary
21:22 < bridge_> <learath2> It looks pretty? idk
21:22 < bridge_> <ryozuki> u need the tool with the feature enabled
21:23 < bridge_> <learath2> eyre adds backtraces, I'm guessing color_eyre adds colors to eyre 😄
21:23 < bridge_> <ryozuki> ye
21:23 < bridge_> <ryozuki> backtrace  full looks pretty
21:23 < bridge_> <ryozuki> beware tho
21:23 < bridge_> <ryozuki> in some scenarios due to eyre adding backtraces, there is a issue with lifetimes
21:23 < bridge_> <learath2> I can imagine backtrace full looking extremely ugly in async programs 😄
21:23 < bridge_> <ryozuki> i found this in some async contexts
21:23 < bridge_> <ryozuki> returning some errors
21:23 < bridge_> <ryozuki> i forgot what i did
21:24 < bridge_> <_voxeldoesart> is ddnet async
21:24 < bridge_> <ryozuki> it does some stuff in threads
21:24 < bridge_> <ryozuki> but it doesnt have a async runtime
21:24 < bridge_> <heinrich5991> it's doing manual async
21:24 < bridge_> <ryozuki> tokio, a async runtime and executor, uses a work stealing scheduler to run ur routines
21:24 < bridge_> <ryozuki> tasks*
21:25 < bridge_> <ryozuki> learning to make ur async runtime can be fun
21:25 < bridge_> <ryozuki> i have to do it
21:25 < bridge_> <ryozuki> i only dabbled into it when i was doing ryoOS
21:26 < bridge_> <learath2> Async usually implies a runtime making guesses about where best to run your tasks. It'll start a bunch of threads and as you submit tasks it'll assign them to threads
21:26 < bridge_> <ryozuki> https://os.phil-opp.com/async-await/
21:26 < bridge_> <ryozuki> the neat part is spawning  a task is cheap compared to spawning a thread
21:26 < bridge_> <learath2> I'm still very skeptical about how good of an idea this async thing is, it does make writing async code trivial but how can it be as performant idk
21:27 < bridge_> <ryozuki> isnt tokio pretty perfomant
21:27 < bridge_> <ryozuki> it beats go which is designed for this, in some areas
21:27 < bridge_> <learath2> Locality principle is extremely useful in squeezing out performance, but if my task moves from core to core I might get hundreds of cache misses for no reason
21:27 < bridge_> <heinrich5991> I think postgresql also wanted to move to some async model
21:27 < bridge_> <ryozuki> i forgot the blog post
21:27 < bridge_> <heinrich5991> `Activating VS 17.6.3` — why does this take >1 second?
21:27 < bridge_> <ryozuki> i think u can spawn a non movable task iirc
21:27 < bridge_> <heinrich5991> what exactly needs 4'000'000'000 clock cycles there?
21:28 < bridge_> <learath2> I'm talking about async runtimes in general versus manually threading your application thinking about where a thread is useful
21:28 < bridge_> <ryozuki> https://docs.rs/tokio/latest/tokio/task/struct.LocalSet.html
21:28 < bridge_> <heinrich5991> postgresql is thinking about it
21:28 < bridge_> <learath2> What is this?
21:29 < bridge_> <learath2> Is there some discussion somewhere I can read? In their case performance is critical so they might have some of the concerns I have and there might be some answers
21:29 < bridge_> <heinrich5991> lwn
21:29 < bridge_> <heinrich5991> meson getting the cl compiler and link linker from the environment
21:30 < bridge_> <ryozuki> is meson made in python
21:30 < bridge_> <heinrich5991> yes
21:30 < bridge_> <ryozuki> @jupeyy_keks :justatest:
21:30 < bridge_> <ryozuki> when something like meson in rust
21:31 < bridge_> <heinrich5991> build systems are an annoying problem
21:31 < bridge_> <heinrich5991> soo many different platforms
21:31 < bridge_> <ryozuki> yesterday i found this neat crate https://crates.io/crates/dll-syringe
21:31 < bridge_> <ryozuki> wanted to try if i can port a mod platform from c# to rust
21:31 < bridge_> <ryozuki> for ffxiv
21:33 < bridge_> <Jupstar ✪> build systems have to be slow, so better use the slowest language available
21:35 < bridge_> <learath2> Maybe it's trying the compiler out? Most build systems check if it can create an executable and stuff
21:36 < bridge_> <cyberFighter> yo the spammer is back
21:36 < bridge_> <heinrich5991> I'd guess it's an extremely slow batch file from msvs
21:36 < bridge_> <cyberFighter> wrong server sry
21:36 < bridge_> <heinrich5991> but I guess I'll debug this for a minute now
21:38 < bridge_> <ryozuki> i thought heinrich was in a asian timezone
21:38 < bridge_> <ryozuki> but maybe he is american
21:38 < bridge_> <ryozuki> in*
21:38 < bridge_> <ryozuki> idk why i thought asian
21:38 < bridge_> <heinrich5991> it's `VC/Auxiliary/Build/vcvars64.bat`
21:38 < bridge_> <heinrich5991> that's taking >1 s to execute
21:38 < bridge_> <ryozuki> r u on windows?
21:38 < bridge_> <heinrich5991> .
21:39 < bridge_> <heinrich5991> I have a windows VM
21:39 < bridge_> <heinrich5991> to check that stuff compiles on windows
21:39 < bridge_> <ryozuki> ah ok
21:39 < bridge_> <ryozuki> well one could also think @learath2 is in a american timezone given his active hours
21:39 < bridge_> <ryozuki> :justatest:
21:40 < bridge_> <ryozuki> hi deen
21:40 < bridge_> <ryozuki> wen c++20
21:41 < bridge_> <ryozuki> ive seen some news around c++23
21:41 < bridge_> <learath2> heinrich is on the space station, that explains his always changing timezone
21:41 < bridge_> <deen> i failed to get it working
21:42 < bridge_> <cyberFighter> i mean i guess itw as the right server? the rainbow with random generated names guys
21:42 < bridge_> <cyberFighter> joined our srv
21:43 < bridge_> <ryozuki> @deen this reminds me, u soon wont be here at all right?
21:43 < bridge_> <ryozuki> can heinrich or learath make releases
21:43 < bridge_> <ryozuki> multiview looks pog
21:44 < bridge_> <ryozuki> @heinrich5991 https://blogs.windows.com/windows-insider/2023/07/12/announcing-windows-11-insider-preview-build-25905/
21:44 < bridge_> <ryozuki> https://news.ycombinator.com/item?id=36700076
21:45 < bridge_> <ryozuki> > Rust in the Windows Kernel
21:45 < bridge_> <ryozuki> > 
21:45 < bridge_> <ryozuki> > Rust offers advantages in reliability and security over traditional programs written in C/C++.  This preview shipped with an early implementation of critical kernel features in safe Rust. Specifically, win32kbase_rs.sys contains a new implementation of GDI region. While this is a small trial, we will continue to increase the usage of Rust in the kernel. Stay tuned!
21:45 < bridge_> <ryozuki> > 
21:45 < bridge_> <ryozuki> > [We are beginning to roll this out, so the experience isn’t available to all Insiders in the Canary Channel just yet as we plan to monitor feedback and see how it lands before pushing it out to everyone.]
21:46 < bridge_> <ryozuki> im dying of heat
21:46 < bridge_> <ryozuki> it says it rains but its fake
21:47 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1128774525618761858/image.png
21:47 < bridge_> <vy0x2> With rust this bug wouldnt have happened
21:47 < bridge_> <heinrich5991> no, not right now
21:48 < bridge_> <heinrich5991> i.e. we don't have deen's setup
21:49 < bridge_> <learath2> We could technically make a release I guess, it would just take a lot of effort since we don't have it set up
21:49 < bridge_> <ryozuki> i think for ddnet future proof sake
21:49 < bridge_> <ryozuki> we need to standarize this
21:49 < bridge_> <learath2> We have access to everything needed
21:49 < bridge_> <ryozuki> i want to be able to do a release on my server (for myself  for example)
21:49 < bridge_> <learath2> There is a release script if you want to do it yourself
21:49 < bridge_> <ryozuki> it has many hardcoded paths iirc
21:50 < bridge_> <Ewan> where is deen going?
21:50 < bridge_> <ryozuki> he isnt going anywhere
21:50 < bridge_> <learath2> (It might be nice to do this in docker actually, I did attempt it once but then it was way too much work)
21:50 < bridge_> <ryozuki> he will just be busy
21:50 < bridge_> <ryozuki> xd
21:50 < bridge_> <ryozuki> he mentioned it on this channel but idk if i should repeat it
21:50 < bridge_> <Ewan> u can link to it
21:50 < bridge_> <Ewan> or i can just scroll
21:50 < bridge_> <ryozuki> that would be the same as repeating
21:50 < bridge_> <ryozuki> i meant it more as in privacy
21:51 < bridge_> <ryozuki> ill let moderator @heinrich5991 decide
21:51 < bridge_> <Ewan> roby wyd on all the servers
21:51 < bridge_> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1128775633263145080/image.png
21:51 < bridge_> <ryozuki> why did u delete
21:51 < bridge_> <Ewan> old screenshot
21:51 < bridge_> <Ewan> fulscren bug
21:51 < bridge_> <ryozuki> xd
21:51 < bridge_> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1128775765304037487/image.png
21:52 < bridge_> <ryozuki> pro racer
21:52 < bridge_> <Ewan> so pro he does 2 at once
21:52 < bridge_> <ryozuki> why dummy on race tho
21:52 < bridge_> <ryozuki> maybe he is testing
21:52 < bridge_> <Ewan> it's just Green with their name changed LMFAO
21:52 < bridge_> <Ewan> the spammer
21:52 < bridge_> <ryozuki> lol
21:52 < bridge_> <Ewan> Malicious
22:08 < bridge_> <heinrich5991> I think that's "only" a question of effort. I don't think anyone would be against it
22:40 < ws-client> <ChillerDragon> when finally open source ddnet scripts
22:41 < ws-client> <ChillerDragon> not this half baked some scripts copied over into a git repo
22:54 < bridge_> <Ewan> what
23:11 < bridge_> <kaffeine0> Maybe you can make CI scripts (GitHub Actions and/or GitLab CI) producing suitable packages?
23:11 < bridge_> <kaffeine0> I see it won't cover everything (e.g. Steam) but maybe the way to overcome this is a better (and more accessible) automation?
23:39 < bridge_> <deen> it's not like I'm dying 😄
23:43 < bridge_> <Ewan> help math
23:43 < bridge_> <Ewan> ```cpp
23:43 < bridge_> <Ewan> // samplerate is 48000, can be any positive number tho
23:43 < bridge_> <Ewan> double running = 5; // (0, 5)
23:43 < bridge_> <Ewan> const double growthConstant = 1. + (1. / (samplerate / 3)); 
23:44 < bridge_> <Ewan> // (1, 5 * growthConstant); (2, (5 * growthConstant) * growthConstant)
23:44 < bridge_> <Ewan> for (int i = 0; i < samplerate; i++) { // Test every X between 0 and 48000
23:44 < bridge_> <Ewan>   audiodata[i] = running;
23:44 < bridge_> <Ewan>   running *= -growthConstant;
23:44 < bridge_> <Ewan> }
23:44 < bridge_> <Ewan> ```
23:44 < bridge_> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1128803949214978048/image.png
23:44 < bridge_> <Ewan> why does this create a curve where f(x) = x
23:44 < bridge_> <Ewan> what's special about 3 and 5 in this case
23:48 < bridge_> <heinrich5991> I don't see f(x) = x in that image
23:48 < bridge_> <heinrich5991> where do you plug in the 3, the 5?
23:50 < bridge_> <Ewan> i've been kinda trying to turn this into an equation but the whole growthconstant thing eludes me
23:51 < bridge_> <Ewan> 5 is the y intercept, 3 is the divisor for the growth constant
23:51 < bridge_> <Ewan> 5 is the y intercept, 3 is the divisor for the growth value
23:53 < bridge_> <Ewan> why does this create a curve where f(x) = 100
23:53 < bridge_> <Ewan> sry i forgot it's not f(x) = x it's f(x) = 100
23:54 < bridge_> <heinrich5991> I also do not see the constant function f(x) = 100
23:56 < bridge_> <Ewan> Top of the 'graph' is 100
23:56 < bridge_> <heinrich5991> ```
23:56 < bridge_> <heinrich5991> >>> (16001/16000)**48000 * 5
23:56 < bridge_> <heinrich5991> 100.41827035443303
23:56 < bridge_> <heinrich5991> ```
23:56 < bridge_> <heinrich5991> ```py
23:56 < bridge_> <heinrich5991> >>> (1 + 1 / (48000 / 3))**48000 * 5
23:56 < bridge_> <heinrich5991> 100.41827035443303
23:56 < bridge_> <heinrich5991> ```
23:57 < bridge_> <Ewan> wouldn't that be 100 if not for imprecision
23:57 < bridge_> <Ewan> idk
23:57 < bridge_> <heinrich5991> that's not exactly 100, no
23:57 < bridge_> <Ewan> so this is just a coincidence
23:57 < bridge_> <heinrich5991> yes
23:57 < bridge_> <Ewan> i see
23:58 < bridge_> <heinrich5991> ah
23:59 < bridge_> <heinrich5991> you're approximating 5 * e**3 with this formula btw
