00:31 < bridge> <ar1gin> python on wasm on js? gotta be slower than BF :kek:
01:32 < bridge> <Ewan> very cool
01:32 < bridge> <Ewan> the only actually modern gpu framework
01:33 < bridge> <Ewan> named parameters in aggregate initialization üòç
01:33 < bridge> <Ewan> i like these guys
01:33 < bridge> <Ewan> i had only seen the c api before
04:32 < ws-client> <ChillerDragon> what shortcuts do you all use for compiling?
04:32 < ws-client> <ChillerDragon> F5 is too far away and all the other keybindings seem used
04:33 < ws-client> <ChillerDragon> i use just "c" in normal mode in vim and love it but im thinking about adding one for vscode and can not think of any good keybinding 
04:37 < ws-client> <ChillerDragon> okay i went with ctrl+return lets see 
08:40 < bridge> <teero777> I switch to another workspace super+3 where I have a term open press up and then enter xd
08:42 < ws-client> <ChillerDragon> @teero777 yeye i also mostly do that but it was too slow for my ui hotreloading setup. ctrl+enter was okay
08:43 < bridge> <teero777> Ah okay. Do you have your vim conf uploaded
08:43 < ws-client> <ChillerDragon> i should probably finally setup my vim to have enough c++ support so it can do ddnet development
08:43 < ws-client> <ChillerDragon> ctrl+enter i used in vscode
08:43 < ws-client> <ChillerDragon> in vim i have c and it works like a charm
08:43 < ws-client> <ChillerDragon> and ofc all my configs are open src
08:44 < ws-client> <ChillerDragon> https://github.com/ChillerDragon/dotfiles/blob/c531bff15537581966a0d6772e61d29c4132ff2a/vscode/keybindings.json#L50-L67
08:44 < ws-client> <ChillerDragon> here my vscode
08:44 < ws-client> <ChillerDragon> https://github.com/ChillerDragon/dotfiles/blob/master/vimrc
08:44 < ws-client> <ChillerDragon> here my vim
08:44 < ws-client> <ChillerDragon> but its a huge mess
08:44 < bridge> <teero777> yea I'm still stuck on vscode also. I tried neovim for a few days and I must say configuring with lua is quite intuitive but I couldn't get everything perfectly working.
08:44 < ws-client> <ChillerDragon> can not recommend
08:45 < bridge> <teero777> The only feature I was missing was jumping  around function definitions in a source file
08:46 < ws-client> <ChillerDragon> oh that i have
08:46 < ws-client> <ChillerDragon> i use ctags
08:46 < bridge> <teero777> Like you can do in vscode ctrl+p @
08:46 < bridge> <teero777> I'll look at it again
08:46 < ws-client> <ChillerDragon> oh 
08:46 < bridge> <teero777> Also mutlicursor
08:46 < ws-client> <ChillerDragon> that i have too
08:47 < ws-client> <ChillerDragon> ctrl+p @ lists all hmm i never use that i only do ctrl+click on a method call do see its definition and i can do the same in vim. 
08:47 < ws-client> <ChillerDragon> ``Plug 'ctrlpvim/ctrlp.vim'``
08:48 < ws-client> <ChillerDragon> ah wait no thats something else xd
08:48 < ws-client> <ChillerDragon> ``Plug 'mg979/vim-visual-multi', {'branch': 'master'}``
08:49 < ws-client> <ChillerDragon> with a bit of config because i am arrow key enjoyer i could make this one work almost like in vscode https://github.com/mg979/vim-visual-multi
09:53 < bridge> <Jupstar ‚ú™> Chiller
09:53 < bridge> <Jupstar ‚ú™> Your PR looks wrong
09:54 < bridge> <Jupstar ‚ú™> What u want is to check it against 0 maybe. But relative mouse can have the same relative change
09:55 < bridge> <Jupstar ‚ú™> Or is the function returning the current mouse position?
09:55 < bridge> <Jupstar ‚ú™> Then rename the function lmao
10:02 < bridge> <ryozuki> morning after gym
10:36 < bridge> <Ewan> morning
11:15 < bridge> <chillerdragon> Oh yes I think you are right
13:28 < bridge> <melo∆û> I can Pick Up my PC parts After Work <a:AFhyper:1142894734428352553> <a:AFhyper:1142894734428352553> <a:AFhyper:1142894734428352553>
13:28 < bridge> <diariesvexar> gz
13:35 < bridge> <reitw> Damn
13:36 < bridge> <reitw> U can play tarkov then
13:36 < bridge> <melo∆û> Oh Shit you're right
13:36 < bridge> <melo∆û> My god i have so many Games to play
13:36 < bridge> <reitw> U need windows with it :ReiTroll:
13:36 < bridge> <melo∆û> *still plays teeworlds for 10h every day*
13:36 < bridge> <reitw> U need windows for it :ReiTroll:
13:36 < bridge> <melo∆û> :OHNOOOO:
13:39 < bridge> <reitw> Wanted to sleep at work but have to do stuff in the datacenter, rip
13:39 < bridge> <reitw> 2 hours of noises :KEKSad:
13:51 < ws-client> <ChillerDragon> There is no way to show fps in the editor is there? If there was a big performance regression how would we even notice?
13:52 < bridge> <patiga> hm I never had a look, but does the Steam fps counter match the DDNet fps counter?
14:01 < bridge> <robyt3> ChillerDragon: debug mode shows FPS, and the debug graphs show them in more detail (though both also influence FPS by being rendered)
14:06 < bridge> <milkeeycat> https://github.com/ddnet/ddnet/blob/d0f3f802e22a2a6a29ab590db46cb8bdcd83db1b/src/engine/client/client.cpp#L4286 why does 2nd param use std::move and 1st doesnt. `SetLoggers` takes 2 `std::shared_ptr<ILogger>&&` :\
14:06 < bridge> <milkeeycat> https://github.com/ddnet/ddnet/blob/d0f3f802e22a2a6a29ab590db46cb8bdcd83db1b/src/engine/client/client.cpp#L4286 why does 2nd param use `std::move` and 1st doesnt. `SetLoggers` takes 2 `std::shared_ptr<ILogger>&&` :\
14:10 < bridge> <Jupstar ‚ú™> Besides the update rate it should match. And probably they use different averages ^^
14:15 < bridge> <heinrich5991> @milkeeycat because the first pointer should be copied
14:16 < bridge> <patiga> multiply fps counter in ddnet by 5 for a better impression, ||I did that before it was cool :happy:||
15:45 < bridge> <ryozuki> https://blog.rust-lang.org/2024/02/08/Rust-1.76.0.html
15:45 < bridge> <ryozuki> @heinrich5991 @jupeyy_keks
16:05 < bridge> <Jupstar ‚ú™> Ah yeah, i remember that
16:07 < bridge> <Jupstar ‚ú™> Nothing for me, but thx for sharing
17:01 < bridge> <ryozuki> ye tame release
17:01 < bridge> <ryozuki> wonder when 2024 edition
17:19 < bridge> <teero777> btw whats up with the default language? XD
17:19 < bridge> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1205186120212549674/image.png?ex=65d7740a&is=65c4ff0a&hm=d7ae2cd88c2f8d6d6ed0970532ce6146ba1145a8a919189f941f425b33736b04&
17:31 < bridge> <Jupstar ‚ú™> i think that's the taiwan cryers
17:31 < bridge> <Jupstar ‚ú™> the chinese cry that taiwan is no country
17:31 < bridge> <Jupstar ‚ú™> and make negative review on steam
17:31 < bridge> <Jupstar ‚ú™> such fuckers :lol:
17:33 < bridge> <teero777> xDDDDD
18:44 < bridge> <milkeeycat> https://github.com/ddnet/ddnet/blob/7dc446e08679795f97aebbec257c3853cd9b1e30/src/engine/client/serverbrowser_http.cpp#L348 what should happen here if `m_pGetServers->State()` is `EHttpState::ERROR`?
18:52 < bridge> <learath2> I guess Success should start out as pGetServers->State() != ERROR and never call ResultJson if !Success
18:53 < bridge> <learath2> I guess Success should start out as `pGetServers->State() != ERROR` and never call `ResultJson` if `!Success`
18:53 < bridge> <robyt3> I'd say that condition should be `if(!m_pGetServers->Done())` (which is technically still the same condition) and `ResultJson` should only be called when `pGetServers->State() == EHttpState::DONE`. We still need the fallback code at the end if the task has failed.
19:29 < bridge> <chairn> right now im in hardware security against side channel attacks and fault injection attacks
19:48 < bridge> <melo∆û> guys i need help
19:48 < bridge> <melo∆û> how tf does windows work
19:49 < bridge> <bts._.> no.
19:49 < bridge> <milkeeycat> idk, i use linux btw
19:49 < bridge> <melo∆û> forced to use windows for work
19:49 < bridge> <melo∆û> what do i do
19:50 < bridge> <Jupstar ‚ú™> install virus and tell your employer: "wouldnt have happened with linux"
19:50 < bridge> <melo∆û> good idea
19:56 < bridge> <melo∆û> that should be enough for now
19:56 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1205225707157065738/up_and_running.png?ex=65d798e8&is=65c523e8&hm=1cc26bcd5cbb6c90ddd8b2b386e2274c63026d847bf9920d35a682860b1bfc60&
19:56 < bridge> <melo∆û> time to play teeeworlds with 6K fps
19:57 < bridge> <kekomonter> Bad work
20:45 < bridge> <matodor> https://github.com/microsoft/PowerToys
20:45 < bridge> <matodor> https://github.com/veler/DevToys
21:10 < bridge> <chillerdragon> Ah nice thanks
23:02 < bridge> <melo∆û> windows is fun
23:02 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1205272450179403916/unknown_2024.02.08-22.59_1.gif?ex=65d7c471&is=65c54f71&hm=29718b9b58b3baa940e5ec2513522f86b3fa47f726bc98139d492e04f8214a2c&
23:03 < bridge> <melo∆û> i want my `sudo apt-get install mariadb libmariadbclient-dev` back
23:07 < bridge> <milkeeycat> Ping me when someone fix dis
23:12 < bridge> <melo∆û> so my IDE figured that msvc build tools are required, and told me to install them, so you'd assume they set that as default, well, mingw it is - windows man
23:12 < bridge> <melo∆û> so my IDE figured that msvc build tools are required, and told me to install them, so you'd assume they set that as the default toolchain, well, mingw it is - windows man
