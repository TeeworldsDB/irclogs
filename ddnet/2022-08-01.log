01:02 <+bridge> [ddnet] <Chairn> why does it take so freeaking long to link with mingw
01:02 <+bridge> [ddnet] <Chairn> 45 seconds for the client...
01:15 <+bridge> [ddnet] <deen> LTO?
01:27 <+bridge> [ddnet] <Chairn> ```bash
01:27 <+bridge> [ddnet] <Chairn> $ time C:/MinGW64/bin/ar.exe cr CMakeFiles/DDNet.dir/objects.a @CMakeFiles/DDNet.dir/objects1.rsp
01:27 <+bridge> [ddnet] <Chairn> 
01:27 <+bridge> [ddnet] <Chairn> real    0m12,465s
01:27 <+bridge> [ddnet] <Chairn> user    0m0,000s
01:27 <+bridge> [ddnet] <Chairn> sys     0m0,031s
01:27 <+bridge> [ddnet] <Chairn> 
01:27 <+bridge> [ddnet] <Chairn> $ time C:/MinGW64/bin/g++.exe -fdiagnostics-color=always -Werror=class-memaccess -g  -mwindows -Wl,--whole-archive CMakeFiles/DDNet.dir/objects.a -Wl,--no-whole-archive  -o DDNet.exe -Wl,--out-implib,libDDNet.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles/DDNet.dir/linklibs.rsp
01:27 <+bridge> [ddnet] <Chairn> 
01:27 <+bridge> [ddnet] <Chairn> real    0m32,080s
01:27 <+bridge> [ddnet] <Chairn> user    0m0,000s
01:27 <+bridge> [ddnet] <Chairn> sys     0m0,031s
01:27 <+bridge> [ddnet] <Chairn> ```
01:27 <+bridge> [ddnet] <Chairn> i don't see any lto flag in there, just slow linking
01:28 <+bridge> [ddnet] <Chairn> meanwhile, the server takes only 3 seconds:
01:28 <+bridge> [ddnet] <Chairn> ```bash
01:29 <+bridge> [ddnet] <Chairn> $ time C:\MinGW64\bin\ar.exe cr CMakeFiles\DDNet-Server.dir/objects.a @CMakeFiles\DDNet-Server.dir\objects1.rsp
01:29 <+bridge> [ddnet] <Chairn> time C:/MinGW64/bin/ar.exe cr CMakeFiles/DDNet-Server.dir/objects.a @CMakeFiles/DDNet-Server.dir/objects1.rsp
01:29 <+bridge> [ddnet] <Chairn> 
01:29 <+bridge> [ddnet] <Chairn> real    0m0,723s
01:29 <+bridge> [ddnet] <Chairn> user    0m0,000s
01:29 <+bridge> [ddnet] <Chairn> sys     0m0,015s
01:29 <+bridge> [ddnet] <Chairn> 
01:29 <+bridge> [ddnet] <Chairn> $ time C:\MinGW64\bin\g++.exe -fdiagnostics-color=always -Werror=class-memaccess -g   -Wl,--whole-archive CMakeFiles\DDNet-Server.dir/objects.a -Wl,--no-whole-archive  -o DDNet-Server.exe -Wl,--out-implib,libDDNet-Server.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\DDNet-Server.dir\linklibs.rsp
01:29 <+bridge> [ddnet] <Chairn> time C:/MinGW64/bin/g++.exe -fdiagnostics-color=always -Werror=class-memaccess -g   -Wl,--whole-archive CMakeFiles/DDNet-Server.dir/objects.a -Wl,--no-whole-archive  -o DDNet-Server.exe -Wl,--out-implib,libDDNet-Server.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles/DDNet-Server.dir/linklibs.rsp
01:29 <+bridge> [ddnet] <Chairn> 
01:29 <+bridge> [ddnet] <Chairn> real    0m2,804s
01:29 <+bridge> [ddnet] <Chairn> user    0m0,000s
01:29 <+bridge> [ddnet] <Chairn> sys     0m0,015s
01:29 <+bridge> [ddnet] <Chairn> ```
01:29 <+bridge> [ddnet] <Chairn> meanwhile, the server takes only 3 seconds:
01:29 <+bridge> [ddnet] <Chairn> ```bash
01:29 <+bridge> [ddnet] <Chairn> $ time C:/MinGW64/bin/ar.exe cr CMakeFiles/DDNet-Server.dir/objects.a @CMakeFiles/DDNet-Server.dir/objects1.rsp
01:29 <+bridge> [ddnet] <Chairn> 
01:29 <+bridge> [ddnet] <Chairn> real    0m0,723s
01:29 <+bridge> [ddnet] <Chairn> user    0m0,000s
01:29 <+bridge> [ddnet] <Chairn> sys     0m0,015s
01:29 <+bridge> [ddnet] <Chairn> 
01:29 <+bridge> [ddnet] <Chairn> $ time C:\MinGW64\bin\g++.exe -fdiagnostics-color=always -Werror=class-memaccess -g   -Wl,--whole-archive CMakeFiles\DDNet-Server.dir/objects.a -Wl,--no-whole-archive  -o DDNet-Server.exe -Wl,--out-implib,libDDNet-Server.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\DDNet-Server.dir\linklibs.rsp
01:29 <+bridge> [ddnet] <Chairn> time C:/MinGW64/bin/g++.exe -fdiagnostics-color=always -Werror=class-memaccess -g   -Wl,--whole-archive CMakeFiles/DDNet-Server.dir/objects.a -Wl,--no-whole-archive  -o DDNet-Server.exe -Wl,--out-implib,libDDNet-Server.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles/DDNet-Server.dir/linklibs.rsp
01:29 <+bridge> [ddnet] <Chairn> 
01:29 <+bridge> [ddnet] <Chairn> real    0m2,804s
01:29 <+bridge> [ddnet] <Chairn> user    0m0,000s
01:30 <+bridge> [ddnet] <Chairn> sys     0m0,015s
01:30 <+bridge> [ddnet] <Chairn> ```
01:30 <+bridge> [ddnet] <Chairn> meanwhile, the server takes only 3 seconds:
01:30 <+bridge> [ddnet] <Chairn> ```bash
01:30 <+bridge> [ddnet] <Chairn> $ time C:/MinGW64/bin/ar.exe cr CMakeFiles/DDNet-Server.dir/objects.a @CMakeFiles/DDNet-Server.dir/objects1.rsp
01:30 <+bridge> [ddnet] <Chairn> 
01:30 <+bridge> [ddnet] <Chairn> real    0m0,723s
01:30 <+bridge> [ddnet] <Chairn> user    0m0,000s
01:30 <+bridge> [ddnet] <Chairn> sys     0m0,015s
01:30 <+bridge> [ddnet] <Chairn> 
01:30 <+bridge> [ddnet] <Chairn> $ time C:\MinGW64\bin\g++.exe -fdiagnostics-color=always -Werror=class-memaccess -g   -Wl,--whole-archive CMakeFiles\DDNet-Server.dir/objects.a -Wl,--no-whole-archive  -o DDNet-Server.exe -Wl,--out-implib,libDDNet-Server.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\DDNet-Server.dir\linklibs.rsp
01:30 <+bridge> [ddnet] <Chairn> 
01:30 <+bridge> [ddnet] <Chairn> real    0m2,804s
01:30 <+bridge> [ddnet] <Chairn> user    0m0,000s
01:30 <+bridge> [ddnet] <Chairn> sys     0m0,015s
01:30 <+bridge> [ddnet] <Chairn> ```
01:31 <+bridge> [ddnet] <Chairn> hmm, one more flag in the client compile line: `-mwindows`
01:33 <+bridge> [ddnet] <Chairn> doesn't change anything with or without it
01:37 <+bridge> [ddnet] <Chairn> meanwhile, the server takes only 3 seconds:
01:37 <+bridge> [ddnet] <Chairn> ```bash
01:37 <+bridge> [ddnet] <Chairn> $ time C:/MinGW64/bin/ar.exe cr CMakeFiles/DDNet-Server.dir/objects.a @CMakeFiles/DDNet-Server.dir/objects1.rsp
01:37 <+bridge> [ddnet] <Chairn> 
01:37 <+bridge> [ddnet] <Chairn> real    0m0,723s
01:37 <+bridge> [ddnet] <Chairn> user    0m0,000s
01:37 <+bridge> [ddnet] <Chairn> sys     0m0,015s
01:37 <+bridge> [ddnet] <Chairn> 
01:37 <+bridge> [ddnet] <Chairn> $ time C:/MinGW64/bin/g++.exe -fdiagnostics-color=always -Werror=class-memaccess -g   -Wl,--whole-archive CMakeFiles/DDNet-Server.dir/objects.a -Wl,--no-whole-archive  -o DDNet-Server.exe -Wl,--out-implib,libDDNet-Server.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles/DDNet-Server.dir/linklibs.rsp
01:37 <+bridge> [ddnet] <Chairn> 
01:37 <+bridge> [ddnet] <Chairn> real    0m2,804s
01:37 <+bridge> [ddnet] <Chairn> user    0m0,000s
01:37 <+bridge> [ddnet] <Chairn> sys     0m0,015s
01:37 <+bridge> [ddnet] <Chairn> ```
09:28 <+bridge> [ddnet] <Voxel> i love reading code that i know nothing about! (not even joking, im starting to dive deeper into these prs and stuff)
09:32 <+bridge> [ddnet] <Chairn> too bad i don't do anything "useful" from the user point of view
09:33 <+bridge> [ddnet] <Chairn> i'd like to implement lazy loading when i have enough free time
09:45 <+bridge> [ddnet] <Voxel> i mean i get that, but thats the charm of it, you get to study what actually goes on under the hood and what precautions are needed
09:45 <+bridge> [ddnet] <Voxel> even if im unaware of any of it it's really interesting now
11:06 <+ChillerDragon> yikes i burned another SSD :( does anyone of you ever made linux chill the writes to the ssd? So it lifes longer?
12:21 <+bridge> [ddnet] <Cellegen | RiH> :pepedead:
12:22 <+bridge> [ddnet] <Cellegen | RiH> typical chillerdragon ddosing his ssd
12:22 <+bridge> [ddnet] <Cellegen | RiH> xd
12:22 <+bridge> [ddnet] <Cellegen | RiH> typical chillerdragon dosing his ssd
13:09 <+bridge> [ddnet] <deen> Huh, all my SSDs are still alive. I have the problem of having some 128 GB SSDs in each system now and they are taking more physical space than the disk space is worth 😄
13:10 <+bridge> [ddnet] <deen> ChillerDragon: What is writing to them? I once did it on OpenBSD, because on CF card writing is really bad, no wear-levelling. So I mounted the file system read-only and put writable stuff into ramdisk
13:10 <+bridge> [ddnet] <deen> worked well, just remounted with write for software upgrades
13:14 <+bridge> [ddnet] <deen> Maybe monitor what is writing to disk so much using iotop
13:16 <+bridge> [ddnet] <deen> My Samsung SSD SM951-NVMe still runs fine, has 75 TBW expected life, 92 TBW actual, no problems yet
13:17 <+bridge> [ddnet] <deen> (after 6 years)
13:20 <+bridge> [ddnet] <deen> The one where I build DDNet nightly (Crucial BX100) runs fine after 7 years too, 23/72 TBW currently
13:48 <+bridge> [ddnet] <ReiTW> OpenBSD is damn fucking awesome
14:05 <+ChillerDragon> @deen its just the ppl in the hardware store tell me every year i show up with a new dead SSD that linux is to blame since it writes too much to the disk and then they die at some point cuz ssd short lifespan
14:05 <+ChillerDragon> i couldnt find much online saying run this command to not break your ssd :D 
14:05 <+ChillerDragon> only this trimming thing
14:46 <+bridge> [ddnet] <Learath2> I’m not aware of linux doing more writes than windows or macOS. I’d say the hardware store people just don’t know what they are talking about
14:50 <+bridge> [ddnet] <Jupstar> How about u just don't tell them what u using xd
14:51 <+bridge> [ddnet] <Ryozuki> What ssd u get
14:52 <+bridge> [ddnet] <Ryozuki> Maybe get a higher qual
15:35 <+bridge> [ddnet] <deen> i can imagine swap, /tmp and logs being a lot, but monitoring that for a few days and also how many tbw you get in that time should help
15:37 <+bridge> [ddnet] <chillerdragon> Yea I really should check my writes from time to time. The disk that died now is a SanDisk. Not sure how dead it is. Dead enough to freeze my os and now I can’t even mount it anymore
15:38 <+bridge> [ddnet] <chillerdragon> BbbbutI USE ARCH BTW
15:38 <+bridge> [ddnet] <chillerdragon> (@Not Keks)
15:39 <+bridge> [ddnet] <chillerdragon> That guy knew dd, testdisk and ext4 I kinda trust him \:D but yea maybe he just talked crap
15:47 <+bridge> [ddnet] <RafaelFF> https://www.cvedetails.com/cve-details.php?cve_id=CVE-2021-43518
15:47 <+bridge> [ddnet] <RafaelFF> 
15:47 <+bridge> [ddnet] <RafaelFF> The above vulnerability applies to Teeworlds. Does this apply to DDNet somehow?
15:47 <+bridge> [ddnet] <RafaelFF> I see this patch for FreeBSD Teeworlds package (https://lists.freebsd.org/archives/dev-commits-ports-main/2022-March/016758.html) but I haven't found similar variables like m_Channels
15:49 <+bridge> [ddnet] <RafaelFF> https://github.com/teeworlds/teeworlds/issues/2981
16:30 <+bridge> [ddnet] <bubliman> hi,
16:30 <+bridge> [ddnet] <bubliman> anyone knows matrices and trigonometry here? I need some help around the render.cpp, I have a few questions about DrawCircle.
16:43 <+ChillerDragon> wew when reinstalling my os somehow i ended up with some cheap vscode ripoff :D 
16:43 <+ChillerDragon> the colors are so low in contrast omagawd its the same theme as my laptop but its barley readable
16:44 <+ChillerDragon> any good vscode theme recommendations? :) 
16:45 <+bridge> [ddnet] <bubliman> was thinking of using vscode is it any good for c++?
16:46 <+bridge> [ddnet] <Ryozuki> Has any of you ever used Coq to formally verify code you wrote?
16:47 <+bridge> [ddnet] <Ryozuki> https://coq.inria.fr/
16:47 <+bridge> [ddnet] <Ryozuki> https://dylanj.xyz/posts/rust-coq-opaque-types/
16:48 <+bridge> [ddnet] <deen> No, looks like our env points are a bit different
16:48 <+bridge> [ddnet] <k2d222> a while ago
16:48 <+ChillerDragon> @bubliman ye its good for c++
16:48 <+ChillerDragon> imo easier to properly configure for c++ than vim
16:49 <+ChillerDragon> install c++ extension and you done
16:49 <+ChillerDragon> i might just need a new screen
16:49 <+bridge> [ddnet] <bubliman> ok will give it a shot
16:49 <+ChillerDragon> what are you using right now?
16:50 <+bridge> [ddnet] <bubliman> qtCreator and Kdevelop
16:50 <+ChillerDragon> never tried kdevelop
16:50 <+ChillerDragon> looks like a full blown IDE
16:50 <+ChillerDragon> i prefer editors that spin up without any waiting time
16:53 <+bridge> [ddnet] <bubliman> I started with c++ yesterday, it pretty hard to get a project started and compiled ngl
16:53 <+ChillerDragon> ye
16:53 <+bridge> [ddnet] <bubliman> I started with c++ yesterday, it was pretty hard to get a project started and compiled ngl
16:53 <+ChillerDragon> thats c++ tho
16:53 <+bridge> [ddnet] <Ryozuki> Hmm
16:53 <+bridge> [ddnet] <Ryozuki> gcc file.cpp
16:53 <+bridge> [ddnet] <Ryozuki> Ez
16:54 <+ChillerDragon> duh
16:54 <+ChillerDragon> thats c :p
16:54 <+ChillerDragon> and not a project
16:54 <+bridge> [ddnet] <Ryozuki> ./a.out
16:54 <+bridge> [ddnet] <bubliman> concerning my previous question, should i go ask somewhere else?
16:54 <+ChillerDragon> wait till maffs man heinrich is here
16:54 <+bridge> [ddnet] <Ryozuki> Use vscode
16:54 <+bridge> [ddnet] <Ryozuki> Ngl
16:54 <+bridge> [ddnet] <Ryozuki> Better
16:54 <+ChillerDragon> or jupstar the render engine
16:55 <+bridge> [ddnet] <Ryozuki> Im rusty but just ask
16:55 <+bridge> [ddnet] <Ryozuki> Dont ask to ask
16:55 <+ChillerDragon> i use vscode to start a terminal in it and then use emacs within that terminal to spawn a vim instance
16:55 <+bridge> [ddnet] <Ryozuki> https://dontasktoask.com/
16:55 <+bridge> [ddnet] <bubliman> lmao ok
16:55 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1003677456089239703/unknown.png
16:55 <+bridge> [ddnet] <Ryozuki> kek
16:55 <+bridge> [ddnet] <Ryozuki> this website is so true
16:56 <+bridge> [ddnet] <bubliman> well might be me one sec i need to put my thoughts together
17:01 <+ChillerDragon> wot
17:01 <+ChillerDragon> first i thought my old screen just loses colors
17:01 <+ChillerDragon> but screenshots should not be affected by matt screens right?
17:01 <+ChillerDragon> https://zillyhuhn.com/cs/.1659365785.png
17:02 <+ChillerDragon> https://zillyhuhn.com/cs/.1659365851.png
17:02 <+ChillerDragon> there is clearly a difference but its the same theme. How can that be :c
17:04 <+bridge> [ddnet] <deen> Different scaling on the screens based on different dpis
17:04 <+ChillerDragon> yea scaling
17:04 <+bridge> [ddnet] <deen> And you can also have different subpixel orientations on screens
17:04 <+ChillerDragon> but one is visibly brihter
17:04 <+bridge> [ddnet] <deen> rgb vs bgr for example
17:04 <+bridge> [ddnet] <deen> brighter because the text is thicker probably
17:04 <+ChillerDragon> its thinner
17:04 <+ChillerDragon> look at the screens
17:05 <+ChillerDragon> im getting bamboozeld here
17:05 <+ChillerDragon> maybe its the oss code vs the m$ code :D 
17:05 <+bridge> [ddnet] <deen> those are totally different fonts even
17:05 <+ChillerDragon> maybe its a font issue
17:05 <+ChillerDragon> but i feel like it could be solved only with colors
17:05 <+ChillerDragon> it looks a bit greyed out
17:12 <+bridge> [ddnet] <deen> Your background is grey, so antialiasing will mix gray with the foreground color
17:13 <+bridge> [ddnet] <bubliman> So concerning this `DrawCircle`,
17:13 <+bridge> [ddnet] <bubliman> 
17:13 <+bridge> [ddnet] <bubliman> my guess at what its doing is that it draws a number (Segments/2) of triangles and rotates them around the centre to draw a circle,
17:13 <+bridge> [ddnet] <bubliman> the for loop is i += 2, because because each triangle puts two points into the circumference
17:13 <+bridge> [ddnet] <bubliman> the rotation of the triangle is achieved by cos and sin using a rotation matrix
17:13 <+bridge> [ddnet] <bubliman> is this correct? 
17:13 <+bridge> [ddnet] <bubliman> 
17:13 <+bridge> [ddnet] <bubliman> i dont really understand what the a1, a2, a3 resemble, what formula is used to calculate them and why would FSegments be doubled?
17:13 <+bridge> [ddnet] <bubliman> 
17:13 <+bridge> [ddnet] <bubliman> thanks for help
17:13 <+bridge> [ddnet] <bubliman> 
17:13 <+bridge> [ddnet] <bubliman> here is the code for DrawCircle:
17:13 <+bridge> [ddnet] <bubliman> `void CRenderTools::DrawCircle(float x, float y, float r, int Segments)
17:13 <+bridge> [ddnet] <bubliman> {
17:13 <+bridge> [ddnet] <bubliman>     IGraphics::CFreeformItem Array[32];
17:13 <+bridge> [ddnet] <bubliman>     int NumItems = 0;
17:14 <+bridge> [ddnet] <bubliman>     float FSegments = (float)Segments;
17:14 <+bridge> [ddnet] <bubliman>     for(int i = 0; i < Segments; i += 2)
17:14 <+bridge> [ddnet] <bubliman>     {
17:14 <+bridge> [ddnet] <bubliman>         float a1 = i / FSegments * 2 * pi;
17:14 <+bridge> [ddnet] <bubliman>         float a2 = (i + 1) / FSegments * 2 * pi;
17:14 <+bridge> [ddnet] <bubliman>         float a3 = (i + 2) / FSegments * 2 * pi;
17:14 <+bridge> [ddnet] <bubliman>         float Ca1 = cosf(a1);
17:14 <+bridge> [ddnet] <bubliman>         float Ca2 = cosf(a2);
17:14 <+bridge> [ddnet] <bubliman>         float Ca3 = cosf(a3);
17:14 <+bridge> [ddnet] <bubliman>         float Sa1 = sinf(a1);
17:14 <+bridge> [ddnet] <bubliman>         float Sa2 = sinf(a2);
17:14 <+bridge> [ddnet] <bubliman>         float Sa3 = sinf(a3);
17:14 <+bridge> [ddnet] <bubliman> 
17:14 <+bridge> [ddnet] <bubliman>         Array[NumItems++] = IGraphics::CFreeformItem(
17:14 <+bridge> [ddnet] <bubliman>             x, y,
17:15 <+bridge> [ddnet] <k2d222> ChillerDragon: You can tweak some font settings including aliasing and dpi scaling in `gnome-tweaks-tools`, although I don't think that applies to electron apps
17:19 <+bridge> [ddnet] <deen> @bubliman To me it looks like the circle is being split into 32 segments. a1, a2, a3 are the points on the edge of the circle, while (x, y) is always the center. 2 * pi is commonly used in circle calculations, like area = 2 * pi * r
17:21 <+bridge> [ddnet] <Robyt3> a1, a2, a3 are the angles of the circle segments in radians, hence they are in the range [0;2*pi[
17:21 <+bridge> [ddnet] <trml> it seems like it actually draws Segments/2 primitives
17:22 <+bridge> [ddnet] <bubliman> so a segment is a triangle?
17:23 <+bridge> [ddnet] <Robyt3> no, they seem to be quads
17:23 <+bridge> [ddnet] <deen> I think I found a youtube tutorial to explain the algo 😄 https://www.youtube.com/watch?v=YDCSKlFqpaU Source code is similar to TW emthod too: https://github.com/SonarSystems/OpenGL-Tutorials/blob/master/Drawing%20A%20Circle%20Using%20A%20Triangle%20Fan/main.cpp
17:23 <+bridge> [ddnet] <Robyt3> with one point in the center and the other three on the circles radius
17:23 <+bridge> [ddnet] <deen> (with triangle instead of quads)
17:28 <+bridge> [ddnet] <bubliman> Well I watched the video before and didn't notice any similarities. I'll have a look at the source. So this circle isn't using any form of a matrix? I thought the array is a matrix... Is it just a one dimensional array ?
17:29 <+bridge> [ddnet] <deen> the array is just each quad
17:29 <+bridge> [ddnet] <Robyt3> the array is just for storing the quads because it more efficient than calling the graphics API for each individual quad
17:31 <+bridge> [ddnet] <Jupstar> they are also more like freeform quads, not what u excpect, they just share 1 point in the mid, so basically 2 triangles
17:34 <+bridge> [ddnet] <Jupstar> depends
17:35 <+bridge> [ddnet] <Jupstar> well i think i explained it somewhere before cant find rn
17:35 <+bridge> [ddnet] <Jupstar> but we could do smth different
17:35 <+bridge> [ddnet] <Jupstar> blur edges.. if there is a transition to transparent is almost like anti aliasing
17:36 <+bridge> [ddnet] <Jupstar> ok not blur, more like a transition xd
17:36 <+bridge> [ddnet] <Jupstar> that's defs cheaper than having multiple renderpasses
17:37 <+bridge> [ddnet] <Robyt3> like a shader for corners?
17:37 <+bridge> [ddnet] <Jupstar> yeah i guess u could say that
17:38 <+bridge> [ddnet] <bubliman> well that explains a lot 😄
17:40 <+bridge> [ddnet] <bubliman> anyways, thank you guys @Not Keks @deen @Robyt3 ! I was clearly lost... 😵‍💫  I need some time to process all of this info
17:58 <+ChillerDragon> LMAO
17:58 <+ChillerDragon> these automated mails xd
17:58 <+ChillerDragon> https://zillyhuhn.com/cs/.1659369523.png
17:59 <+ChillerDragon> im sure this guy is really curious about code reuse in that teeworlds .demo file :D
18:01 <+bridge> [ddnet] <bubliman> What is the difference between `void CGraphics_Threaded::LinesEnd()` and `void CGraphics_Threaded::LinesBegin()`?
18:01 <+bridge> [ddnet] <bubliman> and this `void CGraphics_Threaded::LinesBegin()`
18:02 <+bridge> [ddnet] <bubliman> What is the difference between `void CGraphics_Threaded::LinesEnd()` , `void CGraphics_Threaded::LinesBegin()`
18:02 <+bridge> [ddnet] <bubliman> and `void CGraphics_Threaded::LinesBegin()`?
18:02 <+bridge> [ddnet] <Jupstar> its basically batching
18:02 <+bridge> [ddnet] <bubliman> and `void CGraphics_Threaded::LinesDraw(const CLineItem *pArray, int Num)`?
18:03 <+bridge> [ddnet] <Jupstar> begin = start collecting lines
18:03 <+bridge> [ddnet] <Jupstar> end = stop and draw
18:03 <+bridge> [ddnet] <Jupstar> and linesdraw adds them to the batch
18:04 <+bridge> [ddnet] <bubliman> is it for better performace to batch multiple lines together?
18:04 <+bridge> [ddnet] <Jupstar> theoretically xd
18:04 <+bridge> [ddnet] <Jupstar> i mean we never really draw lots of lines
18:04 <+bridge> [ddnet] <Jupstar> i think only debug hud, maybe hook coll line, if it doesnt use quads nowadays
18:05 <+bridge> [ddnet] <bubliman> well im about to 😄
18:05 <+bridge> [ddnet] <Jupstar> with vulkan it probs makes almost no difference
18:06 <+bridge> [ddnet] <Jupstar> GPUs are really good in accepting multiple draw calls if no state is changing, e.g. pipelines etc.
18:06 <+bridge> [ddnet] <Jupstar> 
18:06 <+bridge> [ddnet] <Jupstar> and vulkan puts all streamed data into one single block of memory
18:06 <+bridge> [ddnet] <Jupstar> little less CPU overhead tho with batching
18:06 <+bridge> [ddnet] <Jupstar> but best is you dont use the legacy API
18:07 <+bridge> [ddnet] <Jupstar> try to build all lines once, never change them if possible
18:07 <+bridge> [ddnet] <Jupstar> if u need rotation, add it to a shader instead
18:07 <+bridge> [ddnet] <bubliman> is that what hook col does?
18:07 <+bridge> [ddnet] <Jupstar> nope it uses legacy API, i dont think he have smth else for lines
18:14 <+bridge> [ddnet] <bubliman> `if(NumItems == 32)
18:14 <+bridge> [ddnet] <bubliman>         {
18:14 <+bridge> [ddnet] <bubliman>             Graphics()->QuadsDrawFreeform(Array, 32);
18:14 <+bridge> [ddnet] <bubliman>             NumItems = 0;
18:14 <+bridge> [ddnet] <bubliman>         }
18:14 <+bridge> [ddnet] <bubliman>     }
18:14 <+bridge> [ddnet] <bubliman>     if(NumItems)
18:14 <+bridge> [ddnet] <bubliman>         Graphics()->QuadsDrawFreeform(Array, NumItems);`
18:14 <+bridge> [ddnet] <bubliman> how is there an if statement with no condition?
18:14 <+bridge> [ddnet] <Jupstar> implicit bool conversion
18:16 <+bridge> [ddnet] <Jupstar> but u can always write the statement out, its generally easier to read imo
18:16 <+bridge> [ddnet] <Jupstar> but if u lazy af i accept that xd
18:18 <+bridge> [ddnet] <Jupstar> also theoretically, even if not happening here, NumItems could be negative, which might not be intended, but at this point u probs have some unwanted state anyway ^^
18:20 <+bridge> [ddnet] <bubliman> ` if(NumItems != NULL)` is that the readable version then?
18:21 <+bridge> [ddnet] <Jupstar> null is usually used for ptrs
18:21 <+bridge> [ddnet] <Jupstar> also NULL is a c macro and considered legacy
18:21 <+bridge> [ddnet] <Jupstar> nullptr is c++11 version
18:22 <+bridge> [ddnet] <Jupstar> just != 0
18:22 <+bridge> [ddnet] <Jupstar> or > 0 makes more sene
18:22 <+bridge> [ddnet] <Jupstar> or > 0 makes more sense
18:22 <+bridge> [ddnet] <Jupstar> readable and correct ^^
18:22 <+bridge> [ddnet] <bubliman> ok now i get it thx
18:22 <+bridge> [ddnet] <bubliman> and there are no {   } why is that?
18:38 <+bridge> [ddnet] <Jupstar> if u dont do it u dont open a new scope, but that only works until the next ; which ends the current statement
18:45 <+bridge> [ddnet] <bubliman> ok makes sence
18:55 <+bridge> [ddnet] <Epiphany> +1 shift select in editor crashes game
18:56 <+bridge> [ddnet] <Jupstar> try nightly
19:31 <+bridge> [ddnet] <ReiTW> lol since [] is an operator didn't know that was possible
19:31 <+bridge> [ddnet] <ReiTW> 
19:31 <+bridge> [ddnet] <ReiTW> ```cpp
19:31 <+bridge> [ddnet] <ReiTW> #include <iostream>
19:32 <+bridge> [ddnet] <ReiTW> 
19:32 <+bridge> [ddnet] <ReiTW> int main() {
19:32 <+bridge> [ddnet] <ReiTW>         int a[] = {10, 20, 30};
19:32 <+bridge> [ddnet] <ReiTW>         std::cout << 2[a] << std::endl;
19:32 <+bridge> [ddnet] <ReiTW> }
19:32 <+bridge> [ddnet] <ReiTW> ```
19:32 <+bridge> [ddnet] <k2d222> this is cursed af
19:35 <+bridge> [ddnet] <Learath2> This is because `a[b]` is just syntax sugar for `*(a + b)`
19:36 <+bridge> [ddnet] <ReiTW> yes as it is an operator
19:36 <+bridge> [ddnet] <ReiTW> but even 3 + a is kinda sus
20:01 <+bridge> [ddnet] <RoyalMello> how can i disable strong/weak hook on a server like KoG
20:06 <+bridge> [ddnet] <Jupstar> soon there will be a feature for it, probably next release
20:11 <+bridge> [ddnet] <RoyalMello> great
20:29 <+bridge> [ddnet] <bubliman> @ChillerDragon somewhat crisp circles ingame 🙂
20:29 <+bridge> [ddnet] <bubliman> https://cdn.discordapp.com/attachments/293493549758939136/1003731239141908510/unknown.png
20:51 <+bridge> [ddnet] <bubliman> So what is the verdict on this, could something like this be in the official ddnet client?
20:51 <+bridge> [ddnet] <bubliman> Should i ping ppl over this?
23:35 <+bridge> [ddnet] <deen> Is it useful? Seems like we could add it to aim line
23:36 <+bridge> [ddnet] <heinrich5991> @bubliman when can you hit someone? when they touch the circle?
23:36 <+bridge> [ddnet] <heinrich5991> I guess it can't be made skin-independent?
23:39 <+bridge> [ddnet] <bubliman> yes improves my aled chance by some amount
23:40 <+bridge> [ddnet] <bubliman> yes thats how it is the hammer range under this method is 42.0f
23:40 <+bridge> [ddnet] <louis> when the center of their tee touches?
23:40 <+bridge> [ddnet] <heinrich5991> but there are smaller and bigger skins
23:40 <+bridge> [ddnet] <heinrich5991> how could it work skin-independent?
23:41 <+bridge> [ddnet] <louis> i personally dont support these types of things (including hook collision)
23:41 <+bridge> [ddnet] <Chairn> skin size doesn't change hammer range
23:41 <+bridge> [ddnet] <louis> makes it feel less like a game and more like a planetary orbit determination program
23:41 <+bridge> [ddnet] <heinrich5991> but when the skin size changes whether the other tee touches your circle or not @Chairn
23:41 <+bridge> [ddnet] <bubliman> yeah not sure about that
23:41 <+bridge> [ddnet] <heinrich5991> hence my question ^^
23:41 <+bridge> [ddnet] <bubliman> could have a smaller circle rendered on every tee
23:42 <+bridge> [ddnet] <Chairn> hmm, doesn't the circle change color just like hookline?
23:42 <+bridge> [ddnet] <bubliman> when the circles colide then u are in hammer range
23:42 <+bridge> [ddnet] <bubliman> easily could be done
23:42 <+bridge> [ddnet] <heinrich5991> @Chairn that was in response to this question
23:42 <+bridge> [ddnet] <heinrich5991> plus this answer
23:43 <+bridge> [ddnet] <Skeith> that's obviously cheating :kek:
23:43 <+bridge> [ddnet] <bubliman> one sec lemme get screenshot
23:44 <+bridge> [ddnet] <bubliman> https://cdn.discordapp.com/attachments/293493549758939136/1003780314184818799/unknown.png
23:44 <+bridge> [ddnet] <louis> i mean not exactly
23:44 <+bridge> [ddnet] <louis> just pointless imo
23:45 <+bridge> [ddnet] <Skeith> Nah, it'll save your life on occasion, it's definitely an advantage. The curve shit he posted earlier
23:45 <+bridge> [ddnet] <louis> oh yeah thats sus
23:45 <+bridge> [ddnet] <bubliman> its rendered using a object i made DrawCircleOutline,
23:45 <+bridge> [ddnet] <louis> not the hammer thing tho
23:45 <+bridge> [ddnet] <Skeith> You can jump to abort whatever you're doing
23:45 <+bridge> [ddnet] <bubliman> we arent talking about that...
23:46 <+bridge> [ddnet] <Skeith> Yep, just giving my input, don't post that anymore :feelsamazingman:
23:46 <+bridge> [ddnet] <louis> well it looks cool
23:47 <+bridge> [ddnet] <Chairn> it looks cool but do we want to move to a fully "automated" (not the right term) client?
23:47 <+bridge> [ddnet] <Skeith> No lol
23:47 <+bridge> [ddnet] <Skeith> Enough cheats baked into the client as is
23:47 <+bridge> [ddnet] <Chairn> looks like extra HUD just like in the military 😄
23:47 <+bridge> [ddnet] <louis> i definitely dont want it, it just looks neat lol
23:48 <+bridge> [ddnet] <bubliman> how is this fully automated? i dont get it
23:50 <+bridge> [ddnet] <Skeith> An advantage is an advantage, I don't care how small
23:50 <+bridge> [ddnet] <louis> they were talking about the arc prediction thing
23:51 <+bridge> [ddnet] <bubliman> please can u just stop with that, i think its cheating too...
23:51 <+bridge> [ddnet] <Chairn> not the right term, but it just does the computation for you rather you think about it
23:52 <+bridge> [ddnet] <Chairn> hookline was primarily made, in my memory, to save tee with hook through corner from far away as it was a real pain in the ass to do without it
23:53 <+bridge> [ddnet] <bubliman> sure, isn't aled a pain in the ass too?
23:54 <+bridge> [ddnet] <Tater> I like the idea of showing the hammer range because as a new player is very hard to figure out how far it goes, the hammer is so big but the range is kinda small. But also I think it makes the game easier so idk
23:55 <+bridge> [ddnet] <Chairn> if you give people an advantage when starting the game, they'll want to keep it
23:55 <+bridge> [ddnet] <bubliman> should i make it playable for u guys, I don't think its a big advantage, if done right it could make the game more accesible imo
23:57 <+bridge> [ddnet] <bubliman> @heinrich5991 not sure how to deal with skin sizes, maybe change color when player enters it?
23:57 <+bridge> [ddnet] <Chairn> change color so that it's like hookline
23:58 <+bridge> [ddnet] <bubliman> red=nohit, yellow=teeinrange?
23:58 <+bridge> [ddnet] <Tater> I suppose you could actually get hammer range indicator without client modification if you change gun texture to display hammer range then use shoot hammer swap bind
23:58 <+bridge> [ddnet] <Chairn> nah, red is too intense color imo
23:59 <+bridge> [ddnet] <bubliman> xd but thats how the hookline is
23:59 <+bridge> [ddnet] <Chairn> but hookline is not on permanently
23:59 <+bridge> [ddnet] <Chairn> and red hooklines pisses me off 😄
