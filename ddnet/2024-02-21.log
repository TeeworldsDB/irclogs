00:31 < bridge> <Ewan> steamaudio is not just for vr
00:32 < bridge> <Ewan> it's for winning too
00:32 < bridge> <Ewan> ppl still using the nonportable cmake command syntax üò¥
00:33 < bridge> <heinrich5991> what syntax do you like better?
00:34 < bridge> <Ewan> `cmake . [-B build -G Ninja] && cmake --build [build] --parallel`
00:34 < bridge> <melo∆û> :justatest: i disagree
00:35 < bridge> <Ewan> doesn't make a lot of sense to go that way when cmake is capable of doing it itself imo
00:35 < bridge> <Ewan> especially when you can use the same syntax across any generator
00:35 < bridge> <Ewan> using a generator-specific build command defeats a lot of the purpose of having a unified tool like the cmake command
00:35 < bridge> <heinrich5991> sounds okay to me. you're unlikely to use something differnet than ninja on linux
00:36 < bridge> <Ewan> but why would you prefer it over the portable syntax
00:36 < bridge> <Ewan> i guess in a super closed environment it‚Äôs fine
00:37 < bridge> <Ewan> but still seems goofy
00:37 < bridge> <heinrich5991> because you know ninja and don't know cmake very well, for example?
00:37 < bridge> <heinrich5991> or because you want to pass ninja-specific options sometimes
00:37 < bridge> <Ewan> you should not be relying on generator specific behavior when using cmake
00:37 < bridge> <melo∆û> i dont know if i would describe a shell environment a "super closed environment"
00:38 < bridge> <heinrich5991> why not? üòÆ
00:38 < bridge> <melo∆û> but i explicity compile and build my projects using direnv paired with nix-shell's
00:38 < bridge> <Ewan> because it's intended to abstract the core parts of the compilation pipeline
00:38 < bridge> <Ewan> anything else is a hack
00:39 < bridge> <Ewan> you shouldn't ever be in a situation where you have to pass a ninja-specific build command when using it with cmake
00:39 < bridge> <Ewan> no i mean a system where you only ever use one build tool like ninja
00:39 < bridge> <heinrich5991> how do you print the dependency tree of the ddnet source code using cmake? ^^
00:39 < bridge> <Ewan> sometimes you want to cross compile and you can set CMAKE_MAKE_PROGRAM and use unix makefiles
00:40 < bridge> <heinrich5991> I don't think your argument makes a lot of sense
00:40 < bridge> <Ewan> that's not really cmake's intended use
00:40 < bridge> <Ewan> but you can do it using a cmake file
00:40 < bridge> <Ewan> most ppl would use git or tree or find or smth
00:40 < bridge> <Ewan> not the build tool
00:41 < bridge> <heinrich5991> if you want to use a specific feature of a cmake compilation target ("generator"), then it makes sense to use it
00:41 < bridge> <heinrich5991> why would you artificially restrict yourself to the lowest common denominator available through cmake?
00:41 < bridge> <Ewan> because it reinforces good practices when you're using cmake elsewhere
00:41 < bridge> <heinrich5991> if you personally don't want to learn anything but cmake, that's fine
00:41 < bridge> <heinrich5991> but maybe other people want to learn more than cmake
00:41 < bridge> <heinrich5991> I, for example
00:42 < bridge> <Ewan> then why would you use cmake if you're just gonna get raw with the build tool anyway
00:42 < bridge> <heinrich5991> because I can also use it to compile on windows
00:42 < bridge> <Ewan> so then you should use the portable cmake command
00:42 < bridge> <Ewan> to use the same command to compile on both windows and wherever you're using ninja
00:43 < bridge> <heinrich5991> I don't agree with your viewpoint at all
00:43 < bridge> <heinrich5991> I also compiled ddnet using MSVC natively
00:43 < bridge> <heinrich5991> without even touching the cmake command line
00:43 < bridge> <Ewan> sounds like a pain
00:43 < bridge> <aegisub> I like typing `ninja` when I just want to compile my project really quick without needing to think about whether it's cmake or meson :p
00:44 < bridge> <Ewan> maybe that's fine if you only use ninja
00:44 < bridge> <Ewan> obviously you can't use ninja to compile a cmake project generated using anything but ninja
00:44 < bridge> <heinrich5991> I only see @mpft telling others that they should use the tools the same way that @mpft does
00:44 < bridge> <Ewan> it's just the way that makes sense
00:44 < bridge> <heinrich5991> not for me, as I laid out
00:44 < bridge> <melo∆û> well thats not the point of using ninja anyway
00:44 < bridge> <heinrich5991> good night üôÇ
00:44 < bridge> <Ewan> it's just a newer way of doing things that's not as well known
00:44 < bridge> <Ewan> it's what the authors would advocate for
00:44 < bridge> <melo∆û> you're specifing ninja to explicity use ninja, it defaults to make
00:45 < bridge> <melo∆û> which is a good thing?
00:45 < bridge> <Ewan> i don't think i should feel bad for turning people on to a potentially cleaner way to do something
00:47 < bridge> <melo∆û> its not about making you feel bad, you have the general tendency to sound very "do it my way or i dont accept anything you say" anytime you disagree/have another way of doing something :P
00:47 < bridge> <melo∆û> its not about making you feel bad, you have the general tendency to sound very "do it my way or i dont accept anything you say" anytime you disagree with or have another way of doing something :P
00:47 < bridge> <peter44h> not all of cmake's features are even supported by all generators
00:47 < bridge> <Ewan> right
00:47 < bridge> <Ewan> so sometimes you have to use a hack
00:48 < bridge> <peter44h> it really is not important
00:48 < bridge> <Ewan> yeah
00:50 < bridge> <Ewan> i don't see this tbh
00:50 < bridge> <Ewan> i did say it was my opinion
00:57 < bridge> <chillerdragon> Jopsti new fps record?
01:04 < bridge> <chillerdragon> amd better than NVIDIA and intel wot?
01:34 < bridge> <melo∆û> :poggers2:
01:48 < bridge> <peter44h> I just tested linking with bfd and gold, and bfd was actually faster...
01:49 < bridge> <peter44h> I think safe to say there is zero reason to use gold now
07:42 < bridge> <Jupstar ‚ú™> Omfg power of not using gnome
07:42 < bridge> <Jupstar ‚ú™> Epyc
07:42 < bridge> <Jupstar ‚ú™> Yeah buy new PC and leave yours to me
09:15 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1209775273646628925/GGzhjYEW0AA2wNz.png?ex=65e82605&is=65d5b105&hm=8cb8d3d037964f5313144f2f7172efb9c833108894e3e605b5d8ab833dfffe67&
10:03 < bridge> <heinrich5991> kinda low effort. as it stands, it could complain about spam prevention ^^
10:17 < bridge> <kaffeine0> > you're unlikely to use something differnet than ninja on linux
10:17 < bridge> <kaffeine0> With such approach I see you saying a few years ago "what's the problem with cmake .. && make", "you're unlikely to use something differnet than make on linux".
10:18 < bridge> <heinrich5991> sounds ok?
10:18 < bridge> <kaffeine0> > you're unlikely to use something differnet than ninja on linux
10:18 < bridge> <kaffeine0> With such approach I see (I mean imaging) you saying a few years ago "what's the problem with cmake .. && make", "you're unlikely to use something differnet than make on linux".
10:18 < bridge> <heinrich5991> it doesn't look like running `cmake --build build` would save a lot of time for that user
10:19 < bridge> <kaffeine0> No, because now it either fails or work inefficiently, yet the internet is full of that hardcoded 'make'.
10:19 < bridge> <heinrich5991> it's unclear to me what you're arguing
10:20 < bridge> <heinrich5991> @mpft started this chat by telling someone who was compiling ddnet that they must not use `ninja` directly, because it's bad
10:20 < bridge> <heinrich5991> are you actually trying to argue that? that seems so ridiculous to me
10:20 < bridge> <heinrich5991> we're trying to compile something. the exact invocation of the compilation is sooo meaningless
10:21 < bridge> <heinrich5991> I don't like that people who try to compile ddnet are faced with IMO useless hints that are worded very aggressively
10:22 < bridge> <heinrich5991> ^ here, for reference
10:22 < bridge> <kaffeine0> "must" is a way too strong word here.
10:22 < bridge> <kaffeine0> I support Ewan's statement that it is better to use (and spread the word of) standard CMake generator-agnostic interface, than switch one "hardcode" by another.
10:22 < bridge> <heinrich5991> then say "look, you can also use `cmake --build build`, and it also works for other build systems"
10:22 < bridge> <Ewan> why do u have to ping me twice at 2 am
10:23 < bridge> <heinrich5991> and I have no problem with it
10:23 < bridge> <heinrich5991> but don't say: "you're hopeless the way you build ddnet"
10:26 < bridge> <Jupstar ‚ú™> Wazzup legend
10:27 < bridge> <Ewan> pls
10:30 < bridge> <kaffeine0> Ewan, you're hopeless the way you have notifications ON at this time (just kidding, ‚ù§Ô∏è Ewan)
10:30 < bridge> <kaffeine0> Ewan, you're hopeless the way you have notifications ON at this time of the day (just kidding, ‚ù§Ô∏è Ewan)
10:35 < bridge> <Jupstar ‚ú™> Hi Rust guyz i found some interesting wording problem again. want to hear your opinion
10:36 < bridge> <Jupstar ‚ú™> https://doc.rust-lang.org/std/sync/struct.Condvar.html#method.wait_while
10:36 < bridge> <Jupstar ‚ú™> "Blocks the current thread until this condition variable receives a notification and the provided condition is false."
10:36 < bridge> <Jupstar ‚ú™> in other words, if the condition is false, but the condition variable didn't receive a notification, it will block
10:36 < bridge> <Jupstar ‚ú™> https://en.cppreference.com/w/cpp/thread/condition_variable/wait
10:37 < bridge> <Jupstar ‚ú™> "2) Equivalent to
10:37 < bridge> <Jupstar ‚ú™> 
10:37 < bridge> <Jupstar ‚ú™> while (!stop_waiting())
10:37 < bridge> <Jupstar ‚ú™> {
10:37 < bridge> <Jupstar ‚ú™>     wait(lock);
10:37 < bridge> <Jupstar ‚ú™> }
10:37 < bridge> <Jupstar ‚ú™> 
10:37 < bridge> <Jupstar ‚ú™> This overload may be used to ignore spurious awakenings while waiting for a specific condition to become true.
10:37 < bridge> <Jupstar ‚ú™> Note that lock must be acquired before entering this method, and it is reacquired after wait(lock) exits, which means that lock can be used to guard access to stop_waiting()."
10:37 < bridge> <Jupstar ‚ú™> => so the condition would also return independent of if the condition variable received a notification
10:38 < bridge> <Jupstar ‚ú™> => __in other words, if the condition is false, but the condition variable didn't receive a notification, it will block__
10:38 < bridge> <Jupstar ‚ú™> => __so the condition would also return independent of if the condition variable received a notification__
10:39 < bridge> <Jupstar ‚ú™> "Blocks the current thread until this condition variable receives a notification **and ** the provided condition is false."
10:40 < bridge> <Jupstar ‚ú™> => __so the condition (if false) would also return independent of if the condition variable received a notification__
10:40 < bridge> <Jupstar ‚ú™> => __so the condition (if true) would also return independent of if the condition variable received a notification__
10:41 < bridge> <heinrich5991> I think the C++ can also only wake up from notifications, spurious or not
10:41 < bridge> <Jupstar ‚ú™> that's not my point
10:41 < bridge> <heinrich5991> oh, and it seems the rust doc is wrong, the condition is checked before the first wait in the code
10:41 < bridge> <Jupstar ‚ú™> if the condition was false from the start(the wait never happens in first place)
10:41 < bridge> <Jupstar ‚ú™> c++ version would never enter the wait
10:41 < bridge> <heinrich5991> ah, yea, sounds like it
10:42 < bridge> <heinrich5991> the rust version definitely does that:
10:42 < bridge> <heinrich5991> ```rs
10:42 < bridge> <heinrich5991>         while condition(&mut *guard) {
10:42 < bridge> <heinrich5991>             guard = self.wait(guard)?;
10:42 < bridge> <heinrich5991>         }
10:42 < bridge> <heinrich5991> ```
10:42 < bridge> <heinrich5991> docs seem to be wrong about that :/
10:42 < bridge> <Jupstar ‚ú™> ok thx
10:57 < bridge> <ryozuki> open a issue
11:00 < bridge> <Jupstar ‚ú™> I'll later directly make a PR if I don't forget
11:01 < bridge> <ryozuki> gogo
11:01 < bridge> <Jupstar ‚ú™> Also for parking lot. They sadly use similar wording
11:01 < bridge> <ryozuki> more rust contributors in ddnet
11:10 < bridge> <teero777> Yo it's probably possible to record and then convert movement into a quad and animation right?
11:10 < bridge> <teero777> Like moving a tee
11:11 < bridge> <heinrich5991> I don't know if we have existing tooling for that
11:12 < bridge> <teero777> I don't think so. Would be cool to have animated tees made from demos :)
11:12 < bridge> <heinrich5991> yep
11:14 < bridge> <teero777> xD I can only imagine the insane generated envelopes xd
11:21 < bridge> <kaffeine0> <s>Ewan, you're hopeless the way you have notifications ON at this time of the day (just kidding, ‚ù§Ô∏è Ewan)</s>
11:21 < bridge> <kaffeine0> edit: the equivalent for Ewan message is much easier:
11:21 < bridge> <kaffeine0> > ppl still not using notifications settings üò¥
11:22 < bridge> <kaffeine0> ~~Ewan, you're hopeless the way you have notifications ON at this time of the day (just kidding, ‚ù§Ô∏è Ewan)~~
11:22 < bridge> <kaffeine0> edit: the equivalent for Ewan message is much easier:
11:22 < bridge> <kaffeine0> > ppl still not using notifications settings üò¥
11:47 < ws-client> <ChillerDragon> pff imagine having notifications in your life
11:52 < bridge> <diariesvexar> Like real notifications in real life ?
12:13 < bridge> <teero777> xD is that a typo?
12:14 < bridge> <teero777> *cl_chat_teamcolors is not related to chat at all*
12:15 < bridge> <teero777> That would be annoying
12:16 < bridge> <diariesvexar> Yeah in world I'll live on DND mode üòõ
12:16 < bridge> <diariesvexar> Yeah in that world I'll live on DND mode üòõ
13:15 < ws-client> <ChillerDragon> does anything in the protocol depend on not being flushed? I didnt implement message queues yet i wonder if thats my bug
13:16 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1708517760.png
13:16 < ws-client> <ChillerDragon> vanilla on the left my server implemementation on the right
13:17 < ws-client> <ChillerDragon> i got rid off all errors in the client log and even successfully print all snap items in the c++ client that is connecting to it but it still is stuck in connection screen ._.
13:29 < bridge> <heinrich5991> ChillerDragon: don't think so. sounds like a bug if it does happen
13:38 < bridge> <heinrich5991> what kind of server are you implementing? üôÇ
15:47 < bridge> <yekrm> @miguilim Do you have any sql of opengores that you can send me?
15:54 < bridge> <chillerdragon> One in ruby. Actually idk what it‚Äôs use case will be because the performance is just horrible
15:55 < bridge> <chillerdragon> I just decided my lib shouldn‚Äôt be client only
16:27 < bridge> <kaffeine0> "must" is a way too strong word here.
16:27 < bridge> <kaffeine0> I support Ewan's statement that it is better to use (and spread the word of) standard CMake generator-agnostic interface, than switch one "hardcode" by another.
16:27 < bridge> <kaffeine0> 
16:27 < bridge> <kaffeine0> Edit: I don't see "ppl still using %something üò¥"  as "very aggressively" worded. We both know that there are words which "more aggressive" by a magnitude to two.
16:27 < bridge> <kaffeine0> "must" is a way too strong word here.
16:27 < bridge> <kaffeine0> I support Ewan's statement that it is better to use (and spread the word of) standard CMake generator-agnostic interface, than switch one "hardcode" by another.
16:27 < bridge> <kaffeine0> 
16:27 < bridge> <kaffeine0> Edit: I don't see "ppl still using %something%  üò¥"  as "very aggressively" worded. We both know that there are words which "more aggressive" by a magnitude to two.
16:27 < bridge> <kaffeine0> "must" is a way too strong word here.
16:27 < bridge> <kaffeine0> I support Ewan's statement that it is better to use (and spread the word of) standard CMake generator-agnostic interface, than switch one "hardcode" by another.
16:27 < bridge> <kaffeine0> 
16:27 < bridge> <kaffeine0> Edit: I don't see "ppl still using %something%  üò¥"  as "very aggressively" worded. We both know that there are words which "more aggressive" by a magnitude to two, so this sounds pretty soft to me.
16:58 < bridge> <ryozuki> https://blog.google/technology/developers/gemma-open-models/
17:03 < bridge> <ryozuki> https://xlr.sourceforge.io/
17:03 < bridge> <ryozuki> > 
17:03 < bridge> <ryozuki> > 
17:03 < bridge> <ryozuki> >     XL has a method to extend the language with any kind of feature, not just functions or data types, but also programming constructs, optimizations, domain-specific notations, and more. Actually, all this is done with a single operator, is, called the definition operator.
17:03 < bridge> <ryozuki> > 
17:03 < bridge> <ryozuki> >     As a validation of the concept, most features that are built-in in other programming languages, like the while loop, or integer arithmetic, are constructed in XL. Specifically, they are provided by the standard library, using techniques that any programmer can use in their program. This, obviously, means that programmers can add their own loops, or their own machine-level data types, and even extend existing ones.
17:03 < bridge> <ryozuki> > 
17:03 < bridge> <ryozuki> >     XL provides complete control over the program translation process. This means that libraries exist or can be written to make XL at least as good as C for low-level bit-twiddling, at least as good as C++ for generic algorithms, at least as good as Ada for tasking, at least as good as Fortran for numerical algorithms, at least as good as Java for distributed programming, and so on.
17:03 < bridge> <ryozuki> interesting language
17:19 < bridge> <ryozuki> @chairn did u know https://en.wikipedia.org/wiki/One-instruction_set_computer
17:20 < bridge> <ryozuki> > A one-instruction set computer (OISC), sometimes referred to as an ultimate reduced instruction set computer (URISC), is an abstract machine that uses only one instruction ‚Äì obviating the need for a machine language opcode.[1][2][3] With a judicious choice for the single instruction and given arbitrarily many resources, an OISC is capable of being a universal computer in the same manner as traditional computers that have multiple instructions.[
17:39 < bridge> <learath2> That sounds like an awful "aid" in teaching computer architecture
17:40 < bridge> <learath2> It's more like a gimmick, no one can think in terms of conditional moves
18:04 < bridge> <zenopeer> Hey
18:04 < bridge> <zenopeer> i need ddnets antibot
18:05 < bridge> <zenopeer> Send me it
18:06 < bridge> <zenopeer> Send exe i am lazy to compile
18:10 < bridge> <archimede67> What about no?
18:10 < bridge> <archimede67> I am lazy to send sry
18:12 < bridge> <mamad_melanin> hello
18:13 < bridge> <mamad_melanin> can we make a server that everyone around the world have good pings ?
18:18 < bridge> <mamad_melanin> i seen a player from iraq, he was only player from his country, there is no servers in his country, he must play on servers which give him about 140 ping
18:18 < bridge> <mamad_melanin> and he's playing for 5 years
18:19 < bridge> <milkeeycat> If you find a solution lemme know, ill start playing on Chinese servers
19:10 < bridge> <zenopeer> Ok ok now can u tell me how ddnet antibot works basicly i dont want spesific things i wont make bot
19:10 < bridge> <milkeeycat> that's what bot maker would say
19:11 < bridge> <zenopeer> Bruh
19:12 < bridge> <zenopeer> Also antibot maker
19:43 < bridge> <teero777> rando
19:59 < bridge> <mian_ku> i made a teeworlds skin editor
19:59 < bridge> <mian_ku> check in this -> https://github.com/MankinyWeb/TeeworldsSkinEditor/releases/tag/pv.0.1
20:03 < bridge> <zhn> routing will kill it anyway
20:16 < bridge> <milkeeycat> can i find somewhere a file with banned names on ddnet servers üòÑ
20:56 < bridge> <Jupstar ‚ú™> cool, can u show some screenshots?
21:04 < bridge> <ryozuki> got a pixel 8 pro
21:04 < bridge> <ryozuki> :EZ:
21:04 < bridge> <ryozuki> no more china
21:04 < bridge> <ryozuki> now us
21:04 < bridge> <ryozuki> üá∫üá∏
21:06 < bridge> <diariesvexar> gz
21:07 < bridge> <diariesvexar> is there any javascript pacakge or Rust to check map files to be really map file and isn't trojan or something ?
21:08 < bridge> <ryozuki> twmap
21:09 < bridge> <diariesvexar> tnx
21:14 < bridge> <chairn> no but it sounds more theoretical than anything else
21:14 < bridge> <chairn> NAND or NOR are boolean complete so they could work
21:14 < bridge> <chairn> not sure how you address data movement though
21:15 < bridge> <chairn> x86 mov is also turing complete
21:35 < bridge> <reitw> Enjoy, phone is amazing
21:35 < bridge> <mian_ku> here
21:35 < bridge> <mian_ku> https://cdn.discordapp.com/attachments/293493549758939136/1209961665320460370/image.png?ex=65e8d39d&is=65d65e9d&hm=698174c7071faf360c106b0f8035ca276d6e7e4f61dbce3b43fb5faf1c22d64d&
21:36 < bridge> <mian_ku> ÁöÆËÇ§Âêç=skin name
21:36 < bridge> <mian_ku> Â±ïÁ§∫Â§ßÂ∞è=show scale
21:37 < bridge> <mian_ku> ÂÖ∂‰ªñÈÉ®ÂàÜÈÄèÊòéÂ∫¶=transparency in other
21:38 < bridge> <Jupstar ‚ú™> epyc
21:39 < bridge> <milkeeycat> where button to change language? do i have to learn chinese to use it?
21:40 < bridge> <mian_ku> ok i know
21:40 < bridge> <mian_ku> i will do it
21:43 < bridge> <Jupstar ‚ú™> i played a taiwanese MMO for some time, i can feel what the buttons want to tell me
21:43 < bridge> <mian_ku> cool
21:44 < bridge> <mian_ku> learn self to chinese master
21:44 < bridge> <mian_ku> maybe
21:44 < bridge> <mian_ku> its Ëá™Â≠¶ÊàêÊâç
21:44 < bridge> <mian_ku> learn self to be chinese master
21:51 < bridge> <ryozuki> so far its awesome
21:51 < bridge> <ryozuki> do u also have it?
21:54 < bridge> <zhn> pixel users told me that there's not much different between 6, 7 and 8
21:54 < bridge> <zhn> is that true?
22:03 < bridge> <ryozuki> idk its my first
22:03 < bridge> <ryozuki> but im sure its copium from previous pixel users xd
22:04 < bridge> <reitw> Sure
22:04 < bridge> <reitw> Love the sound it makes when u select text, or write
22:05 < bridge> <reitw> It's a very small sound
22:06 < bridge> <reitw> Not rly a sound but like a vibration
22:07 < bridge> <ryozuki> just gotta get used to the motions
22:12 < bridge> <ryozuki> my dirty mouse
22:12 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1209970881976078457/PXL_20240221_211142478.jpg?ex=65e8dc32&is=65d66732&hm=6147d71cb63bf7fb558b6afffa8fca4e57d0a3c93ee1f4c3b7c5a03055be7d9c&
22:12 < bridge> <ryozuki> wow the camera is insane
22:18 < bridge> <louis> ü§¢
22:18 < bridge> <ryozuki> xd
22:18 < bridge> <ryozuki> i think this mouse is 4y old
22:18 < bridge> <ryozuki> wanted to make a pic of my fish but its night time
22:18 < bridge> <louis> don't eat over your tech üò´
23:23 < bridge> <fokkonaut> i think i have the same
23:23 < bridge> <fokkonaut> or similar
23:23 < bridge> <fokkonaut> g502
23:24 < bridge> <fokkonaut> proteus core iirc
23:25 < bridge> <fokkonaut> that's sweat, mine isnt _that_ bad but also many years old
