01:37 < bridge> <kali6707> Ay, dunno if i should ask it here or in "questions", but what does cl_sub_tick_aiming do exactly and how does it work?
01:45 < bridge> <fokkonaut> :bot:
01:45 < bridge> <fokkonaut> :think_bot:
02:00 < bridge> <fokkonaut> Ah lol, I did a github search for that string but didn't find something, probably typo
02:00 < bridge> <fokkonaut> sounded like a bot command at first, I'm not used to the latest client code üòµ‚Äçüí´
02:08 < bridge> <kaffeine0> https://github.com/ddnet/ddnet/pull/7253
02:09 < bridge> <kaffeine0> https://github.com/ddnet/ddnet/pull/7253 (reply to the q about `cl_sub_tick_aiming`)
03:53 < bridge> <louis> that seems like it should be on by default no?
05:04 < bridge> <totar> it's not?
05:26 < ws-client> <ChillerDragon> assembly is basically as simple as go lang
05:26 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1722741970.png
07:30 < bridge> <stormaxd> How do we get player pos in player.cpp?
07:30 < bridge> <stormaxd> is it just a snap?
07:36 < bridge> <milkeeycat> chillerdragon: did you find out how to do mafs with lea?
08:08 < bridge> <ryozuki> morning
08:09 < bridge> <chillerdragon> No idea how to do maffs w lea. imul works fine
08:09 < bridge> <chillerdragon> It‚Äôs in the character. So something like GetCharacter()->Core()->m\_Pos.x
08:10 < bridge> <chillerdragon> Untested im on phone
08:10 < bridge> <chillerdragon> Are you server side dev now? @stormaxd done with all bot clients? xaxa
08:14 < bridge> <stormaxd> Nah i need a local position for own tee, so i can implement the player trail
08:14 < bridge> <stormaxd> Just working with the graphics
08:14 < bridge> <chillerdragon> Client side?
08:15 < bridge> <chillerdragon> I assumed server side because you didn‚Äôt specify and mentioned player.cpp that file is server side only
08:15 < bridge> <chillerdragon> So you mean players.cpp ?
08:15 < bridge> <chillerdragon> Yea then it‚Äôs in the snap. In the m\_aClients array
08:15 < bridge> <milkeeycat> chillerdragon: if your maths can be converted in this form, you can use lea to do it in 1 instruction
08:15 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1269539276089987072/image.png?ex=66b06e16&is=66af1c96&hm=90dc39add4e1899498434e89c03f22ba1b5b194eb872152d1439fb754b98e077&
08:16 < bridge> <milkeeycat> https://github.com/dotnet/runtime/issues/75119 there're examples here xd
08:16 < bridge> <chillerdragon> Does it make sense to u?
08:17 < bridge> <milkeeycat> it's used for optimizations
08:17 < bridge> <milkeeycat> my dumb compiler just uses `imul` and lives a happy life
08:17 < bridge> <chillerdragon> Yes but how is getting the memory address doing multiply xd
08:17 < bridge> <milkeeycat> if you pass a register, it takes it's value
08:18 < bridge> <milkeeycat> if you do `lea rax, [r15]` it will just move value from `r15` to `rax`
08:18 < bridge> <milkeeycat> but if you do `lea rax, [label]` it will move address of `label`
08:20 < bridge> <chillerdragon> Yes but moving an address is not multiplying xd
08:21 < bridge> <milkeeycat> it can be just a number
08:21 < bridge> <milkeeycat> not an address
08:21 < bridge> <milkeeycat> i mean in register
08:23 < bridge> <milkeeycat> ```
08:23 < bridge> <milkeeycat>     mov r15, 10
08:23 < bridge> <milkeeycat>     lea rax, [r15 * 2]
08:23 < bridge> <milkeeycat> ```
08:23 < bridge> <milkeeycat> 
08:23 < bridge> <milkeeycat> in `rax` will be value `20`
08:24 < bridge> <chillerdragon> That‚Äôs so trol
08:24 < bridge> <chillerdragon> Instead of imul you do \*
08:24 < bridge> <chillerdragon> Xd
08:24 < bridge> <chillerdragon> How is \* not the same as multiplication
08:25 < bridge> <chillerdragon> But ye I get it now
08:25 < bridge> <chillerdragon> I also stopped using xor to zero registers
08:25 < bridge> <milkeeycat> you can do more operations in 1 instruction
08:26 < bridge> <chillerdragon> Isn‚Äôt the \* also an instruction?
08:26 < bridge> <milkeeycat> idk how that works in cpu land but in assembly you can put it in 1 intruction xd
08:26 < bridge> <chillerdragon> wow
08:26 < bridge> <chillerdragon> Makes it harder to read
08:26 < bridge> <chillerdragon> And potentially not faster because nobody knows what happens in cpu land
08:26 < bridge> <chillerdragon> There is always one dude commenting it‚Äôs slower on modern cpus
08:27 < bridge> <milkeeycat> if ppl use it for optimizations, i'd expect it to be faster
08:27 < bridge> <chillerdragon> I assume it was faster in some cases
08:27 < bridge> <chillerdragon> But blindly copying that unreadable style seems not so smart
08:28 < bridge> <chillerdragon> See the last comment on the dotnet issue you linked
08:28 < bridge> <milkeeycat> it always bsod my noodle when i see "load effective ADDRESS" instruction and it's used for regular numbers xd
08:31 < bridge> <chillerdragon> Yes very trol
08:56 < bridge> <melatoninnn59> hi
08:56 < bridge> <melatoninnn59> oops
08:56 < bridge> <melatoninnn59> wrong channel
09:49 < bridge> <heinrich5991> lea is probably always faster than imul
09:52 < bridge> <learath2> Doing maths with me?
09:53 < bridge> <learath2> Y?
09:57 < ws-client> <ChillerDragon> lea quiqq maffs
09:58 < ws-client> <ChillerDragon> printing signed integers is amazing `-0` pog
10:01 < bridge> <learath2> (fwiw you can use scaled and offset addressing for operands all over the place, but making optimal choices is very very hard
10:01 < bridge> <learath2> (fwiw you can use scaled and offset addressing for operands all over the place, but making optimal choices is very very hard)
10:02 < bridge> <milkeeycat> did you see the message I that I finished structs? xd
10:02 < bridge> <learath2> Not yet :Celebrate:
10:02 < bridge> <milkeeycat> @learath2
10:18 < bridge> <milkeeycat> did you see the message that I finished structs? xd
11:45 < bridge> <jxsl13> skrrrrr?
13:43 < bridge> <louis> was something changed with mouse4 / mouse5 binds? when i use a 2 cfg deepfly bind, holding down mouse4 will repeatedly toggle it on and off, but i only want it to toggle once per press
13:47 < bridge> <egyt> just remembered about this one heh
13:48 < bridge> <robyt3> Works as expected for me with simple hookline bind. Does it work with other binds for you?
13:48 < bridge> <robyt3> See #8434
13:48 < bridge> <DDNet> https://github.com/ddnet/ddnet/issues/8434
13:49 < bridge> <egyt> whoops
13:49 < bridge> <egyt> whoops, forgot that I remembered
13:50 < bridge> <egyt> still didn't get fixed though :/
13:50 < bridge> <milkeeycat> if you make 10 more issues it won't be fixed faster
13:51 < bridge> <robyt3> It's made more complicated because it depends on #8405
13:51 < bridge> <DDNet> https://github.com/ddnet/ddnet/issues/8405
14:01 < bridge> <louis> hmm.. it might be my mouse just acting up
14:01 < bridge> <louis> if i bind mouse5 to +fire i get really unpredictable behavior
14:02 < bridge> <louis> yeah it is, false report i guess üòÖ
14:47 < bridge> <teero777> can i issue f1 cmds to a headless client when starting?
14:47 < ws-client> <ChillerDragon> with fifo yes
14:47 < ws-client> <ChillerDragon> or you mean on launch once?
14:47 < bridge> <teero777> like `DDNet -connect localhost`
14:48 < bridge> <teero777> like `DDNet --connect localhost`
14:48 < ws-client> <ChillerDragon> yea like a regular client it takes args
14:48 < ws-client> <ChillerDragon> `DDNet "connect localhost"`
14:48 < bridge> <teero777> ah nice
14:48 < bridge> <teero777> thx
14:48 < bridge> <teero777> is that easy to set up or custom?
14:55 < ws-client> <ChillerDragon> @teero777 ? is it a reply to something? idk what you mean by custom
14:55 < bridge> <teero777> ahy ea
14:55 < bridge> <teero777> the fifo stuff
14:56 < ws-client> <ChillerDragon> `DDNet "cl_input_fifo deez.nuts"``
14:56 < bridge> <teero777> xdd
14:56 < ws-client> <ChillerDragon> ``echo quit >> deez.nuts``
14:56 < bridge> <teero777> yoo nice
14:56 < bridge> <teero777> so cool
16:34 < bridge> <louis> rip
16:35 < bridge> <kaffeine0> rip
16:35 < bridge> <Nouaa> rip
16:38 < bridge> <Nouaa> when colored names in server browser though
16:38 < bridge> <melo∆û> rip
16:43 < bridge> <louis> fr
16:43 < bridge> <louis> well, i think it might be tough with the name character limit
16:57 < bridge> <ryozuki> 5591 players
16:57 < bridge> <ryozuki> like heinrich?
16:57 < bridge> <ryozuki> :gigachad:
16:57 < bridge> <ryozuki> 5991 players
16:57 < bridge> <0xdeen> Heinrich's name prophesied it üòÑ
17:06 < bridge> <zhn> 5991 goes brr
17:06 < bridge> <zhn> :justatest:
17:07 < bridge> <zhn> wait different webhooks?
18:12 < bridge> <learath2> Chiller I have a fork with 7 players on it running on a different master that supports an xml-like syntax for colored broadcasts running on 0.8.0. It‚Äôs a secret release by oy. Can you please implement that established standard?
18:13 < bridge> <heinrich5991> please never
18:13 < bridge> <heinrich5991> that just sounds distracting as fuck
18:14 < bridge> <learath2> Rainbow server names sounds very early 2000s
18:14 < bridge> <heinrich5991> classic advertising problem
18:15 < bridge> <reitw> :justatest:
19:28 < bridge> <ryozuki> @learath2
19:28 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1269708443262914701/xdl40lhammgd1.jpeg?ex=66b10ba2&is=66afba22&hm=ebecc388504a204cd52bcbebe751b28a0cec943668a78801d2a09663c1138141&
19:28 < bridge> <learath2> Me
19:28 < bridge> <learath2> Anime_irl
19:29 < bridge> <ryozuki> https://www.reddit.com/r/ProgrammerAnimemes/comments/1ejscnp/hello_world/
19:29 < bridge> <ryozuki> lol
19:29 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1269708801389625424/they-are-deerly-sorry-for-the-inconvenience-v0-i1ocjha2xxdd1.webp?ex=66b10bf8&is=66afba78&hm=e1b9d3445fbdcc501236185c5fb8a14091da8e0ee452acdf5754216d3f0a502c&
19:50 < bridge> <jxsl13> I love how professional ddnet maintainers are.
19:51 < bridge> <learath2> Thanks. I try my best
19:51 < bridge> <jxsl13> just butthurt
19:51 < bridge> <jxsl13> that's it
19:52 < bridge> <learath2> Heinrich is the professional one, I suggest you interact with him instead if you don‚Äôt like the way I talk
19:53 < bridge> <jxsl13> just thought that maintainers are supposed to be somewhat professional, might have had a false assumption.
19:55 < bridge> <jxsl13> end of discussion.
19:55 < bridge> <learath2> Somewhat being the operative word
19:55 < bridge> <zhn> EOF
19:56 < bridge> <headshotnoby> EOL
19:59 < bridge> <learath2> You just don‚Äôt like the outcome of the issue. I‚Äôve had this tone for decades and you‚Äôve been here long enough to have an issue with it earlier
20:01 < bridge> <jxsl13> you seem not to like someone not wanting to implement your (complex) ideas
20:01 < bridge> <jxsl13> that's why you posted that coment above
20:02 < bridge> <melo∆û> but..but.. learath is known for these jokes around here :/
20:02 < bridge> <jxsl13> either way, please elaborate why you posted that comment above
20:02 < bridge> <zhn> whats goin on
20:02 < bridge> <learath2> I couldn‚Äôt care less who implements it. Chiller is completely free to not implement something he doesn‚Äôt agree with, as we are with not merging something we don‚Äôt agree with
20:02 < bridge> <Nouaa> üçñ
20:02 < bridge> <jxsl13> you seem to case
20:02 < bridge> <jxsl13> care
20:02 < bridge> <jxsl13> hence the comment
20:03 < bridge> <learath2> Banter. It‚Äôs a well known meme in this channel that chiller has a weird obsession with 0.7. He even knows and has one of my previous comments about it on his github profile
20:04 < bridge> <learath2> Stop getting offended on other peoples behalves. If chiller has an issue with my message he knows very well that he can just tell me here. And he also knows that I can implement my own proposal
20:04 < bridge> <jxsl13> I'm not reading this often enough, mit indded be the case. for me that did just look like toxic behavior and demotivating an active participant in the development.
20:04 < bridge> <jxsl13> might*
20:04 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1269717724251164683/image.png?ex=66b11447&is=66afc2c7&hm=cab44a16e223596959f335257d5647a70ac31a04620abdc5d95f013b9d2848d0&
20:06 < bridge> <jxsl13> rule #1
20:06 < bridge> <jxsl13> of this discord
20:06 < bridge> <jxsl13> please read it
20:07 < bridge> <totar> personally I would enjoy all the servers having rainbow formatting
20:07 < bridge> <learath2> I did not insult anyone by any definition of insult. And I wouldn‚Äôt say it‚Äôs ‚Äúlazy‚Äù negativity or even negativity
20:10 < bridge> <learath2> I will refer you to rule #6 of this discord. DM me if you have a personal issue with me. DM another admin if you have a complaint about me
20:10 < bridge> <jxsl13> I do not have any personal problems, because I don't know you enough, I'm reading that one comment out of context of th ebig picture in here. Just trying to make you reflect a little bit.
20:11 < bridge> <jxsl13> will try to keep it at this.
20:11 < bridge> <learath2> I can see how it might appear out of context. As I said, if Chiller has an issue with it, he can message me and I‚Äôll apologize but knowing the guy for a decade, I‚Äôm pretty sure it‚Äôs fine
20:15 < bridge> <murpi> I would like some rainbow tees on DDNet :)
20:16 < bridge> <murpi> Ya know, the one KoG has.
20:17 < bridge> <learath2> If you finish an insane map you get rainbow tee for 2 days
20:20 < bridge> <murpi> Or that freeze function noby has. Moderation would be so much more fun :0
20:20 < bridge> <learath2> Remove the ban commands, give mods super and a ban hammer
20:21 < bridge> <murpi> Blockworls(?) had this really cool feature that lets you grab people with your crosshair and move them around.
20:21 < bridge> <murpi> YES
20:22 < bridge> <learath2> Tater has been typing for so long I‚Äôm getting worried
20:22 < bridge> <totar> I disagree that the format needs to be based on nesting tags with open and closing. I know a of some games that implement text formatting where you put in sequential tags to control the formatting and then there is a reset tag is you want to go back to the defaults. 
20:22 < bridge> <totar> 
20:22 < bridge> <totar> I find it concise and easy to use when you're actually typing. 
20:22 < bridge> <totar> https://wiki.trackmania.io/en/content-creation/text-styling
20:23 < bridge> <totar> I disagree that the format needs to be based on nesting tags with open and closing. I know of some games that implement text formatting where you put in sequential tags to control the formatting and then there is a reset tag is you want to go back to the defaults. 
20:23 < bridge> <totar> 
20:23 < bridge> <totar> I find it concise and easy to use when you're actually typing. 
20:23 < bridge> <totar> https://wiki.trackmania.io/en/content-creation/text-styling
20:26 < bridge> <totar> do you really want to type
20:27 < bridge> <totar> ``<span style="color: #c00000">red text</span>``
20:27 < bridge> <totar> or
20:27 < bridge> <totar> ``
20:27 < bridge> <totar> ``$F00red text``
20:27 < bridge> <totar> do you really want to type
20:27 < bridge> <totar> ``<span style="color: #c00000">red text</span>``
20:27 < bridge> <totar> or
20:27 < bridge> <totar> 
20:27 < bridge> <totar> ``$F00red text``
20:27 < bridge> <totar> do you really want to type
20:27 < bridge> <totar> ``<span style="color: #c00000">red text</span>``
20:27 < bridge> <totar> or
20:27 < bridge> <totar> ``$F00red text``
20:27 < bridge> <learath2> I‚Äôm not fundamentally opposed to the control sequence approach either. I did propose my own with a `\033` in it.
20:29 < bridge> <learath2> That is annoying, that‚Äôs why I proposed an xml derivative instead of strict html `<c=#c00>red text</c>` isn‚Äôt much worse than `$C00red text$z`
20:29 < bridge> <totar> have you tried typing both of those ten times
20:30 < bridge> <totar> I think the first one is atleast 3x slower
20:30 < bridge> <naitmer_sans> devs did you left the bugs for maps so ppl can make hard maps?
20:31 < bridge> <naitmer_sans> devs did you left the bugs so ppl can make hard maps?
20:31 < bridge> <naitmer_sans> or this is a feature or not even a bug
20:31 < bridge> <totar> the physics, including all the bugs are considered features
20:32 < bridge> <learath2> I could type either with about the same cadence. So I‚Äôd estimate the speed to be more related to the character count, so about 2 times slower, but that‚Äôs only when changing colors, long stretches of single color text or single colored chunks within text would be dominated by the rest of the typing
20:34 < bridge> <learath2> Anyway, as I said. I‚Äôm not fundamentally opposed to control sequences either, but I think I want the sequence explicitly terminated, so we can reserve some stuff for the future. Like `^<command>;` or `^command^`
20:35 < bridge> <learath2> Anyway, as I said. I‚Äôm not fundamentally opposed to control sequences either, but I think I want the sequence explicitly terminated, so we can reserve some stuff for the future. Like `^<command>;` or `^<command>^`
20:35 < bridge> <jxsl13> what the user types must not necessarily be what the server receives
20:37 < bridge> <naitmer_sans> are there a type of man that approve maps to be official or that make developers?
20:37 < bridge> <jxsl13> #üì¨submit-maps
20:38 < bridge> <learath2> Transparently translating `$b` to `$b$`? It saves one character but it is weird to parse, e.g. what happens to `$b$`? `$b$$`?
20:38 < bridge> <jxsl13> I meant more like tranlating any easier to write format to the xml format
20:38 < bridge> <jxsl13> translating*
20:39 < bridge> <jxsl13> where xml stays flexible for anything to come in the future
20:39 < bridge> <naitmer_sans> devs from what idea came? if i would be programmer i wouldn't have much ideas to do this game with many features
20:40 < bridge> <jxsl13> ideas from players
20:40 < bridge> <naitmer_sans> cool
20:42 < bridge> <learath2> Mh, if we do want hierarchy, stuff like control sequences are not good for expressing that to begin with. If we have to have control sequences, then I‚Äôd say we just drop the xml idea at all. A terminated control sequence is easy to parse and just as extensible
20:42 < bridge> <learath2> Also easy to type
20:44 < bridge> <jxsl13> I just wonder will anyone want to type that as xml into the f2 console or is there some distinction required between cheap ass user input (maybe even binds) and whatever the other part is
20:45 < bridge> <learath2> Depends on how important it is that colored broadcasts be typed really quickly. I think most of these would be used programmatically or within binds anyway
20:46 < bridge> <jxsl13> announcement type of messages definitly binds
20:47 < bridge> <learath2> Or realistically, given how rare broadcasts have become, these will only ever be used within our announcement loop cron jobs
20:47 < bridge> <jxsl13> boradcasts referencing specifi users, definitly server side
20:47 < bridge> <jxsl13> broadcasts*
20:47 < bridge> <learath2> But do you think it‚Äôd be used by an admin, typed out by hand?
20:48 < bridge> <jxsl13> on smaller servers it's more typed by hand for fun stuff, I'd guess
20:48 < bridge> <jxsl13> where an admin is actively participating in the community and staying on the server to have people join
20:49 < bridge> <jxsl13> dunno how broad that use case is nowadays
20:49 < bridge> <zhn> can we just use ascii color codes
20:49 < bridge> <jxsl13> reminds me of fokko a lil bit
20:49 < bridge> <jxsl13> or chiller
20:49 < bridge> <learath2> Console ones with `\033`? They are even more annoying to do by hand than xml
20:50 < bridge> <jxsl13> they are too nieche, imo
20:50 < bridge> <jxsl13> and finding those color codes
20:50 < bridge> <jxsl13> you'd need to be half of a dev, imo
20:50 < bridge> <zhn> `\x1b[3;5;1m`
20:50 < bridge> <zhn> why not huh
20:50 < bridge> <jxsl13> why not powershell
20:51 < bridge> <learath2> We don‚Äôt even have a way to insert `\033` in our console easily
20:51 < bridge> <zhn> cuz no windows
20:51 < bridge> <jxsl13> but we support windows üòõ
20:51 < bridge> <zhn> do you support windows on linux
20:51 < bridge> <jxsl13> no
20:51 < bridge> <zhn> :troll:
20:51 < bridge> <learath2> The truecolor version is actually very simple btw, just decimal r g b
20:51 < bridge> <jxsl13> but windows supports linux
20:52 < bridge> <zhn> i don't think linux supports ps
20:52 < bridge> <jxsl13> \033 what color is that?
20:52 < bridge> <zhn> it's start of color code
20:52 < bridge> <zhn> or it's end
20:53 < bridge> <jxsl13> that's ascii 0x33?
20:53 < bridge> <zhn> \033 is \x1b from my comment
20:54 < bridge> <jxsl13> hm
20:54 < bridge> <jxsl13> too dumb for that
20:54 < bridge> <learath2> \033 is escape, [ is the control sequence init, 38 is set foreground color, 2 is true color mode
20:55 < bridge> <learath2> m terminates the sequence
20:55 < bridge> <learath2> `\033[38;2;r;g;bm`
20:55 < bridge> <learath2> Anyway, the `\033` makes it too annoying for hand use imo
20:58 < bridge> <jxsl13> wine
20:59 < bridge> <jxsl13> this discussion is kind of at a stalemate
21:00 < bridge> <jxsl13> this is shittier to write than xml
21:01 < bridge> <jxsl13> not gonna lie xD
21:02 < bridge> <jxsl13> even as broadcast for a bind, at some point someone has to write it, at least once
21:04 < bridge> <learath2> @heinrich5991 could you be convinced into merging a control sequence solution that is extensible? I would be okay-ish with `^‚Ä¶^` with the first two being `^RGB^` and `^RRGGBB^`. 
21:04 < bridge> <learath2> 
21:04 < bridge> <learath2> As I said very early on, xml is more suited for representing hierarchy. I did want to keep that possibility for the future but it is also more annoying to use by hand for a feature we might end up using. Also the xml derivative thing pretty much negates all benefits of being close to a standard
21:08 < bridge> <jxsl13> hm
21:08 < bridge> <jxsl13> if full fledged xml is not user facing by default, it would be ok
21:09 < bridge> <learath2> Without the terminator I‚Äôm not really a huge fan. Different versions of the parser can lead to different results. There is a reason almost every in band signaling solution you‚Äôll find online uses a start and stop code
21:09 < bridge> <jxsl13> might have broadcast_color
21:09 < bridge> <jxsl13> broadcast
21:09 < bridge> <jxsl13> and broadcast_xml
21:10 < bridge> <jxsl13> or just broadcast with a subset of all available xml features (background, italic, etc)
21:10 < bridge> <jxsl13> and for anyone wanting more, they'd have to use xml
21:10 < bridge> <jxsl13> or whatever the more complex format is
21:11 < bridge> <jxsl13> but that's more code to maintain, which is a con imo
21:13 < bridge> <jxsl13> (because kind of code duplication for that translation layer)
21:15 < bridge> <jxsl13> terminator is a reasonable extention.
21:15 < bridge> <jxsl13> a terminator is a reasonable extention.
21:21 < bridge> <zhn> both suck imo
21:21 < bridge> <zhn> xml is even worse though
21:27 < bridge> <jxsl13> I personally would prefer ^rrggbb^ over xml and if xml is required, I'd prefer a translation layer on client side.
21:27 < bridge> <jxsl13> with actual xml instead of the derivative
21:28 < bridge> <learath2> If we have a translation layer, 100% just actual proper xml over the wire. The derivative was just a compromise so it's more typeable by hand
21:58 < bridge> <heinrich5991> I tried not proposing a built-in translation layer ^^
21:59 < bridge> <heinrich5991> > I thought we wanted to move away from version number compatibility code.
21:59 < bridge> <heinrich5991> @fokkonaut I don't know where this thought comes from
21:59 < bridge> <heinrich5991> care to elaborate?
22:00 < bridge> <heinrich5991> the version compatibility thing was something that works quite well IMO
22:06 < bridge> <fokkonaut> Initially because you created something such as the server cap flags
22:06 < bridge> <fokkonaut> There was some thinking about adding client caps aswell iirc
22:06 < bridge> <fokkonaut> And for example f-client sends a ddnet client Version string, but i cant update it because it doesnt support all the following features
22:06 < bridge> <fokkonaut> So i cant get to support specific things without implementing everything inbetween
22:08 < bridge> <heinrich5991> yes, that's kinda the plan. to lessen the burden of backcompat
22:09 < bridge> <heinrich5991> we only have to support ddnet clients by version, not for each feature individually either working or not
23:09 < bridge> <APFFF> Error: `D:\Coding\DDnet_coding2\ddnet\src\game\client\gameclient.cpp(1130,15): error C2660: "CEffects::DamageIndicator": Function doesnt accept 4 arguments [D:\Coding\DDnet_coding2\ddnet\build\game-client.vcxproj]`
23:09 < bridge> <APFFF> gameclient.cpp: `m_Effects.DamageIndicator(pos, dir, Alpha, Life);`
23:09 < bridge> <APFFF> effects.cpp:` void CEffects::DamageIndicator(vec2 Pos, vec2 Dir, float Alpha, float Life)`
23:09 < bridge> <APFFF> effects.h: `void DamageIndicator(vec2 Pos, vec2 Dir, float Alpha = 1.0f, float Life = 0.75f);`
23:09 < bridge> <APFFF> I dont get it
23:11 < bridge> <heinrich5991> hmmm
23:11 < bridge> <heinrich5991> try a clean build
23:11 < bridge> <APFFF> i already deleted /build
23:12 < bridge> <APFFF> i already deleted `/build`
23:12 < bridge> <APFFF> i already deleted `/build` and remade it with `cmake ..`
23:12 < bridge> <heinrich5991> hmmmmm
23:12 < bridge> <APFFF> not even chatGPT could help me
23:12 < bridge> <milkeeycat> do you have it on github?
23:12 < bridge> <APFFF> no
23:12 < bridge> <APFFF> I can publish it
23:13 < bridge> <APFFF> but dont shame my code
23:13 < bridge> <heinrich5991> can you pastebin the effects.h code?
23:14 < bridge> <APFFF> ```/* (c) Magnus Auvinen. See licence.txt in the root of the distribution for more information. */
23:14 < bridge> <APFFF> /* If you are missing that file, acquire a complete release at teeworlds.com.                */
23:14 < bridge> <APFFF> #ifndef GAME_CLIENT_COMPONENTS_EFFECTS_H
23:14 < bridge> <APFFF> #define GAME_CLIENT_COMPONENTS_EFFECTS_H
23:14 < bridge> <APFFF> 
23:14 < bridge> <APFFF> #include <base/vmath.h>
23:14 < bridge> <APFFF> 
23:14 < bridge> <APFFF> #include <game/client/component.h>
23:14 < bridge> <APFFF> 
23:14 < bridge> <APFFF> class CEffects : public CComponent
23:14 < bridge> <APFFF> {
23:14 < bridge> <APFFF>     bool m_Add5hz;
23:14 < bridge> <APFFF>     bool m_Add50hz;
23:14 < bridge> <APFFF>     bool m_Add100hz;
23:14 < bridge> <APFFF>     bool m_Add200hz;
23:14 < bridge> <APFFF> 
23:14 < bridge> <APFFF> public:
23:14 < bridge> <APFFF>     CEffects();
23:14 < bridge> <APFFF>     virtual int Sizeof() const override { return sizeof(*this); }
23:14 < bridge> <APFFF> 
23:14 < bridge> <APFFF>     virtual void OnRender() override;
23:14 < bridge> <APFFF> 
23:14 < bridge> <APFFF>     void BulletTrail(vec2 Pos, float Alpha = 1.f, float TimePassed = 0.f);
23:14 < bridge> <APFFF>     void SmokeTrail(vec2 Pos, vec2 Vel, float Alpha = 1.f, float TimePassed = 0.f);
23:14 < bridge> <APFFF>     void SkidTrail(vec2 Pos, vec2 Vel, float Alpha = 1.0f);
23:14 < bridge> <APFFF>     void Explosion(vec2 Pos, float Alpha = 1.0f);
23:14 < bridge> <APFFF>     void HammerHit(vec2 Pos, float Alpha = 1.0f);
23:14 < bridge> <APFFF>     void AirJump(vec2 Pos, float Alpha = 1.0f);
23:14 < bridge> <APFFF>     void DamageIndicator(vec2 Pos, vec2 Dir, float Alpha = 1.0f, float Life = 0.75f);
23:14 < bridge> <APFFF>     void ResetDamageIndicator();
23:14 < bridge> <APFFF>     void PlayerSpawn(vec2 Pos, float Alpha = 1.0f);
23:14 < bridge> <heinrich5991> hmmm. just to make sure. you don't have two checkouts of the ddnet repository and are editing the wrong one?
23:15 < bridge> <APFFF> No just this branch
23:15 < bridge> <learath2> https://youtu.be/JeoYA7wABAA this is the clickbaitest title I‚Äôve ever seen
23:15 < bridge> <heinrich5991> don't reward clickbait
23:15 < bridge> <learath2> True
23:16 < bridge> <APFFF> Does my codebase include the keybinds? Before I publish it
23:16 < bridge> <milkeeycat> new day, new skill issues in assembly. who could've though there's no 2-operand form with 1 byte destination üò¨
23:17 < bridge> <milkeeycat> new day, new skill issues in assembly. who could've though there's no 2-operand form for `imul` intruction with 1 byte destination üò¨
23:17 < bridge> <heinrich5991> why do you need 1 byte destination?
23:18 < bridge> <milkeeycat> because my code was generating it xddd
23:25 < bridge> <APFFF> https://github.com/Apfff/ddnet
23:28 < bridge> <learath2> TIL. I wonder why
23:31 < bridge> <learath2> It‚Äôs not hard to work around, but still curious
23:32 < bridge> <milkeeycat> It would be too easy to make everything work first try :pepeW:
23:32 < bridge> <milkeeycat> Aaand I think while I was making structs I broke functions xd
23:43 < bridge> <learath2> I opened the intel assembly manual on my ipad. It triggered the agressive killing of all background apps
23:43 < bridge> <learath2> 5079 pages combined manual
23:58 < bridge> <melo∆û> :justatest:
