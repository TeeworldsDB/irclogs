03:50 < bridge> [ddnet] <Astramast> is there a dark mode on github ?
05:42 < bridge> [ddnet] <Jupstar âœª> yes
05:42 < bridge> [ddnet] <Jupstar âœª> but u need to be logged in
05:48 < bridge> [ddnet] <Jupstar âœª> @TsFreddie xd, but this one is hard to fix actually, would require to change the components a bit a guess, or go savage and reimplement all the dummy network logic
05:48 < bridge> [ddnet] <Jupstar âœª> https://cdn.discordapp.com/attachments/293493549758939136/851668875400708116/test.mp4
05:48 < bridge> [ddnet] <Jupstar âœª> cyborgworlds
05:48 < bridge> [ddnet] <TsFreddie (CHN Community Repost)> ðŸ˜³
06:16 < bridge> [ddnet] <scottmilli> Hiring ðŸ“Š Jobs ðŸ’¯Offer's Earning
06:16 < bridge> [ddnet] <scottmilli> Daily jobs income hourly legit rapidly earn profits $3,000 in 24hours. Interested inbox me "How To Proceed" to join. click on link ðŸ‘‡ðŸ‘‡ðŸ“¥
06:16 < bridge> [ddnet] <scottmilli> https://wa.me/message/B7L4VSPJGQBGP1
08:02 < bridge> [ddnet] <lynn> why is there a million layers of audio
08:02 < bridge> [ddnet] <lynn> it sounds amazing
10:26 < bridge> [ddnet] <Kennel> What particles do you use?
12:42 < bridge> [ddnet] <Ryozuki> the internet is down
12:43 < bridge> [ddnet] <Ryozuki> fastly is down
12:43 < bridge> [ddnet] <Ryozuki> https://news.ycombinator.com/item?id=27432408
12:43 < bridge> [ddnet] <Ryozuki> :monkaS:
12:43 < bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/851773455116664892/unknown.png
12:44 < bridge> [ddnet] <deen> Yeah, I figured something was weird when reddit didn't load and DDNet builds on Github started failing at the same time
12:44 < bridge> [ddnet] <Ryozuki> apparently lots of websites depend on fastly.com provider
12:44 < bridge> [ddnet] <Ryozuki> even amazon
12:44 < bridge> [ddnet] <ReiTW> it's down since a hour and not completly down, can work sometimes or not
12:45 < bridge> [ddnet] <deen> For Amazon it's super-weird that they don't dogfood their own CDN but use a competitor instead
12:45 < bridge> [ddnet] <Ryozuki> https://techcrunch.com/2021/06/08/numerous-popular-websites-are-facing-an-outage/
12:46 < bridge> [ddnet] <Ryozuki> some dev pressed the wrong button :monkalaugh:
13:00 < bridge> [ddnet] <Ryozuki> ```
13:00 < bridge> [ddnet] <Ryozuki> Fastly Engineer 1: Seems like a common error message. Can you check stackoverflow to see if there's an easy fix?
13:00 < bridge> [ddnet] <Ryozuki> Fastly Engineer 2: I have some very bad news... 
13:00 < bridge> [ddnet] <Ryozuki> ```
13:00 < bridge> [ddnet] <Ryozuki> :monkalaugh:
13:28 < bridge> [ddnet] <Jupstar âœª> Standard, it's just bcs everything is cloned in that video
14:33 < bridge> [ddnet] <RafaelFF> Question for c++ devs:
14:33 < bridge> [ddnet] <RafaelFF> 
14:33 < bridge> [ddnet] <RafaelFF> I'm in Bash environment and I would like to fetch DDNet version from source code. I can achieve this with bash-ism, but I wonder if would be possible with an inline c++ command.
14:33 < bridge> [ddnet] <RafaelFF> 
14:33 < bridge> [ddnet] <RafaelFF> Currently I use this bash-ism solution:
14:33 < bridge> [ddnet] <RafaelFF> 
14:33 < bridge> [ddnet] <RafaelFF> ```
14:33 < bridge> [ddnet] <RafaelFF> variable=$(grep "^#define GAME_RELEASE_VERSION" src/game/version.h | cut -d\" -f2)
14:33 < bridge> [ddnet] <RafaelFF> ```
14:33 < bridge> [ddnet] <RafaelFF> 
14:33 < bridge> [ddnet] <RafaelFF> A Python-equivalent of what I am looking for (if this project was written in Python, of course) would be e.g.:
14:33 < bridge> [ddnet] <RafaelFF> 
14:33 < bridge> [ddnet] <RafaelFF> ```
14:33 < bridge> [ddnet] <RafaelFF> version=$(python -c "from src/game/version import; print(GAME_RELEASE_VERSION)")
14:33 < bridge> [ddnet] <RafaelFF> ```
14:33 < bridge> [ddnet] <RafaelFF> 
14:33 < bridge> [ddnet] <RafaelFF> Any c++ suggestion better than the currently used bash-ism above?
14:33 < bridge> [ddnet] <RafaelFF> Question for c++ devs:
14:33 < bridge> [ddnet] <RafaelFF> 
14:33 < bridge> [ddnet] <RafaelFF> I'm in a Bash environment and I would like to fetch DDNet version from source code. I can achieve this with bash-ism, but I wonder if would be possible with an inline c++ command.
14:33 < bridge> [ddnet] <RafaelFF> 
14:33 < bridge> [ddnet] <RafaelFF> Currently I use this bash-ism solution:
14:33 < bridge> [ddnet] <RafaelFF> 
14:33 < bridge> [ddnet] <RafaelFF> ```
14:33 < bridge> [ddnet] <RafaelFF> version=$(grep "^#define GAME_RELEASE_VERSION" src/game/version.h | cut -d\" -f2)
14:33 < bridge> [ddnet] <RafaelFF> ```
14:33 < bridge> [ddnet] <RafaelFF> 
14:33 < bridge> [ddnet] <RafaelFF> A Python-equivalent of what I am looking for (if this project was written in Python, of course) would be e.g.:
14:34 < bridge> [ddnet] <RafaelFF> 
14:34 < bridge> [ddnet] <RafaelFF> ```
14:34 < bridge> [ddnet] <RafaelFF> version=$(python -c "from src/game/version import; print(GAME_RELEASE_VERSION)")
14:34 < bridge> [ddnet] <RafaelFF> ```
14:34 < bridge> [ddnet] <RafaelFF> 
14:34 < bridge> [ddnet] <RafaelFF> Any c++ suggestion better than the currently used bash-ism above?
14:41 < bridge> [ddnet] <RafaelFF> Question for c++ devs:
14:41 < bridge> [ddnet] <RafaelFF> 
14:41 < bridge> [ddnet] <RafaelFF> I'm in a Bash environment and I would like to fetch DDNet version from source code. I can achieve this with bash-ism, but I wonder if would be possible with an inline c++ command.
14:41 < bridge> [ddnet] <RafaelFF> 
14:41 < bridge> [ddnet] <RafaelFF> Currently I use this bash-ism solution:
14:41 < bridge> [ddnet] <RafaelFF> 
14:41 < bridge> [ddnet] <RafaelFF> ```
14:41 < bridge> [ddnet] <RafaelFF> version=$(grep "^#define GAME_RELEASE_VERSION" src/game/version.h | cut -d\" -f2)
14:41 < bridge> [ddnet] <RafaelFF> ```
14:41 < bridge> [ddnet] <RafaelFF> 
14:41 < bridge> [ddnet] <RafaelFF> A Python-equivalent of what I am looking for (if this project was written in Python, of course) would be e.g.:
14:41 < bridge> [ddnet] <RafaelFF> 
14:41 < bridge> [ddnet] <RafaelFF> ```
14:41 < bridge> [ddnet] <RafaelFF> version=$(python -c "from src/game/version import GAME_RELEASE_VERSION; print(GAME_RELEASE_VERSION)")
14:41 < bridge> [ddnet] <RafaelFF> ```
14:41 < bridge> [ddnet] <RafaelFF> 
14:41 < bridge> [ddnet] <RafaelFF> Any c++ suggestion better than the currently used bash-ism above?
14:52 < bridge> [ddnet] <deen> ```
14:52 < bridge> [ddnet] <deen> echo '#include "src/game/version.h"\n#include <iostream>\nint main() { std::cout << GAME_RELEASE_VERSION << std::endl; }' | g++ -xc++ - && ./a.out
14:52 < bridge> [ddnet] <deen> ```
14:54 < bridge> [ddnet] <deen> Alternatively, using just the preprocessor: `echo '#include "src/game/version.h"\nGAME_RELEASE_VERSION' | g++ -E - | tail -n1`
14:56 < bridge> [ddnet] <deen> Or implement a `--version` flag in DDNet-Server/DDNet and run that
16:08 < bridge> [ddnet] <Learath2> Spotifys album art was also down, funnily enough not the music
17:38 < bridge> [ddnet] <Arseniy Zarche> hi. my friend can't start ddnet
17:38 < bridge> [ddnet] <Arseniy Zarche> it closing in a moment after starting without any logfiles etc.
17:39 < bridge> [ddnet] <Jupstar âœª> and was it always like that?
17:40 < bridge> [ddnet] <Arseniy Zarche> think yes because he just installed ddnet
17:40 < bridge> [ddnet] <Arseniy Zarche> wait a second, i'll show properties of pc
17:40 < bridge> [ddnet] <Arseniy Zarche> some weak pc
17:40 < bridge> [ddnet] <Jupstar âœª> ok
17:40 < bridge> [ddnet] <Arseniy Zarche> but i think it can start
17:43 < bridge> [ddnet] <Arseniy Zarche> win7 intel core duo2(ÐºÐ°Ðº Ñ‚Ð¾ Ñ‚Ð°Ðº), nvidia geforce 7900, 2Ð³Ð±
17:43 < bridge> [ddnet] <Arseniy Zarche> win7 intel core duo2, nvidia geforce 7900, 2Ð³Ð±
17:43 < bridge> [ddnet] <Arseniy Zarche> win7 intel core duo2, nvidia geforce 7900, 2gb
17:43 < bridge> [ddnet] <Arseniy Zarche> win7 intel core 2 duo, nvidia geforce 7900, 2gb
17:43 < bridge> [ddnet] <Arseniy Zarche> win7 intel core 2 duo, nvidia geforce 7900, 2gb ram
17:43 < bridge> [ddnet] <Arseniy Zarche> very weak but should start
17:44 < bridge> [ddnet] <Jupstar âœª> for win7 i can only say, that there were ppl that had to update to newest win7 in order to play
17:44 < bridge> [ddnet] <Arseniy Zarche> hm
17:44 < bridge> [ddnet] <Jupstar âœª> generally that pc should be enough to run the game at all
17:45 < bridge> [ddnet] <Arseniy Zarche> +
17:45 < bridge> [ddnet] <Arseniy Zarche> maybe net framework
17:45 < bridge> [ddnet] <Arseniy Zarche> or msvc packs need to check?
17:45 < bridge> [ddnet] <Arseniy Zarche> what the msvc uses ddnet rn?
17:46 < bridge> [ddnet] <Jupstar âœª> none
17:47 < bridge> [ddnet] <Jupstar âœª> we use mingw and ship all redistributables
17:47 < bridge> [ddnet] <Arseniy Zarche> hm ok
17:47 < bridge> [ddnet] <Jupstar âœª> it should work on win7
17:47 < bridge> [ddnet] <Jupstar âœª> i tested it on a vm lately
17:48 < bridge> [ddnet] <Jupstar âœª> make sure to update win7 to latest
17:48 < bridge> [ddnet] <Jupstar âœª> 
17:48 < bridge> [ddnet] <Jupstar âœª> here is the latest win7 64bit nvidia driver
17:48 < bridge> [ddnet] <Jupstar âœª> https://www.nvidia.com/Download/driverResults.aspx/82758/en-us
18:33 < bridge> [ddnet] <Learath2> @heinrich5991 do you know if there is some trick to get rust macros with non-local effects or some way to create a list at compile time? I need a list of annotated functions that I can call later at runtime
18:35 < bridge> [ddnet] <Learath2> (I googled around a bit and found the crate `inventory` which does this (ab)using ctor as a list which is a very ugly hack involving running code before main)
18:36 < bridge> [ddnet] <heinrich5991> @Learath2 I think you asked the same question yesterday? or am I going insane? ^^
18:37 < bridge> [ddnet] <heinrich5991> I'm not familiar with macros
18:37 < bridge> [ddnet] <Learath2> I did, but you weren't around so wanted to ask you too
18:37 < bridge> [ddnet] <heinrich5991> I googled yesterday and found out that this is essentially not possible
18:37 < bridge> [ddnet] <heinrich5991> hm
18:38 < bridge> [ddnet] <heinrich5991> maybe you can check how test crates do it?
18:38 < bridge> [ddnet] <heinrich5991> maybe it's on compiler level
18:38 < bridge> [ddnet] <heinrich5991> it does sound like you're trying to do a lot of magic tho ðŸ˜›
18:38 < bridge> [ddnet] <Learath2> Hm, I didn't write tests in rust yet, let me check how they achieve it
18:39 < bridge> [ddnet] <Learath2> @heinrich5991 I'm just trying to reproduce the magic we can achieve with the C preprocessor or in more dynamic languages like python or php
18:39 < bridge> [ddnet] <heinrich5991> ok, I think we can achieve C-level stuff
18:39 < bridge> [ddnet] <heinrich5991> are you talking about X-macros? https://en.wikipedia.org/wiki/X_Macro
18:40 < bridge> [ddnet] <Learath2> I'm looking to reproduce exactly what we have in `ddracecommands.h`. I have commands annotated with the macro `#[command]`, I need to register all annotated commands with the bot
18:44 < bridge> [ddnet] <heinrich5991> would it be okay to read the code again, from a macro?
18:45 < bridge> [ddnet] <heinrich5991> register_commands!("commands.rs");
18:45 < bridge> [ddnet] <heinrich5991> `register_commands!("commands.rs");`
18:45 < bridge> [ddnet] <Learath2> Oh, could I? `commands.rs` would also need to be generated, wouldn't that cause issues with incremental compression?
18:45 < bridge> [ddnet] <Learath2> compilation* ðŸ˜„
18:46 < bridge> [ddnet] <heinrich5991> you implement the commands and annotate them in a file, right?
18:47 < bridge> [ddnet] <Learath2> Well I have a module for each "module" and each module can register their own commands
18:47 < bridge> [ddnet] <heinrich5991> okay. can you explain why it is similar to ddracecommands.h? for me ddracecommands.h is a central list for all commands
18:48 < bridge> [ddnet] <Learath2> Well just thinking about one module at a time it's exactly like ddracecommands.h
18:48 < bridge> [ddnet] <Learath2> I don't mind doing `myawesomemodule::register_all()` I just don't know how to generate `register_all`
18:49 < bridge> [ddnet] <Learath2> In C++ `register_all()` would just be `#define CONSOLE_COMMAND(...) #include "ddracecommands.h"`
18:49 < bridge> [ddnet] <heinrich5991> where ddracecommands.h is a list of all ddrace commands?
18:49 < bridge> [ddnet] <heinrich5991> I don't see why this is different from listing all the commands
18:51 < bridge> [ddnet] <Learath2> Well we don't do it but ddracecommands.h is actually obsolete. Unreal e.g. generates a similar file at compilation from annotations on functions
18:51 < bridge> [ddnet] <Learath2> I guess they do resort to a custom preprocessor though, mh, I guess what I want isn't possible in C++ either
18:52 < bridge> [ddnet] <Learath2> It's definitely possible in php and python though, the way you annotate flask routes and/or symfony routes is what I was looking to emulate
18:53 < bridge> [ddnet] <heinrich5991> https://rocket.rs/
18:53 < bridge> [ddnet] <heinrich5991> ah, they also list them
18:53 < bridge> [ddnet] <heinrich5991> hm
18:53 < bridge> [ddnet] <Learath2> yep, that's the first thing I looked at
18:53 < bridge> [ddnet] <Learath2> I think it's just not possible right now, I saw one issue about some compile time state, maybe it'll become a RFC sometime
18:53 < bridge> [ddnet] <Learath2> anyway, just wanted to check with you whether you knew something I was missing
18:54 < bridge> [ddnet] <heinrich5991> apparently not
18:54 < bridge> [ddnet] <heinrich5991> one idea that I have, but not sure whether it'll work:
18:55 < bridge> [ddnet] <heinrich5991> annotate the module with `#[generate_register_all]` and in that macro scan the module for `#[command]` and generate a `register_all` function
18:56 < bridge> [ddnet] <Learath2> That could work, I didn't even know I was allowed to read the entire file. It shoult(tm) even work fine with incremental compilation
18:57 < bridge> [ddnet] <Learath2> It's quite fun to work with rust macros btw, having access to the ast is really nice
18:58 < bridge> [ddnet] <heinrich5991> interesting, haven't done it yet
18:59 < bridge> [ddnet] <heinrich5991> I only used `macro_rules!` to generate repetitive code https://doc.rust-lang.org/rust-by-example/macros.html
19:02 < bridge> [ddnet] <Learath2> heh, I can do this when https://github.com/rust-lang/rust/issues/54725 is stabilized
19:03 < bridge> [ddnet] <Learath2> anyway, I'll just list them all in a `#[commands(...)]` for now
19:06 < bridge> [ddnet] <heinrich5991> do you use grafana or similar? @Learath2
19:14 < bridge> [ddnet] <Learath2> nope
20:06 < bridge> [ddnet] <Learath2> @heinrich5991 if here can you take a quick look at something?
20:07 < bridge> [ddnet] <heinrich5991> sure
20:56 < bridge> [ddnet] <Nouaa> someone can help me about server side?
20:57 < bridge> [ddnet] <lynn> i would just ask your question, that way anyone checking the channel with an answer can just reply
20:57 < bridge> [ddnet] <Nouaa> yep wait
20:57 < bridge> [ddnet] <Nouaa> need some screens
21:00 < bridge> [ddnet] <Nouaa> yes so im stocking some informations with account system in a txt, as you can see m_KillCounter is here
21:00 < bridge> [ddnet] <Nouaa> https://cdn.discordapp.com/attachments/293493549758939136/851898532789223424/unknown.png
21:01 < bridge> [ddnet] <Nouaa> and now im trying to increment it when i kill someone
21:01 < bridge> [ddnet] <Nouaa> https://cdn.discordapp.com/attachments/293493549758939136/851898782240473098/unknown.png
21:01 < bridge> [ddnet] <Nouaa> that should work?
21:01 < bridge> [ddnet] <Nouaa> that code is from a old block mod
21:02 < bridge> [ddnet] <Nouaa> im trying to update it
21:04 < bridge> [ddnet] <lynn> makes sense to me but that if chain is redundant since all cases are identical
21:08 < bridge> [ddnet] <Nouaa> the "0" for the kill counter appears in my account file but doesn't increase when I kill someone
21:09 < bridge> [ddnet] <lynn> when is the file written to?
21:09 < bridge> [ddnet] <lynn> also this mod looks extremely similar to kurosio's style ðŸ˜…
21:09 < bridge> [ddnet] <lynn> i have stuff like this in the xpanic repository
21:10 < bridge> [ddnet] <Nouaa> https://github.com/Rei-Tw/blocker-mod-src
21:10 < bridge> [ddnet] <Nouaa> rly old
21:11 < bridge> [ddnet] <lynn> https://github.com/Rei-Tw/blocker-mod-src/commit/d9690c84f813fa443b784dd9afb75be69f15d141
21:11 < bridge> [ddnet] <lynn> i love reading this
21:11 < bridge> [ddnet] <lynn> https://cdn.discordapp.com/attachments/293493549758939136/851901350614925383/unknown.png
21:27 < bridge> [ddnet] <fokkonaut> chillerdragon: and u think i am the only one with such commit messages
21:29 < bridge> [ddnet] <lynn> this elco person is amazing
21:29 < bridge> [ddnet] <lynn> this eico person is amazing
21:29 < bridge> [ddnet] <lynn> half the commits are "mhm" and some of them are just "sdfsdf"
21:30 < bridge> [ddnet] <fokkonaut> thats Captain Teemo
21:30 < bridge> [ddnet] <lynn> my personal favorite is "uhm improved balls"
21:30 < bridge> [ddnet] <fokkonaut> xd
21:31 < bridge> [ddnet] <fokkonaut> half of my commits are "FixÂ§"
21:31 < bridge> [ddnet] <fokkonaut> half of my commits are "Fix"
21:40 < bridge> [ddnet] <Nouaa> https://cdn.discordapp.com/attachments/293493549758939136/851908477735010374/unknown.png
21:40 < bridge> [ddnet] <Nouaa> @lynn
21:40 < bridge> [ddnet] <lynn> LOL
21:40 < bridge> [ddnet] <Nouaa> yes so for my problem i dunno :c
22:33 < bridge> [ddnet] <timakro> On the unique race servers we have the strangest bug. After doing a certain part on a certain map which involves falling a long distance and entering a blue teleport rocket is behaving strangely. You can no longer use it to get horizontal speed, it slows you down when you try to get speed (in the usual way that is walking and shooting behind you on the ground). Does this sound familiar to somone here? Did ddnet maybe fix something like this
22:35 < bridge> [ddnet] <heinrich5991> timakro: is this reproducible? if you're going very fast horizontally, going even faster will slow your actual speed down
22:35 < bridge> [ddnet] <timakro> I'm asking because we can't reproduce on ddnet servers.
22:36 < bridge> [ddnet] <heinrich5991> hm. it's not ringing a bell for me
23:00 < bridge> [ddnet] <louis> maybe the unique servers changed the tele code
23:01 < bridge> [ddnet] <louis> or ddnet changed it and unique has a different type
