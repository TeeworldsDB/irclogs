00:00 < bridge> <chillerdragon> dp looks weird
00:00 < bridge> <chillerdragon> maybe dd xd
00:00 < bridge> <kollpotato> oh no diddy
00:00 < bridge> <kollpotato> ddnetnet_Token
00:00 < bridge> <kollpotato> because ddnet network
00:01 < bridge> <kollpotato> chatgpt suggested ddp_
00:01 < bridge> <kollpotato> i think its nice
00:01 < bridge> <chillerdragon> `dummydragraceneteworkprotocol_SecurtyToken t = 2`
00:02 < bridge> <kollpotato> lmfao and u made t just one letter
00:02 < bridge> <chillerdragon> ddp looks like ddpp which I use to refer to ddnet++ xd
00:02 < bridge> <chillerdragon> @kollpotato: xd
00:03 < bridge> <kollpotato> `ddnetp_` `ddproto_` `ddnet_proto_`
00:03 < bridge> <chillerdragon> Maybe just [
00:03 < bridge> <chillerdragon> A
00:03 < bridge> <chillerdragon> \_
00:03 < bridge> <kollpotato> wat
00:03 < bridge> <kollpotato> `[A_`
00:03 < bridge> <chillerdragon> \_Token
00:04 < bridge> <chillerdragon> Or are there other solutions than prefixes and long names?
00:04 < bridge> <chillerdragon> namespaces?
00:04 < bridge> <chillerdragon> Symbol link giga mangling?
00:04 < bridge> <kollpotato> xd too much for such small lib
00:05 < bridge> <chillerdragon> Shadowing
00:05 < bridge> <chillerdragon> Dependcy injection
00:05 < bridge> <chillerdragon> Recursion
00:05 < bridge> <chillerdragon> Idk
00:05 < bridge> <chillerdragon> Polymorphism?
00:05 < bridge> <kollpotato> hi random word generator
00:05 < bridge> <chillerdragon> Reverse symbol lookup proxy encapsulation
00:06 < bridge> <kollpotato> xD
00:06 < bridge> <kollpotato> just use char[4]
00:06 < bridge> <chillerdragon> lol ok
00:06 < bridge> <chillerdragon> What about function names tho
00:06 < bridge> <kollpotato> char[4]_decode_packet()
00:07 < bridge> <inv41idu53rn4m3> uhhh
00:07 < bridge> <inv41idu53rn4m3> Closures?
00:07 < bridge> <chillerdragon> Should all enums be defines instead? Then they can be undefed by users in case of conflicts
00:07 < bridge> <Solly (bun bun)> game engine? use ansii escapes
00:07 < bridge> <Solly (bun bun)> 
00:07 < bridge> <Solly (bun bun)> https://github.com/sollybunny/minesweeper
00:08 < bridge> <kollpotato> do i see 8 space indentation
00:08 < bridge> <chillerdragon> Xd here we go again
00:08 < bridge> <inv41idu53rn4m3> nah those are tabs, based and good
00:09 < bridge> <chillerdragon> Wait till you see that one project that uses 8 tab indentation
00:09 < bridge> <kollpotato> lmfao what
00:09 < bridge> <kollpotato> i wanna start a debate on tabs vs spaces
00:09 < bridge> <kollpotato> but no
00:09 < bridge> <kollpotato> im better than that
00:09 < bridge> <kollpotato> i know spaces are better
00:09 < bridge> <kollpotato> :kek:
00:09 < bridge> <chillerdragon> We just had that discussion
00:09 < bridge> <kollpotato> ik
00:09 < bridge> <kollpotato> i wasnt a part of it
00:10 < bridge> <chillerdragon> And I was banned for weeks because I questioned main instead of master xd
00:10 < bridge> <kollpotato> oh ddnet.org is down
00:10 < bridge> <kollpotato> i thought just the forum
00:10 < bridge> <kollpotato> banned from what??
00:10 < bridge> <chillerdragon> This channel
00:10 < bridge> <chillerdragon> @0xdeen: sos website down
00:11 < bridge> <kollpotato> lmaooo
00:11 < bridge> <kollpotato> but how can they ban irc
00:11 < bridge> <kollpotato> btw libtw2 doc still works https://ddnet.org/libtw2-doc/
00:11 < bridge> <kollpotato> bcus its rust
00:11 < bridge> <kollpotato> rust never breaks
00:11 < bridge> <chillerdragon> You can mute in irc and ban
00:11 < bridge> <inv41idu53rn4m3> I'm still a grumpy master user because I thought the reasoning was stupid and lame
00:12 < bridge> <kollpotato> wow irc more advanced than i thought
00:12 < bridge> <kollpotato> wow irc is more advanced than i thought
00:12 < bridge> <kollpotato> where did master come from
00:12 < bridge> <kollpotato> main makes sense
00:12 < bridge> <kollpotato> because its main
00:12 < bridge> <chillerdragon> Idc if master or main as long as it’s never mixed
00:13 < bridge> <chillerdragon> And since master ain’t changing there shouldn’t be any new main introduced either
00:13 < bridge> <inv41idu53rn4m3> I have no issue with main, I think it's a more sensible name than master tbh
00:14 < bridge> <kollpotato> git is linux propaganda to inject spyware
00:14 < bridge> <chillerdragon> Should propose to kog to rename main maps to master maps
00:14 < bridge> <kollpotato> XDDDD
00:14 < bridge> <kollpotato> novice maps should be init maps
00:14 < bridge> <inv41idu53rn4m3> it's master because
00:14 < bridge> <inv41idu53rn4m3> > The original of a document or of a recording. 
00:14 < bridge> <inv41idu53rn4m3> is one of the definitions of the word
00:14 < bridge> <chillerdragon> Good idea
00:15 < bridge> <kollpotato> alright makes sense
00:15 < bridge> <kollpotato> and because master sounds cool too
00:15 < bridge> <inv41idu53rn4m3> I just think the reason for switching from master to main is super far fetched and stupid and nobody is actually offended
00:15 < bridge> <kollpotato> it saves 2 bytes
00:15 < bridge> <inv41idu53rn4m3> :gigachad:
00:16 < bridge> <chillerdragon> I am too white old straight man to comment on if it’s offensive or not. I don’t think its hard to change to main so if someone is offended we can do it
00:16 < bridge> <inv41idu53rn4m3> I mean, people were offended by the argument on both sides, but nobody was actually offended in the way they claim it's offensive
00:16 < bridge> <kollpotato> chiller have u read teewars 0.1 code
00:17 < bridge> <kollpotato> its great
00:17 < bridge> <chillerdragon> No
00:17 < bridge> <kollpotato> everything was so simple back then
00:17 < bridge> <kollpotato> no varints
00:17 < bridge> <kollpotato> inputs in snapshots
00:17 < bridge> <kollpotato> epic
00:17 < bridge> <kollpotato> ```c
00:18 < bridge> <kollpotato> struct snapshot
00:18 < bridge> <kollpotato> {
00:18 < bridge> <kollpotato>     int num_items;
00:18 < bridge> <kollpotato>     int offsets[1];
00:18 < bridge> <kollpotato> 
00:18 < bridge> <kollpotato>     struct item
00:18 < bridge> <kollpotato>     {
00:18 < bridge> <kollpotato>         int type_and_id;
00:18 < bridge> <kollpotato>         char data[1];
00:18 < bridge> <kollpotato>         
00:18 < bridge> <kollpotato>         int type() { return type_and_id>>16; }
00:18 < bridge> <kollpotato>         int id() { return type_and_id&(0xffff); }
00:18 < bridge> <kollpotato>     };
00:18 < bridge> <kollpotato>     
00:18 < bridge> <kollpotato>     char *data_start() { return (char *)&offsets[num_items]; }
00:18 < bridge> <kollpotato>     item *get_item(int index) { return (item *)(data_start() + offsets[index]); };
00:18 < bridge> <kollpotato> };
00:18 < bridge> <kollpotato> ```
00:18 < bridge> <kollpotato> entire snapshot structure
00:18 < bridge> <chillerdragon> Nested structs wtf
00:18 < bridge> <kollpotato> ddnet also does that
00:18 < bridge> <kollpotato> but with classes
00:18 < bridge> <chillerdragon> Ah true this is C++ already
00:19 < bridge> <kollpotato> ```c
00:19 < bridge> <kollpotato>     // these are used to prepend data in the packet
00:19 < bridge> <kollpotato>     // used for debugging so we have checks that we 
00:19 < bridge> <kollpotato>     // pack and unpack the same way
00:19 < bridge> <kollpotato>     enum
00:19 < bridge> <kollpotato>     {
00:19 < bridge> <kollpotato>         DEBUG_TYPE_SHIFT=24,
00:19 < bridge> <kollpotato>         DEBUG_SIZE_MASK=0xffff,
00:19 < bridge> <kollpotato>         DEBUG_TYPE_INT=0x1,
00:19 < bridge> <kollpotato>         DEBUG_TYPE_STR=0x2,
00:19 < bridge> <kollpotato>         DEBUG_TYPE_RAW=0x3,
00:19 < bridge> <kollpotato>     };
00:19 < bridge> <kollpotato> ```
00:19 < bridge> <kollpotato> this is funny for me
00:19 < bridge> <kollpotato> debug mode for protocol
00:19 < bridge> <chillerdragon> Xd
00:20 < bridge> <chillerdragon> Hardware failure?
00:20 < bridge> <chillerdragon> Rip ddnet points
00:20 < bridge> <kollpotato> its just the website down
00:20 < bridge> <kollpotato> not the db right
00:20 < bridge> <chillerdragon> Isn’t it all ger1?
00:21 < bridge> <chillerdragon> Or whatever it was
00:21 < bridge> <chillerdragon> I thought there is one beefy main vps
00:21 < bridge> <chillerdragon> master\*
00:21 < bridge> <kollpotato> ger1 is a lie
00:21 < bridge> <kollpotato> its actually ger10
00:21 < bridge> <chillerdragon> then ger3
00:22 < bridge> <kollpotato> there are players
00:22 < bridge> <kollpotato> a lot of linear ones
00:22 < bridge> <chillerdragon> Blame them
00:22 < bridge> <chillerdragon> Ok gn
00:23 < bridge> <kollpotato> gn
00:24 < bridge> <kebscs> here?
00:25 < bridge> <kollpotato> yes
00:25 < bridge> <kollpotato> this channel
00:29 < bridge> <kebscs> gg
00:30 < bridge> <inv41idu53rn4m3> o whoa
00:30 < bridge> <inv41idu53rn4m3> oop nvm
00:52 < bridge> <Ewan> #developer's thoughts on peter thiel
00:53 < bridge> <Ewan> i want to know
01:02 < bridge> <kollpotato> all developers sleep
01:07 < bridge> <kebscs> no thoughts
01:08 < bridge> <imilchshake> just eepy
04:28 < bridge> <blackkkent> hi chiller, how to create map background? for my map
04:28 < bridge> <blackkkent> hi ewan
04:28 < bridge> <Ewan> hello
07:39 < bridge> <milkeeycat> chillerdragon: Ye, we need some prefix for functions and types
07:47 < bridge> <chillerdragon> @blackkkent: in the editor
07:48 < bridge> <chillerdragon> @milkeeycat: so name collision is a real problem and prefix the only option? I wasn’t sure. If so which prefix .\_.
07:49 < bridge> <chillerdragon> What about ddnet\_
07:49 < bridge> <milkeeycat> could be, we already prefixed `Packet` type with `DDNet`
07:50 < bridge> <chillerdragon> So adapt the prefix casing to the name?
07:50 < bridge> <milkeeycat> no, I think functions should have `ddnet_` prefix
07:50 < bridge> <chillerdragon> ddnet\_decode\_packet() and struct DDNetPacket
07:50 < bridge> <chillerdragon> ?
07:50 < bridge> <milkeeycat> lgtm
07:51 < bridge> <chillerdragon> But EVERYWHERE?
07:51 < bridge> <milkeeycat> for every public symbol
07:51 < bridge> <chillerdragon> DDNET\_ERR\_NONE gg
07:52 < bridge> <milkeeycat> hmm, Idk about enums, but probably yes :\
07:52 < bridge> <chillerdragon> ERR\_NONE is super conflict candidate
07:52 < bridge> <milkeeycat> check any sdk enum value xd
07:52 < bridge> <milkeeycat> how do they name it
07:52 < bridge> <milkeeycat> sdl*
07:52 < bridge> <chillerdragon> SDL\_ does this
07:52 < bridge> <chillerdragon> Also they use defines a lot o think
07:53 < bridge> <chillerdragon> And curses doesn’t do that too much which broke my project
07:53 < bridge> <milkeeycat> xd
07:54 < bridge> <milkeeycat> chillerdragon: `read` is `read` in 3 forms btw https://www.usingenglish.com/reference/irregular-verbs/read.html, only pronunciation changes, in present tense is read but in others it's red
07:55 < bridge> <chillerdragon> WTF
07:59 < bridge> <Assa> Gumo ^.^
08:13 < bridge> <blackkkent> how to change color bg?
08:56 < ws-client> <ChillerDragon> @blackkkent green dots
08:57 < bridge> <Assa> @ryozuki can we reopen #9991 ? As you said in <https://github.com/ddnet/ddnet/pull/9991#issuecomment-2768820651> you want to reopen this if this feature is wanted. We now have an issue about it and yet another discussion in #mapping
08:57 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/9991
09:02 < ws-client> <ChillerDragon> @milkeeycat i just tried making the ``buf`` const for normal packet decoding. And I had to bubble down a bunch of consts to get it to compile. Now it compiles without warnings but i think its fake.
09:02 < ws-client> <ChillerDragon> we write to the buffer in str_sanitize
09:03 < ws-client> <ChillerDragon> is that bad? now users always have to pass writeable memory to decode hm
09:03 < ws-client> <ChillerDragon> ah no its not user passed its internally malloced xd not like we talked about this yesterday all day
09:04 < ws-client> <ChillerDragon> at least when they decode a full packet
09:04 < ws-client> <ChillerDragon> i begin to agree with heinrich. this fake const stuff is super weird. Why is it possible to just ignore const xd when fix C
09:05 < bridge> <milkeeycat> wdym by just ignore const?
09:10 < bridge> <Assa> interesting, pushing to a branch of a closed PR doesn't update it anymore
09:12 < bridge> <ryozuki> idk how to from mobile, ask a other or ill do when im home
09:12 < bridge> <Assa> no worries, we are not sitting on a bomb that explodes, if you do not reopen it asap 💥
09:20 < ws-client> <ChillerDragon> @milkeeycat the ``const uint8_t *buf`` gets passed and casted around until it becomes  a ``char *`` and is being written to
09:20 < ws-client> <ChillerDragon> so the user can pass in a pointer thinking its data will not be changed only to find out it will actually be written to
09:21 < bridge> <milkeeycat> welp, then it's not const xd
09:21 < ws-client> <ChillerDragon> ye its fake const
09:21 < ws-client> <ChillerDragon> the user only sees const on the surface
09:22 < ws-client> <ChillerDragon> ``size_t fetch_chunks(const uint8_t *buf, size_t len, PacketHeader *header, OnChunk callback, void *ctx, Error *err) {``
09:22 < ws-client> <ChillerDragon> this is what the user would see and can call passing in a const buf only to find out it replaced some bytes with the ascii space
09:23 < ws-client> <ChillerDragon> seems like a bug in C to me
09:23 < ws-client> <ChillerDragon> i mean casting around void * to allow polymorphism type shit is cool and all but casting away const should be a syntax error
09:58 < bridge> <pilonpl> Btw wouldn't it be useful for the bridge to make nicks **bold**?
10:26 < bridge> <milkeeycat> cool :happy:
10:29 < bridge> <chillerdragon> Sounds like a good idea for discord. IRC has no bold
11:38 < bridge> <ryozuki> @essigautomat
11:38 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1394251650029588570/image.png?ex=68762189&is=6874d009&hm=c54836cf27d55cb5fe1a2e3128494c32dfd91ef4bc6144a8ee910787b27a9293&
11:38 < bridge> <ryozuki> i cant
11:48 < ws-client> <ChillerDragon> @milkeeycat OGMMGMGMG i had bug in the test!!B!BDDD
11:48 < ws-client> <ChillerDragon> just debugged the code for like the entire morning
11:48 < ws-client> <ChillerDragon> but code was fine
11:48 < ws-client> <ChillerDragon> az89u0doa0üdpka
11:48 < ws-client> <ChillerDragon> d
11:48 < ws-client> <ChillerDragon> i need test test driven development where tests have tests
12:03 < bridge> <kebscs> ❓
12:09 < bridge> <kebscs> But what about backwards compatibility?
12:09 < bridge> <ryozuki> i just reopened, not that i agree
12:09 < bridge> <ryozuki> but it will just sit there forever
12:09 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1394259553792692367/image.png?ex=687628e5&is=6874d765&hm=8b969a1cc87432f52046aa6508f30040bf1fe76e777dab8daf0bd1ee7b595acd&
12:16 < bridge> <kebscs> You could just act like you didn't see
12:16 < bridge> <kebscs> He has the power to reopen too
12:16 < bridge> <kebscs> :kek:
13:09 < bridge> <melon> @kebscs https://github.com/ddnet/ddnet/issues/10508
13:09 < bridge> <melon> 
13:09 < bridge> <melon> "they didnt work" - on your local machine? you're on windows iirc?
13:10 < bridge> <melon> @kebscs https://github.com/ddnet/ddnet/issues/10508
13:10 < bridge> <melon> 
13:10 < bridge> <melon> "they didnt work" - on your local machine? you're on windows iirc?
13:10 < bridge> <melon> 
13:10 < bridge> <melon> are you sure its not just a local missmatch of your ABI? (msvc vs gnu)
13:12 < bridge> <Assa> .... microsoft moment
13:12 < bridge> <Assa> (╯°□°)╯︵ ┻━┻
13:24 < bridge> <kebscs> on the ci
13:24 < bridge> <kebscs> not on my machine
13:24 < bridge> <melon> i see - weird
13:25 < bridge> <kebscs> https://github.com/KebsCS/ddnet/actions/runs/16167086728/job/45631432472
13:25 < bridge> <kebscs> this were the errors
13:25 < bridge> <kebscs> ``` = note: Warning: corrupt .drectve at end of def file␍
13:25 < bridge> <kebscs>           Warning: .drectve `-exclude-symbols:_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17h553e1dbcd4616456E ' unrecognized␍
13:25 < bridge> <kebscs>           Warning: .drectve `-exclude-symbols:"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$16new_v1_formatted17h6c7da83799dfed05E" ' unrecognized␍
13:25 < bridge> <kebscs>           Warning: .drectve `-exclude-symbols:_ZN4core3fmt2rt9UnsafeArg3new17hd3bff8496e06fd94E ' unrecognized␍```
13:25 < bridge> <kebscs> etc
13:29 < bridge> <melon> okay, linker error - yeah most likely because of an ABI missmatch
13:35 < bridge> <kebscs> if you know you can pr a fix
13:35 < bridge> <kebscs> i have no idea
13:36 < bridge> <melon> its an issue within the CI itself, i dont want to touch that
13:36 < bridge> <melon> its an issue within the CI itself then, i dont want to touch that
13:36 < bridge> <melon> its an issue within the CI itself then, i dont want to touch that.. :kek:
13:40 < ws-client> <ChillerDragon> ddnet protocol so goofed ngl
13:40 < ws-client> <ChillerDragon> did the game server just give me the same security token for multiple reconnects?
13:41 < ws-client> <ChillerDragon> does that mean i can spoof my room mates?
13:42 < bridge> <kebscs> bro 40 year old still having room mates
13:46 < bridge> <melon> https://github.com/ddnet/ddnet-rs/actions/runs/16265488999/job/45920103707?pr=127
13:46 < bridge> <melon> 
13:46 < bridge> <melon> :angy:  any rust chad who can help me find out why the CI hates me
13:46 < bridge> <melon> i cant figure it out for the life of me
13:46 < bridge> <melon> master is fine
13:46 < bridge> <melon> <a:ANGRYCAT:1117827853006938153>
14:19 < bridge> <Jupstar ✪> What's the err msg
14:20 < bridge> <melon> ```
14:20 < bridge> <melon> x86_64-pc-windows-gnu-0.4.0\lib'`
14:20 < bridge> <melon> error: failed to run custom build command for `ffmpeg-sys-next v7.1.3`
14:20 < bridge> <melon> 
14:20 < bridge> <melon> Caused by:
14:20 < bridge> <melon>   process didn't exit successfully: `D:\a\ddnet-rs\ddnet-rs\target\release\build\ffmpeg-sys-next-ae6bc9808fc18b8a\build-script-build` (exit code: 101)
14:20 < bridge> <melon>   --- stdout
14:20 < bridge> <melon>   cargo:rustc-link-search=native=D:\a\ddnet-rs\ddnet-rs\target\release\build\ffmpeg-sys-next-f44695e8ae3c4c34\out\dist\lib
14:20 < bridge> <melon>   cargo:rustc-link-lib=static=avcodec
14:20 < bridge> <melon>   cargo:rustc-link-lib=static=avdevice
14:20 < bridge> <melon>   cargo:rustc-link-lib=static=avfilter
14:21 < bridge> <melon>   cargo:rustc-link-lib=static=avformat
14:21 < bridge> <melon>   cargo:rustc-link-lib=static=avutil
14:21 < bridge> <melon>   cargo:rustc-link-lib=static=swresample
14:21 < bridge> <melon>   cargo:rustc-link-lib=static=swscale
14:21 < bridge> <melon>   cargo:rustc-link-arg=-Wl,--no-as-needed
14:21 < bridge> <melon> ```
14:27 < bridge> <Jupstar ✪> Sounds unrelated to your pr
14:27 < bridge> <melon> ye..
14:28 < bridge> <Jupstar ✪> Remind me in 2 weeks, then I'll look into it xd
14:28 < bridge> <melon> 2 weeks? oh lord!
14:28 < bridge> <melon> happy vacation
14:28 < bridge> <Jupstar ✪> Ty xd
14:28 < bridge> <milkeeycat> any gibberish speakers? what does upside down letter A mean?
14:28 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1394294564826779759/image.png?ex=68764980&is=6874f800&hm=f084ab290879cb1e44f94753398c71888e4a4d10649788c23dbf7c1f119983fa&
14:29 < bridge> <melon> for All in t
14:29 < bridge> <Assa> ^
14:30 < bridge> <milkeeycat> is there a name for this notation?
14:30 < bridge> <Assa> u (is element of) precolored or (every t (is element of) Adjacent(v) and OK(t, u))
14:30 < bridge> <Assa> mathematical notation ig?
14:30 < bridge> <melon> universal quantifier
14:30 < bridge> <melon> or just the entire notation?
14:31 < bridge> <learath2> If any of you want to give it a quick glance
14:31 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1394295122505765004/SecureBoot.pdf?ex=68764a05&is=6874f885&hm=e855d1cc70db88d07eb2e071c8063ac17f085989b932115fff27d0747a27d112&
14:31 < bridge> <learath2> If any of you want to give it a quick glance it'd be appreciated
14:31 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1394295122505765004/SecureBoot.pdf?ex=68764a05&is=6874f885&hm=e855d1cc70db88d07eb2e071c8063ac17f085989b932115fff27d0747a27d112&
14:31 < bridge> <Jupstar ✪> Master thesis?
14:31 < bridge> <learath2> Someone is going into optimization theory
14:32 < bridge> <Assa> <https://en.wikipedia.org/wiki/Set-builder_notation>
14:32 < bridge> <milkeeycat> I want to add register coalescing :owo: and rewrite register allocator :pepeW:
14:32 < bridge> <learath2> Nooo, just needed some example of academic writing so I wrote some stuff
14:33 < bridge> <Assa> I believe this is an actual usecase where asking AI would help
14:33 < bridge> <milkeeycat> It lied to me so many times, I don't trust it anymore xd
14:34 < bridge> <learath2> Well it kept lying to me all the time. I just used it to find typos for me instead
14:34 < bridge> <melon> XDD
14:34 < bridge> <melon> can we just convince AI to be honest about NOT knowing something
14:34 < bridge> <Jupstar ✪> You just have to pay 200$ for the premium ai, trust me bro
14:35 < bridge> <learath2> It gives me an insane claim. I tell it it's insane, it says no it's real. I give it the UEFI spec and the UEFI PI spec, ask it to find me this insane quote. It tells me there is a related quote on page 2800 of a 2300 page document, in section 32.3.3. The related quote it tells me is not in the document and section 32.3.3 has nothing to do with it
14:35 < bridge> <learath2> Anyone who thinks these things can think at any capacity is frankly insane
14:35 < bridge> <Assa> guys do you not proof read what the ai says/does? like sometimes it's easier to go in reverse from a "solution"
14:36 < bridge> <Jupstar ✪> I use another ai to proof read ofc
14:36 < bridge> <melon> fr, ask claude
14:36 < bridge> <melon> run it through grok
14:36 < bridge> <melon> factcheck it by chatgpt
14:36 < bridge> <melon> apply fixes by cursor
14:36 < bridge> <melon> have memes created by phind
14:36 < bridge> <Assa> I agree, totally even, still I find use of them
14:37 < bridge> <learath2> I just use it for much much simpler things, finding typos, finding me sources to read
14:38 < bridge> <ryozuki> Daily question:
14:38 < bridge> <ryozuki> 
14:38 < bridge> <ryozuki> Imagine you have a function that takes 14 parameters, but has a short body, like creating a struct.
14:38 < bridge> <ryozuki> 
14:38 < bridge> <ryozuki> Does forcing inline improve perfomance?
14:38 < bridge> <Jupstar ✪> Ppl that care about their solutions will defs notice that ai gets worse with increasing complexity
14:38 < bridge> <Jupstar ✪> Most likely
14:39 < bridge> <learath2> It would be no worse, since the compiler would probably inline it even if you didn't ask it to
14:39 < bridge> <Assa> maybe, if the compiler doesn't force it inline anyways
14:39 < bridge> <pilonpl> what's the purpose of ddnet-rs? is it just a project for fun or what
14:39 < bridge> <melon> jupstar just dabbed on all of us with it and i like so it so i use it pretty often
14:39 < bridge> <Jupstar ✪> It's serious af
14:40 < bridge> <melon> jupstar just dabbed on all of us with it and i like it so i use it pretty often
14:40 < bridge> <ryozuki> correct, preparing lot of parameters has overhead, and most compilers wont optimize a big function because one of the first hints they use is "will inlining this make the caller way bigger?" and is often true for thise, but it prevents looking at optimizations after inlining such big function, which may make the code smaller actually
14:40 < bridge> <ryozuki> correct, preparing lot of parameters has overhead, and most compilers wont inline a big function because one of the first hints they use is "will inlining this make the caller way bigger?" and is often true for thise, but it prevents looking at optimizations after inlining such big function, which may make the code smaller actually
14:41 < bridge> <Jupstar ✪> The purpose was actually to write a ddnet clone without all the burden we have right now with backward compat, breaking forks etc.
14:41 < bridge> <Jupstar ✪> 
14:41 < bridge> <Jupstar ✪> Technically up to date, good modding support etc
14:41 < bridge> <ryozuki> i asked this cuz today i improved perf by 30% on a benchmark forcing inline of a stupid constructor taking 14 parameters
14:41 < bridge> <ryozuki> maybe more like 40%
14:41 < bridge> <learath2> Instead you wrote a teeworlds clone, with no compat, no forks, no mods 😛
14:41 < bridge> <Jupstar ✪> Oh wow, that thing must have been very hot path
14:41 < bridge> <melon> i fork, it has compat
14:41 < bridge> <ryozuki> it is in the hot hot path
14:42 < bridge> <melon> and i'll make the best twinbop twerking mod you'll ever see!
14:42 < bridge> <learath2> Is the benchmark realistic though? If it's calling the constructor a billion times a second but your actual program isn't then it's not an accurate measurement of improvement
14:42 < bridge> <Jupstar ✪> At least it was a huge bonus project for hiring interviews yet xd
14:43 < bridge> <Jupstar ✪> Yeah you know i just slammed 200k rust project xd
14:43 < bridge> <melon> :pog: landed a rust job yet?
14:43 < bridge> <Jupstar ✪> Yes :deen_star:
14:43 < bridge> <always> make on stream
14:43 < bridge> <melon> LETSGOO
14:43 < bridge> <ryozuki> i would say its like 20% realistic
14:43 < bridge> <ryozuki> xd
14:43 < bridge> <ryozuki> but its a requirement to improve this
14:43 < bridge> <ryozuki> from bossman
14:44 < bridge> <always> does that mean ddnet-rs will be worked on less?
14:44 < bridge> <Jupstar ✪> Yes xd
14:44 < bridge> <ryozuki> i still think its worth it
14:44 < bridge> <learath2> So overall it's still 20% of 40%, which gives an 8% real improvement, so still not bad
14:45 < bridge> <kebscs> classic rust rewrite
14:45 < bridge> <ryozuki> arentall non comercial projects for fun? but actually ddnet-rs has more features than ddnet
14:45 < bridge> <pilonpl> i'll try it when it finishes compiling
14:45 < bridge> <Jupstar ✪> Cya tomorrow
14:46 < bridge> <pilonpl> why does this download more packages than npm?
14:46 < bridge> <Jupstar ✪> Depends on the project
14:47 < bridge> <learath2> cargo is well known for downloading a billion things
14:47 < bridge> <Assa> it's like a cargo ship, a million containers
14:50 < bridge> <pilonpl> wow it actually looks kinda nice
14:55 < bridge> <pilonpl> that's weird
14:55 < bridge> <pilonpl> https://cdn.discordapp.com/attachments/293493549758939136/1394301193622261880/image.png?ex=68764fad&is=6874fe2d&hm=bb65d47b259e08c241ec2a701b7588d77d7939d07f214df17588f7b7ab3f791c&
14:57 < bridge> <Assa> interesting port
15:04 < bridge> <pilonpl> it's definitely not ready but still pretty cool
15:07 < bridge> <pilonpl> i have no idea how to change my nick lol
15:13 < bridge> <Jupstar ✪> Yeah no idea why servers don't always respond, maybe something related to libtw2
15:13 < bridge> <Jupstar ✪> Should be rather similar to normal ddnet
15:34 < bridge> <chairn> there are way too many acronyms, it's almost impossible to follow without a general scheme
15:35 < bridge> <chairn> > For the purposes of this discussion we assume Verified mode is
15:35 < bridge> <chairn> > used. The ACM now uses the OEM IBB key to verify the IBB. IBB
15:35 < bridge> <chairn> > usually contains only the SEC and PEI parts of the UEFI firmware,
15:35 < bridge> <chairn> > leaving the DXE to the OEM Boot Block (OBB). The OBB is not
15:35 < bridge> <chairn> > verified by Boot Guard, that job is delegated to the platform vendor
15:35 < bridge> <chairn> it's unbearable mate 😄
15:36 < bridge> <learath2> Mh, I had all of them expanded but then it read weird to me
15:37 < bridge> <chairn> Prefer a scheme which will be much more comprehensible
15:38 < bridge> <learath2> Scheme as in another flowchart?
15:39 < bridge> <chairn> for instance
15:40 < bridge> <chairn> or whatever makes more sense, but a graphical representation would greatly help
15:40 < bridge> <learath2> I'll try to make one, thanks
15:44 < bridge> <chairn> Also add some more references. You can add one for each CVE quoted
15:47 < bridge> <learath2> Yeah I'm adding citations now, after that I'll try to make a graph that fits
15:49 < bridge> <ChnFreddie> casually throwing lerato under the bus
16:11 < bridge> <murpi> @tsfreddie Cure my depression please
16:12 < bridge> <ChnFreddie> :pepeW: i have my own
16:29 < bridge> <teero777> https://tenor.com/view/happy-cat-silly-cat-happy-cat-smile-gif-11748501437476694103
16:32 < bridge> <ChnFreddie> https://cdn.discordapp.com/attachments/252358080522747904/1358782871975886918/28D41719581BDCAA02CC9453DB4FF14E.gif
16:58 < bridge> <learath2> Don't really have much more time so I'm done I think. I added a chart, cited as much as I could, thanks
16:58 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1394332217387253760/SecureBoot.pdf?ex=68766c92&is=68751b12&hm=c679972b94f272d9c363c4eba66805a266b228b47c6ee9174d1df4c8517ee3cd&
16:59 < bridge> <learath2> @murpi @tsfreddie I suggest both of you simply just not be depressed. It's that easy
17:05 < bridge> <ChnFreddie> I thought that was a pdf for selfhelp
17:05 < bridge> <learath2> The excalidraw was for me to reason about how things work
17:06 < bridge> <learath2> It's not really all that serious honestly, just a writing sample, but I got too invested in it for some reason
17:31 < bridge> <always> @chillerdragon can you make kill death and save best spree on ur mult easy bot?
17:50 < bridge> <milkeeycat> chillerdragon: do you want to take ownership of the repo? I feel bad rejecting your prs :feelsbadman:
18:20 < bridge> <learath2> If any of you want to give it a quick glance it'd be appreciated
18:20 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1394295122505765004/SecureBoot.pdf?ex=68764a05&is=6874f885&hm=e855d1cc70db88d07eb2e071c8063ac17f085989b932115fff27d0747a27d112&
18:29 < bridge> <pilonpl> why does new demo start when connecting a dummy?
18:29 < bridge> <pilonpl> https://cdn.discordapp.com/attachments/293493549758939136/1394355007050088448/image.png?ex=687681cb&is=6875304b&hm=6a6229042a03008b35345652bd5cd5f7bc1ffd3a51d912d1b4fb3fe7eaee9956&
18:29 < bridge> <learath2> 10470 is heating up
18:45 < bridge> <ryozuki> xd
18:53 < bridge> <melon> TeamSpeak allows Server self hosting
18:53 < bridge> <melon> Ddnet TeamSpeak when??? :nouis:
18:59 < bridge> <pilonpl> DDNet spacial voice chat when?
19:00 < bridge> <Assa> watchout they have some limits until you need a proper license
19:04 < bridge> <learath2> We had one for like a decade, did you ever use it?
19:05 < bridge> <melon> no
19:05 < bridge> <melon> https://cdn.discordapp.com/attachments/293493549758939136/1394364098900393994/image.png?ex=68768a43&is=687538c3&hm=ad0d7b45066adde0a149a8b62c69ee0e78c19df46186638d981cd791cedd0d3e&
19:05 < bridge> <melon> wait actually
19:05 < bridge> <melon> i think i did, shortly after skype died
19:05 < bridge> <melon> but that was a good.. decade ago
19:05 < bridge> <melon> i think i did, shortly after skype died (or rather, people stopped using it exclusively
19:06 < bridge> <melon> i think i did, shortly after skype died (or rather, people stopped using it exclusively)
19:07 < bridge> <learath2> I used teamspeak and mumble for many years, until my friends stabbed me in the back and migrated to Discord. I considered cutting them off, but then migrated myself
19:08 < bridge> <melon> i can still hear the good old "user entered your channel"
19:08 < bridge> <melon> INSUFFICENT PERMISSIONS
19:09 < bridge> <learath2> Someone should make something like matrix but much less confusing. I engineer computers and even I don't want to mess with matrix
19:09 < bridge> <melon> xD, ChillerDragon: get on it!
19:31 < bridge> <chairn> ah much better 😉
19:33 < bridge> <pilonpl> so it's not just me who finds it confusing
19:45 < bridge> <kollpotato> @vzechz fat
19:45 < bridge> <vzechz> :ragecat:
20:32 < bridge> <chairn> https://james-iry.blogspot.com/2009/05/brief-incomplete-and-mostly-wrong.html
21:21 < bridge> <learath2> I should try blogging. I do like to write stuff and pretend I'm smart
21:22 < bridge> <kollpotato> start writing then
21:22 < bridge> <kollpotato> i would read it
21:23 < bridge> <pilonpl> first you need a good topic
21:23 < bridge> <pilonpl> for example what would happen if you swapped x axis with time axis in a video?
21:23 < bridge> <pilonpl> very original topic
21:23 < bridge> <pilonpl> and maybe there is something interesting about it
21:31 < bridge> <pilonpl> Creating a language also seems interesting
21:31 < bridge> <pilonpl> Maybe some alien langauge
21:32 < bridge> <pilonpl> Which can express ideas beyond human understanding
21:32 < bridge> <pilonpl> Which could be kinda impossible to create
21:33 < bridge> <pilonpl> Because you wouldn't be able to understand it
22:23 < ws-client> <ChillerDragon> @milkeeycat xd dont feel bad its your repo. Im not hijacking it. I value your reviews. You can reject whatever you want no need to try to lose in rock paper scissor if you dont like a pr.
22:24 < bridge> <milkeeycat> We're switching to fng
22:25 < ws-client> <ChillerDragon> xd
22:25 < ws-client> <ChillerDragon> @learath2 matrix is bad yes i can confirm i didnt really look into it but from what i feel and hear its a weird ass protocol
22:25 < ws-client> <ChillerDragon> i think there are many good alterantives already
22:25 < ws-client> <ChillerDragon> arent ppl building a perfect discord clone on a weekly basis?
22:27 < bridge> <melon> depends on how you define "perfect" discord clone
22:27 < bridge> <melon> 
22:27 < bridge> <melon> discord holds so many advantages for the fact that its free
22:27 < bridge> <milkeeycat> every day there's a new js framework
22:27 < bridge> <milkeeycat> every few days there's a new programming language
22:27 < bridge> <milkeeycat> every week there's a new discord killer
22:27 < bridge> <melon> i know people who use discord as a temporary filestorage :kekw:
22:27 < ws-client> <ChillerDragon> i use discord as permanent file storage
22:32 < bridge> <louis> aren't they expiring files now
22:32 < bridge> <louis> and idk there's not many convenient temp tile transfer apps out there
22:32 < bridge> <louis> if anyone knows a selfhosted one with ios app support lmk
22:39 < ws-client> <ChillerDragon> 404 omagwad https://forum.ddnet.org/
22:40 < ws-client> <ChillerDragon> well my discord image in the forum signature survived longer than the forum it self xd
22:40 < ws-client> <ChillerDragon> they just added these annoying session tokens
22:41 < ws-client> <ChillerDragon> @louis isnt discord still fine as file transfer?
22:42 < ws-client> <ChillerDragon> i sometimes self host this to upload from my ios xd but its web and its horrible xd https://github.com/OpenTube/OpenImg
23:21 < bridge> <louis> rly annoying to upload to the correct server from ios
23:23 < bridge> <chillerdragon> @louis.place: how so?
23:27 < bridge> <louis> Im in like 30 servers and when i wanna upload stuff to my personal server i gotta scroll and find its name
23:28 < bridge> <louis> also theres a filesize limit that often gets hit for videos etc
