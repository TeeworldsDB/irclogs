08:17 <+bridge> [ddnet] <Learath2> I'm downloading so many teehistorian files rsyncs `--append-verify` is taking a couple minutes to finish verifying on resume
08:40 <+bridge> [ddnet] <Learath2> accidentally unplugged the drive, now I have to wait half an hour for fsck to complete
09:15 <+bridge> [ddnet] <Learath2> exFAT is absolutely not made for storing files like this
09:16 <+bridge> [ddnet] <Learath2> teehistorian is really good at exposing the shortcomings of using a filesystem as a db
09:18 <+bridge> [ddnet] <Ryozuki> :monkaS:
09:20 <+bridge> [ddnet] <Learath2> Some research reveals all cross platform filesystems are shite
09:54 <+bridge> [ddnet] <Learath2> quicc tips by /me: If any of you have to mess around with exfat, you can be much faster than coretools if you examine the raw file system
09:56 <+bridge> [ddnet] <Learath2> e.g. I needed to count files, so I hexdumped the directory entries, and grepped that instead üòõ
10:20 <+bridge> [ddnet] <Ryozuki> just format ur drive a ext4
10:49 <+bridge> [ddnet] <Learath2> No good FUSE driver for ext
10:50 <+bridge> [ddnet] <Learath2> No thus ext support on mac or windows
10:50 <+bridge> [ddnet] <Learath2> Thus no*
10:55 <+bridge> [ddnet] <Ryozuki> who cares about mac or windows
10:56 <+bridge> [ddnet] <Ryozuki> :greenthing:
10:58 <+bridge> [ddnet] <Learath2> yes yes linux superior and all but 90% of world desktop users don't use it, so until that changes a lot of people care
10:59 <+bridge> [ddnet] <Ryozuki> not me :greenthing:
10:59 <+bridge> [ddnet] <Ryozuki> @Learath2 what about btrfs
10:59 <+bridge> [ddnet] <Ryozuki> there is a open source driver for it on windows
10:59 <+bridge> [ddnet] <Ryozuki> it works well i tested it
10:59 <+bridge> [ddnet] <Ryozuki> https://github.com/maharmstone/btrfs
10:59 <+bridge> [ddnet] <Learath2> I don't think there is a macOS driver for it :/
10:59 <+bridge> [ddnet] <Ryozuki> does rly macos not support it
10:59 <+bridge> [ddnet] <Ryozuki> shouldnt it be ez
10:59 <+bridge> [ddnet] <Ryozuki> since its unix
11:00 <+bridge> [ddnet] <Learath2> you'd think so, but porting filesystems is apparently not easy, for some reason
11:01 <+bridge> [ddnet] <Ryozuki> @Learath2 ntfs?
11:01 <+bridge> [ddnet] <Ryozuki> i saw talks about improving the driver for it on linux
11:02 <+bridge> [ddnet] <Ryozuki> maybe soon it lands
11:02 <+bridge> [ddnet] <Learath2> Sadly I think the only good choice for a cross platform fs is ntfs
11:02 <+bridge> [ddnet] <Ryozuki> https://www.phoronix.com/scan.php?page=news_item&px=Torvalds-PR-For-NTFS3
11:19 <+bridge> [ddnet] <Learath2> I'm surprised microsoft hasn't submitted a ntfs driver yet btw. They were doing so much on linux lately
12:49 <+bridge> [ddnet] <Learath2> @Ryozuki is your python good?
12:51 <+bridge> [ddnet] <gerdoe> ye, he actually feeds it with mice üòõ
12:54 <+bridge> [ddnet] <Ryozuki> i know some python
12:59 <+bridge> [ddnet] <Learath2> mh, nvm I found a bug in pythons mmap module
12:59 <+bridge> [ddnet] <Learath2> or atleast in how it interacts with re
13:00 <+bridge> [ddnet] <heinrich5991> uh oh
13:04 <+bridge> [ddnet] <Ryozuki> oh uh
13:22 <+bridge> [ddnet] <Learath2> okay it's not mmap I have no idea what it is..
13:23 <+bridge> [ddnet] <Ryozuki> https://thehistoryoftheweb.com/a-fun-list-of-browsers-youve-never-heard-of/
13:28 <+bridge> [ddnet] <Learath2> LOL a single tempfile in the directory broke my assumption that the directory entries are properly aligned...
13:28 <+bridge> [ddnet] <Learath2> wasted an entire hour
14:16 <+bridge> [ddnet] <deen> that‚Äòs why you use a library instead of looking at the memory yourself
15:47 <+bridge> [ddnet] <Learath2> @deen I doubt many exfat dirent parsing libraries exist
15:47 <+bridge> [ddnet] <Learath2> üòÑ
15:52 <+bridge> [ddnet] <Learath2> hm, FATtools does exist apparently, I wonder if it exposes it's internal data structures though
15:53 <+bridge> [ddnet] <Learath2> Actually if walking the list was fast `ls` would probably be fast too
16:00 <+bridge> [ddnet] <Ryozuki> @Learath2 <https://github.com/rust-lang/rust/pull/86761>
16:00 <+bridge> [ddnet] <Ryozuki> @Learath2 https://github.com/rust-lang/rust/pull/86761
16:00 <+bridge> [ddnet] <Ryozuki> :monkalaugh:
16:00 <+bridge> [ddnet] <Ryozuki> imagine c++
16:00 <+bridge> [ddnet] <Ryozuki> i wonder how fast stof is
16:16 <+bridge> [ddnet] <Patiga> @Learath2 it would be really helpful if it was possible for me to somehow debug the bot
16:16 <+bridge> [ddnet] <Patiga> in this case for example `handle_submission_approve` fails when C√∏ke tries to approve the map of the bot, on my test server that seems to work all the time though, I can't get it to not work there
16:26 <+bridge> [ddnet] <chillerdragon> any nodejs express devs here?
16:32 <+bridge> [ddnet] <Learath2> C++ charconv on msvc already uses eisel lemire iirc
16:32 <+bridge> [ddnet] <Learath2> That's C++20 only tho
16:34 <+bridge> [ddnet] <Learath2> @Patiga well you can let me know what kind of access you need to debug it and I can help you. I can also run a debug build. I also have a version of discord.py that goes through mitmproxy if you have an issue on the api side
16:39 <+bridge> [ddnet] <Patiga> yea the problem is that I don't know myself how to debug python nicely. I want to know where exactly the command returns early. On my test server I usually just do printf debugging, since the logs do not report when a function returns early
16:46 <+bridge> [ddnet] <chillerdragon> poggers
16:47 <+bridge> [ddnet] <Ryozuki> @deen Quentincube aka coradax
16:47 <+bridge> [ddnet] <Ryozuki> üëÄ
16:47 <+bridge> [ddnet] <deen> ok
16:55 <+bridge> [ddnet] <chillerdragon> big dox coradax real life name is quentincube
17:09 <+bridge> [ddnet] <Patiga> @Learath2 access to logs would already help a lot
17:12 <+bridge> [ddnet] <Boti.> time to use "record best run" option
17:12 <+bridge> [ddnet] <Boti.> :poggers:
17:14 <+bridge> [ddnet] <Learath2> @Patiga I think murpi gave you related log lines. We can also do printf debugging when I get home
17:14 <+bridge> [ddnet] <Learath2> The way the bot is coded my guess would be a failed api call that doesnt result in a rollback of previous actions
17:14 <+bridge> [ddnet] <Patiga> yeah murpi gave me super useful lines, I kinda assumed that everything fails silently somewhere
17:15 <+bridge> [ddnet] <Boti.> nah fuck
17:30 <+bridge> [ddnet] <Patiga> @Learath2 did you also symlink the binary 'check_ddnet'? (there are 3 used binaries in total, 'debug_load', 'check_ddnet' and 'edit_map')
17:31 <+bridge> [ddnet] <Learath2> I think I did but you can get murpi to check
17:35 <+bridge> [ddnet] <Patiga> assuming that the logs of the bot are in `logs/bot.log`, could you check if the file `data/map-testing/check_ddnet` exists @murpi ?
18:19 <+bridge> [ddnet] <Patiga> @Learath2 would be nice if you could get those commits in when you have the time
22:49 <+bridge> [ddnet] <chillerdragon> any leet hax0rs upgraded to python2 yet?py2```python
22:49 <+bridge> [ddnet] <chillerdragon> >>> print("'\xcd\x8f'")
22:49 <+bridge> [ddnet] <chillerdragon> 'Õè'
22:49 <+bridge> [ddnet] <chillerdragon> ```py3```python
22:49 <+bridge> [ddnet] <chillerdragon> >>> print("'\xcd\x8f'")
22:49 <+bridge> [ddnet] <chillerdragon> '√ç'
22:49 <+bridge> [ddnet] <chillerdragon> ```how do i get the same empty character in py3?
22:53 <+bridge> [ddnet] <Ryozuki> i think this is due py2 not being utf8 by default
22:54 <+bridge> [ddnet] <Ryozuki> or idk
23:28 <+bridge> [ddnet] <deen> Yes, what Python3 is doing is equivalent to what Python2 is doing with a unicode string, so `print(u"'\xcd\x8f'")`
23:40 <+bridge> [ddnet] <pedrao> Can anyone tell me how I download the Island Rush map?
23:41 <+bridge> [ddnet] <Knuski> https://cdn.discordapp.com/attachments/293493549758939136/868971340940603412/Island_Rush_709a1d8c_365ea9ad145f85f69c4a742927d3dad26ca50ba9401f853107297bb7f2e2d58c.map
23:45 <+bridge> [ddnet] <deen> https://github.com/ddnet/ddnet-maps/raw/master/types/novice/maps/Island%20Rush.map
23:46 <+bridge> [ddnet] <deen> or https://maps2.ddnet.tw/Island%20Rush_365ea9ad145f85f69c4a742927d3dad26ca50ba9401f853107297bb7f2e2d58c.map
