04:32 <+bridge> [ddnet] <M1H40S> $help
04:32 <+bridge> [ddnet] <DDNet> Use `$help [command]` for more info on a command.
04:32 <+bridge> [ddnet] <DDNet> You can also use `$help [category]` for more info on a category.
04:32 <+bridge> [ddnet] <DDNet> 
04:32 <+bridge> [ddnet] <DDNet> __**DDNet Status**__
04:32 <+bridge> [ddnet] <DDNet> ddosâ€‚find
04:32 <+bridge> [ddnet] <DDNet> __**Github**__
04:32 <+bridge> [ddnet] <DDNet> build_status
04:32 <+bridge> [ddnet] <DDNet> __**Memes**__
04:32 <+bridge> [ddnet] <DDNet> angryâ€‚clownâ€‚drakeâ€‚happyâ€‚ohnoâ€‚sleepâ€‚teebobâ€‚teeward
04:32 <+bridge> [ddnet] <DDNet> __**Misc**__
04:32 <+bridge> [ddnet] <DDNet> aboutâ€‚avatarâ€‚commandstatsâ€‚emojisâ€‚inviteâ€‚timeâ€‚weather
04:32 <+bridge> [ddnet] <DDNet> __**Profile**__
04:32 <+bridge> [ddnet] <DDNet> hoursâ€‚mapâ€‚pointsâ€‚profileâ€‚total_time
04:32 <+bridge> [ddnet] <DDNet> __**Votes**__
04:32 <+bridge> [ddnet] <DDNet> kick
04:32 <+bridge> [ddnet] <DDNet> __**â€‹No Category**__
04:32 <+bridge> [ddnet] <DDNet> help
04:32 <+bridge> [ddnet] <M1H40S> $invite
04:32 <+bridge> [ddnet] <DDNet> <https://discord.com/oauth2/authorize?client_id=421296159290687488&scope=bot&permissions=537259072>
04:33 <+bridge> [ddnet] <M1H40S> $commandstats
09:00 <+bridge> [ddnet] <Ryozuki> @M1H40S pls use the bot in #bot-cmds not here
11:04 <+bridge> [ddnet] <TsFreddie> https://twitter.com/Carnage4Life/status/1414456199194451970?s=20
12:11 <+bridge> [ddnet] <jkjk> the bot should be muted in this channel i guess
16:17 <+bridge> [ddnet] <M1H40S> Yes, I realized later. sorry
19:50 <+bridge> [ddnet] <Kaffeine> Hello.
19:50 <+bridge> [ddnet] <Kaffeine> Is there a stack-allocated array class?
19:50 <+bridge> [ddnet] <Kaffeine> What I want is to have a container of max N elements with methods to add/remove elements, as well as const size/contains/indexOf methods.
19:50 <+bridge> [ddnet] <Kaffeine> 
19:50 <+bridge> [ddnet] <Kaffeine> std::array has a fixed size.
19:50 <+bridge> [ddnet] <Kaffeine> array<> in base/tl seems to be always dynamically allocated.
19:50 <+bridge> [ddnet] <Kaffeine> 
19:50 <+bridge> [ddnet] <Kaffeine> I'm tired of dealing with C arrays and a separated size counter.
19:50 <+bridge> [ddnet] <Kaffeine> 
19:50 <+bridge> [ddnet] <Kaffeine> https://github.com/ddnet/ddnet/blob/dbc05f6bb03b89d573dcda0e085206d58665d14e/src/game/server/entities/character.h#L93-L94
19:51 <+bridge> [ddnet] <Kaffeine> We have a lot of such stuff in the code. E.g.
19:51 <+bridge> [ddnet] <Kaffeine> in the character:
19:51 <+bridge> [ddnet] <Kaffeine>     CEntity *m_apHitObjects[10];
19:51 <+bridge> [ddnet] <Kaffeine>     int m_NumObjectsHit;
19:52 <+bridge> [ddnet] <Kaffeine> It is easy to code such a container and I can do it if we don't have it yet.
19:52 <+bridge> [ddnet] <Kaffeine> I just don't want to reinvent the wheel.
20:06 <+bridge> [ddnet] <Learath2> Not in C++, but there is `boost::static_vector`, it's not too hard to implement such a type
20:07 <+bridge> [ddnet] <Learath2> if you don't want the hybrid behaviour it's even easier
20:07 <+bridge> [ddnet] <Learath2> if you want the hybrid behaviour I think you can abuse an allocator to get this done
20:07 <+bridge> [ddnet] <Kaffeine> Yes, that is it. And yes it is not hard to implement and this is why I'm so wonder nobody implemented it in DDNet yet.
20:08 <+bridge> [ddnet] <Learath2> look at the state of the code and tell me that's our biggest problem ðŸ˜„
20:13 <+bridge> [ddnet] <gerdoe> :troll:
20:26 <+bridge> [ddnet] <gerdoe> lol what's that
20:32 <+bridge> [ddnet] <fokkonaut> https://cdn.discordapp.com/attachments/293493549758939136/864574903130652672/alt-gr-tastenkombinationen.png
20:32 <+bridge> [ddnet] <fokkonaut> bottom right
20:32 <+bridge> [ddnet] <fokkonaut> i just noticed, because i had something bound on LEFT control, and then I was like wait wtf, does right and left control equal, like is there a bug? and then i noticed it wasnt right control, it was ALT GR which I pressed accidently
20:34 <+bridge> [ddnet] <fokkonaut> its kinda like using CTRL and ALT at the same time, for example @ i can do with ALT GR + Q, or with LEFT control + ALT + Q
20:34 <+bridge> [ddnet] <fokkonaut> because it works like this it probably gets detected as lctrl
20:34 <+bridge> [ddnet] <fokkonaut> (because ALT + right ctrl doesnt make an @, its specified to the left one)
20:44 <+bridge> [ddnet] <Jupstar âœª> for me they are different
20:44 <+bridge> [ddnet] <Jupstar âœª> have u looked in the source, maybe SDL reports them wrongly?
20:46 <+bridge> [ddnet] <Jupstar âœª> atleast i cannot trigger my ctrl bind with it
21:09 <+bridge> [ddnet] <fokkonaut> i can, always :D idk about the sdl backend stuff :/
21:09 <+bridge> [ddnet] <Jupstar âœª> maybe its also a linux thing
21:09 <+bridge> [ddnet] <fokkonaut> but dont worry, its not your issue
21:09 <+bridge> [ddnet] <fokkonaut> its also in vanilla 0.7
21:09 <+bridge> [ddnet] <fokkonaut> no, i am on windows
21:09 <+bridge> [ddnet] <Jupstar âœª> i also cant @ with ctrl + alt
21:09 <+bridge> [ddnet] <Jupstar âœª> only with alt gr
21:10 <+bridge> [ddnet] <Jupstar âœª> yes
21:10 <+bridge> [ddnet] <fokkonaut> you have to use left ctrl
21:10 <+bridge> [ddnet] <fokkonaut> ah
21:10 <+bridge> [ddnet] <Jupstar âœª> u are on windows xd
21:10 <+bridge> [ddnet] <fokkonaut> ah you mean it the other way round
21:10 <+bridge> [ddnet] <Jupstar âœª> yeah was bit missleading ðŸ˜„
21:11 <+bridge> [ddnet] <fokkonaut> anyways, its probably only happening on GER keyboards (or language setting), and then only on windows
21:11 <+bridge> [ddnet] <fokkonaut> my guess
21:11 <+bridge> [ddnet] <Jupstar âœª> possible yeah
21:11 <+bridge> [ddnet] <fokkonaut> german is always special
21:11 <+bridge> [ddnet] <fokkonaut> xD
21:15 <+bridge> [ddnet] <Jupstar âœª> apparently its just ralt for me
21:16 <+bridge> [ddnet] <Jupstar âœª> i wonder if we can force SDL to just do that on windows
21:16 <+bridge> [ddnet] <fokkonaut> :D
