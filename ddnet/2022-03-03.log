00:01 <+bridge_> [ddnet] <louis> can any smart ddnet devs explain how freeze is interpolated in 50 ticks per second
00:01 <+bridge_> [ddnet] <louis> (like how not being able to skip a freeze or tele works)
00:01 <+bridge_> [ddnet] <louis> does it calculate a linear path between ticks and apply all the tiles?
00:16 <+bridge_> [ddnet] <Chairn> i think that's exactly what it's doing
00:16 <+bridge_> [ddnet] <Chairn> however, it does not apply all the tiles
00:16 <+bridge_> [ddnet] <Chairn> i think it first looks for kill, then tele, then freeze
00:47 <+bridge_> [ddnet] <HELLOXD> Hey @r2d2!~, have you and DDNet Staff talked about getting ur mapping tool into the DDNet Client?
00:47 <+bridge_> [ddnet] <HELLOXD> And is there a full release planned?
08:14 <+bridge_> [ddnet] <ReiTW> Why so if ddnet already implements a map editor
08:15 <+bridge_> [ddnet] <ReiTW> Or maybe ur talking about smth else
09:01 <+bridge_> [ddnet] <Jupstar> the tool is written in C# and for Windows (even tho i dunno if it couldn't be used in other OS), so it is unlikely that it will be added
09:02 <+bridge_> [ddnet] <ReiTW> + what's the point if ddnet includes a map editor also
09:16 <+bridge_> [ddnet] <Learath2> Mono can maybe run it
09:17 <+bridge_> [ddnet] <Jupstar> but it also uses d3d11
09:17 <+bridge_> [ddnet] <Jupstar> also the license dont match, but still very impressive editor
09:17 <+bridge_> [ddnet] <Jupstar> our editor is pretty bad xD
09:18 <+bridge_> [ddnet] <Learath2> Have you taken a look at editor2 on 0.7? I quite like it. I wonder if we should try to get it into ddnet
09:19 <+bridge_> [ddnet] <Jupstar> yeah it defs an improvement, but this editor from r2d2 still looks better imo
09:19 <+bridge_> [ddnet] <Jupstar> it's missing some features, but just looks cleaner
09:25 <+bridge_> [ddnet] <bencie> If you did end up getting a new editor into ddnet, would that completely override the current editor, or would that be an optional thing where you can switch between new and old? The intuitive answer is that it'd override it, but I feel like my people wouldn't like that since people got very used to the current editor over the years, and humans don't tend to like change. 
09:25 <+bridge_> [ddnet] <bencie> By the way I haven't seen editor2, so i don't even know if it's really similar to the current one,  I'm just genuinely interested how this would be done
09:25 <+bridge_> [ddnet] <Jupstar> its relativly similar
09:26 <+bridge_> [ddnet] <Jupstar> just new ideas, that are intuitive, and some style changes
09:27 <+bridge_> [ddnet] <Learath2> And most importantly code that is much better structured imo
09:29 <+bridge_> [ddnet] <Jupstar> @bencie
09:29 <+bridge_> [ddnet] <Jupstar> https://cdn.discordapp.com/attachments/293493549758939136/948859557961146428/unknown.png
09:29 <+bridge_> [ddnet] <Jupstar> this is for example a nice feature
09:29 <+bridge_> [ddnet] <Jupstar> select tiles to mirror them
09:29 <+bridge_> [ddnet] <Izanagi> also get the new tee customizer
09:29 <+bridge_> [ddnet] <bencie> Ah yeah, looks pretty clean!
09:30 <+bridge_> [ddnet] <Learath2> The UI is supposed to get a teeworlds makeover btw. It's just easier to prototype like this
09:30 <+bridge_> [ddnet] <Learath2> But I quite like this design so if we add it to ddnet maybe we keep this?
09:31 <+bridge_> [ddnet] <Learath2> The old roundy design of tw is imo a bit outdated anyway :F
09:31 <+bridge_> [ddnet] <Izanagi> the rounds have to get abit sharper and more consant
09:31 <+bridge_> [ddnet] <Izanagi> to fit the todays popular design language
09:31 <+bridge_> [ddnet] <Izanagi> the rounds have to get abit sharper and more consistant
09:32 <+bridge_> [ddnet] <bencie> Not gonna lie when i tried out the teeditor, i felt very lost and you'd of course need to use it for a while to get used to it. But i feel like not every would bother to learn a differently structured editor if it did override the current one (I'm mostly referring to teeditor here, not editor2 since judging by your screenshot it's extremely close to what we currently have, looks really clean).
09:33 <+bridge_> [ddnet] <Jupstar> i havent used teeeditor, since i dont have a microsoft store, only freedom store üòõ
09:33 <+bridge_> [ddnet] <Jupstar> 
09:33 <+bridge_> [ddnet] <Jupstar> No but seriously. It kinda looks very similar to me to the ddnet's one (from structure). Are the shortcuts / controls so different=
09:34 <+bridge_> [ddnet] <Jupstar> https://store-images.s-microsoft.com/image/apps.5353.13973644486368214.572b6318-e077-44a3-b616-bd4592ee8579.2175f720-5e22-455f-a5dd-516602b76204?w=1920&h=1170&q=100&format=png
09:34 <+bridge_> [ddnet] <Jupstar> i mean this basically is just ddnet editor with a way better interface
09:35 <+bridge_> [ddnet] <Izanagi> it has a way more effecient and accessible work flow
09:35 <+bridge_> [ddnet] <Izanagi> this editor should be the one new mappers are going to use
09:36 <+bridge_> [ddnet] <Jupstar> yeah if you zoom into this interface of teeeditor, you see roundings are only sometimes used, and then it always fits (e.g. the active map TAB)
09:36 <+bridge_> [ddnet] <Jupstar> 
09:36 <+bridge_> [ddnet] <Jupstar> teeworlds uses roundings inside of other roundings, and that just looks bad af xD
09:39 <+bridge_> [ddnet] <Ryozuki> its greast to have a 500mb depedency to run ur program
09:39 <+bridge_> [ddnet] <Ryozuki> c# sux
09:43 <+bridge_> [ddnet] <Cellegen | HU> idk 500mb or more, the future is now nerd
09:44 <+bridge_> [ddnet] <Cellegen | HU> idc 500mb or more, the future is now nerd
09:50 <+bridge_> [ddnet] <Jupstar> in what universe is c# the future xD
09:50 <+bridge_> [ddnet] <Ryozuki> cringe
09:50 <+bridge_> [ddnet] <Ryozuki> i should write the editor in rust using the twmap from patiga but im 2 lazy
09:50 <+bridge_> [ddnet] <Ryozuki> and im making my own os rn
09:50 <+bridge_> [ddnet] <Ryozuki> :BASED:
09:51 <+bridge_> [ddnet] <Jupstar> make editor-os
09:51 <+bridge_> [ddnet] <Ryozuki> @Not Keks a microkernel to run only ddnet
09:51 <+bridge_> [ddnet] <Ryozuki> with maximum perfomance
09:51 <+bridge_> [ddnet] <Ryozuki> imagine it xd
09:51 <+bridge_> [ddnet] <Jupstar> soon ‚Ñ¢Ô∏è
09:52 <+bridge_> [ddnet] <Jupstar> imagine not being bound on time
09:52 <+bridge_> [ddnet] <Jupstar> would be an epic project xD
09:52 <+bridge_> [ddnet] <Ryozuki> xd
09:53 <+bridge_> [ddnet] <Ryozuki> https://github.com/emilk/egui
09:53 <+bridge_> [ddnet] <Ryozuki> dope
09:54 <+bridge_> [ddnet] <Jupstar> learath knows that electron is the future xd
09:55 <+bridge_> [ddnet] <Jupstar> hi I wrote a small calculator
09:55 <+bridge_> [ddnet] <Jupstar> download size 2GB
09:55 <+bridge_> [ddnet] <Jupstar> RAM usage 8GB
09:56 <+bridge_> [ddnet] <Jupstar> @Ryozuki how big is Ryo-OS? under 1MB? XD
09:59 <+bridge_> [ddnet] <Learath2> :pepeW:
09:59 <+bridge_> [ddnet] <chillerdragon> Eee im confused send c++ brain
09:59 <+bridge_> [ddnet] <Learath2> We are so on the wrong timeline
09:59 <+bridge_> [ddnet] <Ryozuki> @Not Keks the image is 103k with the bootloader
09:59 <+bridge_> [ddnet] <Ryozuki> 48k without
09:59 <+bridge_> [ddnet] <Ryozuki> or something like that
09:59 <+bridge_> [ddnet] <Jupstar> nice
10:00 <+bridge_> [ddnet] <Ryozuki> 30k stripped
10:00 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/948867376840060928/unknown.png
10:00 <+bridge_> [ddnet] <chillerdragon> ```C
10:00 <+bridge_> [ddnet] <chillerdragon> 	((CGameControllerMymod *)pSelf->GameServer()->m_pController)->myfunc();
10:00 <+bridge_> [ddnet] <chillerdragon> ```I created a gamecontroller with some custom function and then from gamecontroller.cpp i call this boi and even tho i never created an instance of CGameControllerMymod since my sv\_gametype is dm myfunc() is still run?!
10:00 <+bridge_> [ddnet] <Jupstar> depends is it virtual function?
10:00 <+bridge_> [ddnet] <Jupstar> then probs not
10:00 <+bridge_> [ddnet] <Jupstar> else it might be run, but UB
10:01 <+bridge_> [ddnet] <chillerdragon> no
10:01 <+bridge_> [ddnet] <Ryozuki> :PepeA:
10:01 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/948867600039964692/unknown.png
10:01 <+bridge_> [ddnet] <Jupstar> just dont do this xD
10:01 <+bridge_> [ddnet] <chillerdragon> fakin UB
10:01 <+bridge_> [ddnet] <chillerdragon> yea i guess
10:01 <+bridge_> [ddnet] <Ryozuki> @Not Keks i even have a testing setup
10:01 <+bridge_> [ddnet] <Ryozuki> the guide is rly good
10:01 <+bridge_> [ddnet] <Jupstar> boot time is also smth i don't like in modern OS, but no idea what exactly causes them to be so slow üòÑ
10:01 <+bridge_> [ddnet] <Ryozuki> (tests using qemu)
10:01 <+bridge_> [ddnet] <Jupstar> bro i also want to start, sounds really funny xxd
10:02 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/948867846656630854/unknown.png
10:02 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/948867879552577596/unknown.png
10:02 <+bridge_> [ddnet] <Ryozuki> i can catch stack overflows
10:02 <+bridge_> [ddnet] <chillerdragon> creating os such a hype these days
10:02 <+bridge_> [ddnet] <Jupstar> bcs there is still big potential in OS
10:02 <+bridge_> [ddnet] <Ryozuki> its because u can learn a lot
10:02 <+bridge_> [ddnet] <Ryozuki> about how ur kernel works
10:02 <+bridge_> [ddnet] <Ryozuki> its actually rly interesting
10:03 <+bridge_> [ddnet] <Ryozuki> i learnt about interrupts
10:03 <+bridge_> [ddnet] <Learath2> Hm, they are pretty fast tho, windows boots quite quickly from an ssd
10:03 <+bridge_> [ddnet] <Ryozuki> @Not Keks my boot time is long due to me having to type the password to decrypt
10:03 <+bridge_> [ddnet] <Ryozuki> :monkalaugh:
10:03 <+bridge_> [ddnet] <Jupstar> i mean like, why is it not basically isntant
10:03 <+bridge_> [ddnet] <Jupstar> from cold boot
10:04 <+bridge_> [ddnet] <Ryozuki> mine kinda is
10:04 <+bridge_> [ddnet] <Ryozuki> i dont have a gui login so
10:04 <+bridge_> [ddnet] <Ryozuki> its even faster
10:04 <+bridge_> [ddnet] <Jupstar> i dunno i see a wall of text for like 2 seconds before it switches to GUI
10:05 <+bridge_> [ddnet] <Learath2> Well I guess you could boot to a less than operational state much quicker if you wanted. It's just that some services take time, hw takes time to initialize
10:05 <+bridge_> [ddnet] <Ryozuki> ‚ùØ systemd-analyze
10:05 <+bridge_> [ddnet] <Ryozuki> Startup finished in 11.021s (firmware) + 2.739s (loader) + 11.370s (kernel) + 3.266s (userspace) = 28.397s
10:05 <+bridge_> [ddnet] <Ryozuki> graphical.target reached after 3.266s in userspace
10:05 <+bridge_> [ddnet] <Ryozuki> hm
10:05 <+bridge_> [ddnet] <Ryozuki> i reached graphical after 3s
10:05 <+bridge_> [ddnet] <Ryozuki> i guess thats what counts x d
10:05 <+bridge_> [ddnet] <Jupstar> ok but why does it take so long tho? we litteraly have the speed of light on our side + why doesn't it happen async
10:06 <+bridge_> [ddnet] <Learath2> With parallelized service starts, an uncompressed initramfs, non encrypted fs, I can boot into single user within about 10s
10:06 <+bridge_> [ddnet] <Ryozuki> @Not Keks its probs limited by the disk
10:06 <+bridge_> [ddnet] <chillerdragon> ```C
10:06 <+bridge_> [ddnet] <chillerdragon> #include "stdio.h"
10:06 <+bridge_> [ddnet] <chillerdragon> 
10:06 <+bridge_> [ddnet] <chillerdragon> class IGameController
10:06 <+bridge_> [ddnet] <chillerdragon> {
10:06 <+bridge_> [ddnet] <chillerdragon> };
10:06 <+bridge_> [ddnet] <chillerdragon> 
10:06 <+bridge_> [ddnet] <chillerdragon> class CDefaultGameController : public IGameController
10:06 <+bridge_> [ddnet] <chillerdragon> {
10:06 <+bridge_> [ddnet] <chillerdragon> };
10:06 <+bridge_> [ddnet] <chillerdragon> 
10:06 <+bridge_> [ddnet] <chillerdragon> class CCustomGameController : public IGameController
10:06 <+bridge_> [ddnet] <chillerdragon> {
10:06 <+bridge_> [ddnet] <chillerdragon> public:
10:06 <+bridge_> [ddnet] <chillerdragon>         void custom() { puts("foo"); }
10:06 <+bridge_> [ddnet] <chillerdragon> };
10:06 <+bridge_> [ddnet] <chillerdragon> 
10:07 <+bridge_> [ddnet] <chillerdragon> int main()
10:07 <+bridge_> [ddnet] <chillerdragon> {
10:07 <+bridge_> [ddnet] <chillerdragon>         IGameController *pController = new CDefaultGameController();
10:07 <+bridge_> [ddnet] <chillerdragon>         ((CCustomGameController *)pController)->custom();
10:07 <+bridge_> [ddnet] <chillerdragon>         return 0;
10:07 <+bridge_> [ddnet] <chillerdragon> }
10:07 <+bridge_> [ddnet] <chillerdragon> 
10:07 <+bridge_> [ddnet] <chillerdragon> ```it prints "foo" just fine? \:D no warnings nothing xd
10:07 <+bridge_> [ddnet] <Jupstar> i dunno, but if i'd write an OS, i'd pack all drivers and firmware and stuff into one block of disk space and load it at once( or in chunks ) but not like 1k files on its own
10:07 <+bridge_> [ddnet] <Jupstar> and then spam all threads i have to initialize all hardware as soon as possible xd
10:07 <+bridge_> [ddnet] <Learath2> I think for windows it's that they want to boot up into a mostly operational state. So graphics needs to be initialized, core services already started
10:08 <+bridge_> [ddnet] <Ryozuki> @Learath2 ads services too
10:08 <+bridge_> [ddnet] <Ryozuki> :monkalaugh:
10:08 <+bridge_> [ddnet] <Jupstar> i just wonder where the bottleneck really is @Learath2 
10:08 <+bridge_> [ddnet] <Jupstar> I mean the SSD i have can read like 4GB/s
10:08 <+bridge_> [ddnet] <Jupstar> 
10:08 <+bridge_> [ddnet] <Jupstar> all other components should be faster
10:08 <+bridge_> [ddnet] <Ryozuki> tracking services...up gogogo!
10:08 <+bridge_> [ddnet] <Ryozuki> :fuckyousnail:
10:09 <+bridge_> [ddnet] <Jupstar> yeah for windows its ok, they need the time to upload the telemetry xd
10:09 <+bridge_> [ddnet] <Learath2> Well first of all that 4GB/s is probably a particular kind of reading, possibly a large block with optimal block size
10:09 <+bridge_> [ddnet] <Jupstar> i accept that xd
10:09 <+bridge_> [ddnet] <Jupstar> yeah but i that's what i'd care about on my OS
10:10 <+bridge_> [ddnet] <Jupstar> e.g. lets say you update your system:
10:10 <+bridge_> [ddnet] <Jupstar> I'd say it's ok that this takes 5 seconds longer to make a nice chunk for the boot sequence, instead of increasing the boot sequence üòÑ
10:10 <+bridge_> [ddnet] <Jupstar> i dunno, i cannot really imagine it cannot be improved by a lot
10:10 <+bridge_> [ddnet] <chillerdragon> g++ is less strict that clang huh?
10:10 <+bridge_> [ddnet] <Ryozuki> /dev/nvme0n1:
10:10 <+bridge_> [ddnet] <Ryozuki>  Timing cached reads:   52912 MB in  2.00 seconds = 26518.07 MB/sec
10:10 <+bridge_> [ddnet] <Ryozuki>  Timing buffered disk reads: 4862 MB in  3.00 seconds = 1620.41 MB/sec
10:10 <+bridge_> [ddnet] <Ryozuki> :greenthing:
10:11 <+bridge_> [ddnet] <chillerdragon> ```
10:11 <+bridge_> [ddnet] <chillerdragon> $ g++ cast.cpp
10:11 <+bridge_> [ddnet] <chillerdragon> $ clang cast.cpp 
10:11 <+bridge_> [ddnet] <chillerdragon> /usr/bin/ld: /tmp/cast-2d52b0.o: in function `main':
10:11 <+bridge_> [ddnet] <chillerdragon> cast.cpp:(.text+0x15): undefined reference to `operator new(unsigned long)'
10:11 <+bridge_> [ddnet] <chillerdragon> clang-13: error: linker command failed with exit code 1 (use -v to see invocation)
10:11 <+bridge_> [ddnet] <chillerdragon> ```
10:11 <+bridge_> [ddnet] <Learath2> You could, but then it's ugly üòÑ You'd have to create a bootchunk from the fs that is humanfriendly
10:11 <+bridge_> [ddnet] <chillerdragon> Ah no its clang++
10:11 <+bridge_> [ddnet] <Jupstar> performance is all that matters, the rest has to be handled by user friendly tools
10:11 <+bridge_> [ddnet] <Learath2> Then you need to keep that up to date, and it's not really modular so you break something you might have some problems
10:12 <+bridge_> [ddnet] <chillerdragon> wait both and g++ and clang++ do not complain @Not Keks u sure its UB ? i mean it looks like but it works -.-
10:12 <+bridge_> [ddnet] <Jupstar> yes
10:12 <+bridge_> [ddnet] <Jupstar> run it with ubsan
10:12 <+bridge_> [ddnet] <Jupstar> and it will hate u
10:12 <+bridge_> [ddnet] <chillerdragon> xd
10:12 <+bridge_> [ddnet] <chillerdragon> oke
10:12 <+bridge_> [ddnet] <Learath2> I prefer my OS to be serviceable by the simplest of tools. User friendly blob managers need not apply
10:13 <+bridge_> [ddnet] <Jupstar> external tools can still give you all user friendlyness you need
10:13 <+bridge_> [ddnet] <Learath2> Regedit on windows vs vim to edit my /etc/grub.cfg, I'll take vim all day
10:13 <+bridge_> [ddnet] <Jupstar> then vim needs an auto extension
10:13 <+bridge_> [ddnet] <Ryozuki> regedit <a:aPES2_VomitAttack:525603860631388170>
10:13 <+bridge_> [ddnet] <Jupstar> that can e.g. read binary files
10:13 <+bridge_> [ddnet] <Learath2> What happens when the user friendly tool has a bug? How am I supposed to work with this blob of binary data?
10:13 <+bridge_> [ddnet] <Jupstar> auto converts it to text
10:14 <+bridge_> [ddnet] <Jupstar> well then update the tool xD
10:14 <+bridge_> [ddnet] <Jupstar> if vim is buggy you doomed too
10:14 <+bridge_> [ddnet] <Jupstar> that's not really an excuse imo
10:14 <+bridge_> [ddnet] <Learath2> The bug broke my boot sequence because your bootblob broke, what am I supposed to do now?
10:14 <+bridge_> [ddnet] <Jupstar> vim broke your config file, what are you supposed to do now?
10:15 <+bridge_> [ddnet] <chillerdragon> ```
10:15 <+bridge_> [ddnet] <chillerdragon> $  clang++ -fsanitize=address,undefined -fsanitize-recover=address,undefined -fno-omit-frame-pointer cast.cpp 
10:15 <+bridge_> [ddnet] <chillerdragon> $ ./cast 
10:15 <+bridge_> [ddnet] <chillerdragon> foo
10:15 <+bridge_> [ddnet] <chillerdragon> $ UBSAN_OPTIONS=log_path=./SAN:print_stacktrace=1:halt_on_errors=0 ASAN_OPTIONS=log_path=./SAN:print_stacktrace=1:check_initialization_order=1:detect_leaks=1:halt_on_errors=0 ./cast 
10:15 <+bridge_> [ddnet] <chillerdragon> foo
10:15 <+bridge_> [ddnet] <chillerdragon> ```like this?
10:15 <+bridge_> [ddnet] <Ryozuki> use vi
10:15 <+bridge_> [ddnet] <Jupstar> i just mean, sure you can always argument with bugs
10:15 <+bridge_> [ddnet] <Learath2> I use any of the billion text editors that aren't currently broken
10:15 <+bridge_> [ddnet] <chillerdragon> use echo
10:15 <+bridge_> [ddnet] <Jupstar> but everything can be buggy
10:15 <+bridge_> [ddnet] <Jupstar> then write 1 billion tools xD
10:15 <+bridge_> [ddnet] <chillerdragon> mv \~/.vimrc vimrc
10:15 <+bridge_> [ddnet] <Learath2> I can boot into any single live cd and it'll have the tool to fix my system
10:15 <+bridge_> [ddnet] <Jupstar> yes, the tool can be updated on your live CD
10:15 <+bridge_> [ddnet] <Jupstar> good point xd
10:16 <+bridge_> [ddnet] <Learath2> I can fix it from the uefi console even, text files are that simple to use
10:16 <+bridge_> [ddnet] <chillerdragon> @Not Keks\: ubsan no cry
10:16 <+bridge_> [ddnet] <Jupstar> then your function is not from that class
10:16 <+bridge_> [ddnet] <chillerdragon> ?xd
10:16 <+bridge_> [ddnet] <Jupstar> or your function does not call any member from that class
10:16 <+bridge_> [ddnet] <chillerdragon> but still
10:16 <+bridge_> [ddnet] <chillerdragon> isnt it calling an instance method without object?
10:16 <+bridge_> [ddnet] <Jupstar> i'd say it should complain
10:17 <+bridge_> [ddnet] <Jupstar> e.g. dynamic_cast should throw
10:17 <+bridge_> [ddnet] <chillerdragon> so do i
10:17 <+bridge_> [ddnet] <Learath2> no they can't be, it's a cd-r
10:18 <+bridge_> [ddnet] <Learath2> and sorry no internet
10:18 <+bridge_> [ddnet] <Jupstar> i mean you can update your live CD, have different version of the tool
10:18 <+bridge_> [ddnet] <Learath2> don't have a cd burner anymore
10:18 <+bridge_> [ddnet] <Jupstar> xD
10:18 <+bridge_> [ddnet] <Ryozuki> @Learath2 live cd is just a general term
10:18 <+bridge_> [ddnet] <Ryozuki> u can use it on usb
10:18 <+bridge_> [ddnet] <Jupstar> well with new OS comes new stuff, but you would have to argument against 1990 Learath then
10:18 <+bridge_> [ddnet] <Learath2> No I only have a single cd-r, I don't have a disk burner, I don't have internet. I can still fix a traditional linux system
10:19 <+bridge_> [ddnet] <Jupstar> not 2020 where 1 billion text editors already exists
10:19 <+bridge_> [ddnet] <Ryozuki> can u tho
10:19 <+bridge_> [ddnet] <Ryozuki> if its rly broken
10:19 <+bridge_> [ddnet] <Ryozuki> u usually need a live cd
10:19 <+bridge_> [ddnet] <Ryozuki> cuz u cant fix while mounted
10:19 <+bridge_> [ddnet] <Learath2> Ofc, go ahead make a mistake in your grub cfg, you can still boot using the grub console
10:19 <+bridge_> [ddnet] <Ryozuki> :monkalaugh: grub console
10:19 <+bridge_> [ddnet] <Ryozuki> but what if my grub is broken
10:19 <+bridge_> [ddnet] <Learath2> As long as you have a kernel on the boot partition you can boot to, you are fine
10:19 <+bridge_> [ddnet] <Ryozuki> and it doesnt even show grub
10:20 <+bridge_> [ddnet] <Ryozuki> having a live cd is the best backup
10:20 <+bridge_> [ddnet] <Learath2> My point is a binary blob with shiny tools is annoying to work with
10:21 <+bridge_> [ddnet] <Learath2> Because nothing except the shiny tool can be used
10:21 <+bridge_> [ddnet] <Ryozuki> @Not Keks how often do u even boot ur pc
10:21 <+bridge_> [ddnet] <Ryozuki> i only do it once a day
10:21 <+bridge_> [ddnet] <Ryozuki> xd
10:22 <+bridge_> [ddnet] <Learath2> Why is it that every time I start my day discussing anything with any of you here I spend the rest of the day annoyed?
10:22 <+bridge_> [ddnet] <Ryozuki> :monkaS:
10:22 <+bridge_> [ddnet] <Learath2> I'm so moving arguing with electron worshippers to the night so I can just sleep on it
10:23 <+bridge_> [ddnet] <Learath2> Fellas is it even an actual computer if it doesn't have 128gb of ram and 2tb of vram?
10:24 <+bridge_> [ddnet] <Ryozuki> @Learath2 move on from electron use https://github.com/lapce/lapce
10:24 <+bridge_> [ddnet] <Ryozuki> made 100% with rust
10:24 <+bridge_> [ddnet] <Learath2> I personally boot my computer and just move everything onto a ramdisk so it's faster
10:24 <+bridge_> [ddnet] <Jupstar> my point is, when i write an OS that gives 30% more FPS in CSGO, boots faster, generally is faster
10:24 <+bridge_> [ddnet] <Jupstar> more efficient
10:24 <+bridge_> [ddnet] <Jupstar> 
10:24 <+bridge_> [ddnet] <Jupstar> Then this is the future OS
10:24 <+bridge_> [ddnet] <Jupstar> performance is key xd
10:24 <+bridge_> [ddnet] <Jupstar> the avarage user doesnt care about system admin problems
10:24 <+bridge_> [ddnet] <Learath2> Your obsession with marginal performance improvements beyond human comprehension annoys me so much that I want to move to a midwestern state and become a puritan so I don't have to interact with you anymore
10:25 <+bridge_> [ddnet] <Jupstar> like i care what you think
10:25 <+bridge_> [ddnet] <Ryozuki> xd
10:25 <+bridge_> [ddnet] <Jupstar> performance is everything, that simple
10:25 <+bridge_> [ddnet] <Ryozuki> @Not Keks when will u own a quantum computer
10:26 <+bridge_> [ddnet] <Jupstar> if it improves my FPS, lets start xd
10:26 <+bridge_> [ddnet] <Ryozuki> im sure if there was a gaming oriented os that had 100% compatibility with games everyone would use it
10:26 <+bridge_> [ddnet] <Learath2> Most people also want reliability, would you use a computer that boots only 10% of the time but gives you a 10% improvement of performance when it does manage to boot?
10:27 <+bridge_> [ddnet] <Jupstar> i think you a bit pessimistic
10:27 <+bridge_> [ddnet] <Jupstar> why would it boot less of the time, just bcs it uses binary instead of text configs
10:27 <+bridge_> [ddnet] <Learath2> A lot of people also value fidelity, would you play your games at 720p? It would give you more performance?
10:27 <+bridge_> [ddnet] <Jupstar> if software would be so buggy then rip xD
10:27 <+bridge_> [ddnet] <Learath2> No your arguments is that "Performance is everything". Ofc it's not, that's an insane proposition
10:28 <+bridge_> [ddnet] <Jupstar> well ofc i mean depending on your needs, if you play battle field raytracing you also want 8k if possible
10:28 <+bridge_> [ddnet] <Learath2> Or I'm sending a rover to mars, is performance everything there?
10:28 <+bridge_> [ddnet] <Jupstar> but to reach 8k raytracing you need more efficient design
10:28 <+bridge_> [ddnet] <Jupstar> why not
10:29 <+bridge_> [ddnet] <Jupstar> more performance doesn't imply less reliability
10:29 <+bridge_> [ddnet] <Jupstar> that's a weird thinking tbh
10:29 <+bridge_> [ddnet] <Jupstar> i dont say write everything in assembly
10:29 <+bridge_> [ddnet] <Jupstar> i want to make clear, a better design, can be better
10:30 <+bridge_> [ddnet] <Ryozuki> we should start by ditching x86
10:30 <+bridge_> [ddnet] <Learath2> More performance doesn't imply less reliability, but your proposition is that nothing except performance matters
10:30 <+bridge_> [ddnet] <Ryozuki> and designing a modern instruction set
10:30 <+bridge_> [ddnet] <Ryozuki> remove all backwards compatibility stuff thats holds us down
10:30 <+bridge_> [ddnet] <Jupstar> that's one example, x86 could die if a new generation gives same FPS; while giving more FPS on newer titles, then ppl would accept it xd
10:31 <+bridge_> [ddnet] <Jupstar> that's one example, x86 could die if a new generation gives same FPS (on current games); while giving more FPS on newer titles, then ppl would accept it xd
10:32 <+bridge_> [ddnet] <Jupstar> then let me resphrase it
10:32 <+bridge_> [ddnet] <Jupstar> 
10:32 <+bridge_> [ddnet] <Jupstar> a design that is faster, but doesnt increase complexity in a way that you need to do unsafe operation or switch the coding language, should always be used, bcs it wins in the long run xd
10:32 <+bridge_> [ddnet] <Jupstar> since my new OS would use a language similar to rust, i'd only allow that rust like lnaguage
10:33 <+bridge_> [ddnet] <Learath2> That's not a rephrasing, that's a whole new argument, but sure
10:33 <+bridge_> [ddnet] <Ryozuki> xd
10:34 <+bridge_> [ddnet] <Learath2> So this new design, has 0 drawbacks of ANY form, for ANY use, only performs better, yes, people would prefer it
10:34 <+bridge_> [ddnet] <Ryozuki> glad we came to a understanding
10:34 <+bridge_> [ddnet] <Ryozuki> :greenthing:
10:34 <+bridge_> [ddnet] <Jupstar> but that would include that binary config files are OK for me, as long there is a tool that can parse it for example üòÑ
10:34 <+bridge_> [ddnet] <Jupstar> so there is a drawback
10:34 <+bridge_> [ddnet] <Jupstar> vim either needs an extension or cant be used
10:35 <+bridge_> [ddnet] <Learath2> There is always a drawback, but since it's not one you care about you can just discard it
10:35 <+bridge_> [ddnet] <Jupstar> but in 1990 someone also wrote vim to parse a text file
10:35 <+bridge_> [ddnet] <Jupstar> its nothing to special in my thinking
10:35 <+bridge_> [ddnet] <Jupstar> in 20 years nobody will care, just as we dont care now xd
10:35 <+bridge_> [ddnet] <Learath2> Who cares about the people that administer systems? The average user doesn't care
10:35 <+bridge_> [ddnet] <Jupstar> yea
10:35 <+bridge_> [ddnet] <Ryozuki> neither the bosses
10:35 <+bridge_> [ddnet] <Ryozuki> until something doesnt work
10:35 <+bridge_> [ddnet] <Ryozuki> have u visited r/sysadmin
10:35 <+bridge_> [ddnet] <Ryozuki> its hilairous
10:35 <+bridge_> [ddnet] <Jupstar> but the good thing about open source is, that there will be ppl writing better and better tools
10:36 <+bridge_> [ddnet] <Jupstar> bcs system admins team up
10:36 <+bridge_> [ddnet] <Learath2> No everything always works @Ryozuki we already established all drawbacks that jupstar doesn't consider drawbacks aren't drawbacks
10:36 <+bridge_> [ddnet] <Jupstar> bcs they are pissed xd
10:36 <+bridge_> [ddnet] <Jupstar> i am just not so pessimistic xD
10:36 <+bridge_> [ddnet] <Jupstar> sure it takes time to settle
10:37 <+bridge_> [ddnet] <Learath2> You just want something for the sake of wanting it. There is no reason to trade human-readability of config files for a marginal improvement in parsing it the 1 time it's read at boot
10:38 <+bridge_> [ddnet] <Jupstar> well that's your opinion
10:38 <+bridge_> [ddnet] <Jupstar> i simply disagree
10:38 <+bridge_> [ddnet] <Jupstar> human readable are non
10:38 <+bridge_> [ddnet] <Jupstar> only the tools that parses them make it readable
10:38 <+ChillerDragon> cast.cpp:22:9: error: cannot ‚Äòdynamic_cast‚Äô ‚ÄòpController‚Äô (of type ‚Äòclass IGameController*‚Äô) to type ‚Äòclass CCustomGameController*‚Äô (source type is not polymorphic)
10:38 <+ChillerDragon>    22 |         dynamic_cast<CCustomGameController*>(pController)->custom();
10:38 <+ChillerDragon> that sounds reasonable 
10:38 <+ChillerDragon> or did i cast wrong?
10:38 <+bridge_> [ddnet] <Learath2> ?
10:39 <+bridge_> [ddnet] <Jupstar> none*
10:39 <+bridge_> [ddnet] <Jupstar> a text file itself is not more readable
10:39 <+bridge_> [ddnet] <Jupstar> you need a graphic unit to make it readable
10:39 <+bridge_> [ddnet] <Jupstar> vim also reads the file somehow
10:39 <+bridge_> [ddnet] <Jupstar> not like its just there
10:39 <+bridge_> [ddnet] <Learath2> The text file, without any processing beyond decoding is completely human readable
10:39 <+bridge_> [ddnet] <Jupstar> a binary too, just in a hex editor
10:40 <+bridge_> [ddnet] <Ryozuki> chillerdragon i think u need virtual
10:40 <+bridge_> [ddnet] <Ryozuki> https://en.cppreference.com/w/cpp/language/dynamic_cast
10:41 <+bridge_> [ddnet] <Learath2> A binary file, especially the kind you'd consider since you want better performance, would not necessarily be human readable at all
10:41 <+bridge_> [ddnet] <Learath2> Even in a hex editor
10:41 <+bridge_> [ddnet] <Learath2> Numbers would probably all be in little endian
10:42 <+bridge_> [ddnet] <Jupstar> why tho, binary files are also read somehow
10:42 <+bridge_> [ddnet] <Jupstar> so you just need to know about that structure that reads it
10:42 <+bridge_> [ddnet] <Learath2> Don't need field names either since the structure is predetermined
10:42 <+bridge_> [ddnet] <Jupstar> many hex editors even allow making structs to automatically parse it
10:43 <+bridge_> [ddnet] <Jupstar> but now that you say it, a light compression could make sense too
10:43 <+bridge_> [ddnet] <Learath2> Text editors literally perform a single decoding operation. You are telling me hex editors have advanced features
10:43 <+bridge_> [ddnet] <Jupstar> will add it to my never starting todo list
10:44 <+bridge_> [ddnet] <Learath2> No, don't be silly. You want everything uncompressed and everything in ram
10:44 <+bridge_> [ddnet] <Jupstar> bcs text is also saved as binary in the end xD
10:44 <+bridge_> [ddnet] <Jupstar> so whats the point
10:44 <+bridge_> [ddnet] <Jupstar> yeah, but the SSD might be slower than the uncompressing
10:44 <+bridge_> [ddnet] <Jupstar> need benchmarks to confirm
10:44 <+bridge_> [ddnet] <Jupstar> in RAM it can be uncompressed ofc
10:44 <+bridge_> [ddnet] <Jupstar> i have the 32gb ram
10:44 <+bridge_> [ddnet] <Learath2> No, trade boot performance with runtime performance
10:45 <+bridge_> [ddnet] <Jupstar> ah btw, binary configs need less RAM xd
10:45 <+bridge_> [ddnet] <Learath2> Get more ram and at boot put everything in there
10:45 <+bridge_> [ddnet] <Ryozuki> yes
10:45 <+bridge_> [ddnet] <Ryozuki> run the whole database in ram
10:45 <+bridge_> [ddnet] <Ryozuki> SAP
10:45 <+bridge_> [ddnet] <Ryozuki> ditch hard disks
10:45 <+bridge_> [ddnet] <Ryozuki> embrace ram
10:45 <+bridge_> [ddnet] <Jupstar> i dunno the sweatspot at this point, so cannot say what i'd trade
10:46 <+bridge_> [ddnet] <Learath2> Not necessarily, you can read it in chunks and just shove it inside the struct, so not even at read-time it doesn't necessarily need more ram
10:46 <+bridge_> [ddnet] <Jupstar> but text is rather large on disk
10:46 <+bridge_> [ddnet] <Jupstar> yeah but that defs makes it slower xD
10:46 <+bridge_> [ddnet] <Jupstar> performance everything, even for that useless tool xDD (jk)
10:47 <+bridge_> [ddnet] <Learath2> Not really, buffered readers read at optimal-ish chunk sizes
10:47 <+bridge_> [ddnet] <Jupstar> anyway, i just want new stuff, new ideas, 1 trillion FPS, instant loading times
10:47 <+bridge_> [ddnet] <Jupstar> then i can die in peace
10:48 <+bridge_> [ddnet] <Learath2> I want new stuff, 200~ fps, reasonable loading times
10:49 <+bridge_> [ddnet] <Jupstar> but can you then die in peace? xD
10:49 <+bridge_> [ddnet] <Learath2> I wonder if you can run ram in raid0
10:49 <+bridge_> [ddnet] <Ryozuki> i want unlimited fps
10:49 <+bridge_> [ddnet] <Ryozuki> im sure someday we will reach a point where  talking about fps is meaningless
10:49 <+bridge_> [ddnet] <Jupstar> dont be arrogant
10:49 <+bridge_> [ddnet] <Jupstar> xd
10:49 <+bridge_> [ddnet] <Jupstar> i doubt that tbh
10:49 <+bridge_> [ddnet] <Ryozuki> i dont
10:50 <+bridge_> [ddnet] <Jupstar> if you want smth like sword art online
10:50 <+bridge_> [ddnet] <Learath2> No I will never be in peace, neither will you. We'll only get shitty old ideas because of licensing agreements, 60 fps because everything is optimized for console, meh loading times
10:50 <+bridge_> [ddnet] <Jupstar> it has to be on pair with real world
10:50 <+bridge_> [ddnet] <Ryozuki> if moores law keeps appliying
10:50 <+bridge_> [ddnet] <Jupstar> true :c
10:50 <+bridge_> [ddnet] <Ryozuki> the 60fps lock due to consoles
10:50 <+bridge_> [ddnet] <Ryozuki> is the worst nightmare
10:50 <+bridge_> [ddnet] <Ryozuki> waiting for elden ring mod to unlock fps
10:51 <+bridge_> [ddnet] <Ryozuki> but then u cant enjoy multiplayer
10:51 <+bridge_> [ddnet] <Ryozuki> cuz stupid anticheat
10:51 <+bridge_> [ddnet] <Learath2> It's so annoying for high refresh rate monitor people
10:51 <+bridge_> [ddnet] <Jupstar> the problem is really that we probs about to hit the limit of transitor sizes in the next years
10:52 <+bridge_> [ddnet] <Jupstar> then we can still optimize the offset between them and other hardware components
10:52 <+bridge_> [ddnet] <Jupstar> but i guess in like 20 years we need a completly new idea
10:52 <+bridge_> [ddnet] <Ryozuki> @Not Keks what about making the cpu itself bigger
10:52 <+bridge_> [ddnet] <Ryozuki> https://inshorts.com/en/news/worlds-largest-processor-with-12-trillion-transistors-unveiled-1566360034551
10:52 <+bridge_> [ddnet] <Jupstar> so you want a planet to simulate a virtual world (a planet) ? üòÑ
10:52 <+bridge_> [ddnet] <Ryozuki> yes!
10:52 <+bridge_> [ddnet] <Jupstar> i bet this happens some day
10:53 <+bridge_> [ddnet] <Ryozuki> if we advance to the next step of civilization
10:53 <+bridge_> [ddnet] <Jupstar> yeah üòÑ
10:53 <+bridge_> [ddnet] <Ryozuki> first we need to utilize the whole sun power
10:53 <+bridge_> [ddnet] <Ryozuki> build a dyson sphere
10:53 <+bridge_> [ddnet] <Ryozuki> https://en.wikipedia.org/wiki/Dyson_sphere
10:53 <+bridge_> [ddnet] <Jupstar> yeah would be amazing
10:54 <+bridge_> [ddnet] <Jupstar> i really wonder if we dont get replaced by robots before doing this
10:54 <+bridge_> [ddnet] <Ryozuki> @Not Keks https://en.wikipedia.org/wiki/Matrioshka_brain
10:54 <+bridge_> [ddnet] <Ryozuki> we need this
10:54 <+bridge_> [ddnet] <Ryozuki> its all thought out
10:54 <+bridge_> [ddnet] <Ryozuki> already
10:54 <+bridge_> [ddnet] <Jupstar> i mean what is more likely?
10:54 <+bridge_> [ddnet] <Jupstar> That we find the secret to inteligence or that we build such huge stuff?
10:54 <+bridge_> [ddnet] <Ryozuki> that we build this
10:54 <+bridge_> [ddnet] <Ryozuki> i doubt we will find anything
10:54 <+bridge_> [ddnet] <Jupstar> hard to say :d
10:54 <+bridge_> [ddnet] <Jupstar> maybe we are too arrogant thinking humans are smth special
10:55 <+bridge_> [ddnet] <Jupstar> and are actually already pretty close
10:55 <+bridge_> [ddnet] <Jupstar> or we are completly far away
10:55 <+bridge_> [ddnet] <Jupstar> maybe we cannot even solve it in 3 dimensions
10:55 <+bridge_> [ddnet] <Jupstar> who knows
10:55 <+bridge_> [ddnet] <Ryozuki> xd
10:55 <+bridge_> [ddnet] <Ryozuki> i dont think its about solving it
10:55 <+bridge_> [ddnet] <Ryozuki> its more about logistics
10:55 <+bridge_> [ddnet] <Ryozuki> to build this
10:55 <+bridge_> [ddnet] <Ryozuki> we would need full earth cooperation
10:55 <+bridge_> [ddnet] <Jupstar> oh i meant intelligence üòÑ
10:55 <+bridge_> [ddnet] <Jupstar> but yeah
10:55 <+bridge_> [ddnet] <Ryozuki> xd
10:56 <+bridge_> [ddnet] <Jupstar> maybe we'll not build it in this solar system
10:56 <+bridge_> [ddnet] <Jupstar> maybe other systems are better for this purpose
10:56 <+bridge_> [ddnet] <Jupstar> closer big planets to sun or stuff like that
10:56 <+bridge_> [ddnet] <Learath2> No need to figure out anything about intelligence
10:57 <+bridge_> [ddnet] <Learath2> No need for AI or singularity either. We should just everything to the guy who came up with Electron
10:57 <+bridge_> [ddnet] <Learath2> Currently as we speak, discord is using 7 cores of my cpu, to do something. I'm eagerly awaiting it's result
10:57 <+bridge_> [ddnet] <Jupstar> true, he is the genius of the 21th century
10:57 <+bridge_> [ddnet] <Jupstar> no computer can ever beat him
10:57 <+bridge_> [ddnet] <Learath2> It'll probably tell me the key to FTL travel
10:58 <+bridge_> [ddnet] <Ryozuki> we need this to go to other systems
10:58 <+bridge_> [ddnet] <Ryozuki> to become a spacefearing civilization
10:58 <+bridge_> [ddnet] <Learath2> faring*
10:58 <+bridge_> [ddnet] <Ryozuki> ye
10:58 <+bridge_> [ddnet] <Ryozuki> heinrich v2
10:58 <+bridge_> [ddnet] <Learath2> üòõ
10:59 <+bridge_> [ddnet] <Ryozuki> @Not Keks https://www.youtube.com/watch?v=uzkD5SeuwzM
10:59 <+bridge_> [ddnet] <Learath2> We probably will never make it out of this system
10:59 <+bridge_> [ddnet] <Ryozuki> interesting video
10:59 <+bridge_> [ddnet] <Jupstar> yeah i watch them all
10:59 <+bridge_> [ddnet] <Jupstar> only good yt channel xd
10:59 <+bridge_> [ddnet] <Ryozuki> xd
10:59 <+bridge_> [ddnet] <Ryozuki> well 3blue1brown and veritasium and vsauce
10:59 <+bridge_> [ddnet] <Ryozuki> the only yt content i consume
10:59 <+bridge_> [ddnet] <Learath2> We've already reached the great filter, discovery of nukes is what leads to the death of all civilizations
11:00 <+bridge_> [ddnet] <Learath2> Putin will turn all of us into goo
11:00 <+bridge_> [ddnet] <Jupstar> its the only content where you don't feel like you know its wasted time anyway üòÑ
11:00 <+bridge_> [ddnet] <Ryozuki> xd
11:00 <+bridge_> [ddnet] <Jupstar> that's actually not that unlikely, needs just one really clever, insane guy
11:01 <+bridge_> [ddnet] <Jupstar> ( i mean building it your own )
11:01 <+bridge_> [ddnet] <Ryozuki> @Not Keks we might not even exist
11:01 <+bridge_> [ddnet] <Jupstar> yes
11:01 <+bridge_> [ddnet] <Ryozuki> good video https://www.youtube.com/watch?v=fXW-QjBsruE
11:01 <+bridge_> [ddnet] <Ryozuki> about it
11:01 <+bridge_> [ddnet] <Jupstar> you only exist in my head üòÑ
11:01 <+bridge_> [ddnet] <Ryozuki> xd
11:01 <+bridge_> [ddnet] <Jupstar> Learath is just my conscience, telling me to stop xd
11:01 <+bridge_> [ddnet] <Ryozuki> https://en.wikipedia.org/wiki/Ship_of_Theseus
11:01 <+bridge_> [ddnet] <Ryozuki> :monkaS:
11:04 <+bridge_> [ddnet] <Jupstar> star track teleport xd
11:04 <+bridge_> [ddnet] <Jupstar> my philosophy teacher was really a legend
11:05 <+bridge_> [ddnet] <Jupstar> we always talked about such stuff, in 7th grade already
11:05 <+bridge_> [ddnet] <Ryozuki> xD
11:05 <+bridge_> [ddnet] <Jupstar> rip to the ppl that elected religion instead of philosophy in school (if they had the choice)
11:05 <+bridge_> [ddnet] <Jupstar> rip to the ppl that selected religion instead of philosophy in school (if they had the choice)
11:08 <+bridge_> [ddnet] <Ryozuki> xd
11:08 <+bridge_> [ddnet] <Ryozuki> i liked philosophy too
11:08 <+bridge_> [ddnet] <Ryozuki> but sadly politics plan to remove it
11:08 <+bridge_> [ddnet] <Ryozuki> they dont want critical thinking
11:08 <+bridge_> [ddnet] <Jupstar> wtf
11:08 <+bridge_> [ddnet] <Jupstar> arent you like living in spain
11:09 <+bridge_> [ddnet] <Ryozuki> ye
11:09 <+bridge_> [ddnet] <Jupstar> thought spain is actually pretty progressive
11:09 <+bridge_> [ddnet] <Ryozuki> haha
11:09 <+bridge_> [ddnet] <Ryozuki> xd
11:10 <+bridge_> [ddnet] <Ryozuki> i think there was a right wing party
11:10 <+bridge_> [ddnet] <Ryozuki> when they removed it
11:10 <+bridge_> [ddnet] <Ryozuki> idk
11:10 <+bridge_> [ddnet] <Ryozuki> they actually removed it
11:10 <+bridge_> [ddnet] <Ryozuki> there is a "left" wing party rn
11:11 <+bridge_> [ddnet] <Ryozuki> more like centre-right
11:11 <+bridge_> [ddnet] <Ryozuki> more like center-right
11:11 <+bridge_> [ddnet] <Jupstar> well religions die out in EU countries anyway. i dunno what they hope for
11:12 <+bridge_> [ddnet] <Ryozuki> ah
11:12 <+bridge_> [ddnet] <Ryozuki> right now it is optional
11:12 <+bridge_> [ddnet] <Jupstar> good example is poland, younger ppl more and more dont care about it anymore, even tho generally it has high traditions country-wide
11:12 <+bridge_> [ddnet] <Ryozuki> but they want to remove it
11:12 <+bridge_> [ddnet] <Jupstar> GO ON THE STREET XD
12:18 <+bridge_> [ddnet] <c0d3d3v> Do we keep statistics on how many players on our servers are using the latest DDNet version and how many are using outdated versions or other clients?
12:22 <+bridge_> [ddnet] <Nagi01 {LAN}> true true :CLOWNpepega:
12:32 <+bridge_> [ddnet] <Jupstar> not really, but steam says how many ppl are playing:
12:32 <+bridge_> [ddnet] <Jupstar> 
12:32 <+bridge_> [ddnet] <Jupstar> Server browser player count - steam player count = potentially outdated clients
12:32 <+bridge_> [ddnet] <Jupstar> 
12:32 <+bridge_> [ddnet] <Jupstar> the steam players should be all up to date
12:34 <+bridge_> [ddnet] <Jupstar> maybe teehistorian knows about it, dunno
12:34 <+bridge_> [ddnet] <Jupstar> 
12:34 <+bridge_> [ddnet] <Jupstar> else ask noby
12:34 <+bridge_> [ddnet] <Jupstar> he probs collects it
12:42 <+bridge_> [ddnet] <Patiga> @Not Keks I am currently coding a map renderer and have trouble with colors. I haven't really found help in the ddnet source, so I mostly just tested what works with a bit of research. If I understand correctly, for example, the vertex colors of the quads need to be converted into the srgb color space, so I take rgb to the power of 2.2 and for the alpha I found that `1. - (1. - alpha)^2.2` does the job.
12:42 <+bridge_> [ddnet] <Patiga> when I sample the color for the quad from the texture, it appears that I only have to convert the alpha, not the rgb values.
12:42 <+bridge_> [ddnet] <Patiga> from experimenting it seemed like I then just need to multiply those colors together, however, that doesn't work yet.
12:42 <+bridge_> [ddnet] <Patiga> before I dive deeper into more experimenting, do you happen to know the magic formulars for the colors? ^^
12:42 <+bridge_> [ddnet] <Patiga> I'm programming with webgpu and use vulkan as the backend
12:42 <+bridge_> [ddnet] <Ryozuki> @Not Keks ddnet client sends a user agent with version iirc to the https master
12:43 <+bridge_> [ddnet] <Jupstar> do we collect it?
12:43 <+bridge_> [ddnet] <Ryozuki> idk
12:43 <+bridge_> [ddnet] <Jupstar> i used UNORM for colors in my vulkan backend
12:43 <+bridge_> [ddnet] <Ryozuki> i think logs also store version
12:43 <+bridge_> [ddnet] <Ryozuki> i remember deen showing stats
12:44 <+bridge_> [ddnet] <Patiga> ooh, so depending on the textureformat I choose the color calculations are different?
12:44 <+bridge_> [ddnet] <Jupstar> ok didnt know ryo
12:45 <+bridge_> [ddnet] <Patiga> the tutorial made me use a function that chooses the format automatically, so I didn't really think it should have an effect and assumed its just something that happens in the background
12:47 <+bridge_> [ddnet] <Jupstar> yeah SRGB should not be mixed, maybe some GPUs can handle it, but it's probs easier you stick to UNORM.
12:47 <+bridge_> [ddnet] <Jupstar> 
12:47 <+bridge_> [ddnet] <Jupstar> Also there is linear color space vs non linear.
12:47 <+bridge_> [ddnet] <Jupstar> 
12:47 <+bridge_> [ddnet] <Jupstar> I use this for framebuffer
12:47 <+bridge_> [ddnet] <Jupstar> 
12:47 <+bridge_> [ddnet] <Jupstar> ```
12:47 <+bridge_> [ddnet] <Jupstar> FindFormat.format == VK_FORMAT_B8G8R8A8_UNORM && FindFormat.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
12:47 <+bridge_> [ddnet] <Jupstar> ```
12:47 <+bridge_> [ddnet] <Jupstar> 
12:47 <+bridge_> [ddnet] <Jupstar> and `VK_FORMAT_R8G8B8A8_UNORM` for the textures
12:48 <+bridge_> [ddnet] <Patiga> damn glad I asked you, struggled with that for a few hours. Thanks for the help :)
14:08 <+bridge_> [ddnet] <Ryozuki> https://randomwire.com/why-japanese-web-design-is-so-different/
14:08 <+bridge_> [ddnet] <Ryozuki> actually true
14:08 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/948929799689240646/rakuten-ichiba.png
14:12 <+bridge_> [ddnet] <deen> not really, to my knowledge. I can take snapshots, here's one from GER2 right now: 
14:12 <+bridge_> [ddnet] <deen> ```
14:12 <+bridge_> [ddnet] <deen> $ echo status > *.fifo
14:12 <+bridge_> [ddnet] <deen> $ grep "dnsbl=white" *.log|sed -e "s/.*client=\([^ ]*\) .*/\1/" | sort | uniq -c | sort -n
14:12 <+bridge_> [ddnet] <deen>       1 0.7:15050
14:12 <+bridge_> [ddnet] <deen>       1 13022
14:12 <+bridge_> [ddnet] <deen>       1 14001
14:12 <+bridge_> [ddnet] <deen>       1 15032
14:12 <+bridge_> [ddnet] <deen>       1 15054
14:12 <+bridge_> [ddnet] <deen>       1 15060
14:12 <+bridge_> [ddnet] <deen>       1 15070
14:12 <+bridge_> [ddnet] <deen>       2 10034
14:12 <+bridge_> [ddnet] <deen>       2 15011
14:12 <+bridge_> [ddnet] <deen>       2 15012
14:12 <+bridge_> [ddnet] <deen>       2 15062
14:12 <+bridge_> [ddnet] <deen>       2 15080
14:12 <+bridge_> [ddnet] <deen>       3 15040
14:12 <+bridge_> [ddnet] <deen>       4 15024
14:12 <+bridge_> [ddnet] <deen>       4 15090
14:12 <+bridge_> [ddnet] <deen>       5 0.7:-1
14:13 <+bridge_> [ddnet] <deen>       5 15013
14:13 <+bridge_> [ddnet] <deen>      13 15081
14:13 <+bridge_> [ddnet] <deen>     173 15091
14:13 <+bridge_> [ddnet] <deen> ```
14:13 <+bridge_> [ddnet] <Ryozuki> the https could report also the client version
14:13 <+bridge_> [ddnet] <Ryozuki> when it is done
14:13 <+bridge_> [ddnet] <Ryozuki> apart from skin and other stuff
15:39 <+bridge_> [ddnet] <deen> Current player versions on all official servers:
15:39 <+bridge_> [ddnet] <deen> ```
15:39 <+bridge_> [ddnet] <deen>       1 11080
15:39 <+bridge_> [ddnet] <deen>       1 12001
15:39 <+bridge_> [ddnet] <deen>       1 12060
15:39 <+bridge_> [ddnet] <deen>       1 13002
15:39 <+bridge_> [ddnet] <deen>       1 13565
15:39 <+bridge_> [ddnet] <deen>       1 14001
15:40 <+bridge_> [ddnet] <deen>       1 902
15:40 <+bridge_> [ddnet] <deen>       2 0.7:15050
15:40 <+bridge_> [ddnet] <deen>       2 10034
15:40 <+bridge_> [ddnet] <deen>       2 12091
15:40 <+bridge_> [ddnet] <deen>       2 13001
15:40 <+bridge_> [ddnet] <deen>       2 13097
15:40 <+bridge_> [ddnet] <deen>       2 14071
15:40 <+bridge_> [ddnet] <deen>       2 15023
15:40 <+bridge_> [ddnet] <deen>       3 12092
15:40 <+bridge_> [ddnet] <deen>       3 13022
15:40 <+bridge_> [ddnet] <deen>       3 14010
15:40 <+bridge_> [ddnet] <deen>       3 15011
15:40 <+bridge_> [ddnet] <deen>       3 15025
15:40 <+bridge_> [ddnet] <deen>       3 15444
15:40 <+bridge_> [ddnet] <deen>       4 15012
15:40 <+bridge_> [ddnet] <deen>       5 20000
15:40 <+bridge_> [ddnet] <deen>       6 14051
15:40 <+bridge_> [ddnet] <deen>       6 15024
15:40 <+bridge_> [ddnet] <deen>       6 15032
15:40 <+bridge_> [ddnet] <deen>       6 15060
15:40 <+bridge_> [ddnet] <deen>       8 15040
15:40 <+bridge_> [ddnet] <deen>      10 14032
15:40 <+bridge_> [ddnet] <deen>      11 15013
15:41 <+bridge_> [ddnet] <deen> More 0.7 players than I expected, nice work @Learath2 with the compat layer
15:42 <+bridge_> [ddnet] <deen> And apparently no one using 0.6 vanilla anymore if my script is correct
15:42 <+bridge_> [ddnet] <Patiga> @Not Keks nice I removed everything srgb related and now explicitly use unorm and everything looks perfect now :)
15:42 <+bridge_> [ddnet] <Jupstar> nice, is that tool already finished?
15:42 <+bridge_> [ddnet] <Jupstar> web gpu with vulkan sounds very interesting
15:43 <+bridge_> [ddnet] <Patiga> not yet, so far I have map rendering without envelopes and without group clipping, wanna finish that up
15:43 <+bridge_> [ddnet] <Patiga> after that I also want to extend it into a full tw/ddnet renderer
15:43 <+bridge_> [ddnet] <deen> super cool
15:43 <+bridge_> [ddnet] <Patiga> ah and I still need to do mipmapping
15:43 <+bridge_> [ddnet] <deen> demo viewer would be great so you can upload your demos and send people the link
15:44 <+bridge_> [ddnet] <Jupstar> maybe we can also just build the client with web asm
15:44 <+bridge_> [ddnet] <Patiga> thanks! :) its really interesting working with the gpu for once ^^
15:44 <+bridge_> [ddnet] <Patiga> yea I hope that will work mostly out-of-the-box with webgpu
15:45 <+bridge_> [ddnet] <Patiga> though I'm writing it in rust, so not really compatible with the ddnet source :d
15:47 <+bridge_> [ddnet] <Voxel> what will the map renderer be used for?
15:48 <+bridge_> [ddnet] <Patiga> map renderer on its own probably not for much, maybe another map viewer for the web
15:49 <+bridge_> [ddnet] <Patiga> or maybe to get a picture of the entire map with correct coloring, don't think such a thing exists yet
15:49 <+bridge_> [ddnet] <Voxel> ohhh. makes sense
15:51 <+bridge_> [ddnet] <Voxel> maybe it'll have working Anim values, unlike the default map view in the ddnet website
15:51 <+bridge_> [ddnet] <Voxel> will it have working Anim values, unlike the default map view in the ddnet website?
15:52 <+bridge_> [ddnet] <Patiga> should hopefully work, haven't yet implemented envelopes though
15:54 <+bridge_> [ddnet] <Jupstar> do you write it with buffering btw? or just teeworlds 0.6 style? üòÑ
15:54 <+bridge_> [ddnet] <Patiga> haven't really looked into the any teeworlds code and I'm still new to gpu stuff
15:54 <+bridge_> [ddnet] <Patiga> wdym with buffering? ^^
15:55 <+bridge_> [ddnet] <Jupstar> like load the whole map into VRAM
15:55 <+bridge_> [ddnet] <Jupstar> isntead of sending it to the GPU per frame
15:56 <+bridge_> [ddnet] <Patiga> ah I put the tilemaps and the quads into gpu buffers
15:56 <+bridge_> [ddnet] <Learath2> Nice to see it actually used
15:56 <+bridge_> [ddnet] <Jupstar> nice
15:56 <+bridge_> [ddnet] <Patiga> not per-frame, once at the start
15:56 <+bridge_> [ddnet] <Jupstar> now i am interested how you did it üòÑ
15:56 <+bridge_> [ddnet] <Jupstar> like the javascript thing?
15:56 <+bridge_> [ddnet] <Jupstar> or self invented?
15:56 <+bridge_> [ddnet] <Patiga> no idea what that javascript thing is ^^
15:57 <+bridge_> [ddnet] <Jupstar> ok, so completly self written? nice nice üòÑ
15:57 <+bridge_> [ddnet] <bencie> could you send me a link to this? really wanna try it out now üëÄ
15:57 <+bridge_> [ddnet] <Jupstar> i just compiled the 0.7 editor branch
15:58 <+bridge_> [ddnet] <Patiga> @Not Keks haven't published nor decided on a license yet, but I can send you the current shaders in pm if you like
15:58 <+bridge_> [ddnet] <Jupstar> you could just fork 0.7 tw and remove the -Werror flag so github builds it for you üòÑ
15:58 <+bridge_> [ddnet] <Jupstar> i can wait, wont it be a website anyway?
15:59 <+bridge_> [ddnet] <Patiga> yeah, I'm consideren agpl though
15:59 <+bridge_> [ddnet] <Patiga> *considering
16:00 <+bridge_> [ddnet] <Patiga> and I mean it being webgpu means that it can just as well be used in a client
16:01 <+bridge_> [ddnet] <Voxel> ~~0.8 client~~
16:04 <+bridge_> [ddnet] <Ryozuki> @Patiga is it made un rust?
16:04 <+bridge_> [ddnet] <Ryozuki> wgpu?
16:04 <+bridge_> [ddnet] <Patiga> yeah
16:05 <+bridge_> [ddnet] <Ryozuki> @Not Keks https://github.com/gfx-rs/wgpu
16:05 <+bridge_> [ddnet] <Ryozuki> its a api based on webgpu but it can run natively too btw
16:06 <+bridge_> [ddnet] <Ryozuki> it just abstracts away vulkan/opengl
16:06 <+bridge_> [ddnet] <Ryozuki> its rly nice
16:06 <+bridge_> [ddnet] <Ryozuki> most game engines use it
16:06 <+bridge_> [ddnet] <Ryozuki> (rust ones)
16:06 <+bridge_> [ddnet] <Ryozuki> > wgpu is a cross-platform, safe, pure-rust graphics api. It runs natively on Vulkan, Metal, D3D12, D3D11, and OpenGLES; and on top of WebGPU on wasm.
16:07 <+bridge_> [ddnet] <Ryozuki> the next step is building a editor on top of that renderer
16:07 <+bridge_> [ddnet] <Ryozuki> :PepeA:
16:07 <+bridge_> [ddnet] <Ryozuki> all with AGPL license
16:07 <+bridge_> [ddnet] <Salmon De K√∂hler> can i make fake ping in my own server?
16:07 <+bridge_> [ddnet] <Ryozuki> all hail stallman
16:08 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/948959959595507712/unknown.png
16:08 <+bridge_> [ddnet] <Ryozuki> damn the bg looks bad on dark
16:08 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/948960040365203496/unknown.png
16:08 <+bridge_> [ddnet] <Ryozuki> :BASED:
16:08 <+bridge_> [ddnet] <Salmon De K√∂hler> I'm used to playing with a high delay and I'm very unused to playing without it.
16:08 <+bridge_> [ddnet] <Jupstar> real freedom is having no copyright at all üòõ
16:08 <+bridge_> [ddnet] <Ryozuki> @Not Keks booo
16:08 <+bridge_> [ddnet] <Ryozuki> real freedom are the 4 stallman freedoms
16:09 <+bridge_> [ddnet] <Ryozuki> > A program is ‚Äúfree software‚Äù if the program‚Äôs users have the four essential freedoms:
16:09 <+bridge_> [ddnet] <Ryozuki> > 
16:09 <+bridge_> [ddnet] <Ryozuki> >     The freedom to run the program as you wish, for any purpose.
16:09 <+bridge_> [ddnet] <Ryozuki> >     The freedom to study how the program works, and change it so it does your computing as you wish. Access to the source code is a precondition for this.
16:09 <+bridge_> [ddnet] <Ryozuki> >     The freedom to redistribute copies so you can help your neighbor.
16:09 <+bridge_> [ddnet] <Ryozuki> >     The freedom to distribute copies of your modified versions to others. By doing this you can give the whole community a chance to benefit from your changes. Access to the source code is a precondition for this.
16:09 <+bridge_> [ddnet] <Voxel> DDNET
16:09 <+bridge_> [ddnet] <Voxel> (roblox voice) ITS FREE!
16:10 <+bridge_> [ddnet] <Jupstar> cc0 best
16:10 <+bridge_> [ddnet] <Ryozuki> cc0 is free software
16:10 <+bridge_> [ddnet] <Jupstar> when you dead your copyright freedom doesnt help you
16:11 <+bridge_> [ddnet] <Ryozuki> but it doesnt enforce freedom
16:11 <+bridge_> [ddnet] <Jupstar> see
16:11 <+bridge_> [ddnet] <Jupstar> enforce xd
16:11 <+bridge_> [ddnet] <Ryozuki> its paradoxal but required
16:11 <+bridge_> [ddnet] <Ryozuki> you ensure everyone has freedom
16:11 <+bridge_> [ddnet] <Jupstar> i know why it exists, but i dont see humans in 200 years care about such stuff
16:12 <+bridge_> [ddnet] <Ryozuki> humans in 200 years wont probably exist at this rate
16:12 <+bridge_> [ddnet] <Jupstar> xD
16:12 <+bridge_> [ddnet] <Jupstar> tru story
16:21 <+bridge_> [ddnet] <Wohoo> @c0d3d3v  @deen should I open an issue about this? Since I cannot actively code it from myself, for some time
16:35 <+bridge_> [ddnet] <c0d3d3v> xD I can turn it into an enum too üòÑ sorry I did not saw your last answer... I have here generally no overview in discord üòÑ too many messages, if I'm not directly notified I will potentially not read it. You can also write me directly next time, then I see it.
16:40 <+bridge_> [ddnet] <Chairn> what's version 20000? Some people from the future üòÑ ?
17:36 <+bridge_> [ddnet] <r2d2!~> Hello @HELLOXD! So far, I have only asked the DDNet administration to help distribute the editor for testing.
17:36 <+bridge_> [ddnet] <r2d2!~> A number of people have responded, some of whom have run into some bugs. This is already a good thing. But, it seems to me that this is not enough to get the editor into a workable state. It just doesn't make sense to make maps for vanilla. That's what vanilla is, it's mostly standard maps that get played. Therefore, yes. In the near future, I'll fix the bugs that have already been discovered and start adding DDNet functionality. About the 
20:36 <+bridge_> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/949027427613560862/unknown.png
20:36 <+bridge_> [ddnet] <Ryozuki> :weird:
20:44 <+bridge_> [ddnet] <c0d3d3v> there are multiple ways to rename your interface, I use this https://wiki.archlinux.org/title/Network_configuration#Change_interface_name
20:45 <+bridge_> [ddnet] <Ryozuki> wooosh
22:31 <+bridge_> [ddnet] <coldren> hi, can someone tell me where the colors are defined for ctf? so the one team is red and the other one blue? sorry, I know it's not a ddnet feature / related.
22:32 <+bridge_> [ddnet] <coldren> hi, can someone tell me where the colors are defined for ctf in the code? so the one team is red and the other one blue? sorry, I know it's not a ddnet feature / related.
22:46 <+bridge_> [ddnet] <fokkonaut> tee colors
22:46 <+bridge_> [ddnet] <fokkonaut> ?
22:49 <+bridge_> [ddnet] <fokkonaut> https://github.com/ddnet/ddnet/blob/master/src/game/client/gameclient.cpp#L1941-L1961
22:58 <+bridge_> [ddnet] <chillerdragon> video\_4e29ee9.mp4 [video_4e29ee9.mp4](https://t2bot.io/_matrix/media/r0/download/matrix.org/uTHnlTmDTgjnHefsHaOEytub)
22:58 <+bridge_> [ddnet] <chillerdragon> I just realized some ddnet solo maps are super mobile friendly. Maybe thats a chance for a whole new playerbase \:D
23:22 <+bridge_> [ddnet] <c0d3d3v> To what extent are we actually in contact with skins.tw? Have we ever considered to take over the service including costs. So that we can use the database as a standard skin source. Or rather, we have asked whether we can use the database as a standard source without taking over.  Was there any talk about whether we want that at all?
23:29 <+bridge_> [ddnet] <Vy0x2> I like that the ddnet database is moderated and doesnt have low quality skins like skins dot tw, i think there were conversations about the quality requirements months/years ago
23:38 <+bridge_> [ddnet] <c0d3d3v> Yes, I can understand that. If we would take over the service, our own moderators could do that. At the moment, the submissions are probably also moderated, to what extent their definition of quality matches ours is of course unclear. But if this has already been discussed, I don't want to start all over again.
23:56 <+bridge_> [ddnet] <c0d3d3v> Yes, I can understand that. If we would take over the service, our own moderators could do that. At the moment, the submissions are probably also moderated, to what extent their definition of quality matches ours is of course unclear. But if this has already been discussed, I don't want to start all over again.
23:56 <+bridge_> [ddnet] <c0d3d3v> 
23:56 <+bridge_> [ddnet] <c0d3d3v> Since skins.tw is not opensource either, I don't have high hopes that they would cooperate.
