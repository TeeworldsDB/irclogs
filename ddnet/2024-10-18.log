00:09 < bridge> <heinrich5991> that's illegal ^^
00:36 < bridge> <melo∆û> gesundheit?
00:36 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1296602826742693928/image.png?ex=6712e2fb&is=6711917b&hm=92fab382d69fbe0496fe3d68002ae1e40bc5c00990a1c2c737f76c5a561b4bee&
00:42 < bridge> <jxsl13> wyld
00:48 < bridge> <totar> actually pretty interesting custom client
02:47 < bridge> <pathos3005> Thaaanks, and are you able to see Discord reacts on WS?
05:05 < bridge> <pathos3005> @syrinok hey can you ban SP Someone from DDNet USA vanilla server again pls?
05:06 < bridge> <pathos3005> Or any mod
05:06 < bridge> <melo∆û> could you #‚úâ-create-a-ticket and provide a reason please? :)
05:08 < bridge> <syrinok> Dealt with already
05:25 < bridge> <pathos3005> I was told to message here, I also couldn't find that channel so easily
06:20 < bridge> <ryumaaaa> My game is running out of VRAM whenever I'm trying to add skins, anything I can do to add all of them without crashing my game?
06:24 < bridge> <ryumaaaa> I am literally adding the same skins that I had before I re-installed my game.
06:43 < bridge> <melo∆û> don't add all of them :justatest:, the game has no lazy loading, means it loads all skins at once. Maybe try to reduce the quality of some?
06:44 < bridge> <ryumaaaa> Yeah, I figured out to just add a few at a time.
06:45 < bridge> <ryumaaaa> Kinda weird tho, back when I first added all sorts of skins I was able to just drop them in to the folder and thats it.
06:50 < bridge> <melo∆û> its not only skins, gameskins, assets, emoticons, etc all count into vram usage
06:50 < bridge> <melo∆û> its not only skins. Gameskins, assets, emoticons, etc all count into vram usage
06:51 < bridge> <ryumaaaa> Yeah I know, but I only have 1 of each for gameskins, assets, emoticons. Its basically just 1500 skins. ü§£
06:52 < bridge> <ryumaaaa> DDNet skin database + ahl full skin folder
06:54 < bridge> <ryumaaaa> Yeah I know, but I only have 1 of each for gameskins, assets, emoticons. Its basically "just" 1500 skins. ü§£
07:25 < bridge> <melo∆û> Why not use a skinDB url ?
07:25 < bridge> <melo∆û> 
07:25 < bridge> <melo∆û> scrumplex.net/skins
07:25 < bridge> <melo∆û> Or
07:25 < bridge> <melo∆û> ddstats.tw/skins
07:36 < bridge> <ryumaaaa> What is the difference tho?
07:37 < bridge> <ryumaaaa> I've got 1449 skins rn, my game takes 10 seconds to load already and I can't even go in the assets tab anymore ü§£
07:38 < bridge> <melo∆û> You see the skin when someone is using it, and you can use the skin by writing it in the skin name
07:38 < bridge> <melo∆û> 
07:38 < bridge> <melo∆û> You can use skin favourites to always load them
07:38 < bridge> <melo∆û> But that will prevent issues with having to many skins
07:40 < bridge> <ryumaaaa> scrumplex.net/skins doesn't work
07:40 < bridge> <ryumaaaa> I basically just want the majority of skins that people on KoG use which is basically ddnet database + ahl custom skins
07:44 < bridge> <melo∆û> ddstats.tw/skins has much more anyway iirc
07:44 < bridge> <ryumaaaa> everything was working before idk why its not working now
07:44 < bridge> <ryumaaaa> so much trouble for some skins
07:44 < bridge> <melo∆û> One skin to much ig ^^
07:45 < bridge> <melo∆û> ..some??
07:45 < bridge> <melo∆û> 1500skins :kekw:
07:45 < bridge> <ryumaaaa> I literally got the same two folders that I had before and now my game is crashing all of a sudden
07:45 < bridge> <Ewan> i had ~2000 and then i made a pull request to load them faster and it did not get merged
07:45 < bridge> <melo∆û> Rename the folder to skins.bak
07:45 < bridge> <melo∆û> 
07:45 < bridge> <melo∆û> 
07:45 < bridge> <melo∆û> Launch game, drag skins over that you want
07:45 < bridge> <melo∆û> 
07:45 < bridge> <melo∆û> Try again
07:45 < bridge> <Ewan> so i just put my skins on an http server
07:45 < bridge> <Ewan> and use the ingame mechanism
07:46 < bridge> <Ewan> that
07:46 < bridge> <Ewan> that's all u can really do
07:49 < bridge> <ryumaaaa> https://cdn.discordapp.com/attachments/293493549758939136/1296711739072843826/crashing.mp4?ex=6713486a&is=6711f6ea&hm=2b42caae2e475980d93b6181a913bec020a061156ee6902d83b90a6b8bbddb0d&
07:51 < bridge> <Ewan> i believe you
07:51 < bridge> <ryumaaaa> https://cdn.discordapp.com/attachments/293493549758939136/1296712322198536235/image.png?ex=671348f5&is=6711f775&hm=e411d6c4df98f23050f3903320268a99084802ca96344758415e77402a92c247&
07:52 < bridge> <ryumaaaa> I guess I gotta filter some of the skins out
07:53 < bridge> <melo∆û> You lied
07:53 < bridge> <melo∆û> I see custom entities and gameskins
07:53 < bridge> <melo∆û> :thisemoji:
07:53 < bridge> <melo∆û> Also I blame t client
07:53 < bridge> <ryumaaaa> Yeah I added some of them back
07:53 < bridge> <ryumaaaa> I tried with latest DDNet already
07:54 < bridge> <ryumaaaa> I tried with latest DDNet already - same problem.
07:54 < bridge> <ryumaaaa> Yeah I added some of them back after I said that to check wether it causes problems or not
07:54 < bridge> <Ewan> ?? it is not a tclient issue
07:54 < bridge> <syrinok> Ya, the devs added the ability to load skins from a site, rather than requiring them to always be within a folder because of this reason. There's no fix for it
07:55 < bridge> <syrinok> Just don't have this many skins in your folder
07:56 < bridge> <jxsl13> 60mb how much is that in vram :0
08:18 < bridge> <ryozuki> morning ocaml devs and others
08:18 < bridge> <ryozuki> doing some codewars to learn it
08:18 < bridge> <ryozuki> ```ocaml
08:18 < bridge> <ryozuki> let explode s = String.to_seq s |> List.of_seq
08:18 < bridge> <ryozuki> 
08:18 < bridge> <ryozuki> let rec reverse_chars s =
08:18 < bridge> <ryozuki>   match s with [] -> "" | h :: t -> reverse_chars t ^ Char.escaped h
08:18 < bridge> <ryozuki> 
08:18 < bridge> <ryozuki> let reverse_string (s : string) : string = explode s |> reverse_chars
08:18 < bridge> <ryozuki> ```
08:18 < bridge> <ryozuki> :justatest:
08:21 < bridge> <ryozuki> ```ocaml
08:21 < bridge> <ryozuki> let reverse_string2 (s : string) : string =
08:21 < bridge> <ryozuki>     String.to_seq s |> List.of_seq |> List.rev |> List.to_seq |> String.of_seq
08:21 < bridge> <ryozuki> ```
08:21 < bridge> <ryozuki> this is a funny one
08:22 < bridge> <ryozuki> just gotta remember that i guess ocaml calls iterators sequences
08:48 < bridge> <milkeeycat> ```C
08:48 < bridge> <milkeeycat> struct Bar {}
08:48 < bridge> <milkeeycat> struct Baz {}
08:48 < bridge> <milkeeycat> 
08:48 < bridge> <milkeeycat> enum Foo = Bar | Baz;
08:48 < bridge> <milkeeycat> 
08:48 < bridge> <milkeeycat> let foo: Foo = Bar {};
08:48 < bridge> <milkeeycat> 
08:48 < bridge> <milkeeycat> switch foo {
08:48 < bridge> <milkeeycat>     case Bar bar:
08:48 < bridge> <milkeeycat>         // bar contains struct of type Bar
08:48 < bridge> <milkeeycat>     case Baz baz:
08:48 < bridge> <milkeeycat>         // baz contains struct of type Baz
08:48 < bridge> <milkeeycat> }
08:48 < bridge> <milkeeycat> ```
08:48 < bridge> <milkeeycat> Here's one of possible syntaxes
09:44 < bridge> <Jupstar ‚ú™> Depends souly only resolution not disk size
09:45 < bridge> <Jupstar ‚ú™> Don't use resolutions above 512x256. Then you can add around 20000 skins with like 3gb vram
09:46 < bridge> <Jupstar ‚ú™> But I bet you have skins with 4k resolution. On your full HD monitor
09:46 < bridge> <syrinok> @soulyvevo moment (It's solely btw) :greenthing:
09:47 < bridge> <Jupstar ‚ú™> Now do some math and you notice that 4k skins are for 32k monitors
09:47 < bridge> <Jupstar ‚ú™> I was wondering why autocorrect couldn't find it xddd
09:47 < bridge> <Jupstar ‚ú™> I blame too much discord
09:48 < bridge> <syrinok> @soulyvevo moment (It's solely btw) :greenthing:
09:48 < bridge> <syrinok> hi Souly!
09:51 < bridge> <ryumaaaa> Alright, thanks. Will check through them later.
09:51 < bridge> <jxsl13> üëç
10:05 < bridge> <Jupstar ‚ú™> Don't use resolutions above 512x256. Then you can add around 2000* skins with like 3gb vram
10:46 < bridge> <soulyvevo> hi
13:14 < bridge> <ryozuki> pattern matching is the futuro of languages
13:14 < bridge> <ryozuki> pattern matching is the future of languages
13:17 < bridge> <ryozuki> https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3477r0.html
13:21 < bridge> <ryozuki> P3477R0
13:21 < bridge> <ryozuki> There are exactly 8 bits in a byte
13:28 < bridge> <learath2> Heh, finally someone put it in writing
13:38 < bridge> <patiga> woo! float operations in const functions üéâ
13:54 < bridge> <ryozuki> ye best
14:24 < bridge> <learath2> That sounds difficult to get right. Does the compiler have a table of how floats behave on every target or did they settle on a standard common behaviour?
14:24 < bridge> <patiga> https://blog.rust-lang.org/2024/10/17/Rust-1.82.0.html#floating-point-nan-semantics-and-const
14:25 < bridge> <ryozuki> > With this release, Rust standardizes on a set of rules for how NaN values behave. This set of rules is not fully deterministic, which means that the result of operations like (0.0 / 0.0).is_sign_positive() can differ depending on the hardware architecture, optimization levels, and the surrounding code. Code that aims to be fully portable should avoid using to_bits and should use f.signum() == 1.0 instead of f.is_sign_positive(). However, the rule
14:25 < bridge> <patiga> I didn't go through it all, but my understanding is that float operations are very standardized, except for NaN behavior
14:25 < bridge> <ryozuki> > With the semantics for NaN values settled, this release also permits the use of floating-point operations in const fn. Due to the reasons described above, operations like (0.0 / 0.0).is_sign_positive() can produce a different result when executed at compile-time vs at run-time. This is not a bug, and code must not rely on a const fn always producing the exact same result.
14:25 < bridge> <ryozuki> important bits
14:26 < bridge> <patiga> and they decided on some rules regarding Nan stuff, which they use for const
14:26 < bridge> <ryozuki> the &raw mut syntax
14:26 < bridge> <ryozuki> u dont need to use addr of mut now
14:26 < bridge> <ryozuki> macro
14:26 < bridge> <learath2> Ah that is so nice. Macros were so ugly
14:28 < bridge> <patiga> you copied 2 out of the three paragraphs
14:28 < bridge> <patiga> imo the link does a better job here ^^
14:29 < bridge> <ryozuki> hmm idk
14:29 < bridge> <ryozuki> its better to not click links
14:29 < bridge> <ryozuki> xd
14:29 < bridge> <ryozuki> assume the end user is lazy
14:29 < bridge> <ryozuki> and stupid
14:30 < bridge> <patiga> it can also amplify laziness, also in a #dev channel I think you can have higher expectations, especially as people are interested in the subject here
14:31 < bridge> <ryozuki> i guess
14:31 < bridge> <ryozuki> its more something i do cuz this way i know ppl actually see something
14:31 < bridge> <ryozuki> with a link u cant be sure they clicked and looked it
14:31 < bridge> <ryozuki> xd
14:32 < bridge> <patiga> yea, I kinda get that. I also know another person who does that, but I much prefer links: less spam, more complete (at least if it links to well-organized information) :)
14:32 < bridge> <ryozuki> they also added lot of new stable methods, some intrinsics
14:33 < bridge> <ryozuki> https://doc.rust-lang.org/nightly/std/boxed/struct.Box.html#method.new_uninit
14:33 < bridge> <ryozuki> not bad
15:25 < bridge> <heinrich5991> > Due to the reasons described above, operations like `(0.0 / 0.0).is_sign_positive()` can produce a different result when executed at compile-time vs at run-time. **This is not a bug**, and code must not rely on a const fn always producing the exact same result.
15:26 < bridge> <heinrich5991> I think it might be better worded as "we don't consider this a bug"
15:26 < bridge> <heinrich5991> because usually, one would expect the same behavior independent of whether the compiler chose to evaluate a function at compile time or not
16:03 < bridge> <chillerdragon> I am not. I usually launch matrix to comfirm a reply is to a message of mine. On my mobile matrix client I only see ‚Äûthat‚Äú it was a reply not to ‚Äûwhat‚Äú. But reading all messages it‚Äôs usually not ambiguous.
16:05 < bridge> <chillerdragon> Not sure if my image got sent I got a 404 error back from the discord bot -.-
17:00 < bridge> <learath2> Eeeeeeeh, I guess they are kinda ignoring the hard stuff
17:01 < bridge> <learath2> I wonder why they don't have a table of all target behaviours so that this can be guaranteed
17:02 < bridge> <heinrich5991> yea, it's a bit subpar IMO
17:05 < bridge> <learath2> I'm done with the GRE so this will probably be the last useless english word of the day, I'll do 3 for this special occasion:
17:05 < bridge> <learath2> - `hackneyed` = lacking creativity
17:05 < bridge> <learath2> - `rapacious` = very greedy
17:05 < bridge> <learath2> - `scintillating` = impressively clever, amusing or witty
17:05 < bridge> <heinrich5991> scintilla is (was?) a code view for windows
17:05 < bridge> <heinrich5991> perhaps the name was derived from this word?
17:06 < bridge> <heinrich5991> https://en.wikipedia.org/wiki/Scintilla_(software) ‚Äî notepad++ uses it
17:06 < bridge> <heinrich5991> a friend of mine used it for some code editor, too, IIRC
17:07 < bridge> <learath2> Apparently it's a word of it's own but both from the same latin root
17:08 < bridge> <learath2> It's actually in italian too, `scintillare` = to sparkle
18:57 < bridge> <ryozuki> im scintillating
18:57 < bridge> <Ewan> same
18:57 < bridge> <Ewan> but in Qt usually
18:58 < bridge> <ryozuki> how is ur job
18:58 < bridge> <ryozuki> what about the drug test
18:58 < bridge> <ryozuki> what happened
18:58 < bridge> <ryozuki> @mpft
18:58 < bridge> <ryozuki> im rapacious to know about it
18:58 < bridge> <ryozuki> hope the answer isnt hackneyed
18:58 < bridge> <Ewan> I seem to have passed
18:58 < bridge> <ryozuki> nice
18:58 < bridge> <Ewan> Yapping
18:58 < bridge> <ryozuki> did you cheat
18:58 < bridge> <ryozuki> tf is Yapping
18:59 < bridge> <Ewan> It‚Äôs possible
18:59 < bridge> <ryozuki> i feel so smort about the use of clever words
18:59 < bridge> <Ewan> Good
18:59 < bridge> <ryozuki> :brownbear:
18:59 < bridge> <ryozuki> what s yapping
18:59 < bridge> <ryozuki> is it a zoomer thing
18:59 < bridge> <Ewan> yeah
18:59 < bridge> <Ewan> Saying a bunch of stuff
19:00 < bridge> <ryozuki> > Yapping
19:00 < bridge> <ryozuki> > 
19:00 < bridge> <ryozuki> > The act of speaking without discretion at length to an uninterested audience resulting in discomfort, annoyance, and/or discontent. yap derives from the annoying bark produced by small dog.
19:00 < bridge> <ryozuki> > many other terms or "portmanteaus" incorporate "yapping"
19:00 < bridge> <ryozuki> > Yapanese: when someone yaps so much they appear to no longer be speaking English
19:00 < bridge> <ryozuki> > 
19:00 < bridge> <ryozuki> > Yapathon: when a person yaps so extensively they could have ran 42 km or 26 miles during their tangent
19:00 < bridge> <ryozuki> > Yapghanistan: to yap so much that it could be considered as an act of terrorism
19:00 < bridge> <ryozuki> > Man 1: yes so my daughter just got a good VCE result i'm so proud next week the wife and I...
19:00 < bridge> <ryozuki> > Man 2: okay buddy quit yapping this ain't yapghanistan here we speak English not yapanese, now beat it pal!
19:00 < bridge> <ryozuki> > by Man glaser August 17, 2023
19:00 < bridge> <Ewan> lmfao
19:00 < bridge> <Ewan> those 2 words were just funny to me
19:00 < bridge> <ryozuki> you are yapanese
19:00 < bridge> <Ewan> I talk sometimes
19:01 < bridge> <Ewan> I start the job whenever I get the laptop basically
19:01 < bridge> <Ewan> and idk when that is
19:01 < bridge> <Ewan> probably by next Monday
19:07 < bridge> <cellegenrih> perfectly describing me
19:15 < bridge> <ryozuki> true
19:19 < bridge> <vappy19> üëÄ
19:57 < bridge> <learath2> your rapacity is enthralling
21:00 < bridge> <teero777> chillerdragon: can i get access to your opentube thingy?
21:00 < bridge> <teero777> i forgot what happened last time
21:00 < bridge> <teero777> i need some service to upload smol vids that don't expire
21:00 < bridge> <teero777> idc if it is public
21:12 < bridge> <ryozuki> https://joinpeertube.org/
22:55 < bridge> <louis> i never knew how goated obsidian was
