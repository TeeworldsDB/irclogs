00:21 <@heinrich5991> .
00:23 <@heinrich5991> .
00:23 <+bridge> [ddnet] <Ryozuki> why not remove quakenet
00:23 <+bridge> [ddnet] <Ryozuki> ppl on irc wont care what irc sv ppl are
00:24 <+bridge> [ddnet] <Ryozuki> []
00:24 <+bridge> [ddnet] <Ryozuki> ppl on discord*
00:25 <@heinrich5991> to distinguish between quakenet nad freenode
00:54 <+bridge> [ddnet] <Ryozuki> yeah but why
05:07 <+bridge> [ddnet] <CloudlÃ­nK> @Learath2 I'll try to do it tomorrow, since it's late now and I have to sleep.
09:38 <+bridge> [ddnet] <Learath2> I knew that hack wouldnt work well :/
09:39 <+bridge> [ddnet] <Learath2> Colors with alpha take the whole 32bits
09:39 <+bridge> [ddnet] <Learath2> I need to save them in a different format
12:03 <+bridge> [ddnet] <Learath2> Okay while its safe to store them as ints its not safe to manipulate them as such
12:03 <+bridge> [ddnet] <Learath2> I guess I can work with that
13:15 <+bridge> [ddnet] <Learath2> the color isn't artificially lighted anymore, that's why it looked darker
13:16 <+bridge> [ddnet] <Learath2> @deen your third bug I can't recreate, even after completely deleting my config
13:18 <+bridge> [ddnet] <Learath2> (If I could I wouldn't have told you to it's okay to merge :D)
13:20 <+bridge> [ddnet] <Learath2> okay, done with the quick fixes, I'll stop pushing to master ðŸ™‚
17:17 <+bridge> [ddnet] <fokkonaut> @Learath2 could you make the score format change soon? Right now, it is completely wrong - the client receives it as a system message, not a game message and it generally belongs to an extended player netobject, doesnt it?
17:18 <+bridge> [ddnet] <Learath2> I think it belongs to a `CNetObj_DDNetPlayer`
17:18 <+bridge> [ddnet] <fokkonaut> yes.
17:18 <+bridge> [ddnet] <Learath2> @heinrich5991 do you agree?
17:18 <+bridge> [ddnet] <heinrich5991> no. DDNetGameObj
17:19 <+bridge> [ddnet] <fokkonaut> Ah right, you told me earlier
17:19 <+bridge> [ddnet] <fokkonaut> `CNetObj_DDNetGameInfo`
17:23 <+bridge> [ddnet] <Learath2> See I think it belongs there
17:23 <+bridge> [ddnet] <Learath2> but for fokkonauts usecase that'd be useless
17:23 <+bridge> [ddnet] <Learath2> as with GameInfo everyone would have the same score type
17:24 <+bridge> [ddnet] <Learath2> (which makes sense to you and me, but for a mod that mixes many elements it doesn't)
17:24 <+bridge> [ddnet] <fokkonaut> Ahh, right
17:25 <+bridge> [ddnet] <fokkonaut> Okay, so it needs to be in that Player obj
17:29 <+bridge> [ddnet] <heinrich5991> hmmmm
17:29 <+bridge> [ddnet] <heinrich5991> do we really need that complexity? ðŸ˜¦
17:29 <+bridge> [ddnet] <fokkonaut> Yes, please :D
17:32 <+bridge> [ddnet] <fokkonaut> https://img-9gag-fun.9cache.com/photo/a83nqW6_460swp.webp
17:40 <+bridge> [ddnet] <Ryozuki> no
17:41 <+bridge> [ddnet] <abcqwerty> u
18:42 <+bridge> [ddnet] <Learath2> @heinrich5991 we don't but it'd be nice for modifiability
18:43 <+bridge> [ddnet] <Learath2> question is do we want to accomodate that or not
18:48 <+bridge> [ddnet] <ChillerDragon> yo does anyone have an solution for using cd during pipeing?
18:48 <+bridge> [ddnet] <ChillerDragon> 
18:48 <+bridge> [ddnet] <ChillerDragon> cd foo/;./a | cd bar/;./b
18:48 <+bridge> [ddnet] <ChillerDragon> 
18:48 <+bridge> [ddnet] <ChillerDragon> i want to pipe output of into b but they are in different directorys and have to be executed from their directory
18:48 <+bridge> [ddnet] <heinrich5991> use subshells
18:48 <+bridge> [ddnet] <heinrich5991> `(cd abc; cmd1) | (cd def; cmd2)`
18:48 <+bridge> [ddnet] <ChillerDragon> interesting and that works? why
18:49 <+bridge> [ddnet] <heinrich5991> because you spawn subshells
18:49 <+bridge> [ddnet] <ChillerDragon> isnt cmd1 result getting piped into cd and then killing cd?
18:49 <+bridge> [ddnet] <ChillerDragon> magic ima try
18:50 <+bridge> [ddnet] <Learath2> as you can see there is no pipe between cmd1 and cd
18:51 <+bridge> [ddnet] <Learath2> how can it even pipe the result without a pipe? ðŸ˜„
18:51 <+bridge> [ddnet] <ChillerDragon> and if i have a third binary in a third pipe same dir as second?
18:51 <+bridge> [ddnet] <ChillerDragon> do i have to use cd agian i guess?
18:51 <+bridge> [ddnet] <ChillerDragon> cmd1) | (cd def
18:51 <+bridge> [ddnet] <ChillerDragon> i see a pipe there
18:52 <+bridge> [ddnet] <ChillerDragon> lol it worked
18:52 <+bridge> [ddnet] <ChillerDragon> awesome thanks heinrich
19:55 <+bridge> [ddnet] <fokkonaut> `pSelf->m_World.m_Core.m_apCharacters[Victim]->m_Super` is the same as `pChr->Core()->m_Super`, right?
19:59 <+bridge> [ddnet] <fokkonaut> and, why would you use `GameServer()->m_World.` instead of `GameWorld()->`?
19:59 <+bridge> [ddnet] <Ryozuki> GameWorld returns m_world
19:59 <+bridge> [ddnet] <Ryozuki> i think
19:59 <+bridge> [ddnet] <fokkonaut> isnt it the same?
19:59 <+bridge> [ddnet] <Ryozuki> yes
20:00 <+bridge> [ddnet] <fokkonaut> so the first one with super is also smarter to use the right version?
20:00 <+bridge> [ddnet] <Learath2> depends on where you are obviously
20:00 <+bridge> [ddnet] <Ryozuki> the hierachy in ddnet code
20:00 <+bridge> [ddnet] <Ryozuki> is messed up imo
20:00 <+bridge> [ddnet] <Ryozuki> everything is everywhere
20:00 <+bridge> [ddnet] <Learath2> I can imagine `CCharacterCore *pChr` and `CCharacter *pChr`
20:01 <+bridge> [ddnet] <Learath2> or `CCharacterInfo`
20:01 <+bridge> [ddnet] <Ryozuki> CCharacterCore  is not usually defined as pChr
20:01 <+bridge> [ddnet] <Ryozuki> on code
20:01 <+bridge> [ddnet] <Ryozuki> from what i rmeember
20:01 <+bridge> [ddnet] <heinrich5991> more `pCore`
20:01 <+bridge> [ddnet] <fokkonaut> or `pCharCore`
20:02 <+bridge> [ddnet] <Learath2> anyways, the point is how you access somewhere depends on where you are accessing from
20:02 <+bridge> [ddnet] <fokkonaut> so, from an entity class i can use GameWorld()-> instead of GameServer()->m_World. right?
20:03 <+bridge> [ddnet] <nuborn> yes
20:03 <+bridge> [ddnet] <fokkonaut> and for the example with super, (its in ddracecommands.cpp) i can also use pChr->Core()-> instead of the way using the GameServer, right?
20:03 <+Learath2>  does CEntity even have access to CGameServer()?
20:04 <+bridge> [ddnet] <fokkonaut> yes?
20:05 <+Learath2> yep, weird, I wonder why we needed that :P
20:05 <+bridge> [ddnet] <fokkonaut> for this, maybe if `(GameServer()->Collision()->GetCollisionAt(m_Pos.x, m_Pos.y) == TILE_DEATH)`
20:06 <+Learath2> the hierarchy is so weird here
20:07 <+bridge> [ddnet] <fokkonaut> indeed
20:09 <+bridge> [ddnet] <ChillerDragon> hmm am i the only person having real trouble connecting a dummy on a 0.6.5 vanilla server?
20:09 <+bridge> [ddnet] <ChillerDragon> im not sure what version debian testing currently has but i dont think its latest.
20:10 <+bridge> [ddnet] <fokkonaut> am i stupid or is this the uselessest thing ever? This line is in gameworld.cpp XD `CCharacter *p = (CCharacter *)GameServer()->m_World.FindFirst(ENTTYPE_CHARACTER);`
20:10 <+bridge> [ddnet] <ChillerDragon> i get cp or i gltich through walls see glitches etc
20:10 <+bridge> [ddnet] <ChillerDragon> why should it be useless?
20:10 <+bridge> [ddnet] <fokkonaut> GameServer()->m_World == this file
20:10 <+bridge> [ddnet] <ChillerDragon> ah
20:10 <+bridge> [ddnet] <fokkonaut> you can just go ahead and write FindFirst
20:10 <+bridge> [ddnet] <ChillerDragon> xd
20:11 <+bridge> [ddnet] <ChillerDragon> ya probably stupid then
20:11 <+bridge> [ddnet] <Learath2> @fokkonaut where?
20:11 <+bridge> [ddnet] <ChillerDragon> gamecore
20:11 <+bridge> [ddnet] <ChillerDragon> gameworld
20:11 <+bridge> [ddnet] <ChillerDragon> xd
20:11 <+bridge> [ddnet] <ChillerDragon> he just wrote it
20:11 <+bridge> [ddnet] <fokkonaut> oh, nvm
20:11 <+bridge> [ddnet] <fokkonaut> it was a function by me wtf
20:11 <+bridge> [ddnet] <ChillerDragon> xxxxxxxxxxxxxD
20:12 <+bridge> [ddnet] <fokkonaut> im st00pid
20:12 <+bridge> [ddnet] <fokkonaut> @Learath2 i assume its okay to use GameWorld() instead of GameServer()->m_World. from character.cpp?
20:13 <+bridge> [ddnet] <Learath2> Look at it's definition @fokkonaut ofc that's always safe
20:13 <+bridge> [ddnet] <ChillerDragon> oh also tested on windows
20:13 <+bridge> [ddnet] <ChillerDragon> latest ddnet
20:13 <+bridge> [ddnet] <ChillerDragon> dummys are broken in vanilla 0.6.5
20:13 <+bridge> [ddnet] <Learath2> Actually there is a function in CGameWorld that does that
20:13 <+bridge> [ddnet] <Learath2> it's by oy ðŸ˜›
20:14 <+bridge> [ddnet] <fokkonaut> `GameServer()->m_World.m_Core.m_apCharacters[m_pPlayer->GetCID()] = 0;`
20:14 <+bridge> [ddnet] <fokkonaut> is in character.cpp, should be okay to use m_Core = 0;?
20:15 <+bridge> [ddnet] <Ryozuki> close the bug
20:15 <+bridge> [ddnet] <Ryozuki> no one uses dummyo n vanilla
20:15 <+bridge> [ddnet] <ChillerDragon> i do
20:15 <+bridge> [ddnet] <Ryozuki> its useless
20:15 <+bridge> [ddnet] <ChillerDragon> for testing
20:15 <+bridge> [ddnet] <ChillerDragon> and if its not working the connect dummy button should atleast be hidden in vanilla
20:15 <+bridge> [ddnet] <ChillerDragon> since it forces the player to reconnect
20:16 <+bridge> [ddnet] <Ryozuki> ur so annoying with vanilla
20:16 <+bridge> [ddnet] <fokkonaut> xD
20:16 <+bridge> [ddnet] <Ryozuki> use vanilla client for vanilla
20:16 <+bridge> [ddnet] <ChillerDragon> yes sure switching client all the time xd
20:16 <+bridge> [ddnet] <fokkonaut> @Learath2
20:17 <+bridge> [ddnet] <Learath2> @fokkonaut I don't know
20:17 <+bridge> [ddnet] <Learath2> ofc not
20:18 <+bridge> [ddnet] <Learath2> Look at the definitions instead of asking me
20:19 <+bridge> [ddnet] <Learath2> `CGameworld.m_Core` is the `CWorldCore`, `CCharacter.m_Core` is `CCharacterCore`
20:21 <+bridge> [ddnet] <fokkonaut> but it leads to m_apCharacters, which is a CaharacterCore, just as m_Core
20:47 <+bridge> [ddnet] <Learath2> it sets a pointer to this characters core to 0
20:47 <+bridge> [ddnet] <Learath2> not this characters core to 0
21:17 <+bridge> [ddnet] <fokkonaut> oh
21:30 <+bridge> [ddnet] <Learath2> I figured out what's wrong with the tee colors, I'm lightening it twice :/
21:30 <+bridge> [ddnet] <Learath2> dunno a good way to fix it though
21:36 <+bridge> [ddnet] <Learath2> @heinrich5991 have a minute? ðŸ˜›
21:37 <+bridge> [ddnet] <heinrich5991> not really
21:37 <+bridge> [ddnet] <heinrich5991> what's it about?
21:38 <+bridge> [ddnet] <Learath2> Now that I store colors accurately, I have to lighten colors when reading from the config, but I also have to lighten colors I get from the server
21:38 <+bridge> [ddnet] <Learath2> so I end up lightening twice
21:38 <+bridge> [ddnet] <Learath2> well if you don't have a minute no point explaining ðŸ™‚
22:12 <+bridge> [ddnet] <Learath2> @deen any advice?
22:12 <+bridge> [ddnet] <Learath2> I'm starting to think maybe I didn't make anything better with this whole pr :/
22:32 <+bridge> [ddnet] <fokkonaut> Why did you even start? I mean what was your idea behind it
22:33 <+bridge> [ddnet] <Learath2> I wanted to implement a proper color picker for the tees, but there were color functions everywhere
22:33 <+bridge> [ddnet] <fokkonaut> What does it mean, everyhwere?
22:34 <+bridge> [ddnet] <Learath2> like color.h had some, CGameClient had some
22:34 <+bridge> [ddnet] <heinrich5991> nah, I think your PR makes things better ðŸ™‚
22:34 <+bridge> [ddnet] <Learath2> the editor had its own
22:34 <+bridge> [ddnet] <fokkonaut> And how is it right now?
22:34 <+bridge> [ddnet] <Learath2> I think there were 3 implementations of HslToRgb
22:34 <+bridge> [ddnet] <fokkonaut> xD
22:35 <+bridge> [ddnet] <Learath2> I'll stop pushing to master now, I think this works
22:36 <+bridge> [ddnet] <fokkonaut> Lol
22:36 <+bridge> [ddnet] <fokkonaut> dont you test your stuff?
22:37 <+bridge> [ddnet] <Learath2> I do, some bugs like these aren't very apparent
22:37 <+bridge> [ddnet] <Learath2> like in this case, the colors got lighter every time you restarted the client
22:37 <+bridge> [ddnet] <fokkonaut> ah yea
22:37 <+bridge> [ddnet] <Learath2> when testing I usually restart once or twice
22:39 <+bridge> [ddnet] <fokkonaut> https://github.com/ddnet/ddnet/blob/master/src/game/server/ddracecommands.cpp#L108
22:39 <+bridge> [ddnet] <Learath2> @heinrich5991 what's your opinion on https://github.com/ddnet/ddnet/blob/master/src/game/variables.h#L92 ?
22:39 <+bridge> [ddnet] <fokkonaut> I am using pChr->Core()-> here, is that ok?
22:39 <+bridge> [ddnet] <Learath2> I couldn't come up with something cleaner :/
22:42 <+bridge> [ddnet] <Learath2> @fokkonaut yeah looks okay
22:42 <+bridge> [ddnet] <Learath2> That`CCharacter::GetCore()` looks wrong btw, it seems to return a copy of the core
22:42 <+bridge> [ddnet] <Learath2> idk why that was ever needed
22:43 <+bridge> [ddnet] <fokkonaut> Yes, also got confused what its for
22:43 <+bridge> [ddnet] <Learath2> maybe some prediction blackmagic
22:43 <+bridge> [ddnet] <fokkonaut> I dont think so :D
22:43 <+bridge> [ddnet] <fokkonaut> but maybe
22:45 <+bridge> [ddnet] <fokkonaut> Ah, found it
22:45 <+bridge> [ddnet] <fokkonaut> GetCore is used in TeeHistorian: https://github.com/ddnet/ddnet/blob/master/src/game/server/gamecontext.cpp#L636
22:46 <+bridge> [ddnet] <heinrich5991> it's okay I guess @Learath2
22:47 <+bridge> [ddnet] <Learath2> @fokkonaut GetCore is older then teehistorian, greyfox seems to have added it
22:47 <+bridge> [ddnet] <fokkonaut> oh, really?
22:48 <+bridge> [ddnet] <Learath2> let me introduce you to a very useful tool
22:48 <+bridge> [ddnet] <Learath2> `git blame`
22:48 <+bridge> [ddnet] <Learath2> in teeworlds it'll always lead you to "copied refactor to trunk" but if it doesn't it's helpful ðŸ˜›
22:48 <+bridge> [ddnet] <fokkonaut> xd
22:51 <+bridge> [ddnet] <Learath2> maybe i should have based the color classes on a single int instead of an actual vector
23:08 <+bridge> [ddnet] <fokkonaut> Hey @heinrich5991, could you help me some time for the file iterator? :D
23:08 <+bridge> [ddnet] <Learath2> file iterator?
23:09 <+bridge> [ddnet] <heinrich5991> given that I just told @Learath2 that I have no time, probably not right now
23:09 <+bridge> [ddnet] <fokkonaut> Oke
23:09 <+bridge> [ddnet] <heinrich5991> @Learath2 iterating over files using the callback method
23:10 <+bridge> [ddnet] <Learath2> @fokkonaut what are you stuck with? You have about 15 minutes before I pass out ðŸ˜„
23:11 <+bridge> [ddnet] <fokkonaut> I cant right now, in bed already :/ But if you could help me tomorrow, it would be cool
23:11 <+bridge> [ddnet] <Learath2> I'm going to be pretty much off the grid tomorrow, have a couple flights to catch
23:11 <+bridge> [ddnet] <Ryozuki> :tee_thinking:
23:12 <+bridge> [ddnet] <fokkonaut> (I need a loop in Gamecontext::OnInit, which goes through some files and changes one line entry per file using this ofstream thing)
23:12 <+bridge> [ddnet] <Learath2> well I'll have internet at the airports so i can give you a hand if you manage to catch me at the correct time ðŸ˜›
23:12 <+bridge> [ddnet] <fokkonaut> it works for one file, just dont know how to go through all together
23:13 <+bridge> [ddnet] <Learath2> ofstream is definitely not the teeworlds way, shameful
23:13 <+bridge> [ddnet] <fokkonaut> I will try to
23:13 <+bridge> [ddnet] <fokkonaut> @Learath2 xd what do you recommend
23:13 <+bridge> [ddnet] <ezy> :whenwwseeachild:
23:13 <+bridge> [ddnet] <Ryozuki> ```cpp
23:13 <+bridge> [ddnet] <Ryozuki> std::string CResourceManager::LoadFile(std::string path)
23:13 <+bridge> [ddnet] <Ryozuki> {
23:13 <+bridge> [ddnet] <Ryozuki>     std::ifstream t(path);
23:13 <+bridge> [ddnet] <Ryozuki>     std::string str((std::istreambuf_iterator<char>(t)),
23:13 <+bridge> [ddnet] <Ryozuki>                     std::istreambuf_iterator<char>());
23:13 <+bridge> [ddnet] <Ryozuki>     t.close();
23:13 <+bridge> [ddnet] <Ryozuki>     return str;
23:13 <+bridge> [ddnet] <Ryozuki> }``` isnt it beutiful
23:13 <+bridge> [ddnet] <ezy> yes
23:14 <+bridge> [ddnet] <Learath2> NOOOOO
23:14 <+bridge> [ddnet] <fokkonaut> dfq xd
23:14 <+bridge> [ddnet] <Ryozuki> c++11 way to load files
23:14 <+bridge> [ddnet] <Learath2> my eyes are bleeding, thanks
23:14 <+bridge> [ddnet] <Ryozuki> i like it hto its super simple xd
23:14 <+bridge> [ddnet] <Learath2> I wonder if the C++ people are even thinking at this point
23:14 <+bridge> [ddnet] <Ryozuki> oh
23:14 <+bridge> [ddnet] <Learath2> look at that expression, it looks HUGE
23:14 <+bridge> [ddnet] <Ryozuki> here comes daily learath rant
23:14 <+bridge> [ddnet] <Learath2> I don't rant daily
23:15 <+bridge> [ddnet] <Learath2> biweekly at most
23:15 <+bridge> [ddnet] <fokkonaut> xD
23:15 <+bridge> [ddnet] <Ryozuki> ```cpp
23:16 <+bridge> [ddnet] <Ryozuki> std::vector<unsigned char> CResourceManager::LoadBinaryFile(std::string path)
23:16 <+bridge> [ddnet] <Ryozuki> {
23:16 <+bridge> [ddnet] <Ryozuki>     std::ifstream t(path, std::ios::binary);
23:16 <+bridge> [ddnet] <Ryozuki>     return std::vector<unsigned char>(std::istreambuf_iterator<char>(t), {});
23:16 <+bridge> [ddnet] <Ryozuki> }``` @Learath2 ðŸ‘¹
23:16 <+bridge> [ddnet] <Learath2> keep it away from me
23:16 <+bridge> [ddnet] <Ryozuki> yay found a new way to torture u
23:16 <+bridge> [ddnet] <Ryozuki> xd
23:17 <+bridge> [ddnet] <Learath2> `using namespace std;`
23:17 <+bridge> [ddnet] <fokkonaut> btw: what is an unsigned variable?
23:18 <+bridge> [ddnet] <Learath2> it's a variable that doesn't have a sign
23:18 <+bridge> [ddnet] <Ryozuki> u dont know that? xd
23:18 <+bridge> [ddnet] <heinrich5991> it can only have positive values
23:19 <+bridge> [ddnet] <Learath2> (and thus doesn't need the sign bit, and thus can hold larger numbers)
23:19 <+bridge> [ddnet] <Ryozuki> and it has a more upper limit on what value it can hold
23:19 <+bridge> [ddnet] <Ryozuki> @fokkonaut read about Ca2
23:19 <+bridge> [ddnet] <Ryozuki> wait thats the spanish word
23:19 <+bridge> [ddnet] <Ryozuki> xd
23:19 <+bridge> [ddnet] <Learath2> Carbonic anhydrase?
23:19 <+bridge> [ddnet] <Ryozuki> Two's complement
23:19 <+bridge> [ddnet] <Learath2> makes more sense
23:19 <+bridge> [ddnet] <Ryozuki> xd
23:19 <+bridge> [ddnet] <Ryozuki> in spanish is "complemento a dos"
23:20 <+bridge> [ddnet] <heinrich5991> @Ryozuki DoSer
23:21 <+bridge> [ddnet] <Learath2> complemento a due in italian
23:21 <+bridge> [ddnet] <Ryozuki> @heinrich5991 wat xd
23:21 <+bridge> [ddnet] <fokkonaut> wait, what happens if an integer is 100k big? i mean can it hold this big Numbers?
23:21 <+bridge> [ddnet] <Learath2> 100k big?
23:21 <+bridge> [ddnet] <Ryozuki> it overflows
23:21 <+bridge> [ddnet] <fokkonaut> what does that mean
23:22 <+bridge> [ddnet] <Learath2> if your number is too large for your type it overflows
23:22 <+bridge> [ddnet] <Learath2> if a signed integer overflows it's undefined behaviour
23:22 <+bridge> [ddnet] <Learath2> if an unsigned one overflows it wraps around (goes back to 0)
23:22 <+bridge> [ddnet] <fokkonaut> and how to use big numbers then xd
23:23 <+bridge> [ddnet] <Learath2> use a long, or a long long, or an arbitrary precision math library
23:23 <+bridge> [ddnet] <Ryozuki> u dont need numbers that high usually
23:23 <+bridge> [ddnet] <Learath2> or code your own arbitrary precision math library
23:23 <+bridge> [ddnet] <fokkonaut> `+2147483647` is the max int for c+
23:23 <+bridge> [ddnet] <fokkonaut> +?*
23:23 <+bridge> [ddnet] <Ryozuki> unsigned long long = 18446744073709551615
23:23 <+bridge> [ddnet] <Learath2> No, that's the minimum allowed
23:24 <+bridge> [ddnet] <Learath2> The standard only tells you how big it has to be at the least
23:24 <+bridge> [ddnet] <fokkonaut> lol
23:24 <+bridge> [ddnet] <Learath2> The actual implementation is allowed to make it as big as it wants
23:24 <+bridge> [ddnet] <Learath2> <climits> tells you how big each type is
23:25 <+bridge> [ddnet] <Ryozuki> u cant have unlimited things in computers (for now)
23:25 <+bridge> [ddnet] <Ryozuki> u will run out of memory
23:26 <+bridge> [ddnet] <Learath2> at which point you can write to disk, and after you run out of that you can write to an amazon S3 bucket \o/
23:26 <+bridge> [ddnet] <fokkonaut> xD
