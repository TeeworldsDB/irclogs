01:38 < bridge> <cyberFighter> ??
01:38 < bridge> <cyberFighter> https://cdn.discordapp.com/attachments/293493549758939136/1260017101150883941/image.png?ex=668dc9de&is=668c785e&hm=32f11480c0ca0fa81b0675264d2dc3ecca0e6205156735112b310f38fd0e66e9&
01:53 < bridge> <1234503178> english or spanish?
02:23 < ws-client> <ChillerDragon> i think this is the first time i have seen cmake trip on percentages xd https://zillyhuhn.com/cs/.1720484547.png
02:58 < bridge> <gumbatw> Suddenly there is a demand for ddnet mobile client, do kids these days obly have a phone :/
02:58 < bridge> <soulyvevo> same thing happened to me today lol
02:58 < bridge> <soulyvevo> and i got confused
02:58 < bridge> <gumbatw> But I think its very cool, i vould even imagine some solo maps being really fun on mobile
03:47 < bridge> <headshotnoby> winlator mobox!!1!1
03:55 < bridge> <soulyvevo> fng is super fun on mobile
05:14 < ws-client> <ChillerDragon> @gumbatw suddenly? I think the only sudden thing is robsti actually working on it. Phones have replaced computers since a long time now.
05:20 < ws-client> <ChillerDragon> does this image still work? i cant open it -.-
05:20 < ws-client> <ChillerDragon> https://cdn.discordapp.com/attachments/293493549758939136/886613958994325534/ima_f48abe1.jpeg
06:56 < bridge> <headshotnoby> https://cdn.discordapp.com/attachments/293493549758939136/1260097249506103387/ima_f48abe1.jpg?ex=668e1483&is=668cc303&hm=6826af4c1fbd2372702282d2a757370d8c8a8267c5c5e27ed6af043b041b0ac7&
08:07 < bridge> <tsfreddie> being sweet
09:14 < bridge> <ryozuki> https://kuterdinel.com/nv_isa_sm89/
09:14 < bridge> <ryozuki> 4090 nvidia instruction set
09:17 < bridge> <Ewan> this seems to be missing words
09:19 < bridge> <ryozuki> wdym
09:19 < bridge> <ryozuki> its reverse engineered
09:20 < bridge> <Ewan> ya
09:20 < bridge> <Ewan> no English
09:21 < bridge> <Ewan> so they disassembled and gave names to opcodes but I feel like most ppl need a description for anything to make sense
09:22 < bridge> <totar> is the instruction set useful?
09:23 < bridge> <totar> the gpu lets you just execute these instructions directly somehow?
09:28 < bridge> <totar> I guess you can
09:28 < bridge> <totar> looks like it was also made with this
09:28 < bridge> <totar> <https://github.com/kuterd/nv_isa_solver>
09:29 < bridge> <ryozuki> https://pretalx.com/devconf-cz-2024/talk/W3AVCT/
09:44 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1260139522650411008/stop-doing-rust-v0-0s8en3lze9qc1.png?ex=668e3be2&is=668cea62&hm=6a2766c1cd01871e4fde5b5d157c8e1b91e71ac4ff9b3bc8dafe5e4ce3f9536e&
09:52 < bridge> <ryozuki> mmm could have been done better
10:05 < bridge> <heinrich5991> yes
10:06 < bridge> <heinrich5991> looks like a copy of the original math meme with semi-good replacements
10:28 < bridge> <heinrich5991> @learath2 you wanted to take a look at https://github.com/ddnet/ddnet/issues/5156 at some point üòõ
12:59 < bridge> <animepdf> being sweet, obviously
13:48 < bridge> <ryozuki> anybody knows another web like https://www.mouser.es/
13:48 < bridge> <ryozuki> for DIY electronics
13:48 < bridge> <ryozuki> microchips
13:56 < bridge> <learath2> Digikey?
13:57 < bridge> <learath2> There is also arrow I guess
13:58 < bridge> <learath2> I only ever got stuff from digikey
14:08 < bridge> <melo∆û> @louis.place i request your review once again!
14:09 < bridge> <melo∆û> oh wait nvm i made an oopsie
14:12 < bridge> <melo∆û> ok now
14:12 < bridge> <melo∆û> :justatest:
14:19 < bridge> <louis> ok i responded
14:19 < bridge> <louis> i'm still being a bit nitpicky, but it's just so someone else in the future doesn't feel the need to change it again
14:19 < bridge> <louis> it's ultimately up to the higher ups to determine if the icon is good enough though
14:20 < bridge> <louis> @blaiszephyr do you know if you have the .svg source for that file?
14:20 < bridge> <louis> @blaiszephyr do you know if you have the .svg source for that image?
14:20 < bridge> <melo∆û> nope, @catseyenebulous might
14:56 < bridge> <rumichsirni> –≤—Å–µ–º –ø—Ä–∏–≤–µ—Ç,–∫–∞–∫ –ø–æ–º–µ–Ω—è—Ç—å —Å–∫–∏–Ω?
14:56 < bridge> <heinrich5991> russian ‚Üí #off-topic
14:56 < bridge> <heinrich5991> all other channels are english-only
15:55 < bridge> <jeanclovis0387_91215> Hello there ! 
15:55 < bridge> <jeanclovis0387_91215> I have an issue with my monitor (ultra-wide screen, 3440x1440 px). Cursor does not appear at top and bottom of the screen. Does anyone know how to fix this ?
15:55 < bridge> <jeanclovis0387_91215> https://cdn.discordapp.com/attachments/293493549758939136/1260232966320295956/Cursor_UWS.mp4?ex=668e92e9&is=668d4169&hm=5c655fac703e582cf26dfca21d44274ca67cfc9c0b2bbc224698975b1d78aeb6&
16:01 < bridge> <teero777> set `cl_mouse_max_distance` lower or adjust your screen resolution if the game does not fill the whole screen
16:02 < bridge> <jeanclovis0387_91215> Thanks, that's exactly what i was looking for üòÅ
16:50 < bridge> <ryozuki> https://robertheaton.com/pyskywifi/
16:55 < bridge> <ryozuki> https://github.com/yarrick/iodine
17:36 < bridge> <melo∆û> @louis.place final update just dropped :feelsking:
18:02 < bridge> <fokkonaut> Is it problematic to dilate a dilated image after editing it again?
18:02 < bridge> <p1mble> go
18:02 < bridge> <p1mble> yea
18:02 < bridge> <p1mble> ywhay
18:03 < bridge> <melo∆û> i dont really think so
18:03 < bridge> <fokkonaut> ok
18:03 < bridge> <p1mble> so me li de ro m√©
18:03 < bridge> <melo∆û> i mean i dilated Insanity's team0mode indicator like 10 times - still got added
18:03 < bridge> <p1mble> fi√æ
18:03 < bridge> <melo∆û> :justatest:
18:03 < bridge> <melo∆û> dilate -> edit -> dilate -> edit is what i mean
18:04 < bridge> <p1mble> ¬µ√∏√∞¬©x√¶√º√©
18:04 < bridge> <p1mble> √¶
18:25 < bridge> <limbogd.> –∫—Ç–æ –¥—Ä—É–∂–∏—Ç—å
18:51 < bridge> <patiga> https://ddnet.org is struggling for me rn
18:52 < bridge> <patiga> (seems fine again)
19:07 < bridge> <learath2> We moved around the db server, so it might be load from that affecting it
19:14 < bridge> <zxcproche4ka> –ó–∞–±–∏—Ä–∞–π—Ç–µ S.T.A.L.K.E.R 2 –ø—Ä–µ–¥–∑–∞–∫–∞–∑ –Ω–∞ —Å–≤–æ–π Steam –ë–µ—Å–ø–ª–∞—Ç–Ω–æ https://shorturl.at/q243Z –Ω–µ –∑–Ω–∞—é –±–∞–≥ —ç—Ç–æ –∏–ª–∏ –Ω–µ—Ç –Ω–æ —è –∑–∞–±—Ä–∞–ª
19:26 < bridge> <0xdeen> Weird, I didn't see anything wrong with it, load is also not high
19:31 < bridge> <0xdeen> This is on a full DDNet server. Why are we having 16% overhead in printf?!
19:32 < bridge> <0xdeen> https://cdn.discordapp.com/attachments/293493549758939136/1260287350295236769/message.txt?ex=668ec58f&is=668d740f&hm=0d1205f5cf5c1e7ad642afb2d64643ef5e2e972d01d0697aa925ea06c597b232&
19:32 < bridge> <learath2> Any stack?
19:32 < bridge> <learath2> Any stacktrace?
19:32 < bridge> <0xdeen> I haven't used perf before. It's on root@rus2.ddnet.org if you want to take a look yourself, or tell me what to run
19:33 < bridge> <0xdeen> Ah, got to use --call-graph too
19:35 < bridge> <learath2> `--call-graph dwarf` I think since we probably omit frame pointers on a release build
19:35 < bridge> <chairn> could it be related to unicode character more prevalent on russian servers ?
19:36 < bridge> <0xdeen> Looks very different with dwarf
19:36 < bridge> <0xdeen> https://cdn.discordapp.com/attachments/293493549758939136/1260288588843847720/message.txt?ex=668ec6b6&is=668d7536&hm=7786b97a32ec4dc3a0cac54703954a768bee8dca3b338a44fc5129d96df21318&
19:37 < bridge> <0xdeen> Lots of antibot
19:37 < bridge> <learath2> Mh, shouldn't be any harder on printf than any other utf8 character except on windows where we do some re-encoding to please winapi
19:37 < bridge> <learath2> Yeah I can imagine antibot being veryvery expensive
19:37 < bridge> <0xdeen> Oooh, that might explain why the 128 player servers were running so well!
19:37 < bridge> <0xdeen> I had to disable antibot
19:38 < bridge> <0xdeen> even with 128 players it was using less cpu than a 64 player server full
19:38 < bridge> <learath2> still lots of printf though
19:38 < bridge> <learath2> Did you record this to a file, can I take a peek?
19:38 < bridge> <0xdeen> https://cdn.discordapp.com/attachments/293493549758939136/1260289087722618963/message.txt?ex=668ec72d&is=668d75ad&hm=ff2d1cbb26f058f8e6b3f2f4975f06b0d10a3e82333438427f002e5a62f3e0a4&
19:39 < bridge> <learath2> Ah, yes I already brought this up in private with noby
19:39 < bridge> <0xdeen> root@rus2.ddnet.org has perf.data
19:39 < bridge> <0xdeen> So we could save the second RUS server if we disable antibot, hmm
19:40 < bridge> <learath2> I proposed something along these lines to replace the printf
19:40 < bridge> <learath2> ```c++
19:40 < bridge> <learath2> void net_addr_str_v4(const NETADDR *addr, char *str, size_t max) {
19:40 < bridge> <learath2>   char *p = str;
19:40 < bridge> <learath2>   for(int i = 0; i < 4; i++) {
19:40 < bridge> <learath2>     auto r = std::to_chars(p + j, p + 3, addr->ip[i];
19:40 < bridge> <learath2>     p = r.ptr;
19:40 < bridge> <learath2>     *p = '.';
19:40 < bridge> <learath2>   }
19:40 < bridge> <learath2>   *p++ = '\0';
19:40 < bridge> <learath2> }
19:40 < bridge> <learath2> ``` I think this had some issue though, whatever, was just messing around
19:40 < bridge> <learath2> or passing the binary representation of the ip to antibot instead
19:41 < bridge> <0xdeen> Yeah, please pass the ip as an int array and we're good
19:41 < bridge> <learath2> Yeah that +3 looks absurd, whatever, point is something that is catered directly to printing ip addresses
19:42 < bridge> <0xdeen> or even just store the ip address in the client and pass it, no antibot changes required
19:42 < bridge> <0xdeen> server*
19:43 < bridge> <0xdeen> I have to go afk, but this is super high prio, both RUS servers are at their limit
19:43 < bridge> <learath2> ```
19:43 < bridge> <learath2> [7:57 PM]heinrich5991: probably just don't redo the work
19:43 < bridge> <learath2> [7:57 PM]heinrich5991: each time
19:43 < bridge> <learath2> [7:57 PM]heinrich5991: but rather do it when the client joins
19:43 < bridge> <learath2> [7:57 PM]heinrich5991: not sure how well this could be integrated
19:43 < bridge> <learath2> [7:57 PM]heinrich5991: afk ^^
19:43 < bridge> <learath2> [7:57 PM]Learath2: Yeah, or pass the ip binary instead of as a string?
19:43 < bridge> <learath2> [7:57 PM]heinrich5991: but then we need to define a binary format
19:43 < bridge> <learath2> [7:58 PM]heinrich5991: that doesn't change
19:43 < bridge> <learath2> [7:58 PM]heinrich5991: I can see NETADDR changing, unfortunately
19:43 < bridge> <learath2> [7:58 PM]Learath2: We could define an underlying NETADDR_INTERNAL with only ip and port, that's not going to change unless ipv8 is due 
19:43 < bridge> <learath2> [8:00 PM]heinrich5991: I'll take a look whether we can avoid redoing the work
19:43 < bridge> <learath2> [8:00 PM]heinrich5991: then the string repr would be fine
19:43 < bridge> <learath2> ```
19:44 < bridge> <learath2> I'll take a look after food. Yeah this does need to be addressed. It should have been addressed back when I first noticed it, sorry
20:18 < bridge> <learath2> I'm not a huge fan of it but the str_copy is much cheaper atleast
20:19 < bridge> <learath2> Ideally `FillAntibot` would expose some mechanism for the `Fill`er to use the previous struct they submitted
20:19 < bridge> <learath2> I'm not a huge fan of it but the `str_copy` is much cheaper atleast
20:24 < bridge> <catseyenebulous> I do not have a .svg file but I could export it as one if you'd like? ^^
20:50 < bridge> <egyt> I like Unexpected Keyboard too
20:50 < bridge> <egyt> btw, @ me when there is an update to translation files :^)
20:51 < bridge> <melo∆û> all of em? ¬∞-¬∞
20:52 < bridge> <egyt> Well, I told 'em that I'm going to keep Ukrainian translation updated, so yeah??
20:52 < bridge> <egyt> Well, I told 'em that I'm going to keep updating Ukrainian translation, so yeah??
20:53 < bridge> <egyt> Well, I told 'em that I'm going to keep updating Ukrainian translation for the near future, so yeah??
20:56 < bridge> <egyt> Oh wait, I got it XD
20:56 < bridge> <egyt> Well, the relevant to me changes, I mean
21:07 < bridge> <0xdeen> We only update translations when a new client is released, so watching #announcements for new release candidates is enough
21:43 < bridge> <learath2> I think I'm ready to start making my own programming language, it is time
21:47 < bridge> <learath2> I want to make something like Rust, that is more relaxed. Less safe, more comfy
21:47 < bridge> <milkeeycat> will you use llvm?
21:48 < bridge> <learath2> Yeah, I'm not interested in generating assembly and reinventing optimizations known for decades
21:48 < bridge> <milkeeycat> https://tenor.com/view/understandable-have-nice-day-have-a-great-day-have-a-good-day-nice-gif-20850110
21:48 < bridge> <learath2> I'll emit LLVM IR
21:49 < bridge> <heinrich5991> sounds like there are already languages in that space
21:49 < bridge> <heinrich5991> maybe nim or zig?
21:50 < bridge> <learath2> With significant drawbacks though, Nim and Go are garbage collected. Zig is pretty nice but it's not as comfy as I'd like
21:51 < bridge> <avolicious> Go for Zig++
21:51 < bridge> <learath2> I want some sort of lifetime support. Maybe more explicit than Rusts but opt-in
21:53 < bridge> <heinrich5991> what about C++? there's probably some third-party tooling for opt-in lifetimes
21:53 < bridge> <heinrich5991> I guess the package management and general coding is annoying thouguh
21:53 < bridge> <learath2> C++ has a lot of baggage that makes it very annoying to work with
21:54 < bridge> <learath2> I also need the compiler to understand lifetime-managed objects, so they can be allocated and deallocated without runtime overhead if the lifetime can be determined through static analysis
21:55 < bridge> <learath2> I definitely have to sit down and write down the semantics of it but I think I have some sort of idea of all the features I want in it
21:56 < bridge> <learath2> (I also might be completely missing something and there is a reason why rust is so strict üòÑ )
21:57 < bridge> <learath2> I'm not a very theory person, so maybe what I want is genuinely a mathematical impossibility that the borrowck people noticed
21:58 < bridge> <heinrich5991> that's something that probably needs some theory ^^
21:59 < bridge> <heinrich5991> you're likely to end up trying to solve the halting problem if you're not extra careful
21:59 < bridge> <learath2> But essentially if the compiler can't figure out the lifetime and there is no gc specified, it will just complain, and fixing it should be as easy as explicitly giving it a lifetime. Idea is that if you as the programmer can figure out the lifetime, it should be trivial to fix any compilation issue due to lifetimes
22:00 < bridge> <learath2> I'll just have to expand my theory knowledge as I keep encountering things that seem impossible üòÑ
22:00 < bridge> <egyt> https://youtu.be/fSUEKosgyt0 @ryozuki
22:01 < bridge> <egyt> Chess 8.0 got released under AGPL!!!
22:08 < bridge> <cyberFighter> @edrub chess battle advanced
23:01 < bridge> <totar> seems a little bit over hyped for effectively just chess
