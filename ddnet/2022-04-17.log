07:45 <+bridge> [ddnet] <Jupstar> that was quick xd
10:58 <+bridge> [ddnet] <Im 'corneum> I just found the server setting "mapbug" with the example double explosion. https://ddnet.tw/settingscommands/
10:58 <+bridge> [ddnet] <Im 'corneum> I think this exact bug caused the solomap "Lunar Base.map" to become unfinishable. 
10:58 <+bridge> [ddnet] <Im 'corneum> Can you re-release it with the fix?
12:21 <+bridge> [ddnet] <Patiga> thats another repository, not wgpu, so I'll have to do it myself
12:23 <+bridge> [ddnet] <Jupstar> so hard for such small gain ðŸ˜¦
14:42 <+bridge> [ddnet] <Ryozuki> i just realized, Alpha is  intuitive for programmers
14:42 <+bridge> [ddnet] <Ryozuki> but gamers might find Opacity better to understand
14:43 <+bridge> [ddnet] <Ryozuki> thus i recommend changing Alpha to Opacity in settings
14:48 <+bridge> [ddnet] <Ryozuki> @Not Keks is it possible to render something on over everything else no matter where the render call is?
14:48 <+bridge> [ddnet] <Ryozuki> like some z level
14:50 <+bridge> [ddnet] <Ryozuki> ok i might have to rework tooltips a bit
14:50 <+bridge> [ddnet] <Ryozuki> do we have hashmaps in ddnet? xd
14:51 <+bridge> [ddnet] <Ryozuki> time to use std::unordered_map
14:56 <+bridge> [ddnet] <lynn> opacity is better
15:03 <+bridge> [ddnet] <Ryozuki> @lynn change it
15:03 <+bridge> [ddnet] <Ryozuki> free pr for you
15:03 <+bridge> [ddnet] <lynn> i already have the role
15:03 <+bridge> [ddnet] <lynn> :greenthing:
15:03 <+bridge> [ddnet] <Ryozuki> menus_settings.cpp:2690
15:03 <+bridge> [ddnet] <lynn> ur right tho i should
15:03 <+bridge> [ddnet] <Ryozuki> gotta keep it up
15:04 <+bridge> [ddnet] <lynn> honestly if i ever get tired of mapping that's where my efforts will go again
15:04 <+bridge> [ddnet] <lynn> dev learning
15:04 <+bridge> [ddnet] <Ryozuki> ye also more useful in life
15:04 <+bridge> [ddnet] <Ryozuki> than making tw maps
15:04 <+bridge> [ddnet] <Ryozuki> :BASED:
15:04 <+bridge> [ddnet] <lynn> i have a college degree i just don't care
15:04 <+bridge> [ddnet] <Ryozuki> booo
15:04 <+bridge> [ddnet] <Ryozuki> degree means nothing
15:04 <+bridge> [ddnet] <lynn> i would rather play teeworlds and stream sorry
15:05 <+bridge> [ddnet] <Ryozuki> no fun :Sadge:
15:05 <+bridge> [ddnet] <lynn> more fin
15:05 <+bridge> [ddnet] <lynn> fun
15:05 <+bridge> [ddnet] <Ryozuki> you dont understand the joy of coding in rust
15:05 <+bridge> [ddnet] <Ryozuki> :BASEDHALT:
15:05 <+bridge> [ddnet] <Ryozuki> im making a tooltip cache rn
15:05 <+bridge> [ddnet] <Ryozuki> so i render it at the end
15:05 <+bridge> [ddnet] <Ryozuki> otherwise some tooltips appear behind
15:20 <+bridge> [ddnet] <Ryozuki> tip for vscode users, the clangd server is far superior to the microsoft provided one
16:36 <+bridge> [ddnet] <Jupstar> in ddnet it would be ez
16:36 <+bridge> [ddnet] <Jupstar> we dont use the stencil buffer nor depth buffer, so we can abuse either one for that
16:37 <+bridge> [ddnet] <Jupstar> but rn its not possible
16:38 <+bridge> [ddnet] <Jupstar> could just delay the drawcall
16:38 <+bridge> [ddnet] <Ryozuki> ye
16:38 <+bridge> [ddnet] <Ryozuki> i think im overcomplicating things tho xd
16:38 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/965259936328208394/unknown.png
16:38 <+bridge> [ddnet] <Ryozuki> :monkaS:
16:38 <+bridge> [ddnet] <Ryozuki> trying to use modern cpp reminds me of how much greater rust is
16:39 <+bridge> [ddnet] <Ryozuki> :fuckyousnail:
16:40 <+bridge> [ddnet] <Jupstar> using modern cpp reminds me how bad old cpp is
16:40 <+bridge> [ddnet] <Ryozuki> well thats even worse ye
16:40 <+bridge> [ddnet] <Ryozuki> it sucks to not know if what im doing is some massive UB which u can know if u read section 1100 paragraph 60 of the standard
16:41 <+bridge> [ddnet] <Ryozuki> :hisnail:
16:42 <+bridge> [ddnet] <Ryozuki> @Not Keks does this make sense? i have the map, i insert the tooltip using fancy modern syntax (m_Tooltips[ID] = NewTooltip;) and then i have to get the reference from the map to get the correct reference right?
16:42 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/965260972971425792/unknown.png
16:42 <+bridge> [ddnet] <Ryozuki> to store it on the optional
16:43 <+bridge> [ddnet] <Jupstar> i tell ya, its not about UB, its about intuitivity
16:43 <+bridge> [ddnet] <Jupstar> rust just makes some of c++ UB non UB, integer overflows etc
16:43 <+bridge> [ddnet] <Jupstar> or shifting or whatever
16:43 <+bridge> [ddnet] <Ryozuki> cuz its defined
16:43 <+bridge> [ddnet] <Ryozuki> the behaviour
16:43 <+bridge> [ddnet] <Ryozuki> on debug it wraps on release it panics iirc
16:43 <+bridge> [ddnet] <Ryozuki> xd
16:44 <+bridge> [ddnet] <Ryozuki> but panicking is better than UB
16:44 <+bridge> [ddnet] <Jupstar> thats why i tell ya its about intuitivity
16:44 <+bridge> [ddnet] <Ryozuki> but rust is much more than that
16:44 <+bridge> [ddnet] <Ryozuki> it provided safety
16:44 <+bridge> [ddnet] <Ryozuki> idk how to tell it
16:44 <+bridge> [ddnet] <Ryozuki> its a feeling
16:44 <+bridge> [ddnet] <Ryozuki> anyway
16:44 <+bridge> [ddnet] <Ryozuki> can u answer
16:44 <+bridge> [ddnet] <Ryozuki> my question
16:44 <+bridge> [ddnet] <Ryozuki> (img)
16:45 <+bridge> [ddnet] <Jupstar> this isnt really new syntax
16:45 <+bridge> [ddnet] <Jupstar> u can also just use insert and see the return value
16:45 <+bridge> [ddnet] <Jupstar> it cannot insert twice
16:45 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/965261755917959189/unknown.png
16:45 <+bridge> [ddnet] <Ryozuki> c++11
16:45 <+bridge> [ddnet] <Ryozuki> fancy by c++ standards
16:45 <+bridge> [ddnet] <Jupstar> what map are u using?
16:45 <+bridge> [ddnet] <Jupstar> hash map?
16:45 <+bridge> [ddnet] <Ryozuki> unordered_map
16:45 <+bridge> [ddnet] <Jupstar> yeah ok
16:46 <+bridge> [ddnet] <Jupstar> that whole thing is c++11
16:46 <+bridge> [ddnet] <Ryozuki> from what i see insert doesnt return a reference the inserted thing
16:46 <+bridge> [ddnet] <Ryozuki> which is what i want
16:46 <+bridge> [ddnet] <Jupstar> but syntax is same as map
16:46 <+bridge> [ddnet] <Ryozuki> from what i see insert doesnt return a reference to the inserted thing
16:46 <+bridge> [ddnet] <Learath2> Be glad the prescribed behaviour is actually documented and at a predictable place. If you want a similar amount of detail about a rust function you'd need to refer to descriptive docs and any certain answer would definitely require a dive into the source
16:46 <+bridge> [ddnet] <Jupstar> but your code is fine i think
16:46 <+bridge> [ddnet] <Ryozuki> learath writing the holy grail of c
16:46 <+bridge> [ddnet] <Ryozuki> thats pog
16:47 <+bridge> [ddnet] <Ryozuki> @Not Keks but see how you have to say "i think"
16:47 <+bridge> [ddnet] <Ryozuki> u can never be sure in cpp
16:47 <+bridge> [ddnet] <Ryozuki> on rust i would be affirmative
16:47 <+bridge> [ddnet] <Ryozuki> :BASED:
16:47 <+bridge> [ddnet] <Jupstar> xd
16:48 <+bridge> [ddnet] <Jupstar> so why dont u emulate the rust way and write like that ðŸ˜„
16:48 <+bridge> [ddnet] <Ryozuki> thats what i did
16:48 <+bridge> [ddnet] <Ryozuki> im writing c++ the way i do rust
16:48 <+bridge> [ddnet] <Jupstar> well then its fine ofc ^^^
16:48 <+bridge> [ddnet] <Ryozuki> thats why i used optional xd
16:48 <+bridge> [ddnet] <Ryozuki> optional + reference instead of the hazardous null pointer
16:48 <+bridge> [ddnet] <Ryozuki> boooo
16:49 <+bridge> [ddnet] <Ryozuki> theorically c++ experts say its zero cost right?
16:49 <+bridge> [ddnet] <Ryozuki> xd
16:49 <+bridge> [ddnet] <Jupstar> with Ofast + lto it should be competly outimized out
16:49 <+bridge> [ddnet] <Learath2> And to rectify any "i think" Jupstar can look at the very detailed standard
16:49 <+bridge> [ddnet] <Jupstar> with o2 probs not xd
16:50 <+bridge> [ddnet] <Ryozuki> isnt UB kinda like an oxymoron when there is a standard
16:50 <+bridge> [ddnet] <Ryozuki> the standard should cover everything
16:52 <+bridge> [ddnet] <Learath2> I mean that might be desirable, but that's not a part of the definition of a "standard"
16:52 <+bridge> [ddnet] <Jupstar> i think this is mostly bcs its not always so ez
16:52 <+bridge> [ddnet] <Jupstar> 
16:52 <+bridge> [ddnet] <Jupstar> if u allow raw pointers you can do any shit with it
16:52 <+bridge> [ddnet] <Jupstar> 
16:52 <+bridge> [ddnet] <Jupstar> how should u define all behavior
16:53 <+bridge> [ddnet] <Jupstar> if i mem_zero(this) and then wonder why my vptr is not working... xD
16:53 <+bridge> [ddnet] <Jupstar> i guess u could say unsafe in rust is also UB
16:53 <+bridge> [ddnet] <Ryozuki> there is a effort to do that by a rust dev iirc
16:53 <+bridge> [ddnet] <Learath2> Standards are there to prescribe behaviour, they say how certain things work and anything they dont say is not in the scope of the standard
16:53 <+bridge> [ddnet] <Ryozuki> "pointer provenance"
16:54 <+bridge> [ddnet] <Ryozuki> https://www.ralfj.de/blog/2020/12/14/provenance.html
16:54 <+bridge> [ddnet] <Jupstar> i mean more prefice stuff is always good
16:54 <+bridge> [ddnet] <Jupstar> tho here again, its about intuitivity.. u will never read and remember the whole standard xD
16:54 <+bridge> [ddnet] <Jupstar> or look up every line of code u do
16:55 <+bridge> [ddnet] <Ryozuki> https://github.com/rust-lang/rust/issues/95228
16:55 <+bridge> [ddnet] <Learath2> Anyway, my point is I like having the standard as a definitive source. If I want to know whether an iterator becomes invalid after a certain action I know where exactly to look
16:56 <+bridge> [ddnet] <Ryozuki> well i look at cppreference and usually it shows the most relevant stuff
16:56 <+bridge> [ddnet] <Learath2> Is this really any safer than allowing a null ptr? Won't you need a check for the optional either way?
16:57 <+bridge> [ddnet] <Ryozuki> the optional forces you to check
16:57 <+bridge> [ddnet] <Ryozuki> u cant forget
16:57 <+bridge> [ddnet] <Ryozuki> it wont compile otherwise
16:57 <+bridge> [ddnet] <Learath2> Ah, that's nice to have
16:58 <+bridge> [ddnet] <Ryozuki> ah well
16:58 <+bridge> [ddnet] <Ryozuki> maybe it doesnt force you to check
16:58 <+bridge> [ddnet] <Ryozuki> as isi
16:58 <+bridge> [ddnet] <Ryozuki> as is
16:58 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/965265019904344064/unknown.png
16:58 <+bridge> [ddnet] <Ryozuki> its not as powerful as rust sadly
16:58 <+bridge> [ddnet] <Ryozuki> xd
16:59 <+bridge> [ddnet] <Ryozuki> > If *this contains a value, returns a reference to the contained value.
16:59 <+bridge> [ddnet] <Ryozuki> > 
16:59 <+bridge> [ddnet] <Ryozuki> > Otherwise, throws a std::bad_optional_access exception.
16:59 <+bridge> [ddnet] <Ryozuki> meh
16:59 <+bridge> [ddnet] <Ryozuki> rust pattern matching is just god
16:59 <+bridge> [ddnet] <Learath2> I wonder if an optional reference wrapper gets size optimized properly like in rust
17:00 <+bridge> [ddnet] <Ryozuki> check the standard
17:00 <+bridge> [ddnet] <Jupstar> c
17:00 <+bridge> [ddnet] <Ryozuki> :fuckyousnail:
17:00 <+bridge> [ddnet] <Jupstar> c++ stnadard's biggest mistkae
17:00 <+bridge> [ddnet] <Jupstar> introduce exceptions
17:00 <+bridge> [ddnet] <Ryozuki> ye
17:00 <+bridge> [ddnet] <Ryozuki> how rust handles errors is better
17:00 <+bridge> [ddnet] <Learath2> Storing an extra flag for presence would be wasteful
17:00 <+bridge> [ddnet] <Ryozuki> in c++23 there will be a std::result
17:00 <+bridge> [ddnet] <Ryozuki> ill abuse it
17:00 <+bridge> [ddnet] <Learath2> The standard allows it, it's up to the implementor whether they optimize it
17:01 <+bridge> [ddnet] <Ryozuki> ah it will be called std::expected
17:01 <+bridge> [ddnet] <Ryozuki> http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4015.pdf
17:01 <+bridge> [ddnet] <Ryozuki> 2014 paper kekw
17:01 <+bridge> [ddnet] <Jupstar> yeah they too slow
17:01 <+bridge> [ddnet] <Jupstar> we need boost
17:01 <+bridge> [ddnet] <Jupstar> flat vectors
17:01 <+bridge> [ddnet] <Jupstar> flat strings
17:02 <+bridge> [ddnet] <Jupstar> i need more stack vars without c style stuff
17:02 <+bridge> [ddnet] <Ryozuki> > We can consider that expected<E,T> is a generalization of
17:02 <+bridge> [ddnet] <Ryozuki> > optional<T> providing in addition a monad interface and some specific functions associated to the unexpected
17:02 <+bridge> [ddnet] <Ryozuki> > type E. It requires no changes to core language, and breaks no existing code.
17:02 <+bridge> [ddnet] <Ryozuki> yet it needs decades to be coonsidered
17:02 <+bridge> [ddnet] <Ryozuki> i hecking love c++
17:02 <+bridge> [ddnet] <Ryozuki> and the grandpas
17:03 <+bridge> [ddnet] <Learath2> The only sadge thing about the legacy languages is their turtle pace
17:05 <+bridge> [ddnet] <Jupstar> @Ryozuki just make ddnet in rust, and pls start with server
17:05 <+bridge> [ddnet] <Jupstar> and make it modular
17:05 <+bridge> [ddnet] <Jupstar> for mods
17:09 <+bridge> [ddnet] <Ryozuki> @Not Keks RiiR
17:09 <+bridge> [ddnet] <Ryozuki> rewrite it in rust
17:09 <+bridge> [ddnet] <Jupstar> xd
17:09 <+bridge> [ddnet] <Ryozuki> lot of ppl hate ppl who say to do that
17:09 <+bridge> [ddnet] <Ryozuki> xd
17:09 <+bridge> [ddnet] <Ryozuki> ur daring today arent we
17:09 <+bridge> [ddnet] <Jupstar> any game engine with 3d and works on android?
17:09 <+bridge> [ddnet] <Jupstar> and no lua xd
17:09 <+bridge> [ddnet] <Ryozuki> godot
17:09 <+bridge> [ddnet] <Jupstar> i want rust bindings
17:10 <+bridge> [ddnet] <Ryozuki> godot has rust bindings
17:10 <+bridge> [ddnet] <Jupstar> i mean rust game engine
17:10 <+bridge> [ddnet] <Ryozuki> ah
17:10 <+bridge> [ddnet] <Jupstar> mh ok
17:10 <+bridge> [ddnet] <Ryozuki> im following closely https://bevyengine.org/
17:10 <+bridge> [ddnet] <Ryozuki> they implement a novel ECS engine
17:10 <+bridge> [ddnet] <Ryozuki> and nearly got sued by UNITY
17:10 <+bridge> [ddnet] <Ryozuki> xd
17:10 <+bridge> [ddnet] <Ryozuki> android is planned for the future tho
17:11 <+bridge> [ddnet] <Jupstar> i have some ideas for games
17:11 <+bridge> [ddnet] <Jupstar> 1 also non android
17:11 <+bridge> [ddnet] <Ryozuki> the best traditional 3d engine for rust is https://github.com/FyroxEngine/Fyrox
17:11 <+bridge> [ddnet] <Ryozuki> it has an editor too
17:11 <+bridge> [ddnet] <Ryozuki> for scenes
17:11 <+bridge> [ddnet] <Ryozuki> https://www.youtube.com/watch?v=N8kmZ9aBtZs
17:12 <+bridge> [ddnet] <Jupstar> i am never sure how i can judge demo content
17:12 <+bridge> [ddnet] <Jupstar> but the light looks awful xdd
17:12 <+bridge> [ddnet] <Ryozuki> xd
17:12 <+bridge> [ddnet] <Ryozuki> he is doing a game
17:13 <+bridge> [ddnet] <Ryozuki> https://www.youtube.com/watch?v=O_ETjSkVBME
17:13 <+bridge> [ddnet] <Ryozuki> note this is from 20211
17:13 <+bridge> [ddnet] <Ryozuki> 2021
17:13 <+bridge> [ddnet] <Ryozuki> it might have changed
17:13 <+bridge> [ddnet] <Ryozuki> i think its all done by a single dev
17:13 <+bridge> [ddnet] <Ryozuki> its like the rust jupstar
17:13 <+bridge> [ddnet] <Ryozuki> xd
17:13 <+bridge> [ddnet] <Jupstar> xd
17:14 <+bridge> [ddnet] <Jupstar> but maybe godot with rust bindings could be project to test for me
17:14 <+bridge> [ddnet] <Ryozuki> ye
17:14 <+bridge> [ddnet] <Ryozuki> https://github.com/godot-rust/godot-rust
17:15 <+bridge> [ddnet] <Jupstar> rust can easily cross compile to windows?
17:15 <+bridge> [ddnet] <Jupstar> from linux
17:15 <+bridge> [ddnet] <Ryozuki> you install the target
17:15 <+bridge> [ddnet] <Ryozuki> with rustup
17:15 <+bridge> [ddnet] <Ryozuki> and then cargo build --target x86_64-pc-windows-msvc
17:16 <+bridge> [ddnet] <Ryozuki> https://github.com/KodrAus/rust-cross-compile
17:16 <+bridge> [ddnet] <Jupstar> ok
17:16 <+bridge> [ddnet] <Jupstar> ah rip they dont have godot 4 bindings
17:16 <+bridge> [ddnet] <Jupstar> i want vulkan ofc xd
17:16 <+bridge> [ddnet] <Ryozuki> is godot 4 out?
17:17 <+bridge> [ddnet] <Jupstar> no
17:17 <+bridge> [ddnet] <Ryozuki> ah
17:17 <+bridge> [ddnet] <Ryozuki> u surprised me
17:17 <+bridge> [ddnet] <Jupstar> i just use nightly code xd
17:17 <+bridge> [ddnet] <Ryozuki> im waiting for godot 4 since years
17:17 <+bridge> [ddnet] <Jupstar> yeah
17:17 <+bridge> [ddnet] <Learath2> Commercial game engines look so good I'm always a little shocked when I see indie attempts at 3d game engines
17:17 <+bridge> [ddnet] <Jupstar> but the game i have in mind is pretty small anyway
17:17 <+bridge> [ddnet] <Ryozuki> well, usually indie devs are not artists
17:17 <+bridge> [ddnet] <Ryozuki> but ye
17:17 <+bridge> [ddnet] <Ryozuki> its already a feat to do a 3d engine solo
17:18 <+bridge> [ddnet] <Ryozuki> unreal engine 5 loooks rly good
17:18 <+bridge> [ddnet] <Ryozuki> if only it wasnt owned by epig games
17:18 <+bridge> [ddnet] <Ryozuki> why valve cant put effort
17:18 <+bridge> [ddnet] <Learath2> It's definitely a great accomplishment
17:18 <+bridge> [ddnet] <Learath2> I always wanted to try one but just never really had the time for it
17:18 <+bridge> [ddnet] <Jupstar> https://github.com/o3de/o3de
17:18 <+bridge> [ddnet] <Jupstar> 
17:18 <+bridge> [ddnet] <Jupstar> amazons open source game engine sponsored by linux foundation xd
17:19 <+bridge> [ddnet] <Ryozuki> there is a succesfull 3d game made in rust tho
17:19 <+bridge> [ddnet] <Ryozuki> voxels tho
17:19 <+bridge> [ddnet] <Ryozuki> https://veloren.net/
17:19 <+bridge> [ddnet] <Ryozuki> check it out
17:19 <+bridge> [ddnet] <Ryozuki> its open source
17:19 <+bridge> [ddnet] <Ryozuki> if u know cube world
17:19 <+bridge> [ddnet] <Jupstar> yeah xd
17:19 <+bridge> [ddnet] <Ryozuki> this might be its successor
17:19 <+bridge> [ddnet] <Jupstar> but i want epic looking stuff xd
17:19 <+bridge> [ddnet] <Learath2> This has pretty cute lighting
17:20 <+bridge> [ddnet] <Ryozuki> have u ever played elite dangerous
17:21 <+bridge> [ddnet] <Ryozuki> not open source
17:21 <+bridge> [ddnet] <Ryozuki> but it looks gorgeous
17:21 <+bridge> [ddnet] <Ryozuki> if ur a space f an
17:21 <+bridge> [ddnet] <Ryozuki> :greenthing:
17:23 <+bridge> [ddnet] <Jupstar> imagine having ur own 3d artists
17:23 <+bridge> [ddnet] <Jupstar> harder to find than coders xd
17:23 <+bridge> [ddnet] <Learath2> it's pretty fun in vr too
17:24 <+bridge> [ddnet] <Learath2> I did a lot of deep space arbitrage back in the day
17:24 <+bridge> [ddnet] <Ryozuki> cuz they all got work
17:24 <+bridge> [ddnet] <Ryozuki> (maybe)
17:24 <+bridge> [ddnet] <Ryozuki> im grinding for a fleet carrier
17:24 <+bridge> [ddnet] <Ryozuki> its just 5.000.000.000 credits
17:24 <+bridge> [ddnet] <Ryozuki> i got 1.000.000.000
17:24 <+bridge> [ddnet] <Ryozuki> btw now u can walk on stations and fleet carriers
17:25 <+bridge> [ddnet] <Ryozuki> im waiting for the day u can walk in ur ship
17:25 <+bridge> [ddnet] <Ryozuki> they may look small when ur seated
17:25 <+bridge> [ddnet] <Ryozuki> but they are freaking big
18:24 <+ChillerDragon> Yo bois whats the lifetime of ur m2 ssds? My laptop is at its 3rd replacement in a few years now. Thats not normal is it?
18:35 <+bridge> [ddnet] <Jupstar> guess i am generally lucky with storage, never had any die out yet ðŸ˜„
18:37 <+bridge> [ddnet] <Learath2> Definitely not normal, 3 years in I didnt replace a single one of mine
18:57 <+bridge> [ddnet] <Ryozuki> ye not normal
18:57 <+bridge> [ddnet] <Ryozuki> i havent replaced mine either
18:57 <+bridge> [ddnet] <Ryozuki> do u have some magnets nearby or smth
18:58 <+bridge> [ddnet] <Ryozuki> maybe it does smth idk xd
18:58 <+bridge> [ddnet] <Ryozuki> or u have bad luck with cosmic rays
18:58 <+bridge> [ddnet] <Ryozuki> https://www.nature.com/articles/news980730-7
18:58 <+bridge> [ddnet] <Voxel> huh
18:58 <+bridge> [ddnet] <Voxel> oh wait nvm LOL
18:58 <+bridge> [ddnet] <Ryozuki> lmao
18:58 <+bridge> [ddnet] <Ryozuki> u know what a voxel is right
18:58 <+bridge> [ddnet] <Voxel> yeah
18:59 <+bridge> [ddnet] <Voxel> i have this name because it was a 1up from an old username that had pixel in it
19:23 <+bridge> [ddnet] <c0d3d3v> lol send the link to your client / server I want to test it
19:23 <+bridge> [ddnet] <c0d3d3v> and the github link pls
19:25 <+bridge> [ddnet] <Ryozuki> its hard to justify voip
19:25 <+bridge> [ddnet] <Ryozuki> lot of resources when u can use discord
20:12 <+bridge> [ddnet] <everestkio> thx
20:26 <+bridge> [ddnet] <everestkio> sudo apt install build-essential cmake git google-mock libcurl4-openssl-dev libssl-dev libfreetype6-dev libglew-dev libnotify-dev libogg-dev libopus-dev libopusfile-dev libpnglite-dev libsdl2-dev libsqlite3-dev libwavpack-dev python libx264-dev libavfilter-dev libavdevice-dev libavformat-dev libavcodec-extra libavutil-dev libvulkan-dev glslang-tools spirv-tools
20:26 <+bridge> [ddnet] <everestkio> 
20:26 <+bridge> [ddnet] <everestkio> BOT
20:26 <+bridge> [ddnet] <everestkio> [quakenet] ChillerDragon
20:26 <+bridge> [ddnet] <everestkio> Clicca per vedere l'allegato
20:26 <+bridge> [ddnet] <c0d3d3v> its 2022 and we worry about resources for voice chat. 
20:26 <+bridge> [ddnet] <c0d3d3v> So far, I don't think our servers have a real resource problem (without having detailed insights). Our main problem is rather any dudes who ddos our servers. On the server side, I don't think much more resources would be needed, depending on how you want to implement it. only our snapshot architecture might suffer from the increased bandwidth requirements and would need to be reworked
20:26 <+bridge> [ddnet] <everestkio> sudo apt install build-essential cmake git google-mock libcurl4-openssl-dev libssl-dev libfreetype6-dev libglew-dev libnotify-dev libogg-dev libopus-dev libopusfile-dev libpnglite-dev libsdl2-dev libsqlite3-dev libwavpack-dev python libx264-dev libavfilter-dev libavdevice-dev libavformat-dev libavcodec-extra libavutil-dev libvulkan-dev glslang-tools spirv-tools
20:27 <+bridge> [ddnet] <everestkio> â””â”€$ sudo apt install build-essential cmake git google-mock libcurl4-openssl-dev libssl-dev libfreetype6-dev libglew-dev libnotify-dev libogg-dev libopus-dev libopusfile-dev libpnglite-dev libsdl2-dev libsqlite3-dev libwavpack-dev python libx264-dev libavfilter-dev libavdevice-dev libavformat-dev libavcodec-extra libavutil-dev libvulkan-dev glslang-tools spirv-tools
20:27 <+bridge> [ddnet] <everestkio> [sudo] password for kio: 
20:27 <+bridge> [ddnet] <everestkio> Reading package lists... Done
20:27 <+bridge> [ddnet] <everestkio> Building dependency tree... Done
20:27 <+bridge> [ddnet] <everestkio> Reading state information... Done
20:27 <+bridge> [ddnet] <everestkio> Package python is not available, but is referred to by another package.
20:27 <+bridge> [ddnet] <everestkio> This may mean that the package is missing, has been obsoleted, or
20:27 <+bridge> [ddnet] <everestkio> is only available from another source
20:27 <+bridge> [ddnet] <everestkio> However the following packages replace it:
20:27 <+bridge> [ddnet] <everestkio>   python2-minimal python2 python-is-python3 dh-python 2to3
20:27 <+bridge> [ddnet] <everestkio> 
20:27 <+bridge> [ddnet] <everestkio> E: Package 'python' has no installation candidate
20:37 <+bridge> [ddnet] <c0d3d3v> I have the feeling that Shaddy has not yet implemented voice chat. I can't find any changes regarding proximity chat or voice chat on either ddnet or teeworlds. Maybe he never uploaded it to github, which would be a shame when you've done so much work.
20:44 <+bridge> [ddnet] <c0d3d3v> I have the feeling that Shaddy has not yet implemented voice chat. I can't find any changes regarding proximity chat or voice chat on either ddnet or teeworlds. Maybe he never uploaded it to github, which would be a shame when you've done so much work. (also he was last active end of 2019... so we will never hear from him I think)
21:06 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/965327298016460820/unknown.png
21:16 <+bridge> [ddnet] <Patiga> you can also zoom out insanely far in this game and it looks and feels amazing
21:16 <+bridge> [ddnet] <Patiga> completely zoomed in you are in first person
21:16 <+bridge> [ddnet] <Patiga> zoom out a little and you are in third person
21:16 <+bridge> [ddnet] <Patiga> and then you can zoom further to see the landscape, the mountains lakes
21:17 <+bridge> [ddnet] <Patiga> and the sky is gorgeous, sometimes you get something like northern lights (can't remember, might just be night time), and it looks even more beautiful then
21:46 <+bridge> [ddnet] <everestkio> help ðŸ˜¦
21:59 <+bridge> [ddnet] <everestkio> ok solve: remove python from the command (is preinstalled :D)
22:02 <+bridge> [ddnet] <Smetanolub> guys i just found something bad. i always did use entities with default background, but recently, i took backgground from some map
22:02 <+bridge> [ddnet] <Smetanolub> and
22:02 <+bridge> [ddnet] <Smetanolub> when u use background from any map you have input delay
22:03 <+bridge> [ddnet] <Smetanolub> its not that big, but i play like 8+years with entities and i feel this delay immidiately
22:04 <+bridge> [ddnet] <Ryozuki> is ur pc bad
22:04 <+bridge> [ddnet] <Smetanolub> also delay exists when you have much pages of text in console
22:04 <+bridge> [ddnet] <Ryozuki> ?
22:04 <+bridge> [ddnet] <Smetanolub> its 3080ti and i7
22:04 <+bridge> [ddnet] <Ryozuki> are u on latest ddnet?
22:04 <+bridge> [ddnet] <Ryozuki> what i7
22:04 <+bridge> [ddnet] <Ryozuki> i7 says nothing
22:04 <+bridge> [ddnet] <Smetanolub> yes, i did test it on latest version too
22:04 <+bridge> [ddnet] <Ryozuki> if ur cpu is bad ur gpu can be the best it sucks
22:04 <+bridge> [ddnet] <Smetanolub> i7700k
22:05 <+bridge> [ddnet] <Smetanolub> wdym i7 is very good cp
22:05 <+bridge> [ddnet] <Ryozuki> i remember some fixes about text console
22:05 <+bridge> [ddnet] <Ryozuki> but idk
22:05 <+bridge> [ddnet] <Ryozuki> are u on vulkan?
22:05 <+bridge> [ddnet] <Smetanolub> nope, i dont use latest version cuz u deleted ping filter
22:05 <+bridge> [ddnet] <Smetanolub> 1.17 rc
22:05 <+bridge> [ddnet] <Smetanolub> but i did test on latest ver too
22:05 <+bridge> [ddnet] <Ryozuki> ah then i wont help you
22:05 <+bridge> [ddnet] <Ryozuki> :greenthing:
22:06 <+bridge> [ddnet] <Ryozuki> im anti anti updaters
22:06 <+bridge> [ddnet] <Smetanolub> ?
22:06 <+bridge> [ddnet] <Smetanolub> you dont read what i did say?
22:06 <+bridge> [ddnet] <Ryozuki> yeah
22:06 <+bridge> [ddnet] <Ryozuki> but i dont care xd
22:06 <+bridge> [ddnet] <Smetanolub> same bug on latest version
22:06 <+bridge> [ddnet] <Ryozuki> maybe someone else can help u
22:07 <+bridge> [ddnet] <Ryozuki> you chose to not update, thus u chose to opt out of any improvements
22:07 <+bridge> [ddnet] <Ryozuki> my opinion is, deal with it
22:08 <+bridge> [ddnet] <Ryozuki> also if both versions work bad its prob ur pc
22:08 <+bridge> [ddnet] <Smetanolub> mf dont read my text, but text me
22:08 <+bridge> [ddnet] <Smetanolub> lol
22:10 <+bridge> [ddnet] <Ryozuki> mf = motherfucker right
22:10 <+bridge> [ddnet] <Ryozuki> i get it
22:10 <+bridge> [ddnet] <Ryozuki> xd
22:12 <+bridge> [ddnet] <plsplsplslol> even on my bad pc i dont get input lag
22:12 <+bridge> [ddnet] <Ryozuki> he might have installed a bot client
22:12 <+bridge> [ddnet] <Ryozuki> and got a virus
22:12 <+bridge> [ddnet] <Ryozuki> :KEKL:
22:58 <+bridge> [ddnet] <nouaa> check if v-sync is enabled, it may cause delay
22:59 <+bridge> [ddnet] <nouaa> also fsaa samples
