00:00 <+bridge> [ddnet] <c0d3d3v> some messages are only displayed with the debug hud active [CTR + SHIFT + D]
00:10 <+bridge> [ddnet] <deen> what version are you on?
00:11 <+bridge> [ddnet] <deen> But `./DDNet "debug 1"` might help
00:17 <+bridge> [ddnet] <cauldron> master branch from yesterday or few days ago. using `debug 1` gave me a few `[uuid]` tagged logs with api calls or something
01:55 <+bridge> [ddnet] <lynn> well okay @Patiga my friend didn't have much to say and maybe their opinion has changed a bit but
01:55 <+bridge> [ddnet] <lynn> 
01:55 <+bridge> [ddnet] <lynn> - matrix has vastly more heavy metadata handling through the server protocol compared to XMPP, which is a performance concern
01:55 <+bridge> [ddnet] <lynn> - as a protocol it's generally "heavier" than XMPP (didn't specify)
01:55 <+bridge> [ddnet] <lynn> - still better than Discord, and easier to onboard compared to XMPP
01:55 <+bridge> [ddnet] <lynn> - maybe XMPP is technically better but it lacks hype and devs
01:55 <+bridge> [ddnet] <lynn> and the last sentiment they had was basically just
01:55 <+bridge> [ddnet] <lynn> it exists, it's e2ee, and it's federated
01:55 <+bridge> [ddnet] <lynn> so not much to complain about for now while it's the only reasonable one
01:57 <+bridge> [ddnet] <lynn> i really like XMPP so im sad to see the last ambassador for it in my life kinda raise Matrix's hand in defeat
01:57 <+bridge> [ddnet] <lynn> but hey that's life right
01:57 <+bridge> [ddnet] <lynn> a new shiny protocol comes along and devs are like YOOOOO
01:58 <+bridge> [ddnet] <Patiga> thanks for checking up on it again!
01:59 <+bridge> [ddnet] <Patiga> I can understand that you like XMPP and are maybe not that hyped about Matrix
02:00 <+bridge> [ddnet] <Patiga> but nice that we agree that it does its job, is nicely federated and e2ee (although that last thing took a while)
02:00 <+bridge> [ddnet] <Patiga> it surely also does some things differently, no?
02:01 <+bridge> [ddnet] <Patiga> which XMPP client are you using @lynn? :)
02:04 <+bridge> [ddnet] <lynn> i only use Conversations
02:04 <+bridge> [ddnet] <lynn> i don't actually use a desktop client
02:04 <+bridge> [ddnet] <lynn> they are all terrible imo
02:04 <+bridge> [ddnet] <Patiga> ow ^^
02:04 <+bridge> [ddnet] <lynn> unless Dino has Windows support suddenly
02:05 <+bridge> [ddnet] <Patiga> Dino gud?
02:05 <+bridge> [ddnet] <lynn> yea this part is my biggest complaint i guess. some things are awkward in the protocol compared to XMPP
02:05 <+bridge> [ddnet] <lynn> i actually think XMPP is closer to Discord than Matrix
02:05 <+bridge> [ddnet] <lynn> if a client was actually shaped to be used like that
02:06 <+bridge> [ddnet] <lynn> supposedly
02:06 <+bridge> [ddnet] <lynn> for linux
02:06 <+bridge> [ddnet] <lynn> it may also be for Mac because haha unix
02:06 <+bridge> [ddnet] <lynn> just no one made a really good client for XMPP. it's a shame
02:06 <+bridge> [ddnet] <lynn> or somehow no one advertises the best one and i never accidentally found it myself
02:09 <+bridge> [ddnet] <c0d3d3v> try Dino
02:10 <+bridge> [ddnet] <c0d3d3v> is not good, but also not bad
02:10 <+bridge> [ddnet] <c0d3d3v> ow
02:12 <+bridge> [ddnet] <c0d3d3v> Dino is written in Vala with strong GTK binding... so I think there will be no support at any time ðŸ˜„
02:14 <+bridge> [ddnet] <c0d3d3v> Mh but there seems to be a ValaOnWindows project...
02:14 <+bridge> [ddnet] <cauldron> can't you even run xorg guis with wsl on windows 11...
02:16 <+bridge> [ddnet] <c0d3d3v> just use linux ðŸ˜—
02:17 <+bridge> [ddnet] <c0d3d3v> or use a matrix bridge xD and use an matrix client
02:17 <+bridge> [ddnet] <cauldron> i'm using it... - on my phone xd
02:17 <+bridge> [ddnet] <c0d3d3v> or use a matrix bridge xD and use a matrix client
02:19 <+bridge> [ddnet] <c0d3d3v> I once wanted to port the signal client to xmpp, to have a nicer GUI. But I had given up advertising XMPP, and also on programming for XMPP, years ago.
02:42 <+bridge> [ddnet] <fokkonaut> when does the pr "improvements for new hud" will get merged?
03:02 <+bridge> [ddnet] <lynn> i will move to Linux if vseeface gets a Linux release :P
03:02 <+bridge> [ddnet] <lynn> until then no can do
03:56 <+bridge> [ddnet] <lynn> okay hear me out
03:56 <+bridge> [ddnet] <lynn> if people dont want color settings for PSA/scoreboard
03:56 <+bridge> [ddnet] <lynn> at least respect the UI color
03:56 <+bridge> [ddnet] <lynn> for it
03:56 <+bridge> [ddnet] <lynn> so if i set a UI color, put that for scoreboard and PSA tooltip
04:06 <+bridge> [ddnet] <lynn> uhh kinda need help with something
04:06 <+bridge> [ddnet] <lynn> how can i use an FTP client if im using key-only SSH config?
04:07 <+bridge> [ddnet] <lynn> is there a way i can use my privkey with Filezilla
04:27 <+bridge> [ddnet] <Chairn> PSA?
04:27 <+bridge> [ddnet] <Chairn> again those acronyms...
04:28 <+bridge> [ddnet] <Chairn> public service announcement?
04:28 <+bridge> [ddnet] <Chairn> you mean broadcast?
05:11 <+bridge> [ddnet] <Chairn> @lynn ^
05:11 <+bridge> [ddnet] <lynn> lmao. people were using these acronyms in this chat before me
05:11 <+bridge> [ddnet] <lynn> position-speed-angle
05:11 <+bridge> [ddnet] <lynn> i guess now it's most like position-speed
06:16 <+bridge> [ddnet] <lynn> Just discovered SchildiChat @Patiga
06:16 <+bridge> [ddnet] <lynn> way better than Element imo
08:40 <+bridge> [ddnet] <ReiTW> filezilla sux
09:19 <+bridge> [ddnet] <lynn> yes
09:19 <+bridge> [ddnet] <lynn> but it works now
09:19 <+bridge> [ddnet] <lynn> i found the key options
09:53 <+bridge> [ddnet] <Ryozuki> https://www.reddit.com/r/ProgrammerHumor/comments/vinh1r/even_babies_fear_fuing_sql/
09:56 <+bridge> [ddnet] <Neben> hey, anyone got lldb working on an m1?
10:21 <+bridge> [ddnet] <deen> yes
10:24 <+bridge> [ddnet] <Neben> can u send ```whereis lldb && lldb --version``` output please?
10:26 <+bridge> [ddnet] <deen> ```
10:26 <+bridge> [ddnet] <deen> lldb: /usr/bin/lldb /Library/Developer/CommandLineTools/usr/share/man/man1/lldb.1
10:26 <+bridge> [ddnet] <deen> lldb-1316.0.9.46
10:26 <+bridge> [ddnet] <deen> Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
10:27 <+bridge> [ddnet] <deen> ```
10:27 <+bridge> [ddnet] <Neben> yeah thanks, that's what I thought, i'll try to get the last version of lldb
10:51 <+bridge> [ddnet] <Neben> yay it worked thanks ðŸ˜„
11:25 <+bridge> [ddnet] <cauldron> when I play the dummy map skychase with ddnet-libs cloned it doesn't have deepfly enabled, whereas the official one has. how is that?
11:25 <+bridge> [ddnet] <cauldron> when I play the dummy map skychase locally with ddnet-libs cloned it doesn't have deepfly enabled, whereas the official one has. how is that?
11:27 <+bridge> [ddnet] <cauldron> i enable it manually with sv_deepfly 1
11:44 <+bridge> [ddnet] <c0d3d3v> As soon as I have fixed all requests
11:46 <+bridge> [ddnet] <c0d3d3v> What do you think is faster/better? 
11:46 <+bridge> [ddnet] <c0d3d3v> the switch or the array access
11:46 <+bridge> [ddnet] <c0d3d3v> https://cdn.discordapp.com/attachments/293493549758939136/989466460835438622/unknown.png
11:46 <+bridge> [ddnet] <c0d3d3v> https://cdn.discordapp.com/attachments/293493549758939136/989466461187739678/unknown.png
11:46 <+bridge> [ddnet] <c0d3d3v> https://cdn.discordapp.com/attachments/293493549758939136/989466461594591232/unknown.png
11:48 <+bridge> [ddnet] <Ryozuki> i think the switch may be faster
11:49 <+bridge> [ddnet] <Ryozuki> since its an immutable thing, the array might be mutated and the compiler may not optimize it or smth
11:49 <+bridge> [ddnet] <Ryozuki> but im just talking out of my ass xd
11:49 <+bridge> [ddnet] <heinrich5991> the constant array probably optimizes better
11:49 <+bridge> [ddnet] <Ryozuki> :O
11:49 <+bridge> [ddnet] <Ryozuki> but is it constant?
11:50 <+bridge> [ddnet] <c0d3d3v> yes
11:50 <+bridge> [ddnet] <c0d3d3v> I only did not add const
11:50 <+bridge> [ddnet] <Ryozuki> ah ok
11:50 <+bridge> [ddnet] <heinrich5991> why does it return 16 for NETOBJTYPE_EX?
11:50 <+bridge> [ddnet] <c0d3d3v> It is the size of our Net Objects... they are constant
11:50 <+bridge> [ddnet] <c0d3d3v> for UUIDs
11:50 <+bridge> [ddnet] <c0d3d3v> they are stored in the snapshot
11:51 <+bridge> [ddnet] <c0d3d3v> with type = 0
11:51 <+bridge> [ddnet] <heinrich5991> are they?
11:52 <+bridge> [ddnet] <heinrich5991> ah yeah
11:52 <+bridge> [ddnet] <c0d3d3v> xD yes I researched the whole snapshot system ^^ And you made the UUID think you should know it
11:52 <+bridge> [ddnet] <heinrich5991> but it's none of the game code's business, I think
11:53 <+bridge> [ddnet] <heinrich5991> it looks like an implementation detail, not something the game code should interact wtih
11:53 <+bridge> [ddnet] <Ryozuki> did u write ur research down?
11:53 <+bridge> [ddnet] <c0d3d3v> xD no
11:53 <+bridge> [ddnet] <Ryozuki> sadge
11:53 <+bridge> [ddnet] <heinrich5991> https://github.com/heinrich5991/libtw2/blob/c67bb33d7f2dc5bd78ea8238ec6119b754c13da3/doc/snapshot.md
11:53 <+bridge> [ddnet] <heinrich5991> add stuff there if you have some
11:53 <+bridge> [ddnet] <Ryozuki> ohh
11:53 <+bridge> [ddnet] <heinrich5991> (always document stuff when you research it)
11:54 <+bridge> [ddnet] <c0d3d3v> that is only basic details xD not enough to understand the whole thing
11:55 <+bridge> [ddnet] <c0d3d3v> we could add documentation to the code in future
11:55 <+bridge> [ddnet] <c0d3d3v> usefull comments xD
11:55 <+bridge> [ddnet] <heinrich5991> no, you could add documentation to the document above now ðŸ˜‰
11:55 <+bridge> [ddnet] <heinrich5991> "in the future" is never
11:56 <+bridge> [ddnet] <heinrich5991> (I wrote that document while re-implementing snapshots in rust, and I know of one other person who used that document ðŸ™‚ )
11:56 <+bridge> [ddnet] <c0d3d3v> xD yes I readed it too, it is a good starting point
11:56 <+bridge> [ddnet] <c0d3d3v> xD yes I read it too, it is a good starting point
11:57 <+bridge> [ddnet] <c0d3d3v> so what now... switch or array access. I think the switch looks more clean, but in the end it is only a generated file...
11:57 <+bridge> [ddnet] <Ryozuki> did u need unsafe code?
11:58 <+bridge> [ddnet] <Learath2> What are you making?
11:58 <+bridge> [ddnet] <c0d3d3v> clean up of https://github.com/ddnet/ddnet/pull/5210
11:59 <+bridge> [ddnet] <heinrich5991> array is probably smaller and thus faster
12:00 <+bridge> [ddnet] <heinrich5991> array is probably smaller and thus also faster
12:00 <+bridge> [ddnet] <Ryozuki> is it rly?
12:00 <+bridge> [ddnet] <Learath2> But the switch could get inlined at places where a constant is passed to it
12:00 <+bridge> [ddnet] <Ryozuki> i would have always believed more "static" code can get optimized better
12:00 <+bridge> [ddnet] <heinrich5991> but the constant array access not? @Learath2
12:00 <+bridge> [ddnet] <c0d3d3v> But I need to do one extra condition...
12:00 <+bridge> [ddnet] <heinrich5991> @Ryozuki the problem is that it likely generates a jump table
12:01 <+bridge> [ddnet] <heinrich5991> @c0d3d3v the switch is an indirect jump, much worse than an always correctly predicted branch
12:01 <+bridge> [ddnet] <c0d3d3v> ok
12:01 <+bridge> [ddnet] <Ryozuki> can u put it on godbolt?
12:01 <+bridge> [ddnet] <Ryozuki> xD
12:01 <+bridge> [ddnet] <Learath2> Hm, I'm not sure actually. It should if the array is constexpr atleast
12:02 <+bridge> [ddnet] <Ryozuki> oh yeah
12:02 <+bridge> [ddnet] <Ryozuki> constexpr everything
12:02 <+bridge> [ddnet] <c0d3d3v> no constants get passed to it. I use it to get the correct size for malloc
12:02 <+bridge> [ddnet] <c0d3d3v> mem_copy**
12:02 <+bridge> [ddnet] <c0d3d3v> no constants get passed to it. I use it to get the correct size for
12:03 <+bridge> [ddnet] <heinrich5991> okay, gcc and clang manage to compile the switch to an array
12:04 <+bridge> [ddnet] <heinrich5991> msvc fails to do so
12:04 <+bridge> [ddnet] <Ryozuki> smh microsoft
12:04 <+bridge> [ddnet] <Ryozuki> â˜•
12:06 <+bridge> [ddnet] <Learath2> Yeah the array is better. I though switch might inline better but it's not even a concern when you never oass anything constant
12:08 <+bridge> [ddnet] <Learath2> I wonder if you could get rid of the branch aswell, it's one where branch prediction should do fairly well, but still
12:08 <+bridge> [ddnet] <heinrich5991> https://godbolt.org/z/jrqfobvYY
12:08 <+bridge> [ddnet] <heinrich5991> fairly well = always correctly predicted
12:09 <+bridge> [ddnet] <heinrich5991> sounds negligible (except for the extra branch in the branch predictor)
12:09 <+bridge> [ddnet] <heinrich5991> the test says that both functions inline fine, even with just `const` (why would `const` not suffice?)
12:09 <+bridge> [ddnet] <c0d3d3v> normal objects go from 0-23  and Ex Objects from 65456 somthing to ... 12 more
12:10 <+bridge> [ddnet] <heinrich5991> (except on msvc, where nothing inlines and the switch isn't optimized to an array)
12:10 <+bridge> [ddnet] <c0d3d3v> normal objects go from 0-23  and Ex Objects from 65456 somthing to ... 9 more
12:10 <+bridge> [ddnet] <heinrich5991> if you talk about "in the snapshot", then the ex objects don't really have fixed type IDs
12:10 <+bridge> [ddnet] <Learath2> I just didn't know the rules there, I knew the constexpr variant inlines from an earlier tesst
12:10 <+bridge> [ddnet] <heinrich5991> they're dynamically assigned by the server
12:11 <+bridge> [ddnet] <c0d3d3v> type is always 0 and id is the type of the ex obj in the snapshot from the server
12:11 <+bridge> [ddnet] <heinrich5991> yes, that's the lookup table the client can use
12:11 <+bridge> [ddnet] <c0d3d3v> and 16 byte of the uuid of that ex type
12:11 <+bridge> [ddnet] <heinrich5991> to correlate the high snapshot type IDs with the UUIDs
12:11 <+bridge> [ddnet] <c0d3d3v> exactly
12:12 <+bridge> [ddnet] <Learath2> I remember wanting to optimize that for some reason. Did we have a profiling bottleneck in that lookup?
12:12 <+bridge> [ddnet] <Learath2> Did profiling reveal a bottleneck in that lookup?*
12:12 <+bridge> [ddnet] <heinrich5991> there was a bottleneck
12:13 <+bridge> [ddnet] <heinrich5991> I fixed it for the real-world at that time
12:13 <+bridge> [ddnet] <heinrich5991> it can be improved
12:13 <+bridge> [ddnet] <c0d3d3v> what do you use for profiling
12:13 <+bridge> [ddnet] <Learath2> Perf, gprof and callgrind are all useful. I mostly use the first and the third
12:14 <+bridge> [ddnet] <c0d3d3v> the lookup table is always at the beginning of the snapshot. So it should not be to bad, but if an unknow uuid is in that snapshot, it will try to go through the whole snapshot
12:15 <+bridge> [ddnet] <Learath2> Do you remember the issue or the fix?
12:15 <+bridge> [ddnet] <heinrich5991> yea, I changed iteration order
12:15 <+bridge> [ddnet] <heinrich5991> let me check
12:16 <+bridge> [ddnet] <heinrich5991> heh, 4321: https://github.com/ddnet/ddnet/pull/4321
12:18 <+bridge> [ddnet] <Learath2> Thanks
12:20 <+bridge> [ddnet] <Learath2> One day I want to try an unordered map for this
12:23 <+bridge> [ddnet] <heinrich5991> would be nice to have benchmarks to see if an unordered map is faster than the linear search
12:26 <+bridge> [ddnet] <Ryozuki> isnt c++ std unordered map rly bad perf wise
12:27 <+bridge> [ddnet] <Ryozuki> https://news.ycombinator.com/item?id=31801814
12:27 <+bridge> [ddnet] <Learath2> It's not the best, but its not awful either
12:27 <+bridge> [ddnet] <Ryozuki> > The fact that the STL api leaks these kind of implementation details is such a shame. Multiplied globally over all users of unordered_map, the amount of CPU time that has been wasted because of that decision boggles the mind. Has to be one of the biggest library design blunders in the history of the industry (up there with C strings being null-terminated). They should just add a new map to the standard with a better API.
12:27 <+bridge> [ddnet] <Ryozuki> xD
12:27 <+bridge> [ddnet] <Learath2> I'd probably use another implementation of unordered map since this'd be in the critical path
12:29 <+bridge> [ddnet] <Ryozuki> https://abseil.io/about/design/swisstables
12:29 <+bridge> [ddnet] <Ryozuki> https://github.com/google/cwisstable
12:29 <+bridge> [ddnet] <Ryozuki> we can use this
12:31 <+bridge> [ddnet] <Ryozuki> i wonder if u can use only parts of absel
12:31 <+bridge> [ddnet] <Learath2> Is there a single header C++ version?
12:31 <+bridge> [ddnet] <Ryozuki> its the absel itself i guess
12:32 <+bridge> [ddnet] <Ryozuki> https://abseil.io/docs/cpp/quickstart-cmake
12:32 <+bridge> [ddnet] <Learath2> Rest of abseil seems mostly useless for us :P
12:32 <+bridge> [ddnet] <Ryozuki> yeah thats why
12:35 <+bridge> [ddnet] <c0d3d3v> xD I just thought I know now nearly all about out snapshot system. And now I tested demos and wondered how there the lookup is done there, because I see no lookup table in the snapshot xD
12:35 <+bridge> [ddnet] <c0d3d3v> xD I just thought I know now nearly all about out snapshot system. And now I tested demos and wondered how the lookup for Ex Obj Ids is done there, because I see no lookup table in the snapshot xD
12:35 <+bridge> [ddnet] <c0d3d3v> I just thought I know now nearly all about out snapshot system. And now I tested demos and wondered how the lookup for Ex Obj Ids is done there, because I see no lookup table in the snapshot xD
12:36 <+bridge> [ddnet] <Ryozuki> rust ported that and uses it on the std btw
12:36 <+bridge> [ddnet] <Ryozuki> :BASED:
12:36 <+bridge> [ddnet] <c0d3d3v> I just thought I know now nearly all about our snapshot system. And now I tested demos and wondered how the lookup for Ex Obj Ids is done there, because I see no lookup table in the snapshot xD
12:36 <+bridge> [ddnet] <Ryozuki> "A hash map implemented with quadratic probing and SIMD lookup."
12:37 <+bridge> [ddnet] <Ryozuki> c++ one doesnt do quadratic probing
12:37 <+bridge> [ddnet] <Ryozuki> it uses a clossed addressing scheme
12:37 <+bridge> [ddnet] <Ryozuki> old age
12:37 <+bridge> [ddnet] <Learath2> I wonder why they decided on changing it up
12:38 <+bridge> [ddnet] <Ryozuki> a quote from the article
12:38 <+bridge> [ddnet] <Ryozuki> > Back in the day, open-addressing approaches were not regarded as sufficiently mature, so closed addressing was taken as the safe implementation of choice.
12:42 <+bridge> [ddnet] <Learath2> Hm, but why wouldn't they upgrade it later?
12:44 <+bridge> [ddnet] <c0d3d3v> I was lost, in demos not all snapshots are unpacked using delta unpack, thats why I have not seen the lookup table in the debug hud ^^
12:46 <+bridge> [ddnet] <c0d3d3v> one could just create the lookup table while validating the snapshot... and use that instead of looking it up every time accessing a snapshot item
12:48 <+bridge> [ddnet] <Learath2> https://youtu.be/ncHmEUmJZf4 good talk
13:16 <+bridge> [ddnet] <c0d3d3v> xD does someone have an idea, why pylint crahses on <https://github.com/ddnet/ddnet/pull/5210>  
13:16 <+bridge> [ddnet] <c0d3d3v> pylint just decided it has enough. Locally I get the same error.
13:17 <+bridge> [ddnet] <c0d3d3v> https://cdn.discordapp.com/attachments/293493549758939136/989489342735077386/unknown.png
13:19 <+bridge> [ddnet] <c0d3d3v> ```
13:19 <+bridge> [ddnet] <c0d3d3v> datasrc/compile.py:244:12: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
13:19 <+bridge> [ddnet] <c0d3d3v> Exception on node <For l.296 at 0x7fee54e885b0> in file '/home/daniel/Desktop/other_repos/ddnet_master/datasrc/compile.py'
13:19 <+bridge> [ddnet] <c0d3d3v> Traceback (most recent call last):
13:19 <+bridge> [ddnet] <c0d3d3v> 
13:19 <+bridge> [ddnet] <c0d3d3v> .... 
13:19 <+bridge> [ddnet] <c0d3d3v> 
13:19 <+bridge> [ddnet] <c0d3d3v> 
13:19 <+bridge> [ddnet] <c0d3d3v> RecursionError: maximum recursion depth exceeded
13:19 <+bridge> [ddnet] <c0d3d3v> 
13:19 <+bridge> [ddnet] <c0d3d3v> The above exception was the direct cause of the following exception:
13:19 <+bridge> [ddnet] <c0d3d3v> 
13:19 <+bridge> [ddnet] <c0d3d3v> Traceback (most recent call last):
13:19 <+bridge> [ddnet] <c0d3d3v>   File "/usr/lib/python3.10/site-packages/pylint/utils/ast_walker.py", line 90, in walk
13:19 <+bridge> [ddnet] <c0d3d3v>     callback(astroid)
13:19 <+bridge> [ddnet] <c0d3d3v>   File "/usr/lib/python3.10/site-packages/pylint/checkers/refactoring/recommendation_checker.py", line 172, in visit_for
13:19 <+bridge> [ddnet] <c0d3d3v>     self._check_consider_using_dict_items(node)
13:19 <+bridge> [ddnet] <c0d3d3v>   File "/usr/lib/python3.10/site-packages/pylint/checkers/refactoring/recommendation_checker.py", line 254, in _check_consider_using_dict_items
13:19 <+bridge> [ddnet] <c0d3d3v>     iterating_object_name = utils.get_iterating_dictionary_name(node)
13:19 <+bridge> [ddnet] <c0d3d3v>   File "/usr/lib/python3.10/site-packages/pylint/checkers/utils.py", line 1601, in get_iterating_dictionary_name
13:19 <+bridge> [ddnet] <c0d3d3v>     inferred = safe_infer(node.iter)
13:19 <+bridge> [ddnet] <c0d3d3v>   File "/usr/lib/python3.10/site-packages/pylint/checkers/utils.py", line 1262, in safe_infer
13:19 <+bridge> [ddnet] <c0d3d3v>     raise AstroidError from e
13:19 <+bridge> [ddnet] <c0d3d3v> astroid.exceptions.AstroidError
13:19 <+bridge> [ddnet] <c0d3d3v> datasrc/compile.py:1:0: F0002: datasrc/compile.py: Fatal error while checking 'datasrc/compile.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/daniel/.cache/pylint/pylint-crash-2022-06-23-13.txt'. (astroid-error)
13:20 <+bridge> [ddnet] <c0d3d3v> ```
13:20 <+bridge> [ddnet] <c0d3d3v> 
13:20 <+bridge> [ddnet] <c0d3d3v> It fails on line 296
13:20 <+bridge> [ddnet] <BloodWod-513> I use RC3, there is something that can cause micro freezes or drop fps?
13:20 <+bridge> [ddnet] <c0d3d3v> before my last force push it worked ðŸ˜¦
13:29 <+bridge> [ddnet] <BloodWod-513> It seems to me, or is it my schizophrenia, that after choosing vulkan, the game feels a little different?
14:33 <+ChillerDragon> can we get an mod on 176.9.114.238:8322 pls?
14:33 <+ChillerDragon> ddnet://176.9.114.238:8322 is this clickable? xd
14:34 <+ChillerDragon> nvm fixed
14:37 <+bridge> [ddnet] <bencie> ChillerDragon: still need help?
14:38 <+ChillerDragon> no sorry he left
14:39 <+bridge> [ddnet] <c0d3d3v> I reported it now to pylint <https://github.com/PyCQA/pylint/issues/7011>  
14:39 <+bridge> [ddnet] <c0d3d3v> 
14:39 <+bridge> [ddnet] <c0d3d3v> I feel really bad -.- it is probably a really bad python error
14:39 <+bridge> [ddnet] <c0d3d3v> I reported it now to pylint <https://github.com/PyCQA/pylint/issues/7011>  
14:39 <+bridge> [ddnet] <c0d3d3v> 
14:39 <+bridge> [ddnet] <c0d3d3v> I feel really bad -.- it is probably a really bad python error, because of wrong rebase
15:03 <+bridge> [ddnet] <deen> no worries, a linter should never crash, no matter how broken the code
15:07 <+bridge> [ddnet] <ReD> https://devblogs.microsoft.com/oldnewthing/20140627-00/?p=633
17:32 <+bridge> [ddnet] <c0d3d3v> <https://github.com/ddnet/ddnet/pull/5210> is ready for review ðŸ˜„ 
17:32 <+bridge> [ddnet] <c0d3d3v> Since I refactored compile.py, I want point point out the following functions/elements are new/changed:
17:32 <+bridge> [ddnet] <c0d3d3v> CNetObjHandler::ms_apExObjNames
17:32 <+bridge> [ddnet] <c0d3d3v> CNetObjHandler::ms_aUnpackedObjSizes
17:32 <+bridge> [ddnet] <c0d3d3v> CNetObjHandler::ms_aUnpackedExObjSizes
17:32 <+bridge> [ddnet] <c0d3d3v> CNetObjHandler::ms_apExMsgNames
17:32 <+bridge> [ddnet] <c0d3d3v> CNetObjHandler::GetUnpackedObjSize
17:32 <+bridge> [ddnet] <c0d3d3v> CNetObjHandler::GetObjName
17:32 <+bridge> [ddnet] <c0d3d3v> CNetObjHandler::GetMsgName
17:32 <+bridge> [ddnet] <c0d3d3v> CNetObjHandler::SecureUnpackObj
17:32 <+bridge> [ddnet] <c0d3d3v> 
17:32 <+bridge> [ddnet] <c0d3d3v> @heinrich5991  for NETOBJTYPE_EX the UUID I defined the unpacking kind of hardcoded instead of creating a NetObject for it. If you want I could make an NetObject for it instead. But the parsing would be none the less done manually here: https://github.com/C0D3D3V/ddnet/blob/1fd1976fc1c83e1c8a10c51f29a871841d82bd8a/src/engine/shared/snapshot.cpp#L45-L48
17:54 <+bridge> [ddnet] <c0d3d3v> @deen  how did this get merged into staging o.O https://github.com/ddnet/ddnet/commit/0fe58795c14231812a5b180778e93d1dc6268767
17:54 <+bridge> [ddnet] <c0d3d3v> 
17:54 <+bridge> [ddnet] <c0d3d3v> I did change a bunch of his changes in https://github.com/ddnet/ddnet/pull/5420
17:54 <+bridge> [ddnet] <c0d3d3v> @deen  how did this get merged into staging o.O <https://github.com/ddnet/ddnet/commit/0fe58795c14231812a5b180778e93d1dc6268767>
17:54 <+bridge> [ddnet] <c0d3d3v> 
17:54 <+bridge> [ddnet] <c0d3d3v> I did change a bunch of his changes in <https://github.com/ddnet/ddnet/pull/5420>
17:56 <+bridge> [ddnet] <c0d3d3v> what is staging even used for?
18:00 <+Konsti> can we make mapzones where you cannot go in with /practice mode enabled? xD Extra Rooms especially on solo maps lose their magic when u just can tp in
18:03 <+bridge> [ddnet] <deen> staging is what bors uses to check if the change still works on current master state
18:03 <+bridge> [ddnet] <c0d3d3v> ah
18:05 <+bridge> [ddnet] <Ryozuki> https://googleprojectzero.blogspot.com/2022/06/curious-case-carrier-app.html
18:07 <+bridge> [ddnet] <c0d3d3v> I will later this evening (or maybe tomorrow) work in the new textures from Ravie in <https://github.com/ddnet/ddnet/pull/5420>
18:07 <+bridge> [ddnet] <c0d3d3v> And make the requested changes. 
18:07 <+bridge> [ddnet] <c0d3d3v> @deen 
18:07 <+bridge> [ddnet] <c0d3d3v> Do we still want to stay with no stars for 16.2? And if a lot do complain, discuss options? (since there were some more comments added to this PR)
18:08 <+bridge> [ddnet] <c0d3d3v> I will later this evening (or maybe tomorrow) work in the new textures from Ravie in <https://github.com/ddnet/ddnet/pull/5420>
18:08 <+bridge> [ddnet] <c0d3d3v> And make the requested changes. 
18:08 <+bridge> [ddnet] <c0d3d3v> @deen 
18:08 <+bridge> [ddnet] <c0d3d3v> Do we still want to stay with no stars for 16.2? And if a lot do complain, discuss options for 16.3? (since there were some more comments added to this PR)
18:14 <+bridge> [ddnet] <c0d3d3v> I think 16.2 can serve well to test it. If there is really a big counter-response, we can react quickly with 16.3.
18:14 <+bridge> [ddnet] <c0d3d3v> or 16.2.1 xD
18:30 <+bridge> [ddnet] <deen> 16.2-rc4 will be the test, 16.2 will be a regular release and stay for the usual 4-8 weeks
18:31 <+bridge> [ddnet] <deen> I think no stars is better
18:33 <+bridge> [ddnet] <Skeith> I personally think the freezebar feels cluttered, compared to the stars
18:34 <+bridge> [ddnet] <Skeith> Feels quite distracting
18:34 <+bridge> [ddnet] <Jupstar> i can count to 3 in my head, real pro
18:35 <+bridge> [ddnet] <Skeith> I guess...
18:35 <+bridge> [ddnet] <Jupstar> but yeah, if u dont provide a legacy option, someone will rage
18:35 <+bridge> [ddnet] <Jupstar> like always xd
18:35 <+bridge> [ddnet] <Skeith> But you're acting like people don't get frozen off screen
18:36 <+bridge> [ddnet] <Jupstar> dyncam
18:36 <+bridge> [ddnet] <Skeith> The nice thing about the stars, they disappear between ticks and are only visible for brief moments
18:36 <+bridge> [ddnet] <Skeith> Suggesting dyncam for ddrace is absurd.
18:37 <+bridge> [ddnet] <Jupstar> xd
18:37 <+bridge> [ddnet] <Jupstar> i played all fly maps with fulldync
18:37 <+bridge> [ddnet] <Jupstar> i played all fly maps with fulldyn
18:37 <+bridge> [ddnet] <Jupstar> good training
18:37 <+bridge> [ddnet] <Skeith> Dyncam shouldn't exist
18:37 <+bridge> [ddnet] <Jupstar> LOL
18:37 <+bridge> [ddnet] <Jupstar> usa nobo
18:38 <+bridge> [ddnet] <Skeith> Was a mistake that it was added, since it added unfair advantage to PVP modes, forcing people to use it. And it's inferior to zoom in ddrace, jarring and limited to play with.
18:38 <+bridge> [ddnet] <Skeith> Nobo
18:38 <+bridge> [ddnet] <Jupstar> it was there since teewars existed xD
18:38 <+bridge> [ddnet] <Skeith> Yes I know
18:38 <+bridge> [ddnet] <Jupstar> in fact it static was added xD
18:38 <+bridge> [ddnet] <Jupstar> in fact static was added xD
18:38 <+bridge> [ddnet] <Skeith> I've been playing for 13 years :kek:
18:38 <+bridge> [ddnet] <Jupstar> pro
18:39 <+bridge> [ddnet] <Skeith> Tragic that you can't undo mistakes that were added to the game to begin with
18:39 <+bridge> [ddnet] <Jupstar> its the best feature for pvp
18:39 <+bridge> [ddnet] <Jupstar> for ddrace its ofc useless
18:39 <+bridge> [ddnet] <Jupstar> gores even more
18:40 <+bridge> [ddnet] <Skeith> And you still decided to suggest using dyncam in a ddrace discussion, interesting.
18:40 <+bridge> [ddnet] <Jupstar> i know ppl that still use it XD
18:53 <+bridge> [ddnet] <nori> This
19:00 <+bridge> [ddnet] <nori> no one against the new hud but freezebar, meh
19:01 <+bridge> [ddnet] <Jupstar> yes, always provide legacy option, else u feel the rage in ur neck xd
19:06 <+bridge> [ddnet] <Jupstar> @nori now that u here
19:07 <+bridge> [ddnet] <Jupstar> in input.cpp
19:07 <+bridge> [ddnet] <Jupstar> there is
19:07 <+bridge> [ddnet] <Jupstar> ```c++
19:07 <+bridge> [ddnet] <Jupstar> case SDL_QUIT:
19:07 <+bridge> [ddnet] <Jupstar>             return 1;
19:07 <+bridge> [ddnet] <Jupstar> ```
19:07 <+bridge> [ddnet] <Jupstar> 
19:07 <+bridge> [ddnet] <Jupstar> can u replace it with 
19:07 <+bridge> [ddnet] <Jupstar> ```c++
19:07 <+bridge> [ddnet] <Jupstar> case SDL_QUIT:
19:07 <+bridge> [ddnet] <Jupstar> {
19:07 <+bridge> [ddnet] <Jupstar> dbg_msg("test", "sdl closed my client, but why xd");
19:07 <+bridge> [ddnet] <Jupstar>             return 1;
19:07 <+bridge> [ddnet] <Jupstar> }
19:07 <+bridge> [ddnet] <Jupstar> ```
19:07 <+bridge> [ddnet] <Jupstar> 
19:07 <+bridge> [ddnet] <Jupstar> i really wonder wtf closes ur client
19:07 <+bridge> [ddnet] <Jupstar> its the weirdest thing ever xd
19:08 <+bridge> [ddnet] <nori> :d ok i'll try
19:08 <+bridge> [ddnet] <nori> btw now that u here xd
19:08 <+bridge> [ddnet] <nori> where should i report this weird vulkan bug
19:08 <+bridge> [ddnet] <nori> this
19:09 <+bridge> [ddnet] <nori> sdl or mesa?
19:09 <+bridge> [ddnet] <Jupstar> defs mesa
19:09 <+bridge> [ddnet] <Jupstar> SDL is just for opening the window
19:09 <+bridge> [ddnet] <nori> okay
19:09 <+bridge> [ddnet] <Jupstar> also vulkan uses much less SDL/WM stuff than e.g. opengl
19:09 <+bridge> [ddnet] <Jupstar> that wrapps swapbuffer and stuff like that
19:09 <+bridge> [ddnet] <nori> but it happens when i force sdl to wayland so
19:10 <+bridge> [ddnet] <Jupstar> yeah but its the wayland vulkan driver i'd say
19:10 <+bridge> [ddnet] <Jupstar> or ur window manager struggles
19:10 <+bridge> [ddnet] <Jupstar> bcs i dont have any problems on KDE wayland
19:10 <+bridge> [ddnet] <nori> i use sway
19:10 <+bridge> [ddnet] <Jupstar> neither with GLES no vulkan
19:10 <+bridge> [ddnet] <Jupstar> also tested mesa 22.2-devel
19:12 <+bridge> [ddnet] <nori> maybe it is sway related either? somehow tries to close window
19:13 <+bridge> [ddnet] <Jupstar> possible
19:13 <+bridge> [ddnet] <Jupstar> but what triggers it
19:13 <+bridge> [ddnet] <Jupstar> since its not a force close
19:13 <+bridge> [ddnet] <Jupstar> its a clean close, bbut yeah it might not  be related to SDL directly
19:14 <+bridge> [ddnet] <Jupstar> just the event SDL sees
19:25 <+bridge> [ddnet] <Skeith> The only thing that I prefer from the freeze bar, is that it doesn't show while frozen, unlike stars.
19:25 <+bridge> [ddnet] <Skeith> And I guess I get a more accurate timing of when they'll unfreezer
19:25 <+bridge> [ddnet] <Skeith> And I guess I get a more accurate timing of when they'll unfreeze
19:26 <+bridge> [ddnet] <Skeith> The visual clutter it brings isn't worth it though
19:26 <+bridge> [ddnet] <nori> ```
19:26 <+bridge> [ddnet] <nori> [2022-06-23 20:26:31][test]: sdl closed my client, but why xd
19:27 <+bridge> [ddnet] <nori> [2022-06-23 20:26:31][client]: disconnecting. reason='unknown'
19:27 <+bridge> [ddnet] <nori> /home/arda/ddnet/src/game/client/prediction/gameworld.cpp:147:20: runtime error: member access within address 0x619001202a80 which does not point to an object of type 'CEntity'
19:27 <+bridge> [ddnet] <nori> ```
19:27 <+bridge> [ddnet] <nori> @Not Keks
19:27 <+bridge> [ddnet] <Jupstar> so its indeed the SDL event
19:28 <+bridge> [ddnet] <nori> @Not Keks hmm i reproducing it much more if i compile with asan, otherwise it is pretty random
19:28 <+bridge> [ddnet] <nori> just figured it out
19:29 <+bridge> [ddnet] <Jupstar> a random guess is, the client/GPU is busy for too long and the OS sends a kill event
19:29 <+bridge> [ddnet] <Jupstar> and it starts with a "clean" kill
19:29 <+bridge> [ddnet] <nori> terminate event
19:29 <+bridge> [ddnet] <Jupstar> and after 4-5 seconds it would hard kill
19:29 <+bridge> [ddnet] <nori> and it shutdowns gracefully?
19:29 <+bridge> [ddnet] <Jupstar> yeah
19:29 <+bridge> [ddnet] <Jupstar> i mean it tries
19:29 <+bridge> [ddnet] <nori> yeah
19:30 <+bridge> [ddnet] <nori> when i join bit3
19:30 <+bridge> [ddnet] <Jupstar> except that our code probably bugs around
19:30 <+bridge> [ddnet] <Robyt3> https://github.com/libsdl-org/SDL/blob/5f6d0abebe3b5bbd6426ccf1f9b77b88a7f94b41/src/video/wayland/SDL_waylandevents.c#L379-L388
19:30 <+bridge> [ddnet] <Robyt3> https://cdn.discordapp.com/attachments/293493549758939136/989583149946273832/unknown.png
19:30 <+bridge> [ddnet] <nori> it is frozen for like 5 secs
19:30 <+bridge> [ddnet] <nori> it is not like that on other maps
19:30 <+bridge> [ddnet] <nori> it instantly joins
19:30 <+bridge> [ddnet] <nori> it joins also a bit late on back in the sky but never had this
19:30 <+bridge> [ddnet] <Jupstar> yeah the map is huge
19:30 <+bridge> [ddnet] <Jupstar> building it takes a few seconds
19:33 <+bridge> [ddnet] <Jupstar> wait
19:33 <+bridge> [ddnet] <nori> so if we get bit4, i would never be able to join xd
19:33 <+bridge> [ddnet] <Jupstar> gimme a second
19:34 <+bridge> [ddnet] <Jupstar> in maplayers.cpp
19:34 <+bridge> [ddnet] <Jupstar> 
19:34 <+bridge> [ddnet] <Jupstar> can you add 
19:34 <+bridge> [ddnet] <Jupstar> 
19:34 <+bridge> [ddnet] <Jupstar>                             `Client()->UpdateAndSwap();` after line 866
19:34 <+bridge> [ddnet] <Jupstar> 
19:34 <+bridge> [ddnet] <Jupstar> which says `    Graphics()->IndicesNumRequiredNotify(vtmpTiles.size() * 6);`
19:35 <+bridge> [ddnet] <Jupstar> if that works i will just add it as soon as the client takes longer than 500ms, like other loading does now too
19:35 <+bridge> [ddnet] <Jupstar> since this is indeed a problem generally
19:36 <+bridge> [ddnet] <nori> can't we speed up this xd
19:36 <+bridge> [ddnet] <Jupstar> well without asan it probs doesnt take as long?
19:36 <+bridge> [ddnet] <nori> yeah maybe
19:36 <+bridge> [ddnet] <nori> so this is why it is more regularly
19:37 <+bridge> [ddnet] <nori> but still it takes 5-10 secs
19:37 <+bridge> [ddnet] <nori> and my pc is not old
19:38 <+bridge> [ddnet] <nori> i can't find it
19:38 <+bridge> [ddnet] <nori> ```
19:38 <+bridge> [ddnet] <nori> grep -Ri "Client()->UpdateAndSwap()"
19:38 <+bridge> [ddnet] <nori> src/game/client/components/menus.cpp:    Client()->UpdateAndSwap();
19:38 <+bridge> [ddnet] <nori> src/game/client/components/menu_background.cpp:        pSelf->Client()->UpdateAndSwap();
19:38 <+bridge> [ddnet] <nori> src/game/client/components/menu_background.cpp:        pSelf->Client()->UpdateAndSwap();
19:38 <+bridge> [ddnet] <nori> src/game/client/gameclient.cpp:    Client()->UpdateAndSwap();
19:38 <+bridge> [ddnet] <nori> ```
19:38 <+bridge> [ddnet] <Jupstar> Graphics()->IndicesNumRequiredNotify(vtmpTiles.size() * 6);
19:38 <+bridge> [ddnet] <Jupstar> this is what to find
19:38 <+bridge> [ddnet] <Jupstar> the other is what u add
19:38 <+bridge> [ddnet] <nori> oh ok
19:40 <+bridge> [ddnet] <nori> ```
19:40 <+bridge> [ddnet] <nori> diff --git a/src/game/client/components/maplayers.cpp b/src/game/client/components/maplayers.cpp
19:40 <+bridge> [ddnet] <nori> index 89c2ab06d..ece25af5a 100644
19:40 <+bridge> [ddnet] <nori> --- a/src/game/client/components/maplayers.cpp
19:40 <+bridge> [ddnet] <nori> +++ b/src/game/client/components/maplayers.cpp
19:40 <+bridge> [ddnet] <nori> @@ -864,6 +864,7 @@ void CMapLayers::OnMapLoad()
19:40 <+bridge> [ddnet] <nori>                                                         Visuals.m_BufferContainerIndex = Graphics()->CreateBufferContainer(&ContainerInfo);
19:40 <+bridge> [ddnet] <nori>                                                         // and finally inform the backend how many indices are required
19:40 <+bridge> [ddnet] <nori>                                                         Graphics()->IndicesNumRequiredNotify(vtmpTiles.size() * 6);
19:40 <+bridge> [ddnet] <nori> +                                                       Client()->UpdateAndSwap();
19:40 <+bridge> [ddnet] <nori>                                                 }
19:40 <+bridge> [ddnet] <nori>  
19:40 <+bridge> [ddnet] <nori>                                                 ++CurOverlay;
19:40 <+bridge> [ddnet] <nori> ```
19:40 <+bridge> [ddnet] <nori> like this?
19:41 <+bridge> [ddnet] <Jupstar> yes
19:42 <+bridge> [ddnet] <nori> it joins but it doesn't render map at first and reconnects
19:42 <+bridge> [ddnet] <nori> xd
19:43 <+bridge> [ddnet] <Jupstar> it simply clears the menu buffer
19:43 <+bridge> [ddnet] <Jupstar> thats why it looks like it reconnects
19:43 <+bridge> [ddnet] <Jupstar> but still better than crashing ^^
19:44 <+bridge> [ddnet] <nori> yea i can't reproduce it now
19:44 <+bridge> [ddnet] <Jupstar> yeah
19:44 <+bridge> [ddnet] <Jupstar> then i assume wayland kills it bcs the GPU is busy for over 2-3 seconds
19:44 <+bridge> [ddnet] <nori> i even tried alt tabbing hard
19:44 <+bridge> [ddnet] <nori> no crash
19:48 <+bridge> [ddnet] <Jupstar> damn it why do we enforce the linker, valgrind doesnt work with mold xD
19:48 <+bridge> [ddnet] <Jupstar> callgrind
19:50 <+bridge> [ddnet] <Jupstar> ah did we remove it again, guess cmake still cached it ðŸ˜„
20:29 <+bridge> [ddnet] <nori> @Not Keks i still have few wayland related bug if you want to fix it xd
20:29 <+bridge> [ddnet] <Jupstar> doubt i can fix all xD
20:30 <+bridge> [ddnet] <Jupstar> i mean this indeed is not directly a wayland bug
20:30 <+bridge> [ddnet] <Jupstar> just very strict about GPU usage ðŸ˜„
20:30 <+bridge> [ddnet] <Jupstar> guess KDE overwrote it or smth to be less strict
20:30 <+bridge> [ddnet] <nori> yeah it is not bug
20:30 <+bridge> [ddnet] <nori> but i have one
20:30 <+bridge> [ddnet] <nori> i can't launch desktop file
20:30 <+bridge> [ddnet] <nori> it takes few try
20:30 <+bridge> [ddnet] <nori> only for ddnet
20:31 <+bridge> [ddnet] <Jupstar> also crashes?
20:31 <+bridge> [ddnet] <Jupstar> or just refuses
20:31 <+bridge> [ddnet] <nori> i fix it by adding Terminal=true on desktop file
20:31 <+bridge> [ddnet] <nori> i can launch it terminal without issue
20:31 <+bridge> [ddnet] <nori> no idea i don't see anything
20:32 <+bridge> [ddnet] <nori> since i can't reproduce it on terminal i can't get any output :d
20:32 <+bridge> [ddnet] <Jupstar> uff, is this really a wayland issue? does the program that parses the desktop file maybe have no permission to start the app?
20:32 <+bridge> [ddnet] <nori> it is random
20:32 <+bridge> [ddnet] <nori> if it doesn't have permission to launch, it wouldn't start right
20:32 <+bridge> [ddnet] <Jupstar> do u call it asset files or assets files
20:32 <+bridge> [ddnet] <Jupstar> or just assets?
20:32 <+bridge> [ddnet] <Jupstar> without files
20:33 <+bridge> [ddnet] <nori> uh no idea
20:33 <+bridge> [ddnet] <nori> wdym
20:33 <+bridge> [ddnet] <nori> lemme share desktop file
20:33 <+bridge> [ddnet] <Jupstar> i am just struggling with english rn xD
20:33 <+bridge> [ddnet] <nori> ```
20:33 <+bridge> [ddnet] <nori> [Desktop Entry]
20:33 <+bridge> [ddnet] <nori> Type=Application
20:33 <+bridge> [ddnet] <nori> Name=DDNet
20:33 <+bridge> [ddnet] <nori> GenericName=Platform Game
20:34 <+bridge> [ddnet] <nori> Exec=env DDNET_DRIVER=GLES SDL_VIDEODRIVER=wayland /home/arda/.ddnetsrc/build/DDNet
20:34 <+bridge> [ddnet] <nori> Icon=teeworlds
20:34 <+bridge> [ddnet] <nori> Keywords=game;multiplayer;
20:34 <+bridge> [ddnet] <nori> Categories=Game;ArcadeGame;
20:34 <+bridge> [ddnet] <nori> MimeType=x-scheme-handler/ddnet;
20:34 <+bridge> [ddnet] <nori> Comment=Launch DDNet
20:34 <+bridge> [ddnet] <nori> #Terminal=true
20:34 <+bridge> [ddnet] <nori> ```
20:35 <+bridge> [ddnet] <Jupstar> well im not an expert, but looks correct to me
21:08 <+bridge> [ddnet] <Nouaa> ChillerDragon: can you take a look when you have some free time? i have a segfault (i think it starts from there : ||https://github.com/NouaaTW/ddnet/blob/bb3020eb425b35b3bbdbbd5d6cbbb4041b4fbd22/src/game/server/entities/character.cpp#L911)|| 
21:08 <+bridge> [ddnet] <Nouaa> when the character dies while he has the advanced passive indicator, which shouldn't happen because it's the same process as deleting it with a simple chat command ||(https://github.com/NouaaTW/ddnet/blob/bb3020eb425b35b3bbdbbd5d6cbbb4041b4fbd22/src/game/server/cmtchatcmds.cpp#L140)||
23:48 <+bridge> [ddnet] <`Mahdiyar> Chiller
