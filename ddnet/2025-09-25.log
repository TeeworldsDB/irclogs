00:02 < bridge> <robyt3> Seems fine, but it's a bit random when exactly nightly is build anyway
00:03 < bridge> <Solly (bun bun)> nightly or master, a recentish commit
00:03 < bridge> <Solly (bun bun)> idk when the reserve was added
00:04 < bridge> <robyt3> I think "nightly" is simply the latest commit on master when deen starts the build
00:04 < bridge> <Assa> I can tell exactly, it was a week ago
00:04 < bridge> <Solly (bun bun)> ghasp!
00:04 < bridge> <robyt3> You can see at which times the debugging symbols were updated on https://ddnet.org/downloads/symbols/
00:04 < bridge> <Assa> the idiot who wrote #10940 must have a fried brain
00:04 < bridge> <DDNet> https://github.com/ddnet/ddnet/pull/10940
00:07 < bridge> <chillerdragon> Thanks for fixing set\_team\_ddr I just had to use it this week! But for me it worked c:
00:11 < bridge> <kebscs> because you didnt start a run or were in practice
00:11 < bridge> <kebscs> i have `sv_practice_by_default` on my test server so it didnt work at all
00:12 < bridge> <chillerdragon> Rip you
00:12 < bridge> <chillerdragon> @blaiszephyr: you can‚Äôt tell me the Teeworlds pr was done by a human
00:13 < bridge> <chillerdragon> Probably some vibe dude in told some Agent: create a GitHub account and make it do open source
00:13 < bridge> <chillerdragon> Probably some vibe dude told some Agent: create a GitHub account and make it do open source
00:54 < bridge> <kebscs> is it still refactor if all whats done is 5 lines being moved
00:54 < bridge> <kebscs> and moved into basically same space, as there are 0 checks
01:00 < bridge> <kebscs> no flame, i think youre much better than moving few lines around üëç
01:03 < bridge> <Solly (bun bun)> prefacing flame doesnt reduce flame
01:03 < bridge> <Solly (bun bun)> prefacing with "no flame" doesnt reduce flame
01:03 < bridge> <Solly (bun bun)> it was worse before, its better now, its a pr
01:04 < bridge> <Solly (bun bun)> i dont distinguish between "clean" and "refactor" like i used to, i just use "refactor"
01:05 < bridge> <kebscs> just jokingly, that this is such a small pr
01:05 < bridge> <Solly (bun bun)> üëÄ
01:13 < bridge> <Solly (bun bun)> (atleast to me "no flame" doesnt sound very jokey, /j would probably be more clear)
01:13 < bridge> <Solly (bun bun)> (should i, is the small effort of derterming whether something is a cleanup or refactor worth the small clarity for the reviewer)
01:14 < bridge> <kebscs> no :kek:
01:14 < bridge> <kebscs> i mean youre way better dev, can do more than just shift 5 lines
01:15 < bridge> <Solly (bun bun)> it was in the process of doing
01:15 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1420549146523340850/image.png?ex=68d5ccfd&is=68d47b7d&hm=685d5e5178ff346c7cddf42bf9f5bcdec3be81cfe587791b9c16b7b0b370f00f&
01:15 < bridge> <Solly (bun bun)> i saw bad code so i fixed it
01:16 < bridge> <thrava> I'm currently trying to create some new classes to interact with database,
01:16 < bridge> <thrava> https://cdn.discordapp.com/attachments/293493549758939136/1420549425306140813/lightquery.cpp?ex=68d5cd3f&is=68d47bbf&hm=3dcae3e1c41b95ea31917e9b3e66c06952d7918d2d37b163efb365629385ed27&
01:16 < bridge> <thrava> https://cdn.discordapp.com/attachments/293493549758939136/1420549425604071615/lightquery.h?ex=68d5cd3f&is=68d47bbf&hm=ff676ab8a0feacf7b14456d76c582df04e755978316c72d210770fd59a4453a5&
01:18 < bridge> <thrava> The score.h is kind let me confused because it seems to put many stuff together
01:19 < bridge> <thrava> And it requires some search to the code to find where is the logic handling the result of querying (finally I found  CPlayer::ProcessScoreResult executed in CPlayer::Tick)
01:22 < bridge> <thrava> There would be a manager class but I haven't written yet
01:24 < bridge> <thrava> There is a obsolete version of kind "manager" class, I decided not to use it because its code was not good
01:24 < bridge> <thrava> https://cdn.discordapp.com/attachments/293493549758939136/1420551533023596634/image.png?ex=68d5cf36&is=68d47db6&hm=898ced929e1f5fe678196bcc43ba2b681ebbe9a3c5aa80ae1a065b13af280278&
01:27 < bridge> <thrava> So my target is let database function can be "registered" in the initializing of server or gamecontext like console commands doing, and also have QueXXX conmmands like ConXXX do
01:32 < bridge> <thrava> The CMessageBuilder would have more function to let it be more powerful like directly create send chat or set motd instructions in a few lines because it is already have the capability to parse format string and fill the value directly from the Result
05:02 < bridge> <melon> Yeah idk.
05:06 < bridge> <melon> it makes me sad.
05:06 < bridge> <melon> The constant "is this AI?" in the back of my head
06:14 < bridge> <ramirok_> add player_flag and dummy_flag to f1
06:14 < bridge> <ramirok_> to bind full profile change
06:14 < bridge> <filoqcus> :justatest:
06:42 < bridge> <ryozuki> morning
07:00 < bridge> <tsfreddie> I'm AI
08:24 < bridge> <chillerdragon> What are you working on btw? I mean what is it for? @thrava are you planning to pr that into ddnet?
08:27 < bridge> <ryozuki> seems like i got a working scheduler again
08:27 < bridge> <ryozuki> also maybe im moving out to a nearby city thats not barcelona
08:27 < bridge> <ryozuki> cheaper and bigger flat
08:27 < bridge> <ryozuki> :owo:
08:41 < bridge> <amer131313> Hi
08:41 < bridge> <amer131313> Hola?
08:41 < bridge> <amer131313> MERHABA
08:42 < bridge> <amer131313> üôÇ
08:42 < bridge> <Jupstar ‚ú™> Sprich deutsch
08:42 < bridge> <Assa> como estas?
08:43 < bridge> <ryozuki> bien
08:44 < bridge> <ryozuki> kein deutsch sprechen
08:44 < bridge> <ryozuki> :brownbear:
09:32 < ws-client1> **<ChillerDragon>** xd
10:22 < bridge> <thrava> I don't, I just wan't to have some method to auto update map info in motd when changing map
10:22 < bridge> <thrava> I don't know, I just wan't to have some method to auto update map info in motd when changing map
10:23 < bridge> <thrava> I just dislike the interaction method of database in score.h
10:24 < bridge> <thrava> So I decide to rewrite a new one
10:24 < bridge> <thrava> With mostly dependency injection
10:33 < bridge> <thrava> It's powerful for queries that needn't return every value in absolutely one-time, because in this case, it can be collected in multiple queries
10:36 < bridge> <Ewan> is it beneficial to break things up
10:38 < bridge> <thrava> for short time queries, it almost make no effects
10:39 < bridge> <thrava> but for long time queries like queries related to race.sql, It porbably(I haven't test) take more time
10:40 < bridge> <thrava> But it can be solved by adding link-list logic to the Result and Request struct I think
10:42 < bridge> <thrava> If really added, there is no need to  allocate memory chunk to store continuous values
12:31 < ws-client1> **<ChillerDragon>** ddnet is deprecated on brew <:tee_thinking:478629518358085653> teeworlds is not
12:32 < ws-client1> **<ChillerDragon>** https://github.com/Homebrew/homebrew-cask/blob/cacb4996f58b5323e97ecd6abec4da6dfb4e45b6/Casks/d/ddnet.rb#L15
14:07 < ws-client1> **<ChillerDragon>** where do i write documentation comments?
14:07 < ws-client1> **<ChillerDragon>** in the interface or in the implementation class?
14:16 < bridge> <Assa> This is fucking huge, @robyt3 take  a :deen_star:
14:26 < bridge> <Solly (bun bun)> @chillerdragon what are you documenting?
14:26 < bridge> <Solly (bun bun)> it depends
14:26 < bridge> <Solly (bun bun)> i would go with the most general, if it applies to interface and implementation class (not implementation.cpp) then do interface
14:36 < ws-client1> **<ChillerDragon>** just a general question i wonder about it every time
14:37 < ws-client1> **<ChillerDragon>** i also am not sure which is supported best by editors
14:38 < ws-client1> **<ChillerDragon>** maybe oop was a mistake and we should go back to C
14:38 < ws-client1> **<ChillerDragon>** if it is non obvious where to search for documentation
14:38 < ws-client1> **<ChillerDragon>** watafak is polymorpic documentation even supposed to do
14:39 < bridge> <Solly (bun bun)> @chillerdragon idk what that means
14:39 < bridge> <Solly (bun bun)> why is polymorphic documentation any different
14:39 < bridge> <Solly (bun bun)> you put comments where they are relevant
14:39 < bridge> <Solly (bun bun)> üëÄ
14:39 < bridge> <Solly (bun bun)> for manual searching yeah its a bit confoozing
14:41 < ws-client1> **<ChillerDragon>** if i ask my editor for docs which should it even show
14:46 < ws-client1> **<ChillerDragon>** am i just a hater or have the integration become more annoying since the python rewrite?
14:46 < ws-client1> **<ChillerDragon>** `FileNotFoundError: [Errno 2] No such file or directory: './integration_open_editor_h91bi5r5/client0.fifo' ` what does that even mean
14:49 < bridge> <robyt3> Document the interface. The implementation also inherits the documentation usually.
14:52 < bridge> <robyt3> Either the server failed to create the FIFO file, or maybe it failed before that
14:52 < bridge> <robyt3> Either the client failed to create the FIFO file, or maybe it failed before that
15:08 < bridge> <Assa> @blazulite  https://github.com/ddnet/ddnet/issues/10326 would be a good opportunity to help in ddnet if you want üôÇ
15:08 < ws-client1> **<ChillerDragon>** yea it looks like it crashed in the CI the error was more useful than locally
15:09 < ws-client1> **<ChillerDragon>** i know basically nothing about gfx and i do not feel like looking into it we need someone help for all the assa and solly prs
15:09 < ws-client1> **<ChillerDragon>** when send new maintainer
15:09 < ws-client1> **<ChillerDragon>** i am more comfortable in the breaking phyiscs and back compat department
15:09 < bridge> <Assa> you can just read netcode, this is where I am mostly skillchecked
15:10 < ws-client1> **<ChillerDragon>** ye netcode i can also merge
15:10 < ws-client1> **<ChillerDragon>** we need more gfx mergers
15:10 < bridge> <Assa> because I don't get the "ddnet protocol" if you can call that
15:11 < bridge> <Assa> I am also not perfect for gfx, as soon as it hits backend/shader expert level, I also start heavy sweating
15:11 < bridge> <Assa> the next obvious shader would be a tee-render-shader btw, and this is not simple at all
15:12 < ws-client1> **<ChillerDragon>** i want moving grass!
15:12 < bridge> <Assa> and it wouldn't even guarantee a performance increase, because we are already using quad containers in the backend
15:12 < bridge> <Assa> we could also do that, similar to the water shader I already made (but different) :justatest:
15:14 < bridge> <Assa> omg you could actually do that automatically by adding a shared external white grass for everyone and detecting that one and animating it
15:15 < bridge> <Assa> > Gotta find this soreu dude. Or also recreate that one from scratch :/
15:15 < bridge> <Assa> @chillerdragon wat?
15:17 < bridge> <kebscs> am i also missing smth
15:17 < bridge> <kebscs> do we need a creator of the image to copy paste grenade launcher into a png file?
15:17 < ws-client1> **<ChillerDragon>** we should discuss this on gh if its not clear^^
15:18 < ws-client1> **<ChillerDragon>** but what i meant is we should stop editing png files and move to svg
15:18 < bridge> <Assa> you can directly convert every weapon in the svg to a 64*64 tile
15:18 < ws-client1> **<ChillerDragon>** soreu might have on otherwise i would propose to recreate it
15:18 < ws-client1> **<ChillerDragon>** @soreu
15:19 < bridge> <Assa> omg soreu is a person, I thought you _uwuiefied_ the word `sorry`
15:19 < bridge> <kebscs> isnt that the point of ddnet-data-svg
15:19 < ws-client1> **<ChillerDragon>** it is
15:19 < ws-client1> **<ChillerDragon>** but it does not have the file we need yet
15:19 < ws-client1> **<ChillerDragon>** so its either find or recreate
15:19 < bridge> <kebscs> yeah so just paste it into png
15:19 < bridge> <kebscs> dont need to recreate it as svg for that issue
15:19 < bridge> <Assa> yes !
15:20 < ws-client1> **<ChillerDragon>** hrmpf
15:20 < bridge> <Assa> recreating all of the entities in svg and then exporting pngs is another issue
15:20 < ws-client1> **<ChillerDragon>** ok fair  i gues
15:20 < ws-client1> **<ChillerDragon>** gimp it in then
15:21 < bridge> <Assa> and we'd actually need sb to maintain it, a lot of tiles could need some overhaul
15:21 < ws-client1> **<ChillerDragon>** but before big overhaul we should move to svg :p 
15:21 < bridge> <Assa> do you need help to split up the svg into weapon svgs?
15:22 < bridge> <Assa> guess i am going to do that now for ddnet-data-svg
15:23 < ws-client1> **<ChillerDragon>** who is "you"
15:23 < bridge> <kebscs> you
15:23 < bridge> <kebscs> :kek:
15:23 < ws-client1> **<ChillerDragon>** im not splittin shit
15:24 < bridge> <Assa> baba is you
15:24 < ws-client1> **<ChillerDragon>** if you want weapons i already built them from hand here lel https://github.com/TeeworldsDB/images/tree/48ddb0b2b60b44e6a8d44ce2999daf71445e7afa/realistic/transparent/game
15:24 < bridge> <Assa> I mean you as everyone and I mean kebs, since he also wants to work on this issue
15:24 < ws-client1> **<ChillerDragon>** i do not want to work on the issue.
15:24 < bridge> <Assa> are these rebuilds or the original?
15:24 < bridge> <kebscs> i dont
15:24 < ws-client1> **<ChillerDragon>** rebuilds by me
15:25 < bridge> <kebscs> but if noone wants to i can fire up paint for 5 min
15:25 < ws-client1> **<ChillerDragon>** that was before originals dropped
15:25 < ws-client1> **<ChillerDragon>** i am not sure if we even got originals 
15:25 < bridge> <Assa> why did you rebuild them? You can extract them all from the game.svg üôà
15:25 < bridge> <Assa> and now I mean YOU CHILLERDRAGON
15:25 < ws-client1> **<ChillerDragon>** when zatline randomly dropped some weird ass work in progress 0.8 svgs he found on his drive
15:26 < ws-client1> **<ChillerDragon>** @Assa you know that the game.svg is a newer rebuild than mine right?
15:26 < bridge> <Assa> I'll split the svg and give blazulite a chance to contribute üôÇ
15:26 < bridge> <kebscs> svg :pepeW:
15:26 < bridge> <Assa> yeah read that after I wrote my comment
15:27 < ws-client1> **<ChillerDragon>** @Assa depends on how you define original
15:27 < ws-client1> **<ChillerDragon>** i think teeworlds game was never published. I recreated in 2021 and the bois did it in 2022 again xd https://github.com/ddnet/ddnet-data-svg/pull/32
15:29 < bridge> <Assa> hmm the ship is sinking
15:29 < bridge> <chillerdragon> Yup
15:29 < bridge> <chillerdragon> Where a Landil
15:30 < bridge> <chillerdragon> We need a Landil
15:30 < bridge> <Assa> so theseus created a new one, I get it
15:30 < bridge> <chillerdragon> It became somewhat official for ddnet tho
15:30 < bridge> <chillerdragon> So ddnet is now proper temu fake of Teeworlds
15:30 < bridge> <chillerdragon> With recreated assets
15:30 < bridge> <Assa> can you guarantee that your recreation or the one of the 3 ohters is 100% accurate? Which is better?
15:31 < bridge> <chillerdragon> It‚Äôs not accurate
15:31 < bridge> <chillerdragon> Neither accurate to DDNet nor Teeworlds
15:31 < bridge> <chillerdragon> Go with the ones from the ddnet repo
15:31 < bridge> <chillerdragon> Cut them out
15:32 < bridge> <chillerdragon> This svg was already used to generate the png we ship I think
15:32 < ws-client1> **<ChillerDragon>** so its already tw fake xd
15:32 < ws-client1> **<ChillerDragon>** and ddnet official
15:32 < ws-client1> **<ChillerDragon>** even if it wasnt done yet we plan to do so eventually
15:32 < ws-client1> **<ChillerDragon>** hmm latest commit 3 years ago https://github.com/ddnet/ddnet/blob/24fd04b7bc9dcea9f92624ca455eccf19d4f7ac6/data/game.png
15:33 < ws-client1> **<ChillerDragon>** i think we actually still use tw one
15:34 < bridge> <null_bringht> Hi, I have an idea about how to add voice chat to the game.
15:34 < ws-client1> **<ChillerDragon>** how?
15:36 < bridge> <null_bringht> There are many apps and plugins for voice chat. It would be great to talk not in Discord or other apps, but in the game itself.
15:36 < ws-client1> **<ChillerDragon>** oh so your idea is just "voice chat" not "how to do it"
15:36 < ws-client1> **<ChillerDragon>** iirc that has already been rejected
15:36 < ws-client1> **<ChillerDragon>** i would also find it useful tbh
15:36 < bridge> <kebscs> proximity voice chat
15:37 < bridge> <Teero> ddnet-rs :gigachad:
15:37 < ws-client1> **<ChillerDragon>** https://github.com/ddnet/ddnet/issues/6547
15:37 < ws-client1> **<ChillerDragon>** @Teero fr
15:39 < bridge> <null_bringht> oh okay
15:41 < ws-client1> **<ChillerDragon>** nah bro what does it want from me https://github.com/ddnet/ddnet/actions/runs/18008439189/job/51234313018?pr=10964
15:43 < bridge> <kebscs> flaky test
15:43 < bridge> <kebscs> failing on my pr too
15:45 < bridge> <ryozuki> btw
15:45 < bridge> <ryozuki> 0xDEADBEEF is a bad address to debug
15:45 < bridge> <ryozuki> its not even 8 byte aligned
15:46 < bridge> <ryozuki> in rust if u try to deref it on debug build it panics cuz it catches ur trying to deref an an unaligned ptr
15:46 < bridge> <ryozuki> also its a addr that its not that hard it may have data
15:46 < bridge> <ryozuki> > Frankly, 0xdeadbeef is a rather bad value for a pointer poison: It doesn't have enough leading zeros to be caught in unmapped area used to catch null pointer access (it has a high change of being a valid kernel address on linux if you have about 700mb of ram). And there are not enough zeros at the end to still recognize it if the access is to a offset within the array/structure (as it usually happens).
15:47 < bridge> <ryozuki> so as of today im anti deadbeef
15:47 < bridge> <headshotnoby> alivecow
15:48 < bridge> <melon> 0xw00000DEAD000000000
15:48 < bridge> <melon> 0x00000DEAD000000000
15:48 < bridge> <melon> :topkekMate:
15:48 < bridge> <Assa> @chillerdragon since bot is not connected to ddnet-data-svg: https://github.com/ddnet/ddnet-data-svg/pull/66
15:49 < bridge> <ryozuki> the unaligned access only is ub if the underlying data requires a a non 1 alignment like u64
15:49 < bridge> <Assa> you can argue for and against the usefullness of this PR ü§∑‚Äç‚ôÇÔ∏è
15:49 < bridge> <ryozuki> ```
15:49 < bridge> <ryozuki> thread 'main' panicked at src/main.rs:7:9:
15:49 < bridge> <ryozuki> misaligned pointer dereference: address must be a multiple of 0x8 but is 0xdeadbeef
15:49 < bridge> <ryozuki> note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
15:49 < bridge> <ryozuki> thread caused non-unwinding panic. aborting.
15:49 < bridge> <ryozuki> ```
15:49 < bridge> <kebscs> missing hammer
15:50 < bridge> <Assa> there is no hammer pickup :justatest:
15:50 < ws-client1> **<ChillerDragon>** @kebscs well.... i disabled rcon commands so the prs test would get stuck on the client running `shutdown` fair i guess xd
15:50 < bridge> <kebscs> the pr says `weapons` :think_bot:
15:51 < ws-client1> **<ChillerDragon>** its just the output always looks the same
15:51 < ws-client1> **<ChillerDragon>** i wish it would be more specific about what timeouted
15:51 < bridge> <Assa> it contains `weapons` (pl) :justatest:
15:51 < bridge> <kebscs> it does not contain `pickup`
15:53 < ws-client1> **<ChillerDragon>** @Assa wdym bot the irc github bot was shutdown before i was born xd
15:53 < ws-client1> **<ChillerDragon>** i get emails for that repo
15:56 < bridge> <Assa> emails, that is soo oldschool
15:56 < bridge> <Assa> (if emails wouldn't work suddenly, I guess the next world finance crisis would immediately start)
15:57 < bridge> <Teero> wants you to go smoke
15:57 < bridge> <Teero> i think
15:58 < bridge> <Teero> i honestly think python errors are way harder to read than c++ or c errors
15:59 < bridge> <ryozuki> actually if ur using deadbeef maybe u want that
16:09 < ws-client1> **<ChillerDragon>** another morning w out rcon prs merged
16:10 < ws-client1> **<ChillerDragon>** another night i cry my self into sleep
16:10 < ws-client1> **<ChillerDragon>** end of shift, chilor out
16:10 < bridge> <Assa> cries about his rcon prs, while I have PRs that are longer open
16:14 < bridge> <kebscs> 99 open prs! üîî
16:52 < bridge> <ryozuki> :owo: ü§≠
16:59 < bridge> <Jupstar ‚ú™> We can try to overflow the counter
17:28 < bridge> <Assa> f-droid contributor answered :poggers2:
17:29 < bridge> <Teero> @essigautomat answer him
17:29 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1420794387364974714/image.png?ex=68d6b163&is=68d55fe3&hm=69d14c8bcc906f36c19cb5ab75dadb7c88253ca1655acf7e8f2acc0a4799f900&
17:32 < bridge> <Assa> @teero777 how do we build those libs?
17:32 < bridge> <Teero> i don't know he would do it
17:32 < bridge> <Teero> or they
17:32 < bridge> <Teero> idk
17:33 < bridge> <Teero> well we don't xd
17:33 < bridge> <Teero> thats the whole point of having static libraries
17:43 < bridge> <Teero> what? no?
17:43 < bridge> <Assa> I believe I let Heinrich answer, I am not too familiar with building android
17:43 < bridge> <Jupstar ‚ú™> ofc
17:43 < bridge> <Teero> im stupid
17:43 < bridge> <Teero> youre right
17:44 < bridge> <Teero> for android yes
17:44 < bridge> <Teero> nice scripts
17:44 < bridge> <Teero> ~~https://github.com/ddnet/ddnet-scripts/blob/master/ddnet-lib-update.sh~~
17:44 < bridge> <Teero> ~~this is how they are built~~
17:44 < bridge> <Teero> https://github.com/ddnet/ddnet-libs~~
17:45 < bridge> <Teero> ~~https://github.com/ddnet/ddnet-libs~~
17:55 < bridge> <Teero> wtf is this mechanic
17:55 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1420800946182557696/2025-09-25_17-54-51.mp4?ex=68d6b77e&is=68d565fe&hm=60f3c55f234f6bb79bdb32d3b9dcd701fe1726d9e3ff9e4c90449d7de6888748&
17:56 < bridge> <bencie> Its used in the map "just deep fly"
17:57 < bridge> <bencie> One of the final solo parts after dummy dies
17:58 < bridge> <Assa> I needed to add this to the hook line as well btw xD
17:58 < bridge> <Teero> okay im not supporting that shit in my physics
17:59 < bridge> <Assa> wait until he learns about the same trick without teleouts
18:05 < bridge> <kebscs> With 0 teleouts hook is glitched
18:05 < bridge> <kebscs> Won't attach
18:06 < bridge> <Assa> really
18:06 < bridge> <kebscs> Yea I think I tested that
18:07 < bridge> <Assa> :monkaStop:
18:13 < bridge> <Assa> do I need a new hookline color for state _fucked_?
18:15 < bridge> <Assa> Who doesn't know about the 4 hook line states:
18:15 < bridge> <Assa> - hooking
18:15 < bridge> <Assa> - not hooking
18:15 < bridge> <Assa> - unknown
18:15 < bridge> <Assa> - _fucked_
19:39 < bridge> <Assa> and you only want to know where the end of the hook is, and if it's hooking something or not
19:39 < bridge> <Assa> and we have basically yes/no/maybe/bugged
19:40 < bridge> <Teero> mega bool
20:29 < bridge> <ryozuki> sorry i wa  dealing with moving house stuff
20:30 < bridge> <ryozuki> samply is a perf wrapper
20:30 < bridge> <ryozuki> it formats the data for u into firefox profiler automatically
20:30 < bridge> <ryozuki> firefox profiler is the best ui ever
20:30 < bridge> <ryozuki> i already showed a profile of ddnet in this channel
20:30 < bridge> <Teero> okay but i cant see the assembly xd
20:30 < bridge> <Teero> like what if i have 5 operations in a single line
20:30 < bridge> <Teero> i wouldnt know which one is slow
20:31 < bridge> <Teero> thats like pretty important
20:31 < bridge> <Teero> also i think the firefox profile ui is horrible
20:33 < bridge> <Teero> like this is so ugly
20:33 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1420840705911292068/image.png?ex=68d6dc86&is=68d58b06&hm=3ed8c2136c59f38cdf5deb47fe413d067cd10991295a6cd66bd0b6d6b7b09034&
20:35 < bridge> <Teero> in perf you can instantly see whats wrong and cycle through the hot instructions
20:35 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1420841102608437369/image.png?ex=68d6dce4&is=68d58b64&hm=a13c2a3088fd45463bb6bbbd84ad10f9c7eb0167588bc3779f56c2ecae8a7e5f&
20:36 < bridge> <Teero> there must be a reason you think the firefox profiler is good that i haven't found yet
20:43 < bridge> <Teero> https://github.com/firefox-devtools/profiler/issues/4520
20:43 < bridge> <Teero> 
20:43 < bridge> <Teero> the issue says it supports native assemblyfor C/C++/Rust but it doesn't appear so
20:43 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1420843251824590889/image.png?ex=68d6dee5&is=68d58d65&hm=aa15711d90f1f20d7dbfcc50183426bf90b7ac240fe9013fc602008273c14429&
21:19 < bridge> <ryozuki> did u leave samply server open?
21:20 < bridge> <ryozuki> well if perf works better use it, if im real i barely used perf cuz i didnt learn the cli tools to use it xd
21:20 < bridge> <ryozuki> samply is rly simple, u wrap the run command and u get a shareable profile
21:20 < bridge> <ryozuki> however i think u can see the asm
21:22 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1420853046346518578/image.png?ex=68d6e804&is=68d59684&hm=31b399162d5ad354dc8d228eb37bb1aa843e00fca11a2f2ceb6701257196d0d2&
21:22 < bridge> <Teero> ah yea mb the asm works
21:23 < bridge> <Teero> is there no combined view?
21:24 < bridge> <ryozuki> no idea
21:24 < bridge> <ryozuki> samply can record for perf too btw
21:24 < bridge> <ryozuki> iirc
21:24 < bridge> <ryozuki> i guess its also more crossplatform
21:25 < bridge> <ryozuki> it works on linux macos winshit
21:25 < bridge> <ryozuki> @teero777 how do u use perf to view the source like that btw?
21:27 < bridge> <Teero> idk seems simple enough xd
21:27 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1420854284966170737/2025-09-25_21-26-05.mp4?ex=68d6e92b&is=68d597ab&hm=ba15e3a1d0aa1b9093a285f3ff99150a60e0cbc1d269f86c97f88f1805f088e9&
21:33 < bridge> <Teero> you can do a lot with perf actually
21:33 < bridge> <Teero> i mean if i wanted a flame graph i could just tell perf to make one
21:47 < bridge> <kebscs> nah this doesnt look easier than firefox graph at all
21:50 < bridge> <Teero> how is blinding your eyes, moving your mouse, double clicking some elements, having 0 visual feedback and no combined asm+code view easier xd
21:51 < bridge> <Teero> also my mouse wheel is broken and the firefox dragger thing is so small for big code files that you can't see it. so scrolling to some part of the code is horrible
21:52 < bridge> <Assa> TheFatRat - Warbringer
21:54 < bridge> <kebscs> i have checked the firefox profiler once so cant say much
21:54 < bridge> <kebscs> but anything easier than arrow keys in console
21:54 < bridge> <Teero> its actually not though. its a different song that they used the same section in
21:57 < bridge> <inv41idu53rn4m3> True, arrow keys are awful
21:57 < bridge> <inv41idu53rn4m3> it's gotta be hjkl
21:58 < bridge> <Teero> i lied. it is the song
22:04 < bridge> <Assa> huh, can you send link? I like that song a lot but I'd wish for a metal variant tbh xD
22:04 < bridge> <Teero> i said i lied :(
22:04 < bridge> <Assa> you failed me brother üôÅ
22:15 < bridge> <totar> idk I kinda agree with teero, I used the vs profiler a lot but seeing the assembly inline with the code in perf lets you spot a lot more optimizations that I didn't think about otherwise.
22:15 < bridge> <totar> the interface is also not bad
22:15 < bridge> <totar> you can just around well
22:15 < bridge> <totar> you can jump around well
22:16 < bridge> <totar> lack of flamegraph is the worst part
22:19 < bridge> <totar> now I feel blind without assembly lol
23:32 < bridge> <Teero> i just discovered there is literally an "export as flamegraph" button lmao
23:34 < bridge> <Teero> you just go to run scripts for all samples and then press flamegraph xD
23:34 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1420886080940412939/image.png?ex=68d706c8&is=68d5b548&hm=734c829a34b7cdfd19971acc844f9f406d15b3dfdf53a43b47ba92ef685f0290&
23:34 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1420886081884389406/image.png?ex=68d706c8&is=68d5b548&hm=66bcb4c829bb059a6acaaa3b987011f5f5415a370cc3bed63119010e216c5f0f&
23:34 < bridge> <totar> Does it work
23:35 < bridge> <Teero> it should, but i dont have the program installed
23:35 < bridge> <Teero> it needs some sort of template
23:35 < bridge> <Teero> the package is not in the any arch repo so id have to compile it manually
23:39 < bridge> <totar> Every time I've tried a tool thats supposed to give perf flamegraph it didnt work for some reason
23:39 < bridge> <totar> or there was some catch that isnt acceptable
23:43 < bridge> <Teero> man modern cpus have to many instructions its probably impossible to properly write assembly
23:43 < bridge> <Teero> man modern cpus have so many instructions its probably impossible to properly write assembly
23:54 < bridge> <totar> The instructions are just wrappers for microcode which has far fewer instructions, using a highly specific instruction isnt guaranteed to give you any real benefit.
23:55 < bridge> <Teero> uh maybe i did something wrong
23:55 < bridge> <Teero> https://cdn.discordapp.com/attachments/293493549758939136/1420891572081528963/image.png?ex=68d70be5&is=68d5ba65&hm=05ed4662c8b9b16ffbd77695bf940122ad88a2bd7ff10378277f7cb459004f0b&
23:57 < bridge> <learath2> "Properly" by hand is veeery hard nowadays. But the manuals technically have all the information you'll need
