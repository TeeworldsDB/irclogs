00:52 <+bridge_> [ddnet] <APFFF> d
03:31 <+bridge_> [ddnet] <tela> This might be a more general macos question than one specific to ddnet, but what is the process y'all do to turn ddnet compiled with cmake in terminal into a .app mac application?  Or do you compile it in a different way to end up with a .app?
03:31 <+bridge_> [ddnet] <tela> Looks like there's a few ways in general to make .apps so I was curious what you all do for ddnet
03:37 <+bridge_> [ddnet] <tela> nvm figured it out lol
12:28 <+bridge_> [ddnet] <TeePlayer> its possible to connect ddnet client with dummy into 0.6.5, but ddnet 11.6..1 with bugs
12:28 <+bridge_> [ddnet] <TeePlayer> https://cdn.discordapp.com/attachments/293493549758939136/948179963650129950/unknown.png
12:34 <+bridge_> [ddnet] <TeePlayer> its possible to connect ddnet client with dummy into 0.6.4, but ddnet 11.6..1 with bugs
12:34 <+bridge_> [ddnet] <TeePlayer> https://cdn.discordapp.com/attachments/293493549758939136/948179963650129950/unknown.png
12:34 <+bridge_> [ddnet] <TeePlayer> its possible to connect ddnet client with dummy into 0.6.4, but ddnet 11.6.1 with bugs
12:34 <+bridge_> [ddnet] <TeePlayer> https://cdn.discordapp.com/attachments/293493549758939136/948179963650129950/unknown.png
12:44 <+bridge_> [ddnet] <TeePlayer> DDNet-14.6.2-win64 - first version with crash
12:44 <+bridge_> [ddnet] <TeePlayer> DDNet-15.5.1-win64 - can connect with rendering bugs
12:44 <+bridge_> [ddnet] <TeePlayer> ```DDNet-14.6.2-win64 - first version with crash
12:44 <+bridge_> [ddnet] <TeePlayer> DDNet-15.5.1-win64 - can connect with rendering bugs```
12:48 <+bridge_> [ddnet] <TeeFlowerFell-Sans> A guess, client crash cuz dummy didn't get same Map with main player
13:21 <+bridge_> [ddnet] <Jupstar> How do you even reproduce it, for me it works on the master branch
13:22 <+bridge_> [ddnet] <Jupstar> or is it random
13:22 <+bridge_> [ddnet] <TeeFlowerFell-Sans> wt do you mean?
13:22 <+bridge_> [ddnet] <Jupstar> i dont get any crash
13:22 <+bridge_> [ddnet] <TeeFlowerFell-Sans> connect dummy in teeworlds 0.6.5
13:23 <+bridge_> [ddnet] <TeeFlowerFell-Sans> connect dummy in teeworlds 0.6.5 server
13:23 <+bridge_> [ddnet] <Jupstar> the server is 0.6.5?
13:23 <+bridge_> [ddnet] <TeeFlowerFell-Sans> vanilla
13:23 <+bridge_> [ddnet] <Jupstar> yeah, i dont get anything
13:23 <+bridge_> [ddnet] <Jupstar> not even with ASan
18:08 <+bridge_> [ddnet] <Ryozuki> TIL that compiling a kernel with SIMD is bad, since it does a lot of context switching
18:08 <+bridge_> [ddnet] <Ryozuki> > However, using the large SIMD registers in OS kernels leads to performance problems. The reason is that the kernel needs to restore all registers to their original state before continuing an interrupted program. This means that the kernel has to save the complete SIMD state to main memory on each system call or hardware interrupt. Since the SIMD state is very large (512â€“1600 bytes) and interrupts can occur very often, these additional 
18:09 <+bridge_> [ddnet] <Ryozuki> TIL that compiling a kernel with SIMD is bad
19:27 <+bridge_> [ddnet] <Chairn> what would be the point of SIMD in a kernel? code is mostly conditionnal i guess, so doesn't really fit with the idiom of SIMD
19:30 <+bridge_> [ddnet] <Pathos> Well, seems like Unique isn't interested in hosting FastCap in Korea/Japan/Singapore, so I would like to bring up the point again about DDNet being able to run CTF maps
19:32 <+bridge_> [ddnet] <Learath2> Can't we just host fastcap servers? Does it have to be in DDNet code?
19:32 <+bridge_> [ddnet] <Pathos> Definitely would be nice to host FastCap servers there
19:33 <+bridge_> [ddnet] <Learath2> I guess treating flags as start and end tiles isn't that complicated, maybe it can be a small diff
19:33 <+bridge_> [ddnet] <Learath2> If you think you can pull it off in a way that doesn't create a huge diff we have to maintain, I'm okay with it
19:33 <+bridge_> [ddnet] <Pathos> I just thought DDNet is more familiar and reliable for all the players that never heard of other mods or vanilla
19:34 <+bridge_> [ddnet] <Pathos> Also DDNet translations that are already in place
19:36 <+bridge_> [ddnet] <Ryozuki> apparently float uses simd
19:37 <+bridge_> [ddnet] <Ryozuki> thats why u need to enable soft float
19:39 <+bridge_> [ddnet] <Ryozuki> > A problem with disabling SIMD is that floating point operations on x86_64 require SIMD registers by default. To solve this problem, we add the soft-float feature, which emulates all floating point operations through software functions based on normal integers.
19:40 <+bridge_> [ddnet] <Learath2> What part of a kernel requires floats anyway?
19:41 <+bridge_> [ddnet] <Ryozuki> ye thats why it isnt a problem
19:41 <+bridge_> [ddnet] <Ryozuki> to use soft-float
19:41 <+bridge_> [ddnet] <Ryozuki> xd
19:41 <+bridge_> [ddnet] <Learath2> Maybe if they do some sound stuff I can see it being useful
19:41 <+bridge_> [ddnet] <Ryozuki> > MMX: The Multi Media Extension instruction set was introduced in 1997 and defines eight 64 bit registers called mm0 through mm7. These registers are just aliases for the registers of the x87 floating point unit.
19:41 <+bridge_> [ddnet] <Ryozuki> https://os.phil-opp.com/disable-simd/
19:41 <+bridge_> [ddnet] <Ryozuki> this explains more
19:41 <+bridge_> [ddnet] <Ryozuki> xd
19:43 <+bridge_> [ddnet] <Ryozuki> > SSE is used by default by clang (and apparently rustc) when targeting x86_64 because being able to execute some level of SSE instruction (i think SSE2) is a requirement for x86_64 compatibility. Floating point math without SSE has severe performance issues, mostly because of a bad design of the original x87 coprocessor instruction set (which was designed when optimizations of modern cpus did not exist yet). For example, converting a floa
19:43 <+bridge_> [ddnet] <Ryozuki> from a comment
19:43 <+bridge_> [ddnet] <Ryozuki> xd
19:45 <+bridge_> [ddnet] <Learath2> RISCV when?
20:52 <+bridge_> [ddnet] <Chairn> i thought kernels were integers only
20:52 <+bridge_> [ddnet] <Ryozuki> it probs used very rarely
20:52 <+bridge_> [ddnet] <Chairn> only pointers and integers + bitsets for all kinds of condition
20:52 <+bridge_> [ddnet] <Ryozuki> but that doesnt change that u have to disable simd
20:53 <+bridge_> [ddnet] <Ryozuki> the compiler may use it on stuff with auto vectorization i guess
20:54 <+bridge_> [ddnet] <Chairn> yup, i guess that's the most probable cause
21:45 <+bridge_> [ddnet] <Robyt3> it only crashes for some maps/servers for me with ASAN; looks like the vanilla servers hosted by DDNet don't crash but those hosted by others do (on ctf4 and ctf5 for example)
21:46 <+bridge_> [ddnet] <Jupstar> oh ok weird, thanks ðŸ˜„
23:01 <+bridge_> [ddnet] <deen> i think it's vanilla 0.6.5 that crashes
23:13 <+bridge_> [ddnet] <Ryozuki> https://news.ycombinator.com/item?id=30515014
23:13 <+bridge_> [ddnet] <Ryozuki> man the world is small
23:13 <+bridge_> [ddnet] <Ryozuki> xd
23:24 <+bridge_> [ddnet] <Ryozuki> https://news.ycombinator.com/item?id=30518421
23:24 <+bridge_> [ddnet] <Ryozuki> we are on the only one that suffers
23:24 <+bridge_> [ddnet] <Ryozuki> :feelsbadman:
