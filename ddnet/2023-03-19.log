06:21 < bridge> <Voxel> Whatever is up with this?
06:21 < bridge> <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1086882171563810866/image.png
07:52 < bridge> <Jupstar âœª> We have an issue I didn't want to forget for a next release. But there was always something blocking it xd
10:48 < bridge> <yeeeey> nice?
10:48 < bridge> <yeeeey> https://cdn.discordapp.com/attachments/293493549758939136/1086949275373686885/image.png
10:48 < bridge> <yeeeey> 16k 120fps
10:49 < bridge> <Jupstar âœª> ?
10:50 < bridge> <yeeeey> quality nice
10:50 < bridge> <Jupstar âœª> Because u set the resolution down
10:50 < bridge> <Jupstar âœª> What do u expect
10:51 < bridge> <yeeeey> expected better resolution got better resolution xD
10:52 < bridge> <yeeeey> Why does such permission even exist?
10:53 < bridge> <Jupstar âœª> Because the GPU says they are valid resolutions
10:53 < bridge> <Jupstar âœª> And I don't random custom filtering
15:08 <+ChillerDragon> @heinrich5991 did the chunk header layout really change in 0.7? reading libtw2 docs gives me that impression while C++ blames do not
15:09 <+ChillerDragon> the blames here are over 10 years old that seems like 0.6 to me https://github.com/teeworlds/teeworlds/blame/26d24ec061d44e6084b2d77a9b8a0a48e354eba6/src/engine/shared/network.cpp#L396-L407
15:09 <+ChillerDragon> https://github.com/heinrich5991/libtw2/blob/a6e26ebd0a8669034404ab5b59de61e25e16a2a8/doc/packet7.md
15:10 <+ChillerDragon> you note a different size of padding here im a bit confused
15:15 <+ChillerDragon> oh wait it is indeed different
15:21 <+ChillerDragon> good that i checked libtw instead of just assuming 10yrs ago is 0.7 :D
15:21 <+ChillerDragon> 0.6*
15:31 < bridge> <Chairn> did laser or moving objects physics change recently (less than 4 months) ?
15:31 <+ChillerDragon> physics changes oof
15:32 < bridge> <Chairn> yeah, laser is supposed to release when moving up
15:32 < bridge> <Chairn> https://cdn.discordapp.com/attachments/293493549758939136/1087020715561209896/image.png
15:32 < bridge> <Chairn> but it releases only for not even half a sec
15:34 < bridge> <Chairn> map Low Possibility 3.
15:34 < bridge> <Chairn> map Low Possibility 3.1
15:50 < bridge> <heinrich5991> ChillerDragon: docs were useful ðŸ™‚
15:50 < bridge> <heinrich5991> also link my huffman impl :p
16:14 <+ChillerDragon> yea ur docs are useful! I use them all the time!
16:15 <+ChillerDragon> @Learath2 lerato! daily python trivia. How to not write ugly code?
16:15 <+ChillerDragon> https://zillyhuhn.com/cs/.1679238830.png
16:15 < bridge> <heinrich5991> what is this cast thing?
16:15 < bridge> <Chairn> square brackets instead of parenthesis? or is list a variable that overwrite list default type?
16:16 <+ChillerDragon> its madness
16:16 < bridge> <heinrich5991> it's a type, @Chairn
16:16 < bridge> <heinrich5991> also, pls post code with backticks, not pictures
16:16 < bridge> <Chairn> yeah, but how `list[]` can pass?
16:16 <+ChillerDragon> messages is an list of ctrl,sys,game messages and get_messages only returns a list of sys,game messages
16:16 < bridge> <heinrich5991> that's how you write a list type in python
16:16 < bridge> <Chairn> i use `list(elements)`
16:16 < bridge> <heinrich5991> https://docs.python.org/3/library/typing.html#type-aliases
16:17 < bridge> <heinrich5991> that's not a type though, that's an expresion that returns a list
16:17 <+ChillerDragon> somehow mypy says that a union inlcuding only 2 types does not fit in a union including those 2 types plus 1 more
16:17 <+ChillerDragon> so i gotta cast
16:17 < bridge> <Chairn> oh ok, never had to use this
16:17 < bridge> <heinrich5991> it's something optional
16:17 <+ChillerDragon> oh wot?
16:17 <+ChillerDragon> am i using the wrong thing?
16:17 < bridge> <heinrich5991> for people who want to add type hints to their python code
16:17 < bridge> <Chairn> thought it was accessing some elements in the list
16:17 < bridge> <Chairn> but it declares a list type
16:17 < bridge> <heinrich5991> ye
16:18 <+ChillerDragon> its so ugly xd
16:18 <+ChillerDragon> idk how to make it nice
16:18 <+ChillerDragon> but tbh the best docs is your wireshark dissector @heinrich5991 its so amazing!
16:19 < bridge> <heinrich5991> thanks ðŸ™‚
16:19 < bridge> <heinrich5991> did you get it to run again with the wireshark issue?
16:19 <+ChillerDragon> thanks a lot for the 1liner fix :)
16:19 <+ChillerDragon> yes very smoothly
16:20 <+ChillerDragon> writing tests for my code is literally copy paste from the dissector xd
16:21 < bridge> <heinrich5991> I didn't fix it, I only made it crash earlier
16:21 < bridge> <heinrich5991> how? ðŸ˜®
16:21 <+ChillerDragon> nob
16:21 <+ChillerDragon> for me it just works
16:21 <+ChillerDragon> did you apply the fix heinrich sent on github? :trollface:
16:22 <+ChillerDragon> oke
16:22 <+ChillerDragon> wops wrong chat xd
16:22 < bridge> <Voxel> ole
16:22 < bridge> <Voxel> oke
16:23 < bridge> <heinrich5991> how do you copy paste from my dissector?
16:23 <+ChillerDragon> rightclick
16:23 <+ChillerDragon> copy
16:23 < bridge> <heinrich5991> ok
16:23 < bridge> <heinrich5991> what do you copy-pate?
16:23 < bridge> <heinrich5991> I don't get it yet
16:23 <+ChillerDragon> hexdump as input
16:23 <+ChillerDragon> annotations as expected output
16:23 <+ChillerDragon> to check if my parser works
16:24 <+ChillerDragon> oh wait your right mine is crashing again :D ah i did a update yesterday
16:25 <+ChillerDragon> but i still have all the copied annotations so i didnt have to open it today yet
16:25 <+ChillerDragon> drunk wireshark devs breaking apis xd
16:38 < bridge> <Learath2> One simple trick, dont use python
16:38 <+ChillerDragon> oof
16:39 <+ChillerDragon> but it trendy, no?
16:43 < bridge> <Voxel> Erm Actually Rust Is Trendier Than Python ðŸ¤“ðŸ¤“ðŸ¤“
16:47 < bridge> <Robyt3> Can someone with macOS compile and run the following code on there and post the output?
16:47 < bridge> <Robyt3> 
16:47 < bridge> <Robyt3> ```cpp
16:47 < bridge> <Robyt3> #include <iostream>
16:47 < bridge> <Robyt3> #include <locale>
16:47 < bridge> <Robyt3> 
16:47 < bridge> <Robyt3> using namespace std;
16:47 < bridge> <Robyt3> 
16:47 < bridge> <Robyt3> int main()
16:47 < bridge> <Robyt3> {
16:47 < bridge> <Robyt3>     cout << "With unset locale:" << endl;
16:47 < bridge> <Robyt3>     cout << "  setlocale(LC_ALL, NULL): " << setlocale(LC_ALL, NULL) << endl;
16:47 < bridge> <Robyt3>     cout << "  std::locale(\"\").name(): " << std::locale("").name() << endl;
16:47 < bridge> <Robyt3> 
16:47 < bridge> <Robyt3>     cout << "With setlocale(LC_ALL, \"\"):" << endl;
16:47 < bridge> <Robyt3>     setlocale(LC_ALL, "");
16:47 < bridge> <Robyt3>     cout << "  setlocale(LC_ALL, NULL): " << setlocale(LC_ALL, NULL) << endl;
16:47 < bridge> <Robyt3>     cout << "  std::locale(\"\").name(): " << std::locale("").name() << endl;
16:47 < bridge> <Robyt3> 
16:47 < bridge> <Robyt3>     return 0;
16:47 < bridge> <Robyt3> }
16:47 < bridge> <Robyt3> ```
16:47 < bridge> <Robyt3> 
16:47 < bridge> <Robyt3> Would be useful to figure out if we need something macOS platform specific for #2459. We definitely need something platform specific for Windows, because it outputs 
16:47 < bridge> <Robyt3> 
16:47 < bridge> <Robyt3> ```
16:47 < bridge> <Robyt3> With unset locale:
16:48 < bridge> <Robyt3>   setlocale(LC_ALL, NULL): C
16:48 < bridge> <Robyt3>   std::locale("").name(): C
16:48 < bridge> <Robyt3> With setlocale(LC_ALL, ""):
16:48 < bridge> <Robyt3>   setlocale(LC_ALL, NULL): German_Germany.1252
16:48 < bridge> <DDNet> https://github.com/ddnet/ddnet/issues/2459
16:48 < bridge> <heinrich5991> I think `setlocale` is a mistake
16:48 < bridge> <heinrich5991> it will mess up your float formatting, e.g.
16:49 < bridge> <Robyt3> I see. Won't be necessary for Linux anyway, there it outputs:
16:49 < bridge> <Robyt3> 
16:49 < bridge> <Robyt3> ```
16:49 < bridge> <Robyt3> With unset locale:
16:49 < bridge> <Robyt3>   setlocale(LC_ALL, NULL): C
16:49 < bridge> <Robyt3>   std::locale("").name(): en_US.UTF-8
16:49 < bridge> <Robyt3> With setlocale(LC_ALL, ""):
16:49 < bridge> <Robyt3>   setlocale(LC_ALL, NULL): en_US.UTF-8
16:49 < bridge> <Robyt3>   std::locale("").name(): en_US.UTF-8
16:49 < bridge> <Robyt3> ```
16:49 < bridge> <Robyt3> 
16:49 < bridge> <Robyt3> So we can get the ISO 639-1 code from `std::locale("").name()` alone.
16:49 < bridge> <Robyt3> And Windows has their own function `GetUserDefaultLocaleName` anyway.
16:49 < bridge> <heinrich5991> ah nice
16:54 <+ChillerDragon> could you send a paste? :)
16:55 <+ChillerDragon> like a pstd paste for example
16:55 < bridge> <heinrich5991> https://paste.mozilla.org/gajqyzP5
16:55 <+ChillerDragon> full of js xd
16:57 <+ChillerDragon> `robster.c:6:10: fatal error: 'iostream' file not found` xd
16:57 <+ChillerDragon> is this good robster?
16:59 <+ChillerDragon> @Robyt3  https://paste.zillyhuhn.com/4H
16:59 <+ChillerDragon> worked w clang :) 
16:59 <+ChillerDragon> ah wait i used a c compiler xd
16:59 <+ChillerDragon> thats why it failed
16:59 <+ChillerDragon> u need more ifnos bout ma system?
17:00 < bridge> <Robyt3> Thanks. That's unfortunate though, guess we'll need something specific to macOS as well.
17:00 < bridge> <Robyt3> As long as it's a relatively new macOS version (that we want to support with ddnet) it should be fine
17:03 <+ChillerDragon> https://paste.zillyhuhn.com/Wh
17:03 <+ChillerDragon> im not latest macOS this is ancient hardware
17:04 <+ChillerDragon> i think im one major release behind
17:05 <+ChillerDragon> omg this mac feels like shit i get 90 gui popups when opening vim and everything is broken xd
17:06 <+ChillerDragon> rq
17:08 < bridge> <<~{Barsik}~>> rq
17:18 < bridge> <Robyt3> @ChillerDragon: next try: https://pastebin.mozilla.org/77dOC7pw
17:18 < bridge> <Robyt3> Compile with `-framework CoreFoundation`
17:19 < bridge> <heinrich5991> please read the docs before copying it into ddnet ðŸ˜‰
17:19 <+ChillerDragon> bra lemme get ma :apple: device again
17:20 <+ChillerDragon> is it virus?
17:20 < bridge> <Robyt3> Using macOS API, so probably xD
17:20 <+ChillerDragon> https://paste.zillyhuhn.com/za
17:20 <+ChillerDragon> so i can curl it on mac xd
17:21 < bridge> <heinrich5991> you can curl it with mozilla.org as well
17:21 < bridge> <heinrich5991> https://pastebin.mozilla.org/77dOC7pw/raw
17:22 <+ChillerDragon> last time i jot js
17:22 <+ChillerDragon> a /raw
17:22 <+ChillerDragon> ok nice
17:24 <+ChillerDragon> https://paste.zillyhuhn.com/oV
17:24 <+ChillerDragon> meh
17:24 <+ChillerDragon> const?
17:25 < bridge> <Robyt3> Add explicit cast? `CFStringRef languageCodeRef = static_cast<CFStringRef>(CFLocaleGetValue(localeRef, kCFLocaleLanguageCode));`
17:27 <+ChillerDragon> somehow ppl swear on mac trackpads right? i can barley select any text on this garbage xd
17:27 <+ChillerDragon> my laptop running linux works better than this xd
17:28 <+ChillerDragon> `User's locale: en`
17:28 <+ChillerDragon> poggies
17:28 < bridge> <Robyt3> Nice, so no more details like `en_GB` or `en_US` but better than nothing
17:29 <+ChillerDragon> at least on my system^^
17:29 <+ChillerDragon> they probably broke the api in next macos
17:29 <+ChillerDragon> and french users have a baguette emjoi instead of a string `fr`
17:30 <+ChillerDragon> emoji*
17:30 < bridge> <Robyt3> Thanks for the testing, I'll try if further tests also work in the GitHub CI
17:31 <+ChillerDragon> anytime robsti my love
17:32 <+ChillerDragon> ok btw i changed my language to beerlang and it just said `de` no further weirdness for custom languages 
17:33 <+ChillerDragon> even english (US) just says `en`
22:22 < bridge> <Ryozuki> https://www.memorysafety.org/blog/gary-guo-klint-rust-tools/
23:29 < bridge> <Learath2> I have a new idea to stop cheaters and toxic behaviour in games
23:29 < bridge> <Learath2> If you get banned your bootloader is overwritten with all zeroes
23:32 < bridge> <bencie> or, if you get banned, a pipebomb will be sent to your location
23:32 < bridge> <Learath2> People didn't like my doxing based ideas and I don't think I trust all mods with a murder button, no offense
23:33 < bridge> <bencie> :justatest:
23:54 < bridge> <heinrich5991> clientside, doesn't work
23:54 < bridge> <heinrich5991> the bootloader one, I mean
