00:12 < bridge> <MilkeeyCat> VulkÃ¡n is fÃ³r smart ppl
00:12 < bridge> <MilkeeyCat> Me grug
08:13 < bridge> <ryozuki> morning
08:26 < bridge> <MilkeeyCat> https://grugbrain.dev
08:32 < bridge> <chillerdragon> Yes itâ€™s old. Please compile it from source :)
08:35 < bridge> <ryozuki> hi old im new
10:08 < bridge> <ar1gin> now do it in rust/wgpu
10:09 < bridge> <MilkeeyCat> First i need to write it in c++ for uni :pepeW:
11:06 < bridge> <marmare_314> @robyt3 but the code looks so ugly with composition xd But if I revert it, does the the point accessor really need to be a member? It can just be local to the Eval function, since there is no point in using it anywhere else
11:06 < bridge> <marmare_314> @robyt3 but the code looks so ugly with composition xd But if I revert it, does the the point accessor really need to be a member? It can just be local to the Eval function, since there is no point in using it anywhere else (or at least it is not yet)
11:07 < bridge> <marmare_314> @robyt3 but the code looks so ugly with composition xd If I revert it, does the the point accessor really need to be a member? It can just be local to the Eval function, since there is no point in using it anywhere else (or at least it is not yet)
11:07 < bridge> <robyt3> It could be a private variable if it's only used in `CEnvelope`
11:08 < bridge> <robyt3> I probably didn't want the variable to get created and destroyed every time so I made it a member variable instead
11:21 < zzoi_super> https://www.youtube.com/watch?v=sqSA-SY5Hro
11:21 < zzoi_super> These rich men north of Richmond
11:21 < zzoi_super> Lord knows they all just wanna have total control
11:21 < zzoi_super> Wanna know what you think, wanna know what you do
11:21 < zzoi_super> And they donâ€™t think you know, but I know that you do
11:21 < zzoi_super> â€˜Cause your dollar ainâ€™t shit and itâ€™s taxed to no end
11:21 < zzoi_super> â€˜Cause of rich men north of Richmond
11:21 < zzoi_super> irc.supernets.org #superbowl
11:21 < zzoi_super> zzoi_super deen Ryozuki minus scrumplex Ac1dBeef fstd heinrich5991 b3z eeeee_ dddd bridge chillerbot breton Tobii Q ChillerDragon Learath2 ochristi
11:24 < bridge> <ryozuki> @Discord Mod xd
11:24 < bridge> <MilkeeyCat> What the hell ðŸ¤¨
11:24 < bridge> <learath2> Wat?
11:25 < bridge> <ryozuki> spam
11:25 < bridge> <learath2> Bizarre
11:25 < bridge> <ryozuki> the lord knows
11:25 < bridge> <ryozuki> @learath2 with shift ucan go faster
11:26 < bridge> <learath2> No shift on phon
11:26 < bridge> <ryozuki> oh xd
11:37 < bridge> <marmare_314> Alright, just noticed I dont like the `GetBezier` function anyway (which is probably one of the reasons not to use inheritance). Next I will add an interface to `CEnvelopePoint` and then `m_vPoints` can probably be private too
12:03 < bridge> <marmare_314> @robyt3 I wanted to combine all point implementations (envelope points, bezier control points, quad corners, quad centers, envelope quad centers). My plan was to use inheritance for that (ie have a `CPoint` class inheriting `CEditorComponent` with pure virtual methods like `SnapToGrid` or `UpdatePosition`, `RenderPoint`, ... and which handles the logic of calling these). Do you think inheritance is fine in that case?
12:06 < bridge> <robyt3> The inheritance for points makes sense I guess, but conceptually it's a bit odd how `CPoint` would be a `CEditorComponent`
12:06 < bridge> <robyt3> I wouldn't consider individual points "editor components"
12:10 < bridge> <marmare_314> I guess the naming is not the best. I can maybe introduce another kind of "component" which doesnt have the subcomponent system. This could then be used as a base class instead. Not sure what to call it though
12:12 < bridge> <robyt3> Maybe just `CEditorComponentBase`, it's also called `CUIElementBase` for the UI elements
12:17 < bridge> <marmare_314> How about `CEditorObject`?
12:17 < bridge> <robyt3> Seems good
13:30 < bridge> <heinrich5991> I use zfs almost exclusively everywhere
13:44 < bridge> <heinrich5991> quite nice: better borrow checker coming, accepting more obviously correct code: https://blog.rust-lang.org/inside-rust/2023/10/06/polonius-update.html
14:37 < ChillerDragon> irc pinger wot
14:49 < bridge> <ryozuki> @deen since u do lot of testing at ur job, do u have a tool to split rust tests into multiple runners so they finish faster?
14:54 < bridge> <learath2> Aren't rust tests already run in parallel?
14:56 < bridge> <heinrich5991> @ryozuki sounded like he wants to split tests between machines
15:00 < bridge> <ryozuki> ye runners
15:00 < bridge> <ryozuki> horizontal scaling xd
15:01 < bridge> <ryozuki> ah
15:01 < bridge> <ryozuki> its called jobs
15:01 < bridge> <ryozuki> yeah split between jobs
15:07 < bridge> <deen> cargo-nextest
15:08 < bridge> <deen> We use buildkite pipelines and I split the execution into multiple runners, see for example Miri test (which is using cargo-nextest) in https://buildkite.com/materialize/tests/builds/65368
15:09 < bridge> <deen> Here is the logic for this: https://github.com/MaterializeInc/materialize/blob/c80c0c5aee34e5ebd9defcd26d8873b803a36d2b/ci/test/cargo-test-miri-fast.sh#L22-L26
15:10 < bridge> <ryozuki> ohh thanks
15:10 < bridge> <deen> The trick is nextest's `--partition "count:$PARTITION/$TOTAL"` feature
15:10 < bridge> <ryozuki> can u do this with github actions?
15:10 < bridge> <ryozuki> the split
15:11 < bridge> <deen> I don't know, the Buildkite feature is documented here: https://buildkite.com/docs/tutorials/parallel-builds#parallel-jobs
15:13 < bridge> <deen> You could hack it together yourself, use some script to generate the action config with the tests split into multiple parts with  corresponding env variables
15:13 < bridge> <ryozuki> true
15:15 < bridge> <ryozuki> i have a ci job that runs with llvm-cov
15:15 < bridge> <ryozuki> it takes 1h
15:15 < bridge> <ryozuki> xd
15:15 < bridge> <learath2> Damn
15:15 < bridge> <ryozuki> = note: /usr/bin/ld: final link failed: No space left on device
15:15 < bridge> <ryozuki>           collect2: error: ld returned 1 exit status
15:15 < bridge> <ryozuki> and now sometimes it fails
15:15 < bridge> <ryozuki> with this
15:16 < bridge> <ryozuki> imagine
15:16 < bridge> <ryozuki> the pain
15:16 < bridge> <learath2> Is coverage really THAT important? ðŸ˜„
15:16 < bridge> <deen> I have a coverage pipeline too ðŸ˜‰ https://buildkite.com/materialize/coverage
15:16 < bridge> <ryozuki> it is
15:16 < bridge> <ryozuki> this is from my job btw
15:17 < bridge> <deen> Code coverage can tell you when you are definitely missing tests in an area. It can't tell you that an area is tested well.
15:17 < bridge> <ryozuki> yeah
15:17 < bridge> <learath2> Just eyeball the coverage :GIGACHAD:
15:17 < bridge> <ryozuki> but i guess better something than nothing xd
15:17 < bridge> <ryozuki> also its funny but
15:17 < bridge> <ryozuki> im doing records on my cargo cleans
15:17 < bridge> <ryozuki> i once reached a 150gb cleanup
15:17 < bridge> <ryozuki> by running cargo clean
15:18 < bridge> <ryozuki> god bless fast ssds tho xd
15:18 < bridge> <learath2> Rust bloated confirmed
15:18 < bridge> <ryozuki> but i guess nothing is erased just marked
15:18 < bridge> <ryozuki> its more like cargo doesnt cleanup much what it produces
15:18 < bridge> <ryozuki> idk why
15:18 < bridge> <learath2> Same in an hdd btw
15:18 < bridge> <ryozuki> for example if u change a lib version the old one is kept iirc
15:18 < bridge> <ryozuki> until u run clean
15:26 < bridge> <ryozuki> ok now im trying to convince my company to use this xd
15:26 < bridge> <ryozuki> :gigachad:
16:06 < bridge> <ryozuki> https://blog.rust-lang.org/inside-rust/2023/10/06/polonius-update.html
16:06 < bridge> <ryozuki> !
16:06 < bridge> <YADDB> Command not found!
16:06 < bridge> <ryozuki> @murpi fix
17:11 < bridge> <heinrich5991> old ðŸ˜› https://discord.com/channels/252358080522747904/293493549758939136/1159818368497487992
17:50 < bridge> <ryozuki> https://without.boats/blog/thread-per-core/
17:51 < bridge> <ryozuki> i missed it xd
18:17 < bridge> <ryozuki> @learath2 !
18:17 < bridge> <ryozuki> look
18:17 < bridge> <ryozuki> https://en.wikipedia.org/wiki/Oh-My-God_particle
18:17 < bridge> <ryozuki> xdd
18:19 < bridge> <ryozuki> https://www.fourmilab.ch/documents/OhMyGodParticle/
18:19 < bridge> <ryozuki> biggest cosmic ray
19:54 < bridge> <Ewan> ae
20:15 < bridge> <steinchen99> will it get accepted If I code sth. so this crap gets deleted automatically?
20:15 < bridge> <steinchen99> https://cdn.discordapp.com/attachments/293493549758939136/1159916818002083880/image.png?ex=6532c3b7&is=65204eb7&hm=1edd51deb314bc0d3f7ec4b1efecb3686704c1e409c0a26bc39494a0ed5531c1&
20:27 < bridge> <steinchen99> will it get accepted If I code sth. so this crap gets deleted automatically? (delted = not appearing in chat)
20:27 < bridge> <steinchen99> https://cdn.discordapp.com/attachments/293493549758939136/1159916818002083880/image.png?ex=6532c3b7&is=65204eb7&hm=1edd51deb314bc0d3f7ec4b1efecb3686704c1e409c0a26bc39494a0ed5531c1&
20:30 < bridge> <MilkeeyCat> i was writing demo parsing thingy as nodejs application. but today i decided to use it on website and it works differently than with nodejs. so much fun :pepeW:
20:41 < bridge> <steinchen99> will it get accepted If I code sth. so this crap gets deleted automatically? (deleted = not appearing in chat)
20:41 < bridge> <steinchen99> https://cdn.discordapp.com/attachments/293493549758939136/1159916818002083880/image.png?ex=6532c3b7&is=65204eb7&hm=1edd51deb314bc0d3f7ec4b1efecb3686704c1e409c0a26bc39494a0ed5531c1&
20:54 < bridge> <Ewan> real colo colo
22:29 < bridge> <neben> Hello, can someone tell me all the steps required to create a new vote category on ddnet, and define the according points per stars, please?
22:29 < bridge> <neben> To give the context, I'd like to add the supposed new solo and multi trials categories to ddnet, I got solid bases in c++ and I never actually coded on the ddnet source
22:29 < bridge> <neben> 
22:29 < bridge> <neben> any tips is welcome :giftee_green:
22:52 < bridge> <chillerdragon> @neben: search for the current categories in the code. And extend it with your own
22:53 < bridge> <furooooooooooooooooooooooooooooo> Map info such as category, stars and points is stored in the database. The vote menu is generated with this script, <https://github.com/ddnet/ddnet-scripts/blob/master/servers/scripts/create-votes.py> using the data from the database.
23:43 < bridge> <neben> thanks bro, thats very helpful !
23:44 < bridge> <neben> I mean, this is a big source code, I just wanted a first view on this
