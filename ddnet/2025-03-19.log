00:42 < bridge> <Ewan> thanks furo
00:43 < bridge> <Ewan> i may be the most blind person to ever have working eyes
00:44 < bridge> <oxyzo.> :nouis:
00:44 < bridge> <oxyzo.> did you know thatyou can press play in the main menu to choose servers instead of typing them in f1 to connect to them
00:46 < bridge> <Ewan> never knew
01:03 < bridge> <chillerdragon> @mpft: you also don‚Äôt have to reconnect when you touch freeze you can bind self kill in the settings
01:03 < bridge> <Ewan> ahhh, that makes so much sense
01:03 < bridge> <Ewan> how tf did i play the game all this time
01:04 < bridge> <Ewan> this info would have been nice to have a few yrs ago
01:04 < bridge> <chillerdragon> Back then it was bind only not even in settings real gangster developer type shit
01:04 < bridge> <Ewan> wowo
01:04 < bridge> <chillerdragon> I think these days it might even be bound by default
01:05 < bridge> <Ewan> im joking
01:05 < bridge> <Ewan> shift + is a good bind for it
01:05 < bridge> <Ewan> shift + r*
01:05 < bridge> <chillerdragon> Is that yours?
01:05 < bridge> <Ewan> yea
01:05 < bridge> <chillerdragon> Leak
01:05 < bridge> <Ewan> has the added benefit of emoting every time i die
01:06 < bridge> <Ewan> it‚Äôs bound to the music notes emote not emote wheel
01:06 < bridge> <Ewan> that thing is too slow for my emotions
01:06 < bridge> <chillerdragon> Next time you have a new question I will tell you to reload the client using shift + r
01:06 < bridge> <Ewan> ctrl r resets my binds
01:06 < bridge> <Ewan> closest thing
01:07 < bridge> <Ewan> i am finding super non specific info on who i have to put on my passport in the parents fields
01:07 < bridge> <chillerdragon> I recently managed to troll a old ctf pro by making him type ‚Äûquit lags‚Äú in f1
01:07 < bridge> <Ewan> nice
01:08 < bridge> <chillerdragon> Wait no
01:08 < bridge> <chillerdragon> It was ‚Äûquit teamchat‚Äú
01:08 < bridge> <chillerdragon> But whatever
01:08 < bridge> <Ewan> dude i just found out that if u type ‚Äúkill‚Äù in f1 it prints ‚Äúgullible‚Äù
01:09 < bridge> <chillerdragon> ???
01:09 < bridge> <chillerdragon> Ah
01:09 < bridge> <chillerdragon> Omg you almost got me
01:09 < bridge> <chillerdragon> Telling an admin to do ‚Äûkill all‚Äú in rcon is also good one
01:10 < bridge> <Ewan> real
01:11 < bridge> <inv41idu53rn4m3> I only have one emote bound to a key, and that's :heartw: to H, but I think I might want to add some more
01:11 < bridge> <Ewan> my 1-0 are emotes
01:11 < bridge> <inv41idu53rn4m3> because I do not have the skill for fast emote wheel
01:12 < bridge> <Ewan> i can just put my finger on 6 and it‚Äôll spam ‚ÄúWTF‚Äù
01:12 < bridge> <inv41idu53rn4m3> it'd be so much better if it reset your emote wheel cursor to the middle each time, so it was like a proper radial menu
01:12 < bridge> <Ewan> only on ddnet tho
01:12 < bridge> <Ewan> kog hates fun
01:12 < bridge> <Ewan> i stopped using it long ago enough that I thought it did work this way
01:37 < bridge> <jxsl13> the order changes when you change a map and it is not deterministic, whose ip belongs to what nicknme.
01:38 < bridge> <jxsl13> *change map with more than 1 players on the server.
01:52 < bridge> <jxsl13> the more players you have on a server while changing the map, the easier it is to reproduce the logs being not in the expected order.
03:07 < bridge> <hokepoke> is there any reason practice mode is disabled??
03:18 < bridge> <Solly (bun bun)> maybe the server your on hasn't restarted yet
03:18 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1351741645615534121/image.png?ex=67db7b02&is=67da2982&hm=8605e9e450de3a4bb0707c96bf35bb1630925c524200405fefc5dab624ffe558&
03:18 < bridge> <Solly (bun bun)> sks
03:19 < bridge> <Solly (bun bun)> maybe the server your on hasnt restarted yet @hokepoke
03:19 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1351741732424777778/image.png?ex=67db7b17&is=67da2997&hm=766bb71bf451abc4c69f7e2e57f820d60d838cc17bd3b766686a72db9c381c66&
03:19 < bridge> <Solly (bun bun)> hmm i cant send images
03:19 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1351741773197606953/image.png?ex=67db7b20&is=67da29a0&hm=686275bea691b1533ebc7fb0cd4b37bc93ea3adeede9794470081b4419c7fb82&
03:19 < bridge> <Solly (bun bun)> yes i can... its just really delayed
03:22 < bridge> <hokepoke> hasnt restarted since when? I havent been able to use practice mode on any usa server for over a week
03:49 < bridge> <Solly (bun bun)> well theres been an unpatched exploit for... well ever. practice got disabled after it was discovered and undisabled since it recently got patched
04:32 < bridge> <hokepoke> ah ok ty
05:46 < bridge> <oxyzo.> i put my finger on kp4 and i spam every emote so i dont have to worry about what happens
07:35 < bridge> <milkeeycat> Morning `void*` enjoyers and others
07:58 < bridge> <zhn> why
08:01 < bridge> <ryozuki> https://www.reddit.com/r/Gentoo/comments/1jdkikd/an_example_case_of_compiler_optimizations/
08:01 < bridge> <ryozuki> morning gentoo users and others
08:01 < bridge> <inv41idu53rn4m3> Without the reset you need to memorize the cursor position from last use, else you can't use the wheel without looking at it
08:49 < bridge> <teero777> gm c enjoyers and others
08:57 < bridge> <Assa> What do you think of the idea to color switch doors (and their switches) individually instead of coloring all doors by a single (custom) color? Meaning that a switch and it's door have the same color ofc
09:01 < bridge> <Assa> This would also give the mappers the option to select a door color for their map ü§î
09:04 < bridge> <melo∆û> c99*
09:04 < bridge> <melo∆û> Gumo!
09:26 < bridge> <learath2> Common Gentoo W üí™
09:48 < bridge> <totar> 26% honestly not that much, the initial flags were probably pretty good then.
09:55 < bridge> <learath2> H8r
10:02 < bridge> <totar> I think that's about what you would expect if you use all the "unsafe" flags for any given software
10:03 < bridge> <totar> this guy gets 10x performance 
10:03 < bridge> <totar> https://gist.github.com/jwbee/7e8b27e298de8bbbf8abfa4c232db097
10:04 < bridge> <Assa> perspective matters, making a graphics card 5% smaller, nearly nobody cares, making it 5% more efficient and you impact the world
10:05 < bridge> <totar> this guy gets 90% more performance 
10:05 < bridge> <totar> https://gist.github.com/jwbee/7e8b27e298de8bbbf8abfa4c232db097
10:06 < bridge> <Assa> 26% on a task that may run a year and you stop spending thousands, if not millions, from a business perspective
10:06 < bridge> <totar> I think the fact it's only 26% shows that the developers clearly thought about compiler optimization in their default built setup.
10:07 < bridge> <totar> you get more out of ddnet with similar efforts
10:07 < bridge> <totar> I think the fact it's only 26% shows that the developers clearly thought about compiler optimization in their default build setup.
10:08 < bridge> <Assa> I'll remind you, that ddnet needs to run on multiple machines across multiple OS. Of course if you optimize it for your system you might get more performance out of it
10:08 < bridge> <ryozuki> in my book 26% is a lot
10:09 < bridge> <totar> yes, that's exactly why there are improvements to be made in the first place.
10:09 < bridge> <totar> like isn't that the whole point of gentoo?
10:10 < bridge> <totar> you build it for your system so you don't need to care about cross compatibility
10:10 < bridge> <ryozuki> gentoo point is being highly flexible
10:10 < bridge> <ryozuki> enable disable what u want etc
10:10 < bridge> <ryozuki> im amazed u think 26% is not a lot
10:11 < bridge> <ryozuki> xd
10:11 < bridge> <Assa> xd
10:11 < bridge> <totar> a lot by what standard
10:11 < bridge> <ryozuki> by optimizing standards
10:11 < bridge> <ryozuki> most ppl are grateful to get 4% improvement
10:11 < bridge> <totar> I think most shipped software has that margin
10:11 < bridge> <Jupstar ‚ú™> obvious scam xd
10:11 < bridge> <ryozuki> for example rust improves perf by 1% they call it a win
10:11 < bridge> <ryozuki> thats how hard it is
10:11 < bridge> <Assa> I would like 26% more in my bank account, but it might not make a lot of difference for others
10:11 < bridge> <ryozuki> also this is a encoder software
10:11 < bridge> <ryozuki> any perf win there is massive
10:11 < bridge> <totar> it's not a scam?
10:12 < bridge> <Jupstar ‚ú™> You don't get that increase just by using slightly more aggressive compiler flags
10:12 < bridge> <hectavoxel> lets make the ddnet sercer decentralized, so EVERY computer is a server!
10:12 < bridge> <totar> ubuntu chooses a poor allocator, they switched it for a better one
10:13 < bridge> <totar> that's the entire post
10:13 < bridge> <Jupstar ‚ú™> yeah then this single app profits from it
10:13 < bridge> <totar> ok?
10:13 < bridge> <totar> that's what we're talking about xd
10:14 < bridge> <Jupstar ‚ú™> The headline is clearly clickbait
10:14 < bridge> <totar> how
10:14 < bridge> <Jupstar ‚ú™> Bro.. "Make Ubuntu packages 90% faster by rebuilding them"
10:15 < bridge> <totar> he made a package 90% faster
10:15 < bridge> <Jupstar ‚ú™> "You can take the same source code package that Ubuntu uses to build jq, compile it again, and realize 90% better performance."
10:15 < bridge> <Jupstar ‚ú™> Could aswell say make jq 90% faster
10:15 < bridge> <hectavoxel> recursively rebuild it so it keeps getting 90% faster
10:16 < bridge> <totar> the title is not important to me xd
10:16 < bridge> <Jupstar ‚ú™> Without the clickbait title, I'd have not clicked it
10:17 < bridge> <totar> it's just an example that usually there is performance to gain by building the software for your specific architecture and with less portable features. I think 26% or more is an expected amount to gain for this on average
10:17 < bridge> <Jupstar ‚ú™> > I think 26% or more is an expected amount to gain for this on average
10:17 < bridge> <Jupstar ‚ú™> Honestly I even doubt that.
10:17 < bridge> <Jupstar ‚ú™> Except you really design a compiler explicitly for your arch
10:17 < bridge> <Jupstar ‚ú™> it's probs around 5%
10:18 < bridge> <totar> they use Ofast, that's not really acceptable in most apps
10:18 < bridge> <Jupstar ‚ú™> On phoronix you can find lots of benchmarks with lto, mnative etc.
10:18 < bridge> <Jupstar ‚ú™> Often they were even slower
10:18 < bridge> <Jupstar ‚ú™> True
10:18 < bridge> <Jupstar ‚ú™> Ofast is smth that gives a small benefit
10:18 < bridge> <Jupstar ‚ú™> On phoronix you can find lots of benchmarks with lto, march=native etc.
10:18 < bridge> <hectavoxel> your visit to the page will not be forgotten
10:19 < bridge> <Jupstar ‚ú™> :lol: oh no
10:19 < bridge> <totar> they also did profile guided optimization which is arch specific
10:19 < bridge> <Jupstar ‚ú™> PGO is really good for making binaries smaller. I've tried it in few apps, but never really saw perf increases
10:19 < bridge> <totar> it was most of their gain
10:19 < bridge> <totar> in the chart
10:20 < bridge> <teero777> yo is there a way to enable -ffast-math for only specific parts of code?
10:20 < bridge> <teero777> helo tater btw
10:20 < bridge> <totar> hi
10:20 < bridge> <Jupstar ‚ú™> You can try #pragma directives
10:21 < bridge> <totar> if you look at the chart you can see most of the things that improve perf are arch specific or unsafe
10:21 < bridge> <totar> avx512
10:22 < bridge> <Jupstar ‚ú™> Yeah I defs accept it for an encoder, which is a highly specialized software
10:23 < bridge> <Jupstar ‚ú™> But I doubt you see 26% on a wider range of apps
10:23 < bridge> <Jupstar ‚ú™> I like to be proven wrong, but then I'd also like to have benchmarks for many apps
10:25 < bridge> <totar> I mean most developers don't throw the kitchen sink at their build process to make it as fast as possible. like what even is this thing https://polly.llvm.org/
10:26 < bridge> <Jupstar ‚ú™> https://www.phoronix.com/review/gcc11-pgo-5950x/4
10:26 < bridge> <Jupstar ‚ú™> 
10:26 < bridge> <Jupstar ‚ú™> Here PGO is around 12%. Already pretty good
10:26 < bridge> <Jupstar ‚ú™> Try it on TClient xd, I should be CPU bottlenecked on my system
10:26 < bridge> <Jupstar ‚ú™> Would be a funny experiment
10:26 < bridge> <totar> I said already ddnet gets more than 26%
10:27 < bridge> <Jupstar ‚ú™> Where is your binary?
10:27 < bridge> <totar> I don't ship it xd
10:27 < bridge> <learath2> Non-believers ITT trying to discredit Gentoo users
10:28 < bridge> <totar> in my case I only care about the physics tho, for making TAS
10:28 < bridge> <Jupstar ‚ú™> If you can build a linux build, pls share it with me, bcs my system defs got slower over the years.
10:28 < bridge> <Jupstar ‚ú™> 
10:28 < bridge> <Jupstar ‚ú™> I had like 10k+ FPS, now i have like 8k FPS XD. so 20%+ would be nice
10:28 < bridge> <totar> regular player fps is probably bottlenecked by tee rendering or something, idk how much that improves
10:30 < bridge> <melo∆û> Did someone say NixOS?????
10:30 < bridge> <totar> anyway it's pretty clear that performance isn't a huge priority for ddnet, if you look at a profile you can see that xd
10:30 < bridge> <totar> probably some easy gains to be made
10:31 < bridge> <Jupstar ‚ú™> From physics POV maybe.
10:31 < bridge> <Jupstar ‚ú™> 
10:31 < bridge> <Jupstar ‚ú™> But I don't see lot of places where ddnet wastes lot of perf.
10:31 < bridge> <Jupstar ‚ú™> 
10:31 < bridge> <Jupstar ‚ú™> Only the snapshots are really slow afaik
10:31 < bridge> <Jupstar ‚ú™> On windows the kernel call to recv is slow
10:31 < bridge> <Jupstar ‚ú™> And ddnet generally does not scale well with more entities
10:32 < bridge> <totar> for me frametime seems to linearly correlate to the number of players on the server/ on my screen very directly
10:34 < bridge> <Jupstar ‚ú™> True, but if you know about improvements without breaking the game you could defs implement them and pr it.
10:34 < bridge> <Jupstar ‚ú™> 
10:34 < bridge> <Jupstar ‚ú™> Well ofc depends on how readable it stays
10:35 < bridge> <totar> yeah but that's the point
10:35 < bridge> <totar> the current ddnet has no reason to trade readability for performance, because it's good enough rn
10:35 < bridge> <learath2> We did clean up the profile a lot, if you do see any low hanging fruit feel free to make a PR/Issue
10:36 < bridge> <learath2> It used to be much worse especially with syscalls
10:36 < bridge> <Jupstar ‚ú™> I think the non O(n¬≤) physics would be really cool for 128p
10:36 < bridge> <Jupstar ‚ú™> Who is brave enough to try it
10:36 < bridge> <Jupstar ‚ú™> üò¨
10:36 < bridge> <totar> doing it is the easy part
10:36 < bridge> <totar> testing it is the hard part
10:37 < bridge> <learath2> This and the linear searches through the snaps are probably the only expensive things on the hot path
10:37 < bridge> <learath2> (Only expensive things that are known about but not fixed*l
10:37 < bridge> <learath2> (Only expensive things that are known about but not fixed*)
10:37 < bridge> <Jupstar ‚ú™> Do we already have a plan when to enable 128p?
10:37 < bridge> <Jupstar ‚ú™> Next version?
10:38 < bridge> <learath2> Do we even have proper server support? I thought the first PR only made it natively work on the client
10:38 < bridge> <Jupstar ‚ú™> I am defs interested in show_all performance xD
10:38 < bridge> <pilonpl> Btw why 128 and not 256 or unlimited?
10:38 < bridge> <Jupstar ‚ú™> Yeah I think that was the most important step? üòÑ
10:38 < bridge> <Jupstar ‚ú™> Bcs our physics are slow
10:39 < bridge> <Jupstar ‚ú™> It does not scale linearly
10:39 < bridge> <learath2> Also our networking isn't built to handle that
10:39 < bridge> <learath2> The snaps will just get far too large
10:39 < bridge> <totar> if you want to fix the physics you should create physics testing
10:39 < bridge> <totar> as it is a PR that fixes the physics would never be accepted
10:39 < bridge> <learath2> Which is what Zwelf is doing
10:39 < bridge> <totar> is there a repo for that?
10:40 < bridge> <pilonpl> So 128 is the goal but not the limit?
10:40 < bridge> <Jupstar ‚ú™> https://gitlab.com/ddnet-rs/twgame
10:40 < bridge> <Jupstar ‚ú™> It's the _next_ limit
10:40 < bridge> <Jupstar ‚ú™> I doubt it will increase any time soon
10:40 < bridge> <totar> does it integrate into the cpp ddnet?
10:40 < bridge> <totar> it's not clear to me how that works
10:41 < bridge> <Jupstar ‚ú™> afaik no. I think he planed to create an own server
10:41 < bridge> <learath2> Tbf I don't reaaally think 128p is a great idea except for maybe multeasymap and linear servers
10:41 < bridge> <Jupstar ‚ú™> I dunno why it's useful at all xD
10:41 < bridge> <Jupstar ‚ú™> 
10:41 < bridge> <Jupstar ‚ú™> More afk ppl on one server
10:41 < bridge> <learath2> Not yet. He is planning to extract the physics out to make that possible though. For now it uses teehistorian positions as a source of truth
10:42 < bridge> <Jupstar ‚ú™> Tho playing with 500 tees on ctf1 is always fun
10:42 < bridge> <Jupstar ‚ú™> ngl
10:42 < bridge> <totar> is the physics really the only issue?
10:42 < bridge> <learath2> (To ensure twgame mimics ddnet physics exactly)
10:42 < bridge> <totar> for supporting 500 tees?
10:43 < bridge> <totar> I don't think the rendering or server can keep up
10:43 < bridge> <totar> idk
10:43 < bridge> <Jupstar ‚ú™> in ddnet-rs it was, but ofc I never tested with 500 separat connections
10:43 < bridge> <Jupstar ‚ú™> On my PC it broke at around 2000 tees
10:43 < bridge> <learath2> Rendering should be fine iirc. Snaps might require a way to chunk
10:43 < bridge> <totar> you can get rid of O(n^2) tee physics pretty easily ngl
10:44 < bridge> <totar> it's not a big diff
10:44 < bridge> <Jupstar ‚ú™> I mean you can always at least draft it
10:44 < bridge> <Jupstar ‚ú™> If you don't want to have reviews
10:44 < bridge> <Jupstar ‚ú™> Just to show off
10:44 < bridge> <totar> well you've done that already
10:44 < bridge> <Jupstar ‚ú™> But not in cpp
10:44 < bridge> <totar> yeah but that's just an implementation detail
10:45 < bridge> <totar> if the process was in place to test such a change I could do it in a few days
10:45 < bridge> <Jupstar ‚ú™> true
10:50 < bridge> <totar> the change I'm more interesting in doing a draft/show off project for is reworking the input network handling and switch the compression alg to ztd
10:50 < bridge> <totar> the change I'm more interesting in doing a draft/show off project for is reworking the input network handling and switch the compression alg to zstd
10:51 < bridge> <Jupstar ‚ú™> The input chain we once talked about is smth I still find interesting
10:52 < bridge> <totar> I think with zstd such high effort might be negligible idk
10:52 < bridge> <Jupstar ‚ú™> New pc arrived, sry @teero777
10:52 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1351855958569259048/IMG_20250319_105229.jpg?ex=67dbe578&is=67da93f8&hm=629e5a37d2f7e60370c811ed788e2028b10782ad477f7a11b5c6576d258f9e66&
10:54 < bridge> <totar> PC parts?
10:56 < bridge> <Jupstar ‚ú™> Yeah 9950x3d xd but teero still in school so no livestream
10:56 < bridge> <totar> :o
10:56 < bridge> <totar> those compile times will be good
10:59 < bridge> <totar> @jupeyy_keks what's current CPU?
11:01 < bridge> <teero777> AHAHAH
11:01 < bridge> <teero777> RAAAAAAA
11:01 < bridge> <teero777> im in physics class rn
11:01 < bridge> <teero777> man
11:05 < bridge> <melo∆û> :Aware: :Aware:  nooo pls wait 5 hours pls pls pls
11:05 < bridge> <melo∆û> :justatest:
11:16 < bridge> <teero777> please
11:32 < bridge> <learath2> Have you even benched this? Traffic is already fairly low for a teeworlds server, idk if messing around with compression is even worth your time
11:32 < bridge> <totar> it's not that low?
11:32 < bridge> <totar> by online gaming standards
11:32 < bridge> <totar> it's average-highish
11:33 < bridge> <totar> esp for upload
11:33 < bridge> <learath2> It's so low that not once have we ever had traffic issues on any of our servers until we got to china where bandwidth is extremely limited
11:34 < bridge> <totar> this conflicts with feedback I've recieved from other admins
11:34 < bridge> <learath2> Maybe you can achieve a 40% reduction it could enable china to have 64p servers again
11:34 < bridge> <learath2> Maybe if you can achieve a 40% reduction it could enable china to have 64p servers again
11:34 < bridge> <totar> <https://github.com/ddnet/ddnet/issues/8924>
11:34 < bridge> <totar> https://cdn.discordapp.com/attachments/293493549758939136/1351866465870938205/image.png?ex=67dbef41&is=67da9dc1&hm=7a78491ab857b264e28fdc41fb5c869b7748784962abdde3236d5469bf9d549d&
11:34 < bridge> <totar> I think 3x is possible
11:35 < bridge> <totar> at most
11:35 < bridge> <totar> 2x easily
11:35 < bridge> <learath2> If you want showall enabled for all players that's another thing
11:35 < bridge> <totar> no I just want a checkbox
11:35 < bridge> <totar> but heinrichs says that's too much bandwidth
11:36 < bridge> <totar> you say we have plenty
11:36 < bridge> <totar> I am confused
11:36 < bridge> <learath2> You are a smart person, it shouldn't be too hard to connect the dots. Because most people do not use /showall, we have plenty of bandwidth at all locations except china
11:37 < bridge> <totar> I promise I'm not pretending, I actually don't understand
11:38 < bridge> <totar> are you saying our bandwidth is low only because no one uses /showall?
11:38 < bridge> <learath2> Anyway, if you do achieve a significant amount of extra compression and there isn't much performance penalty, it would definitely be merged. I'm just concerned you are wasting your time
11:39 < bridge> <totar> lower bandwidth usage for client upload improves reliability by quite a lot afaik
11:39 < bridge> <learath2> Yes, as far as I remember bandwidth only ever becomes an issue when we have multiple full servers with everyone using showall
11:41 < bridge> <learath2> In almost a decade, I have only ever seen bandwidth issues on a handful of locations, China and Iran
11:41 < bridge> <learath2> I guess China would appreciate it, they were disappointed that we can't host full size servers there
11:44 < bridge> <totar> anyway the reason I want to add zstd is not just for showall. Like we talked about earlier input reliability can be improved, and also there's justification for the server sending the stream of buffered inputs of other players back down to all clients. Which if you finish adding sound prediction would let players "run ahead" of the server's gametime to get high prediction margin benefits without suffering from latency
11:44 < bridge> <totar> overall it's probably too experimental for ddnet, hence the example project
11:47 < bridge> <learath2> Could be cool
12:47 < bridge> <zhn> but its easy, you will not be able to spam emotes anymore if it would reset your cursor every time
12:53 < bridge> <inv41idu53rn4m3> Maybe I'm just skill issued
12:54 < bridge> <inv41idu53rn4m3> Cursor getting reset after a couple seconds would be best of both worlds imo
12:56 < bridge> <zhn> no
12:56 < bridge> <zhn> not for me at least
12:56 < bridge> <zhn> i used that emotewheel for decade now there's no real reason to reset it xd
12:56 < bridge> <Jupstar ‚ú™> 3950x
12:57 < bridge> <zhn> could be an option but i don't think it will get into ddnet, maybe in tater client
12:57 < bridge> <zhn> man stream it so meloni would record it and show to teero later frfr
12:58 < bridge> <inv41idu53rn4m3> It clearly takes at least 1k hours of experience to properly learn the emote wheel
12:58 < bridge> <zhn> took 100 hours to fellow tiktok kids
13:04 < bridge> <melo∆û> I'm not home :VAngy:
13:41 < bridge> <Jupstar ‚ú™> I've long finished xd
13:41 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1351898495107465246/image.png?ex=67dc0d16&is=67dabb96&hm=102e5cacb71d89708a2bbe300974886e8bfe5da979b1dd48465027cc39c83f71&
13:42 < bridge> <Jupstar ‚ú™> ddnet compiles in:
13:42 < bridge> <Jupstar ‚ú™> `ninja  220,29s user 8,62s system 1767% cpu 12,954 total`
13:50 < bridge> <pilonpl> Maybe have a dead zone which select the last used emote
13:52 < bridge> <pilonpl> Seems like it would be quite intuitive too
14:07 < bridge> <Jupstar ‚ú™> ez
14:07 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1351905035780362240/image.png?ex=67dc132d&is=67dac1ad&hm=f644e83bdeb804633e1c253bb48409d584393a5c0baf3ad57f251cafcac96f47&
14:08 < bridge> <Jupstar ‚ú™> But in ddnet i only get 10k fps ü´† 
14:08 < bridge> <Jupstar ‚ú™> 
14:08 < bridge> <Jupstar ‚ú™> why is it so slow there
14:09 < bridge> <Jupstar ‚ú™> with `SDL_VIDEODRIVER=wayland ./DDNet` I get around 15k.
14:09 < bridge> <Jupstar ‚ú™> 
14:09 < bridge> <Jupstar ‚ú™> Still 5k fps less
14:09 < bridge> <Jupstar ‚ú™> RIP
14:11 < bridge> <Jupstar ‚ú™> oh ok the gpu is bottlenecking, fullhd i also get 20k, ez
14:11 < bridge> <pilonpl> Literally unplayable
14:11 < bridge> <pilonpl> I always go for 1 microsecond frametime
14:11 < bridge> <Assa> I go with gsync
14:12 < bridge> <Jupstar ‚ú™> True, need faster GPU now
14:12 < bridge> <inv41idu53rn4m3> I was going to suggest a deadzone but that would make it impossible to cancel your decision to emote
14:12 < bridge> <inv41idu53rn4m3> unless you have a deadzone in the middle of the cancel zone
14:13 < bridge> <pilonpl> Good point
14:13 < bridge> <pilonpl> I didn't think of that
14:14 < bridge> <inv41idu53rn4m3> though a deadzone in the middle of the cancel zone wouldn't be so bad, since if you're canceling your emote you're probably moving the mouse for a bit first
14:14 < bridge> <inv41idu53rn4m3> since canceling usually takes a bit of thought
14:16 < bridge> <pilonpl> I am not sure if that's good design
14:17 < bridge> <teero777> @jupeyy_keks I'm coming gonet
14:17 < bridge> <pilonpl> Maybe it's not hard to spam emotes with the cursor reset anyways
14:17 < bridge> <teero777> @jupeyy_keks I'm coming home
14:17 < bridge> <teero777> Wait for me
14:17 < bridge> <teero777> 20min
14:17 < bridge> <Jupstar ‚ú™> Wait with what xD
14:17 < bridge> <inv41idu53rn4m3> multiple times per second would be pretty hard
14:17 < bridge> <Jupstar ‚ú™> I build it 3h ago
14:17 < bridge> <teero777> Are you done already?
14:18 < bridge> <inv41idu53rn4m3> usually when you spam an emote it's as fast as you can tap the button
14:18 < bridge> <teero777> @totar today is wednesday. Do you have time?
14:18 < bridge> <pilonpl> So maybe a dead zone but not in the emote menu but outside of it if you know what i mean
14:19 < bridge> <inv41idu53rn4m3> ddnet is so based for reducing the emote cooldown to 0
14:19 < bridge> <pilonpl> So only when you start playing it resests
14:19 < bridge> <pilonpl> So only when you start playing it resets
14:19 < bridge> <inv41idu53rn4m3> that makes sense, but also feels like oddly complex behavior for an emote menu
14:20 < bridge> <inv41idu53rn4m3> then again, you don't need to explain it to the user if it's intuitive
14:24 < bridge> <pilonpl> I have similar issued with the dummy
14:24 < bridge> <pilonpl> I have similar issues with the dummy
14:25 < bridge> <pilonpl> Because it also has it's own curser position
14:25 < bridge> <inv41idu53rn4m3> yeah could be nice to have an option to copy cursor position over when you swap
14:26 < bridge> <inv41idu53rn4m3> it's not too bad though, you usually learn to memorize the cursor position of both tees
14:26 < bridge> <pilonpl> Yeah
14:28 < bridge> <Jupstar ‚ú™> with capped fps the graph looks really insane.
14:28 < bridge> <Jupstar ‚ú™> 
14:28 < bridge> <Jupstar ‚ú™> there is almost never a stutter in it now. that's defs better than before with my old cpu.
14:28 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1351910156744523786/image.png?ex=67dc17f2&is=67dac672&hm=419155620fc553a9a71603fd083e275123245e847bc57ad9100e9044a5112f64&
14:31 < bridge> <pilonpl> I limit it to 1000fps
14:31 < bridge> <Jupstar ‚ú™> show your graph :deen_star:
14:31 < bridge> <pilonpl> 1 milliseconds latency seems good enough
14:31 < bridge> <Jupstar ‚ú™> ctrl + shift + d
14:31 < bridge> <Jupstar ‚ú™> ctrl + shift + g
14:34 < bridge> <pilonpl> https://cdn.discordapp.com/attachments/293493549758939136/1351911630744719442/image.png?ex=67dc1952&is=67dac7d2&hm=9039f333feb4590fcb72c474da7e6d86ef2a7d149fa08a6fc73834649062e2b0&
14:34 < bridge> <pilonpl> https://cdn.discordapp.com/attachments/293493549758939136/1351911730250383441/image.png?ex=67dc1969&is=67dac7e9&hm=c9eb77cdd9afe6c29793bfec1874b5caf2de8b21a005d79f1ccb148eae87c965&
14:34 < bridge> <pilonpl> that's interesting
14:35 < bridge> <pilonpl> how it this graph rendered?
14:35 < bridge> <pilonpl> seems weird
14:35 < bridge> <Jupstar ‚ú™> 0.1% lows according to mangohud
14:35 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1351912038481264731/image.png?ex=67dc19b3&is=67dac833&hm=9ec84e64ee2b6878d2d3f0f13c10f3b575b93e3eacd160ada9b433b04d9592c5&
14:36 < bridge> <Jupstar ‚ú™> i dunno, it's just rendered xD
14:36 < bridge> <inv41idu53rn4m3> what is the time interval in between those little spikes?
14:37 < bridge> <pilonpl> wtf is this
14:37 < bridge> <pilonpl> https://cdn.discordapp.com/attachments/293493549758939136/1351912418242203699/image.png?ex=67dc1a0d&is=67dac88d&hm=64af858bd3eb1167c51149e0d8b424692e09ba970e256e6214fdd369d57515ec&
14:38 < bridge> <Jupstar ‚ú™> XD
14:38 < bridge> <Jupstar ‚ú™> looks kinda like the GPU is changing the clock
14:38 < bridge> <Jupstar ‚ú™> but really dunno
14:38 < bridge> <Jupstar ‚ú™> it's so perfect
14:39 < bridge> <pilonpl> https://cdn.discordapp.com/attachments/293493549758939136/1351913001443262464/image.png?ex=67dc1a98&is=67dac918&hm=93cbf03a94d3a5e875f278cc1c088576efe6d329b92994399b5cf6f5b18ee746&
14:39 < bridge> <pilonpl> the slider in graphics seems to be better
14:39 < bridge> <Jupstar ‚ú™> You are on linux right?
14:39 < bridge> <pilonpl> yes
14:39 < bridge> <Jupstar ‚ú™> the graph is too good for windows xD
14:40 < bridge> <pilonpl> what's the difference between the general slider and the graphics slider?
14:40 < bridge> <Jupstar ‚ú™> general affects input & gfx
14:40 < bridge> <Jupstar ‚ú™> 
14:40 < bridge> <Jupstar ‚ú™> gfx only affects rendering
14:41 < bridge> <pilonpl> so which should i use lol
14:41 < bridge> <Jupstar ‚ú™> i use gfx
14:41 < bridge> <Jupstar ‚ú™> 
14:41 < bridge> <Jupstar ‚ú™> the cl one is just buggy
14:41 < bridge> <pilonpl> it's confusing that there are two
14:42 < bridge> <Jupstar ‚ú™> Yeah it is
14:42 < bridge> <inv41idu53rn4m3> rendering and updating the state of the engine are very distinct tasks though
14:42 < bridge> <inv41idu53rn4m3> it's not smort to only update when you render
14:42 < bridge> <inv41idu53rn4m3> it can become really problematic if you drop a few frames
14:42 < bridge> <Jupstar ‚ú™> I dunno why the input feels so bad with `cl_refresh_rate`
14:42 < bridge> <Jupstar ‚ú™> 
14:42 < bridge> <Jupstar ‚ú™> On ddnet-rs this is absolutely not the case, I can easily play with `cl_refresh_rate 50` there
14:42 < bridge> <Jupstar ‚ú™> on normal ddnet this is unplayable
14:43 < bridge> <inv41idu53rn4m3> fun
14:43 < bridge> <inv41idu53rn4m3> The engine is certainly showing its age
14:43 < bridge> <inv41idu53rn4m3> in both good ways and bad
14:45 < bridge> <inv41idu53rn4m3> probably a small difference in the order things are done, giving you like an extra frame of latency?
14:45 < bridge> <Jupstar ‚ú™> Or SDL doing weird things xD
14:46 < bridge> <woidless6> Who has the DDNet 19.1 network protocol?
14:46 < bridge> <Jupstar ‚ú™> execution wise
14:46 < bridge> <Jupstar ‚ú™> `gfx_refresh_rate 0;cl_refresh_rate 50;gfx_asyncrender_old 0`
14:46 < bridge> <Jupstar ‚ú™> 
14:46 < bridge> <Jupstar ‚ú™> should be same as ddnet-rs.
14:46 < bridge> <Jupstar ‚ú™> 
14:46 < bridge> <Jupstar ‚ú™> it renders every frame, it has a gfx thread, so not blocking the main thread for input etc.
14:49 < bridge> <inv41idu53rn4m3> Are you looking for 19.1 specific features, or are you just looking for information on the DDNet protocol?
14:50 < bridge> <woidless6> I want to repeat the exact connection to the server, sending the right packets
14:51 < bridge> <inv41idu53rn4m3> in that case, just look it up, I'm pretty sure there's a link on the wiki
14:51 < bridge> <Jupstar ‚ú™> the APU of Ryzen 9950X3D
14:51 < bridge> <Jupstar ‚ú™> 
14:51 < bridge> <Jupstar ‚ú™> not the best, but around level of a laptop igpu
14:51 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1351915968019959849/image.png?ex=67dc1d5c&is=67dacbdc&hm=c539501ba9f645ada32751a4728d2c2b3f186e794058a823c9d6a53e3bebf3d1&
14:51 < bridge> <inv41idu53rn4m3> Do we have like a comprehensive documentation of the protocol anywhere?
14:51 < bridge> <inv41idu53rn4m3> in that case, just look it up, I'm pretty sure there's a link on the wiki (I read up on some protocol features just yesterday)
14:52 < bridge> <Jupstar ‚ú™> why do they even add a integrated gpu xD
14:52 < bridge> <Jupstar ‚ú™> 
14:52 < bridge> <Jupstar ‚ú™> I'd rather pay 100 bucks less than having this useless feature
14:53 < bridge> <inv41idu53rn4m3> For a gaming CPU yeah that's kinda weird
14:53 < bridge> <inv41idu53rn4m3> Maybe it doesn't cost them very much and they need it in there for other lower tier offerings?
14:53 < bridge> <pilonpl> maybe it's good to have if your gpu dies
14:53 < bridge> <inv41idu53rn4m3> You could also be cool and use it for power saving or something idk
14:54 < bridge> <inv41idu53rn4m3> dual gpu on desktop go brr
14:54 < bridge> <pilonpl> Or for gpu pass through i guess
14:55 < bridge> <inv41idu53rn4m3> oh that too
14:55 < bridge> <Jupstar ‚ú™> I mean it's enough for teeworlds and probs pretty efficient xD
14:56 < bridge> <Jupstar ‚ú™> And maybe 1440p is not the resolution it works well.. and also i didnt plug my monitor into the motherboard
14:56 < bridge> <Jupstar ‚ú™> so maybe it's still bit better
15:05 < bridge> <teero777> mine is a sine wave
15:05 < bridge> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1351919397144629339/image.png?ex=67dc208d&is=67dacf0d&hm=cd69829ab161fe0a9d4877bc0637d77afc5cf4b0aa1efe67b3c16cde55f64a0c&
15:09 < bridge> <pilonpl> Is there any easy issue to start contributing?
15:10 < bridge> <inv41idu53rn4m3> Come up with your own :D :D
15:10 < bridge> <teero777> make an issue and then fix it -> success
15:11 < bridge> <teero777> its just like math
15:15 < bridge> <zerolacqua> there are some issues with good-first-issue tag you can try them
15:15 < bridge> <zerolacqua> or you make one :kek:
15:16 < bridge> <pilonpl> There is one issue with that tag
15:16 < bridge> <pilonpl> I guess
15:16 < bridge> <pilonpl> But it's a single line change lol
15:16 < bridge> <pilonpl> So there is no compiler warning
15:16 < bridge> <inv41idu53rn4m3> still enough for purple name
15:17 < bridge> <zerolacqua> better than readme typo fix
15:17 < bridge> <learath2> I guess libtw2 and chillers docs at least combined are pretty comprehensive
15:18 < bridge> <pilonpl> heinrich suggest the solution already
15:18 < bridge> <pilonpl> Why didn't he just fix it
15:19 < bridge> <Jupstar ‚ú™> watafak xDDDDDD
15:20 < bridge> <learath2> now that is weird, that's a fairly good sine curve too
15:24 < bridge> <teero777> can i embed src files from github in the readme.md?
15:32 < ws-client3> <ChillerDragon> @teero777 yes
15:32 < ws-client3> <ChillerDragon> https://github.com/ChillerDragon/github-meta/blob/master/README.md
15:33 < bridge> <teero777> oh cool thx
15:33 < ws-client3> <ChillerDragon> but it has to be same repo
15:33 < bridge> <teero777> yea
15:33 < bridge> <teero777> ok
16:23 < bridge> <ryozuki> @milkeeycat i nearly got dependencies working
16:23 < bridge> <ryozuki> im adding git support
16:24 < bridge> <milkeeycat> and i've been writing powershell :pepeW:
16:24 < bridge> <milkeeycat> that shit's ass
16:24 < bridge> <ryozuki> ```toml
16:24 < bridge> <ryozuki> [package]
16:24 < bridge> <ryozuki> name = "project"
16:24 < bridge> <ryozuki> version = "0.1.0"
16:24 < bridge> <ryozuki> license = "MIT"
16:24 < bridge> <ryozuki> 
16:24 < bridge> <ryozuki> [profile.release]
16:24 < bridge> <ryozuki> release = true
16:24 < bridge> <ryozuki> opt_level = 3
16:24 < bridge> <ryozuki> debug_info = false
16:25 < bridge> <ryozuki> 
16:25 < bridge> <ryozuki> [profile.dev]
16:25 < bridge> <ryozuki> release = false
16:25 < bridge> <ryozuki> opt_level = 0
16:25 < bridge> <ryozuki> debug_info = true
16:25 < bridge> <ryozuki> 
16:25 < bridge> <ryozuki> [dependencies]
16:25 < bridge> <ryozuki> std = { path = "../../std", version = "0.1.0" }
16:25 < bridge> <ryozuki> 
16:25 < bridge> <ryozuki> ```
16:25 < bridge> <ryozuki> idk makes no sense
16:58 < bridge> <Ewan> why lmfao
17:06 < bridge> <milkeeycat> Because I had to write a program which interacts with windows servers
17:27 < bridge> <TsPiggy> i can write powershell
17:39 < bridge> <Ewan> yeah but why
20:00 < bridge> <Solly (bun bun)> ```cpp
20:00 < bridge> <Solly (bun bun)> // specialized lineseg-rect intersection
20:00 < bridge> <Solly (bun bun)>     // https://gist.github.com/ChickenProp/3194723
20:00 < bridge> <Solly (bun bun)>     if(ScreenPos.x < -HalfWidth || ScreenPos.x > HalfWidth || ScreenPos.y < -HalfHeight || ScreenPos.y > HalfHeight)
20:00 < bridge> <Solly (bun bun)>     {
20:00 < bridge> <Solly (bun bun)>         float aDeltas[] = {ScreenPos.x, ScreenPos.y};
20:00 < bridge> <Solly (bun bun)>         float aBounds[] = {HalfWidth, HalfHeight};
20:00 < bridge> <Solly (bun bun)>         float ClampFactor = INFINITY;
20:00 < bridge> <Solly (bun bun)> 
20:00 < bridge> <Solly (bun bun)>         static_assert(std::size(aDeltas) == std::size(aBounds), "delta and bounds arrays must have the same size");
20:00 < bridge> <Solly (bun bun)>         for(std::size_t i = 0; i < std::size(aDeltas); i++)
20:00 < bridge> <Solly (bun bun)>         {
20:00 < bridge> <Solly (bun bun)>             float t = absolute(aBounds[i] / aDeltas[i]);
20:00 < bridge> <Solly (bun bun)>             if(ClampFactor > t)
20:00 < bridge> <Solly (bun bun)>                 ClampFactor = t;
20:00 < bridge> <Solly (bun bun)>         }
20:00 < bridge> <Solly (bun bun)> 
20:00 < bridge> <Solly (bun bun)>         Clamped = true;
20:00 < bridge> <Solly (bun bun)>         TargetPos = ScreenPos * ClampFactor + m_pClient->m_Camera.m_Center;
20:00 < bridge> <Solly (bun bun)>     }
20:00 < bridge> <Solly (bun bun)> ```
20:00 < bridge> <Solly (bun bun)> wheres tsfreddy
20:00 < bridge> <Solly (bun bun)> @tsfreddie ghasp slightly different name
20:01 < bridge> <Solly (bun bun)> what does the above code do, it looks to me, to be making sure the cursor is on screen
20:04 < bridge> <melo∆û> :angeryturtle:
20:04 < bridge> <melo∆û> :angeryturtle:
20:05 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1351994880993398834/Screenshot_20250319-200434.png?ex=67dc66da&is=67db155a&hm=b740084026ac4d9b7b3ddd43c022f128c2cdcc26f145649e1c66715e42b19a3a&
20:05 < bridge> <Solly (bun bun)> ```cpp
20:05 < bridge> <Solly (bun bun)> // scale to keep cursor on screen
20:06 < bridge> <Solly (bun bun)> ClampFactor = min(
20:06 < bridge> <Solly (bun bun)>   1.0f,
20:06 < bridge> <Solly (bun bun)>   absolute(ScreenPos.x / HalfWidth),
20:06 < bridge> <Solly (bun bun)>   absolute(ScreenPos.y / HalfHeight),
20:06 < bridge> <Solly (bun bun)> );
20:06 < bridge> <Solly (bun bun)> Clamped = Scale != 1.0f;
20:06 < bridge> <Solly (bun bun)> ScreenPos *= ClampFactor
20:06 < bridge> <Solly (bun bun)> TargetPos = ScreenPos + m_pClient->m_Camera.m_Center
20:06 < bridge> <Solly (bun bun)> ```
20:06 < bridge> <Solly (bun bun)> this seems alot cleaner to me
20:06 < bridge> <Solly (bun bun)> ```cpp
20:06 < bridge> <Solly (bun bun)> // scale to keep cursor on screen
20:06 < bridge> <Solly (bun bun)> ClampFactor = min(
20:06 < bridge> <Solly (bun bun)>   1.0f,
20:06 < bridge> <Solly (bun bun)>   absolute(HalfWidth / ScreenPos.x),
20:06 < bridge> <Solly (bun bun)>   absolute(HalfHeight / ScreenPos.y),
20:06 < bridge> <Solly (bun bun)> );
20:06 < bridge> <Solly (bun bun)> Clamped = Scale != 1.0f;
20:06 < bridge> <Solly (bun bun)> ScreenPos /= ClampFactor
20:06 < bridge> <Solly (bun bun)> TargetPos = ScreenPos + m_pClient->m_Camera.m_Center
20:06 < bridge> <Solly (bun bun)> ```
20:06 < bridge> <Solly (bun bun)> this seems alot cleaner to me
20:10 < bridge> <Solly (bun bun)> you could also make it so the cursor cant actually go off screen
20:12 < bridge> <TsPiggy> Clip the cursor to screen's edge.
20:12 < bridge> <TsPiggy> I think simple clamping loses the angle
20:13 < bridge> <Solly (bun bun)> the alternative i gave keeps the angle (also uses a scale factor)
20:13 < bridge> <TsPiggy> Sure
20:14 < bridge> <TsPiggy> I think I just grabbed a full rect line intersect and algebrad constants out
20:14 < bridge> <TsPiggy> I'm not really good at math
20:14 < bridge> <Solly (bun bun)> i clicked the link and got really confused by why we would need that before realising that you had simplified it down to something much simpler
20:14 < bridge> <TsPiggy> So maybe do that. Be sure to test dyncam and smooth dyncam
20:15 < bridge> <TsPiggy> I spent so much time during the months I was active to fix everything dyncam related
20:16 < bridge> <TsPiggy> So please test dyncam and smoothdyncam after changing cursors
20:16 < bridge> <Solly (bun bun)> sure thing
20:19 < bridge> <Solly (bun bun)> ```cpp
20:19 < bridge> <Solly (bun bun)> RenderTools()->MapScreenToWorld(Center.x, Center.y, 100.0f, 100.0f, 100.0f, 0, 0, Graphics()->ScreenAspect(), Zoom, aPoints);
20:19 < bridge> <Solly (bun bun)> Graphics()->MapScreen(aPoints[0], aPoints[1], aPoints[2], aPoints[3]);
20:19 < bridge> <Solly (bun bun)> ```
20:19 < bridge> <Solly (bun bun)> these 2 things both write to aPoints, i think only the first one is intended
20:21 < bridge> <kebscs> https://www.youtube.com/watch?v=91UY_4RN4yc
20:21 < bridge> <kebscs> "new" discord sdk
20:22 < bridge> <kebscs> and its just old sdk but with more bloat
20:22 < bridge> <skibidisigma8261451> what should i add
20:22 < bridge> <skibidisigma8261451> https://cdn.discordapp.com/attachments/293493549758939136/1351999218084089999/image-46.png?ex=67dc6ae4&is=67db1964&hm=90fa15c9dcdcff6a6c10839b36b6cf48ec2aa2c9bfb044fb0a7f4d176dac18df&
20:23 < bridge> <TsPiggy> The first one doesn't map anything to the graphics
20:23 < bridge> <TsPiggy> The first line doesn't map anything to the graphics
20:24 < bridge> <Solly (bun bun)> ah i see
20:24 < bridge> <TsPiggy> I'm in bed. Maybe just PR anything you want to change and tag me
20:24 < bridge> <TsPiggy> I'll check when I got time
20:24 < bridge> <Solly (bun bun)> yeah, thats probably a good idea
20:25 < bridge> <TsPiggy> because if you ask me here my ADHD brain will actually on GitHub on my phone to check codes :justatest:
20:26 < bridge> <TsPiggy> Even if it is 3:26am
20:26 < bridge> <TsPiggy> because if you ask me here my ADHD brain will actually open GitHub on my phone to check codes :justatest:
20:26 < bridge> <skibidisigma8261451> !!
20:26 < bridge> <Solly (bun bun)> yeah goto sleep silly billy
20:41 < bridge> <hectavoxel> >supercharge
20:42 < bridge> <hectavoxel> supercharge is my least favorite word because its like, the most corporate sounding thing in existence
20:58 < bridge> <louis> super charge : brawl stars term
21:32 < bridge> <louis> what's wrong with editing game.png?
21:33 < bridge> <inv41idu53rn4m3> effort
21:33 < bridge> <inv41idu53rn4m3> If you switch between skins you'd have to edit all of them :(
21:36 < bridge> <louis> i dont want to hate but at this rate we're going to have 40 pages of ddnet settings by the end of 2026
21:36 < bridge> <inv41idu53rn4m3> sounds pretty cool to me
21:38 < bridge> <louis> also it just looks worse scaled
21:38 < bridge> <louis> https://cdn.discordapp.com/attachments/293493549758939136/1352018349860716654/424679098-12f4c87a-8a3e-4dfe-b22c-3a90f283e23f.png?ex=67dc7cb5&is=67db2b35&hm=8326ba6616560208fba6022942eebd4039faf761c57e561d3dce9403296fc4ad&
21:38 < bridge> <louis> you'd get a better image if you edit the original game.png svg
21:40 < bridge> <louis> not really, theres a good reason some maintainers are skeptical about adding new config variables etc.
21:43 < bridge> <hectavoxel> literally whats the point of this
21:44 < bridge> <hectavoxel> we gotta get heinrich back
21:45 < bridge> <melo∆û> Heinrich is semi active on GitHub
21:45 < bridge> <melo∆û> But yeah while even I tried to get a command in the game - we shouldn't overdo it
21:45 < bridge> <melo∆û> Such customization has a place in custom clients
21:45 < bridge> <inv41idu53rn4m3> hierarchical configs let's go
21:45 < bridge> <inv41idu53rn4m3> namespaces within namespaces
21:46 < bridge> <chairn> he left discord ? I didn't even know
21:46 < bridge> <melo∆û> I still think  /killable would've been a genius invention :cammo:
21:46 < bridge> <inv41idu53rn4m3> add a config variable for every imaginable thing
21:46 < bridge> <melo∆û> Nah just not active anymore
21:46 < bridge> <melo∆û> Probably a break of sorts
21:47 < bridge> <Solly (bun bun)> the shit image quality is my screen shot tool :P
21:47 < bridge> <Solly (bun bun)> as risu said im a lazy bastard
21:48 < bridge> <hectavoxel> where did i say that
21:48 < bridge> <milkeeycat> lazy bastards use default settings
21:48 < bridge> <Solly (bun bun)> heinrich is still in the discord
21:48 < bridge> <Solly (bun bun)> semi-lazy only for some things bastard
21:48 < bridge> <Solly (bun bun)> semi-lazy-only-for-some-things bastard
21:49 < bridge> <chairn> you didn't, but it was implied he wasn't there anymore, I just wanted some more info
21:50 < bridge> <hectavoxel> i mean he doesnt even touch discord anymore
21:50 < bridge> <hectavoxel> but hes still like, IN here
21:51 < bridge> <TsPiggy> But I feel like lazy bastards won't have a 40 max mouse dist
21:52 < bridge> <Solly (bun bun)> me, i do
21:52 < bridge> <Solly (bun bun)> its how i play, i cant change it now x-x
21:55 < bridge> <louis> hm yeah
21:55 < bridge> <louis> im still pretty sure that downscaling a gameskin svg then re-rendering is usually better than scaling down in the client
21:56 < bridge> <Solly (bun bun)> it looks perfect to me
21:56 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1352022852920152094/image.png?ex=67dc80e7&is=67db2f67&hm=6229464ff1ad7af56af8720bf6d3454ed3b46895a8941ee11dcad6459d3fd2f7&
21:56 < bridge> <Solly (bun bun)> ^ prey compresion doesnt butcher this
21:56 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1352022896133799966/image.png?ex=67dc80f1&is=67db2f71&hm=b7c83ac9e2bf3ebc233f57d6e438ab44b76628e56081352cd743a84d5365ae9b&
21:56 < bridge> <Solly (bun bun)> (cant paste images darn)
21:57 < bridge> <Solly (bun bun)> it does
21:57 < bridge> <Solly (bun bun)> just take my word for it, or try it youreslf :P
21:58 < bridge> <Solly (bun bun)> also you can do this now which is hilarious
21:58 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1352023342680506468/image.png?ex=67dc815c&is=67db2fdc&hm=0cab97ea5a879ce998a0af750453f61a9d4c213455bedac4c89cab2db73dc992&
22:02 < bridge> <kebscs> don't see why would anyone make their cursor bigger
22:02 < bridge> <kebscs> and if you want smaller then custom assets exist?
22:38 < bridge> <melo∆û> Issue deleter Wednesday
22:42 < bridge> <oxyzo.> bun bun is trapped in spikes
22:42 < bridge> <oxyzo.> !!!
22:42 < bridge> <Solly (bun bun)> yay!
22:46 < bridge> <robyt3> Why is the zoom unused now?
22:46 < bridge> <Solly (bun bun)> unused?
22:47 < bridge> <Solly (bun bun)> did bon bon make a mistake
22:47 < bridge> <robyt3> ah, it's used differently now
22:47 < bridge> <robyt3> but is passing `m_Camera.m_Zoom` to `RenderQuadContainerAsSprite` not necessary anymore?
22:48 < bridge> <robyt3> and to `MapScreenToWorld`
22:48 < bridge> <Solly (bun bun)> `RenderTools()->MapScreenToWorld(CenterX, CenterY, 100.0f, 100.0f, 100.0f, 0, 0, Graphics()->ScreenAspect(), Zoom, aPoints);`
22:48 < bridge> <Solly (bun bun)> 
22:48 < bridge> <Solly (bun bun)> is the same as 
22:48 < bridge> <Solly (bun bun)> 
22:48 < bridge> <Solly (bun bun)> `RenderTools()->MapScreenToInterface(m_pClient->m_Camera.m_Center.x, m_pClient->m_Camera.m_Center.y);`
22:48 < bridge> <Solly (bun bun)> 
22:48 < bridge> <Solly (bun bun)> but you dont get aPoints and you can set zoom
22:49 < bridge> <Solly (bun bun)> previously they were supplying zoom so the returned points would be scaled by zoom, so you had to make the cursor the right size by also scaling the cursor
22:49 < bridge> <Solly (bun bun)> now both use MapScreenToInterface as before but its replaced with its implementation so you get aPoints
22:50 < bridge> <Solly (bun bun)> uhhh
22:50 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1352036414023401483/image.png?ex=67dc8d88&is=67db3c08&hm=77dd336af35c8277ea7a8e3359aa24495597bd4764d13d71ecb4f1e86b37cfab&
22:50 < bridge> <robyt3> Probably should have pinned the dependency so it doesn't break when the map tools do
22:51 < bridge> <Solly (bun bun)> pinned the dependency?
22:51 < bridge> <Solly (bun bun)> misleading name
22:51 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1352036800457212046/image.png?ex=67dc8de4&is=67db3c64&hm=97fa08369402852786fb47a8e39c5d41c56ffa4154865a3f63368eea48058e05&
22:51 < bridge> <robyt3> It currently always uses the latest master commit so if `twmap-tools` changes then could break our CI like here
22:52 < bridge> <robyt3> I guess a check was added now for old speedup tiles
22:52 < bridge> <Solly (bun bun)> i see
22:52 < bridge> <robyt3> Should add another exclusion for that error in `style.yml` I guess, we don't want to change the map
23:13 < bridge> <alw5> @totar can i see the null movement bind?
23:14 < bridge> <teero777> It doesn't work. I was lying
23:14 < bridge> <oxyzo.> liar liar pants on fire
23:14 < bridge> <Solly (bun bun)> bruhj
23:14 < bridge> <alw5> yea it wouldnt be possible because this game doesnt have -left
23:14 < bridge> <oxyzo.> negative left
23:14 < bridge> <oxyzo.> thats just right
23:15 < bridge> <alw5> no
23:15 < bridge> <alw5> it puts +left to 0
23:15 < bridge> <alw5> which means its not
23:15 < bridge> <teero777> stop writing
23:15 < bridge> <alw5> what
23:16 < bridge> <alw5> so since it isnt possible with binds
23:16 < bridge> <alw5> and only possible with the keyboard
23:17 < bridge> <alw5> will the pr be open again?
23:17 < bridge> <teero777> no
23:17 < bridge> <alw5> is it considered cheating?
23:17 < bridge> <teero777> yes
23:17 < bridge> <alw5> even on ddrace?
23:18 < bridge> <teero777> yes
23:18 < bridge> <robyt3> especially on ddrace
23:18 < bridge> <alw5> so people with the keyboard should turn it off?
23:18 < bridge> <teero777> yea
23:18 < bridge> <teero777> yes
23:19 < bridge> <alw5> can i ask why its considered cheating?
23:19 < bridge> <alw5> it doesnt really give much of an advantage from what i heard
23:19 < bridge> <robyt3> Did you read https://github.com/ddnet/ddnet/pull/9821#pullrequestreview-2687733822 ?
23:19 < bridge> <teero777> detecting it over a timespan is trivial so you risk your ranks getting deleted by using it.
23:19 < bridge> <alw5> i read through most of the comments not all
23:21 < bridge> <teero777> detecting it over a timespan is trivial so you risk your ranks getting deleted and getting punished by using it.
23:21 < bridge> <alw5> > After using this for a while, I've found that it is very useful for dummy since you can release a held direction by pressing the other (meaning you dont have to tap the direction to release it). Otherwise it feels no different
23:21 < bridge> <alw5> this isnt very much of an advantage
23:22 < bridge> <alw5> since dummy_reset exists
23:23 < bridge> <teero777> It is considered a hardware cheat. We are not going to change things because big companies think they can just add whatever features they want.
23:23 < bridge> <alw5> is there gonna be a detection added to stop people from using it?
23:23 < bridge> <teero777> probably
23:23 < bridge> <robyt3> > It is forbidden to manipulate the game input in any way that the official DDNet client does not support. This includes any method of input manipulation such as using custom clients, 3rd party tools or hardware automation (this is not an exhaustive list).
23:23 < bridge> <robyt3> > 
23:23 < bridge> <robyt3> > This has always been the official statement AFAIK.
23:23 < bridge> <robyt3> **any way**
23:24 < bridge> <teero777> No discussion needed ig
23:24 < bridge> <alw5> the russians with their dummy client thats prohibited right?
23:24 < bridge> <inv41idu53rn4m3> Not even hardware, it's just firmware!
23:25 < bridge> <inv41idu53rn4m3> a hardware cheat would be more impressive
23:26 < bridge> <inv41idu53rn4m3> though I guess it'd be really easy to do electronically, so not really
23:26 < bridge> <inv41idu53rn4m3> a *mechanical* hardware cheat would be impressive
23:27 < bridge> <robyt3> yes, but training a pigeon to play for you would also be cheating :kek:
23:36 < ws-client> <ChillerDragon> yo solly how do i turn off nameplate transparency?
23:37 < ws-client> <ChillerDragon> @robyt3 training a pigeon is cheating wtf? isnt that more a matter of finishing in someone elses name than cheating
23:38 < bridge> <alw5> your honor that pigeon finished for me
23:38 < bridge> <jxsl13> are custom input devices cheating?
23:38 < ws-client> <ChillerDragon> if i ask a pro player to finish in my name its the same as asking a pro pigeon to finish in my name
23:38 < bridge> <alw5> wouldnt someone playing on your pc cheating?
23:38 < bridge> <alw5> depends
23:38 < ws-client> <ChillerDragon> i think there is a different term for that
23:38 < bridge> <alw5> what are you doing with that custom input device
23:38 < bridge> <jxsl13> moving the tee
23:39 < bridge> <alw5> and how are you moving the tee
23:39 < ws-client> <ChillerDragon> @Solly (bun bun) did this ping?
23:39 < bridge> <jxsl13> with my nose
23:39 < bridge> <alw5> it did chiller dragon
23:39 < bridge> <jxsl13> probably
23:39 < bridge> <Solly (bun bun)> [Angry_Ping](https://cdn.discordapp.com/emojis/568342551262658560.gif?size=48&animated=true&name=Angry_Ping)
23:39 < bridge> <alw5> he cant see that emoji
23:40 < ws-client> <ChillerDragon> @Solly (bun bun) so how to turn off nameplate transparency
23:40 < bridge> <Solly (bun bun)> its fake nitro anyway so its a url
23:40 < bridge> <Solly (bun bun)> wdym transparency?
23:40 < bridge> <Solly (bun bun)> like when your specing another team?
23:40 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1742424044.png
23:40 < ws-client> <ChillerDragon> ye
23:41 < bridge> <jxsl13> amn noob, yes
23:41 < ws-client> <ChillerDragon> i feel like the colors used to be stronger
23:41 < bridge> <jxsl13> üëÄ
23:41 < bridge> <Solly (bun bun)> those are fully opaque, but the default text color outline is transparent
23:41 < bridge> <Solly (bun bun)> i didnt change what the colors were
23:41 < bridge> <Solly (bun bun)> (i hope)
23:42 < bridge> <Solly (bun bun)> they are lighter than any part of the tees
23:42 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1352049639548915824/image.png?ex=67dc99d9&is=67db4859&hm=14303b75499bf209c4ba5d8877c024b0789af132d8ac196bb57a8b314814195c&
23:42 < ws-client> <ChillerDragon> i turned off the team colors the white is better to read for me
23:43 < ws-client> <ChillerDragon> but i feel even the white names in dm and block got a bit lighter
23:43 < ws-client> <ChillerDragon> maybe i am tripping
23:43 < bridge> <Solly (bun bun)> white cant really get lighter, maybe the text outline used to be fully opaque
23:43 < ws-client> <ChillerDragon> i just recently moved away from the hardcodet color but in chillerbot-ux
23:44 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1742424243.png
23:44 < ws-client> <ChillerDragon> the name on the right i can barley see
23:44 < ws-client> <ChillerDragon> this used to be easier to read iirc
23:45 < bridge> <Solly (bun bun)> ```cpp
23:45 < bridge> <Solly (bun bun)> TextRender()->TextColor(Rgb);
23:45 < bridge> <Solly (bun bun)>             TextRender()->TextOutlineColor(ColorRGBA(0.0f, 0.0f, 0.0f, 0.5f));
23:45 < bridge> <Solly (bun bun)>             TextRender()->Text(TeeRenderPos.x - TextRender()->TextWidth(FontSize, g_Config.m_PlayerName) / 2.0f, YOffset, FontSize, g_Config.m_PlayerName);
23:45 < bridge> <Solly (bun bun)> ```
23:45 < bridge> <Solly (bun bun)> i thought the default was 0.75
23:45 < bridge> <Solly (bun bun)> its not, its 0.3
23:46 < bridge> <Solly (bun bun)> that would probably be why
23:46 < bridge> <Solly (bun bun)> that can be reverted
23:46 < bridge> <robyt3> If the custom input device works exactly like existing devices we support then I'd say it's not cheating. Basically, I'd say inputs are supposed to be performed by the human player and the hardware should *directly* forward those inputs to the game. Pressing/touching keys/buttons should correspond directly to key events and moving a mouse/trackball/joystick/finger on a touch screen etc. should directly correspond to movement of the cursor.
23:47 < bridge> <jxsl13> thought about custom devices for handicapped people. like pedals, moving joysticks with the chin, etc.
23:48 < bridge> <Solly (bun bun)> what should a static member value iden look like
23:49 < bridge> <Solly (bun bun)> `m_s_`? or `s_m_`?
23:49 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1742424553.png
23:49 < ws-client> <ChillerDragon> this is some older version
23:49 < bridge> <robyt3> As long as they work like regular input devices without additional processing of the inputs it should be the same as building a custom keyboard or joystick in general
23:49 < ws-client> <ChillerDragon> seems like it lost a bit of the black border
23:49 < ws-client> <ChillerDragon> makes it harder to read
23:50 < bridge> <robyt3> `ms_Foo`
23:50 < bridge> <Solly (bun bun)> it did
23:51 < ws-client> <ChillerDragon> bug?
23:52 < bridge> <Solly (bun bun)> well... a unintended change
23:54 < bridge> <Solly (bun bun)> https://cdn.discordapp.com/attachments/293493549758939136/1352052520159281162/image.png?ex=67dc9c88&is=67db4b08&hm=59baa8f6d557fe4f804ec3be63a116d94b05329700b0e39dd82f279690537ac5&
23:54 < bridge> <Solly (bun bun)> recompiling ddnet for a single line change
23:57 < ws-client> <ChillerDragon> epic fast fix
23:57 < bridge> <Solly (bun bun)> it doesnt effect me and it definatley a regression for you if you find it harder to see stuff (i never noticed since i am in perma entities)
