00:11 < bridge> [ddnet] <Ryozuki> https://aaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.com/a?√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√°aa√Ç√•A√¶√£√¶√£√¶a√¶√¢√¢√Å√°√Ü√°√Ü√¶√¶√¶√¶√¶√¶√°√Ö√¶√°√•√§√•√£√•√£√•√Ä√¶√£√°√Ö√•√¢√•√Ü√•√Ñ√°√Ü√¶√°√°√Ü√¶√°√¶√§√¶√¢√¶√£√°√Ü
00:11 < bridge> [ddnet] <Ryozuki> lmao
00:11 < bridge> [ddnet] <Ryozuki> https://aaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.com/
00:11 < bridge> [ddnet] <Ryozuki> best website
00:13 < bridge> [ddnet] <lynn> a
00:18 < bridge> [ddnet] <Ryozuki> https://github.com/rust-lang/rust/blob/master/src/test/ui/weird-exprs.rs
00:18 < bridge> [ddnet] <Ryozuki> i found gold
00:18 < bridge> [ddnet] <Ryozuki> ```rust
00:18 < bridge> [ddnet] <Ryozuki> fn zombiejesus() {
00:18 < bridge> [ddnet] <Ryozuki>     loop {
00:18 < bridge> [ddnet] <Ryozuki>         while (return) {
00:18 < bridge> [ddnet] <Ryozuki>             if (return) {
00:18 < bridge> [ddnet] <Ryozuki>                 match (return) {
00:18 < bridge> [ddnet] <Ryozuki>                     1 => {
00:18 < bridge> [ddnet] <Ryozuki>                         if (return) {
00:18 < bridge> [ddnet] <Ryozuki>                             return
00:18 < bridge> [ddnet] <Ryozuki>                         } else {
00:18 < bridge> [ddnet] <Ryozuki>                             return
00:18 < bridge> [ddnet] <Ryozuki>                         }
00:18 < bridge> [ddnet] <Ryozuki>                     }
00:18 < bridge> [ddnet] <Ryozuki>                     _ => { return }
00:18 < bridge> [ddnet] <Ryozuki>                 };
00:18 < bridge> [ddnet] <Ryozuki>             } else if (return) {
00:18 < bridge> [ddnet] <Ryozuki>                 return;
00:18 < bridge> [ddnet] <Ryozuki>             }
00:18 < bridge> [ddnet] <Ryozuki>         }
00:19 < bridge> [ddnet] <Ryozuki>         if (return) { break; }
00:19 < bridge> [ddnet] <Ryozuki>     }
00:19 < bridge> [ddnet] <Ryozuki> }
00:19 < bridge> [ddnet] <Ryozuki> ```
00:19 < bridge> [ddnet] <Ryozuki> whats this
00:19 < bridge> [ddnet] <lynn> no stop
00:19 < bridge> [ddnet] <lynn> u should `return;` urself
00:19 < bridge> [ddnet] <Ryozuki> ```rust
00:19 < bridge> [ddnet] <Ryozuki> fn match_nested_if() {
00:19 < bridge> [ddnet] <Ryozuki>     let val = match () {
00:19 < bridge> [ddnet] <Ryozuki>         () if if if if true {true} else {false} {true} else {false} {true} else {false} => true,
00:19 < bridge> [ddnet] <Ryozuki>         _ => false,
00:19 < bridge> [ddnet] <Ryozuki>     };
00:19 < bridge> [ddnet] <Ryozuki>     assert!(val);
00:19 < bridge> [ddnet] <Ryozuki> }
00:19 < bridge> [ddnet] <Ryozuki> ```
00:19 < bridge> [ddnet] <Ryozuki> cursed
00:19 < bridge> [ddnet] <Ryozuki> ```rust
00:19 < bridge> [ddnet] <Ryozuki> fn monkey_barrel() {
00:19 < bridge> [ddnet] <Ryozuki>     let val = ()=()=()=()=()=()=()=()=()=()=()=()=()=()=()=()=()=()=()=()=()=()=()=()=();
00:19 < bridge> [ddnet] <Ryozuki>     assert_eq!(val, ());
00:19 < bridge> [ddnet] <Ryozuki> }
00:20 < bridge> [ddnet] <Ryozuki> ```
00:20 < bridge> [ddnet] <Ryozuki> ok i stop
00:20 < bridge> [ddnet] <lynn> wtf
00:20 < bridge> [ddnet] <Ryozuki> i think these are tests for the parser or smth
00:21 < bridge> [ddnet] <lynn> it's tests for the brain is what it is
00:21 < bridge> [ddnet] <Ryozuki> whats the result
00:21 < bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/842889418519740456/unknown.png
00:24 < bridge> [ddnet] <Nouaa> <a:CH_WumpusRainbow:715584939969740841>
00:24 < bridge> [ddnet] <Nouaa> https://cdn.discordapp.com/attachments/293493549758939136/842890159179432016/2021-05-15_00-20-49.mp4
00:24 < bridge> [ddnet] <Nouaa> useless but i like do this shitty cmds
00:26 < bridge> [ddnet] <Ryozuki> u should bind recording to a key
00:26 < bridge> [ddnet] <lynn> lol neat
00:26 < bridge> [ddnet] <lynn> and yes in obs it's really easy to do
00:26 < bridge> [ddnet] <lynn> mine is like ctrl-shift-r
00:26 < bridge> [ddnet] <Ryozuki> i have bound f7 on obs and also f7 on ddnet to start the demo
00:26 < bridge> [ddnet] <lynn> wow good tip
00:27 < bridge> [ddnet] <lynn> how can you slice a part of a demo or export just a part of it
00:27 < bridge> [ddnet] <lynn> i never knew how
00:27 < bridge> [ddnet] <Nouaa> im using geforce experience but i have some problems with mt graphique card
00:27 < bridge> [ddnet] <Ryozuki> imagine not using obs
00:28 < bridge> [ddnet] <Nouaa> imagine using xplit
00:28 < bridge> [ddnet] <Nouaa> imagine using xsplit
00:28 < bridge> [ddnet] <Ryozuki> this is not 2010 anymore
00:28 < bridge> [ddnet] <Nouaa> c:
00:28 < bridge> [ddnet] <Ryozuki> imagine using fraps
00:28 < bridge> [ddnet] <lynn> wait wat
00:28 < bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/842891229439066123/Fraps_Logo.png
00:28 < bridge> [ddnet] <lynn> that looks like obs but like, skinned
00:28 < bridge> [ddnet] <Ryozuki> if u never used this u had no childhood
00:28 < bridge> [ddnet] <Nouaa> lol i used that when i was playing minecraft with 10 fps
00:28 < bridge> [ddnet] <lynn> doesnt it? @Ryozuki
00:29 < bridge> [ddnet] <Ryozuki> :monkalaugh:
00:29 < bridge> [ddnet] <lynn> i swear i thought it was obs already xD
00:29 < bridge> [ddnet] <Nouaa> :PES5_Dumb:
00:33 < bridge> [ddnet] <Nouaa> where can I change the vote system?
00:42 < bridge> [ddnet] <lynn> is the .map format something you can reasonably parse without the client / server?
00:43 < bridge> [ddnet] <lynn> i know nothing about it but if it's a more nuanced topic i can just check it out later
00:45 < bridge> [ddnet] <heinrich5991> it's a custom binary format
00:45 < bridge> [ddnet] <heinrich5991> there are a couple of libraries to parse it
00:46 < bridge> [ddnet] <lynn> alright
00:46 < bridge> [ddnet] <lynn> i am thinking of making a tool that does some map linting
00:46 < bridge> [ddnet] <lynn> like suspected missing corners, general bad mapping habits, etc
00:46 < bridge> [ddnet] <heinrich5991> ask @Patiga, he's doing the same
00:46 < bridge> [ddnet] <lynn> oh lol
00:46 < bridge> [ddnet] <heinrich5991> maybe a bit more lower level though
00:46 < bridge> [ddnet] <lynn> then in that case ill take a look at that
00:47 < bridge> [ddnet] <lynn> patiga, if you can post a link to whatever you're working on i would be interested :D
01:05 < bridge> [ddnet] <murpi> locally I'd recommend using losslessCut
01:05 < bridge> [ddnet] <murpi> https://github.com/mifi/lossless-cut/releases
01:07 < bridge> [ddnet] <lynn> thanks
01:08 < bridge> [ddnet] <lynn> i just need to set binds to record and stop recording
01:08 < bridge> [ddnet] <Ravie> @lynn you can crop demos in the client using those <> buttons to select a part and the camera button to save new demo
01:08 < bridge> [ddnet] <Ravie> https://cdn.discordapp.com/attachments/293493549758939136/842901114994556978/unknown.png
01:08 < bridge> [ddnet] <lynn> and export the whole thing
01:08 < bridge> [ddnet] <lynn> oh huh
01:08 < bridge> [ddnet] <murpi> oh yeah, that works aswell
01:09 < bridge> [ddnet] <lynn> so like
01:09 < bridge> [ddnet] <Ravie> I wonder why that camera button doesn't have an icon more related to saving tho
01:09 < bridge> [ddnet] <lynn> if i do < at a part, and then play or seek in the demo, and click >, that sets the range?
01:10 < bridge> [ddnet] <lynn> and then camera button exports the selection
01:10 < bridge> [ddnet] <Ravie> yeah < is start and > is end
01:10 < bridge> [ddnet] <lynn> cool thx
01:10 < bridge> [ddnet] <lynn> i didnt know what those buttons did but i should have expected that lol
01:16 < bridge> [ddnet] <Patiga> @lynn my rust map parsing library is here: https://gitlab.com/Patiga/twmap (or on crates.io here https://crates.io/crates/twmap)
01:16 < bridge> [ddnet] <Patiga> While parsing it throws parsing errors where it deems them sensible, but for lesser problems it logs warnings
01:16 < bridge> [ddnet] <Patiga> To save maps again they need to pass all checks again, the library is documentet here: https://docs.rs/twmap/0.2.1/twmap/
01:18 < bridge> [ddnet] <Nouaa> where can i change the vote system? i mean i want when one player press for exemple "Rainbow" he have automatically the rainbow without trying to start a real vote with f3 or f4
01:18 < bridge> [ddnet] <Patiga> the library also ships some binaries for debugging maps, some editing/extracting stuff
01:18 < bridge> [ddnet] <lynn> really cool
01:19 < bridge> [ddnet] <Patiga> if you encounter problems, please just ping me :)
01:19 < bridge> [ddnet] <Patiga> (though I'm gonna go to sleep for today)
01:38 < bridge> [ddnet] <heinrich5991> @Nouaa src/game/server/gamecontext.cpp, look for NETMSGTYPE_CL_CALLVOTE
19:34 < bridge> [ddnet] <WAV> can you maybe make 2 different commands for toggling spec team and solo parts?
20:13 < bridge> [ddnet] <TsFreddie> https://streamable.com/92afs7
20:20 < bridge> [ddnet] <Ryozuki> https://blog.rust-lang.org/2021/05/15/six-years-of-rust.html
20:20 < bridge> [ddnet] <Ryozuki> ü•≥
21:11 < bridge> [ddnet] <Ryozuki> https://blog.rust-lang.org/2021/05/15/six-years-of-rust.html
21:11 < bridge> [ddnet] <Ryozuki> https://forum.nim-lang.org/t/7983
21:11 < bridge> [ddnet] <Ryozuki> nim 2.0 :poggers:
21:11 < bridge> [ddnet] <Ryozuki> "nimrocks" :monkalaugh:
22:41 < bridge> [ddnet] <Jupstar ‚ú™> Sounds interesting to convert to other languages first and having so many options to enable certain garbage collectors etc., but for some reason I'm a syntax hater
22:59 < bridge> [ddnet] <Ryozuki> https://twitter.com/wongmjane/status/1393541248049303555
22:59 < bridge> [ddnet] <Ryozuki> "Twitter is calling their upcoming Subscription Service ‚ÄúTwitter Blue‚Äù, priced at $2.99/month for now, including paid features like:"
23:00 < bridge> [ddnet] <Ryozuki> :monkaS:
23:02 < bridge> [ddnet] <Ryozuki> https://www.engadget.com/twitter-blue-subscription-leak-191613918.html :monkaS:
23:02 < bridge> [ddnet] <Ryozuki> i find it funny they want to add undo tweet when u can delete tweets already
