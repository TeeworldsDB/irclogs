11:01 <+bridge> [ddnet] <ChillerDragon> send help mi map is broken
11:01 <+bridge> [ddnet] <ChillerDragon> 
11:01 <+bridge> [ddnet] <ChillerDragon> https://cdn.discordapp.com/attachments/293493549758939136/564374164149108746/ChillBlock5_exp.map
11:01 <+bridge> [ddnet] <ChillerDragon> crashes my ddnet client if i try to join or open in editor
11:02 <+bridge> [ddnet] <ChillerDragon> works in vanilla 0.6.4 tho
11:04 <+bridge> [ddnet] <ChillerDragon> ah no it crashes my ddnet server on join and client on editor open
11:09 <+bridge> [ddnet] <ChillerDragon> k saved it with vanilla client and fixed speedups/front and tele manually. Cant remember exactly but i think i did some experiments with tml back then. So i got the map back. But still a crash bug that ddnet has and vanilla doesnt. So if somebody is bored pls fix xd
11:16 <+bridge> [ddnet] <deen> Crashing servers and client with maps is extremely easy, I tried fuzzing it once
11:16 <+bridge> [ddnet] <ChillerDragon> ya
11:16 <+bridge> [ddnet] <deen> all the accesses seemed to be reads instead of writes so it's probably not THAT bad
11:16 <+bridge> [ddnet] <ChillerDragon> but even vanilla 0.6.4 can handle this map
11:16 <+bridge> [ddnet] <deen> basically we trust the map to report its data correctly and then just read over borders
11:17 <+bridge> [ddnet] <ChillerDragon> didnt some guy reported is as security vuln latley in vanilla?
11:17 <+bridge> [ddnet] <deen> vanilla doesn't support many of the game layers ddnet does
11:17 <+bridge> [ddnet] <deen> oh?
11:17 <+bridge> [ddnet] <deen> link please
11:17 <+bridge> [ddnet] <ChillerDragon> lemme check
11:18 <+bridge> [ddnet] <ChillerDragon> https://github.com/teeworlds/teeworlds/issues/2071
11:28 <+littlething> hey guys can someone help me a quide ? about in network.py I think you can only add whole 32 bit ints at a time. right?
11:32 <@deen> I guess
11:33 <@deen> There's a NetIntRange, but that still seems to put a full int in
11:34 <+bridge> [ddnet] <deen> @ChillerDragon sounds good, want to cherry-pick that over to ddnet?
11:35 <+bridge> [ddnet] <ChillerDragon> do i look like a git wizard?
11:35 <+bridge> [ddnet] <ChillerDragon> xd but i can try
11:35 <+bridge> [ddnet] <deen> you can start learning
11:36 <+bridge> [ddnet] <deen> and you can also test if that fixes your issue
11:37 <+littlething> so can i add more ?
11:41 <+bridge> [ddnet] <ChillerDragon> dont think so tho @deen because their fix is like a few days old and i tested in 0.6.4 but ye lez see
12:02 <+bridge> [ddnet] <fokkonaut> @ChillerDragon yea, it was our tml test, wasnt it?
12:06 <+bridge> [ddnet] <ChillerDragon> no even way older think it was my first test
12:22 <+bridge> [ddnet] <ChillerDragon> @deen i guess it is easier to copy over the few lines manually instead of using git magic
12:23 <+bridge> [ddnet] <ChillerDragon> but we loose the real authors of the commits then ._.
12:39 <+bridge> [ddnet] <ChillerDragon> i dont think ddnet is affected by this anways. Because vanilla added way more code to the Load() function .
12:39 <+bridge> [ddnet] <ChillerDragon> 
12:39 <+bridge> [ddnet] <ChillerDragon> Left ddnet, right vanilla
12:39 <+bridge> [ddnet] <ChillerDragon> https://cdn.discordapp.com/attachments/293493549758939136/564398942482071552/unknown.png
12:57 <+bridge> [ddnet] <ChillerDragon> aaaah fuck
12:57 <+bridge> [ddnet] <ChillerDragon> -.-
12:58 <+bridge> [ddnet] <ChillerDragon> wtf where did the commits go? I did cherry pick solved the conflicts and git said i should commit. And now im the only commit there and the one i cherrypicked disapeared
13:12 <+bridge> [ddnet] <ChillerDragon> call me git wizard! Bitch pls
13:14 <+bridge> [ddnet] <n000b> @ChillerDragon git wizard
15:50 <+bridge> [ddnet] <ChillerDragon> bois?
15:50 <+bridge> [ddnet] <ChillerDragon> the copy and pasting is not working on linux huh?
15:51 <+bridge> [ddnet] <ChillerDragon> or am i pressing the wrong key?
15:51 <+bridge> [ddnet] <ChillerDragon> ðŸ˜œ
16:09 <+bridge> [ddnet] <ChillerDragon> does anyone know a fix for tabbing back into ddnet client on debian10 ? The window is not centered anymore
16:12 <+bridge> [ddnet] <ChillerDragon> 
16:12 <+bridge> [ddnet] <ChillerDragon> https://cdn.discordapp.com/attachments/293493549758939136/564452401029971978/image0.jpg
16:28 <+bridge> [ddnet] <Ryozuki> 
16:28 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/564456528606789632/niczdwkq2uq21.png
16:29 <+bridge> [ddnet] <RafaelFF> epic ðŸ˜ƒ
16:30 <+bridge> [ddnet] <RafaelFF> sharing in a GNOME group.
16:31 <+bridge> [ddnet] <ChillerDragon> zoozti
16:31 <+bridge> [ddnet] <ChillerDragon> xd
16:33 <+bridge> [ddnet] <ChillerDragon> remove solotiles -> problem solved
16:33 <+bridge> [ddnet] <á¶°Â°KonÍ§sti> :f3:
17:19 <+bridge> [ddnet] <Ryozuki> @á¶°Â°KonÍ§sti "Should not be too hard to fix i guess?" go fix it then
17:19 <+bridge> [ddnet] <ChillerDragon> mean
17:19 <+bridge> [ddnet] <Ryozuki> no, he is the mean one
17:23 <+bridge> [ddnet] <jao> how does he come to this conclusion ðŸ¤”
17:25 <+bridge> [ddnet] <onby> i guess cus it already works correctly in some places so it could be a simple fix that doesnt require alot of new code
17:25 <+bridge> [ddnet] <jao> where does anything related to solo prediction work?
17:26 <+bridge> [ddnet] <onby> probably in gameclient.cpp, players.cpp, maybe gamecore.cpp
17:50 <+bridge> [ddnet] <jao> don't think client knows whether another player is in solo or not
17:56 <+bridge> [ddnet] <onby> does /showothers hide people who are in solo
17:56 <+bridge> [ddnet] <onby> if so then doesnt it know somehow
17:57 <@heinrich5991> all / commands are handled by the server
17:57 <@heinrich5991> this only indicates that the server knows that ^^
17:58 <+bridge> [ddnet] <onby> oo right
18:51 <+bridge> [ddnet] <Ryozuki> @á¶°Â°KonÍ§sti https://media.discordapp.net/attachments/314776480880132097/564492483791290399/fixed-0.jpg?width=1216&height=684
18:51 <+bridge> [ddnet] <Ryozuki> is this what u wanted
18:55 <+bridge> [ddnet] <á¶°Â°KonÍ§sti> This is what i mean Ye xd
18:55 <+bridge> [ddnet] <á¶°Â°KonÍ§sti> Or idk
18:56 <+bridge> [ddnet] <Ryozuki> ok now pay me 10â‚¬
18:56 <+bridge> [ddnet] <á¶°Â°KonÍ§sti> its just when ur in solopart and watch people playing u will not see the hookcoll yellow when they aim a tee
19:02 <+bridge> [ddnet] <onby> ryozooz
19:03 <+bridge> [ddnet] <onby> wtf 3000 fps
19:03 <+bridge> [ddnet] <ßŠÉ²Ê„É˜É¾É³É”> *ryozoOz*
19:03 <+bridge> [ddnet] <ßŠÉ²Ê„É˜É¾É³É”> *ryozoOoz*
19:08 <+bridge> [ddnet] <Ryozuki> @onby linux + good pc
19:08 <+bridge> [ddnet] <Ryozuki> xd
19:14 <+bridge> [ddnet] <CYBFITTNER> linux + potato pc + no design + overclock
19:14 <+bridge> [ddnet] <Ryozuki> it's funny cuz Gameclient on a method named OnRender is sending packets to the server, gg
19:17 <+bridge> [ddnet] <heinrich5991> also in vanilla ._.
19:17 <+bridge> [ddnet] <heinrich5991> (src/game/clinet/components/chat.cpp, `CChat::OnRender`)
19:17 <+bridge> [ddnet] <CYBFITTNER> vanilla no lag
19:20 <+bridge> [ddnet] <Ryozuki> HADOKEN!!!
19:20 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/564499823743467540/unknown.png
19:21 <+bridge> [ddnet] <Ryozuki> weeb code
19:21 <+bridge> [ddnet] <heinrich5991> what's hadoken?
19:21 <+bridge> [ddnet] <Ryozuki> https://www.urbandictionary.com/define.php?term=hadoken
19:21 <+bridge> [ddnet] <CYBFITTNER> its the thing that the guy that fights people spams
19:37 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/314776480880132097/564504123471429655/fixed-0.jpg
19:38 <+bridge> [ddnet] <Ryozuki> alpha for solo players!
19:38 <+bridge> [ddnet] <Ryozuki> yay
19:38 <+bridge> [ddnet] <Ryozuki> now i just have to fix the colision bug and the hook moving a little
19:41 <+bridge> [ddnet] <Ryozuki> fixed nameplate alpha too xd
19:42 <+bridge> [ddnet] <snail> what does it change
19:42 <+bridge> [ddnet] <snail> from /showothers
19:42 <+bridge> [ddnet] <snail> @Ryozuki
19:42 <+bridge> [ddnet] <Ryozuki> ?
19:43 <+bridge> [ddnet] <Ryozuki> on solo players
19:43 <+bridge> [ddnet] <Ryozuki> before it was u see him or not
19:43 <+bridge> [ddnet] <Ryozuki> now if u have showothers it appliues the alpha
19:43 <+bridge> [ddnet] <Ryozuki> from teams
19:43 <+bridge> [ddnet] <Ryozuki> idk if i explain good
19:43 <+bridge> [ddnet] <snail> no
19:43 <+bridge> [ddnet] <snail> xd
19:43 <+bridge> [ddnet] <Ryozuki> xd
19:43 <+bridge> [ddnet] <Ryozuki> before u could see fully or not at all solo players
19:43 <+bridge> [ddnet] <Ryozuki> u get that
19:43 <+bridge> [ddnet] <snail> ah
19:43 <+bridge> [ddnet] <snail> i get it
19:43 <+bridge> [ddnet] <Ryozuki> gud
20:00 <+bridge> [ddnet] <Ryozuki> im wondering where does the client checks for colisions i want to fix the bug where if u are not in solo and other is u see a weird collision
20:00 <+bridge> [ddnet] <Ryozuki> intersectcharacter doesnt do this
20:00 <+bridge> [ddnet] <deen> Well, how would you know that the other player is in solo=?
20:00 <+bridge> [ddnet] <deen> That information is not sent to client yet
20:00 <+bridge> [ddnet] <Ryozuki> i added it
20:00 <+bridge> [ddnet] <deen> ok
20:01 <+bridge> [ddnet] <Ryozuki> i got m_IsSolo on cnet CNetObj_Character
20:01 <+bridge> [ddnet] <deen> that sounds like it would break compatibility with vanilla?
20:01 <+bridge> [ddnet] <Ryozuki> hmm
20:01 <+bridge> [ddnet] <deen> I thought we should use the new protocol extension thing
20:01 <+bridge> [ddnet] <Ryozuki> if you explain me how i can try
20:02 <+bridge> [ddnet] <Ryozuki> what is it
20:02 <+bridge> [ddnet] <deen> and maybe send a single uint64 where each bit says whether a tee is in solo
20:02 <+bridge> [ddnet] <deen> I don't know
20:02 <+bridge> [ddnet] <Ryozuki> the network character by hmh
20:02 <+bridge> [ddnet] <Ryozuki> was closed
20:02 <+bridge> [ddnet] <deen> see protocol_ex_msgs.h
20:03 <+bridge> [ddnet] <Ryozuki> :o
20:03 <+bridge> [ddnet] <deen> the @DDNet.tw things I thin
20:04 <+bridge> [ddnet] <Ryozuki> what domain i put? ddnet.tw
20:04 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/564510927127314432/unknown.png
20:05 <+bridge> [ddnet] <deen> yes
20:05 <+bridge> [ddnet] <deen> if your goal is ddnet server/client
20:05 <+bridge> [ddnet] <Ryozuki> y
20:09 <+bridge> [ddnet] <Ryozuki> how to convert a unsigned char * to uin64 xD
20:10 <+bridge> [ddnet] <deen> (uint64_t)
20:10 <+bridge> [ddnet] <Ryozuki> int SoloPlayers = (uint64_t)Unpacker.GetRaw(64);
20:10 <+bridge> [ddnet] <Ryozuki> this easy?
20:10 <+bridge> [ddnet] <deen> GetRaw(64)?
20:10 <+bridge> [ddnet] <Ryozuki> const unsigned char *CUnpacker::GetRaw(int Size)
20:10 <+bridge> [ddnet] <Ryozuki> i can only get this
20:10 <+bridge> [ddnet] <Ryozuki> or a int
20:11 <+bridge> [ddnet] <Ryozuki> (or a string)
20:11 <+bridge> [ddnet] <deen> I'd assume Size is number of bytes, not bits
20:11 <+bridge> [ddnet] <Ryozuki> oh
20:11 <+bridge> [ddnet] <Ryozuki> so 8
20:12 <+bridge> [ddnet] <deen> the way we usually do it is not that pretty
20:12 <+bridge> [ddnet] <deen> unsigned GhostMapCrc = (m_Header.m_aCrc[0] << 24) | (m_Header.m_aCrc[1] << 16) | (m_Header.m_aCrc[2] << 8) | (m_Header.m_aCrc[3]);
20:12 <+bridge> [ddnet] <deen> is for 4 bytes for example
20:13 <+bridge> [ddnet] <Ryozuki> uhm
20:13 <+bridge> [ddnet] <Ryozuki> `uint64_t SoloPlayers = (uint64_t)Unpacker.GetRaw(8);`
20:13 <+bridge> [ddnet] <Ryozuki> xD
20:13 <+bridge> [ddnet] <deen> so you get out each byte and shift them so that they all fit together
20:13 <+bridge> [ddnet] <deen> what you're doing casts the pointer
20:13 <+bridge> [ddnet] <Ryozuki> ok
20:13 <+bridge> [ddnet] <deen> not the actual content
20:13 <+bridge> [ddnet] <Ryozuki> i get what u mean
20:14 <+bridge> [ddnet] <deen> You could cast the content straight to uint64_t and probably it would mostly work, but it's probably not standard compliant
20:16 <+bridge> [ddnet] <deen> and about collision, I'd look for occurences of the player_collision tune
20:17 <+bridge> [ddnet] <deen> that leads to gamecore.cpp:417
20:17 <+bridge> [ddnet] <deen> sounds good: // handle player <-> player collision
20:17 <+bridge> [ddnet] <Ryozuki> thanks
20:18 <+bridge> [ddnet] <Ryozuki> iff i shift << 56 clang tidy says it has more width than a unsigned char, i guess i should cast every array memeber to uint64? xD
20:19 <+bridge> [ddnet] <Ryozuki> or it isnt needed
20:22 <+bridge> [ddnet] <Ryozuki> The behavior is undefined if the right operand is negative, or greater than or equal to the length in bits of the promoted left operand.
20:22 <+bridge> [ddnet] <Ryozuki> so yes i have to cast
20:22 <+bridge> [ddnet] <deen> yeah
20:22 <+bridge> [ddnet] <Ryozuki> ugly code (tm)
20:22 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/564515461883232297/unknown.png
20:22 <+bridge> [ddnet] <deen> told you
20:33 <+bridge> [ddnet] <heinrich5991> not even a unicode â„¢
20:34 <+bridge> [ddnet] <deen> @heinrich5991 do you remember if copy_mem for the same thing would be fine on all kinds of platforms?
20:34 <+bridge> [ddnet] <deen> @heinrich5991 also, want the walkthrough now?
20:34 <+bridge> [ddnet] <heinrich5991> no, because of big-endian vs little-endian
20:34 <+bridge> [ddnet] <deen> ah, right
20:35 <+bridge> [ddnet] <heinrich5991> yea, let me look at the PR again
20:35 <+bridge> [ddnet] <deen> I think we still have locations that do it with mem_copy though
20:35 <+bridge> [ddnet] <deen> might have to fix them then
20:35 <+bridge> [ddnet] <heinrich5991> yes
20:35 <+bridge> [ddnet] <heinrich5991> we have faulty code for big-endian machines, at least in the map reading code
20:36 <+bridge> [ddnet] <deen> weird, no one noticed on debian?
20:36 <+bridge> [ddnet] <deen> i thought on debian we're built for dozens of platforms or something like that
20:36 <+bridge> [ddnet] <heinrich5991> possibly elsewhere as well, if no one tests it, it doesn't work
20:36 <+bridge> [ddnet] <heinrich5991> I don't know if anyone actually executes the stuff or whether they just build it
20:36 <+bridge> [ddnet] <heinrich5991> we don't have a test suite for datafiles yet, that might uncover it
20:37 <+bridge> [ddnet] <deen> true enough
20:37 <+bridge> [ddnet] <deen> probably no one tests it
20:37 <+bridge> [ddnet] <deen> https://packages.debian.org/sid/ddnet see ports at the bottom
20:37 <+bridge> [ddnet] <heinrich5991> mips is le
20:39 <+bridge> [ddnet] <heinrich5991> @deen okay, so the idea behind OnCompletion is that it can close the file and thus check whether we wrote correctly?
20:39 <+bridge> [ddnet] <heinrich5991> if that fails, we just go to the generic error path?
20:40 <+bridge> [ddnet] <heinrich5991> eh, big endian, sorry
20:40 <+bridge> [ddnet] <heinrich5991> we're on little endian by default (x86, arm, â€¦)
20:40 <+bridge> [ddnet] <Ryozuki> :frozen:
20:41 <+bridge> [ddnet] <deen> I changed OnCompletion?
20:41 <+bridge> [ddnet] <heinrich5991> yes, you did. and you're also claling it in the error path
20:42 <+bridge> [ddnet] <Ryozuki> whats the reason behind putting everything on a interface and on a class ? IServer CServer Iwathever and Cwathever
20:42 <+bridge> [ddnet] <Ryozuki> double work
20:42 <+bridge> [ddnet] <heinrich5991> so that they have a cleanly defined interface, in theory
20:42 <+bridge> [ddnet] <deen> @heinrich5991 oops, that seems unintentional, let me take another look
20:42 <+bridge> [ddnet] <Ryozuki> doesnt look at that clean :twintri:
20:42 <+bridge> [ddnet] <Ryozuki> doesnt look that clean :twintri:
20:43 <+bridge> [ddnet] <heinrich5991> it's kinda clean in vanilla, ddnet kinda walks over it due to casting it to CServer anyway
20:43 <+bridge> [ddnet] <deen> ah, the idea is that if you don't call OnCompletion then the updater is just stuck
20:43 <+bridge> [ddnet] <deen> and nothing will be shown
20:43 <+bridge> [ddnet] <deen> so you need to call it and OnCompletion can then do something depending on whether m_State is HTTP_DONE/ERROR/whatever
20:45 <+bridge> [ddnet] <deen> and before it was called in most error paths, just not all consistently
20:45 <+bridge> [ddnet] <heinrich5991> okay
21:10 <+bridge> [ddnet] <Ryozuki> ```cpp
21:10 <+bridge> [ddnet] <Ryozuki> void CServer::GetSolos(unsigned char *aPlayerSolos)
21:10 <+bridge> [ddnet] <Ryozuki> {
21:10 <+bridge> [ddnet] <Ryozuki>     for(int i = 8; i > 0; i--) {
21:10 <+bridge> [ddnet] <Ryozuki>         unsigned char x = 0;
21:10 <+bridge> [ddnet] <Ryozuki>         for(int j = 8; j >= 0; j--) {
21:10 <+bridge> [ddnet] <Ryozuki>             x |= m_aClients[64 - (i * 8 + j)].m_Solo << j;
21:10 <+bridge> [ddnet] <Ryozuki>         }
21:10 <+bridge> [ddnet] <Ryozuki>         aPlayerSolos[i] = x;
21:10 <+bridge> [ddnet] <Ryozuki>     }
21:10 <+bridge> [ddnet] <Ryozuki> }``` is this clever, or really stupid
21:10 <+bridge> [ddnet] <Ryozuki> :twintri:
21:11 <+bridge> [ddnet] <deen> sounds much more expensive than the previous solution
21:11 <+bridge> [ddnet] <Ryozuki> wich one is it?
21:11 <+bridge> [ddnet] <Ryozuki> which
21:11 <+bridge> [ddnet] <Ryozuki> the cast?
21:11 <+bridge> [ddnet] <deen> yeah
21:12 <+bridge> [ddnet] <Ryozuki> xD
21:12 <+bridge> [ddnet] <Ryozuki> i spend 10 mins to do this
21:12 <+bridge> [ddnet] <Ryozuki> :twinbop:
21:13 <+bridge> [ddnet] <Ryozuki> also this limits us to 64p
21:13 <+bridge> [ddnet] <deen> yes
21:13 <+bridge> [ddnet] <Ryozuki> u can only send 1 int with the packet extension?
21:13 <+bridge> [ddnet] <Ryozuki> hmm
21:14 <+bridge> [ddnet] <deen> I'd guess you can send anything
21:14 <+bridge> [ddnet] <Ryozuki> i can put a int with the client size
21:17 <+bridge> [ddnet] <Ryozuki> this is more complicated than i expected
21:17 <+bridge> [ddnet] <Ryozuki> just to keep vanilla compat :cammostripes:
21:18 <+bridge> [ddnet] <Ryozuki> adding m_IsSolo to network.py is way easier and faster :monkaS:
21:18 <+bridge> [ddnet] <deen> not just vanilla compat, also compat with other clients and old ddnetclients, right?
21:19 <+bridge> [ddnet] <deen> @heinrich5991 the protocol extensions are the way to go for that, right?
21:22 <+bridge> [ddnet] <heinrich5991> hmm
21:22 <+bridge> [ddnet] <heinrich5991> better to add a new netobj with the protocol extensions
21:22 <+bridge> [ddnet] <heinrich5991> demos need that thing available in every tick
21:23 <+bridge> [ddnet] <Ryozuki> it would be cool to have packet extensions too
21:23 <+bridge> [ddnet] <Ryozuki> instead of brand new packet
21:25 <+bridge> [ddnet] <Ryozuki> 
21:25 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/564531118439661579/tyf81c5c2vq21.png
21:28 <+bridge> [ddnet] <heinrich5991> @Ryozuki how would you do that?
21:30 <+bridge> [ddnet] <Ryozuki> I may be ignorant, but maybe checking the packet length
21:30 <+bridge> [ddnet] <Ryozuki> and having a default
21:30 <+bridge> [ddnet] <Ryozuki> if the server doesnt support the extended
21:30 <+bridge> [ddnet] <Ryozuki> it would work for this m_solo case maybe
23:32 <+bridge> [ddnet] <heinrich5991> it would probably work if you'd introduce a new netobject
23:32 <+bridge> [ddnet] <heinrich5991> old netobjects have a fixed size due to the way they're compressed
23:33 <+bridge> [ddnet] <heinrich5991> maybe add a `CNetObj_CharacterExtended` or so
