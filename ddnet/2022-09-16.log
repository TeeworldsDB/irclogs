01:00 <+bridge> [ddnet] <Learath2> Mh, couldn't finish it, such a shame
01:01 <+bridge> [ddnet] <Learath2> Need to thread a new void Shutdown() through kernel interfaces so the signal for a shutdown can go through without the destructors happening
01:50 <+bridge> [ddnet] <Neben> this is the best
01:50 <+bridge> [ddnet] <Neben> most useful commit so far
06:17 <+bridge> [ddnet] <Voxel> @heinrich5991 Alright, I hopefully fixed all the nitpicks and everything on #5802 . It should be ready to be squashed.
06:17 <+bridge> [ddnet] <DDNet> https://github.com/ddnet/ddnet/pull/5802
06:20 <+bridge> [ddnet] <Voxel> Anyways, I'll fix the menu really quickly, because apparently the kerning got messed up.
06:20 <+bridge> [ddnet] <Voxel> Also I'm thinking about adding a button that makes all the colors match the current rifle laser color.
06:20 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1020187491736764426/unknown.png
06:21 <+bridge> [ddnet] <Voxel> Anyways, I'll fix the menu really quickly, because apparently the spacing got messed up.
06:21 <+bridge> [ddnet] <Voxel> Also I'm thinking about adding a button that makes all the colors match the current rifle laser color.
06:21 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1020187491736764426/unknown.png
06:22 <+bridge> [ddnet] <Voxel> And maybe a Reset all button to make it less tedious?
08:22 <+bridge> [ddnet] <Ryozuki> @Voxel can i add the commit images to the wiki
08:22 <+bridge> [ddnet] <Ryozuki> for preservation purposes ofc
08:23 <+bridge> [ddnet] <Voxel> yea
08:23 <+bridge> [ddnet] <Ryozuki> :BASED:
08:24 <+bridge> [ddnet] <Ryozuki> xD
08:27 <+bridge> [ddnet] <Ryozuki> @Voxel do u wanna license this as ccbysa 4 or not?
08:27 <+bridge> [ddnet] <Ryozuki> :BASED: you can be more based
08:27 <+bridge> [ddnet] <Ryozuki> (the wiki allows to choose what license it uses)
08:28 <+bridge> [ddnet] <Ryozuki> <https://creativecommons.org/licenses/by-sa/4.0/>
08:28 <+bridge> [ddnet] <Voxel> yea that sounds fair
08:33 <+bridge> [ddnet] <Ryozuki> https://wiki.ddnet.org/wiki/File:Voxel_does_pull_request_part1.png
08:33 <+bridge> [ddnet] <Ryozuki> :bluekitty:
10:21 <+bridge> [ddnet] <Mr.Gh0s7> Now we wait for the stalking to begin üòâ
10:21 <+bridge> [ddnet] <Mr.Gh0s7> Tees featured ChillerDragon.*
11:03 <+bridge> [ddnet] <Ryozuki> @sone learning rust will make u a better dev
11:04 <+bridge> [ddnet] <Ryozuki> :BASED:
11:04 <+bridge> [ddnet] <Ryozuki> I dont think its any more complicated than c++
11:04 <+bridge> [ddnet] <Ryozuki> You just use the brain power at the start, not when hitting the segfaults
11:07 <+bridge> [ddnet] <sone> C++ is already too complicated
11:07 <+bridge> [ddnet] <Ryozuki> It is
11:07 <+bridge> [ddnet] <Ryozuki> Rust is complicated because it solves complicated problems
11:07 <+bridge> [ddnet] <sone> nice one
11:07 <+bridge> [ddnet] <Ryozuki> Its true tho
11:08 <+bridge> [ddnet] <Ryozuki> How much c do you know?
11:08 <+bridge> [ddnet] <Ryozuki> Did you do multithreaded programs?
11:08 <+bridge> [ddnet] <sone> My brother knows a lot of C.
11:08 <+bridge> [ddnet] <Ryozuki> How many segfaults u had
11:08 <+bridge> [ddnet] <Cellegen | RiH> :justatest: I had over 100 in school
11:09 <+bridge> [ddnet] <Cellegen | RiH> in one day, at once
11:09 <+bridge> [ddnet] <Ryozuki> cool story xD
11:09 <+bridge> [ddnet] <sone> Are you guys afraid of segfaults?
11:09 <+bridge> [ddnet] <sone> xD
11:09 <+bridge> [ddnet] <Cellegen | RiH> ahm, if you don't know wtf are you doing, yeah you should
11:10 <+bridge> [ddnet] <Cellegen | RiH> otherwise, just trying out different methods are fine
11:10 <+bridge> [ddnet] <Ryozuki> Afraid? Its not a matter of being afraid
11:10 <+bridge> [ddnet] <Ryozuki> Segfaults crash the program, bad user experience
11:10 <+bridge> [ddnet] <Ryozuki> Also they are a security issue
11:10 <+bridge> [ddnet] <sone> Memory errors are semantics errors
11:11 <+bridge> [ddnet] <Cellegen | RiH> well once you get memory errors, it's difficult to recover data from that
11:11 <+bridge> [ddnet] <Ryozuki> :fuckyousnail:
11:11 <+bridge> [ddnet] <Cellegen | RiH> otherwise the engine can predict an outcome and apply the different result
11:11 <+bridge> [ddnet] <sone> A program can have arithmetic errors with no memory errors
11:12 <+bridge> [ddnet] <Cellegen | RiH> arithmetic? hm
11:12 <+bridge> [ddnet] <sone> Semantics comes first
11:12 <+bridge> [ddnet] <Cellegen | RiH> I think so, first semntics, then arithmetic, then everything else which covers up rendering
11:13 <+bridge> [ddnet] <sone> The purpose is to reach to a program that works correctly.
11:14 <+bridge> [ddnet] <Cellegen | RiH> sounds fun if you want to debug
11:14 <+bridge> [ddnet] <Cellegen | RiH> :justatest:
11:14 <+bridge> [ddnet] <Ryozuki> You mean you only care it does the business logic correctly?
11:14 <+bridge> [ddnet] <Ryozuki> In my book a program that relies on UB or has memory unsafetyness / data races is not a program that works correctly
11:14 <+bridge> [ddnet] <Ryozuki> But to each their own
11:15 <+bridge> [ddnet] <Cellegen | RiH> bus goes br
11:16 <+bridge> [ddnet] <sone> Relying on UB sounds funny.
11:17 <+bridge> [ddnet] <Cellegen | RiH> if I would be a software engineer, I would say: Yeah it is funny, until it isn't
11:17 <+bridge> [ddnet] <sone> I think the point I am trying to get across is that I like C more than Rust and GDScript. It's what my brain understands better so that's what I use.
11:18 <+bridge> [ddnet] <Cellegen | RiH> gdscript is made with C++ with a bit of python adaptation
11:19 <+bridge> [ddnet] <sone> I could use gdscript extensively but it's slower than GDNative
11:19 <+bridge> [ddnet] <Cellegen | RiH> doesn't matter, if you have great optimization techniques, like signal refreshes and better memory storage
11:20 <+bridge> [ddnet] <sone> What I don't like about Rust is that it makes too many abstractions.
11:20 <+bridge> [ddnet] <Cellegen | RiH> I can make better optimization on a character node, using setget functions for variables, which needs update each time it's changing
11:20 <+bridge> [ddnet] <Cellegen | RiH> and won't ruin performance, let alone only makes the code run smoother
11:21 <+bridge> [ddnet] <Cellegen | RiH> that's what I'm afraid to interact with, it seems like rust has most of their stuff done within memory dumping
11:21 <+bridge> [ddnet] <Cellegen | RiH> and "borrowing" memory
11:21 <+bridge> [ddnet] <Cellegen | RiH> and "borrowing" memory data
11:22 <+bridge> [ddnet] <Cellegen | RiH> and applying that to almost every script I have is tedious
11:24 <+bridge> [ddnet] <Ryozuki> No offense cellegen but it just looks like you spit out random buzz words without knowing what you are saying
11:24 <+bridge> [ddnet] <Ryozuki> :justatest:
11:24 <+bridge> [ddnet] <Ryozuki> Go deeper with c, do more complex stuff
11:25 <+bridge> [ddnet] <Ryozuki> Then you will find why rust is good
11:25 <+bridge> [ddnet] <Ryozuki> Also you probs are doing UB without knowing it
11:25 <+bridge> [ddnet] <Ryozuki> Also you probs are using UB without knowing it
11:26 <+bridge> [ddnet] <Ryozuki> Also you probs are having UB without knowing it
11:26 <+bridge> [ddnet] <Cellegen | RiH> I just assume this is how rust works :kek:
11:27 <+bridge> [ddnet] <Cellegen | RiH> but about optimization, I know pretty much what I'm talking about, since using setget on godot has it's own advantages for optimizing code
11:27 <+bridge> [ddnet] <Cellegen | RiH> not just run it every frame like usual
11:27 <+bridge> [ddnet] <Ryozuki> :fuckyousnail:
11:27 <+bridge> [ddnet] <ReiTW> C is kinda easy to learn, for me what makes it hard is all of that low level stuff & how people write their code
11:27 <+bridge> [ddnet] <ReiTW> 
11:27 <+bridge> [ddnet] <ReiTW> But as a C "developer for fun" since some years I can guarantee that switching to Rust is like switching from Hell to Heaven
11:28 <+bridge> [ddnet] <sone> C is good too. OpenBSD (which heavilly cares about security) uses it for example.
11:28 <+bridge> [ddnet] <Ryozuki> @ReiTW ignorance is bliss, when you dont know what you are missing you think what you got is good
11:28 <+bridge> [ddnet] <Ryozuki> xD
11:28 <+bridge> [ddnet] <ReiTW> seriously @sone
11:28 <+bridge> [ddnet] <ReiTW> you should take a look at all the stuff going around Rust
11:29 <+bridge> [ddnet] <ReiTW> everyone is just switching on it for "simplicity" and security purpose
11:29 <+bridge> [ddnet] <ReiTW> even the Linux kernel will implement few parts
11:29 <+bridge> [ddnet] <Ryozuki> And i dont like rust cuz its name, i like rust cuz it implements novel stuff
11:29 <+bridge> [ddnet] <Ryozuki> Thats actually useful
11:29 <+bridge> [ddnet] <Cellegen | RiH> üêÑ
11:29 <+bridge> [ddnet] <Cellegen | RiH> thats all you need to know
11:29 <+bridge> [ddnet] <Ryozuki> If another lang does it better ill switch
11:30 <+bridge> [ddnet] <ReiTW> Discord switched from Go to Rust, Cloudflare now said they'll power all of their new applications using Rust, Linux kernel, etc....
11:30 <+bridge> [ddnet] <ReiTW> so many
11:31 <+bridge> [ddnet] <Cellegen | RiH> :thonk: what about microsoft's new language Carbon?
11:31 <+bridge> [ddnet] <ReiTW> It has no reason to live
11:31 <+bridge> [ddnet] <Cellegen | RiH> will it be competitive? :kekw:
11:32 <+bridge> [ddnet] <ReiTW> you'll find out that way more than 50% of the people are like "lmao tf is this, nobody cares cuz there's nothing new & special about it"
11:32 <+bridge> [ddnet] <sone> It seems that most people use Rust because they find it hard to program in C.
11:32 <+bridge> [ddnet] <ReiTW> And this is where you're wrong
11:32 <+bridge> [ddnet] <Cellegen | RiH> and in the end, there really isn't
11:32 <+bridge> [ddnet] <sone> So rust helps them program, that's good but does not make C less good
11:32 <+bridge> [ddnet] <ReiTW> And this is where you're wrong @sone
11:32 <+bridge> [ddnet] <Cellegen | RiH> :justatest: ok
11:33 <+bridge> [ddnet] <Cellegen | RiH> wouldn't be the reason that it's just easier to work with, than on C?
11:33 <+bridge> [ddnet] <Cellegen | RiH> which I believe it's true considering how much of a pain C can be
11:34 <+bridge> [ddnet] <sone> I mean if you can work with C and you like it more then why not work with it.
11:34 <+bridge> [ddnet] <Cellegen | RiH> everybody prefers different language, whatever works best for one
11:35 <+bridge> [ddnet] <Cellegen | RiH> for me gdscript is really good for game development, i wouldn't use anything else tbh
11:35 <+bridge> [ddnet] <ReiTW> for sure Rust makes it easier than C, but that's definetly not the main reason why people uses Rust over C
11:35 <+bridge> [ddnet] <Ryozuki> Its not that one finds it hard to program in C, complex stuff such as threading, memory safety etc is hard, extremely hard even for seasoned devs
11:35 <+bridge> [ddnet] <Ryozuki> You just havent been there yet
11:36 <+bridge> [ddnet] <Cellegen | RiH> so like, shitting on the language cuz you heard it's hard might be the reason to start learning it in the first place, to see if you are wrong or not
11:36 <+bridge> [ddnet] <Ryozuki> Its made by google not microsoft, and they recommend rust in the readme
11:37 <+bridge> [ddnet] <Cellegen | RiH> oh yeah my bad, even tho microsoft sort of own google, it's not the same company
11:37 <+bridge> [ddnet] <sone> Yes, I have not.
11:37 <+bridge> [ddnet] <Ryozuki> What are you even saying cellegen
11:37 <+bridge> [ddnet] <ReiTW> An example @sone look at all the vulnerabilities around very popular & very well used libs on linux for example that are memory related
11:37 <+bridge> [ddnet] <ReiTW> 
11:37 <+bridge> [ddnet] <ReiTW> Rust ensure memory safety at compile + no garbage collector
11:37 <+bridge> [ddnet] <Cellegen | RiH> i said sort of, as in partially
11:37 <+bridge> [ddnet] <ReiTW> less pain
11:38 <+bridge> [ddnet] <Ryozuki> Microsoft doesnt own any part of google
11:38 <+bridge> [ddnet] <Ryozuki> What drugs u using
11:38 <+bridge> [ddnet] <Cellegen | RiH> :justatest:
11:38 <+bridge> [ddnet] <Ryozuki> :justatest:
11:38 <+bridge> [ddnet] <Cellegen | RiH> yes
11:38 <+bridge> [ddnet] <Cellegen | RiH> i mean no
11:38 <+bridge> [ddnet] <Cellegen | RiH> :justatest:
11:38 <+bridge> [ddnet] <ReiTW> since when lmao
11:38 <+bridge> [ddnet] <ReiTW> They never owned even 1% of it
11:40 <+bridge> [ddnet] <ReiTW> Google is "owned" by Alphabet tho
11:40 <+bridge> [ddnet] <Cellegen | RiH> wtf they are rivals
11:40 <+bridge> [ddnet] <Cellegen | RiH> k dude, never hurts to learn a bit
11:40 <+bridge> [ddnet] <Cellegen | RiH> wtf they are rivals (microsoft and google)
11:42 <+bridge> [ddnet] <Ryozuki> Alphabet is google ye
11:44 <+bridge> [ddnet] <sone> So, Rust is most useful when it comes to multi-threading?
11:46 <+bridge> [ddnet] <sone> Anyway I'd be up to rewrite it in Rust instead of C if enough ppl are gathered but as a solo I prefer C. (TeeClones I mean)
11:47 <+bridge> [ddnet] <Ryozuki> Not just multuthreading
11:47 <+bridge> [ddnet] <Ryozuki> For example, in rust you dont have null values
11:48 <+bridge> [ddnet] <Ryozuki> It also forces you to explicitly handle all code paths / errors
11:48 <+bridge> [ddnet] <ReiTW> I like the last line tho
11:48 <+bridge> [ddnet] <ReiTW> https://cdn.discordapp.com/attachments/293493549758939136/1020270047920406538/unknown.png
11:48 <+bridge> [ddnet] <Ryozuki> Making ur program more resilient and correct
11:49 <+bridge> [ddnet] <Ryozuki> Pattern matching is awesome
11:49 <+bridge> [ddnet] <Ryozuki> That seems to be written with bad english xD
11:50 <+bridge> [ddnet] <ReiTW> ferriswag
11:52 <+bridge> [ddnet] <Ryozuki> https://doc.rust-lang.org/book/ch00-00-introduction.html#who-rust-is-for
11:52 <+bridge> [ddnet] <Ryozuki> check this
11:53 <+bridge> [ddnet] <sone> Ok üòâ
11:53 <+bridge> [ddnet] <sone> I've already read it but it won't hurt to re-read it
11:56 <+bridge> [ddnet] <sone> Seems like Rust is designed so that the compiler knows more about the program than the programmer, whereas in C the programmer is in control and responsible
11:58 <+bridge> [ddnet] <Ryozuki> It prevents you from doing wrong stuff
11:59 <+bridge> [ddnet] <Ryozuki> You have to define what you mean by control
12:03 <+bridge> [ddnet] <sone> Control of the machine
12:03 <+bridge> [ddnet] <heinrich5991> you are in control of the machine in rust. you think about what happens. you can write exactly the same programs as in C. in some cases you shouldn't because rust provides better abstractions
12:04 <+bridge> [ddnet] <heinrich5991> but in the end, if you absolutely want to, you can shoot yourself in the foot as much as in C. I wouldn't recommend it though; it hurts üòõ
12:04 <+bridge> [ddnet] <heinrich5991> (refer to `unsafe`)
12:06 <+bridge> [ddnet] <sone> I feel like Rust's abstractions are getting in the way.
12:08 <+bridge> [ddnet] <Ryozuki> Examples?
12:15 <+bridge> [ddnet] <sone> I don't remember anything in particular (it's been a long since I last tried coding in Rust) but it was too hard to get an idea of what the compiler will do.
12:16 <+bridge> [ddnet] <sone> It felt like magic . Typing the magic functions-types would do the trick, but I felt I had no idea of what was happening.
12:38 <+bridge> [ddnet] <Learath2> Barring unsafe some things are a little more annoying, but honestly the advantages far outweigh the annoyances
12:41 <+bridge> [ddnet] <Learath2> No self referential structs without unsafe is a pretty annoying one
12:43 <+bridge> [ddnet] <Ryozuki> I think uncan do them with safe
12:43 <+bridge> [ddnet] <Ryozuki> Rc
12:43 <+bridge> [ddnet] <Ryozuki> But yeah it makes them hard
12:43 <+bridge> [ddnet] <Ryozuki> Maybe someday they find how to make it easier
12:44 <+bridge> [ddnet] <Learath2> Honestly, you can usually just design around it. It's like learning a functional programming language, you just need to change your approach to some things
12:46 <+bridge> [ddnet] <Ryozuki> https://crates.io/crates/ouroboros
12:46 <+bridge> [ddnet] <Ryozuki> this is the go to crate for self ref structs
12:46 <+bridge> [ddnet] <Ryozuki> if you want it done
12:47 <+bridge> [ddnet] <Ryozuki> Indeed
12:47 <+bridge> [ddnet] <Ryozuki> I always try to avoid self ref structs
12:47 <+bridge> [ddnet] <Ryozuki> So far i havent needed them
12:49 <+bridge> [ddnet] <Learath2> In my experience if you find yourself needing them, there is a high chance your struct is too big of a monoblock
12:49 <+bridge> [ddnet] <Ravie Senpai> In the end, we all can agree that probably the best programming language is Dart
12:49 <+bridge> [ddnet] <Ryozuki> no
12:49 <+bridge> [ddnet] <Learath2> No it's Scratch
12:49 <+bridge> [ddnet] <Ravie Senpai> :justatest:
12:49 <+bridge> [ddnet] <Ryozuki> I seen scratch in scratch
12:50 <+bridge> [ddnet] <Ravie Senpai> Scratch is cool
12:50 <+bridge> [ddnet] <Ravie Senpai> I made a house with it
12:52 <+bridge> [ddnet] <Learath2> I honestly dont enjoy highly ideological languages. The only reason Rust is bearable for me is it's very strong lifetime elision rules
12:52 <+bridge> [ddnet] <Learath2> its*
12:53 <+bridge> [ddnet] <Ryozuki> wdym by ideological
12:53 <+bridge> [ddnet] <Ryozuki> I think its pretty sensible the tradeoffs rust takes to solve such complex problems
12:54 <+bridge> [ddnet] <Ryozuki> And i dont think rust devs add complexity for the sake of it
12:54 <+bridge> [ddnet] <Ryozuki> The RFC process is smth i like
12:54 <+bridge> [ddnet] <Ryozuki> C++ progress seems very closed and done by highly elite white bearss
12:54 <+bridge> [ddnet] <Ryozuki> Beards
12:54 <+bridge> [ddnet] <Learath2> Languages that have goals beyond being ergonomic
12:55 <+bridge> [ddnet] <Ryozuki> Ah
12:55 <+bridge> [ddnet] <Learath2> Rust not being stuck forever like C++ and C is pretty nice
12:56 <+bridge> [ddnet] <Learath2> Though it does seem extremely slow to me. The 2 years I was away none of the features I've been eyeing in experimental landed in stable
12:58 <+bridge> [ddnet] <Ryozuki> https://www.open-std.org/jtc1/sc22/wg14/www/docs/dr_260.htm
12:59 <+bridge> [ddnet] <Ryozuki> rust?
12:59 <+bridge> [ddnet] <Ryozuki> there are lot of new things
12:59 <+bridge> [ddnet] <Learath2> Yes, still no try_blocks, no drain_filter, no async traits
12:59 <+bridge> [ddnet] <Ryozuki> edition 2021 being one
13:00 <+bridge> [ddnet] <Ryozuki> yeah
13:00 <+bridge> [ddnet] <Ryozuki> its complex
13:00 <+bridge> [ddnet] <Ryozuki> GATs may be coming soon
13:00 <+bridge> [ddnet] <Ryozuki> needed for async traits
13:01 <+bridge> [ddnet] <Learath2> The extensive high quality community alternatives are appreciated but honestly 5 years for a drain_filter is a little out there üòÑ
13:02 <+bridge> [ddnet] <Ryozuki> i wonder why
13:02 <+bridge> [ddnet] <Ryozuki> They must have a reason xd
13:02 <+bridge> [ddnet] <Learath2> Even wg21 is less scared of standardizing something not perfect. You can just deprecate it and expose a new one with a new name later
13:02 <+bridge> [ddnet] <Ravie Senpai> Let's start a project in chicken then :music:
13:03 <+bridge> [ddnet] <Learath2> Last I checked they were arguing about naming and some small technical details remaining like what happens if the user errors in the predicate
13:04 <+bridge> [ddnet] <Learath2> once_cell would be nice too, I have lazy_static in every one of my projects
13:06 <+bridge> [ddnet] <Ryozuki> I think u can avoid lazy static now that mutex is const
13:06 <+bridge> [ddnet] <Ryozuki> If u used a mutex
13:07 <+bridge> [ddnet] <Learath2> I think mostly I had mutexes or regexes
13:43 <+bridge> [ddnet] <fokkonaut> Can we maybe use a CHARACTERFLAG for sitting instead of making it rely on the afk flag?
13:43 <+bridge> [ddnet] <fokkonaut> would be cool for modding.
14:12 <+ChillerDragon> @Mr.Gh0s7 what stalking? xd did you follow me on github today or what?
14:12 <+ChillerDragon> if yes nice to see you found my svgs useful
14:13 <+bridge> [ddnet] <Mr.Gh0s7> xD nice did you also see the ai repo?
14:13 <+bridge> [ddnet] <Mr.Gh0s7> was a joke sry if it was a bad one
14:18 <+ChillerDragon> nono all good i indeed did stalk you a bit this morning :D
14:18 <+bridge> [ddnet] <Mr.Gh0s7> üòâ
14:18 <+ChillerDragon> i didnt checkout the AI repo due to a missing ddnet/teeworlds clickbait
14:19 <+bridge> [ddnet] <Mr.Gh0s7> I see
14:19 <+ChillerDragon> https://zillyhuhn.com/cs/.1663330692.png
14:19 <+ChillerDragon> gotta improve your marketing here
14:19 <+ChillerDragon> oh wait
14:19 <+bridge> [ddnet] <Mr.Gh0s7> xD
14:19 <+ChillerDragon> KoG as in king of gores?
14:19 <+ChillerDragon> yea didnt get that xd
14:19 <+bridge> [ddnet] <Mr.Gh0s7> yeah
14:19 <+ChillerDragon> could also be Ko GAI
14:20 <+ChillerDragon> gotta add a description
14:20 <+ChillerDragon> saying "KoG AI"
14:20 <+ChillerDragon> u get 200% more clicks
14:20 <+bridge> [ddnet] <Mr.Gh0s7> xD I don't really want ppl seeing it and then blaming me for destroying kog
14:20 <+ChillerDragon> but ye looks rly cool
14:20 <+bridge> [ddnet] <Mr.Gh0s7> it's unfished tho
14:21 <+bridge> [ddnet] <Mr.Gh0s7> I don't have a dgpu
14:21 <+ChillerDragon> how did the python hook in
14:21 <+ChillerDragon> i dont find it
14:21 <+ChillerDragon> controls via fifo=
14:21 <+bridge> [ddnet] <Mr.Gh0s7> The client gives data through fifos to a python script that trains and sends input through fifo again
14:22 <+ChillerDragon> ah ye i see u added controls via fifo
14:22 <+bridge> [ddnet] <Mr.Gh0s7> It even supports pararel clients
14:22 <+ChillerDragon> how is the latency?
14:23 <+bridge> [ddnet] <Mr.Gh0s7> it's pretty good I runned the server locally but I can't promise much cause I can't train it (no dgpu)
14:23 <+ChillerDragon> latency from py to client via fifo shouldnt matter where the server is right?
14:23 <+ChillerDragon> i also thought about adding fifo controls once but thought it will be too sluggish
14:24 <+bridge> [ddnet] <Mr.Gh0s7> I think it runs fine
14:24 <+bridge> [ddnet] <Mr.Gh0s7> I would guess it is almost instant
14:25 <+ChillerDragon> id say there is a difference on how a chat/console feels instant and keyboard inputs for gaming :D
14:26 <+ChillerDragon> UwU
14:26 <+MrGh0s7> Hehehaw!
14:26 <+ChillerDragon> welcome to irc but ima go afk now :p
14:26 <+MrGh0s7> xD k ping me if you want to continue the conv later
14:55 <+bridge> [ddnet] <Ryozuki> TIL about atomic consume ordering
14:55 <+bridge> [ddnet] <Ryozuki> https://preshing.com/20140709/the-purpose-of-memory_order_consume-in-cpp11/
14:57 <+bridge> [ddnet] <Ryozuki> Only makes guarantees to operations that have a dependency on the value
14:57 <+bridge> [ddnet] <Ryozuki> If i understood correctly
14:58 <+bridge> [ddnet] <Ryozuki> So other stuff can be reordered?
14:58 <+bridge> [ddnet] <Ryozuki> I guess
15:01 <+bridge> [ddnet] <louis> @Voxel i kinda liked the older running animation where the front part of the stride had the foot a bit further
15:01 <+bridge> [ddnet] <louis> i think it could look a bit more natural
15:03 <+bridge> [ddnet] <louis> btw good job on the prs, basically half the update is by you
15:03 <+bridge> [ddnet] <Ryozuki> yeah good job
15:03 <+bridge> [ddnet] <Ryozuki> :ddnet:
15:30 <+bridge> [ddnet] <Learath2> Q: What do you people use as your terminal font? I've been using dejavu sans mono for a long time now, but it's lacking some glyphs and the project looks very much abandoned
15:31 <+bridge> [ddnet] <Learath2> https://gcc.gnu.org/wiki/Atomic/GCCMM/AtomicSync I think I linked this before, but this document was what finally made it all click for me
15:32 <+bridge> [ddnet] <Ryozuki> Oh nice
15:32 <+bridge> [ddnet] <Ryozuki> It looks well explained
15:33 <+bridge> [ddnet] <Ryozuki> Atomic semantics rly can be confusing
15:33 <+bridge> [ddnet] <Ryozuki> And i often gotta reread
15:33 <+bridge> [ddnet] <Learath2> Well honestly most of the time seq cst or relaxed are what you are looking for
15:34 <+bridge> [ddnet] <Learath2> And spamming seq cst everywhere when you really dont want to think too much about it üòÑ
15:34 <+bridge> [ddnet] <Ryozuki> Thats true for x86
15:34 <+bridge> [ddnet] <Ryozuki> Cuz strong
15:34 <+bridge> [ddnet] <Ryozuki> But on arm using consume properly instead of acquire
15:34 <+bridge> [ddnet] <Ryozuki> Can give serious perf boost
15:35 <+bridge> [ddnet] <Learath2> Definitely, but usually there are lower hanging fruit for optimization
15:35 <+bridge> [ddnet] <Ryozuki> https://preshing.com/images/consume-timings.png
15:35 <+bridge> [ddnet] <Ryozuki> True
15:35 <+bridge> [ddnet] <Ryozuki> Weird hearing that for u
15:36 <+bridge> [ddnet] <Ryozuki> Given u latelly cares about it all
15:36 <+bridge> [ddnet] <Ryozuki> Cared
15:36 <+bridge> [ddnet] <Ryozuki> :greenthing:
15:37 <+bridge> [ddnet] <Learath2> I prefer writing code properly from the start but I recognize that I'm a dying breed. It's all about rapid iteration and linear search now
15:37 <+bridge> [ddnet] <Ryozuki> I mean i agree
15:37 <+bridge> [ddnet] <Ryozuki> But sometimes u gotta get smth working first
15:38 <+bridge> [ddnet] <Learath2> True. Perfect is the enemy of good afterall
15:39 <+bridge> [ddnet] <Learath2> Anyway, terminal fonts, anyone?
15:39 <+bridge> [ddnet] <Ryozuki> I use jetbrains mono
15:39 <+bridge> [ddnet] <Ryozuki> But i fancy pixel perfect ones
15:40 <+bridge> [ddnet] <Learath2> Pixel perfect ones? As in bitmap fonts?
15:41 <+bridge> [ddnet] <Ryozuki> Ye
15:41 <+bridge> [ddnet] <Ryozuki> The ones that dont use antialiaa
15:41 <+bridge> [ddnet] <Ryozuki> Terminus?
15:42 <+bridge> [ddnet] <Learath2> I used Tamzen for a bit. Bitmap fonts do have a unique look, but the jagged edges can get a bit annoying
15:42 <+bridge> [ddnet] <Ryozuki> Ye
15:42 <+bridge> [ddnet] <Ryozuki> Jetbrains mono is rly good
15:44 <+bridge> [ddnet] <Learath2> Added to the list of fonts to try. So far I have Noto Sans Mono, IBM Plex Mono and Jetbrains Mono
15:52 <+bridge> [ddnet] <Ryozuki> I rly wanna try replacing the entire gui with imgui
15:53 <+bridge> [ddnet] <Ryozuki> I think we could rly get so much usability
15:53 <+bridge> [ddnet] <Ryozuki> Maybe ill do it just as an experiment
15:55 <+bridge> [ddnet] <Ryozuki> ImDDNet client
15:55 <+bridge> [ddnet] <Jupstar ‚ú™> is there a theme that doesnt look like trash for imgui?
15:57 <+bridge> [ddnet] <Ryozuki> I love the default look
15:57 <+bridge> [ddnet] <Ryozuki> Idk why
15:57 <+bridge> [ddnet] <Jupstar ‚ú™> https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v175/capture_readme_styles_0001.png
15:57 <+bridge> [ddnet] <Jupstar ‚ú™> https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v175/capture_readme_styles_0002.png
15:57 <+bridge> [ddnet] <Jupstar ‚ú™> looks like win95 tb h
15:57 <+bridge> [ddnet] <Ryozuki> Ye i like the dark
15:57 <+bridge> [ddnet] <Jupstar ‚ú™> looks like win95 tbh
15:57 <+bridge> [ddnet] <Learath2> What? Which fork of win95 did you use? üòÑ
15:58 <+bridge> [ddnet] <Learath2> https://cdn.discordapp.com/attachments/293493549758939136/1020332773023678474/unknown.png
15:58 <+bridge> [ddnet] <Jupstar ‚ú™> but srsly, do u like it too?
15:58 <+bridge> [ddnet] <Jupstar ‚ú™> i think it looks really cheap
15:58 <+bridge> [ddnet] <Learath2> It's not a good look for a game UI imho. But I love it for tooling UI'
15:58 <+bridge> [ddnet] <Ryozuki> theming colors is ez
15:58 <+bridge> [ddnet] <Ryozuki> https://raw.githubusercontent.com/AdamHarris-GamesProgrammer/Dear-ImGui-Themes/master/ModernDarkTheme.txt
15:58 <+bridge> [ddnet] <Ryozuki> https://github.com/ocornut/imgui/issues/707
15:59 <+bridge> [ddnet] <Jupstar ‚ú™> well i dunno
15:59 <+bridge> [ddnet] <Jupstar ‚ú™> checkboxes, dropdowns
15:59 <+bridge> [ddnet] <Jupstar ‚ú™> they all look shit imo xD
15:59 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1020333189333524510/unknown.png
15:59 <+bridge> [ddnet] <Jupstar ‚ú™> is there some real theming?
16:00 <+bridge> [ddnet] <Learath2> We have a `CSound::Shutdown` that is just not called...
16:00 <+bridge> [ddnet] <Ryozuki> U sure
16:01 <+bridge> [ddnet] <Ryozuki> This reminds me of a meme
16:01 <+bridge> [ddnet] <Ryozuki> About removing unused stuff and breaking everything
16:01 <+bridge> [ddnet] <Learath2> I put a dbg_break() in it, it doesn't ever get called, neither on regular shutdown nor on abrupt shutdown
16:02 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1020333808148545566/unknown.png
16:03 <+bridge> [ddnet] <Ryozuki> Its true
16:03 <+bridge> [ddnet] <Ryozuki> Its not called
16:03 <+bridge> [ddnet] <Ryozuki> Maybe it should?
16:03 <+bridge> [ddnet] <Ryozuki> It closes sdl stuff
16:04 <+bridge> [ddnet] <Learath2> I'll wire it up properly along with the shutdown for the http stuff
16:05 <+bridge> [ddnet] <Learath2> This PR gets bigger and bigger because I can't hold myself from fixing non-uniformity in larger systems
16:06 <+bridge> [ddnet] <deen> then no one will be able to review the PR
16:07 <+bridge> [ddnet] <deen> make the small fix separately in another PR
16:07 <+bridge> [ddnet] <Learath2> Problem is mine won't work without a proper shutdown
16:07 <+bridge> [ddnet] <Learath2> Actually good idea. I'll make an ugly http specific shutdown call for this pr. Then I'll hook it up properly in the next pr
16:08 <+bridge> [ddnet] <deen> Yes, so fix the shutdown first, then make your PR depend on the other one
16:08 <+bridge> [ddnet] <deen> No need to add ugly workarounds
16:08 <+bridge> [ddnet] <Ryozuki> Shouldnt be hard to call shutdown right?
16:08 <+bridge> [ddnet] <Ryozuki> And yeah small prs better
16:08 <+bridge> [ddnet] <Ryozuki> Easier to review
16:08 <+bridge> [ddnet] <Learath2> Order of things might matter
16:12 <+bridge> [ddnet] <Ryozuki> Can you run godbolt locally?
16:12 <+bridge> [ddnet] <Ryozuki> It would be cool to check the entire ddnet
16:12 <+bridge> [ddnet] <Ryozuki> And try stuff
16:13 <+bridge> [ddnet] <heinrich5991> I actually talked about that IRL yesterday
16:14 <+bridge> [ddnet] <heinrich5991> apparently there are two vim plugins that do something like that
16:14 <+bridge> [ddnet] <Ryozuki> Ohh
16:23 <+bridge> [ddnet] <Voxel> bump
16:27 <+bridge> [ddnet] <heinrich5991> you can do that with a crate. but they're also fundamentally very bad-bad ^^
16:28 <+bridge> [ddnet] <Jupstar ‚ú™> @Ryozuki https://www.phoronix.com/news/Godot-4.0-Beta-1
16:28 <+bridge> [ddnet] <Jupstar ‚ú™> :OO that was quick
16:28 <+bridge> [ddnet] <Jupstar ‚ú™> i could swear we just talked about the alpha yesterday xd
16:29 <+bridge> [ddnet] <Mr.Gh0s7> Godot rocks!
16:29 <+bridge> [ddnet] <Jupstar ‚ú™> they already working on it since 2019
16:29 <+bridge> [ddnet] <Jupstar ‚ú™> uff
16:29 <+bridge> [ddnet] <heinrich5991> on x86, it's all the same üòõ https://www.cl.cam.ac.uk/~pes20/cpp/cpp0xmappings.html
16:30 <+bridge> [ddnet] <Ryozuki> oh
16:31 <+bridge> [ddnet] <heinrich5991> sounds good üôÇ
16:34 <+bridge> [ddnet] <Learath2> Hm, isn't that just a consequence of Rust wanting the ability to move everything around? I see no harm in it for a pinned struct
16:35 <+bridge> [ddnet] <Ryozuki> Just noticed gameworld uses a linked list for entities
16:35 <+bridge> [ddnet] <heinrich5991> yea, then it's back to "only safety" guarnatees of rust that are incompatible with it
16:35 <+bridge> [ddnet] <heinrich5991> because you wouldn't be allowed to modify the pointed-to member, this is not expressible in rust currently
16:40 <+bridge> [ddnet] <Ryozuki> I wonder if polonius could help
16:46 <+bridge> [ddnet] <heinrich5991> don't think so
17:11 <+bridge> [ddnet] <Ryozuki> https://www.tomshardware.com/news/nest-linux-os-scheduler
17:18 <+bridge> [ddnet] <heinrich5991> https://www.youtube.com/watch?v=IuJuGamUtNA cool video istanbul's metro
17:48 <+bridge> [ddnet] <Learath2> I'm slowly understanding why every project except ours is using boost üòÑ
17:49 <+bridge> [ddnet] <Learath2> The intrusive stuff in boost is just so good
17:49 <+bridge> [ddnet] <heinrich5991> factorio moved away from boost ^^
17:50 <+bridge> [ddnet] <Learath2> They also have great engineers that are capable of implementing whatever they'd need from boost
17:50 <+bridge> [ddnet] <Learath2> We do have people smart enough, we don't have time for it though üòÑ
17:52 <+bridge> [ddnet] <Voxel> Whats boost?
17:52 <+bridge> [ddnet] <heinrich5991> a huge c++ library
17:52 <+bridge> [ddnet] <heinrich5991> it's basically an extension of the standard library
17:52 <+bridge> [ddnet] <Learath2> It's a compliment to the standard library, C++ really doesn't have the best standard library
17:52 <+bridge> [ddnet] <heinrich5991> from time to time, features leak from boost to the C++ standard
17:52 <+bridge> [ddnet] <Learath2> Heard it's pretty modular now
17:54 <+bridge> [ddnet] <Voxel> I wonder how much will change if we start using it
17:54 <+bridge> [ddnet] <Jupstar ‚ú™> we'd have regex without exceptions
17:54 <+bridge> [ddnet] <Jupstar ‚ú™> if that doesnt convince u xd
17:55 <+bridge> [ddnet] <Learath2> boost::intrusive should really leak into the standard sooner than later, it's so useful
17:55 <+bridge> [ddnet] <Jupstar ‚ú™> all the static vectors/strings etc would e.g. be useful
17:56 <+bridge> [ddnet] <Jupstar ‚ú™> often u can estimate the size u want
17:56 <+bridge> [ddnet] <Voxel> that's cool
17:57 <+bridge> [ddnet] <Learath2> `boost::intrusive_ptr` is a 10/10 idea
17:57 <+bridge> [ddnet] <Learath2> A ref-counted object that doesn't need an external pointer managing it
18:22 <+bridge> [ddnet] <Ryozuki> https://blog.rust-lang.org/2022/09/15/const-eval-safety-rule-revision.html
18:23 <+bridge> [ddnet] <Ryozuki> Heh thats what i suggested u the other day
18:23 <+bridge> [ddnet] <Ryozuki> :BASED:
18:24 <+bridge> [ddnet] <Ryozuki> (intrusive)
18:26 < Silur> I have a question about ddnet on the server side, does anyone know how to predict an "effect / cosmetic"? because on teeworlds when I want to create some kind of effects with particules (also with lasers) they look good (no lags, it's smooth), but on ddnet it's ugly (laggy and not smooth) so I guess teeworlds predicts everything but not ddnet?
18:31 <+bridge> [ddnet] <Jupstar ‚ú™> try antiping, without antiping ddnet looks laggy for me too
18:32 < Silur_> same
18:34 <+bridge> [ddnet] <deen> @nuborn ^
18:40 <+bridge> [ddnet] <ThatFeed> i life in cologne germany and i cant join ger 10 server to week conecton i have 30 oing
18:40 <+bridge> [ddnet] <ThatFeed> i life in cologne germany and i cant join ger 10 server to week conecton i have 30 ping
18:40 <+bridge> [ddnet] <ThatFeed> can some one tell me why
18:41 <+bridge> [ddnet] <Jupstar ‚ú™> btw also good visible when recording
18:41 <+bridge> [ddnet] <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1020373773528080424/test123.mp4
18:41 <+bridge> [ddnet] <fokkonaut> You need to disable Antiping. Antiping predicts it falsely.
18:41 <+bridge> [ddnet] <Jupstar ‚ú™> dummy jitters around af
18:41 <+bridge> [ddnet] <Jupstar ‚ú™> antiping looks smooth, without it looks like crap
18:41 <+bridge> [ddnet] <fokkonaut> I mean the cosmetic guy
18:41 <+bridge> [ddnet] <Jupstar ‚ú™> ah ok
18:42 <+bridge> [ddnet] <ThatFeed> i dont use antiping
18:42 <+bridge> [ddnet] <ThatFeed> but i have 16.1 for old layout
18:42 <+bridge> [ddnet] <fokkonaut> Do you try it on vanilla 0.7?
18:42 <+bridge> [ddnet] <Jupstar ‚ú™> #questions is best for these questions
18:42 <+bridge> [ddnet] <fokkonaut> No
18:42 <+bridge> [ddnet] <fokkonaut> Its a developer question
18:42 <+bridge> [ddnet] <fokkonaut> oh sorry
18:42 <+bridge> [ddnet] <fokkonaut> i thought it was that other guy lol
18:43 <+Silur_> fokkonaut: the thing is that on some servers (it includes yours) I don't have to disable antiping, everything looks already smooth
18:44 <+bridge> [ddnet] <fokkonaut> On my server most stuff is broken with antiping ON, which is to be expected
18:45 <+bridge> [ddnet] <fokkonaut> Well, talking about the effects
18:46 <+Silur_> btw also on the new copy love box server it looks great
18:48 <+bridge> [ddnet] <nouaa> @Voxel would you be interested about making an icon for /saved maps (like finished ones in the serverbrowser)?
18:48 <+bridge> [ddnet] <Voxel> You mean, like, at the side in the server browser?
18:48 <+bridge> [ddnet] <nouaa> yes
18:49 <+bridge> [ddnet] <nouaa> right there
18:49 <+bridge> [ddnet] <nouaa> https://cdn.discordapp.com/attachments/293493549758939136/1020375916066652230/unknown.png
18:50 <+bridge> [ddnet] <nouaa> i don't see anything wrong about adding this? what do u think about it?
18:51 <+bridge> [ddnet] <Voxel> https://fontawesome.com/icons/bookmark?s=solid&f=classic
18:51 <+bridge> [ddnet] <Voxel> Maybe this symbol?
18:52 <+bridge> [ddnet] <nouaa> hmm looks good
18:55 <+bridge> [ddnet] <deen> Try opening http://ger10.ddnet.tw in browser
18:58 <+bridge> [ddnet] <ThatFeed> ty
19:17 <+bridge> [ddnet] <Davide> The release of the new filter is planned for the 05/10/2022
19:17 <+bridge> [ddnet] <Voxel> cant wait!
19:18 <+bridge> [ddnet] <Voxel> (if thats a good thing)
19:19 <+bridge> [ddnet] <Chairn> 1440 fps, did you forget the dot in 1.440fps ?
19:22 <+bridge> [ddnet] <Jupstar ‚ú™> in german a dot is just a seperator^^
19:23 <+bridge> [ddnet] <Jupstar ‚ú™> i used to have 144hz, so this was 10 times the refresh rate
19:23 <+bridge> [ddnet] <Jupstar ‚ú™> but now i'd have to use 2400fps, thats bit overkill xd
19:23 <+bridge> [ddnet] <Jupstar ‚ú™> https://www.phoronix.com/news/RADV-Lower-Draw-CPU-Overhead
19:23 <+bridge> [ddnet] <Jupstar ‚ú™> maybe i can reach 15k fps now xd
19:24 <+bridge> [ddnet] <Jupstar ‚ú™> should try it out actually üòÑ
19:27 <+bridge> [ddnet] <Chairn> i meant 1 fps + 0.440 fps based on your video üòÑ
19:27 <+bridge> [ddnet] <Chairn> in french, comma is the separator which is awful when you have excel set in french and you try to open or export CSV file...
19:29 <+bridge> [ddnet] <Learath2> So many hours and I still don't like it üòÑ
19:29 <+bridge> [ddnet] <Jupstar ‚ú™> üòÆ such a huge pr
19:30 <+bridge> [ddnet] <Jupstar ‚ú™> whats the tldr?
19:30 <+bridge> [ddnet] <Jupstar ‚ú™> i mean does it improve something significantly, just wondeirng?
19:32 <+bridge> [ddnet] <Learath2> Yes, it makes register requests use http2 properly, with easy requests we had threading issues when trying to share the persistent connection
19:33 <+bridge> [ddnet] <Ryozuki> poggers
19:33 <+bridge> [ddnet] <Jupstar ‚ú™> nice
19:34 <+bridge> [ddnet] <trml> If they lag behind the player it can't be fixed without turning off player prediction, since particles (or laser, ninja particles, etc) are not predicted, but if they are unsmooth it might be an entirely different problem (hard to say without seeing it)
19:35 <+bridge> [ddnet] <Learath2> The runner idea is also going to be used in the future when we get a gRPC runner for management
19:37 <+bridge> [ddnet] <Learath2> Honestly this entire structure with jobs and stuff feel like we are just reinventing promises. Maybe `IEngineRunnable` should have been a wrapper for `std::promise`
19:45 <+bridge> [ddnet] <heinrich5991> does `std::promise` work already?
19:46 <+bridge> [ddnet] <Ryozuki> maybe just make a async runtime
19:46 <+bridge> [ddnet] <Ryozuki> xd
19:47 <+bridge> [ddnet] <heinrich5991> oh what, std::promise is C++11? ^^
19:48 <+bridge> [ddnet] <heinrich5991> https://en.cppreference.com/w/cpp/thread/promise
20:21 <+bridge> [ddnet] <Learath2> Lost my yubikey :AnyaSob:
20:25 <+bridge> [ddnet] <Learath2> @heinrich5991 could you update the curl stub for me?
20:26 <+bridge> [ddnet] <Elisha Emmaunel> Do you have a Bitcoin wallet or Coinbase wallet?
20:26 <+bridge> [ddnet] <Elisha Emmaunel> You can earn up to 0.06021BTC every 12 hours with your phone or PC...
20:26 <+bridge> [ddnet] <Elisha Emmaunel> Without referrals nor registration fee...
20:26 <+bridge> [ddnet] <Elisha Emmaunel> If you are interested click on the link below and start earning massively üëáüëáüëáüëá
20:26 <+bridge> [ddnet] <Elisha Emmaunel> https://t.me/+cOczZn1wgOkyMGI8
20:28 <+bridge> [ddnet] <heinrich5991> sure
20:30 <+bridge> [ddnet] <heinrich5991> (but not right now)
20:48 <+bridge> [ddnet] <Davide> Sad, do you need a new one?
20:50 <+bridge> [ddnet] <heinrich5991> any account where it's your only way there?
20:50 <+bridge> [ddnet] <heinrich5991> any account where it's your only login option?
21:13 <+bridge> [ddnet] <Learath2> thankfully not
21:17 <+bridge> [ddnet] <Learath2> Anything we can help with?
21:30 <+bridge> [ddnet] <Davide> Nah üòÖ  I'm just really busy in these days
21:30 <+bridge> [ddnet] <Davide> The new filter will be really innovative
21:37 <+bridge> [ddnet] <Learath2> Thus the offer, more hands more better
21:45 <+bridge> [ddnet] <Davide> Well, are you a C dev?
21:47 <+bridge> [ddnet] <Davide> Well, are you a C dev?ü§î
21:48 <+bridge> [ddnet] <heinrich5991> you're in the right neighbourhood üòâ
21:48 <+bridge> [ddnet] <Learath2> It's by far the language I know best
21:53 <+bridge> [ddnet] <Ryozuki> haha
21:53 <+bridge> [ddnet] <Ryozuki> asking learath that
21:53 <+bridge> [ddnet] <Ryozuki> :BASED:
21:54 <+bridge> [ddnet] <Davide> ü§£
21:59 <+bridge> [ddnet] <Ryozuki> learath is the C priest
22:46 <+bridge> [ddnet] <ReiTW> no
22:46 <+bridge> [ddnet] <ReiTW> to be a C priest you have to get the nerd look
22:47 <+bridge> [ddnet] <Ryozuki> xd
22:47 <+bridge> [ddnet] <Ryozuki> ithink we all nerds here
22:47 <+bridge> [ddnet] <Ryozuki> so no need to for that
22:47 <+bridge> [ddnet] <Ryozuki> so no need for that
23:22 <+bridge> [ddnet] <deen> The same channel also has a video about the tram trains I took to school and university for half of my life: https://www.youtube.com/watch?v=9sGHqsD0DRM
23:28 <+bridge> [ddnet] <Learath2> Honestly after Istanbul the only transit system that impressed me was Tokyo and Paris. I'm spoiled for transit üòÑ
23:29 <+bridge> [ddnet] <Chairn> what impressed you in Paris?
23:30 <+bridge> [ddnet] <Elisha Emmaunel> Do you have a Bitcoin wallet or Coinbase wallet?
23:30 <+bridge> [ddnet] <Elisha Emmaunel> You can earn up to 0.06021BTC every 12 hours with your phone or PC...
23:30 <+bridge> [ddnet] <Elisha Emmaunel> Without referrals nor registration fee...
23:30 <+bridge> [ddnet] <Elisha Emmaunel> If you are interested click on the link below and start earning massively üëáüëáüëáüëá
23:30 <+bridge> [ddnet] <Elisha Emmaunel> https://t.me/+cOczZn1wgOkyMGI8
23:30 <+bridge> [ddnet] <louis> i thought the one in korea was good when i lived thereüòÖ
23:31 <+bridge> [ddnet] <louis> but i never experienced any other transit systems ig
23:31 <+bridge> [ddnet] <ReiTW> @Ryozuki I wonder if that could be possible to make some scripting with Rust
23:31 <+bridge> [ddnet] <ReiTW> like lua scripting or v8 engine
23:32 <+bridge> [ddnet] <Chairn> oh you definetely can, just reimplement lua in rust üôÇ
23:33 <+bridge> [ddnet] <Ryozuki> there is
23:33 <+bridge> [ddnet] <Ryozuki> rhai
23:33 <+bridge> [ddnet] <Ryozuki> https://rhai.rs/
23:34 <+bridge> [ddnet] <ReiTW> ho lol
23:34 <+bridge> [ddnet] <ReiTW> imagine ddnet having scripting features, which allows you to write custom stuff & just reload all scripts ingame
23:36 <+bridge> [ddnet] <Ryozuki> indeed
23:36 <+bridge> [ddnet] <Ryozuki> rust is the future
23:36 <+bridge> [ddnet] <Ryozuki> :BASED:
23:36 <+bridge> [ddnet] <Chairn> iron is the future
23:36 <+bridge> [ddnet] <Ryozuki> booo
23:36 <+bridge> [ddnet] <Chairn> very far far away future though
23:37 <+bridge> [ddnet] <Ryozuki> i wish we had a new lang with even more modern features than rust
23:37 <+bridge> [ddnet] <Ryozuki> actually rust type theorie is from the past decade
23:37 <+bridge> [ddnet] <Ryozuki> not the latest new fresh stuff
23:37 <+bridge> [ddnet] <Ryozuki> actually rust type theory is from the past decade
23:37 <+bridge> [ddnet] <Ryozuki> but tech always advances slowly
23:37 <+bridge> [ddnet] <Ryozuki> atleast the useful one
23:39 <+bridge> [ddnet] <louis> i will make a new language
23:44 <+bridge> [ddnet] <Chairn> :nouis: language
23:45 <+bridge> [ddnet] <ReiTW> nobyC
23:46 <+bridge> [ddnet] <Ryozuki> https://en.wikipedia.org/wiki/Type_theory
23:46 <+bridge> [ddnet] <Chairn> Cnoby --> knoby --> gnocchi <https://en.wikipedia.org/wiki/Gnocchi>
23:50 <+bridge> [ddnet] <Voxel> Are these better colors?
23:50 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1020451693495844925/unknown.png
23:50 <+bridge> [ddnet] <Voxel> Is this a better colors?
23:50 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1020451693495844925/unknown.png
23:50 <+bridge> [ddnet] <Voxel> Is this a better color?
23:50 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1020451693495844925/unknown.png
23:51 <+bridge> [ddnet] <Voxel> Is this a better color for freeze lasers??
23:51 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1020451693495844925/unknown.png
23:51 <+bridge> [ddnet] <Voxel> Is this a better color for freeze lasers?
23:51 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1020451693495844925/unknown.png
23:51 <+bridge> [ddnet] <heinrich5991> I like it better, but I don't know if it's always on light background ^^
23:54 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1020452611889045554/unknown.png
23:54 <+bridge> [ddnet] <heinrich5991> ah üôÇ
23:54 <+bridge> [ddnet] <heinrich5991> is that the same color
23:54 <+bridge> [ddnet] <heinrich5991> ?
23:54 <+bridge> [ddnet] <Voxel> Yea
23:54 <+bridge> [ddnet] <Voxel> Just on a dark background
23:54 <+bridge> [ddnet] <heinrich5991> funny, optic illusion
23:54 <+bridge> [ddnet] <heinrich5991> it looks lighter in the bottom image
23:55 <+bridge> [ddnet] <Voxel> True LOL
23:55 <+bridge> [ddnet] <Voxel> Alright I'll code this into the game, and submit the fixes.
