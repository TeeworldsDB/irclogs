00:51 <+bridge> [ddnet] <lynn> SMOOTH SCROLLING? y'all spoiling us
08:10 < fokkonaut> ChillerDragon: 
08:11 <+bridge> [ddnet] <fokkonaut> could you check Wire
08:46 <+bridge> [ddnet] <Voxel> Some spitball ideas for the editor (I'm aware these might not be implemented, but it would be nice)
08:46 <+bridge> [ddnet] <Voxel> - Iconography for some of the elements, so that it's clearer what they do.
08:46 <+bridge> [ddnet] <Voxel> - A layer sorting option to have the layers rather be down to up or up to down. Since almost all programs do down to up, it would be nice to have an option to make it the same.
08:46 <+bridge> [ddnet] <Voxel> https://cdn.discordapp.com/attachments/293493549758939136/1008990046747111434/unknown.png
08:58  * fokkonaut slaps ochristi around a bit with a large fishbot
08:58  * fokkonaut slaps ChillerDragon around a bit with a large fishbot
08:58  * fokkonaut slaps ChillerDragon around a bit with a large fishbot
08:58  * fokkonaut slaps ChillerDragon around a bit with a large fishbot
11:34 <+bridge> [ddnet] <Ceeper> Why can't I join the Russian server?
11:34 <+bridge> [ddnet] <Ceeper> https://cdn.discordapp.com/attachments/293493549758939136/1009032364040659044/unknown.png
13:42 <+bridge> [ddnet] <prodammoskvich> same problem
15:11 <+bridge> [ddnet] <MÊŽÉ¹ ã‚·> Cuz DoS
19:53 <+bridge> [ddnet] <Ryozuki> the price increase in energy reminded me of that picture with the most energy eficient languages
19:53 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1009158059987312660/unknown.png
19:54 <+bridge> [ddnet] <Ryozuki> using python is bad for the environment
19:54 <+bridge> [ddnet] <Ryozuki> :BASED:
19:57 <+bridge> [ddnet] <k2d222> why such a big difference between js and ts wtf
20:04 <+bridge> [ddnet] <Jupstar> why is java so good tho?
20:05 <+bridge> [ddnet] <Jupstar> minecraft pocket edition says no to that
20:07 <+bridge> [ddnet] <k2d222> mcpe is c++
20:07 <+bridge> [ddnet] <Jupstar> yes
20:08 <+bridge> [ddnet] <Jupstar> i also would have thought c++ is before rust. i mean rust compiles slower doesnt it?
20:08 <+bridge> [ddnet] <Jupstar> and c++ is still a bit faster than rust
20:12 <+bridge> [ddnet] <Ryozuki> not that i seen
20:12 <+bridge> [ddnet] <Ryozuki> the competition is between rust and c
20:13 <+bridge> [ddnet] <Chairn> C master race
20:13 <+bridge> [ddnet] <Jupstar> https://benchmarksgame-team.pages.debian.net/benchmarksgame/download/fastest.svg
20:13 <+bridge> [ddnet] <Ryozuki> https://programming-language-benchmarks.vercel.app/cpp-vs-rust
20:13 <+bridge> [ddnet] <Ryozuki> oh god that svg is so hard to read
20:13 <+bridge> [ddnet] <k2d222> as always, depends how and what you benchmark
20:14 <+bridge> [ddnet] <Jupstar> https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/gpp-rust.html
20:14 <+bridge> [ddnet] <Ryozuki> yeah
20:14 <+bridge> [ddnet] <Jupstar> yeah c++ still wins
20:14 <+bridge> [ddnet] <Ryozuki> benchmarks arent the source of truth
20:14 <+bridge> [ddnet] <Jupstar> here*
20:14 <+bridge> [ddnet] <Jupstar> why should c++ be slower than c tho?
20:14 <+bridge> [ddnet] <Jupstar> just use the c code and compile it xD
20:14 <+bridge> [ddnet] <Ryozuki> xD
20:14 <+bridge> [ddnet] <Chairn> because virtual i guess
20:15 <+bridge> [ddnet] <Chairn> more indirect call in c++
20:15 <+bridge> [ddnet] <Jupstar> u dont have to use it
20:15 <+bridge> [ddnet] <Chairn> does rust have auto vectorization?
20:15 <+bridge> [ddnet] <Jupstar> c is like 99.99% subset of c++
20:15 <+bridge> [ddnet] <k2d222> generally you benchmark on 'idiomatic' code which is subjective
20:15 <+bridge> [ddnet] <Chairn> streams are also less efficient than c printf family
20:15 <+bridge> [ddnet] <Jupstar> wtf?
20:15 <+bridge> [ddnet] <Jupstar> never
20:15 <+bridge> [ddnet] <Jupstar> streams are much faster
20:16 <+bridge> [ddnet] <Jupstar> just not c++ stupid std::cout stuff
20:16 <+bridge> [ddnet] <Jupstar> bcs it uses synced stdio calls
20:16 <+bridge> [ddnet] <Jupstar> streams are type safe, so the compiler can assume what comes
20:16 <+bridge> [ddnet] <Jupstar> and doesnt need to parse text
20:16 <+bridge> [ddnet] <Ryozuki> many ppl do that mistake to with rust printf
20:16 <+bridge> [ddnet] <Chairn> each `<<` or `>>` is a different function call
20:16 <+bridge> [ddnet] <Ryozuki> cuz it locks the io everytime
20:17 <+bridge> [ddnet] <Ryozuki> its faster to get the lock 1 time
20:17 <+bridge> [ddnet] <Jupstar> well c++ nowadays has variadic templates
20:17 <+bridge> [ddnet] <Chairn> but we need to compare default c++ versus default rust, not tuned ones
20:17 <+bridge> [ddnet] <Ryozuki> i think benchmarks are hypertuned
20:17 <+bridge> [ddnet] <Jupstar> they are like constexpr evalutation
20:17 <+bridge> [ddnet] <Jupstar> well standard c++ is far behind rust
20:17 <+bridge> [ddnet] <Jupstar> and c basically has no standard lib
20:17 <+bridge> [ddnet] <Jupstar> so u cannot compare it anyway
20:18 <+bridge> [ddnet] <Chairn> c has standard lib?
20:19 <+bridge> [ddnet] <Jupstar> mhh
20:19 <+bridge> [ddnet] <Jupstar> i mean there is some stuff
20:19 <+bridge> [ddnet] <Jupstar> but its soo few
20:19 <+bridge> [ddnet] <k2d222> huh? no?
20:19 <+bridge> [ddnet] <Chairn> what do you lack?
20:20 <+bridge> [ddnet] <Jupstar> well maybe i should ask like this:
20:20 <+bridge> [ddnet] <Jupstar> what do u want?
20:20 <+bridge> [ddnet] <Jupstar> printf?
20:20 <+bridge> [ddnet] <Jupstar> network stuff is not standard already
20:21 <+bridge> [ddnet] <Jupstar> no filesystem, only fopen
20:21 <+bridge> [ddnet] <Chairn> what do you mean no filesystem? you have file functions
20:21 <+bridge> [ddnet] <k2d222> because all of that would mean generalizing hardware which is what c avoids generally
20:21 <+bridge> [ddnet] <Jupstar> how do u list a directory in c?
20:22 <+bridge> [ddnet] <Jupstar> with only standard calls
20:22 <+bridge> [ddnet] <k2d222> because all of that would mean generalizing hardware and os which is what c avoids generally
20:22 <+bridge> [ddnet] <Ryozuki> benchmarks also dont reflect other stuff such as ease of use, mem safety, thread safety, and code speed
20:22 <+bridge> [ddnet] <Jupstar> yes i am not saying c has to do it
20:22 <+bridge> [ddnet] <Ryozuki> as in writing code
20:22 <+bridge> [ddnet] <Jupstar> but chairn claimed c++ is not allowed to not use non standard stuff, bcs that would be "tuned"
20:22 <+bridge> [ddnet] <Jupstar> and i say, u cannot compare rust standard to any of c or c++ standard libs
20:23 <+bridge> [ddnet] <Jupstar> rust is by far superios
20:23 <+bridge> [ddnet] <Jupstar> rust is by far superior
20:23 <+bridge> [ddnet] <Ryozuki> based
20:23 <+bridge> [ddnet] <Ryozuki> :BASED:
20:23 <+bridge> [ddnet] <Chairn> the same holds for rust ðŸ™‚
20:23 <+bridge> [ddnet] <Jupstar> but thats basically the sense of rust
20:23 <+bridge> [ddnet] <Ryozuki> rust hashmap std is way faster than c++ one
20:23 <+bridge> [ddnet] <Jupstar> u have a package manager built in
20:24 <+bridge> [ddnet] <Jupstar> if u need a highly tuned version of whatever
20:24 <+bridge> [ddnet] <Jupstar> u just use that lib
20:24 <+bridge> [ddnet] <Ryozuki> and c++ regex is slower than opening php and doing regex there
20:24 <+bridge> [ddnet] <Jupstar> xD
20:24 <+bridge> [ddnet] <Jupstar> c++ regex sucks bcs u cannot use it without try catch
20:24 <+bridge> [ddnet] <Jupstar> or ur code will crash xD
22:16 <+bridge> [ddnet] <Learath2> Mh, I'd think this depends on implementation. But LOL, what shitty regex implementation do they use?
22:18 <+bridge> [ddnet] <chillerdragon> Every other language probably implemented their Regex in C or C++
22:28 <+bridge> [ddnet] <Learath2> Rust has a pure Rust regex engine. PHP and Python do rely on C implementations
22:30 <+bridge> [ddnet] <Learath2> But I'm pretty sure no language uses the C++ std::regex to implement their regexes, given how badly everyone talks about the C++ ones
23:20 <+bridge> [ddnet] <Ryozuki> rust regex is good
23:20 <+bridge> [ddnet] <Ryozuki> but its not in the std
23:20 <+bridge> [ddnet] <Ryozuki> and its a good thing they decided that
23:21 <+bridge> [ddnet] <Ryozuki> https://docs.rs/regex/1.6.0/regex/
