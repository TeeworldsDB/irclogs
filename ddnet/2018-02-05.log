00:02 <+bridge> [ddnet] <RafaelFF> @heinrich5991 Ignored files can still be added and committed to the Git tree, though.
00:51 < ddnet-commits> [ddnet] heinrich5991 opened pull request #1017: Organize .gitignore and also ignore build dir stuff (master...pr_gitignore_cmake_builds) https://git.io/vNp2u
08:03 < ddnet-commits> [ddnet] def- closed pull request #1017: Organize .gitignore and also ignore build dir stuff (master...pr_gitignore_cmake_builds) https://git.io/vNp2u
14:13 <+bridge> [freenode] <nemo> hm. regex might be clearer
14:15 <+bridge> [freenode] <nemo> oh... huh. doesn't seem gitignore supports syntax: regexp ?
14:15  * bridge [freenode] <nemo> shrugs
14:22 <@deen> nemo: no, this is what's matchable: https://git-scm.com/docs/gitignore#_pattern_format
14:27 <+bridge> [freenode] <nemo> yeah. was reading that
14:27 <+bridge> [freenode] <nemo> guess hg is spoiling me again
14:33 <@heinrich5991> nemo: using regexes also complicates the tools that have to deal with .hgignores
14:37 < ddnet-commits> [ddnet] def- pushed 1 new commit to master: https://git.io/vNhW2
14:37 < ddnet-commits> ddnet/master d234c55 Dennis Felsing: Try macosx highdpi fix
14:43  * bridge [freenode] <nemo> shrugs
14:44 <+bridge> [freenode] <nemo> like regexes are such a complicated thing √¢Àú¬∫
14:44 <+bridge> [freenode] <nemo> anyway. if a tool supports .hgignore it obv has regex builtin
16:45 <+bridge> [ddnet] <Ryozuki> @heinrich5991 did you have info about the tw protocol?
16:46 <+bridge> [ddnet] <Ryozuki> https://github.com/heinrich5991/libtw2/tree/master/doc
16:46 <+bridge> [ddnet] <Ryozuki> nvm :)
16:46 <+bridge> [ddnet] <Ryozuki> this is rly handy
16:46 <+bridge> [ddnet] <heinrich5991> üòâ
16:47 <+bridge> [ddnet] <Ryozuki> https://github.com/heinrich5991/libtw2/blob/master/doc/connection.md
16:47 <+bridge> [ddnet] <Ryozuki> does the [ mean something special?
16:48 <+bridge> [ddnet] <heinrich5991> not mandatory
16:48 <+bridge> [ddnet] <Ryozuki> with all the info in doc/ is possible to make a headless client?
16:48 <+bridge> [ddnet] <heinrich5991> no
16:49 <+bridge> [ddnet] <heinrich5991> connection establishment isn't completely documented
16:49 <+bridge> [ddnet] <Ryozuki> :/
16:49 <+bridge> [ddnet] <heinrich5991> feel free to complete the docs üòâ
16:49 <+bridge> [ddnet] <Ryozuki> where should i look at (src) to fulfill that info?
16:50 <+bridge> [ddnet] <heinrich5991> you could take a look into `downloader`
16:57 <+bridge> [freenode] <nemo> oh.
16:57 <+bridge> [freenode] <nemo> mildly on topic to the above
16:57 <+bridge> [freenode] <nemo> I've been poking around at options for finally getting the workplace onto a documentation wiki
16:57 <+bridge> [freenode] <nemo> I ran into ikiwiki
16:57 <+bridge> [freenode] <nemo> http://ikiwiki.info/
16:58 <+bridge> [freenode] <nemo> it seemed not-bad-at-all - kind of a better variant of what hedgewars is currently doing
16:58 <+bridge> [freenode] <nemo> I was wondering if you guys had anything along those lines.
16:58 <+bridge> [freenode] <nemo> a wiki backed by vcs
17:01 <@heinrich5991> github wiki works ;)
17:19 <+bridge> [freenode] <nemo> heh. ah right
17:19 <+bridge> [freenode] <nemo> not the place to ask for suggestions then √∞≈∏ÀúÔøΩ
17:23 <@heinrich5991> mh?
17:23 <+Learath2> heinrich5991: I'm not learning rust as fast as I like :D
17:23 <@heinrich5991> Learath2: rust is a programming language with new concepts
17:23 <@heinrich5991> these tend to take some time learning
17:24 <+Learath2> it was more a timeconstraint issue
17:24 <+Learath2> feel free to write a parser for the teehistorian rcon things
17:26 <@heinrich5991> Learath2: what is the desired output format?
17:30 <+Learath2> [YYYY-MM-DD HH:MM:SS] KeyIdent='%s' rcon='%s'
17:31 <+Learath2> [YYYY-MM-DD HH:MM:SS] KeyIdent='%s' NickName='%s' logged in
17:31 <+Learath2> s/$/\/out/
17:31 <+Learath2> [YYYY-MM-DD HH:MM:SS] KeyIdent='%s' changed nick %s->%s
17:31 <@heinrich5991> s#$#/out#
17:32 <+Learath2> would also be useful
17:32 <+Learath2> keep forgetting you can use something other then /
17:34 <+Learath2> heinrich5991: those messages are grep friendly enough, right?
17:35 <@heinrich5991> I guess?
17:35 <@heinrich5991> dunno
17:35 <@heinrich5991> we can change them on a whim ;)
17:35 <+Learath2> oh yeah true, we already have the data
17:36 <+Learath2> heinrich5991: do you have KeyIdent available in teehistorian files btw?
17:36 <@heinrich5991> yes
17:36 <@heinrich5991> it's what I recently added, don't remember?
17:36 <+Learath2> wasn't sure if you added keyid which is only valid for that session or keyident
17:37 <+bridge> [ddnet] <heinrich5991> keyident IIRC
17:37 <+Learath2> btw @heinrich5991 bridge is uncloaked if you don't know
17:38 <@heinrich5991> yea, I know
17:38 <@heinrich5991> haven't added an issue to matterbridge yet
18:16 <+bridge> [ddnet] <Ryozuki> \\o/
18:16 <+bridge> [ddnet] <Ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/410121597068902421/VpKY0I3-RuSPEk85hde83w.png
18:21 <+bridge> [ddnet] <Ryozuki> what is the use of extra_token and token anyway?
18:21 <+bridge> [ddnet] <Ryozuki> oh
18:21 <+bridge> [ddnet] <Ryozuki> nvm i know now
18:28 <+bridge> [ddnet] <Learath2> oh great Savander isn't here anymore
18:28 <@deen> why is that great?
18:28 <+bridge> [ddnet] <Learath2> </sarcasm>
18:28 <+bridge> [ddnet] <jao> because you bullied him away üë∫
18:29 <+bridge> [ddnet] <Learath2> any of you people familiar with symfony?
18:30 <+bridge> [ddnet] <Ryozuki> savander ü§£
18:33 <+Learath2> well if any of you come accross Savander tell him I'm sorry for talking
18:35 <+bridge> [ddnet] <noby> :ddnet: :ddnet2: :ddnet: :ddnet2: :ddnet:
19:24 < ddnet-commits> [ddnet] yangfl opened pull request #1021: CMakeLists.txt: enable using system libwebsockets, pnglite, wavpack (master...temp2) https://git.io/vNhA0
19:33 <+bridge> [ddnet] <DanilBest> spam of issue
19:33 <+bridge> [ddnet] <DanilBest> xD
19:53 <+bridge> [ddnet] <Ryozuki> @heinrich5991 consider https://github.com/heinrich5991/libtw2/pull/6
19:53 <+bridge> [ddnet] <heinrich5991> @Ryozuki I don't want to add code
19:53 <+bridge> [ddnet] <Ryozuki> its rly handy
19:53 <+bridge> [ddnet] <heinrich5991> if you want code, look at the teeworlds/DDNet code
19:53 <+bridge> [ddnet] <Ryozuki> or atleast add this
19:53 <+bridge> [ddnet] <Ryozuki> https://github.com/ddnet/ddnet/blob/43f246f17495607b80c4c0d9092a506535a4619a/src/engine/shared/compression.cpp#L33
19:53 <+bridge> [ddnet] <Ryozuki> you make life easier for others
19:54 <+bridge> [ddnet] <Ryozuki> (link)
19:54 <+bridge> [ddnet] <heinrich5991> the documentation is not for finding the code
19:54 <+bridge> [ddnet] <Ryozuki> ok wathever
19:54 <+bridge> [ddnet] <heinrich5991> the docs are for describing the protocol
19:54 <+bridge> [ddnet] <heinrich5991> look ‚Äì if I want to see how it is implemented in teeworlds, I can go to the code and look
19:54 <+bridge> [ddnet] <Ryozuki> you know that some docs contain code as example?
19:55 <+bridge> [ddnet] <heinrich5991> dunno
19:55 <+bridge> [ddnet] <Ryozuki> they do
19:55 <+bridge> [ddnet] <Ryozuki> https://nodejs.org/api/dgram.html
19:55 <+bridge> [ddnet] <Ryozuki> scroll
19:55 <+bridge> [ddnet] <heinrich5991> this is supposed to be some kind of document that should allow clean-room engineering
19:55 <+bridge> [ddnet] <Ryozuki> u will see code examples
19:55 <+bridge> [ddnet] <heinrich5991> i.e. if you never look at the original code, you should be able to produce an equivalent implementation
19:55 <+bridge> [ddnet] <heinrich5991> if I add original code to the document, it defeats the purpose IMO
19:56 <+bridge> [ddnet] <Ryozuki> its not about original code but an example of implementation
19:56 <+bridge> [ddnet] <heinrich5991> but then people will take the implementation and see it as the only way to do things
19:56 <+bridge> [ddnet] <heinrich5991> I'm trying to say what part of the implementation matters and which does not
19:56 <+bridge> [ddnet] <Ryozuki> if you can read peoples mind then i guess yes
19:57 <+bridge> [ddnet] <Ryozuki> well i see you don't want it, i will just clone it and add it
19:57 <+bridge> [ddnet] <heinrich5991> I won't stop you from doing that ^^
19:57 <+Learath2> s/won't/can't/ :D
19:57 <+bridge> [ddnet] <Ryozuki> ?
19:57 <+bridge> [ddnet] <Ryozuki> what even means s/
19:58 <+bridge> [ddnet] <heinrich5991> I won't and can't stop you, @Learath2, does that make you happy?
19:58 <+bridge> [ddnet] <heinrich5991> `s/search/replacement`
19:59 <+Learath2> positively cheerful :)
19:59 <@deen> Learath2: Rico said you forgot to start ictf servers yesterday btw :D
19:59 <+Learath2> deen: oh yeah, that was an insane day
19:59 <@deen> luckily I was online in the morning and could do it
19:59 <+bridge> [ddnet] <Ryozuki> https://github.com/Ryozuki/libtw2/blob/master/doc/int.md ‚ù§
20:00 <+Learath2> heinrich5991: up for some ddnet later?
20:00 <@heinrich5991> very much later maybe
20:00 <+Learath2> I somehow can't stay up till very-much later the last week, I just pass out at around 2400 for some reason :/
20:01 <@heinrich5991> currently trying to do the cmakelists.txt thing
20:01 <@deen> It's called "needing a reasonable amount of sleep to function"
20:01 <@deen> heinrich5991: wait
20:01 <@deen> the debian guy did it already
20:01 <@heinrich5991> yea, seen that
20:01 <@deen> https://github.com/ddnet/ddnet/pull/1021
20:02 <+Learath2> well yeah but I'd rather wake up at 0800 and not 0600
20:03 <@heinrich5991> deen: didn't follow the rest of the `Find` modules and (now googled) seem to be a copy-paste from code from the net
20:03 <@deen> heh, ok
20:03 <@deen> I didn't look at the changed files
20:37 <+bridge> [ddnet] <ReiTW | Blizzard Team> does someone knows what can cause that?
20:37 <+bridge> [ddnet] <ReiTW | Blizzard Team> 0x00007ffff6e631ea in _int_free (av=0x7ffff718f620 <main_arena>, p=<optimized out>, have_lock=0) at malloc.c:3987
20:37 <+bridge> [ddnet] <ReiTW | Blizzard Team> #0  0x00007ffff6e631ea in _int_free (av=0x7ffff718f620 <main_arena>, p=<optimized out>, have_lock=0) at malloc.c:3987
20:37 <+bridge> [ddnet] <ReiTW | Blizzard Team> #1  0x000000000043784a in mem_free (p=0x1731640) at src/base/system.c:491
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> #2  0x00000000004302c4 in CSnapshotStorage::PurgeUntil (this=0x7ffff5b1d390, Tick=2418360) at src/engine/shared/snapshot.cpp:413
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> #3  0x000000000043eb70 in CServer::DoSnapshot (this=0x7ffff5857010) at src/engine/server/server.cpp:751
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> #4  0x0000000000443910 in CServer::Run (this=0x7ffff5857010) at src/engine/server/server.cpp:1848
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> #5  0x0000000000446459 in main (argc=3, argv=0x7fffffffe138) at src/engine/server/server.cpp:2525
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> wew
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> does someone knows what can cause that?
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> 
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> ```bash
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> 0x00007ffff6e631ea in _int_free (av=0x7ffff718f620 <main_arena>, p=<optimized out>, have_lock=0) at malloc.c:3987
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> #0  0x00007ffff6e631ea in _int_free (av=0x7ffff718f620 <main_arena>, p=<optimized out>, have_lock=0) at malloc.c:3987
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> #1  0x000000000043784a in mem_free (p=0x1731640) at src/base/system.c:491
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> #2  0x00000000004302c4 in CSnapshotStorage::PurgeUntil (this=0x7ffff5b1d390, Tick=2418360) at src/engine/shared/snapshot.cpp:413
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> #3  0x000000000043eb70 in CServer::DoSnapshot (this=0x7ffff5857010) at src/engine/server/server.cpp:751
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> #4  0x0000000000443910 in CServer::Run (this=0x7ffff5857010) at src/engine/server/server.cpp:1848
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> #5  0x0000000000446459 in main (argc=3, argv=0x7fffffffe138) at src/engine/server/server.cpp:2525
20:38 <+bridge> [ddnet] <ReiTW | Blizzard Team> ```
20:39 <+bridge> [ddnet] <Learath2> not really, you could try running it through valgrind or compiling with -fsanitize=address
20:39 <+bridge> [ddnet] <ReiTW | Blizzard Team> hmh ok
20:41 <+bridge> [ddnet] <ReiTW | Blizzard Team> mem_free(pHolder);
20:41 <+bridge> [ddnet] <ReiTW | Blizzard Team> this shit crash
20:47 <+bridge> [ddnet] <Learath2> is this ddnet btw?
20:55 <+bridge> [ddnet] <fokkonaut> i guess no
20:55 <+bridge> [ddnet] <ReiTW | Blizzard Team> it is
20:55 <+bridge> [ddnet] <fokkonaut> some botty g** shit i think
20:55 <+bridge> [ddnet] <fokkonaut> o.O
20:55 <+bridge> [ddnet] <ReiTW | Blizzard Team> but not the newest
20:55 <+bridge> [ddnet] <fokkonaut> baumalein != ddnet
20:56 <+bridge> [ddnet] <fokkonaut> wait... rei is it you? xD
20:56 <+bridge> [ddnet] <ReiTW | Blizzard Team> no
20:56 <+bridge> [ddnet] <ReiTW | Blizzard Team> i'm Rei
20:56 <+bridge> [ddnet] <fokkonaut> xD
20:57 <@deen> wrong pointer? freeing twice?
20:57 <+bridge> [ddnet] <fokkonaut> see you later alligator
20:57 <+bridge> [ddnet] <fokkonaut> in a while crocodile
20:59 <+bridge> [ddnet] <ReiTW | Blizzard Team> idk :/
20:59 <+bridge> [ddnet] <ReiTW | Blizzard Team> thats the problem
21:12 <+bridge> [ddnet] <noby> lol is this in the server code
21:12 <+bridge> [ddnet] <noby> for other reasons i ran my server thru valgrind earlier and there were a few uninitialized arrays in server.cpp dosnapshot function
21:12 <+bridge> [ddnet] <deen> sounds like that should be fixed
21:14 <+bridge> [ddnet] <noby> i added ` = { 0 };`  to all of them in this function and it made valgrind stop spamming
21:14 <+bridge> [ddnet] <noby> https://cdn.discordapp.com/attachments/293493549758939136/410166258219220993/Screen_Shot_2018-02-05_at_2.13.25_PM.png
21:14 <+bridge> [ddnet] <deen> well, are they actually ever accessed beyond their written position?
21:15 <+bridge> [ddnet] <deen> is it a valgrind false positive?
21:15 <+bridge> [ddnet] <noby> not sure tbh
21:20 <+eeeee> valgrind might be complaining about reading uninitialized data (but still in bounds)
21:20 <+eeeee> reading such data won't segfault, but can lead to non-deterministic behavior 
21:21 <+bridge> [ddnet] <noby> if the functions the arrays r passed to are relying on them to be null terminated i can see why it might cause a problem
21:21 <+bridge> [ddnet] <noby> idk much about how snapshots work
21:22 <+eeeee> i doubt they are null terminated
21:23 <+eeeee> it sucks to append to null terminated structs
21:24 <+bridge> [ddnet] <noby> hm true
