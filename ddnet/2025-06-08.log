00:14 < bridge> <totar> Need to send inputs between all clients p2p over steam tunnel network xD
00:15 < bridge> <Assa> yes send me your IP adress
00:15 < bridge> <Assa> yes send me your IP address, otherwise it's not p2p
00:18 < bridge> <totar> Why is it not p2p? The network model is still p2p and steam shares your IP address with players on your friendslist for true p2p if you allow it
00:19 < bridge> <totar> Even without IP sharing you might get lower latency over steam servers than direct connection
00:20 < bridge> <Assa> this highly depends on internet routing
00:20 < bridge> <totar> "might"
00:20 < bridge> <gorp_tw> i think for a lot of people steam routing would be better
00:26 < bridge> <Jupstar ‚ú™> I guess depends on region. Usa is much bigger than many countries in Europe
00:27 < bridge> <Jupstar ‚ú™> I often get best ping to Frankfurt even tho Netherlands are closer to me
00:30 < bridge> <Jupstar ‚ú™> The funniest thing is actually that i have bad ping to a friend that lives in the same city as me. We sometimes stream p2p and it sucks compared to using my vps in south Germany xd
00:30 < bridge> <Jupstar ‚ú™> 
00:30 < bridge> <Jupstar ‚ú™> That's just sad
00:30 < bridge> <gorp_tw> that is very sad
00:57 < bridge> <sans._.> any linux head around? I may be missing a few braincells but istg this bash function is correct and yet syntax error :wtf: 
00:57 < bridge> <sans._.> 
00:57 < bridge> <sans._.> ```bash
00:57 < bridge> <sans._.> c() {
00:57 < bridge> <sans._.>   output=$(cat)
00:57 < bridge> <sans._.>   echo -e "$output" | tee >(xclip -selection clipboard >/dev/null)
00:57 < bridge> <sans._.>   echo -e "\e[34m\n\nCopied above output to clipboard\e[0m"
00:57 < bridge> <sans._.> }
00:57 < bridge> <sans._.> ```
00:57 < bridge> <sans._.> https://cdn.discordapp.com/attachments/293493549758939136/1381044402830577746/image.png?ex=68461554&is=6844c3d4&hm=4941d04842a6bb1eae7d693d2b2d1ef1b1338993becbd83b4ca52d666f8128a1&
00:57 < bridge> <sans._.> is that not how you define a function :dumb:
01:04 < bridge> <teero777> are you sure you're running this with zsh or bash? Is there anything before that line that might lead it to error on that line? Maybe you can't name a function `c`. Not sure
01:04 < bridge> <sans._.> I mean, nothing seems out of the ordinary
01:04 < bridge> <sans._.> https://cdn.discordapp.com/attachments/293493549758939136/1381046257212063854/image.png?ex=6846170e&is=6844c58e&hm=eeb487c212e579e18324af877a81dc71a2dbfdcbcca9a0174f170ab34c8f3e1a&
01:05 < bridge> <sans._.> declaring it using the other syntax worked :Bruh:
01:57 < bridge> <Ewan> what system are you on
02:03 < bridge> <Ewan> `>()`? `>$()`
05:50 < bridge> <gorp_tw> I'm scratching my brain at this because it may actually be possible to do "scripts" in a primitive way with this
05:50 < bridge> <gorp_tw> but I'm not sure if I can figure out how you would do it. something about testing for a null bind or executing something else
05:51 < bridge> <gorp_tw> kinda scary imo
08:17 < bridge> <melon> am i the only one who thinks this is any of
08:17 < bridge> <melon> * to complex
08:17 < bridge> <melon> * vibe coded?
08:17 < bridge> <melon> 
08:17 < bridge> <melon> Maslo if you're here and thats not the case, i really dont want to be rude or lazily talk bad about you, but i'm just curious about the "error handling" in the screenshot ._.
08:18 < bridge> <melon> https://cdn.discordapp.com/attachments/293493549758939136/1381155257828114563/image.png?ex=68467c92&is=68452b12&hm=fafd58cdc291c282a66a5dcd625a509cacffb1cef7558999f0f38a38f4edfb2f&
08:47 < bridge> <chillerdragon> Melon hater
08:54 < bridge> <always> this looks vibe coded
08:55 < bridge> <always> chillerdragon whats the website to use the websocket client
09:13 < bridge> <chillerdragon> https://chat.zillyhuhn.com
09:13 < bridge> <chillerdragon> I think the sign up token is nimrocks if I remember correctly
09:14 < bridge> <chillerdragon> @alw5:
09:18 < ws-client> <always> hi
09:19 < ws-client> <always> how do i get a pfp
09:23 < bridge> <chillerdragon> You don‚Äôt. irc has no profile pictures.
09:23 < bridge> <always> https://cdn.discordapp.com/attachments/293493549758939136/1381171753983803403/Discord_33wJOBnZBa.png?ex=68468bef&is=68453a6f&hm=e37e980031e0483bd04021c64d530b08bbdfeb2c87dd6a188dc19f268da1e9a2&
09:23 < bridge> <always> you do
09:23 < bridge> <chillerdragon> I am on matrix right now
09:25 < bridge> <always> which client do u use
09:25 < bridge> <chillerdragon> Element mostly but I hate it
09:25 < bridge> <chillerdragon> It‚Äôs still better than safari on ios or the weird ass irc clients for ios so ‚Ä¶
09:54 < bridge> <physyc_> üéÅ STEAM GIVES THE GIFT - [steamcommunity.com/id=6464453489](https://u.to/xC9IIg) @everyone
10:24 < bridge> <melon> i dislike elements
10:24 < bridge> <melon> its mobile client is just
10:24 < bridge> <melon> :pepepuke:
10:41 < bridge> <inv41idu53rn4m3> If this actually just swaps two binds it shouldn't add anything new, unless it has something to do with execution order details that can be abused
10:42 < bridge> <robyt3> "if this actually just swaps two binds" which is does not
10:43 < bridge> <robyt3> "if this actually just swaps two binds" which it does not
10:43 < bridge> <inv41idu53rn4m3> The number of possible bind states is finite, so you can write a set of regular bind commands that's equivalent to a swap_binds in any of those states
11:39 < bridge> <zelamusinc> is there an api to pull the countryflags?
11:41 < bridge> <Jupstar ‚ú™> you can always download the latest version here:
11:41 < bridge> <Jupstar ‚ú™> https://github.com/ddnet/ddnet/tree/master/data/countryflags
12:19 < bridge> <Assa> the doom in ddnet thing ins intriguing, we can already put the shrek movie into a map :3
12:20 < bridge> <Assa> but he is skill issued, because he want to modify the game
13:18 < bridge> <Solly (bun bun)> And if it did, it would be allowed?
13:19 < bridge> <Assa> @kebscs  @jupeyy_keks any opinion on this triangles? :3
13:19 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1381231122435932221/screenshot_2025-06-08_13-18-46.png?ex=6846c339&is=684571b9&hm=62797d4c0d8c019f13ac66d50cf7e311e3d70832748e0b1c8ca6ec5b4bd491ff&
13:19 < bridge> <Assa> I think I could make them black, they are a bit invisible, but other than that
13:20 < bridge> <Jupstar ‚ú™> Grenzwertig
13:24 < bridge> <robyt3> It's not really possible to ensure that it won't change something with the amount of options we already have. In the best case it seems unnecessary to me because you could achieve the same effect with unbind and bind already.
13:27 < bridge> <Assa> lim x -> x < Grenze
13:27 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1381233078621569105/screenshot_2025-06-08_13-26-36.png?ex=6846c50c&is=6845738c&hm=82ee3d4626c36b5587aad92a70f863a99eb36d999141ef7bc194db6ac1f69f3b&
13:27 < bridge> <Assa> definately the black ones are better, idk if we should just rotate the sprite.
13:29 < bridge> <kebscs> idk, i dont think these are neccessary
13:31 < bridge> <Assa> I think they are
13:31 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1381234129299050556/screenshot_2025-06-08_13-30-44.png?ex=6846c606&is=68457486&hm=a80f248f1ded1f7305b3cd74d9ee1ffe8dc68f413f60fbd05b7fd1ace70ce0dc&
13:32 < bridge> <kebscs> looks not teeish
13:35 < bridge> <Assa> maybe
13:36 < bridge> <Jupstar ‚ú™> But they are editor only?
13:37 < bridge> <Jupstar ‚ú™> In the end the editor is a tool, so I don't think it's bad to give it technical visuals
13:39 < bridge> <Assa> in the end this is just a mock, I am currently redoing the weapons unrotated and look if it looks better, certainly more teeish
13:57 < bridge> <Assa> yeah I think this'll look the best, however sb should do it properly with the vectorgraphics
13:57 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1381240821894090864/screenshot_2025-06-08_13-56-52.png?ex=6846cc42&is=68457ac2&hm=3a7f63a8eaae26dd2845c9baf37d6427b90c2543b8e1749bae85354632d0e2ce&
13:57 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1381240822401470474/screenshot_2025-06-08_13-57-03.png?ex=6846cc42&is=68457ac2&hm=2380d59d5538413c190172ae79c31ecfa254ec5435fc9526323ee46a9093b1c4&
14:02 < bridge> <kebscs> yea this works
14:11 < bridge> <Assa> man I miss hecta, I thought finally a designer who wants to work with me üò¶
15:07 < bridge> <gorp_tw> nah they need to take care of themselves lol
15:38 < bridge> <gorp_tw> If there's no additional feedback I may submit a PR next week with all of this in it
15:38 < bridge> <kebscs> submit :owo:
17:02 < bridge> <Jupstar ‚ú™> Who is pro at using patigas map analysis tool?
17:02 < bridge> <Jupstar ‚ú™> 
17:02 < bridge> <Jupstar ‚ú™> I want to know in % how many quad layers of all maps total are ...
17:02 < bridge> <Jupstar ‚ú™> - without anim
17:02 < bridge> <Jupstar ‚ú™> - with only color anim
17:02 < bridge> <Jupstar ‚ú™> - with only pos/rot anim
17:02 < bridge> <Jupstar ‚ú™> xd
17:03 < bridge> <Jupstar ‚ú™> Who is pro at using patigas map analysis tool?
17:03 < bridge> <Jupstar ‚ú™> 
17:03 < bridge> <Jupstar ‚ú™> I want to know in % how many quad layers of all maps total are ...
17:03 < bridge> <Jupstar ‚ú™> - without anim
17:03 < bridge> <Jupstar ‚ú™> - with only color anim
17:03 < bridge> <Jupstar ‚ú™> - with only pos/rot anim
17:03 < bridge> <Jupstar ‚ú™> - with both
17:35 < bridge> <chillerdragon> Is there a specific analysis tool that can do that? Or you mean just writing a twmap script?
17:35 < bridge> <chillerdragon> Last time I wanted to proof during stream that chatgpt sucks it produced some correct twmap python script first try
17:36 < bridge> <chillerdragon> @patiga: pretty cool that chatgpt knows about specifics of your library huh?
17:43 < bridge> <Jupstar ‚ú™> yeah some script
17:43 < bridge> <Jupstar ‚ú™> 
17:43 < bridge> <Jupstar ‚ú™> we really need like a web version where you can exec some script on all current ddnet maps xd
17:43 < bridge> <melon> ask it who melon is in the ddnet community
17:44 < bridge> <chillerdragon> I would host one but then lerato would os.system rm rf my disk
17:44 < bridge> <zhn> there's webversion btw xd
17:44 < bridge> <zhn> twmap.patiga.eu
17:44 < bridge> <zhn> https://twmap.patiga.eu
17:44 < bridge> <chillerdragon> Where you can run arbitrary python code?
17:44 < bridge> <chillerdragon> Thats not what josspiz needs
17:45 < bridge> <Jupstar ‚ú™> Yeah and it needs to run on all ddnet maps
17:45 < bridge> <zhn> i know, i mean it would be good thing to add prob
17:45 < bridge> <zhn> but seems it will need much more ui magic to get it good
17:46 < bridge> <chillerdragon> Is that editor client side or does it have a backend?
17:48 < bridge> <zhn> probably wasm compiled thing
17:49 < bridge> <zhn> https://gitlab.com/Patiga/twmap/-/blob/master/twmap-web/Cargo.toml?ref_type=heads
17:53 < bridge> <patiga> client-side
17:54 < bridge> <patiga> pls show :o
17:56 < bridge> <chillerdragon> I am on the phone right now. But I asked the GitHub llm to print all map layer names using twmap in python. And it spit out a script iterating groups and layers that threw no errors.
18:11 < bridge> <Solly (bun bun)> cant llms consume huge files now
18:13 < bridge> <chillerdragon> You mean if you dump the files basically into the prompt?
18:14 < bridge> <chillerdragon> But I did not give it anything
18:26 < bridge> <melon> thanks AI
18:26 < bridge> <melon> https://cdn.discordapp.com/attachments/293493549758939136/1381308484070539334/image.png?ex=68470b46&is=6845b9c6&hm=ad75e7dd20e45602c397e2ca2e66db8779732e1a12068cd8beab1d268d38c3c4&
18:28 < bridge> <Jupstar ‚ú™> Sick didnt know you #1 points wise
18:28 < bridge> <melon> i'm jujt built different
18:28 < bridge> <melon> i'm just built different
18:29 < bridge> <chillerdragon> It knew you are mod? Thats impressive af
18:29 < bridge> <Jupstar ‚ú™> last 365 days less points than last 30 days and last 7 days
18:29 < bridge> <Jupstar ‚ú™> not bad xD
18:29 < bridge> <melon> deen mentioned openAI has been sniffing ddnet.org pretty actively
18:30 < bridge> <chillerdragon> How loud can they sniff that deen notices it?
18:30 < bridge> <Jupstar ‚ú™> this is always the proof that AI is completely stupid
18:31 < bridge> <melon> https://cdn.discordapp.com/attachments/293493549758939136/1381309658521665627/image.png?ex=68470c5e&is=6845bade&hm=411561cf4abe8840f9f59876e04488a6ca99303941098ba5594edfca2ba19a9e&
19:00 < bridge> <zelamusinc> how can i contact sp someone
19:01 < bridge> <vahemaaa> what is sp
19:02 < bridge> <zelamusinc> its the name of the person managing the domains
19:02 < bridge> <zelamusinc> afaik
19:09 < bridge> <Ewan> he is banned from the discord last i heard but sometimes he chats here unwelcomed on irc
19:37 < bridge> <chillerdragon> somepeople Clan
19:38 < bridge> <vahemaaa> thanks Kral!
19:38 < bridge> <chillerdragon> @zelamusinc: I may have trolled you a bit saying sp manages the domains. It was basically a joke because he is a known troll and somewhat enemy of ddnet staff. He once managed to get his hands on one of the domains and DDNet went full panic mode trying to deactivate all old clients
19:39 < bridge> <chillerdragon> But of course sp someone actually never did anything malicious he should be ddnet admin if you ask me
19:40 < bridge> <zelamusinc> yeah,when you said it i searched up sp someones mentions and thought "why would they still let him manage the domains?"lol. but do you actually know who does?
19:41 < bridge> <zelamusinc> yeah,when you said it i searched up sp someones mentions and thought "why would they still let him manage the domains?"lol. but do you know who actually  does? i need a subdomain for my "DDNet stats" site.
19:42 < bridge> <kebscs> i dont think they give subdomains to people outside of admin circle
19:42 < bridge> <kebscs> wouldnt make sense if they did
19:50 < bridge> <zelamusinc> makes sense
19:50 < bridge> <Ewan> he is harmless
19:50 < bridge> <Ewan> just irritating if you let him do that
19:50 < bridge> <Ewan> but good company otherwise
19:50 < bridge> <zelamusinc> how does ddnet earn money?
19:50 < bridge> <Ewan> donations
19:50 < bridge> <kebscs> <https://ddnet.org/funding/>
19:51 < bridge> <Ewan> ^
19:51 < bridge> <zelamusinc> great that they make everythin they earn public
19:51 < bridge> <Ewan> i feel like he renewed it for a year and idk if ownership was actually transfered after that. i feel like it probably was
20:02 < bridge> <qxdfoxy> :kek:
20:02 < bridge> <qxdfoxy> https://cdn.discordapp.com/attachments/293493549758939136/1381332627813957872/image.png?ex=684721c2&is=6845d042&hm=2af2da9391134302bf5c92edbad5ac35fbcaa8d29d2ecc45f7c6adbcd8fdc0b5&
20:09 < bridge> <TsFreeeeeeeeeddie> if you ask AI about me it might give you my home address
20:13 < bridge> <Assa> @jupeyy_keks https://github.com/ddnet/ddnet/pull/10334#issuecomment-2954206488
20:13 < bridge> <Assa> 
20:14 < bridge> <Assa> go test it, this doesn't work üòÆ
20:14 < bridge> <Jupstar ‚ú™> Yeah
20:16 < bridge> <Jupstar ‚ú™> I still don't understand why in your pipeline the game layer is not rendered in the background
20:16 < bridge> <Jupstar ‚ú™> That sounds like a bug to me aswell
20:17 < bridge> <Assa> why do you want ro render the game layer in the Background?
20:17 < bridge> <Jupstar ‚ú™> Where do you render it?
20:18 < bridge> <Jupstar ‚ú™> It always was in the background
20:18 < bridge> <Assa> foreground
20:18 < bridge> <Assa> no it wasn't?
20:18 < bridge> <Jupstar ‚ú™> Ok you're right
20:18 < bridge> <Jupstar ‚ú™> Now I get why you said if it's the first layer
20:18 < bridge> <Assa> if it was, then I already broke it
20:18 < bridge> <Jupstar ‚ú™> But I assumed on 99% of all maps the first layer in the game group is the game layer
20:19 < bridge> <Assa> there is one more condition
20:19 < bridge> <Jupstar ‚ú™> I guess the old pipeline simply still mapped the screen
20:19 < bridge> <Jupstar ‚ú™> anyway
20:19 < bridge> <Jupstar ‚ú™> And that is why it worked
20:19 < bridge> <Assa> the old rendering applied the group and then returned
20:20 < bridge> <Jupstar ‚ú™> @essigautomat one _problem_ generally of this whole game layer defines bg and fg is simply that if you put a front layer before the game layer, that front layer is literally part of the background
20:20 < bridge> <Assa> also the group before might have valid paras and stuff and the rendering might not break
20:21 < bridge> <Jupstar ‚ú™> i assume you didnt fix that?
20:21 < bridge> <Assa> yes it is, it did this previously, too
20:21 < bridge> <Jupstar ‚ú™> I think this shouldn't be possible
20:21 < bridge> <Jupstar ‚ú™> Entities rendering should be consistent
20:22 < bridge> <Assa> it even was a rule on teinis server, to put start, fin and time cps in the font layer and then in the Background, it's a feature
20:23 < bridge> <Jupstar ‚ú™> No
20:23 < bridge> <Jupstar ‚ú™> I want to prevent this discussion
20:23 < bridge> <Jupstar ‚ú™> Physics layers should be consistent
20:24 < bridge> <Assa> never has been :feelsbadman:
20:24 < bridge> <Jupstar ‚ú™> It was a bug that they were not
20:24 < bridge> <Jupstar ‚ú™> But same with coloring physics layers
20:25 < bridge> <Jupstar ‚ú™> That was just as stupid
20:28 < bridge> <Assa> we should put groups also in the pipeline, omg I'll do a followup
20:53 < bridge> <Assa> @jupeyy_keks now I only set the game group view, updated the PR
20:55 < bridge> <Jupstar ‚ú™> n1
21:01 < bridge> <ryozuki> https://github.com/poem-web/poem
21:12 < bridge> <Ewan> built in openapi :brownbear:
21:12 < bridge> <Ewan> updated schemars lately without updating axum and i just kept getting "yadda yadda does not implement Handler<generics>"
21:12 < bridge> <Ewan> and the debug handler macro built for that did not change the error msg whatsoever
21:13 < bridge> <Ewan> very fun discrepancy to deal with
21:13 < bridge> <kebscs> another rust slop
21:13 < bridge> <Ewan> clearly u dont write rust
21:13 < bridge> <Ewan> that's ok
21:13 < bridge> <Jupstar ‚ú™> We've all been there
21:13 < bridge> <kebscs> im not into rewriting
21:13 < bridge> <kebscs> all rust projects are just rewrites
21:13 < bridge> <Jupstar ‚ú™> better rewrites
21:14 < bridge> <kebscs> not better
21:15 < bridge> <Jupstar ‚ú™> I dunno
21:15 < bridge> <Jupstar ‚ú™> I think lots of rewrites are better
21:15 < bridge> <Jupstar ‚ú™> winit is better than SDL
21:15 < bridge> <Jupstar ‚ú™> but SDL still has more features
21:16 < bridge> <Ewan> why generalize like this
21:16 < bridge> <Ewan> unless your goal is to discount it as a language
21:16 < bridge> <Ewan> it has real good use cases
21:16 < bridge> <Jupstar ‚ú™> Rewrites are often better than the original, since they can fix all the annoying stuff xd
21:16 < bridge> <Ewan> yeah also not everything is a rewrite? xd
21:16 < bridge> <Ewan> the things that are do provide the intrinsic benefits of rust that you have probably heard about to a tipping point
21:16 < bridge> <Ewan> there's definitely demand for it
21:18 < bridge> <kebscs> havent heard
21:18 < bridge> <kebscs> no demand
21:19 < bridge> <Ewan> they must be buying github stars
21:19 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1381351850866905248/image.png?ex=684733a9&is=6845e229&hm=7c580f4d8d87cff63ed43cb88fca3f2161c50f73a7a4201b4e3b48e62ed6ce75&
21:19 < bridge> <Jupstar ‚ú™> No stars in rust projects are some religious xD
21:19 < bridge> <Jupstar ‚ú™> U post your new lib and all the fanboys press star
21:19 < bridge> <Jupstar ‚ú™> Ok actually it's not even about rust
21:20 < bridge> <jxsl13> dystopic community
21:20 < bridge> <Jupstar ‚ú™> I feel like 90% of all projects are just hype generation
21:20 < bridge> <kebscs> all the nerds are just on gfithub to star as many rust projects as they can
21:20 < bridge> <kebscs> but they have no real use case
21:20 < bridge> <Jupstar ‚ú™> Well you are defs wrong about they have no use case
21:21 < bridge> <Jupstar ‚ú™> But there are many unfinished projects that got more hype than they deserve
21:21 < bridge> <Ewan> yea it's not just rust tho
21:21 < bridge> <Jupstar ‚ú™> @kebscs if you want to know if you like rust, use it for a few months and you'll see
21:21 < bridge> <Ewan> mainly the drought of original ideas imposed by the abundance of devs
21:21 < bridge> <Ewan> not an industry specific thing
21:21 < bridge> <milkeeycat> everyone should use the superior language, C
21:22 < bridge> <kebscs> see why would i use it
21:22 < bridge> <kebscs> when c++ and python already does the job
21:22 < bridge> <kebscs> if i have to give it few months ill just rather use the original things
21:22 < bridge> <kebscs> than rewrites
21:22 < bridge> <Jupstar ‚ú™> Well both have things you might find annoying
21:22 < bridge> <Jupstar ‚ú™> E.g. segfaults
21:23 < bridge> <kebscs> just write good code and no segfault
21:23 < bridge> <Jupstar ‚ú™> No
21:23 < bridge> <Jupstar ‚ú™> That's sadly impossible
21:23 < bridge> <kebscs> if someone writes code that crashes theyre just trash
21:23 < bridge> <kebscs> not a language problem
21:23 < bridge> <jxsl13> rust is a great language
21:23 < bridge> <Ewan> doesn't tend to happen in rust without good reason
21:23 < bridge> <Ewan> try it and see
21:24 < bridge> <jxsl13> with a toxic community
21:24 < bridge> <Ewan> yea
21:24 < bridge> <Ewan> #1 hurdle
21:24 < bridge> <Ewan> thanks evangelists
21:24 < bridge> <jxsl13> the language is not the problem
21:24 < bridge> <louis> xd
21:24 < bridge> <aegisub> just write assembly directly then, it's faster after all
21:24 < bridge> <Jupstar ‚ú™> Only if you don't use rust xDD
21:24 < bridge> <aegisub> if you can't do that you're just trash
21:24 < bridge> <louis> ur trash if u segfault a calculator program
21:24 < bridge> <jxsl13> that's making me especially not want to use the language
21:24 < bridge> <louis> for larger projects its inevitable
21:25 < bridge> <jxsl13> you are trash
21:25 < bridge> <jxsl13> (no condition)
21:26 < bridge> <jxsl13> üòÇ
21:26 < bridge> <aegisub> projects whose sole selling point is "written in rust" are cringe but judging the whole language based on those is bad faith
21:26 < bridge> <Jupstar ‚ú™> The best thing about rust are derive macros anyway üòè
21:26 < bridge> <Jupstar ‚ú™> Your compiler sucks? Just patch it
21:26 < bridge> <kebscs> real
21:26 < bridge> <aegisub> uhh
21:26 < bridge> <aegisub> I wrote that to express my disagreement with you but sure f3 away
21:27 < bridge> <kebscs> yea i agree and also have other reasons
21:29 < bridge> <Jupstar ‚ú™> Good thing is that learning rust from a c++ standpoint is easier than starting from e.g. javascript or smth.
21:29 < bridge> <Jupstar ‚ú™> 
21:29 < bridge> <Jupstar ‚ú™> You'll see how rust tries to fix stuff that is bad in cpp.
21:29 < bridge> <Jupstar ‚ú™> And you'll probably like most, but also find some stuff annoying sometimes. But the annoyance is what makes your program often run first try
21:30 < bridge> <kebscs> if i dont want to care about code i just go python
21:30 < bridge> <aegisub> yeah ownership and move semantics in rust became much more intutive to me once I learned c++ move semantics
21:30 < bridge> <Jupstar ‚ú™> python is the slowest, non typed language
21:30 < bridge> <Jupstar ‚ú™> Why would I use it?
21:30 < bridge> <kebscs> easy and quick to code
21:31 < bridge> <Jupstar ‚ú™> for small stuff yes
21:31 < bridge> <kebscs> for bigger go c++
21:31 < bridge> <Jupstar ‚ú™> I'd not like to write smth serious in it
21:31 < bridge> <Ewan> small projects in rust are super easy ngl
21:31 < bridge> <aegisub> my biggest python project is a django web server
21:31 < bridge> <Ewan> never used django but my biggest py proj is a flask app totaling 100-150 loc?
21:32 < bridge> <Ewan> i've always just bashed instead
21:32 < bridge> <Ewan> and if i wasn't scripting i used a real programming language
21:32 < bridge> <Jupstar ‚ú™> My biggest python project was a script for blender xdd
21:32 < bridge> <Jupstar ‚ú™> maybe 1k lines
21:32 < bridge> <Ewan> yea it's ok for that
21:33 < bridge> <Ewan> IDA plugins
21:33 < bridge> <Ewan> gimp plugins
21:34 < bridge> <kebscs> and it has libraries for everything
22:38 < bridge> <ryozuki> not rly
22:38 < bridge> <ryozuki> but its ok u stay at ur c/cpp
22:39 < bridge> <kebscs> rly
22:40 < bridge> <kebscs> fr fr
22:40 < bridge> <ryozuki> ddnet is trash
22:41 < bridge> <ryozuki> well it has 2 sides its also a very knowledgeable community, most were c++ devs
22:41 < bridge> <ryozuki> many projects only selling point is written in ansi c too
22:43 < bridge> <ryozuki> however refusing to learn a language cuz some "community" or outside view is just an apology to ignorance, go learn the lang
22:43 < bridge> <ryozuki> knowledge is never bad
22:43 < bridge> <kebscs> ddnet no crash
22:43 < bridge> <ryozuki> it sure does and did in its history
22:44 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1381373235148357862/image.png?ex=68474793&is=6845f613&hm=f27a1dd0cfb2c6193935369a47cda8bb55165e0e64e5e8723ce5045578ea665e&
22:44 < bridge> <ryozuki> 3 pages
22:44 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1381373273807257740/image.png?ex=6847479d&is=6845f61d&hm=7674569c49c1271e78307794435efafcf1ad48345e1f96f38aef305e7c66d82b&
22:44 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1381373332422656051/image.png?ex=684747ab&is=6845f62b&hm=818a52fda13dfcb4b0bc816addd51fec8f33d09742579ae23de8f0e539001cfa&
22:44 < bridge> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1381373356112220170/image.png?ex=684747b0&is=6845f630&hm=3d300e952817c89d1d97469e61ec37d5753f8929a0608113e505741d66b4e8d7&
22:44 < bridge> <ryozuki> https://www.cvedetails.com/vendor/15018/Teeworlds.html
22:45 < bridge> <ryozuki> there was a segfault in vulkan_backend.cpp, @jupeyy_keks im sorry but ur trash
22:45 < bridge> <ryozuki> üò¨
22:46 < bridge> <kebscs> should have skilled up c++ to not crash
22:46 < bridge> <robyt3> https://mmmds.pl/images/teeexploit.gif
22:46 < bridge> <kebscs> instead of rust rewrite
22:46 < bridge> <robyt3> https://mmmds.pl/fuzzing-map-parser-part-1-teeworlds/
22:46 < bridge> <kebscs> :twintri:
22:46 < bridge> <ryozuki> lmao this gif
22:47 < bridge> <ryozuki> https://mmmds.pl/images/teeworlds.gif
22:48 < bridge> <robyt3> I get the feeling these are only the runs where it didn't immediately crash though, which are probably the majority
22:52 < bridge> <filoqcus> How to use chillerdragon [antibob](https://github.com/ChillerDragon/antibob/) ? xD
22:52 < bridge> <filoqcus> 
22:53 < bridge> <filoqcus> ```
22:53 < bridge> <filoqcus> PS D:\Projects\CLionProjects\antibob> make
22:53 < bridge> <filoqcus> mkdir -p build/objs/external
22:53 < bridge> <filoqcus> The syntax of the command is incorrect.
22:53 < bridge> <filoqcus> make: *** [build/objs/external/md5.o] Error 1
22:53 < bridge> <filoqcus> ```
22:53 < bridge> <chillerdragon> I never tested it on windows I am not sure it works there
22:53 < bridge> <chillerdragon> I recommend a Linux environment for building it @filoqcus
22:53 < bridge> <filoqcus> ü•≤
22:54 < bridge> <chillerdragon> I don‚Äôt know if antibot modules in general work on windows
22:54 < bridge> <robyt3> Probably doesn't work in PowerShell because various Linux command names are aliases for PowerShell CmdLets with completely different arguments
22:54 < bridge> <chillerdragon> Even if you are a die hard windows user since WSL there is no excuse to not have a Linux build environment
22:55 < bridge> <robyt3> MSYS2 works well enough as well
22:55 < bridge> <chillerdragon> Or that but I would argue it‚Äôs more complicated to setup
22:57 < bridge> <chillerdragon> @filoqcus: also be warned antibob does not detect botters! It‚Äôs just a sample project. You still have to write the actual antibot code
22:58 < bridge> <filoqcus> That's what I wanted to do)
22:59 < bridge> <chillerdragon> Yea then go to the windows store and download some free Linux. Like Debian
22:59 < bridge> <chillerdragon> You can start it as a simple terminal on your windows machine and in there you can build and run ddnet antibot
23:00 < bridge> <chillerdragon> I don‚Äôt think there is a windows DLL version for the antibot abi
23:03 < bridge> <12944qwerty> how do you check if your dummy is currently being used
23:04 < bridge> <chillerdragon> F1: cl\_dummy
23:05 < bridge> <12944qwerty> i mean in the codebase
23:06 < bridge> <chillerdragon> g\_Config.m\_ClDummy
23:07 < bridge> <melon> New client dropping soon with chiller being the helpful app again <a:nicmoji_angry:417333827506274304>
23:09 < bridge> <chillerdragon> I also just helped one dude with antibot @blaiszephyr so it‚Äôs balanced
23:09 < bridge> <melon> Grrrr
23:16 < bridge> <Jupstar ‚ú™> @essigautomat potential of a pure no-animation shader for quads
23:16 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1381381385188675584/image.png?ex=68474f2b&is=6845fdab&hm=461cf13774ff17925be9c830727c190f3b1cad84a459cb5bd75bbe1bc0efe628&
23:16 < bridge> <12944qwerty> building doesn't work again nooo it's not finding the dlls
23:16 < bridge> <12944qwerty> https://cdn.discordapp.com/emojis/888791516607303743.gif?size=48
23:19 < bridge> <12944qwerty> building doesn't work again nooo it's not finding the dlls (namely sqlite3.dll rn) why must this happen to me
23:19 < bridge> <Jupstar ‚ú™> @essigautomat potential for a quad pipeline that oninit collects all the possible (anim, anim_offset) variants for pos & color
23:19 < bridge> <Jupstar ‚ú™> 
23:19 < bridge> <Jupstar ‚ú™> and then evaluates them all at once in the rendering process so that quads with duplicated anims don't re-evaluate
23:19 < bridge> <Jupstar ‚ú™> 
23:19 < bridge> <Jupstar ‚ú™> I think in ddnet it would give even more fps, since it doesn't have the extra step of fixed-point math
23:19 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1381382221704990841/image.png?ex=68474ff2&is=6845fe72&hm=02bdcb409183f62af5cd461bbac8d671529988c447c12af672b9a858cdbe917d&
23:20 < bridge> <Assa> i am too skillchecked for this probably üôà
23:21 < bridge> <Jupstar ‚ú™> I couldn't do it easily in cpp either, no FxHashMaps, no Hash derive macro
23:22 < bridge> <Jupstar ‚ú™> üò¨
23:22 < bridge> <patiga> twgpu does exactly that. my godot converter even does the triplets (anim, anim_offset, color) iirc
23:22 < bridge> <Jupstar ‚ú™> neat, yeah twgpu was pretty fast on that map
23:22 < bridge> <Jupstar ‚ú™> So I assumed it does smth like that
23:22 < bridge> <Jupstar ‚ú™> Interestingly it's rather slow on mona lisa
23:22 < bridge> <Jupstar ‚ú™> Dunno why
23:22 < bridge> <Assa> start could be animationless layers, as we already split between them
23:22 < bridge> <Jupstar ‚ú™> only ~1k fps on mona lisa with twgpu
23:23 < bridge> <Jupstar ‚ú™> GPU limit
23:23 < bridge> <Jupstar ‚ú™> CPU ~6% compared to 2% on rs
23:24 < bridge> <patiga> how is the mona lisa built?
23:24 < bridge> <Jupstar ‚ú™> many quads
23:24 < bridge> <Assa> only.... I didn't even give the big version (because the editor crashed)
23:24 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1381383416674783404/mona-lisa.map?ex=6847510f&is=6845ff8f&hm=a19d9088adda443a8c2dc78a0348528ddb511d59c98a814ea3216d500f4e8671&
23:24 < bridge> <Assa> map create pixel art tool integration üôà
23:24 < bridge> <patiga> I only use a hashmap for the initialization. After that it only needs a Vec
23:25 < bridge> <patiga> so a huge number of quads?
23:25 < bridge> <Assa> yes
23:25 < bridge> <Jupstar ‚ú™> The editor for mona lisa is best xD
23:25 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1381383574577741966/image.png?ex=68475135&is=6845ffb5&hm=10b7472725c51d743cf2305240b599907d178eca83bc14f964b410e3980f6977&
23:25 < bridge> <chillerdragon> Jupstar einfach deutsche da Vinci
23:25 < bridge> <Jupstar ‚ú™> Yes
23:25 < bridge> <patiga> interesting, I would've expected twgpu to be fast there
23:25 < bridge> <Assa> this was my map üò¶
23:25 < bridge> <Jupstar ‚ú™> Me too
23:25 < bridge> <patiga> without animations, right?
23:25 < bridge> <Jupstar ‚ú™> Yes all credits to assa for stealing mona lisa from google
23:26 < bridge> <Jupstar ‚ú™> üò¨
23:26 < bridge> <Jupstar ‚ú™> yes
23:26 < bridge> <Assa> exactly
23:26 < bridge> <chillerdragon> Xd
23:26 < bridge> <patiga> both tests were probably with the full mona lisa in view?
23:27 < bridge> <Jupstar ‚ú™> Yes
23:27 < bridge> <Assa> this is a tenth of the mona lisa btw
23:27 < bridge> <Jupstar ‚ú™> Both with maximized window
23:27 < bridge> <Jupstar ‚ú™> 1440p
23:27 < bridge> <Ewan> again, running from terminal or double clicking? if double clicking you need to copy dlls over somehow
23:27 < bridge> <Ewan> idk how sqlite is linked but if it's dynamically linked then it'd probably build fine as long as u have the headers, but if it's not installed & able to be found at runtime, you'd have that issue
23:27 < bridge> <Solly (bun bun)> would anyone know how to decrease latency of streaming raw audio thru a usb cable with udp
23:27 < bridge> <Ewan> make sure it's installed
23:28 < bridge> <Solly (bun bun)> i dont know where these 300ms of latency are coming from
23:28 < bridge> <Ewan> "raw audio"?
23:28 < bridge> <Ewan> why udp
23:28 < bridge> <Solly (bun bun)> pcm_s16le
23:28 < bridge> <patiga> very curious, I can't think of a reason why that could be. this *should* be prime twgpu territory
23:28 < bridge> <chillerdragon> How long is your usb cable xd
23:28 < bridge> <Ewan> what are you usinog
23:28 < bridge> <Solly (bun bun)> 50cm
23:28 < bridge> <Solly (bun bun)> random js library to read from pulse
23:28 < bridge> <chillerdragon> JS
23:29 < bridge> <chillerdragon> We got the issue
23:29 < bridge> <Ewan> pulseaudio + js + udp
23:29 < bridge> <Ewan> yeah
23:29 < bridge> <Ewan> reasons ppl typically dont stream audio that way
23:29 < bridge> <Solly (bun bun)> i cant believe 300ms comes from js
23:29 < bridge> <Solly (bun bun)> or pulse
23:29 < bridge> <Solly (bun bun)> also have no clue how to write this in cpp or with pipewire
23:29 < bridge> <Ewan> i mean there's a reason in js you can't define an audio callback like in idiomatic audio programming
23:29 < bridge> <Solly (bun bun)> more vibe coding
23:29 < bridge> <12944qwerty> i tried your script and it didn't work. It was through terminal
23:29 < bridge> <Ewan> do you have sqlite installed
23:29 < bridge> <Ewan> and were you in the directory
23:30 < bridge> <12944qwerty> yes
23:30 < bridge> <Ewan> if it's conditionally LoadLibrary/dlopen'd then ntldd wouldn't detect that
23:30 < bridge> <Ewan> i don't know why it would be that way
23:30 < bridge> <12944qwerty> though i guess it's not in the release folder
23:30 < bridge> <Ewan> your pwd needs to be the same location as the binary
23:31 < bridge> <12944qwerty> it is
23:31 < bridge> <12944qwerty> i do have sqlite3 in the ddnet-libs
23:31 < bridge> <Ewan> the script doesn't look there
23:31 < bridge> <12944qwerty> i did a --fresh cmake
23:31 < bridge> <12944qwerty> then built it
23:32 < bridge> <12944qwerty> then got sqlite3 (pwd in .exe folder) then tried script and same thing
23:33 < bridge> <Solly (bun bun)> chatgpt vibe code is 5s slower xd
23:33 < bridge> <Ewan> restating that my script won't copy dlls from ddnet-libs
23:34 < bridge> <Ewan> if you don't have it installed via. msys2, it won't be copied in that step
23:34 < bridge> <Ewan> maybe the cmake build will do it automatically. idk. i don't use ddnet-libs
23:34 < bridge> <Ewan> https://cdn.discordapp.com/attachments/293493549758939136/1381385967490957463/image.png?ex=6847536f&is=684601ef&hm=963343ccb143aac21b19572c5b0d4315f29e881532c05342970de9a24f52f0be&
23:34 < bridge> <Ewan> it would copy that one if it links against sqlite3
23:35 < bridge> <Ewan> but if the dynamic dependency is not defined in the exectuable then it won't know to copy it
23:38 < bridge> <Ewan> there are scenarios where you can just do
23:38 < bridge> <Ewan> ```cpp
23:38 < bridge> <Ewan> if(something) {
23:38 < bridge> <Ewan>   HINSTANCE sqlite_handle = LoadLibraryW(L"sqlite3");
23:38 < bridge> <Ewan> }
23:38 < bridge> <Ewan> ```
23:38 < bridge> <Ewan> `ntldd` (the tool used to extract *shared* library dependencies) can't detect this, as it's a *dynamic* library dependency
23:39 < bridge> <Ewan> this would also cause an issue because the executable expects the library to have an exact name
23:39 < bridge> <Ewan> which probably won't match using a msys2 build
23:42 < bridge> <Ewan> that‚Äôs why it‚Äôs better to gate this functionality in the build system imo
23:43 < bridge> <12944qwerty> but wouldn't the first cmake command get the dll and put it in the build folder
23:44 < bridge> <Ewan> no
23:44 < bridge> <Ewan> that‚Äôd be the second command, if it was done at all
23:44 < bridge> <Ewan> i believe
23:44 < bridge> <12944qwerty> i mean it looks for it in the first one
23:44 < bridge> <12944qwerty> https://cdn.discordapp.com/attachments/293493549758939136/1381388507238629477/image.png?ex=684755cd&is=6846044d&hm=88d881c5e3f21dd02fbae1c1ce1f8ad7a335ed06f3d8b1a2c6f8a0450a52301d&
23:45 < bridge> <Ewan> that doesn‚Äôt copy it
23:45 < bridge> <12944qwerty> and says it's using the bundled version
23:45 < bridge> <Ewan> cmake generates makefiles
23:45 < bridge> <Ewan> makefiles build the thing
23:45 < bridge> <Ewan> if they‚Äôre doing target_link_libraries to the exact path relative to the cmakelists it‚Äôd be copied by cmake at build time
23:45 < bridge> <Ewan> you can manually copy at generate time but it‚Äôs not really how it‚Äôs meant to be done and prob not how ddnet does it
23:56 < bridge> <12944qwerty> but how had it been working earlier on first build (and the ones consecutively after it) but now it doesn't
23:56 < bridge> <12944qwerty> i didn't change any steps
