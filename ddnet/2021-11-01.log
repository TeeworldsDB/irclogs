00:13 <+bridge> [ddnet] <Ryozuki> the bug has been found?
00:13 <+bridge> [ddnet] <Ryozuki> :poggers:
00:14 <+bridge> [ddnet] <Jupstar âœª> yes
03:40 <+bridge> [ddnet] <Guga> has anyone seen this woman in their dreams??????????
03:40 <+bridge> [ddnet] <Guga> https://cdn.discordapp.com/attachments/293493549758939136/904560534588911696/unknown.png
06:23 <+bridge> [ddnet] <fokkonaut> I can try later
09:03 <+bridge> [ddnet] <KoroshKv> hi how can i add Particles or effects to myserver? in my codes?
10:53 <+bridge> [ddnet] <chillerdragon> @KoroshKv\: you can call the cgamecontext\:\:playerdeath method on the server side to get the particles of a tee for example https://github.com/ddnet/ddnet/blob/2b1ff1c823337fa3febb0a782334df05b9870c3b/src/game/server/gamecontext.cpp#L282-L292
10:53 <+bridge> [ddnet] <chillerdragon> Look around in gamecontext there is also the spawn animation and explosions and so on
11:05 <+bridge> [ddnet] <KoroshKv> thanks
12:19 <+bridge> [ddnet] <Devil.> guys i have proplem i don't use vpn but i have proplem with my pc my ip address changed to french and iam from egypt so when i join anyserver in ddnet i get ban cuz it's says  i useing vpn so what i have to do
13:02 <+bridge> [ddnet] <fokkonaut> Restart router
13:05 <+bridge> [ddnet] <fokkonaut> @nuborn the EntityEx fills up the snap pretty fast on maps with a lot of draggers/doors/whatever
13:07 <+bridge> [ddnet] <fokkonaut> I will need to send the EntityEx only for entities that are ACTUALLY close to you, like a few blocks, or within the Length of a door
13:07 <+bridge> [ddnet] <fokkonaut> my server especially has a lot of these laser doors/draggers
13:18 <+bridge> [ddnet] <fokkonaut> I'll only send EntityEx for the real network clipping range, not for the zoomed one with show distance, that should help already probably, still it wastes good and needed objects for the snap
13:49 <+bridge> [ddnet] <nuborn> In the worst case a doubling? But yes, you will begin to notice at maybe 50-75% of the  zoom level compared with before if entities are evenly distributed in the map
13:50 <+bridge> [ddnet] <nuborn> For pickups not in switch you can also skip it if you have many of those
13:50 <+bridge> [ddnet] <fokkonaut> its more about the other entities tbh :D
13:51 <+bridge> [ddnet] <fokkonaut> but thanks for the tip, u should do that for ddnet too
13:53 <+bridge> [ddnet] <nuborn> But yes, it could be improved for didn't too (maybe even dynamically if the map is large), but at the end I think this is equally a problem with the snap limit (+ large zoom)
13:53 <+bridge> [ddnet] <nuborn> for ddnet*
13:58 <+bridge> [ddnet] <fokkonaut> Yes, thats true
14:08 <+bridge> [ddnet] <Learath2> Next patch we can try to move the entityex stuff to a snap wrapped in a netmsg
14:10 <+bridge> [ddnet] <fokkonaut> lol
14:11 <+bridge> [ddnet] <Learath2> Well it is optional stuff
14:42 <+bridge> [ddnet] <chillerdragon> I tried to extent CConsole\:\:Print() with some own loggerish code and then i get crashes in sqlite. I assume this is a multi threading issue isnt it? So Print() is called from some sqlite thread but my code is not thread safe? Or am i on a wrong path here?
14:43 <+bridge> [ddnet] <fokkonaut> print is not thread safe
14:43 <+bridge> [ddnet] <chillerdragon> weird
14:50 <+bridge> [ddnet] <chillerdragon> oh right okay im not allowed to write to global non static variables in there
16:10 <+bridge> [ddnet] <Learath2> @deen do you really understand what happens with #4240? RemoveEntity seems to take care of the case where the next traversal entity is already deleted
16:10 <+bridge> [ddnet] <DDNet> https://github.com/ddnet/ddnet/issues/4240
16:11 <+bridge> [ddnet] <deen> I don't think it's about RemoveEntity, it could also be about still being in the same CCharacter's tick handling after it got deleted
16:11 <+bridge> [ddnet] <deen> I think
16:13 <+bridge> [ddnet] <Learath2> Ah, that return in `HandleSkippableTiles` doesn't return quite far out enough ðŸ˜„
16:15 <+bridge> [ddnet] <deen> yes
16:15 <+bridge> [ddnet] <deen> and we were trying to protect it with if(!m_alive) but that can be overwritten already
16:16 <+bridge> [ddnet] <Learath2> Hm, properly fixing this would probably involve actually defering the deletion until the end of the tick
16:16 <+bridge> [ddnet] <deen> Yes, that would be cleaner, but might be risky
16:16 <+bridge> [ddnet] <Learath2> I guess your fix is okay for now, I actually don't want to risk it either ðŸ˜„
16:18 <+bridge> [ddnet] <Learath2> I guess it is sane to end the tick if the tee dies, just need to be careful not to access any member variables
16:18 <+bridge> [ddnet] <deen> I guess we should run asan on ger1 a bit longer to see if it catches more issues
16:18 <+bridge> [ddnet] <deen> once the fix is merged
16:19 <+bridge> [ddnet] <Learath2> Yeah, having all the pooled objects out on the heap can bring out more issues
16:19 <+bridge> [ddnet] <deen> I'm not sure what the performance impact is, especially with malloc potentially taking quite long during normal gameplay
16:20 <+bridge> [ddnet] <Learath2> I doubt it's unacceptable, but it is indeed a waste. I would 100% keep the pools normally
16:52 <+bridge> [ddnet] <Ryozuki> @Learath2 have u seen the news
16:52 <+bridge> [ddnet] <Ryozuki> today they made public a flaw in unicode
16:52 <+bridge> [ddnet] <Ryozuki> "bidirectional override" Unicode codepoints
16:53 <+bridge> [ddnet] <Ryozuki> <https://community.developer.atlassian.com/t/cve-2021-42574-unrendered-unicode-bidirectional-override-characters-may-impact-apps-with-code-visualizing-components/53314> <https://blog.rust-lang.org/2021/11/01/cve-2021-42574.html> <https://groups.google.com/g/rustlang-security-announcements/c/bKPH8XYMvJU?pli=1>
16:53 <+bridge> [ddnet] <Ryozuki> <https://community.developer.atlassian.com/t/cve-2021-42574-unrendered-unicode-bidirectional-override-characters-may-impact-apps-with-code-visualizing-components/53314> 
16:53 <+bridge> [ddnet] <Ryozuki> <https://blog.rust-lang.org/2021/11/01/cve-2021-42574.html> 
16:53 <+bridge> [ddnet] <Ryozuki> <https://groups.google.com/g/rustlang-security-announcements/c/bKPH8XYMvJU?pli=1>
16:53 <+bridge> [ddnet] <Ryozuki> xd
16:53 <+bridge> [ddnet] <Ryozuki> (the rust blog explains it the best imho)
16:55 <+bridge> [ddnet] <Ryozuki> > An issue was discovered in the Bidirectional Algorithm in the Unicode Specification through 14.0. It permits the visual reordering of characters via control sequences, which can be used to craft source code that renders different logic than the logical ordering of tokens ingested by compilers and interpreters. Adversaries can leverage this to encode source code for compilers accepting Unicode such that targeted vulnerabilities are introdu
16:55 <+bridge> [ddnet] <Ryozuki> :monkaS:
16:56 <+bridge> [ddnet] <heinrich5991> I feel like variations of this attack were kind of known before
16:56 <+bridge> [ddnet] <Ryozuki> > As part of their research, Nicholas Boucher and Ross Anderson also uncovered a similar security issue identified as CVE-2021-42694 involving homoglyphs inside identifiers. Rust already includes mitigations for that attack since Rust 1.53.0. Rust 1.0.0 through Rust 1.52.1 is not affected due to the lack of support for non-ASCII identifiers in those releases.
16:56 <+bridge> [ddnet] <heinrich5991> e.g. hÐ¾mÐ¾glyph attacks
16:56 <+bridge> [ddnet] <Ryozuki> probs this
16:57 <+bridge> [ddnet] <heinrich5991> this isn't limited to identifiers, string literals can also be "attacked" with this
16:57 <+bridge> [ddnet] <Ryozuki> :monkaS:
16:57 <+bridge> [ddnet] <heinrich5991> e.g. `role == "usÐµr"`
17:05 <+bridge> [ddnet] <chillerdragon> has anyone ever tried to put the function signature in a different header file? \:D
17:06 <+bridge> [ddnet] <deen> what?
17:08 <+bridge> [ddnet] <chillerdragon> Id like to overwrite a function
17:08 <+bridge> [ddnet] <deen> overload a method or what?
17:08 <+bridge> [ddnet] <chillerdragon> ```C
17:08 <+bridge> [ddnet] <chillerdragon> void curses_logf(const char *sys, const char *fmt, ...);
17:08 <+bridge> [ddnet] <chillerdragon> #define dbg_msg(sys, fmt, ...) curses_logf(sys, fmt, ##__VA_ARGS__)
17:08 <+bridge> [ddnet] <chillerdragon> ```i put this boi at the end of system.h
17:09 <+bridge> [ddnet] <chillerdragon> not rly overload
17:09 <+bridge> [ddnet] <chillerdragon> I just want my own implementation of dbg\_msg being used
17:09 <+bridge> [ddnet] <deen> you can't just redefine a function
17:09 <+bridge> [ddnet] <chillerdragon> without touching dbg\_msg
17:09 <+bridge> [ddnet] <deen> but dbg_msg is not a function, it's a macro
17:10 <+bridge> [ddnet] <chillerdragon> i overwrite the function with a macro
17:10 <+bridge> [ddnet] <chillerdragon> that works
17:10 <+bridge> [ddnet] <deen> you can do an #ifdef/endif around and define dbg_msg differently for your ncurses build
17:10 <+bridge> [ddnet] <chillerdragon> i dont want to do that
17:10 <+bridge> [ddnet] <chillerdragon> that will get me merge conflicts
17:11 <+bridge> [ddnet] <deen> I have heard of test-driven development
17:11 <+bridge> [ddnet] <deen> but you're the first person doing merge-conflict-avoidance-driven development ðŸ˜„
17:11 <+bridge> [ddnet] <chillerdragon> xd
17:11 <+bridge> [ddnet] <Ryozuki> xd
17:11 <+bridge> [ddnet] <deen> Should work at the bottom
17:11 <+bridge> [ddnet] <deen> maybe #undef dbg_msg before
17:12 <+bridge> [ddnet] <chillerdragon> the issue is my own func
17:12 <+bridge> [ddnet] <chillerdragon> i can not define it in sys.h
17:12 <+bridge> [ddnet] <chillerdragon> the overwrite works just fine
17:12 <+bridge> [ddnet] <chillerdragon> but if i put my signature in system.h it wont work with the implementation in my own cpp file
17:12 <+bridge> [ddnet] <chillerdragon> ```
17:12 <+bridge> [ddnet] <chillerdragon> /home/chiller/Desktop/git/chillerbot-ux/src/base/terminalui.cpp:136: multiple definition of `curses_logf'; CMakeFiles/engine-shared.dir/src/base/system.cpp.o:/home/chiller/Desktop/git/chillerbot-ux/src/base/system.cpp:131: first defined here
17:12 <+bridge> [ddnet] <chillerdragon> ```
17:12 <+bridge> [ddnet] <deen> put the implementation in system.cpp
17:13 <+bridge> [ddnet] <chillerdragon> omagawd
17:13 <+bridge> [ddnet] <chillerdragon> thats merge conflict
17:13 <+bridge> [ddnet] <deen> ah, you have it in system.cpp and terminalui.cpp already
17:13 <+bridge> [ddnet] <deen> remove the one from system.cpp:131
17:13 <+bridge> [ddnet] <chillerdragon> image.png
17:13 <+bridge> [ddnet] <chillerdragon> https://cdn.discordapp.com/attachments/293493549758939136/904765206629056522/image.png
17:14 <+bridge> [ddnet] <deen> that doesn't look consistent with your error message
17:14 <+bridge> [ddnet] <chillerdragon> ikr
17:14 <+bridge> [ddnet] <deen> build from scratch?
17:14 <+bridge> [ddnet] <chillerdragon> yas
17:14 <+bridge> [ddnet] <chillerdragon> saved
17:15 <+bridge> [ddnet] <chillerdragon> it probably interprets dbg\_msg as the macro
17:15 <+bridge> [ddnet] <deen> Wait
17:15 <+bridge> [ddnet] <chillerdragon> and then puts my func there
17:15 <+bridge> [ddnet] <deen> yes
17:15 <+bridge> [ddnet] <chillerdragon> omg
17:15 <+bridge> [ddnet] <deen> I assumed dbg_msg was a macro before
17:15 <+bridge> [ddnet] <deen> you can't just overwrite a function with a macro
17:15 <+bridge> [ddnet] <chillerdragon> ye
17:15 <+bridge> [ddnet] <chillerdragon> because i do my macro in the header
17:15 <+bridge> [ddnet] <chillerdragon> i can
17:15 <+bridge> [ddnet] <chillerdragon> but it has to be timed correctly
17:16 <+bridge> [ddnet] <deen> It is horrible, don't do this
17:16 <+bridge> [ddnet] <chillerdragon> i can define the macro after the function signature and after the function implementation
17:16 <+bridge> [ddnet] <chillerdragon> but there is no such single place
17:16 <+bridge> [ddnet] <chillerdragon> haha
17:16 <+bridge> [ddnet] <deen> in system.cpp in line 129 you'll have to #undef dbg_msg first
17:16 <+bridge> [ddnet] <chillerdragon> what a mess
17:17 <+bridge> [ddnet] <chillerdragon> okay that builds
17:17 <+bridge> [ddnet] <chillerdragon> but thats merge conflicty
17:17 <+bridge> [ddnet] <deen> How often did we change dbg_msg in the last years? Are you afraid of merge conflicts in 10 years?
17:17 <+bridge> [ddnet] <chillerdragon> it changes weekly
17:17 <+bridge> [ddnet] <deen> Why not submit your code upstream?
17:17 <+bridge> [ddnet] <chillerdragon> i submit all i can ofc
17:17 <+bridge> [ddnet] <chillerdragon> do u want a linux only curses client?
17:18 <+bridge> [ddnet] <chillerdragon> haha curses messes with my terminal so i can not read the gdb crash report lmao
17:19 <+bridge> [ddnet] <deen> 3 changes since 2018
17:20 <+bridge> [ddnet] <chillerdragon> yea omagwd now system.cpp uses the wrong dbg\_msg
17:20 <+bridge> [ddnet] <deen> only system.cpp after line 130
17:21 <+bridge> [ddnet] <chillerdragon> conflicts also get caused when surrounding methods get touched
17:21 <+bridge> [ddnet] <chillerdragon> also with the mindset of "just a change here and just a smol change here" u get conflicts without end
17:21 <+bridge> [ddnet] <chillerdragon> i barley get any conflicts with upstream currently
17:26 <+bridge> [ddnet] <heinrich5991> chillerdragon: you could `#define dbg_msg blergh` in system.cpp
17:26 <+bridge> [ddnet] <heinrich5991> then you can define your own dbg_msg somewhere else
17:26 <+bridge> [ddnet] <chillerdragon> right
17:26 <+bridge> [ddnet] <chillerdragon> wait lemme try
17:26 <+bridge> [ddnet] <heinrich5991> ah wait, maybe not ðŸ˜¦
17:27 <+bridge> [ddnet] <chillerdragon> yea sounds a bit too good to be true
17:27 <+bridge> [ddnet] <heinrich5991> system.cpp also calls dbg_msg
17:27 <+bridge> [ddnet] <deen> then system.cpp also uses blergh ðŸ˜„
17:27 <+bridge> [ddnet] <chillerdragon> blergh is probably undefuined
17:27 <+bridge> [ddnet] <deen> you have to #undef dbg_msg after dbg_msg in system.cpp as well
17:27 <+bridge> [ddnet] <chillerdragon> i have undef
17:27 <+bridge> [ddnet] <deen> and then your defines are around the function again
17:27 <+bridge> [ddnet] <chillerdragon> then def again
17:27 <+bridge> [ddnet] <chillerdragon> it all works
17:27 <+bridge> [ddnet] <deen> so not better than just using an #ifdef
17:27 <+bridge> [ddnet] <chillerdragon> but big conflict material
17:27 <+bridge> [ddnet] <chillerdragon> ye
17:27 <+bridge> [ddnet] <chillerdragon> its flop
17:28 <+bridge> [ddnet] <chillerdragon> hell of a diff
17:28 <+bridge> [ddnet] <chillerdragon> image.png
17:28 <+bridge> [ddnet] <chillerdragon> https://cdn.discordapp.com/attachments/293493549758939136/904768819585753219/image.png
17:28 <+bridge> [ddnet] <deen> Having the same define in 2 different places is not clean
17:29 <+bridge> [ddnet] <chillerdragon> ikr
17:29 <+bridge> [ddnet] <chillerdragon> but i need it in system.h i think
17:29 <+bridge> [ddnet] <deen> yes
17:29 <+bridge> [ddnet] <chillerdragon> anyways i want it out of the cpp
17:29 <+bridge> [ddnet] <heinrich5991> hmmm. how about just doing `#if 0` above dbg_msg and `#endif` below?
17:29 <+bridge> [ddnet] <heinrich5991> the definition
17:29 <+bridge> [ddnet] <heinrich5991> ah
17:29 <+bridge> [ddnet] <chillerdragon> cpp?
17:29 <+bridge> [ddnet] <chillerdragon> confict
17:30 <+bridge> [ddnet] <heinrich5991> it seems to me that anything you do to `dbg_msg` will also affect the definition of `dbg_msg`
17:30 <+bridge> [ddnet] <heinrich5991> so it *seems* impossible to me, without changing the system.cpp
17:31 <+bridge> [ddnet] <chillerdragon> image.png
17:31 <+bridge> [ddnet] <chillerdragon> https://cdn.discordapp.com/attachments/293493549758939136/904769515525640222/image.png
17:31 <+bridge> [ddnet] <chillerdragon> thats how it looks like btw
17:31 <+bridge> [ddnet] <chillerdragon> u have a input field at the bottom with local console remote console and chat
17:31 <+bridge> [ddnet] <chillerdragon> u can press t f1 f2 etc
17:31 <+bridge> [ddnet] <chillerdragon> is that something that could end up in ddnet?
17:31 <+bridge> [ddnet] <deen> well, you could rename dbg_msg function to dbg_msg_impl and also get that in upstream, then you only need the define in system.h. But I don't think we would merge that in DDNet
17:32 <+bridge> [ddnet] <deen> are you not drawing tees as circles in ncurses? I'm disappointed
17:32 <+bridge> [ddnet] <chillerdragon> not yet
17:32 <+bridge> [ddnet] <chillerdragon> first focus is chat
17:32 <+bridge> [ddnet] <chillerdragon> i did maps once
17:33 <+bridge> [ddnet] <chillerdragon> the ratio is a bit messed up because console rows are higher than columns wide
17:33 <+bridge> [ddnet] <chillerdragon> https://www.youtube.com/watch?v=LMTg2sL5pD4
17:33 <+bridge> [ddnet] <chillerdragon> thats my old messy map drawing
17:33 <+bridge> [ddnet] <chillerdragon> it also had keyboard inputs for moving
17:34 <+bridge> [ddnet] <chillerdragon> yea i guess there is no merge safe solution
17:34 <+bridge> [ddnet] <deen> not bad
17:34 <+bridge> [ddnet] <chillerdragon> ill go with the mess for now and maybe next merge i will just delete my code
17:37 <+bridge> [ddnet] <Jupstar âœª> chillerdragon\: what function does curses\_logf call? or is that already the library function?
17:38 <+bridge> [ddnet] <chillerdragon> its mine
17:38 <+bridge> [ddnet] <Jupstar âœª> is there no function that takes vargs directly?
17:38 <+bridge> [ddnet] <chillerdragon> wdym?
17:38 <+bridge> [ddnet] <chillerdragon> ```C
17:38 <+bridge> [ddnet] <chillerdragon> void curses_logf(const char *sys, const char *fmt, ...)
17:38 <+bridge> [ddnet] <chillerdragon> {
17:39 <+bridge> [ddnet] <chillerdragon> 	va_list args;
17:39 <+bridge> [ddnet] <chillerdragon> 	char str[1024*4];
17:39 <+bridge> [ddnet] <chillerdragon> 	char *msg;
17:39 <+bridge> [ddnet] <chillerdragon> 	int len;
17:39 <+bridge> [ddnet] <chillerdragon> 
17:39 <+bridge> [ddnet] <chillerdragon> 	char timestr[80];
17:39 <+bridge> [ddnet] <chillerdragon> 	str_timestamp_format(timestr, sizeof(timestr), FORMAT_SPACE);
17:39 <+bridge> [ddnet] <chillerdragon> 
17:39 <+bridge> [ddnet] <chillerdragon> 	str_format(str, sizeof(str), "[%s][%s]: ", timestr, sys);
17:39 <+bridge> [ddnet] <chillerdragon> 
17:39 <+bridge> [ddnet] <chillerdragon> 	len = strlen(str);
17:39 <+bridge> [ddnet] <chillerdragon> 	msg = (char *)str + len;
17:39 <+bridge> [ddnet] <chillerdragon> 
17:39 <+bridge> [ddnet] <chillerdragon> 	va_start(args, fmt);
17:39 <+bridge> [ddnet] <chillerdragon> #if defined(CONF_FAMILY_WINDOWS) && !defined(__GNUC__)
17:39 <+bridge> [ddnet] <chillerdragon> 	_vsprintf_p(msg, sizeof(str)-len, fmt, args);
17:39 <+bridge> [ddnet] <chillerdragon> #else
17:39 <+bridge> [ddnet] <chillerdragon> 	vsnprintf(msg, sizeof(str)-len, fmt, args);
17:39 <+bridge> [ddnet] <chillerdragon> #endif
17:39 <+bridge> [ddnet] <chillerdragon> 	va_end(args);
17:39 <+bridge> [ddnet] <chillerdragon> 
17:39 <+bridge> [ddnet] <chillerdragon> 	// printf("%s\n", str);
17:39 <+bridge> [ddnet] <chillerdragon> 	curses_log_push(str);
17:39 <+bridge> [ddnet] <chillerdragon> }
17:39 <+bridge> [ddnet] <chillerdragon> ```
17:39 <+bridge> [ddnet] <Jupstar âœª> you can just call curses\_logf in dbg\_msg with vargs
17:39 <+bridge> [ddnet] <chillerdragon> that would cause merge conflicts
17:39 <+bridge> [ddnet] <chillerdragon> since i would edit system.cpp
17:39 <+bridge> [ddnet] <chillerdragon> bad
17:39 <+bridge> [ddnet] <Jupstar âœª> xd
17:43 <+bridge> [ddnet] <chillerdragon> so any chance it can get in ddnet? \:D
17:45 <+bridge> [ddnet] <deen> i don't think so at the moment
17:45 <+bridge> [ddnet] <chillerdragon> oky sad
