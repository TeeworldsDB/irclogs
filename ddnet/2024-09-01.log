00:01 < bridge_> <egyt> phew, review time ended
00:51 < bridge_> <0xdeen> @jupeyy_keks FYI: https://github.com/libsdl-org/SDL/pull/9312
02:47 < ws-client> <ChillerDragon> any C++ developer awake i need brain
02:50 < ws-client> <ChillerDragon> I have a bunch of things i want to point to so I created a reference variable and reassign it but somehow it creates weird buggos
02:50 < ws-client> <ChillerDragon> pointer seems to work. I thought reference and pointer is the same
02:52 < bridge_> <pioooooo> reference is like another name for a variable
02:53 < bridge_> <pioooooo> It behaves the same as the original one
02:54 < ws-client> <ChillerDragon> yea but can i not use a reference do stuff with it and then reassign it to another value and do stuff with it again?
02:55 < ws-client> <ChillerDragon> https://gist.github.com/ChillerDragon/d6c50a5680c818d3644525a487117413 this diff introduced a bug
02:55 < ws-client> <ChillerDragon> eh fixed a bug*
03:01 < bridge_> <pioooooo> :boo:
03:02 < ws-client> <ChillerDragon> i just went with my old friend the pointer. fuck references. Still curious what happend tho
03:04 < bridge_> <pioooooo> '''
03:04 < bridge_> <pioooooo> -               if(pEditor->DoButton_Ex(&s_ButtonOff, Action.LabelShort(), Action.Active(), &Off, 0, Action.Description(), IGraphics::CORNER_L))
03:04 < bridge_> <pioooooo> +               if(pEditor->DoButton_Ex(&s_ButtonOff, pEditor->m_QuickActionShowInfoOff.LabelShort(), pEditor->m_QuickActionShowInfoOff.Active(), &Off, 0, pEditor->m_QuickActionShowInfoOff.Description(), IGraph>
03:04 < bridge_> <pioooooo> '''
03:04 < bridge_> <pioooooo> IGraphics::CORNER_L)) -> IGraph>
03:05 < bridge_> <pioooooo> I don't quite get it
03:08 < bridge_> <pioooooo> Reference differs from pointer in that they're constant
03:09 < bridge_> <pioooooo> Kind of like const char*
03:09 < bridge_> <pioooooo> So you cannot reassign to it
03:16 < bridge_> <pioooooo> Kind of like char* const
03:28 < bridge_> <meloƞ> Reference and pointer being the same? Huuuh
03:35 < bridge_> <kebscs> could i do http get request to `https://ddnet.org/players/?json2=` or `https://ddnet.org/maps/?json=` to add a feature, or would that be too heavy on the server if everyone did it, even just once
03:36 < bridge_> <kebscs> right now i see it does call to `https://info.ddnet.org/info?name=` but it doesnt have all info i would need
03:36 < bridge_> <meloƞ> You can freely fetch from the json endpoint, the server shouldn't allow you to bombard them with requests anyway
03:37 < bridge_> <meloƞ> If you want database data I recommend using ddstats json endpoint https://ddstats.tw
03:37 < bridge_> <meloƞ> Furo structured it a little nicer IMHO :kek:
03:37 < bridge_> <kebscs> i mean to add the call to the ddnet client for a new feature
03:38 < bridge_> <kebscs> not for myself
03:38 < bridge_> <ashalevsi> Hi, can you answer one question about the mobile version of ddnet?
03:38 < bridge_> <meloƞ> Stormax did that - yes it's fine to do si
03:38 < bridge_> <meloƞ> Me and Stormax did that - yes it's fine to do so
03:38 < bridge_> <kebscs> do you remember where is it in code
03:39 < bridge_> <meloƞ> Just use ddnets json.h to build a json parser
03:40 < bridge_> <meloƞ> Client/components iirc
03:41 < bridge_> <meloƞ> Just use ddnets json.h
03:42 < bridge_> <ashalevsi> So, I want to install the gunpack on the mobile version, is it possible to do this without using files, I don’t have access to them now
03:44 < bridge_> <meloƞ> Just use ddnets http.h
03:44 < bridge_> <meloƞ> I'm afraid not - you need to be able to access your file directory to replace the gameskin
03:46 < bridge_> <ashalevsi> OK, thank you
03:47 < bridge_> <kebscs> only call i can find is to https://info.ddnet.org/info so wanted to ask if its a good practice for a feature and it wont slow down the website or smth
03:47 < bridge_> <kebscs> only call i can find is to https://info.ddnet.org/info so wanted to ask if its a good practice for a feature pr and it wont slow down the website or smth
03:48 < bridge_> <meloƞ> depends on the planned feature, if it's something like a stats display you wouldn't want to fetch it from the json endpoint but the db itself
03:49 < bridge_> <kebscs> map stars/points, player points
03:50 < bridge_> <meloƞ> Yeah grab those from the db - the Json endpoint isn't updated in real time
03:50 < bridge_> <meloƞ> I think it was something between 2-5hours
03:51 < bridge_> <meloƞ> See scoreworker.cpp if you want to know how it's done
03:54 < bridge_> <kebscs> its server only, so i cant get these stats in serverbrowser
03:54 < bridge_> <kebscs> not updated real time is fine its just for map info
03:55 < bridge_> <meloƞ> Oh now I see what you want to do - hmm
03:55 < bridge_> <yrrr_> ChillerDragon: what you did with the reference was setting pEditor->m_QuickActionShowInfoOff := pEditor->m_QuickActionShowInfoDec and then setting pEditor->m_QuickActionShowInfoOff := pEditor->m_QuickActionShowInfoHex
03:55 < bridge_> <meloƞ> Couldn't you grab this within the initial fetch the client does ?
03:56 < bridge_> <kebscs> it doesnt have much info
03:57 < bridge_> <meloƞ> (e.g you can change a pointer to point somewhere else but you can't change a reference to reference something else)
03:57 < bridge_> <yrrr_> a reference isnt a reference like a pointer is but it is aliasing that object by a new name
03:57 < bridge_> <yrrr_> yes
03:57 < bridge_> <meloƞ> Add more to it! - tbh I'm not to sure how you could do this the best way
03:58 < bridge_> <meloƞ> Its best to open an issue for this so the maintainers can check
03:58 < bridge_> <meloƞ> Best to discuss something on GitHub before doing it and it getting declined
03:58 < bridge_> <kebscs> alr ty
04:00 < bridge_> <meloƞ> Also pointers can be null and point to nothing and references need to be referencing something valid and can't be null. Also references don't need to be dereferenced
04:00 < bridge_> <meloƞ> How can you think they're the same chiller :pepe_ew92:
04:01 < bridge_> <yrrr_> also i find the syntax a little bit cursed because it implies the reference is being assigned a value when really it is aliasing something until it ceases to exist
04:01 < bridge_> <yrrr_> also passing objects into functions that take references hides that they may change your object because you may assume pass-by-value
04:02 < bridge_> <meloƞ> Yeah it's weird
04:02 < bridge_> <yrrr_> also i find the syntax a little bit cursed because it implies the reference is being assigned a value at declaration when really it is aliasing something until it ceases to exist
04:21 < ws-client> <ChillerDragon> ah so you cant reuse references for different things
04:23 < ws-client> <ChillerDragon> @meloƞ i did know about the non null thing thats why i sometimes try to use them because they seem safer. But i thought i can reference different things by reassigning it.
05:28 < ws-client> <ChillerDragon> @heinrich5991 are you planning to ever unblock #7777 or do you want to stale me to death -.- There are some prs pending since a while that I am actively waiting for. 
05:28 < ws-client> <ChillerDragon> For example https://github.com/ddnet/ddnet/pull/7631 would be cool to use in my downstream projects
07:07 < bridge_> <milkeeycat> Morning
08:01 < ws-client> <ChillerDragon> normin 0.7 enjoyers and others
10:57 < bridge_> <jxsl13> denied
11:08 < bridge_> <zhn> not a full diff?
11:42 < bridge_> <jxsl13> no extra sausage for you. Arguably those clients have way more custom skins in common (I'd guess) of which none are 0.7 official skins.
12:10 < ws-client> <ChillerDragon> Yea greyfox would also be another classic candidate. I just dont really care about other skins. If you need another one go pr :p 
12:50 < bridge_> <Jupstar ✪> wtf chiller
12:50 < bridge_> <Jupstar ✪> why is dead more important than score
12:50 < bridge_> <Jupstar ✪> what mods do u play where this is the case
12:51 < bridge_> <Jupstar ✪> constant scoreboard changes/flickering sound annoying
12:55 < ws-client> <ChillerDragon> @Jupstar ✪ you only get marked as dead when you can not respawn those is for the last man standing modes there is no flickering
12:55 < bridge_> <Jupstar ✪> yeah but i had zcatch in mind
12:55 < ws-client> <ChillerDragon> you want to see who is still alive in that case
12:55 < bridge_> <Jupstar ✪> score is more important
12:56 < bridge_> <Jupstar ✪> so it's simply a flag?
12:56 < ws-client> <ChillerDragon> yes in zcatch 0.6 players go to spectators and in proper 0.7 zCatch they stay in the main scoreboard as dead players
12:56 < bridge_> <Jupstar ✪> mh ok
12:56 < bridge_> <Jupstar ✪> 0.7 not designed to end again :lol:
12:57 < ws-client> <ChillerDragon> the deadspec mode in 0.7 is pretty cool actually for stuff like zCatch to differentiate between spectators and dead players.
12:57 < bridge_> <Jupstar ✪> yea
12:57 < ws-client> <ChillerDragon> One of the few things thats actually better in 0.7 lol
12:57 < bridge_> <Jupstar ✪> but that it changes the scoreboard order is kinda annoying
12:57 < ws-client> <ChillerDragon> is it?
12:57 < bridge_> <Jupstar ✪> yes
12:58 < ws-client> <ChillerDragon> have you played 0.7 zCatch?
12:58 < ws-client> <ChillerDragon> because i have
12:58 < bridge_> <Jupstar ✪> if someone in zcatch has 998 points and is dead
12:58 < bridge_> <Jupstar ✪> 
12:58 < bridge_> <Jupstar ✪> he should still be on top
12:58 < bridge_> <Jupstar ✪> and not somewhere on the bottom
12:58 < ws-client> <ChillerDragon> he is top of dead
12:58 < bridge_> <Jupstar ✪> and if he is the only dead?
12:58 < ws-client> <ChillerDragon> but not relevant right now because you want to see how many more tees you need to kill
12:58 < bridge_> <Jupstar ✪> that is highlighted differently already
12:58 < bridge_> <Jupstar ✪> e.g. less opacity
12:58 < bridge_> <Jupstar ✪> or other colors
12:58 < ws-client> <ChillerDragon> yea but harder to count
12:59 < bridge_> <Jupstar ✪> jajaaj
12:59 < ws-client> <ChillerDragon> isso misso
12:59 < bridge_> <Jupstar ✪> our brain doesnt work like that
12:59 < bridge_> <Jupstar ✪> we never count
12:59 < ws-client> <ChillerDragon> go play some jigsaw catch and lemme know how you like it
12:59 < bridge_> <Jupstar ✪> alone or what?
13:00 < ws-client> <ChillerDragon> rude
13:00 < bridge_> <Jupstar ✪> sry
13:00 < ws-client> <ChillerDragon> jiggsel had prime 0.7 zCatch servers i did lots of gaming there in 2020
13:00 < bridge_> <Jupstar ✪> zcatch laser was nice. but sadly 8 years ago
13:00 < ws-client> <ChillerDragon> laser cring
13:00 < bridge_> <Jupstar ✪> skillz
13:00 < ws-client> <ChillerDragon> dude i have the most op laser gameplay patch ever
13:01 < ws-client> <ChillerDragon> found it in some random mode that was online for a week
13:01 < ws-client> <ChillerDragon> REFILL ammo on hit
13:01 < ws-client> <ChillerDragon> its insanely good of instagib laser
13:01 < ws-client> <ChillerDragon> for*
13:01 < bridge_> <Jupstar ✪> like instant refill?
13:01 < bridge_> <learath2> https://youtu.be/jFrGhodqC08
13:01 < ws-client> <ChillerDragon> YES!
13:01 < bridge_> <Jupstar ✪> that was discussed on fng many times
13:01 < bridge_> <Jupstar ✪> would be way too op xD
13:01 < ws-client> <ChillerDragon> no
13:01 < ws-client> <ChillerDragon> you need to hit
13:01 < bridge_> <Jupstar ✪> 100%
13:02 < ws-client> <ChillerDragon> 1 miss and you go back to reload timer
13:02 < bridge_> <Jupstar ✪> yeah but hitting the noobs is too ez xxD
13:02 < ws-client> <ChillerDragon> yay lerato poggies cloud bashing
13:02 < ws-client> <ChillerDragon> @Jupstar ✪ skill issue for them then
13:03 < bridge_> <Jupstar ✪> rude
13:03 < ws-client> <ChillerDragon> as of right now instagib laser has a skill cap in 1v10 fights
13:03 < bridge_> <Jupstar ✪> lmao
13:03 < bridge_> <Jupstar ✪> true
13:03 < ws-client> <ChillerDragon> with grenade you can cover your self in an aura of spray nades and ez 1v100
13:03 < bridge_> <learath2> I’m feeling the urge to try nix from watching that video
13:03 < ws-client> <ChillerDragon> same in vanilla
13:03 < ws-client> <ChillerDragon> but laser has slow as reload timer and can only hit one tee at a time
13:04 < ws-client> <ChillerDragon> its basically turn based game and every turn kills but if you are alone vs many they turn 10 times while you turn 1 time. So its game over either way.
13:04 < ws-client> <ChillerDragon> 1v1 or fair fights are boring
13:07 < bridge_> <Jupstar ✪> independent of cloud. we re-invent the wheel so often.
13:07 < bridge_> <Jupstar ✪> 
13:07 < ws-client> <ChillerDragon> @Jupstar ✪ this is what fng could be like https://www.youtube.com/watch?v=upwyWKzozII&t=107s
13:07 < bridge_> <Jupstar ✪> And i am part of that problem 😬
13:07 < bridge_> <Jupstar ✪> since i am ip man, it is already like that for me
13:07 < bridge_> <learath2> Reinventing the wheel is cheaper than 1.16 million per year on aws
13:09 < ws-client> <ChillerDragon> @Jupstar ✪ not the timestamp i sent where he fires at multiple at the same time. You can only do the slow start where they line up one by one.
13:09 < bridge_> <Jupstar ✪> he also dodges some hits before attacking
13:09 < bridge_> <Jupstar ✪> no difference to ultra instinct me
13:10 < ws-client> <ChillerDragon> ye thats another issue with laser
13:10 < ws-client> <ChillerDragon> you cant dodge
13:10 < ws-client> <ChillerDragon> grenades you can dodge if you have multiple enemies
13:10 < bridge_> <Jupstar ✪> *you* cant
13:10 < bridge_> <Jupstar ✪> xd
13:10 < ws-client> <ChillerDragon> ._.
13:11 < bridge_> <Jupstar ✪> you just need the correct OST
13:11 < bridge_> <Jupstar ✪> https://www.youtube.com/watch?v=Upsm3E2NUI8
13:11 < bridge_> <Jupstar ✪> here i help you
13:25 < bridge_> <Jupstar ✪> i am glad that ddpg solves the sorting issue
13:25 < bridge_> <Jupstar ✪> the superior game
13:26 < bridge_> <Jupstar ✪> in 20years
13:27 < bridge_> <zhn> :justatest:
13:52 < bridge_> <meloƞ> 4 months <a:peepowaiting:1135941675575943269>
14:09 < bridge_> <Jupstar ✪> actually even less now, i get back to work
14:09 < bridge_> <Jupstar ✪> it's 1st sep already
14:09 < bridge_> <Jupstar ✪> 😭
14:10 < bridge_> <meloƞ> :KEKW:  i can write you some boilerplate if you need :gigachad:
14:12 < bridge_> <Jupstar ✪> write the launcher 😘
14:15 < bridge_> <meloƞ> use my go launcher 😘
14:17 < bridge_> <learath2> A
14:17 < bridge_> <meloƞ> B
14:22 < bridge_> <Jupstar ✪> B
14:22 < bridge_> <Jupstar ✪> A
14:22 < bridge_> <meloƞ> https://tenor.com/view/abba-dancing-queen-see-that-girl-watch-that-scene-diggin-the-dancing-queen-gif-17906227
15:17 < bridge_> <milkeeycat> https://github.com/ddnet/ddnet/blob/d9b031c8877adc9f738891d2c42e67d28fcdd77c/src/game/server/gamecontext.cpp#L2089-L2099 what does this do?
15:41 < bridge_> <zhn> hardcoded chillerbot check
15:41 < bridge_> <zhn> :troll:
15:43 < bridge_> <deathgood> ⚠️ IMPORTANT DEVELOPER ANNOUNCEMENT ⚠️
15:43 < bridge_> <deathgood> https://cdn.discordapp.com/attachments/293493549758939136/1279798697546223710/geometry_dash_sad_backstory.png?ex=66d5c0eb&is=66d46f6b&hm=d232d358bfc4b9a4875491197c6ae182d1de058d8b0da95bb6649e4e41b837ea&
16:04 < bridge_> <meloƞ> Its a hard coded response by chillers bot to verify it's actually chiller iirc
17:36 < bridge_> <zaerin__> Consumes an abnormal amount of battery
17:36 < bridge_> <zaerin__> Or is it just me?
17:37 < bridge_> <robyt3> Try limiting the client refresh rate in the general settings
18:22 < bridge_> <arseny_12.12.12> пр
18:32 < bridge_> <defaif> How can I download ddnet to my phone?
18:34 < bridge_> <Jupstar ✪> this is dev chat not #questions. please remember that next time.
18:34 < bridge_> <Jupstar ✪> 
18:34 < bridge_> <Jupstar ✪> 
18:34 < bridge_> <Jupstar ✪> Here you can find latest android news:
18:34 < bridge_> <Jupstar ✪> https://discord.com/channels/252358080522747904/1277345584080097320
18:34 < bridge_> <Jupstar ✪> iphone is not supported
18:35 < bridge_> <defaif> it's a pity
18:36 < bridge_> <Jupstar ✪> maybe set vsync on default on android?
18:36 < bridge_> <Jupstar ✪> i think that also was the case back in the days
18:36 < bridge_> <Jupstar ✪> tho vsync sucks xd
19:44 < bridge_> <egyt> russians evolved into another level, I see
19:45 < bridge_> <egyt> russians moved to another level, I see
20:16 < bridge_> <lockzeee_95860> Can I ask you a question?
20:16 < bridge_> <Jupstar ✪> you can ask many #questions
20:17 < bridge_> <milkeeycat> can I ask if I can ask a question?
20:17 < bridge_> <Jupstar ✪> you can ask me anything honey
20:17 < bridge_> <kollpotato> sus
20:18 < bridge_> <lockzeee_95860> Okay
20:18 < bridge_> <milkeeycat> im thinking about adding fixed point numbers to my lang xd
20:18 < bridge_> <Jupstar ✪> aimazing
20:18 < bridge_> <milkeeycat> but before that methods for structs
20:21 < bridge_> <learath2> Let's see what you come up with. Very rare language feature
20:22 < bridge_> <milkeeycat> i won't add floats, and everyone will be forced to use fixed point numbers, then this feature won't be that rare :santatrollet:
20:24 < bridge_> <milkeeycat> do you like that c can upcast number types(for example that you can assign variable to type `char` to `int`) or you prefer rust way, binary expression can be performed only on operands of the same type?
20:26 < bridge_> <learath2> I like the "usual arithmetic conversions" and "integer promotions"
20:26 < bridge_> <learath2> But I'm an old person
20:27 < bridge_> <meloƞ> learath may i ask your age range in hexadecimal
20:27 < bridge_> <learath2> I'm simultaneously many different ages
20:28 < bridge_> <learath2> But I'm mostly 0x50 and 0x0D
20:28 < bridge_> <learath2> But I'm mostly 0x50 and 0x12
20:29 < bridge_> <milkeeycat> So you like this program to be valid
20:29 < bridge_> <milkeeycat> ```c
20:29 < bridge_> <milkeeycat> char foo;
20:29 < bridge_> <milkeeycat> int bar = foo + 0x45;
20:29 < bridge_> <milkeeycat> ```
20:29 < bridge_> <milkeeycat> So you would like this program to be valid
20:29 < bridge_> <milkeeycat> ```c
20:29 < bridge_> <milkeeycat> char foo;
20:29 < bridge_> <milkeeycat> int bar = foo + 0x45;
20:29 < bridge_> <milkeeycat> ```
20:30 < bridge_> <learath2> Yes. But I'm also very used to it. Perhaps it's better if there has to be explicit casts
20:31 < bridge_> <learath2> Probably easier to program too
20:34 < bridge_> <learath2> My official age is 0x1A though
20:34 < bridge_> <meloƞ> smash
20:35 < bridge_> <learath2> I'm sorry I don't have the 🌈 dlc. You'll have to find someone else to smash
20:35 < bridge_> <meloƞ> i might be a woman.
20:36 < bridge_> <learath2> You are not for it'd be paradoxical. If you were a women you'd hate me
20:36 < bridge_> <meloƞ> damn...
20:36 < bridge_> <meloƞ> sad
20:36 < bridge_> <meloƞ> still waiting for approval so i can visit italy
20:38 < bridge_> <learath2> Pull up. I can buy you some very mediocre Italian beer and we can talk about the merits of C
20:39 < bridge_> <meloƞ> damn i need to learn C
20:42 < bridge_> <learath2> We can also talk about how cool Linus Torvalds and Linux is
20:42 < bridge_> <meloƞ> with that i agree
20:42 < bridge_> <meloƞ> :nervous:
20:42 < bridge_> <meloƞ> https://cdn.discordapp.com/attachments/293493549758939136/1279874148524359782/image.png?ex=66d6072f&is=66d4b5af&hm=3945e3c835ba876418062d66cf9e32476426741874a10ca21f2bec56dddc8cce&
20:43 < bridge_> <learath2> Ok, you can buy your own beer
20:43 < bridge_> <meloƞ> :OHNOOOO:
20:43 < bridge_> <meloƞ> i'll bring bavarian beer
20:43 < bridge_> <meloƞ> or did you plan on going to a pub
20:44 < bridge_> <learath2> I was thinking of pub, but we can sit on a sidewalk too if that's more your vibe
20:44 < bridge_> <meloƞ> :kek: - i'm down for whatever
20:45 < bridge_> <deathgood> god forbid you comment at the end of a line or have more than 3 tabs of indentation
20:45 < bridge_> <meloƞ> why on gods earth would you need more than 3 tabs of indentation :angy:
20:45 < bridge_> <meloƞ> (i use single space indentation)
20:46 < bridge_> <learath2> You are no longer invited
20:46 < bridge_> <meloƞ> <a:kekw:1106634599221698571>
20:47 < bridge_> <learath2> ```c
20:47 < bridge_> <learath2> if (a > b)
20:47 < bridge_> <learath2>  return 0;
20:47 < bridge_> <learath2> return 1;
20:47 < bridge_> <learath2> ```c
20:47 < bridge_> <learath2> if (a > b)
20:47 < bridge_> <learath2>  return 0;
20:47 < bridge_> <learath2> return 1;
20:47 < bridge_> <learath2> ```
20:47 < bridge_> <meloƞ> int main() { std::cout << "Hello, World!" << std::endl; return 0; }
20:47 < bridge_> <meloƞ> `int main() { std::cout << "Hello, World!" << std::endl; return 0; }`
20:48 < bridge_> <learath2> Go to jail, do not pass go
20:49 < bridge_> <deathgood> torvald's response: https://lkml.org/lkml/2012/12/23/75
20:50 < bridge_> <meloƞ> yeah fuck Mauro fr
20:55 < bridge_> <.kurosio> hello, motd shifts text width when using custom fonts, right? DDNet support custom fonts?
21:04 < bridge_> <zhn> gay couples and implicit math casts? #developer goes brr
21:04 < bridge_> <zhn> ye
21:05 < bridge_> <zhn> you have no way to calculate it on server side, only for default dejavusans
21:09 < bridge_> <.kurosio> it's too much work to implement freetype or something to recognize Width size from DejaVuSans font (in fact, I do not need to recognize it and I found a way out of the situation, the only thing that custom fonts can break the system)
21:10 < bridge_> <.kurosio> For some reason i couldn't find a font change on the ddnet
21:11 < bridge_> <zhn> its done manually kekw
21:12 < bridge_> <.kurosio> oh lol
21:12 < bridge_> <zhn> i have custom font on my setup rn, missing a lot of symbols, but it works :troll:
21:17 < bridge_> <.kurosio> do players use custom fonts a lot? (i don't know because not exist as a player in the teeworlds community) :kek:
21:17 < bridge_> <Jupstar ✪> custom fonts are always annoying, since it makes it harder to design UI
21:17 < bridge_> <Jupstar ✪> i doubt that is a very common thing generally
21:49 < bridge_> <Ewan> I do
21:49 < bridge_> <Ewan> It's pretty common
21:54 < bridge_> <01000111g> they use cactus with minecraft font
22:00 < bridge_> <Jupstar ✪> for example?
22:06 < bridge_> <Ewan> xd
22:06 < bridge_> <Ewan> me? idk
22:06 < bridge_> <Ewan> I've seen it in 4-5 other screenshots/vids on this server
22:07 < bridge_> <Jupstar ✪> ah i meant it more generally
22:07 < bridge_> <Jupstar ✪> it's not very common u can change fonts in games
22:07 < bridge_> <Jupstar ✪> or webapps
22:07 < bridge_> <Jupstar ✪> or whatever
22:09 < bridge_> <Ewan> uhh... u can change fonts OS-wide and apps are supposed to respect it
22:09 < bridge_> <Ewan> since ddnet doesn't having a custom font mechanism is the least it can do
22:09 < bridge_> <Ewan> even if it's a pain in the ass
22:33 < bridge_> <zhn> watafak
22:33 < bridge_> <zhn> ```__memcpy_avx_unaligned_erms () at ../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:265
22:33 < bridge_> <zhn> 265        VMOVU    (%rsi), %VMM(0)```
22:34 < bridge_> <zhn> on ddnet 18.4
22:34 < bridge_> <Ewan> where
22:34 < bridge_> <zhn> wdym where
22:34 < bridge_> <Ewan> bt
22:34 < bridge_> <zhn> ah
22:34 < bridge_> <zhn> opengl backend...
22:34 < bridge_> <Ewan> crazy
22:34 < bridge_> <zhn> ```#0  __memcpy_avx_unaligned_erms () at ../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:265
22:34 < bridge_> <zhn> #1  0x00007fff9d8ba861 in memcpy () at /usr/include/bits/string_fortified.h:29
22:34 < bridge_> <zhn> #2  _mesa_glthread_upload () at ../mesa-24.2.1/src/mesa/main/glthread_bufferobj.c:149
22:34 < bridge_> <zhn> #3  0x00007fff9db1bf2d in upload_vertices () at ../mesa-24.2.1/src/mesa/main/glthread_draw.c:264
22:34 < bridge_> <zhn> #4  draw_arrays () at ../mesa-24.2.1/src/mesa/main/glthread_draw.c:447
22:34 < bridge_> <zhn> #5  _mesa_marshal_DrawArrays () at ../mesa-24.2.1/src/mesa/main/glthread_draw.c:1677
22:34 < bridge_> <zhn> #6  0x000055555573dab9 in CCommandProcessorFragment_OpenGL2::Cmd_RenderTileLayer(CCommandBuffer::SCommand_RenderTileLayer const*) ()
22:34 < bridge_> <zhn> #7  0x000055555573f859 in CCommandProcessorFragment_OpenGL::RunCommand(CCommandBuffer::SCommand const*) ()
22:34 < bridge_> <zhn> #8  0x0000555555793316 in CCommandProcessor_SDL_GL::RunBuffer(CCommandBuffer*) ()
22:34 < bridge_> <zhn> #9  0x000055555578e976 in CGraphicsBackend_Threaded::ThreadFunc(void*) ()
22:34 < bridge_> <zhn> #10 0x0000555555719157 in thread_run(void*) ()
22:35 < bridge_> <zhn> #11 0x00007ffff37b439d in start_thread (arg=<optimized out>) at pthread_create.c:447
22:35 < bridge_> <zhn> #12 0x00007ffff383949c in __GI___clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:78```
22:36 < bridge_> <Jupstar ✪> tja
22:36 < bridge_> <Jupstar ✪> why do you use opengl 2 tho?
22:36 < bridge_> <Ewan> looks fun to debug
22:36 < bridge_> <zhn> i didn't even choose
22:36 < bridge_> <Ewan> vulkanh
22:36 < bridge_> <Jupstar ✪> what
22:36 < bridge_> <Jupstar ✪> u have new laptop
22:36 < bridge_> <zhn> i didn't even choose it
22:36 < bridge_> <Jupstar ✪> it has vulkan, opengl3.3
22:36 < bridge_> <Jupstar ✪> everything
22:37 < bridge_> <Ewan> it resets gfx backend option if init for one fails
22:39 < bridge_> <Jupstar ✪> if u want to debug, show why the driver things we want to copy unaligned memory
22:39 < bridge_> <Jupstar ✪> if u want to debug, show why the driver thinks we want to copy unaligned memory
22:39 < bridge_> <zhn> i didn't even choose it xd
22:39 < bridge_> <zhn> it set to opengl 3.0.0
22:39 < bridge_> <zhn> wdym
22:39 < bridge_> <Jupstar ✪> i want to know which alignment it wants
22:39 < bridge_> <Jupstar ✪> and why we break it
22:39 < bridge_> <Jupstar ✪> __memcpy_avx_unaligned_erms
22:41 < bridge_> <Ewan> ya
22:42 < bridge_> <Jupstar ✪> but be prepared to get depressed
22:43 < bridge_> <zhn> how?
22:44 < bridge_> <Ewan> i think 9 times out of 10 this is just memory corruption
22:45 < bridge_> <Ewan> w/e the src ptr passed to the avx memcpy was fukd
22:45 < bridge_> <Jupstar ✪> i dunno, compile mesa with debug symbols? xd
22:46 < bridge_> <Ewan> uninitialized data
22:46 < bridge_> <Ewan> maybe
22:46 < bridge_> <Ewan> ig usan checks within ddnet code
22:46 < bridge_> <Ewan> ig ubsan checks within ddnet code
22:59 < bridge_> <meloƞ> I'm such a gamer :KEKW:
22:59 < bridge_> <meloƞ> https://cdn.discordapp.com/attachments/293493549758939136/1279908553477324890/Screenshot_20240901-225908.png?ex=66d6273a&is=66d4d5ba&hm=c98d8ddda909605a9ef26a4010c2c297cf91aede9c4b8872956d32d957649147&
23:15 < bridge_> <deathgood> so like is it possible to make the tab function based off of the player closest to you rather than whatever random order its in
23:15 < bridge_> <deathgood> i think it would be more useful than just pressing tab till you find that one player whose name you can't type out
23:17 < bridge_> <Jupstar ✪> i assume u mean in chat
23:17 < bridge_> <Jupstar ✪> u can press SHIFT + TAB to reverse the order of the function
23:17 < bridge_> <Jupstar ✪> then u find the players with unicode chars first
23:34 < bridge_> <meloƞ> you'll need to rebind the steam overlay if you play over steam tho
23:42 < bridge_> <kebscs> possible, but i think that would be too confusing if they autocompleted in seemingly random way instead of alphabetically
23:43 < bridge_> <deathgood> if it's a name that i can't type out in the first place it's not really going to help me however the algorithm determines it to be alphabetical
23:43 < bridge_> <deathgood> not like i'd know how the russian alphabet arranges itself that kind of thing
