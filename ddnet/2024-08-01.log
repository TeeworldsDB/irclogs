03:28 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1722475642.png
03:28 < ws-client> <ChillerDragon> Does someone know why it uses `jne 115d` here? whats 115d? Why does it say jump not equal when i use ``==`` in C ?
03:33 < ws-client> <ChillerDragon> Ah i get it. So 115d is the memory address it jumps to. Which is the line after the puts call. Seems so straightforward now haha.
04:17 < bridge> <headshotnoby> sega dreamcast
04:17 < bridge> <headshotnoby> https://cdn.discordapp.com/attachments/293493549758939136/1268392090409242634/image.png?ex=66ac41af&is=66aaf02f&hm=a88b14eeefcce1abdb2533e829d3a41569581b76483ca1b82846ae3567bb5af9&
04:18 < bridge> <headshotnoby> sega dreamcast
04:18 < bridge> <headshotnoby> https://cdn.discordapp.com/attachments/293493549758939136/1268392413945266308/image.png?ex=66ac41fd&is=66aaf07d&hm=1c369cec8c4082ef9a6e9edfc822fa44530dbae629c6ab32f6b5bdc8d9968d8e&
04:23 < bridge> <tsfreddie> stop this, at this rate you'll get it in TI-84
04:24 < bridge> <headshotnoby> https://tenor.com/view/if-i-had-one-angry-yelling-fairly-odd-parents-mr-turner-gif-16322274
04:25 < ws-client> <ChillerDragon> epic
04:34 < ws-client> <ChillerDragon> how is two dwords not the same as one qword???
04:34 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1722479611.png
04:34 < ws-client> <ChillerDragon> https://paste.zillyhuhn.com/f8
04:35 < ws-client> <ChillerDragon> can `mov` only do 32 bit max?
04:36 < bridge> <sedonya> gm
05:48 < ws-client> <ChillerDragon> Intoroducing typos and then fixing them is infinite commit glitch
05:48 < ws-client> <ChillerDragon> Intoroducing gg
07:05 < bridge> <milkeeycat> Ok, did you read the dragon book btw? :justatest:
08:17 < bridge> <learath2> No
08:18 < bridge> <learath2> Nope, I did skim through a couple pages but I didn't really think I could read it. Looked far too detailed
08:22 < ws-client> <ChillerDragon> TRIVIA TIME!!!!!!!!!!
08:22 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1722493331.png
08:22 < ws-client> <ChillerDragon> is this nasm assembly or ruby code?
08:26 < bridge> <learath2> Nasm
08:29 < ws-client> <ChillerDragon> -.- yes
08:29 < ws-client> <ChillerDragon> but it looks as hot as ruby 
08:30 < ws-client> <ChillerDragon> or at least not much more verbose than the C++ version :p 
08:30 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1722493445.png
08:31 < bridge> <learath2> Honestly props, I actually could never be assed to do this in assembly üòÑ
08:41 < ws-client> <ChillerDragon> u asmr pro 
08:41 < ws-client> <ChillerDragon> lea rath, 2
08:49 < bridge> <ryozuki> morning
09:51 < bridge> <milkeeycat> ```
09:51 < bridge> <milkeeycat> main:
09:51 < bridge> <milkeeycat>         push    rbp
09:51 < bridge> <milkeeycat>         mov     rbp, rsp
09:51 < bridge> <milkeeycat>         sub     rsp, 16
09:51 < bridge> <milkeeycat> ```
09:51 < bridge> <milkeeycat> @learath2 can i write in `[rbp]`
09:52 < bridge> <milkeeycat> ```
09:52 < bridge> <milkeeycat> main:
09:52 < bridge> <milkeeycat>         push    rbp
09:52 < bridge> <milkeeycat>         mov     rbp, rsp
09:52 < bridge> <milkeeycat>         sub     rsp, 16
09:52 < bridge> <milkeeycat> ```
09:52 < bridge> <milkeeycat> @learath2 can i write in `[rbp]`?
09:52 < bridge> <learath2> Why not?
09:54 < bridge> <milkeeycat> why does gcc move first variable in `[rbp-1]` ;-;
09:54 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1268476916973834303/image.png?ex=66ac90b0&is=66ab3f30&hm=642bfb72cd88adcac399de550799b3b4b238316e9a9310fcca6d0e69d2ac5ba2&
09:56 < bridge> <tsfreddie> stop learning. you are making me jealous
09:56 < bridge> <melo∆û> fr
09:56 < bridge> <learath2> Why not? üôÉ
09:56 < bridge> <melo∆û> guess the razer order
09:56 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1268477560828858398/image.png?ex=66ac9149&is=66ab3fc9&hm=02c927adac8df5b3d03eb065da5e466a78b9dfc4fbaea077de7d6da52faf0d6d&
09:56 < bridge> <milkeeycat> fair
09:57 < bridge> <Jupstar ‚ú™> broken graphics overlays
09:57 < bridge> <melo∆û> close
09:57 < bridge> <melo∆û> go PR
09:57 < bridge> <tsfreddie> the cheating keyboard
09:57 < bridge> <melo∆û> exactly
09:57 < bridge> <Jupstar ‚ú™> are they open source?
09:57 < bridge> <heinrich5991> is it open source?
09:57 < bridge> <tsfreddie> i'd buy wooting really
09:57 < bridge> <melo∆û> XD god damn it, no i dont think so LMAO
09:57 < bridge> <Jupstar ‚ú™> xD
09:57 < bridge> <Jupstar ‚ú™> wait
09:58 < bridge> <Jupstar ‚ú™> xDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
09:58 < bridge> <Jupstar ‚ú™> is that new record?
09:58 < bridge> <melo∆û> nah my current one is broken and i cba to wait 1 1/2 months for shipping
09:58 < bridge> <melo∆û> even tho i considered it
09:58 < bridge> <tsfreddie> i would give you mine if i'm german
09:58 < bridge> <melo∆û> come visit me jupsti and chiller frfr
09:58 < bridge> <Jupstar ‚ú™> with what opt flag is that?
09:58 < bridge> <melo∆û> we need to get chiller back into germany first tho...
09:58 < bridge> <tsfreddie> just got my passport
09:58 < bridge> <Jupstar ‚ú™> i think now he could visit chiller xd
09:58 < bridge> <tsfreddie> i mean just renewed my passport
09:59 < bridge> <Jupstar ‚ú™> in asia
09:59 < bridge> <milkeeycat> i don't have any custom flags
09:59 < bridge> <tsfreddie> where is chiller now?
09:59 < bridge> <tsfreddie> chillerdragon: where
09:59 < bridge> <melo∆û> somewhere sunny
09:59 < bridge> <melo∆û> dude constantly just heads out to the beach
09:59 < bridge> <tsfreddie> but it's always sunny in philadelphia
09:59 < bridge> <Jupstar ‚ú™> do -Ofast then your whole function is gone
09:59 < bridge> <Jupstar ‚ú™> üò¨
10:00 < bridge> <tsfreddie> explain more
10:00 < bridge> <milkeeycat> time to ask chat gpt üò¨
10:00 < bridge> <heinrich5991> `-Ofast`, more like `-Oignore-standards-and-break-my-code`
10:01 < bridge> <Jupstar ‚ú™> I dont directly agree with the second but yes
10:01 < bridge> <Jupstar ‚ú™> for floating points it could indeed break your code
10:01 < bridge> <tsfreddie> cool
10:01 < bridge> <Jupstar ‚ú™> even -O1 already removes your code
10:01 < bridge> <Jupstar ‚ú™> so Ofast not needed here
10:02 < bridge> <Jupstar ‚ú™> then do static void fn
10:02 < bridge> <Jupstar ‚ú™> then the definition is gone too
10:02 < bridge> <Jupstar ‚ú™> xd
10:02 < bridge> <learath2> I was hoping you'd elaborate more but given this conversation is quickly fleeting. I wanted to say that writing directly to [rbp] isn't fine. Writing to offsets from it is obviously fine, that's it's point
10:03 < bridge> <learath2> Now that I look again at the question, perhaps you were confused as to why gcc wasn't using [rbp] for the first variable
10:03 < bridge> <milkeeycat> yep
10:03 < bridge> <tsfreddie> we got a thinker
10:04 < bridge> <milkeeycat> so if i do `sub rsp, 3` i can write to [rbp - 1..3]?
10:04 < bridge> <milkeeycat> so if i do `sub rsp, 3` i can write to [rbp - 1..=3]?
10:05 < bridge> <heinrich5991> you must only adjust `rsp` by multiples of 16
10:05 < bridge> <milkeeycat> it works for now, if it breaks one day because of alignment ill fix it
10:06 < bridge> <heinrich5991> it'll likely break in random places ü§∑‚Äç‚ôÄÔ∏è
10:07 < bridge> <milkeeycat> it will be fun debug experience
10:08 < bridge> <Jupstar ‚ú™> @milkeeycat will u also write an optimizer?
10:08 < bridge> <milkeeycat> i know only about constant folding xd
10:08 < bridge> <tsfreddie> what are you writing exactly? @milkeeycat
10:09 < bridge> <milkeeycat> a compiler for cringe version of C language
10:09 < bridge> <tsfreddie> <a:catxplosion:1082715870893195274> epic
10:09 < bridge> <milkeeycat> but now it's more like a calculator with functions :lol:
10:10 < bridge> <Jupstar ‚ú™> don't forget to add a SPIR-V target.
10:10 < bridge> <learath2> Sorry, I got pinged on slack by my capitalist overlords, but I think you have it figured out
10:11 < bridge> <tsfreddie> is SPIR-V general purpose
10:12 < bridge> <milkeeycat> you can always make a pr with a new target üò¨
10:12 < bridge> <Jupstar ‚ú™> i assume so
10:12 < bridge> <tsfreddie> i thought it was shader only
10:13 < bridge> <learath2> @milkeeycat https://eli.thegreenplace.net/2011/09/06/stack-frame-layout-on-x86-64/ this is a pretty nice blogpost. Probably what clicked it for me
10:13 < bridge> <Jupstar ‚ú™> i mean aren't shaders also general purpose?
10:13 < bridge> <Jupstar ‚ú™> compute shaders are pretty OG
10:13 < bridge> <tsfreddie> are they tho
10:13 < bridge> <milkeeycat> you already sent this blog post, and I've read it :DD
10:13 < bridge> <Jupstar ‚ú™> are they arent
10:15 < bridge> <learath2> huh really? I don't remember sending it
10:16 < bridge> <tsfreddie> why do we need cuda again?
10:16 < bridge> <Jupstar ‚ú™> to get more performance
10:16 < bridge> <Jupstar ‚ú™> on nvidia cards
10:16 < bridge> <tsfreddie> :justatest: are shaders slow?
10:17 < bridge> <Jupstar ‚ú™> no, but sometimes the 10% more perf matter
10:17 < bridge> <Jupstar ‚ú™> cuda also isnt perfect, it will be replaced sooner or later
10:17 < bridge> <tsfreddie> i don't understand i guess
10:18 < bridge> <tsfreddie> i always wondered why AI stuff isn't just a bunch of compute shaders
10:18 < bridge> <milkeeycat> oh I remember this link, I probably checked that post myself xd
10:18 < bridge> <Jupstar ‚ú™> compute shaders are a try to basically merge
10:18 < bridge> <Jupstar ‚ú™> 
10:18 < bridge> <Jupstar ‚ú™> OpenCL into OpenGL
10:18 < bridge> <Jupstar ‚ú™> 
10:18 < bridge> <Jupstar ‚ú™> so vulkan can basically do both
10:18 < bridge> <Jupstar ‚ú™> and OpenCL is basically cuda in bad
10:18 < bridge> <Jupstar ‚ú™> üòÇ
10:19 < bridge> <learath2> The entire blog is pretty good eli very smort
10:19 < bridge> <Jupstar ‚ú™> i mean strictly speaking they might even be.. compute here simply means that it doesnt follow the concept of graphics pipelines
10:19 < bridge> <Jupstar ‚ú™> at least not as a hard requirement
10:19 < bridge> <milkeeycat> yep, even cave man like me learnt a lot of new xd
10:21 < bridge> <milkeeycat> comment left, problem solved, code commited :greenthing:
10:21 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1268483783561187380/image.png?ex=66ac9715&is=66ab4595&hm=c9745f8c012f564222d2d0a0947baa80912824e2f43d914391e7c899149a8fd7&
10:23 < bridge> <tsfreddie> still don't understand but i'm mentally tapped out
10:23 < bridge> <learath2> Without the -1 you are writing to `[rbp]`, destroying your very initial `push rbp`
10:23 < bridge> <Jupstar ‚ú™> ok, make sure to not crash when tabbing in again.. drivers are very unstable
10:25 < bridge> <heinrich5991> `[rsp]` points to the lowest byte of what you pushed
10:25 < bridge> <heinrich5991> `[rsp]` to `[rsp+7]` is the last push
10:26 < bridge> <heinrich5991> so if you do `push rbp; mov rbp, rsp; mov [rbp], 0`, then you're destroying a byte of the pushed, old `rbp`
10:36 < bridge> <milkeeycat> ok, i get it now, thanks a lot xd
10:38 < bridge> <tsfreddie> i think i'm just stupid
10:38 < bridge> <Jupstar ‚ú™> welcome in tha club
10:41 < bridge> <tsfreddie> club sandwich
10:42 < bridge> <milkeeycat> ok now i finally have correct write only structs xD
10:45 < bridge> <learath2> :Celebrate:
10:45 < bridge> <milkeeycat> i guess it was an easy part and it took me so much time :pepeW:
10:55 < bridge> <ryozuki> @milkeeycat if u want to optimize seriously, u need to have a intermediate IR that is in SSA form, and if u want it more serious, you need to have tables of the target instructions with their size, latencies, etc
10:56 < bridge> <ryozuki> https://en.wikipedia.org/wiki/Static_single-assignment_form
10:56 < bridge> <ryozuki> this is vital
10:57 < bridge> <learath2> There was also one more form that is commonly used
10:57 < bridge> <heinrich5991> interesting, even go has an ssa these days?
10:57 < bridge> <learath2> Actually maybe "commonly" is not the correct word
10:57 < bridge> <ryozuki> > In functional language compilers, such as those for Scheme and ML, continuation-passing style (CPS) is generally used. SSA is formally equivalent to a well-behaved subset of CPS excluding non-local control flow, so optimizations and transformations formulated in terms of one generally apply to the other. Using CPS as the intermediate representation is more natural for higher-order functions and interprocedural analysis. CPS also easily encodes ca
10:57 < bridge> <ryozuki> its used in functional i guess
10:58 < bridge> <learath2> Ah perhaps I was thinking about CPS
10:58 < bridge> <ryozuki> they have a package https://pkg.go.dev/golang.org/x/tools/go/ssa
10:58 < bridge> <ryozuki> but idk if they use it
10:58 < bridge> <ryozuki> probs yes tbh its the only real way used nowadays
10:59 < bridge> <ryozuki> java does it too
10:59 < bridge> <ryozuki> https://compilers.cs.uni-saarland.de/papers/bbhlmz13cc.pdf
11:00 < bridge> <ryozuki> > Package ssa defines a representation of the elements of Go programs (packages, types, functions, variables and constants) using a static single-assignment (SSA) form intermediate representation (IR) for the bodies of functions.
11:00 < bridge> <ryozuki> xd
11:02 < bridge> <ryozuki> mono, webkit, go, swift, erlang, llvm, gcc, jvm, pypy, android, luajit, php, hack, libfirm and some mesa drivers for shading
11:02 < bridge> <ryozuki> some examples
11:02 < bridge> <heinrich5991> who is not using ssa? @ryozuki
11:02 < bridge> <ryozuki> > SPIR-V, the shading language standard for the Vulkan graphics API and kernel language for OpenCL compute API, is an SSA representation
11:02 < bridge> <ryozuki> @jupeyy_keks
11:02 < bridge> <milkeeycat> im goofying around, it's not a serious language
11:03 < bridge> <ryozuki> why not goof around with good perf? xd
11:04 < bridge> <ryozuki> idk
11:04 < bridge> <ryozuki> i guess an example would be @milkeeycat lang
11:04 < bridge> <ryozuki> :gigachad:
11:04 < bridge> <milkeeycat> damn
11:05 < bridge> <learath2> Perhaps older C compilers don't
11:05 < bridge> <heinrich5991> because you don't want to do normal lang no. 2
11:05 < bridge> <heinrich5991> because you don't want to do normal lang no. 2341
11:05 < bridge> <ryozuki> i would say ssa has nothing to do with the lang being normal or esoteric
11:06 < bridge> <ryozuki> maybe turbopascal
11:07 < bridge> <learath2> I was thinking Borland
11:07 < bridge> <learath2> I think without ssa form it's really hard to do stuff like data-flow analysis
11:23 < bridge> <ryozuki> https://aws.amazon.com/blogs/opensource/amazons-exabyte-scale-migration-from-apache-spark-to-ray-on-amazon-ec2/
15:29 < bridge> <animepdf> what is `ni` command in `run.sh` script:
15:29 < bridge> <animepdf> ```bash
15:29 < bridge> <animepdf> #!/bin/sh
15:29 < bridge> <animepdf> while true; do
15:29 < bridge> <animepdf>   mv servers/$1.log servers/$1.log.old
15:29 < bridge> <animepdf>   ni -15 2 ./DDRace-Server_sql -f servers/$1.cfg
15:29 < bridge> <animepdf>   sleep 1
15:29 < bridge> <animepdf> done
15:29 < bridge> <animepdf> ```
15:29 < bridge> <animepdf> cant find it
15:36 < bridge> <heinrich5991> looks like `nice` maybe
15:37 < bridge> <heinrich5991> /usr/local/bin/ni
15:37 < bridge> <heinrich5991> ```
15:37 < bridge> <heinrich5991> #!/bin/sh
15:37 < bridge> <heinrich5991> [ $# -lt 3 ] && echo "Usage: ni 19 3 command" >&2 && exit 1
15:37 < bridge> <heinrich5991> NICE=$1
15:37 < bridge> <heinrich5991> shift
15:37 < bridge> <heinrich5991> IONICE=$1
15:37 < bridge> <heinrich5991> shift
15:38 < bridge> <heinrich5991> exec nice -n $NICE ionice -c $IONICE "$@"
15:38 < bridge> <heinrich5991> ```
15:38 < bridge> <heinrich5991> /usr/local/bin/ni
15:38 < bridge> <heinrich5991> ```sh
15:38 < bridge> <heinrich5991> #!/bin/sh
15:38 < bridge> <heinrich5991> [ $# -lt 3 ] && echo "Usage: ni 19 3 command" >&2 && exit 1
15:38 < bridge> <heinrich5991> NICE=$1
15:38 < bridge> <heinrich5991> shift
15:38 < bridge> <heinrich5991> IONICE=$1
15:38 < bridge> <heinrich5991> shift
15:38 < bridge> <heinrich5991> exec nice -n $NICE ionice -c $IONICE "$@"
15:38 < bridge> <heinrich5991> ```
15:38 < bridge> <animepdf> thanks!
15:38 < bridge> <milkeeycat> do you have this file on github?
15:38 < bridge> <heinrich5991> I don't know
15:54 < bridge> <milkeeycat> can the game start lagging if I have entities turned off? :thonk:
15:56 < bridge> <heinrich5991> the normal mode is graphically heavier than entities mode
15:56 < bridge> <milkeeycat> ye, but I have higher ping xd
15:56 < bridge> <milkeeycat> not lower fps
15:57 < bridge> <Jupstar ‚ú™> so same fps?
15:57 < bridge> <milkeeycat> ye
15:58 < bridge> <Jupstar ‚ú™> maybe your GPU sucks all energy from your network controller ^^
15:58 < bridge> <milkeeycat> üò¨
16:00 < bridge> <milkeeycat> hm, now everything's fine xd
16:02 < bridge> <learath2> Really? I actually thought the text made the entities mode heavier
16:02 < bridge> <Jupstar ‚ú™> what text xd
16:02 < bridge> <learath2> Tele numbers
16:03 < bridge> <Jupstar ‚ú™> that has been fixed since like the first release of opengl 3.3
16:03 < bridge> <Jupstar ‚ú™> xd
16:03 < bridge> <heinrich5991> üòÑ
16:03 < bridge> <heinrich5991> ‚ù§Ô∏è @jupeyy_keks
16:03 < bridge> <learath2> I'm an old person
16:03 < bridge> <Jupstar ‚ú™> truely old üòÑ
16:03 < bridge> <Jupstar ‚ú™> 12
16:03 < bridge> <milkeeycat> https://tenor.com/view/old-man-grandpa-gif-15302685
16:04 < bridge> <learath2> https://tenor.com/view/old-man-yells-at-cloud-yelling-old-man-news-the-simpsons-gif-17741451
16:04 < bridge> <learath2> back in my day entities were bad for fps
16:06 < bridge> <Jupstar ‚ú™> yeah, same for speedup arrows
16:18 < bridge> <learath2> https://www.desmos.com/calculator/2mtfvczlrh
16:18 < bridge> <learath2> Do not zoom in on my non-continuous feet
16:19 < bridge> <Jupstar ‚ú™> looks better than 0.7 skins
16:19 < bridge> <learath2> LOL
16:20 < bridge> <learath2> rude
16:20 < bridge> <Jupstar ‚ú™> tru
16:23 < bridge> <milkeeycat> someone stole my code -.- I remember i wrote stuff how to move memory from indirect to indirect place and it's not here
16:25 < bridge> <learath2> Do a `rep movs` if you want to annoy everyone
16:25 < bridge> <milkeeycat> what's that? xd
16:26 < bridge> <learath2> It's an instruction, it will repeat `movs` `ecx` times
16:27 < bridge> <milkeeycat> why does it even exist xd
16:27 < bridge> <milkeeycat> upd. it was in stash xddd
16:29 < bridge> <learath2> it's basically a copy loop implemented at the microcode level, it used to be fast, then it was slow, now it's fast-ish for large enough input but still not sure if fast enough to beat vectorized memcpy
16:33 < bridge> <Jupstar ‚ú™> average rust chain
16:33 < bridge> <Jupstar ‚ú™> ```rs
16:33 < bridge> <Jupstar ‚ú™> cur_weapon: render_info
16:33 < bridge> <Jupstar ‚ú™>                     .character_infos
16:33 < bridge> <Jupstar ‚ú™>                     .get(&local_render_info.player_id)
16:33 < bridge> <Jupstar ‚ú™>                     .and_then(|c| c.stage_id.and_then(|id| render_info.stages.get(&id)))
16:33 < bridge> <Jupstar ‚ú™>                     .and_then(|s| s.world.characters.get(&local_render_info.player_id))
16:33 < bridge> <Jupstar ‚ú™>                     .map(|player| player.cur_weapon)
16:33 < bridge> <Jupstar ‚ú™>                     .unwrap_or_default()
16:33 < bridge> <Jupstar ‚ú™> ```
16:33 < bridge> <learath2> functional programming be like
16:33 < bridge> <learath2> ddnet in haskell when?
16:33 < bridge> <Jupstar ‚ú™> my next project then
16:39 < bridge> <Jupstar ‚ú™> @robyt3 do you already locally worked on a serializable structure for arbitrary buttons? or is your pr open to be extended
16:48 < bridge> <robyt3> I designed most of it on paper but I haven't coded it yet. The button config would be serialized as json of course.
16:49 < bridge> <heinrich5991> cool. is that piece of paper something you'd be willing to share? üòÆ
16:49 < bridge> <melo∆û> god now i have roby in my mind sitting in front of a high end setup with RGB and everything, writing his code structures on a Din A5 piece of paper with a sharpie
16:50 < bridge> <melo∆û> maybe that's why you're so productive roby.. i should try that
16:51 < bridge> <Jupstar ‚ú™> yeah i assumed so.
16:51 < bridge> <Jupstar ‚ú™> 
16:51 < bridge> <Jupstar ‚ú™> that also makes sense i guess, but sadly directly requires the GUI for it too, i hoped i can sneak in a ugly console command to add buttons similar to how friends and stuff are added in the config xd
16:51 < bridge> <robyt3> yeah, can share it later
16:51 < bridge> <Jupstar ‚ú™> did you literally do it on paper or what xd
16:51 < bridge> <Jupstar ‚ú™> i thought that was a metaphore xD
16:52 < bridge> <melo∆û> could also be a super large whiteboard next to the pc
16:52 < bridge> <robyt3> yeah, but if you have any tools that are faster to use for class diagram modeling than paper let me know üòÑ
16:52 < bridge> <Jupstar ‚ú™> i do everything in my head xD
16:53 < bridge> <Jupstar ‚ú™> i think i never used any designing tools
16:53 < bridge> <Jupstar ‚ú™> nor paper
16:53 < bridge> <melo∆û> if you're willing to go digital, get a small drawing pad for like 50‚Ç¨ - they're super useful for notetaking and dont take up much space!
16:53 < bridge> <Jupstar ‚ú™> nor notes
16:53 < bridge> <heinrich5991> paper is also an amazing superpower
16:53 < bridge> <Jupstar ‚ú™> well i do todo lists
16:53 < bridge> <heinrich5991> costs like <0.01‚Ç¨ per sheet
16:54 < bridge> <Jupstar ‚ú™> i am poor i need to use my brain
16:54 < bridge> <melo∆û> the problem with doing anything on paper is, that i can't read it after like 2 days because my handwriting is awful awful
16:55 < bridge> <Jupstar ‚ú™> but isnt imagination the best tool
16:55 < bridge> <melo∆û> one of my students kindly asked me if i have one of the answers digitally because my handwriting was ‚≠êspecial‚≠ê
16:55 < bridge> <Jupstar ‚ú™> u can visualize it like a 3d graph
16:55 < bridge> <Jupstar ‚ú™> i couldn't do that on pc
16:59 < bridge> <learath2> I started taking my handwritten notes on an ipad, that helped me a lot with taking better notes
16:59 < bridge> <learath2> The curve smoothing makes my shit handwriting more readable, and I can search through my notes because of OCR
17:00 < bridge> <melo∆û> oh wow you reminded me i have a ipad mini somewhere...  might look for it later
17:00 < bridge> <robyt3> I had one that worked perfectly, but the drivers seem broken now
17:00 < bridge> <robyt3> Would have liked to use it to test touch controls directly on Windows
17:02 < bridge> <melo∆û> i have the huion H640P, works great for me
17:02 < bridge> <Jupstar ‚ú™> i wait for the handwritten design approach
17:05 < bridge> <learath2> I used to have a wacom tablet for a while that I used to play osu. Then I gifted it to a friend that draws
17:09 < bridge> <iamminka> can i apply to add a new language to game and also flag?
17:09 < bridge> <Jupstar ‚ú™> which language is it
17:09 < bridge> <iamminka> siluesian
17:10 < bridge> <iamminka> silesian
17:11 < bridge> <Jupstar ‚ú™> are there silesians that don't speak polish?
17:11 < bridge> <iamminka> yes
17:12 < bridge> <Jupstar ‚ú™> really? lmao
17:12 < bridge> <iamminka> lol ive met one that just spoke silesian
17:12 < bridge> <Jupstar ‚ú™> and no other language?
17:12 < bridge> <iamminka> i mean maybe english
17:12 < bridge> <Jupstar ‚ú™> well i'd open an issue on discord
17:12 < bridge> <iamminka> but he could very well understand me
17:12 < bridge> <Jupstar ‚ú™> and ask there
17:12 < bridge> <iamminka> :D
17:14 < bridge> <iamminka> btw are there galians that dont speak spanish/portuguese?
17:17 < bridge> <Jupstar ‚ú™> on github*
17:35 < bridge> <ryozuki> i havent written on paper since years
17:35 < bridge> <ryozuki> im down bad
17:35 < bridge> <ryozuki> ok i signed some stuff
17:35 < bridge> <ryozuki> but idk if that counts
17:43 < bridge> <Jupstar ‚ú™> similar üòÑ
17:56 < bridge> <3x1st_> chiller ask here?
17:56 < bridge> <3x1st_> https://cdn.discordapp.com/attachments/293493549758939136/1268598251079208970/image.png?ex=66ad01b0&is=66abb030&hm=da2b4ca8989077108cea39484cbfc1b4fa6e7ae9e094206e69d7769006475c32&
18:04 < bridge> <melo∆û> try `rustup default stable-x86_64-pc-windows-gnu` or `rustup default stable-x86_64-pc-windows-msvc` depending on what you're using
18:15 < bridge> <milkeeycat> @learath2 you will probably die of cringe when you look at this assembly but it works :poggers2:
18:15 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1268603075451424889/image.png?ex=66ad062e&is=66abb4ae&hm=f0b8eea23f7c6ff54808a02d760bbf6dcf974a33a834025452264bcb7a7a90d9&
18:15 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1268603075812262041/image.png?ex=66ad062e&is=66abb4ae&hm=46a38bbb8ca77a9001102179469fcf81a7fc9ace019d16ba570416074fc3f5ee&
18:15 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1268603076147937433/image.png?ex=66ad062e&is=66abb4ae&hm=5c9461f261bb769360cdcc3a79d300c29764907be7bf8a31afdc8879ce3a1460&
18:18 < bridge> <learath2> Doesn't look that bad for hand generated assembly
18:19 < bridge> <learath2> Why the weird jump to next line at the end?
18:19 < bridge> <milkeeycat> that's how `return` keyword works :justatest:
18:20 < bridge> <learath2> Why does it generate a label, insert the label right after, then unconditionally jump to it?
18:22 < bridge> <milkeeycat> it sets return value and jumps to clean up lablel xd
18:22 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1268604855212179496/image.png?ex=66ad07d7&is=66abb657&hm=830864aa7c669c52b7253351308a4555ba1f1408681f1e6b3840500653a5dc58&
18:22 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1268604855468167281/image.png?ex=66ad07d7&is=66abb657&hm=e0aa75bd16dc593f69904542afa375a6350556a1bb001bb7800a783d8f122b77&
18:22 < bridge> <milkeeycat> it sets return value and jumps to clean up label xd
18:22 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1268604855212179496/image.png?ex=66ad07d7&is=66abb657&hm=830864aa7c669c52b7253351308a4555ba1f1408681f1e6b3840500653a5dc58&
18:22 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1268604855468167281/image.png?ex=66ad07d7&is=66abb657&hm=e0aa75bd16dc593f69904542afa375a6350556a1bb001bb7800a783d8f122b77&
18:23 < bridge> <learath2> OH now I get it you support early returns too
18:23 < bridge> <milkeeycat> üòè
18:23 < bridge> <learath2> very advanced language
18:24 < bridge> <milkeeycat> xddd
18:24 < bridge> <melo∆û> siiick!
18:25 < bridge> <milkeeycat> if I add pointers next, then it will be even possible to make something fun in it
18:25 < bridge> <milkeeycat> oh, and control flow statements xd
18:26 < bridge> <melo∆û> no way you will allow us to jiggle memory <a:peepoveryhappy:980464954694041620>
18:43 < bridge> <teero777> can dragger beams drag multiple people?
18:47 < bridge> <archimede67> I don't think so
18:47 < bridge> <teero777> the serverside code sugests that but it doesnt seem so
18:47 < bridge> <teero777> ```
18:47 < bridge> <teero777>     int m_aTargetIdInTeam[MAX_CLIENTS];
18:47 < bridge> <teero777>     CDraggerBeam *m_apDraggerBeam[MAX_CLIENTS];
18:47 < bridge> <teero777> ```
18:47 < bridge> <archimede67> It's 1 player by beam from my experience
18:47 < bridge> <teero777> ```
18:47 < bridge> <teero777> int m_aTargetIdInTeam[MAX_CLIENTS];
18:47 < bridge> <teero777> CDraggerBeam *m_apDraggerBeam[MAX_CLIENTS];
18:47 < bridge> <teero777> ```
18:47 < bridge> <teero777> maybe per team?
18:47 < bridge> <archimede67> yes
18:47 < bridge> <archimede67> 1 player per beam per team
18:47 < bridge> <teero777> okay that makes sens
18:47 < bridge> <teero777> okay that makes sense
18:57 < bridge> <melo∆û> @heinrich5991 Would you say that we should use the personal pronoun in the polite form (Sie) on the wiki? or rather (du) to sound friendlier? for german translations
18:57 < bridge> <melo∆û> not sure, using `sie` feels way to strict, but it's an official wiki after all
19:12 < bridge> <archimede67> Sie
19:32 < bridge> <melo∆û> @jupeyy_keks
19:32 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1268622402313519154/image.png?ex=66ad182e&is=66abc6ae&hm=eb47c8a58076b30a905e999e6b41e0cef4eedaba935933fca5d8ba089bf07506&
19:34 < bridge> <heinrich5991> for a game? du
19:34 < bridge> <melo∆û> fair
19:34 < bridge> <heinrich5991> even the official wikipedia uses du, I think
19:49 < bridge> <Jupstar ‚ú™> nice, did you submit already?
19:49 < bridge> <melo∆û> i dont really have experience working with vulkan's API at all
19:49 < bridge> <melo∆û> i mean i could submit telling that i play my games with it and it works (sometimes)
19:50 < bridge> <Jupstar ‚ú™> shots fired
19:58 < bridge> <robyt3> The touch controls design notes. The json format to represent this would look similar to this:
19:58 < bridge> <robyt3> ```json
19:58 < bridge> <robyt3> {
19:58 < bridge> <robyt3>     "direct_touch": true,
19:58 < bridge> <robyt3>     "buttons": [
19:58 < bridge> <robyt3>         {
19:58 < bridge> <robyt3>             "position": {
19:58 < bridge> <robyt3>                 "x": 110,
19:58 < bridge> <robyt3>                 "y": 0,
19:58 < bridge> <robyt3>                 "w": 10,
19:58 < bridge> <robyt3>                 "h": 10
19:58 < bridge> <robyt3>             }
19:58 < bridge> <robyt3>             "shape": "rect",
19:58 < bridge> <robyt3>             "behavior": {
19:58 < bridge> <robyt3>                 "type": "predefined",
19:58 < bridge> <robyt3>                 "button_id": "swap_action",
19:58 < bridge> <robyt3>             }
19:58 < bridge> <robyt3>         },
19:58 < bridge> <robyt3>         {
19:59 < bridge> <robyt3>             "position": {
19:59 < bridge> <robyt3>                 "x": 20,
19:59 < bridge> <robyt3>                 "y": 20,
19:59 < bridge> <robyt3>                 "w": 10,
19:59 < bridge> <robyt3>                 "h": 10
19:59 < bridge> <robyt3>             }
19:59 < bridge> <robyt3>             "shape": "rect",
19:59 < bridge> <robyt3>             "behavior": {
19:59 < bridge> <robyt3>                 "type": "bind",
19:59 < bridge> <robyt3>                 "label": "Say hello",
19:59 < bridge> <robyt3>                 "command": "say Hello World",
19:59 < bridge> <robyt3>                 "visibility": "always"
20:00 < bridge> <melo∆û> :D i love this, very interesting to see your thought process
20:23 < bridge> <zhn> looks like something server side needs too xd
20:51 < bridge> <jxsl13> hm, uml, unexpected
21:59 < bridge> <Jupstar ‚ú™> hot
22:00 < bridge> <Jupstar ‚ú™> & tryhad üò¨
22:00 < bridge> <Jupstar ‚ú™> @blaiszephyr when leak hand writing
22:00 < bridge> <melo∆û> oh god you dont want that
22:00 < bridge> <Jupstar ‚ú™> and @learath2 with his epyc ipad
22:00 < bridge> <melo∆û> wait i'll find smth
22:00 < bridge> <melo∆û> +
22:07 < bridge> <melo∆û> @jupeyy_keks
22:07 < bridge> <melo∆û> https://cdn.discordapp.com/attachments/293493549758939136/1268661296484847677/rn_image_picker_lib_temp_e3ffda0f-a0cf-4215-8f22-1f94caa54768.jpg?ex=66ad3c67&is=66abeae7&hm=97b8ebe3a0ef7fc682501323113aadf74f4f3848125f5687ca7c3cdee2ebf858&
22:07 < bridge> <Jupstar ‚ú™> i didnt write with my hands since like 5 years lmao.
22:07 < bridge> <Jupstar ‚ú™> 
22:07 < bridge> <Jupstar ‚ú™> also had no paper, so had to write on a envelope xD
22:07 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1268661353149890591/5287275539796717347.jpg?ex=66ad3c75&is=66abeaf5&hm=2037dec12bbc9c46046156d3cfa4083e23ea95d3c0ea61fe07e3211ffd51afcb&
22:07 < bridge> <melo∆û> :KEKW:   :KEKW:   :KEKW:   :KEKW:
22:08 < bridge> <Jupstar ‚ú™> very sexy, looks like a normal man writing style xD
22:08 < bridge> <draggory> https://cdn.discordapp.com/attachments/293493549758939136/1268661599833555029/rn_image_picker_lib_temp_5d117a16-7958-458a-9dcf-3234719d0283.jpg?ex=66ad3caf&is=66abeb2f&hm=156a2d49870eddfb2e085ba60b13d6f128892c15764447888b23ab733f5dd9bb&
22:08 < bridge> <Jupstar ‚ú™> that is even worse xD
22:08 < bridge> <melo∆û> fucking nerd
22:08 < bridge> <draggory> MAN
22:08 < bridge> <draggory> LEAVE ME ALONE
22:08 < bridge> <draggory> I TOOK MATHS TO NOT WRITE
22:08 < bridge> <melo∆û> AHAH
22:09 < bridge> <learath2> When I get home
22:11 < bridge> <learath2> Well I have some multivariable calculus
22:11 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1268662335082332200/IMG_20240801_231048_534.jpg?ex=66ad3d5f&is=66abebdf&hm=949a0dfbc3ec5497c1dcb4e07ff0e8caeea3a5c174805a00357287f3aa3a2050&
22:11 < bridge> <Jupstar ‚ú™> ok now more tryhard
22:11 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1268662487322984448/5287275539796717355.jpg?ex=66ad3d83&is=66abec03&hm=d5ac04a6e61da887fbef30825f677aca95b8debb783fd04728dfb627d57f3c3b&
22:12 < bridge> <melo∆û> perfect angles on the g
22:14 < bridge> <Jupstar ‚ú™> that's too hard to identify xd
22:15 < bridge> <learath2> Ye I'll find you some of my actual notes when I get back
22:16 < bridge> <milkeeycat> :lol:
22:17 < bridge> <Jupstar ‚ú™> Hello Mil üîëcat
22:17 < bridge> <milkeeycat> Hello jup‚≠ê
22:17 < bridge> <Jupstar ‚ú™> ü§©
22:18 < bridge> <milkeeycat> Did you see my godlike feature in my lang? üòè
22:18 < bridge> <Jupstar ‚ú™> a Drop trait that takes self as argument?
22:18 < bridge> <milkeeycat> Better
22:19 < bridge> <milkeeycat> Accessing struct fields üò¨
22:19 < bridge> <Jupstar ‚ú™> epyc
22:27 < bridge> <Jupstar ‚ú™> @milkeeycat handwriting btw
22:27 < bridge> <Jupstar ‚ú™> everyone that sees must leak
22:27 < bridge> <draggory> Is this a cult now
22:27 < bridge> <melo∆û> yes.
22:27 < bridge> <draggory> Sick
22:28 < bridge> <Jupstar ‚ú™> if it looks good, 90% you a girl
22:28 < bridge> <draggory> Can we make it a pyramid scheme too
22:28 < bridge> <Jupstar ‚ú™> üò¨
22:29 < bridge> <milkeeycat> https://cdn.discordapp.com/attachments/293493549758939136/1268666934488989777/IMG_20240801_232903.jpg?ex=66ad41a7&is=66abf027&hm=0fb48cb1e57a0b43412f4224b594cec37485e4c0df4419b6403dde4f786e94df&
22:29 < bridge> <Jupstar ‚ú™> omg
22:29 < bridge> <Jupstar ‚ú™> that looks way too god
22:29 < bridge> <Jupstar ‚ú™> that looks way too good
22:29 < bridge> <Jupstar ‚ú™> use yours not from sister
22:30 < bridge> <Jupstar ‚ú™> ok it's not perfect
22:30 < bridge> <Jupstar ‚ú™> you no girl
22:30 < bridge> <Jupstar ‚ú™> accepted
22:30 < bridge> <milkeeycat> :feelsbadman:
22:30 < bridge> <Jupstar ‚ú™> :heartw:
22:31 < bridge> <draggory> Why do you both like triangles so much
22:31 < bridge> <draggory> The g's and y's are crazy
22:31 < bridge> <Jupstar ‚ú™> it's a secret sign
22:31 < bridge> <Jupstar ‚ú™> https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Illuminati_triangle_eye.png/1200px-Illuminati_triangle_eye.png
22:32 < bridge> <draggory> ofc
22:32 < bridge> <draggory> It all makes sense now
22:36 < bridge> <draggory> Ah I have a non-maths one
22:37 < bridge> <draggory> https://cdn.discordapp.com/attachments/293493549758939136/1268668914876026922/IMG_20240801_213650.jpg?ex=66ad4380&is=66abf200&hm=614c88955bca5a56f950d3f69c288e0ec05365395587e4df8e4fdc45a7f333b4&
22:42 < bridge> <Jupstar ‚ú™> 100% male
22:42 < bridge> <Jupstar ‚ú™> :lol:
22:42 < bridge> <draggory> DAMN
22:42 < bridge> <draggory> I've been ousted
22:56 < bridge> <zhn> easy to write like that
23:09 < bridge> <Jupstar ‚ú™> proof
23:12 < bridge> <learath2> Here some with actual writing @jupeyy_keks st
23:12 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1268677817806229524/IMG_0934.png?ex=66ad4bca&is=66abfa4a&hm=a08387c4d8cebcdf0c73e3f0f974bf0e39df669823525638426bed7501dabdb0&
23:12 < bridge> <learath2> Here some with actual writing @jupeyy_keks
23:12 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1268677817806229524/IMG_0934.png?ex=66ad4bca&is=66abfa4a&hm=a08387c4d8cebcdf0c73e3f0f974bf0e39df669823525638426bed7501dabdb0&
23:14 < bridge> <Jupstar ‚ú™> capital I is epyc
23:17 < bridge> <learath2> Where do I even have a capital L? üòÑ
23:18 < bridge> <Jupstar ‚ú™> capital i
23:18 < bridge> <Jupstar ‚ú™> Il
23:18 < bridge> <Jupstar ‚ú™> lol
23:18 < bridge> <learath2> Ah shit font üòÑ
23:18 < bridge> <Jupstar ‚ú™> looks like a roman/greek pillar xdd
23:20 < bridge> <learath2> One more
23:20 < bridge> <learath2> https://cdn.discordapp.com/attachments/293493549758939136/1268679747274145854/IMG_0935.png?ex=66ad4d96&is=66abfc16&hm=ac16c0ddf9c8c97754bad708b5fc211bba22a1c47a2f45ecf5843e259d5909fd&
23:20 < bridge> <Jupstar ‚ú™> i can defs read it but not very fast üòÑ
23:21 < bridge> <learath2> This is with a lot of curve smoothing help from the ipad. It‚Äôs very bad on paper üòÑ
23:22 < bridge> <melo∆û> well we're all keyboard warriors after all
23:22 < bridge> <milkeeycat> No girls found?
23:23 < bridge> <Jupstar ‚ú™> 1000% male
23:23 < bridge> <learath2> I do take colorful notes tho.
23:23 < bridge> <Jupstar ‚ú™> ok then i give u 0.5% girl
23:23 < bridge> <learath2> That‚Äôs not very male
23:25 < bridge> <learath2> Funfact I studied most of physics 2 in integral forms, then I took the exam and learned that our prof prefers the differential forms. Had to just get out of that exam and study for the second session
23:27 < bridge> <learath2> Another funfact, turkish government uses a local@localhost certificate when they intercept a connection to blocked sites
23:28 < bridge> <spyres.> Nice colour coding you've done
23:28 < bridge> <learath2> Early on it actually had a point, then I started to forget so deeper into my notes it started meaning nothing
23:29 < bridge> <learath2> Only one that sticked was yellow for extras I added from my own knowledge and red for new/current definitions
23:31 < bridge> <spyres.> They probs trying to bring up a captive portal (we call it a response page) with some info explaining why it's blocked. Though if your devices doesn't trust the CAs (or if self signed) then you get a nice validation error screen! We tried to do this in our organisation too. So far no dice sadly.
23:32 < bridge> <spyres.> The white and red contrast is nice. Quite striking.
23:33 < bridge> <learath2> It‚Äôs not signed by any CA. It‚Äôs just a local self signed certificate by whatever server they host the block page on
23:33 < bridge> <spyres.> Don't you get a certificate validation error in your browser?
23:34 < bridge> <learath2> I do indeed
23:36 < bridge> <spyres.> Nice üëç
23:36 < bridge> <spyres.> Did you use an iPad and pencil?
23:37 < bridge> <learath2> Governments do technically have CAs trusted by all, they could have forged a certificate. It‚Äôs nice to know that they don‚Äôt
23:37 < bridge> <learath2> Yep, it has been quite enjoyable, I like how it makes my writing actually semi acceptable
23:41 < bridge> <spyres.> Yeah. We looking at SSL decryption currently on our organisations corporate managed devices. We did consider setting up a captive portal response page for websites we block to improve the user experience but haven't done it yet. We don't really block sites and the ones we do (very few) we simply sinkhole the DNS if they use us as the resolver when on WIFI etc. Good to see they tried to redirect you rather than leaving you guessing why it doesn't wo
23:42 < bridge> <learath2> For corporate managed devices I guess you can just put your own CA in there. No one should really expect privacy on corporate devices anyway
23:42 < bridge> <spyres.> Nah its actually pretty good. I know they have the feature where you can convert from hand written notes to text. And now with newer updates you can write equations and it will graph it automatically which is cool.
23:43 < bridge> <learath2> Same OCR feature allows me to search my handwritten notes, which is pretty amazing. Like if I forget where I put the definition of something, I can just search
23:46 < bridge> <spyres.> Yeah that's what we do but for it to be effective is by having good segmentation. If we decrypt we don't decrypt financial and medical categories. So some element of privacy though in our organisation. We don't police people and dont monitor their activity. While we aim to be proactive we dont target users unless we have an active incident. Only select people have access to the data anyways and even if other departments ask they need to go through 
23:47 < bridge> <spyres.> Ah didn't know that was a thing. I like features like this. I was looking at getting myself a Remarkable tablet. Have you seen them?
23:50 < bridge> <learath2> Nope, what is special about them?
23:50 < bridge> <spyres.> It's like digital paper. I guess you got an ipad so may not be as appealing to you.
23:50 < bridge> <spyres.> https://remarkable.com/
23:51 < bridge> <learath2> The slippery screen isn‚Äôt the best actually. I was considering one of those paper feel screen protectors
23:53 < bridge> <spyres.> The only drawback I find with consumer devices these days are that after 2 years your devices become obsolete. Always something newer and better. Though I think the software stays in support for quite awhile.
23:58 < bridge> <jxsl13> -becomes +is made
