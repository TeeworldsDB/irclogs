00:12 < bridge> <chillerdragon> @robyt3: where do you live ?
02:22 < bridge> <zhn> ChillerDragon: i need raw text, no translation. did person send it to you like this with no additional infotmation?
02:28 < ws-client> <ChillerDragon> @zhn 1st april is over wtfs
02:28 < ws-client> <ChillerDragon> https://zillyhuhn.com/cs/.1744849686.png
02:28 < ws-client> <ChillerDragon> i keep getting spammed this server
02:29 < ws-client> <ChillerDragon> @zhn the context was he kick voted someone with reason "natural" in cyrillic
02:29 < ws-client> <ChillerDragon> APRILS FIRSTT I SOVER
02:29 < ws-client> <ChillerDragon> since 17 fucking days
02:30 < ws-client> <ChillerDragon> stop avertise fake zhn to me!
02:54 < bridge> <zhn> xd
02:55 < bridge> <zhn> oh flatcity alive
02:55 < bridge> <zhn> nah natural means you are straight in russian
02:55 < bridge> <zhn> i didn't hear about any other meanings
02:56 < bridge> <StormA, Sovereign of chilling> me mood
02:56 < bridge> <StormA, Sovereign of chilling> https://cdn.discordapp.com/attachments/293493549758939136/1362230296631709816/image.png?ex=6801a353&is=680051d3&hm=e3fe622a86f114349c6830b602424b30634f309cb0882b2de4399dd12d5b8819&
02:58 < bridge> <kebscs> Show the regex
02:58 < bridge> <kebscs> Ai never failed me with regex
02:58 < bridge> <always> yeah same
02:59 < bridge> <StormA, Sovereign of chilling> ```cpp
02:59 < bridge> <StormA, Sovereign of chilling> std::regex ipv4Pattern(R"(^(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})(?::\d+)?$)");
02:59 < bridge> <StormA, Sovereign of chilling> ```
02:59 < bridge> <StormA, Sovereign of chilling> ```cpp
02:59 < bridge> <StormA, Sovereign of chilling>     std::regex logPattern(R"(^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2} I server: id=(\d+) \(([\w-]+)\) addr=([^ ]+) name='([^']*)' kog_id=(\d+) client=(\d+) secure=(\w+) flags=(\d+) dnsbl=(\w+)(?:\s+key=([^ ]+)(?:\s+\([^)]+\))?)?$)");
02:59 < bridge> <StormA, Sovereign of chilling> ```
02:59 < bridge> <StormA, Sovereign of chilling> 
02:59 < bridge> <StormA, Sovereign of chilling> ```cpp
02:59 < bridge> <StormA, Sovereign of chilling> std::regex Regex(R"(^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2} I server: id=(\d+) \(([\w-]+)\) addr=((?:\d{1,3}\.){3}\d{1,3}(?::\d+)?) name='([^']*)' kog_id=(\d+) client=(\d+) secure=(\w+) flags=(\d+) dnsbl=(\w+)(?:\s+key=([^ ]+)(?:\s+\([^)]+\))?)?$)");    std::smatch match;
02:59 < bridge> <StormA, Sovereign of chilling> ```
02:59 < bridge> <StormA, Sovereign of chilling> ```cpp
02:59 < bridge> <StormA, Sovereign of chilling> std::regex ipv4Pattern(R"(^(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})(?::\d+)?$)");
02:59 < bridge> <StormA, Sovereign of chilling> ```
02:59 < bridge> <StormA, Sovereign of chilling> ```cpp
02:59 < bridge> <StormA, Sovereign of chilling>     std::regex logPattern(R"(^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2} I server: id=(\d+) \(([\w-]+)\) addr=([^ ]+) name='([^']*)' kog_id=(\d+) client=(\d+) secure=(\w+) flags=(\d+) dnsbl=(\w+)(?:\s+key=([^ ]+)(?:\s+\([^)]+\))?)?$)");
02:59 < bridge> <StormA, Sovereign of chilling> ```
02:59 < bridge> <StormA, Sovereign of chilling> 
02:59 < bridge> <StormA, Sovereign of chilling> ```cpp
02:59 < bridge> <StormA, Sovereign of chilling> std::regex Regex(R"(^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2} I server: id=(\d+) \(([\w-]+)\) addr=((?:\d{1,3}\.){3}\d{1,3}(?::\d+)?) name='([^']*)' kog_id=(\d+) client=(\d+) secure=(\w+) flags=(\d+) dnsbl=(\w+)(?:\s+key=([^ ]+)(?:\s+\([^)]+\))?)?$)");
03:00 < bridge> <StormA, Sovereign of chilling> ```
03:00 < bridge> <zhn> why u need such a regex.....
03:00 < bridge> <StormA, Sovereign of chilling> mod client for KoG
03:00 < bridge> <zhn> im 100% you could make it with no regex xd
03:01 < bridge> <zhn> 100% sure*
03:01 < bridge> <StormA, Sovereign of chilling> well for some reason ip and name was on top each other and i got 
03:01 < bridge> <StormA, Sovereign of chilling> playerIP = 1.1.1.1StormA
03:01 < bridge> <StormA, Sovereign of chilling> i'm parsing rcon console in real time
03:01 < bridge> <StormA, Sovereign of chilling> that's the fastest way
03:01 < bridge> <chillerdragon> @gerdoe learn rus then u are missing the latest slang
03:01 < bridge> <pioooooo> chillerdragon on discord
03:01 < bridge> <always> wtf chillerdragon
03:01 < bridge> <always> dirsocrd?
03:01 < bridge> <always> hacked?
03:01 < bridge> <StormA, Sovereign of chilling> keke
03:01 < bridge> <zhn> eventually ill wake up as 40 years old fart with no slang in my head
03:02 < bridge> <zhn> i believe so
03:02 < bridge> <zhn> is scanf so outdated or what xd
03:03 < bridge> <zhn> they even brought it in std namespace
03:03 < bridge> <kebscs> Doesn't look that bad if you split it in parts
03:03 < bridge> <kebscs> And not ask all at once
03:03 < bridge> <StormA, Sovereign of chilling> so the issue was
03:03 < bridge> <StormA, Sovereign of chilling> ```cpp
03:03 < bridge> <StormA, Sovereign of chilling>     std::string extractedIP = extractIP(match[3].str());
03:03 < bridge> <StormA, Sovereign of chilling>         if (!extractedIP.empty()) {
03:03 < bridge> <StormA, Sovereign of chilling>             memset(Result.addr, 0, sizeof(Result.addr)); // only filling this with nulls helped
03:03 < bridge> <StormA, Sovereign of chilling>             strncpy(Result.addr, extractedIP.c_str(), sizeof(Result.addr) - 1);
03:03 < bridge> <StormA, Sovereign of chilling>         }
03:03 < bridge> <StormA, Sovereign of chilling> ```
03:03 < bridge> <StormA, Sovereign of chilling> what's scanf?
03:03 < bridge> <zhn> looks fat af ngl
03:04 < bridge> <always> gg
03:04 < bridge> <zhn> https://en.cppreference.com/w/cpp/io/c/fscanf
03:04 < bridge> <always> scanf_s
03:04 < bridge> <always> best
03:05 < bridge> <zhn> https://en.cppreference.com/w/c/io/fscanf
03:06 < bridge> <StormA, Sovereign of chilling> i mean
03:06 < bridge> <StormA, Sovereign of chilling> looks pretty
03:07 < bridge> <StormA, Sovereign of chilling> just don't need to forget when i need some fast input
03:07 < bridge> <StormA, Sovereign of chilling> thanks anyways
03:13 < bridge> <StormA, Sovereign of chilling> @gerdoe why no sleep tho? :o
03:40 < bridge> <zerolacqua> Can someone take a look at #10077? I'm not sure if it's a valid issue. If anyone else feels the same way, I could start looking into the code.
03:40 < bridge> <DDNet> https://github.com/ddnet/ddnet/issues/10077
03:45 < bridge> <StormA, Sovereign of chilling> HUH??
03:45 < bridge> <StormA, Sovereign of chilling> #10077
03:45 < bridge> <DDNet> https://github.com/ddnet/ddnet/issues/10077
03:45 < bridge> <StormA, Sovereign of chilling> ok that's cool
04:34 < bridge> <Ewan> up key without selection should take you to the bottom ü§î
04:43 < bridge> <zerolacqua> yeah, but right now the up and down keys don‚Äôt have a wrap-around feature in the list. (though I'd actually love to see that)
07:43 < bridge> <0xdeen> Thanks @fokkonaut ^
09:05 < bridge> <Assa> fokko ‚ù§Ô∏è
09:05 < bridge> <Assa> Good morning everyone
09:08 < bridge> <Assa> is there a command to close the console? I am working on a better benchmark script
09:10 < bridge> <Assa> hmm should be the same that opens it ü§î
09:11 < bridge> <Assa> `toggle_open_console`
11:30 < bridge> <Assa> ^ this is probably the most text I have ever written into a PR :kek:
11:46 < bridge> <Jupstar ‚ú™> More text than pr source change xD
11:48 < bridge> <pioooooo> Repository language: English
11:56 < bridge> <jxsl13> Shameless Kingsleap promotion üëÄ, I like.
11:58 < bridge> <Jupstar ‚ú™> xd
11:58 < bridge> <Assa> when the fps of your map are so bad you improve rendering instead :justatest:
11:58 < bridge> <Jupstar ‚ú™> If you really want to improve quad rendering performance you'd need to do that in a modern graphics backend
11:59 < bridge> <Jupstar ‚ú™> You could test the map with patigas tool, it should be better with lots of quads
11:59 < bridge> <Jupstar ‚ú™> Like _much_ better
11:59 < bridge> <Jupstar ‚ú™> I dunno how well lot of animations scale tho, since GPUs are not good at that I guess
12:00 < bridge> <Assa> this was just cpu and mostly tilesets so far
12:06 < bridge> <always> this is fire
12:06 < bridge> <Jupstar ‚ú™> @patiga btw what broke that I cannot zoom out in twgpu anymore xd
12:07 < bridge> <Jupstar ‚ú™> It used to work
12:08 < bridge> <A Moderator> :justatest:
12:08 < bridge> <A Moderator> https://cdn.discordapp.com/attachments/293493549758939136/1362369066441904198/Screenshot_20250417-120756.png?ex=68022491&is=6800d311&hm=f32257f15297e78e7b25dbb12319e90dd8a12aee1daa3922d0e7e003ec507a6a&
12:10 < bridge> <jxsl13> Japanese
12:17 < bridge> <always> 51 tabs :justatest:
12:19 < bridge> <A Moderator> :Pepega:
12:20 < bridge> <always> why did u just send a selfie
12:20 < bridge> <A Moderator> My tabs are special okay
12:20 < bridge> <A Moderator> https://cdn.discordapp.com/attachments/293493549758939136/1362372178909204581/Screenshot_20250417-122016.png?ex=68022777&is=6800d5f7&hm=550001aac5f9209cf4a9d864e04f28ddaa26dd8f66aa797e9ab6b4aae335bd8b&
12:21 < bridge> <always> bro closed 3 tabs
12:26 < bridge> <Jupstar ‚ú™> @essigautomat i get 3k fps on ddnet-rs, compared to 800fps on ddnet, on that map.
12:26 < bridge> <Jupstar ‚ú™> 
12:26 < bridge> <Jupstar ‚ú™> More than ddnet or twgpu.
12:26 < bridge> <Jupstar ‚ú™> 
12:26 < bridge> <Jupstar ‚ú™> So i am pretty sure it's just about finding the anim points which is probably lienar in ddnet, but quick search in ddnet-rs
12:26 < bridge> <Jupstar ‚ú™> 
12:26 < bridge> <Jupstar ‚ú™> Relevant change:
12:26 < bridge> <Jupstar ‚ú™> https://github.com/ddnet/ddnet-rs/blob/057a9d5d8843567117d5ed2201591208433d33be/game/client-render-base/src/map/render_tools.rs#L244-L248
12:26 < bridge> <Jupstar ‚ú™> https://cdn.discordapp.com/attachments/293493549758939136/1362373628443754536/image.png?ex=680228d0&is=6800d750&hm=3463341652b8216857c254bfcc48f2e6aadb8f00c56cb66e705b3a2059951d80&
12:26 < bridge> <Jupstar ‚ú™> So if you want more fps, do that xd
12:35 < bridge> <always> @jupeyy_keks is itpossible for ddnet-rs clients to connect to ddnet servers? or is it a whole diffrent protocol
12:35 < bridge> <always> @jupeyy_keks is itpossible for ddnet-rs clients to connect to ddnet servers? or is it a whole different protocol
12:36 < bridge> <Jupstar ‚ú™> You could defs write a bridge, but yes it's a completely different protocol
12:36 < bridge> <Assa> üòÇ phone formatting
12:37 < bridge> <Assa> uhh ‚ù§Ô∏è
13:17 < bridge> <Assa> btw the GH app shows it properly
13:17 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1362386428541009970/Screenshot_20250417-131648.png?ex=680234bc&is=6800e33c&hm=533e41d52376fbb65256aa6f2879215746dedd8558bb06b8fc7f7f5c78a999d3&
13:17 < bridge> <Assa> @blaiszephyr
13:18 < bridge> <kebscs> Gh appüòÜ
13:18 < bridge> <kebscs> Nerd
13:18 < bridge> <Assa> yes, deal with it üòé
13:34 < bridge> <robyt3> I can't tell much from this graph, maybe use two boxplots instead
13:45 < bridge> <patiga> maybe wayland happened? ^^
13:45 < bridge> <patiga> I just fixed that yesterday for me ^^
13:53 < bridge> <patiga> (pushed @jupeyy_keks )
13:56 < bridge> <Jupstar ‚ú™> :deen_star: works
13:56 < bridge> <Assa> graph is just frametime over index
13:56 < bridge> <robyt3> Not very readable though because the graphs overlap to much
13:57 < bridge> <robyt3> Not very readable though because the graphs overlap so much
13:58 < bridge> <Assa> hmm yes, I didn't put too much time into matplotlib. But you see the blue above ant not below, maybe a boxplot would be better
13:58 < bridge> <robyt3> Not really, I also see the blue below
14:00 < bridge> <Assa> Ok, I'll add a boxplot
14:11 < bridge> <Assa> The outliers make them extremly unreadable, too :/
14:12 < bridge> <robyt3> Maybe plot a separate graph where you limit the y axis min and max to the same values to exclude most outliers
14:20 < bridge> <kebscs> youre right, i get 200 fps, and 500 when i change ddnet's for loop to binary search
14:20 < bridge> <kebscs> ill cook up a pr
14:21 < bridge> <Assa> spam incoming:
14:21 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1362402680458186973/boxplot_dm1_vulkan_nooutliers.png?ex=680243df&is=6800f25f&hm=e0d756bf6d1a81d76b2eaed555359316fae18aef3f788fa68857ea0e980022e6&
14:22 < bridge> <Assa> huh is it just white for you, too?
14:23 < bridge> <Assa> With outliers
14:24 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1362403216557473792/boxplot_dm1_vulkan1.png?ex=6802445f&is=6800f2df&hm=de3678bf64df0474bc2e7db32cff0b9eb0e15480150bd40dff7c81c3a16931d8&
14:24 < bridge> <Assa> wihtout outliers
14:24 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1362403262824845445/boxplot_dm1_vulkan_nooutliers1.png?ex=6802446a&is=6800f2ea&hm=0bb83fa36dd1b9804ff7110fd1d75e0c0064902b2b9faed9fae7a89c11b65282&
14:24 < bridge> <Assa> With outliers
14:24 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1362403365413453924/boxplot_kingsleap_vulkan1.png?ex=68024482&is=6800f302&hm=5616be282544627ee8645beb929b79dd76734cc48f2b1ce03cff220be6fa2473&
14:24 < bridge> <Assa> Without otliers
14:24 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1362403449198608565/boxplot_kingsleap_vulkan_nooutliers1.png?ex=68024496&is=6800f316&hm=2121443792b1d6d0337f80820e71004f34042e139b75a9333065265dd8c3b2e1&
14:25 < bridge> <Assa> Without outliers
14:25 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1362403449198608565/boxplot_kingsleap_vulkan_nooutliers1.png?ex=68024496&is=6800f316&hm=2121443792b1d6d0337f80820e71004f34042e139b75a9333065265dd8c3b2e1&
14:25 < bridge> <kebscs> graphs :poggers2:
14:25 < bridge> <Assa> In the lastone you see it the best. Overall it appears, that the PR is more stable overall
14:26 < bridge> <Assa> also the data are all frames collected over 60 seconds (a lot)
14:29 < bridge> <Assa> outliers were removed with IQR method
14:32 < bridge> <teero777> bloxplots ü§£ü§£
14:33 < bridge> <teero777> my teacher betted with me that i will never see a boxplot in my life again
14:33 < bridge> <teero777> made my day thx
14:33 < bridge> <Assa> what's wrong with them? Also you lost that bet.
14:33 < bridge> <teero777> no, the other way around
14:33 < bridge> <Assa> wtf teacher :nouis:
14:34 < bridge> <Assa> Well, I work in science, I see stats all day on posters
14:36 < bridge> <Assa> @robyt3 before you miss them ^
14:38 < bridge> <Assa> @kebscs I am willing to help you collecting stats if you want or need it üòÑ
14:43 < bridge> <kebscs> you can after i submit
14:43 < bridge> <kebscs> this is very noticeable difference though
14:56 < bridge> <learath2> `74 rows in set (28.150 sec)` queries that are not indexed are getting veery expensive üòÑ
15:08 < bridge> <Jupstar ‚ú™> Gotta admit, chatgpt search function can be really useful. It found the fix for https://github.com/rust-windowing/winit/issues/3773#issuecomment-2812773359
15:08 < bridge> <Jupstar ‚ú™> in some old sdl bug report.
15:08 < bridge> <Jupstar ‚ú™> 
15:08 < bridge> <Jupstar ‚ú™> It didn't fix the bug or anything, but it did the research correctly and I'd have searched for very long time probably xD
15:11 < bridge> <milkeeycat> 10 out of 11 times I ask it something compiler related it just makes up stuff -.-
15:11 < bridge> <learath2> Such a good pick for a viz method. I don't see boxplots often enough
15:11 < bridge> <Jupstar ‚ú™> well in this case it used the _real_ internet
15:11 < bridge> <Jupstar ‚ú™> not like the internal knowledge
15:11 < bridge> <Jupstar ‚ú™> it basically opened many websites for me and read them
15:12 < bridge> <learath2> If there was a way to stop these things from hallucunating they would be like a billion percent more useful. Phrases like "reasearch for me" help it do real research and summarize that
15:12 < bridge> <learath2> Biggest issue with hallucinations is when you are learning something. When you do not have the knowledge to begin with, then you can not be sure it didn't hallucinate the answer
15:32 < bridge> <kebscs> @essigautomat
15:38 < bridge> <Assa> @kebscs thank you, analysis has to wait, maybe in the evening
16:46 < bridge> <jxsl13> the optimization shows less outliers and more predictable frame rate üëÄ
16:47 < bridge> <jxsl13> and a slight improvement overall
16:47 < bridge> <inv41idu53rn4m3> need to get the game to where we can render a bazillion quads easy
16:47 < bridge> <inv41idu53rn4m3> and then make a 3D renderer in envelopes
16:47 < bridge> <jxsl13> get a job at bethesda
16:47 < bridge> <jxsl13> extract the engine
16:48 < bridge> <inv41idu53rn4m3> I don't know all the envelope types but some of them should be easy to render on the GPU, right?
16:49 < bridge> <inv41idu53rn4m3> we could in theory go very BRR
16:50 < bridge> <Assa> yes, which is good, are you suprised?
16:50 < bridge> <jxsl13> not surprised but just interpreting the boxplot
16:50 < bridge> <jxsl13> it's a way better representation
16:51 < bridge> <jxsl13> üëç
16:51 < bridge> <inv41idu53rn4m3> Not only is it better, it's also better!
16:52 < bridge> <Assa> in practice nearly everyone should be able to run this game at 120fps, even in extreme cases
16:53 < bridge> <jxsl13> this statement confucius me
16:53 < bridge> <inv41idu53rn4m3> Let's keep on making the cases more extreme and hit those performance targets
16:56 < bridge> <Assa> Easy, I can make a snowmap with unlimited snow, because it's already generated
17:21 < bridge> <pioooooo> If ppl are really into optimizations I hope someone could take a look at turrets..
17:22 < bridge> <pioooooo> I think the map journey man 2 or maybe 1 uses lots of those and lag as hell
17:22 < bridge> <Ewan> network lag or fps
17:22 < bridge> <Ewan> seems strange either way
17:23 < bridge> <Ewan> i believe you but i've also never seen it & so there's a chance you could just be picking up on the lack of prediction for those & doors & grabbers
17:26 < bridge> <Jupstar ‚ú™> ```
17:26 < bridge> <Jupstar ‚ú™> Error: No space left on device : '/home/runner/runners/2.323.0/_diag/blocks/e145fdf2-cd93-42cf-b55a-4f2760c30543_2aa30017-41c8-566d-a06a-0cb2eb26260c.2'
17:26 < bridge> <Jupstar ‚ú™> ```
17:26 < bridge> <Jupstar ‚ú™> github is out of space
17:26 < bridge> <Jupstar ‚ú™> :lol:
17:26 < bridge> <Ewan> ü§î
17:26 < bridge> <Ewan> they did just come out with WoA runners
17:26 < bridge> <Ewan> maybe they just have particularly high demand rn
17:28 < bridge> <Jupstar ‚ú™> apparently they only _guarantee_ 14gb of space
17:28 < bridge> <Jupstar ‚ú™> since rust compiles to like at least 15gb that can get close ig
17:29 < bridge> <Ewan> yea
17:29 < bridge> <Ewan> i think if u were to try & read it'd say 256 or smth bcs that's the v disk max
17:29 < bridge> <Ewan> but real space isn't the same
17:33 < bridge> <pioooooo> Oh yeah it could be network I forgot that
17:34 < bridge> <pioooooo> Didn't actually play much DDNet these days;;
17:43 < bridge> <fokkonaut> Morningüêì
17:57 < ws-client> <ChillerDragon> 87.251.78.171:8301 is sending fake master server data for quite some time and its honestly annoying me
18:14 < bridge> <kebscs> @pioooooo ai says my impl is better than stl functions because of early exits, etc
18:14 < bridge> <kebscs> What do you think
18:15 < bridge> <kebscs> Also the function already has bounds checks
18:15 < bridge> <TsFredium> ai says she's a cat girl and she loves me
18:15 < bridge> <kebscs> I'm sorry to tell u, but she's lying..
18:16 < bridge> <Ewan> fred dont care
18:16 < bridge> <TsFredium> It's ok. I'm gay anyway
18:16 < bridge> <Ewan> catboys however
18:16 < bridge> <Ewan> yeah
18:16 < bridge> <TsFredium> Off-topic tho, I'm just oneshotting my line. Off me go.
18:17 < bridge> <pioooooo> I think the algorithm is just the same as std, I doubt your AI
18:17 < bridge> <kebscs> On cppreference it's the same
18:17 < bridge> <pioooooo> Also wdym bounds check here
18:18 < bridge> <kebscs> Like size lower than 2=return early
18:18 < bridge> <pioooooo> size lower than 2 then it won't take no time :nouis:
18:19 < bridge> <kebscs> Yes but stl will probably check it
18:19 < bridge> <kebscs> And the function already has it
18:19 < bridge> <kebscs> I think it's already good enough
18:19 < bridge> <kebscs> And for stl would need to make begin and end public
18:19 < bridge> <Ewan> u know one of the points of using the STL is the potential that the impl gets faster later without u having to change anything
18:19 < bridge> <learath2> Waste not your time trying to coax the envelope point access into something iterable
18:20 < bridge> <pioooooo> Yeah I don't mean yours implementation is bad, I mean I would prefer stl for readability and also what Ewan said
18:21 < bridge> <pioooooo> I do doubt if that interface is actually used tbh
18:21 < bridge> <kebscs> Will see when I get home
18:21 < bridge> <pioooooo> I mean have multiple inheritance class
18:22 < bridge> <kebscs> Only 1 inherited
18:24 < bridge> <pioooooo> Good to know so nobody rant about changing the interface XD
19:22 < bridge> <Assa> @kebscs
19:22 < bridge> <Assa> https://cdn.discordapp.com/attachments/293493549758939136/1362478294137831564/quad-optimization.png?ex=68028a4a&is=680138ca&hm=b67798cce5aadb0f85f2dee80150eac38d6eb60a2e6d063c7399c77d922efd6e&
19:23 < bridge> <Assa> yeah ... I am jelous that this is not my PR
19:23 < bridge> <Solly (bun bun)> im sure theres some other linear search you can replace with a binary one
19:24 < bridge> <Solly (bun bun)> (theres always collision [gdpixeldevil](https://cdn.discordapp.com/emojis/1269961785100865606.webp?size=48&name=gdpixeldevil) )
19:24 < bridge> <Assa> I am sure you could at least do a newton search (which would degrade to a binary search)
19:24 < bridge> <Solly (bun bun)> newton search?
19:24 < bridge> <Solly (bun bun)> ah i see
19:25 < bridge> <Solly (bun bun)> is that applicable here
19:27 < bridge> <Assa> maybe TM
19:27 < bridge> <Assa> also, I tested kebs PR against dm1 and see a 6% improvement
19:27 < bridge> <Assa> yes, dm1 has animations, the clouds and the sun move
19:28 < bridge> <Assa> but 6% holy shit
19:28 < bridge> <Solly (bun bun)> bro that 1984 pc player is winning
19:29 < bridge> <Assa> kombining our PRs and I'd expect about 10% more fps, that's really a lot
19:29 < bridge> <Assa> (unconfirmed without benchmark tho)
19:30 < bridge> <kebscs> üòÇ
19:32 < bridge> <kebscs> I'll impl later with stl, you could check that too
19:32 < bridge> <Ewan> need more faster
19:32 < bridge> <Ewan> 100% faster ddnet
19:32 < bridge> <Assa> ddnet rs reference?
19:33 < bridge> <Ewan> Blazingly fast
19:35 < bridge> <Solly (bun bun)> the only blazing bit is my computer
19:54 < bridge> <Assa> @kebscs PR claims 50%+ :justatest:
19:56 < bridge> <kebscs> Add more snow and it'll be even better
19:56 < bridge> <kebscs> üëç
20:30 < bridge> <gorp_tw> wakes up
20:30 < bridge> <gorp_tw> reads #developer 
20:30 < bridge> <gorp_tw> sees map optimization chat
20:30 < bridge> <gorp_tw> omg
20:30 < bridge> <gorp_tw> has nothing to do with switches :twintri:
20:31 < bridge> <Ewan> str8 up gorping on it
20:31 < bridge> <Assa> would you like to optimize switches or what do you want?
20:31 < bridge> <Assa> isn't everyone obsessed with FPS or did I just play to much CS?
20:33 < bridge> <Assa> I checked std::lower_bound and it's in O(log(N)) so I expect it to get even better :3
20:34 < bridge> <gorp_tw> xd
20:35 < bridge> <gorp_tw> well its just that some maps I want to make isn't possible because it hits some limit (snapshot? idk name)
20:35 < bridge> <gorp_tw> and so visuals and sounds stop working
20:35 < bridge> <Assa> so is binary search, I am schtoopid
20:35 < bridge> <gorp_tw> its a great PR BTW I'm not saying thay
20:35 < bridge> <gorp_tw> its a great PR BTW I'm not saying that
20:36 < bridge> <gorp_tw> i get like 4.6k fps on ddnet so every time I see fps related things I go :greenthing:
20:37 < bridge> <Assa> your problem is about network size, you might! get away with making switches like doors not send their state every snapshot, since we now have a prediction for this. But you'd still need to make this down and upwardscompatible
20:39 < bridge> <Assa> and then you'd still hope that enough people upgrade their client so they can play your map properly
20:40 < bridge> <gorp_tw> my suggestion was to have some upgrade handshake
20:41 < bridge> <gorp_tw> so if the client can deal with less data, they can work that out
20:41 < bridge> <gorp_tw> otherwise it sends the same amount
20:41 < bridge> <gorp_tw> do we have protocol "levels" for different clients?
20:48 < bridge> <kebscs> You can check clients version and send different stuff to him
20:49 < bridge> <kebscs> For example lasers are sent differently to old clients, new clients handle new netobj
20:51 < bridge> <gorp_tw> so this would be the same thing as that üòõ
20:52 < bridge> <gorp_tw> switches don't change until a switch is pressed, it seems at least from an outsiders perspective that it would be an easier change
20:54 < bridge> <louis> mfs will do anything except break 10 year old backwards compatibility
20:58 < bridge> <Solly (bun bun)> glibc [car](https://cdn.discordapp.com/emojis/1077300733453553774.webp?size=48&name=car)
20:59 < bridge> <kebscs> By switches you mean switch state on, off?
20:59 < bridge> <kebscs> What's wrong exactly
21:03 < bridge> <learath2> üòÑ `lower_bound` is implemented as a binary search (and iirc the requirements on the standard basically force it to be)
21:07 < bridge> <gorp_tw> AFAIK switch state is sent every tick or something? I'm not sure exactly but it seems we can only send "updates" to the layer when needed
21:07 < bridge> <gorp_tw> timed off/on, off/on
21:07 < bridge> <gorp_tw> the client only needs to know the positions of switch entities at mapload, which I assume is already the case
21:08 < bridge> <kebscs> If that's real maybe it can be changed to netmsgs to only send when on/off state changed
21:09 < bridge> <learath2> It's not a network issue then, snaps are delta compressed so it should effectively be only sending changes
21:09 < bridge> <learath2> Maybe there is a max snap size before delta compression limit somewhere, I don't remember
21:09 < bridge> <gorp_tw> i have confirmed from a couple people that it was a snap limit
21:09 < bridge> <gorp_tw> i just don't know more technical details
21:10 < bridge> <learath2> (I also wanted a facility to let snaps get chunked when needed, so that can happen)
21:10 < bridge> <learath2> If you have a map that gets there I can document and create an issue for it
21:10 < bridge> <gorp_tw> there's a PR open, /showall 0 fixes it on some clients?
21:10 < bridge> <gorp_tw> yeah join volleyball teezone
21:10 < bridge> <gorp_tw> :greenthing:
21:10 < bridge> <gorp_tw> there's a PR CLOSED actually, /showall 0 fixes it on some clients?
21:11 < bridge> <gorp_tw> use hammer, gun, check all the doors to see if they render
21:25 < bridge> <kebscs> Don't think so
21:26 < bridge> <kebscs> It just renders less stuff, only what's on your screen, so less snaps
21:31 < bridge> <gorp_tw> so probably they meant some snap limit on client
21:33 < bridge> <kebscs> Idk how it works, tbh
21:33 < bridge> <gorp_tw> its kinda funny, if u shoot a bullet after the limit is reached you can see rendered objects disappear in a cascade effect
21:55 < bridge> <comedordecasadas1524> #‚úâ-create-a-ticket
21:56 < bridge> <korabdl> old skin "dumon"
21:56 < bridge> <korabdl> https://cdn.discordapp.com/attachments/293493549758939136/1362517049796067449/DuMoH.png?ex=6802ae63&is=68015ce3&hm=782e1a1334c531522582ac4d323adb597f69c429771a4ed120101cb9345138d0&
21:56 < bridge> <korabdl> does anyone know this skin? XD
22:36 < bridge> <teero777> bro wtf?
22:36 < bridge> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1362527184979365948/image.png?ex=6802b7d3&is=68016653&hm=8776b281726bf12ec3f156050c7a89047101278c7089c88fb9b917d1b3cdfbfd&
22:36 < bridge> <teero777> im so confused
22:39 < bridge> <kebscs> maybe wants argc, argv
22:40 < bridge> <teero777> i tried
22:40 < bridge> <teero777> i changed something somewhere completely else xd
22:40 < bridge> <teero777> i think gdb is broken
22:53 < ws-client> <ChillerDragon> meh clicking into the game detaches the player you are spectating
22:54 < ws-client> <ChillerDragon> @teero777 asan
22:55 < ws-client> <ChillerDragon> @kebscs go add a click delay pls for spectators when the game was inactive
22:57 < bridge> <kebscs> my click delay is abandonen by heinrich for like month now
22:58 < bridge> <milkeeycat> rust pros, is it possible to make such a function https://github.com/MilkeeyCat/meraki/blob/5889d39df74c876fbc836b25be8464a97390abb0/src/lowering/scopes.rs#L81-L90 but with a mutable reference?
23:01 < bridge> <Jupstar ‚ú™> why do you need the lifetime on the fn arg?
23:01 < bridge> <Jupstar ‚ú™> simply remove it
23:02 < bridge> <Jupstar ‚ú™> or add `for <'a>` before T
23:03 < bridge> <gorp_tw> many such cases
23:03 < bridge> <milkeeycat> i tried to remove it for working `find` function, and it makes compiler spit out errors
23:03 < bridge> <milkeeycat> ```
23:03 < bridge> <milkeeycat> error: lifetime may not live long enough
23:03 < bridge> <milkeeycat>    --> src/lowering/scopes.rs:134:27
23:03 < bridge> <milkeeycat>     |
23:03 < bridge> <milkeeycat> 134 |         self.find(|scope| scope.variables.get(name))
23:03 < bridge> <milkeeycat>     |                    ------ ^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'1` must outlive `'2`
23:03 < bridge> <milkeeycat>     |                    |    |
23:03 < bridge> <milkeeycat>     |                    |    return type of closure is Option<&'2 scopes::Variable<'_>>
23:03 < bridge> <milkeeycat>     |                    has type `&'1 scopes::Scope<'_>`
23:03 < bridge> <milkeeycat> ```
23:03 < bridge> <Jupstar ‚ú™> mh ok maybe it doesnt support annonymous lifetimes here
23:03 < bridge> <Jupstar ‚ú™> 
23:03 < bridge> <Jupstar ‚ú™> try `for <'a>` before the `T:`
23:03 < bridge> <Jupstar ‚ú™> in the `where` of generics
23:04 < bridge> <Jupstar ‚ú™> Oh so O has a lifetime or what?
23:05 < bridge> <Jupstar ‚ú™> Too hard without the seeing all source code xd
23:05 < bridge> <milkeeycat> https://github.com/MilkeeyCat/meraki/blob/5889d39df74c876fbc836b25be8464a97390abb0/src/lowering/scopes.rs#L122-L124 here's how it's used
23:06 < bridge> <Jupstar ‚ú™> ah ok, you want to return a ref there
23:06 < bridge> <milkeeycat> ye
23:09 < bridge> <Jupstar ‚ú™> @milkeeycat https://play.rust-lang.org/?version=stable&mode=debug&edition=2024&gist=b848a87f084b2e211660ebbaf175950a
23:09 < bridge> <Jupstar ‚ú™> 
23:09 < bridge> <Jupstar ‚ú™> is that what you want kinda?
23:11 < bridge> <teero777> chiller yea ik ik
23:11 < bridge> <teero777> im solving other issues rn
23:11 < bridge> <teero777> i have some leaks in vulkan....
23:12 < bridge> <Jupstar ‚ú™> Don't forget to turn on validation layers
23:13 < bridge> <milkeeycat> hm, this code returns a copy, but I want to get a mutable reference
23:14 < bridge> <milkeeycat> ill write a small example tomorrow, it's time to sleep now
23:14 < bridge> <Jupstar ‚ú™> but how even mut?
23:14 < bridge> <Jupstar ‚ú™> your function self sig is immutable
23:15 < bridge> <milkeeycat> `find` function works
23:15 < bridge> <Jupstar ‚ú™> ```rs
23:15 < bridge> <Jupstar ‚ú™> fn main() {
23:15 < bridge> <Jupstar ‚ú™>     fn test<A, B: Copy>(a: &mut A, f: impl Fn(&'_ mut A) -> Option<&'_ mut B>) -> Option<&'_ mut B>
23:15 < bridge> <Jupstar ‚ú™>     {
23:15 < bridge> <Jupstar ‚ú™>         f(a)
23:15 < bridge> <Jupstar ‚ú™>     }
23:15 < bridge> <Jupstar ‚ú™>     let mut b = vec![0];
23:15 < bridge> <Jupstar ‚ú™>     test(&mut b, |c| c.get_mut(0));
23:15 < bridge> <Jupstar ‚ú™> }
23:15 < bridge> <Jupstar ‚ú™> ```
23:17 < bridge> <Jupstar ‚ú™> You can actually even remove all lifetimes
23:18 < bridge> <Jupstar ‚ú™> Not needed at all
23:18 < bridge> <Jupstar ‚ú™> Clippy should also suggest stuff like this normally
23:19 < bridge> <Jupstar ‚ú™> But I remember with actually mutable references (which you current don't have?), you could have trouble indeed with moving it into another closure
23:19 < bridge> <Jupstar ‚ú™> I think that generally does not work
23:20 < bridge> <milkeeycat> Iirc it didn't compile without lifetimes
23:20 < bridge> <Jupstar ‚ú™> The only thing I don't understand is that you talk about mut refs
23:20 < bridge> <milkeeycat> You see `find` function?
23:21 < bridge> <Jupstar ‚ú™> You own function is called find
23:21 < bridge> <Jupstar ‚ú™> And you call `cloned` there on a iter
23:21 < bridge> <Jupstar ‚ú™> And O has a lifetime
23:21 < bridge> <Jupstar ‚ú™> while the cloned var cannot be returned
23:21 < bridge> <Jupstar ‚ú™> I dunno, my brain does not even understand what you try here tbh
23:22 < bridge> <Jupstar ‚ú™> Does the code you send give that error?
23:22 < bridge> <Jupstar ‚ú™> Can I clone repo and get err
23:23 < bridge> <milkeeycat> Ill explain tomorrow xd
23:23 < bridge> <Jupstar ‚ú™> I have your code
23:23 < bridge> <Jupstar ‚ú™> explain
23:24 < bridge> <Jupstar ‚ú™> You have lots of clippy warnings btw in your project
23:24 < bridge> <milkeeycat> Ye, im in the middle of rewriting
23:24 < bridge> <Jupstar ‚ú™> So get_variable should be mutable?
23:25 < bridge> <milkeeycat> I want to have `get_variable` and `get_variable_mut`
23:25 < bridge> <milkeeycat> `get_variable` already works
23:27 < bridge> <Jupstar ‚ú™> Yeah I see
23:27 < bridge> <Jupstar ‚ú™> I think that's not possible actually
23:27 < bridge> <milkeeycat> :pepeW:
23:28 < bridge> <Jupstar ‚ú™> Is runtime perf important?
23:29 < bridge> <milkeeycat> If it works it's enough
23:36 < bridge> <Jupstar ‚ú™> is it allowed to add a new find function? xd
23:37 < bridge> <Jupstar ‚ú™> but ig you can then also simply come up with smth
23:45 < bridge> <Assa> @jupeyy_keks I answered most of your concerns regarding my PR, are there still open conversations? I removed the MACRO, but a full new structure would be another PR
23:47 < bridge> <Jupstar ‚ú™> > but a full new structure would be another PR
23:47 < bridge> <Jupstar ‚ú™> Yeah no worries about that
23:47 < bridge> <Jupstar ‚ú™> Was more related to closing the issue
23:47 < bridge> <Jupstar ‚ú™> You also don't have to do it
23:49 < bridge> <Assa> hmm, I could fill a 1D vector CRenderLayer Objects instead, I don't know if this structure would improve fps. We could certainly do a much easier foreground/background split and just set render to false for the conditions
23:50 < bridge> <Assa> you'd still need to layercount üò†
23:54 < bridge> <Jupstar ‚ú™> I don't want to demotivate you but I don't see the fps potential you see.
23:54 < bridge> <Jupstar ‚ú™> Even if you could still make it 2% faster, that will not fix fps issues on some maps
23:55 < bridge> <Assa> I don't see much to do now as well
23:55 < bridge> <Jupstar ‚ú™> Better concentrate on readability over anything else
23:55 < bridge> <Assa> I don't see much to improve now as well
23:55 < bridge> <learath2> I guess cleaner code is still a win
23:56 < bridge> <Jupstar ‚ú™> My idea was that you have kinda _RenderLayers_ and these RenderLayers store a group & layer index.
23:56 < bridge> <Jupstar ‚ú™> So you never need to skip layers with the count thing
23:56 < bridge> <Assa> the code was in a really bad shape, I removed overall like 300 lines without changing anything functionally
23:56 < bridge> <Jupstar ‚ú™> The count thing is kinda more a workaround to remember the real layer index
23:56 < bridge> <learath2> @jupeyy_keks since you pretty much have the most optimal tw renderer, is there any other low hanging fruit?
23:57 < bridge> <Jupstar ‚ú™> It's only good if you play with _normal_ zoom
23:57 < bridge> <Jupstar ‚ú™> e.g. twgpu is much better at very far zoom levels
23:57 < bridge> <Assa> now it's actually remembered
23:57 < bridge> <Jupstar ‚ú™> But it's much more GPU intensive
23:57 < bridge> <learath2> I can imagine the envelope point lookup kebs improved becoming O(1) with some preprocessing
23:57 < bridge> <Jupstar ‚ú™> But anyway, I'd focus on stuff like snapshot linear search first
23:57 < bridge> <Jupstar ‚ú™> stuff that really is bad in a worst case
23:58 < bridge> <Jupstar ‚ú™> Did he improve it better than binary search?
23:58 < bridge> <Jupstar ‚ú™> But it defs is better yeah
23:58 < bridge> <learath2> Yeah this is on my forever growing todo list
23:58 < bridge> <learath2> No he went to binary search that's O(logn)
23:59 < bridge> <learath2> If we resample all the curves such that they all have the same amount of points at the same times, we can have it O(1)
