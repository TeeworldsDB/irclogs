00:34 < bridge_> <heinrich5991> nah, IMO it's better to specify the version you need
00:35 < bridge_> <heinrich5991> correct
00:35 < bridge_> <heinrich5991> the union of features is taken
00:36 < bridge_> <ryozuki> Ah yes and that's why features should be additive not sub
00:36 < bridge_> <ryozuki> That's why many no std features switched to std enabled by default feature
00:37 < bridge_> <ryozuki> It's better if the feature enables std support than disables it
00:37 < bridge_> <ryozuki> Which in the past was common
00:37 < bridge_> <ryozuki> I go sleep
04:37 < bridge_> <Ewan> did TextRender::Text signature get changed recently?
04:37 < bridge_> <Ewan> i feel like it had auto height before and not now
04:57 < bridge_> <Ewan> oh it’s the silly ptr
05:00 < bridge_> <Ewan> how is it configured? did you look at the build instructions for Windows? at a glance this seems like a config mismatch error to me, possibly targeting an older standard version
05:00 < bridge_> <Ewan> which might happen if you didn’t use cmake
05:01 < bridge_> <Ewan> either generate for vs 2022 w/ the cmake gui or cmd line or whatever or open it as a cmake project in VS (build instructions don’t tell you to do this but it works better and lets you make multiple configurations, you have to click “continue with no code” and a cmake project is in file->open)
05:01 < bridge_> <Ewan> either generate for vs 2022 w/ the cmake gui or cmd line or whatever 
05:01 < bridge_> <Ewan> or 
05:01 < bridge_> <Ewan> open it as a cmake project in VS (build instructions don’t tell you to do this but it works better and lets you make multiple configurations, you have to click “continue with no code” and a cmake project is in file->open)
05:08 < bridge_> <Ewan> True
05:08 < bridge_> <Ewan> Tho not rly cpp
05:15 < bridge_> <Ewan> Maybe it would be worth using CUIRect in the HUD and whatnot instead of hardcoded offsets, would make finding space for new things much easier
05:16 < bridge_> <Ewan> rn with my status bar if i wanted to have it on the top i'd have to manually add the status bar height to the y of every other unrelated element that just happens to be there
05:16 < bridge_> <Ewan> but the ui could just split a shared rect and then the next whoever uses that
05:58 < bridge_> <Ewan> i didn't even look at menus_settings_assets until now. this is gonna take a while, jesus
08:34 < bridge_> <Jupstar ✪> Who are you btw. Never seen you before xd
08:36 < bridge_> <ryozuki> Serde is rarely a problem cuz they are in 1.0 so all 1.0.y where y<x will be able to use 1.0.x
08:36 < bridge_> <ryozuki> And there is no 2.0
08:36 < bridge_> <Ewan> good morning
08:37 < bridge_> <ryozuki> 0.x.y is different cuz x are not back compat to semver on 0.
08:37 < bridge_> <ryozuki> Cargo tries to resolve versions to be same, but if it fails the crate will have 2 versions
08:37 < bridge_> <chillerdragon> Only on 0 ?
08:38 < bridge_> <ryozuki> And if libs use dif rust will tell u when u use a type on the lib from another version
08:38 < bridge_> <ryozuki> 0.x.y x here is minor but on 0. Minors are breaking
08:38 < bridge_> <ryozuki> Only patch is not
08:39 < bridge_> <Ewan> smh
08:39 < bridge_> <chillerdragon> Didn’t know that
08:39 < bridge_> <ryozuki> https://doc.rust-lang.org/cargo/reference/semver.html
08:39 < bridge_> <chillerdragon> Looks like a cheese
08:40 < bridge_> <Ewan> jeez i just initialized a std::array of size 6 with 5 items
08:40 < bridge_> <Ewan> it should warn for that
08:41 < bridge_> <Ewan> "why it crash"
08:43 < bridge_> <ryozuki> ?
08:43 < bridge_> <ryozuki> C++?
08:44 < bridge_> <ryozuki> his guide uses the terms “major” and “minor” assuming this relates to a “1.0.0” release or later. Initial development releases starting with “0.y.z” can treat changes in “y” as a major release, and “z” as a minor release. “0.0.z” releases are always major changes. This is because Cargo uses the convention that only changes in the left-most non-zero component are considered incompatible.
08:45 < bridge_> <Ewan> yea cpp
08:45 < bridge_> <Ewan> xd
09:13 < bridge_> <robyt3> Try do keep other changes minimal if possible or move them to a separate PR. IMO the loading indicator and text should be shown as a separate list item inside the listboxes which are currently getting loaded and not in a separate status bar, so you shouldn't need to adapt `CListBox` in any major way. I already have a loading indicator implemented, it's just waiting for stuff that can load in the background. I can make a PR in the evening if you wan
10:15 < bridge_> <art0007i> I used cmake and everything correctly just like in the readme, ended up reinstalling visual studio and it fixed it, was totally a problem with my msvc installation. (though weird that it compiled the server with no issues, but completely broke on the client)
10:45 < ChillerDragon> client has more tricky deps
10:45 < ChillerDragon> jopsti when add vulkan to the server?
10:51 < bridge_> <Jupstar ✪> Sounds good
10:51 < bridge_> <Jupstar ✪> More fps for server
12:45 < bridge_> <learath2> Server Side Rendering for faster first frames
13:02 < ChillerDragon> gpu optimized 512 tee collision physics
13:04 < bridge_> <ryozuki> compute shaders
13:04 < bridge_> <patiga> take that bot-clients!
13:25 < bridge_> <ryozuki> https://www.phoronix.com/news/Linux-6.6-Illicit-NVIDIA-Change
13:29 < bridge_> <ryozuki> https://www.servethehome.com/intel-shows-8-core-528-thread-processor-with-silicon-photonics/
14:02 < bridge_> <v16v> how can i add multeasy map in my server
14:04 < ChillerDragon> download the map
14:04 < ChillerDragon> put it in your map foler
14:04 < bridge_> <robyt3> Download the map from another server or https://github.com/ddnet/ddnet-maps
14:04 < ChillerDragon> use ``sv_map``
14:04 < ChillerDragon> https://github.com/ddnet/ddnet-maps/raw/master/types/novice/maps/Multeasymap.map
14:24 < bridge_> <pilonpl> Guys, what's better, amd or intel?
14:26 < bridge_> <pilonpl> Intel seems better
14:26 < bridge_> <pilonpl> According to the first link i clicked
14:28 < bridge_> <Iza> From my experience intel is less energy efficient with cpus
14:28 < bridge_> <pilonpl> But does energy consumption really matter?
14:29 < bridge_> <Iza> If you don’t care about your electricity bill then not really
14:30 < bridge_> <heinrich5991> in battery-powered devices, energy consumption matters a lot to yourself
14:30 < bridge_> <pilonpl> Right
14:31 < bridge_> <pilonpl> I care more about performance and features
14:32 < bridge_> <Iza> Just watch and read some reviews
14:33 < bridge_> <Iza> On the specific hardware that you want to buy
14:33 < bridge_> <pilonpl> Alright, i guess it doesn't really matter
14:34 < bridge_> <Iza> I assume you’re talking about cpus
14:35 < bridge_> <Iza> If you were to talk about gpus then it’s a whole different story
14:35 < bridge_> <pilonpl> Yeah cpus
14:35 < bridge_> <pilonpl> Nvidia is the best for gpus i think
14:35 < bridge_> <Iza> Imo nvidia is definitely just purely because of the software
14:35 < bridge_> <Iza> Imo nvidia is definitely the best just purely because of the software
14:35 < bridge_> <pilonpl> But i hate their proprietary software
14:35 < bridge_> <pilonpl> I mean i have to as a linux user lol
14:36 < bridge_> <Iza> Idk about linux
14:36 < bridge_> <Iza> Im proud windows user
14:36 < bridge_> <pilonpl> ~~me too but recently i use more linux than windows~~
14:39 < bridge_> <pilonpl> I think i need to choose a cpu first
14:39 < bridge_> <pilonpl> And then the rest of the components
14:42 < bridge_> <Iza> Depends on what you’re going for, but I’d recommend starting with gpu, since it’d be the most expensive thing
14:43 < bridge_> <pilonpl> I guess on steam nvida rtx 3060 is popular
14:43 < bridge_> <Jupstar ✪> Mid range cpu or high end?
14:44 < bridge_> <Jupstar ✪> For high end I'd say, u can go with both. For mid, I'd go with amd
14:44 < bridge_> <pilonpl> Idk yet
14:45 < bridge_> <pilonpl> I guess mid range
14:45 < bridge_> <pilonpl> Because i am not rich
14:45 < bridge_> <pilonpl> Or something
14:45 < bridge_> <Jupstar ✪> Amd often has better perf/$
14:46 < bridge_> <Jupstar ✪> Do u plan to buy inside poland or germany?
14:46 < bridge_> <pilonpl> Poland?
14:46 < bridge_> <Jupstar ✪> Well EU.. u can buy from anywhere xd
14:48 < bridge_> <pilonpl> I guess i want to have an average pc because games (software in general) probably want to work on average hardware?
14:52 < bridge_> <Jupstar ✪> Sure. I just wanted to know how much€ you pay for which CPU
14:53 < bridge_> <Jupstar ✪> And then I'll check what is better, amd or Intel. And where, shop
14:57 < bridge_> <pilonpl> I wonder if pre built pcs are any good
14:58 < bridge_> <pilonpl> They should technically be good in terms of components
15:05 < bridge_> <ryozuki> @jupeyy_keks do u know where is the code to render a tee
15:05 < bridge_> <ryozuki> oh
15:06 < bridge_> <ryozuki> i know where to find this
15:06 < bridge_> <Ewan> I think we are talking about different things but that might be useful yeah
15:06 < bridge_> <ryozuki> im finally finishing teerender
15:08 < bridge_> <Jupstar ✪> Nice
15:08 < bridge_> <Jupstar ✪> I haven't seen one at a fair price since years tbh
15:09 < bridge_> <Jupstar ✪> 10+ years ago aldi made ones xd
15:22 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1146434665876561920/result.png
15:22 < bridge_> <ryozuki> honestly its hard to interpret the source code xd
15:26 < bridge_> <Jupstar ✪> Where did you struggle. Eyes? Xd
15:26 < bridge_> <learath2> It'd be easy to read if it were Rust
15:26 < bridge_> <Jupstar ✪> Xdd
15:27 < bridge_> <ryozuki> well the tee render is mixed with python
15:27 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1146436044846272512/result.png
15:27 < bridge_> <ryozuki> body is too up right
15:27 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1146436123799867443/image.png
15:27 < bridge_> <ryozuki> in game
15:28 < bridge_> <ryozuki> ```rust
15:28 < bridge_> <ryozuki>     // 256, 128
15:28 < bridge_> <ryozuki>     let img = ImageReader::open("skins/brownbear.png")?.decode()?;
15:28 < bridge_> <ryozuki>     dbg!(img.width());
15:28 < bridge_> <ryozuki>     dbg!(img.height());
15:28 < bridge_> <ryozuki> 
15:28 < bridge_> <ryozuki>     let mut def = RgbaImage::new(96, 64);
15:28 < bridge_> <ryozuki>     dbg!(def.width());
15:28 < bridge_> <ryozuki>     dbg!(def.height());
15:28 < bridge_> <ryozuki> 
15:28 < bridge_> <ryozuki>     let filter = FilterType::Triangle;
15:28 < bridge_> <ryozuki> 
15:28 < bridge_> <ryozuki>     let back_feet_shadow = img.crop_imm(192, 64, 64, 32).resize(64, 30, filter);
15:28 < bridge_> <ryozuki>     blend_region(&mut def.sub_image(8, 32, 64, 30), &back_feet_shadow);
15:28 < bridge_> <ryozuki> 
15:28 < bridge_> <ryozuki>     let body_shadow = img.crop_imm(96, 0, 96, 96).resize(64, 64, filter);
15:28 < bridge_> <ryozuki>     blend_region(&mut def.sub_image(14, 0, 64, 64), &body_shadow);
15:28 < bridge_> <ryozuki> 
15:28 < bridge_> <ryozuki>     let front_feet_shadow = img.crop_imm(192, 64, 64, 32).resize(64, 30, filter);
15:28 < bridge_> <ryozuki>     blend_region(&mut def.sub_image(24, 32, 64, 30), &front_feet_shadow);
15:29 < bridge_> <ryozuki> 
15:29 < bridge_> <ryozuki>     let back_feet = img.crop_imm(192, 32, 64, 32).resize(64, 30, filter);
15:29 < bridge_> <ryozuki>     blend_region(&mut def.sub_image(8, 32, 64, 30), &back_feet);
15:29 < bridge_> <ryozuki> 
15:29 < bridge_> <ryozuki>     let body = img.crop_imm(0, 0, 96, 96).resize(64, 64, filter);
15:29 < bridge_> <ryozuki>     blend_region(&mut def.sub_image(14, 0, 64, 64), &body);
15:29 < bridge_> <ryozuki> 
15:29 < bridge_> <ryozuki>     let front_feet = img.crop_imm(192, 32, 64, 32).resize(64, 30, filter);
15:29 < bridge_> <ryozuki>     blend_region(&mut def.sub_image(24, 32, 64, 30), &front_feet);
15:29 < bridge_> <ryozuki> 
15:29 < bridge_> <ryozuki>     let left_eye = img.crop_imm(64, 96, 32, 32).resize(26, 26, filter);
15:29 < bridge_> <ryozuki> honestly i just glossed over the code
15:29 < bridge_> <ryozuki> its too much effort to figure the legit
15:29 < bridge_> <ryozuki> way
15:29 < bridge_> <ryozuki> xd
15:29 < bridge_> <pilonpl> Yeah, price can be unfair but the components should work together nicely, right?
15:30 < bridge_> <pilonpl> Like someone chose these components
15:30 < bridge_> <learath2> Cheater
15:30 < bridge_> <ryozuki> @jupeyy_keks tell me exact coords of tee rendering and ill make u a free software service API for everyone to render skins with given colors
15:30 < bridge_> <ryozuki> and also a fast rust cli tool
15:30 < bridge_> <ryozuki> blazing fast
15:36 < bridge_> <Jupstar ✪> Well, trust me if i say they won't work together better than if u look into the compatibility list of your motherboard manual
15:36 < bridge_> <Jupstar ✪> Prebuilt pcs tend to use cheapest hardware
15:37 < bridge_> <Jupstar ✪> I posted a type script once that works
15:37 < bridge_> <ryozuki> mine also "works"
15:37 < bridge_> <Jupstar ✪> Maybe u can find it xd
15:38 < bridge_> <Jupstar ✪> Else see patigas txt
15:38 < bridge_> <ryozuki> where is it
15:38 < bridge_> <Jupstar ✪> Dunno ask him
15:38 < bridge_> <ryozuki> @patiga u got a tee skin rendering txt?
15:39 < bridge_> <heinrich5991> request for tee.md in libtw2/doc
15:39 < bridge_> <heinrich5991> or anywhere else
15:39 < bridge_> <remakepower> I have a question: Will a server with more than 128 maxplayers be masterban?
15:39 < bridge_> <ryozuki> no
15:40 < bridge_> <ryozuki> u will be banned if u say ur server has 128 players but they arent real
15:40 < bridge_> <ryozuki> connect
15:40 < bridge_> <ryozuki> connecteD*
15:40 < bridge_> <ryozuki> but there is nothing wrong with 128 player slots
15:40 < bridge_> <ryozuki> fokko does that
15:41 < bridge_> <heinrich5991> generally, it'd be nice to send correct info
15:41 < bridge_> <heinrich5991> there are no hard rules, but it'd be nice if your server actually supported 128 players then
15:44 < bridge_> <remakepower> Thanks, i found a way to make it.
15:45 < bridge_> <remakepower> Also, i think it can be useful for a PvE mode
15:45 < bridge_> <ryozuki> ddnet is pve
15:45 < bridge_> <ryozuki> its pvm
15:45 < bridge_> <ryozuki> player vs map
15:45 < bridge_> <ryozuki> xd
15:46 < bridge_> <Jupstar ✪> 😬
15:46 < bridge_> <remakepower> wow.
15:46 < bridge_> <ryozuki> how to convert hsla to rgba
15:46 < bridge_> <ryozuki> i hate colors
15:46 < bridge_> <Jupstar ✪> Me too xd
15:47 < bridge_> <ryozuki> ok enough work today on teerender
15:47 < bridge_> <ryozuki> i dont wanna deal with colors xd
15:47 < bridge_> <Jupstar ✪> Xddd
15:47 < bridge_> <remakepower> Imagine that the monsters on the map are all the same Tee as the players. The number of monsters and number of players add up to much greater than 64.
15:48 < bridge_> <remakepower> That's interesting.
15:48 < bridge_> <learath2> We have it in color.h
15:48 < bridge_> <ryozuki> source is here btw https://github.com/edg-l/teerender
15:48 < bridge_> <learath2> Or you can look at wikipedia
15:48 < ChillerDragon> lerato our davinci
15:48 < bridge_> <ryozuki> im not even sure my function to convert a color code to hsl works
15:48 < bridge_> <ryozuki> xd
15:48 < bridge_> <heinrich5991> nice commit message
15:48 < ChillerDragon> xd
15:48 < bridge_> <ryozuki> ```rust
15:48 < bridge_> <ryozuki> #[allow(clippy::cast_precision_loss)]
15:49 < bridge_> <ryozuki> fn color_code_base(col: u32, alpha: bool) -> HSLAColor {
15:49 < bridge_> <ryozuki>     let a = if alpha {
15:49 < bridge_> <ryozuki>         ((col >> 24) & 0xFF) as f32 / 255.0f32
15:49 < bridge_> <ryozuki>     } else {
15:49 < bridge_> <ryozuki>         1.0f32
15:49 < bridge_> <ryozuki>     };
15:49 < bridge_> <ryozuki>     let x = ((col >> 16) & 0xFF) as f32 / 255.0f32;
15:49 < bridge_> <ryozuki>     let y = ((col >> 8) & 0xFF) as f32 / 255.0f32;
15:49 < bridge_> <ryozuki>     let z = (col & 0xFF) as f32 / 255.0f32;
15:49 < bridge_> <ryozuki> 
15:49 < bridge_> <ryozuki>     HSLAColor { x, y, z, a }
15:49 < bridge_> <ryozuki> }
15:49 < bridge_> <ryozuki> ```
15:50 < bridge_> <ryozuki> xd
15:51 < bridge_> <learath2> That looks fine to me
15:53 < bridge_> <Ewan> .0f32 is cursed
15:53 < bridge_> <Ewan> not as cursed as . being f32 and .f being f16 tho
15:53 < bridge_> <XWA> omg these codes
15:54 < bridge_> <XWA> are these java
15:54 < bridge_> <remakepower> no
15:54 < bridge_> <remakepower> these rust
15:54 < bridge_> <heinrich5991> f32 suffix is unnecessary there
15:54 < bridge_> <XWA> c++
15:54 < bridge_> <remakepower> these are rust
15:54 < bridge_> <Ewan> There are rust
15:54 < bridge_> <remakepower> i don't think c++ has 'let'
15:54 < bridge_> <Ewan> They are rust
15:54 < bridge_> <Ewan> #define let auto
15:56 < bridge_> <remakepower> Then I don't think C++ returns values by this way.
15:57 < bridge_> <matodor> python?
15:57 < bridge_> <remakepower> rust.
15:57 < bridge_> <patiga> https://cdn.discordapp.com/attachments/293493549758939136/1146443665066184835/tee_notes.txt
15:58 < bridge_> <remakepower> what's this?
15:58 < bridge_> <ryozuki> epic
15:58 < bridge_> <ryozuki> @heinrich5991
15:58 < bridge_> <patiga> the values required to render a tee properly
15:58 < bridge_> <Mr.Gh0s7> why are eyes positions not fractions?
15:58 < ChillerDragon> @Ewan "#define let auto" lmao epic
15:58 < bridge_> <ryozuki> rust bro
15:59 < bridge_> <patiga> first is the offset of the tees, the point around which they rotate. afterwards its the movement of the eyes which is calculated with the view angle
15:59 < bridge_> <patiga> *of the eyes
16:00 < bridge_> <Ewan> ya it’s a feature
16:00 < bridge_> <Mr.Gh0s7> Ah ok ;)
16:01 < bridge_> <ryozuki> i know we dont pin much but can someone pin this
16:01 < bridge_> <patiga> I'll create a libtw2 pull request
16:01 < bridge_> <remakepower> I've seen someone define emojis to "int", "float" before
16:02 < bridge_> <ryozuki> https://wiki.ddnet.org/wiki/Development#About_Tee_Skin_Rendering
16:02 < bridge_> <ryozuki> i added it here
16:02 < bridge_> <ryozuki> too
16:03 < bridge_> <remakepower> wow
16:07 < bridge_> <ryozuki> whats wowy
16:07 < bridge_> <remakepower> i didn't know the wiki has it before
16:12 < bridge_> <ryozuki> it didnt have the txt from patiga, i added it just now
16:15 < bridge_> <remakepower> oh
16:20 < bridge_> <heinrich5991> can I have that under the libtw2 license (Apache2/MIT)?
16:20 < bridge_> <patiga> sure 👍
16:20 < bridge_> <heinrich5991> thanks ❤️
16:21 < bridge_> <patiga> are you adding it rn? else I'd do a pull request
16:22 < bridge_> <heinrich5991> you can do a PR
16:22 < bridge_> <heinrich5991> actually
16:22 < bridge_> <heinrich5991> I was about to do it
16:22 < bridge_> <heinrich5991> what do you prefer? @patiga
16:23 < bridge_> <patiga> you do it, I think its fastest and its your repo :)
16:23 < bridge_> <patiga> (-> so you know how you want it formatted etc)
16:26 < bridge_> <remakepower> Wait, what wrong with ddnet.org?
16:26 < bridge_> <remakepower> hm?
16:26 < bridge_> <remakepower> oh
16:26 < bridge_> <remakepower> loaded now
16:33 < bridge_> <Ewan> https://github.com/ddnet/ddnet/pull/6727#discussion_r1309811240
16:33 < bridge_> <Ewan> i get it for little routines where the string goes out of scope quick but to always have 256 bytes allocated when it could be 4? idk man
16:33 < bridge_> <Ewan> i get it for little routines where the string goes out of scope quick but to always have 256 bytes allocated when it could be 5? idk man
16:37 < bridge_> <heinrich5991> @patiga eye_blink isn't real? TIL
16:38 < bridge_> <patiga> all lies!
16:39 < bridge_> <Ewan> the github app is so unintuitive
16:43 < bridge_> <heinrich5991> @patiga is blink only vertically scaled or both ways?
16:43 < bridge_> <patiga> only vertically
16:43 < bridge_> <heinrich5991> the rest both ways?
16:44 < bridge_> <patiga> hm yes
16:50 < bridge_> <patiga> during a blink, the eyes are probably 45% vertically, 120% horizontally (normal eyes value)
16:51 < bridge_> <patiga> ^ yes
16:53 < bridge_> <heinrich5991> this fine? @patiga https://github.com/heinrich5991/libtw2/commit/044597a89faa5afaaa01e6cb2fa100d94c806738
16:53 < bridge_> <heinrich5991> including using you as the author
16:55 < bridge_> <patiga> looks good!
16:56 < bridge_> <heinrich5991> ok, pushed
17:10 < bridge_> <Ewan> Nice
17:12 < bridge_> <Ewan> Do we want to add a flag to io_read_all to differentiate between files of 0 bytes and files >2GiB
17:12 < bridge_> <ryozuki> epic
17:16 < bridge_> <Ewan> Or just always return -1 for sz or w/e
17:17 < bridge_> <heinrich5991> files with >2GiB should probably not be loaded into memory as a whole. if you still want to fx that function, make it return `uint64_t` I guess
17:17 < bridge_> <Ewan> Or just always return -1 for sz or w/e if over 2GB
17:17 < bridge_> <heinrich5991> I'm fine with w/e for these large files
17:19 < bridge_> <Ewan> Seems stupid to remove safer code just because it’s not done elsewhere
17:19 < bridge_> <heinrich5991> then put it into `io_read_all`
17:19 < bridge_> <Ewan> maybe io_length or w/e
17:19 < bridge_> <robyt3> You'd probably have to change all of the io offset functions if you want to support largers files since we use `fseek`
17:20 < bridge_> <heinrich5991> I wouldn't call code that loads arbitrary amounts of data into RAM safe, but it's not worse than the current code
17:20 < bridge_> <robyt3> Why `uint64_t` over `size_t`?
17:21 < bridge_> <heinrich5991> `size_t` is the wrong type, it differs between 32 bit and 64 bit systmes
17:21 < bridge_> <heinrich5991> 32 bit systems can have files larger than 4 GiB
17:21 < bridge_> <robyt3> But they can't load them into memory
17:21 < bridge_> <robyt3> Which is what the function does
17:21 < bridge_> <robyt3> But I get your point for the other functions
17:22 < bridge_> <ryozuki> streams?
17:22 < bridge_> <heinrich5991> loading a 4 GiB file into memory is also a stupid idea on 64 bit
17:22 < bridge_> <ryozuki> depends
17:22 < bridge_> <ryozuki> i like loading a sqlite dbb into memory
17:22 < bridge_> <ryozuki> xd
17:23 < bridge_> <heinrich5991> give me an example in the context of ddnet
17:23 < bridge_> <heinrich5991> give me an example in the context of ddnet
17:23 < bridge_> <ryozuki> ok but u didnt mention ddnet
17:23 < bridge_> <ryozuki> u just said 64bit
17:23 < bridge_> <ryozuki> i dont know any rn
17:25 < bridge_> <ryozuki> @heinrich5991 btw, if a file is in a tmpfs and u read it, is it 2 times in memory? not ddnet context
17:25 < bridge_> <ryozuki> i guess a tmpfs is more good at avoiding writes
17:25 < bridge_> <heinrich5991> check discord name 😛 we're accidentally talking about ddnet development 😄
17:25 < bridge_> <ryozuki> xd
17:26 < bridge_> <heinrich5991> twice in memory. you can mmap it so it might only be there once
17:44 < bridge_> <Jupstar ✪> in the context of ddnet 32 bit is also stupid 😬
17:47 < bridge_> <heinrich5991> it's fine to play ddnet on old computers, although I'm not sure there are still 32 bit computers around 🤔
17:47 < bridge_> <Jupstar ✪> it's bad, bcs it blocks progress for the silent majority
17:49 < bridge_> <heinrich5991> IMO it's rather bad to stop supporting old hardware for software that doesn't need new hardware
17:49 < bridge_> <heinrich5991> contributes to waste
17:49 < bridge_> <Jupstar ✪> old hardware usually uses more energy for the same effective result
17:50 < bridge_> <Jupstar ✪> also software would be less bloated without old hardware
17:50 < bridge_> <heinrich5991> I'd bet it's better to use old hardware with more energy requiremenets than produce new hardware
17:50 < bridge_> <Jupstar ✪> => less work to do
17:50 < bridge_> <Jupstar ✪> i wouldn't count on that
17:50 < bridge_> <Jupstar ✪> old cars from europe are now driven in africa
17:51 < bridge_> <heinrich5991> random article: https://www.networkworld.com/article/2229029/computer-factories-eat-way-more-energy-than-running-the-devices-they-build.html
17:51 < bridge_> <heinrich5991> 70% sounds like using an old computer is always better than buying a new one
17:52 < bridge_> <heinrich5991> in terms of energy requirements
17:52 < bridge_> <heinrich5991> (not even talking about resource usage, where the waste goes)
17:53 < bridge_> <Jupstar ✪> well this clearly does not include the result (less performance)
17:54 < bridge_> <Jupstar ✪> more software bloat
17:54 < bridge_> <Jupstar ✪> more maintaince
17:54 < bridge_> <heinrich5991> are you still talking about energy usage? or is this a different topic?
17:54 < bridge_> <Jupstar ✪> yes i am
17:55 < bridge_> <heinrich5991> I'd guess it's mostly the "modern software" that's more wasteful, not backcompat
17:56 < bridge_> <heinrich5991> old software runs much faster (more energy efficient?) on new hardware AFAICT
17:57 < bridge_> <Jupstar ✪> and what does that have to do with the age of the software?
17:57 < bridge_> <Jupstar ✪> new hardware is usually faster
17:57 < bridge_> <Jupstar ✪> that python sucks is crystal clear
17:57 < bridge_> <Jupstar ✪> 
17:57 < bridge_> <Jupstar ✪> but vulkan is clearly more energy efficient than OpenGL
17:57 < bridge_> <Jupstar ✪> so targeting vulkan makes sense
17:58 < bridge_> <heinrich5991> got a citation on that btw?
17:58 < bridge_> <heinrich5991> the vulkan being more energy efficient?
17:58 < bridge_> <Jupstar ✪> it's designed to use less CPU
17:58 < bridge_> <Jupstar ✪> benchmarks back that up
17:58 < bridge_> <heinrich5991> can you link one that shows that it uses less power?
17:59 < bridge_> <Jupstar ✪> https://www.youtube.com/watch?v=rvCD9FaTKCA
17:59 < bridge_> <Jupstar ✪> 
17:59 < bridge_> <Jupstar ✪> is a video from ARM good enough for you?
18:00 < bridge_> <heinrich5991> sounds good
18:00 < bridge_> <heinrich5991> what's opengl es vs opengl?
18:00 < bridge_> <heinrich5991> do you think it performs similarly?
18:00 < bridge_> <Jupstar ✪> yes
18:00 < bridge_> <heinrich5991> ok
18:01 < bridge_> <Jupstar ✪> it's a subset of OpenGL 4.3 (OpenGL ES 3.2)
18:13 < bridge_> <ryozuki> opengl es is what used to run on mobiles iirc
18:13 < bridge_> <ryozuki> since mobiles are arm too
18:15 < bridge_> <ryozuki> `cargo clippy --workspace -- -D warnings -D clippy::nursery -A clippy::collection_is_never_read -A clippy::string_lit_as_bytes -A clippy::option_if_let_else -A clippy::use_self` i cooked this up for smth at work
18:15 < bridge_> <ryozuki> easy pr
18:16 < bridge_> <ryozuki> ohh
18:17 < bridge_> <ryozuki> i found a false positive
18:17 < bridge_> <ryozuki> i guess clippy cant detect if a destructor is non const and it suggest to make a function const
18:20 < bridge_> <heinrich5991> clippy's words are no longer god's words? ^^
18:21 < bridge_> <heinrich5991> it should be able to, maybe make a bug report
18:21 < bridge_> <ryozuki> it is, most of the time xd
18:21 < bridge_> <ryozuki> unless compiler says no
18:22 < bridge_> <ryozuki> :justatest:
18:22 < bridge_> <ryozuki> i put deny cuz i know ppl at work arent madmans like me
18:22 < bridge_> <ryozuki> also the stirng_list_as_bytes comes from a macro
18:22 < bridge_> <ryozuki> string*
18:22 < bridge_> <ryozuki> i put allow* cuz i know ppl at work arent madmans like me
18:23 < bridge_> <ryozuki> (and no we dont run nursery anywhere, its just a thing i like to do)
18:23 < bridge_> <ryozuki> i actually found out a lot of possible const fns
18:23 < bridge_> <heinrich5991> report a bug ^^
18:23 < bridge_> <heinrich5991> this is public API in library, got to be careful there
18:23 < bridge_> <ryozuki> oh true
18:24 < bridge_> <ryozuki> well its unlikely to change
18:25 < bridge_> <ryozuki> the consts are mostly "new" style functions
18:27 < bridge_> <ryozuki> @heinrich5991 whatu  think about https://rust-lang.github.io/rust-clippy/master/index.html#/equatable_if_let
18:35 < bridge_> <heinrich5991> meh
18:35 < bridge_> <heinrich5991> not worth changing code over
18:48 < bridge_> <ryozuki> odd i cant make a min example
18:48 < bridge_> <ryozuki> for clippy
19:56 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1146503778565095494/F4uKl0RXYAEX_Ac.jpg
19:58 < bridge_> <ryozuki> https://cdn.discordapp.com/attachments/293493549758939136/1146504112771449023/F4vnZFlXgAIDUqa.jpg
20:01 < bridge_> <Jupstar ✪> the funny thing is, the third happens quite often
20:01 < bridge_> <Jupstar ✪> 
20:01 < bridge_> <Jupstar ✪> and mostly that comment then doesn't help xD
20:02 < bridge_> <Jupstar ✪> you are 6th xd
20:03 < bridge_> <ryozuki> i knewe u would say that
20:03 < bridge_> <ryozuki> xd
20:27 < bridge_> <chillerdragon> royowo the tab girl uwu
20:28 < bridge_> <chillerdragon> I identify as the 1st
20:29 < bridge_> <chillerdragon> Jospsiti is the question answerer
20:34 < bridge_> <teero777> chillerdragon: about your pr for login censorship with the streamer mode.
20:34 < bridge_> <teero777> maybe just make aliases for specific phrases. so you could type /login MY_PASS in the chat and MY_PASS just gets replaced before sending the msg.
20:34 < bridge_> <teero777> so ig it would be some kind of chat alias mod
20:39 < bridge_> <chillerdragon> So put your password in a Config and only censor your password?
20:39 < bridge_> <chillerdragon> As Heinrich says that would encourage password reuse
20:40 < bridge_> <chillerdragon> And still leak the restore safe words ddnet generates
20:40 < bridge_> <chillerdragon> And the password your team mate chooses
20:40 < bridge_> <teero777> use tokens instead of passes
20:40 < bridge_> <chillerdragon> ??
20:40 < bridge_> <teero777> then make an alias to the the token
20:40 < bridge_> <chillerdragon> What are you talking about
20:40 < bridge_> <chillerdragon> Im not following
20:41 < bridge_> <chillerdragon> What token
20:41 < bridge_> <chillerdragon> And who should do that?
20:41 < bridge_> <teero777> u know how the alias cmd on linux wokrs right?
20:41 < bridge_> <chillerdragon> Yes
20:42 < bridge_> <chillerdragon> So whats your idea?
20:42 < bridge_> <chillerdragon> Only replace all passwords the user blacklisted?
20:42 < bridge_> <teero777> no
20:42 < bridge_> <chillerdragon> Then what
20:43 < bridge_> <teero777> you type `/login PasswordForFokko`
20:43 < bridge_> <teero777> the server gets `/login youractualpassword`
20:43 < bridge_> <chillerdragon> Don’t get it
20:44 < bridge_> <chillerdragon> Okay let’s ignore that I do not understand it. How would it be better than my approach?
20:44 < bridge_> <teero777> simple aliases so streamers dont leak anything and if you have tokens instead of passwrds then you dont have to bind them to remember
20:44 < bridge_> <teero777> -> Okay let’s ignore that I do not understand it. How would it be better than my approach?
20:44 < bridge_> <teero777> 
20:44 < bridge_> <teero777> more usecases
20:45 < bridge_> <chillerdragon> You mean text replace
20:45 < bridge_> <chillerdragon> For specifc keywords
20:45 < bridge_> <teero777> exactly
20:45 < bridge_> <chillerdragon> That’s more variables than aliases on Linux
20:45 < bridge_> <chillerdragon> But yeah I get it now
20:45 < bridge_> <chillerdragon> Still would leak more than my pr
20:45 < bridge_> <teero777> how so?
20:45 < bridge_> <chillerdragon> Ddnet sends credentials in chat
20:45 < bridge_> <chillerdragon> They have to be hidden
20:46 < bridge_> <chillerdragon> And one can forget to use the Alia’s
20:46 < bridge_> <teero777> what if you have a token and dont want to bind it?
20:46 < bridge_> <chillerdragon> If it censors all parameters to confidential commands you can’t accidentally leak it
20:46 < bridge_> <chillerdragon> Then just bind it?
20:46 < bridge_> <chillerdragon> It’s a different feature imo
20:46 < bridge_> <teero777> dont have any keys left
20:47 < bridge_> <chillerdragon> Then bind exec calls
20:47 < bridge_> <teero777> dont have any keys left to bind `/login randomfkingtopken`
20:47 < bridge_> <chillerdragon> Still would encourage Password reuse
20:47 < bridge_> <robyt3> If you type `/loginhunter2` or `/lgoin hunter2` then you still accidentally leak it though
20:47 < bridge_> <chillerdragon> Just use chillerbot-ux password manager then :p
20:48 < bridge_> <chillerdragon> No
20:48 < bridge_> <chillerdragon> Ah with mine?
20:48 < bridge_> <chillerdragon> Yes
20:48 < bridge_> <teero777> what bout 7LOGIN CHILLERHUNTER
20:48 < bridge_> <chillerdragon> But that’s not related to streaming
20:48 < bridge_> <chillerdragon> Streaming is about someone watching your screen
20:48 < bridge_> <chillerdragon> If you publish a pw it’s Public yes
20:49 < bridge_> <chillerdragon> I don’t understand why we are discussing this
20:49 < bridge_> <robyt3> Well, you could make it simpler. Add a key bind to toggle the entire chat input being censored
20:49 < bridge_> <chillerdragon> Having password fields not show letters is standard
20:50 < bridge_> <chillerdragon> Including your input?
20:50 < bridge_> <robyt3> I mean only the inputs, yes
20:50 < bridge_> <chillerdragon> Then you don’t see what command you type
20:50 < bridge_> <chillerdragon> Still leaks the ddnet response in chat
20:50 < bridge_> <chillerdragon> Or are you only talking about input for now?
20:50 < bridge_> <robyt3> Yeah, the response is a separate issue
20:51 < bridge_> <robyt3> Though, yeah, also not ideal that you can't see if you typed the command correctly
20:51 < bridge_> <chillerdragon> Much uglier ux
20:51 < bridge_> <chillerdragon> To not see the command
20:51 < bridge_> <chillerdragon> Caused was more 7login cases
20:51 < bridge_> <chillerdragon> And is just weird
20:51 < bridge_> <chillerdragon> And has to be activated
20:51 < bridge_> <robyt3> Then server commands should also be communicated to the client like on upstream
20:51 < bridge_> <chillerdragon> vs mine being automatic for the full stream
20:51 < bridge_> <chillerdragon> No brain farts
20:51 < bridge_> <robyt3> So you can select server commands from a menu
20:51 < bridge_> <chillerdragon> Why?
20:51 < bridge_> <robyt3> And the command can advice the client that its arguments should be censored
20:52 < bridge_> <chillerdragon> Ok sure would be cool
20:52 < bridge_> <chillerdragon> But we also hacked the auto complete
20:52 < bridge_> <teero777> chillerdragon: the client somehow has to know which commands should be censored and which should not be. maybe some gamemode has a diffrent command for login or other specific things that should not be seen.
20:52 < bridge_> <chillerdragon> But yea command system would be nice
20:52 < bridge_> <chillerdragon> But should not block that pr
20:52 < bridge_> <chillerdragon> Which?
20:53 < bridge_> <robyt3> Would be a lot less hacky with a command system instead of having a hard-coded list of commands that need censoring
20:53 < bridge_> <chillerdragon> login and the ddnet commands is covering pretty much all isn’t it
20:53 < bridge_> <chillerdragon> Yes
20:53 < bridge_> <chillerdragon> So?
20:53 < bridge_> <robyt3> Yeah, the server could tell the client exactly that
20:53 < bridge_> <robyt3> Like the server sends rcon commands to the client it also can send chat commands on 0.7
20:53 < bridge_> <chillerdragon> Auto complete is also hacky and my pr is already useful
20:54 < bridge_> <chillerdragon> Im not Building a cmd system now I’m busy with 0.7
20:55 < bridge_> <chillerdragon> Yea I get your point and agree it would be nicer. But it shouldn’t be a reason to not help streamers right now at all.
20:55 < bridge_> <chillerdragon> My code is working and at the same hack level as chat command auto complete. And it covers all mods I saw in the last decade.
20:56 < bridge_> <chillerdragon> Sure it doesn’t cover edge commands such as /pin or /changepassword and a command system would be better. But this pr is good enough to be merged.
20:57 < bridge_> <robyt3> Should be tested with unicode input, text selection and IME in the censored part though
20:57 < bridge_> <chillerdragon> I build a fakin std function for you which also less hacky than the existing rcon password censor. And now you are saying it needs a whole command system to be merged?
20:57 < bridge_> <teero777> xDDD
20:57 < bridge_> <teero777> imagine having unicode symbols in your pw XDD
20:57 < bridge_> <chillerdragon> Asians
20:57 < bridge_> <teero777> like yea i got that wonky smiley face as a pw
20:58 < bridge_> <robyt3> It's okay for now yeah
20:58 < bridge_> <teero777> ¯\_(ツ)_/¯
20:58 < bridge_> <chillerdragon> Yea the android player might
20:58 < bridge_> <chillerdragon> It’s surprisingly secure pw for one letter to use a poop emoji
20:58 < bridge_> <teero777> true
20:59 < bridge_> <robyt3> I like this character: 〠
20:59 < bridge_> <robyt3> "Postal Mark Face"
21:00 < bridge_> <chillerdragon> Robsti pw leaked
21:04 < bridge_> <ryozuki> 〠〠〠
21:04 < bridge_> <ryozuki> @robyt3 this is the pot
21:04 < bridge_> <ryozuki> from elden ring
21:04 < bridge_> <Jupstar ✪> had to zoom 300% to even read the symbol
21:05 < bridge_> <robyt3> Search puzzle: find the Postal Mark Face in the font atlas picture from release 17.2
21:06 < bridge_> <Anime.pdf> chillerdragon: damn, my fav subscriber
21:06 < bridge_> <chillerdragon> Ikr
21:06 < bridge_> <chillerdragon> Idk how I missed your channel
21:07 < bridge_> <chillerdragon> Just saw it on fddrace discord
21:07 < bridge_> <Anime.pdf> I just got a whole push notification cuz u subbed
21:08 < bridge_> <chillerdragon> get pingerd
21:09 < bridge_> <chillerdragon> Faak soon you have more subs than me
21:11 < bridge_> <Anime.pdf> Would be sweet :hm:
21:15 < bridge_> <teero777> looks like some kinda monk tbh
21:15 < bridge_> <teero777> https://cdn.discordapp.com/attachments/293493549758939136/1146523728562372689/image.png
21:16 < bridge_> <Jupstar ✪> for me it looks like this xD
21:16 < bridge_> <Jupstar ✪> https://cdn.discordapp.com/attachments/293493549758939136/1146523942199242833/image.png
21:17 < bridge_> <teero777> :justatest:
21:18 < bridge_> <Jupstar ✪> u need to zoom in first before making a pic, else it's too bad resolution xd
21:34 < bridge_> <heinrich5991> no, it's not
22:03 < bridge_> <ryozuki> https://lichess.org/p6nJeGxR
22:03 < bridge_> <ryozuki> i challenge thee
22:08 < bridge_> <Jupstar ✪> uff ryo nub
22:08 < bridge_> <Jupstar ✪> u drunk? xd
22:09 < bridge_> <Jupstar ✪> uff white
22:09 < bridge_> <Jupstar ✪> u drunk?
22:09 < bridge_> <ryozuki> lol
22:09 < bridge_> <ryozuki> xd
22:09 < bridge_> <ryozuki> im bad
22:09 < bridge_> <ryozuki> been long i havent played
22:09 < bridge_> <ryozuki> but  i want to cum back
22:15 < bridge_> <Jupstar ✪> gg ryo xd
22:16 < bridge_> <Mr.Gh0s7> he missed it xD
22:16 < bridge_> <Jupstar ✪> i think white could have won a few times
22:16 < bridge_> <Mr.Gh0s7> ye :(
22:16 < bridge_> <Jupstar ✪> r u white? xd
22:16 < bridge_> <Mr.Gh0s7> I am a ghost!
22:16 < bridge_> <Jupstar ✪> xd
22:16 < bridge_> <ryozuki> bro
22:16 < bridge_> <ryozuki> how can u not know
22:16 < bridge_> <ryozuki> im black
22:17 < bridge_> <Jupstar ✪> ? xD
22:17 < bridge_> <Jupstar ✪> nobody talks about u
22:17 < bridge_> <ryozuki> [white]yo
22:17 < bridge_> <ryozuki>     Ryozuki who u
22:17 < bridge_> <ryozuki>     [white]I am a ghost!
22:17 < bridge_> <ryozuki>     [white]xDD
22:17 < bridge_> <ryozuki>     [white]xDD
22:17 < bridge_> <ryozuki> ah ok
22:17 < bridge_> <ryozuki> xd
22:17 < bridge_> <ryozuki> nvm
22:17 < bridge_> <Jupstar ✪> xDDD
22:18 < bridge_> <Mr.Gh0s7> xDD
22:18 < bridge_> <Jupstar ✪> i cant read your ingame chat btw xd
22:18 < bridge_> <ryozuki> a xd
22:18 < bridge_> <Mr.Gh0s7> ```Chat room
22:18 < bridge_> <Mr.Gh0s7> 
22:18 < bridge_> <Mr.Gh0s7>     [white]yo
22:18 < bridge_> <Mr.Gh0s7>     Ryozuki who u
22:18 < bridge_> <Mr.Gh0s7>     [white]I am a ghost!
22:18 < bridge_> <Mr.Gh0s7>     [white]xDD
22:18 < bridge_> <Mr.Gh0s7>     [white]xDD
22:18 < bridge_> <Mr.Gh0s7>     [white]whoopsie
22:18 < bridge_> <Mr.Gh0s7>     [white]gg
22:18 < bridge_> <Mr.Gh0s7>     [white]Good game
22:18 < bridge_> <Mr.Gh0s7>     [white]Well played
22:18 < bridge_> <Mr.Gh0s7>     Ryozuki I've got to go
22:18 < bridge_> <Mr.Gh0s7>     Ryozuki Thank you
22:18 < bridge_> <Mr.Gh0s7>     [white]bb```
23:25 < bridge_> <reitw> @heinrich5991 wtf is cactus client lmao
