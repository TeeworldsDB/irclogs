00:00 < bridge> <totar> MC is literally the perfect example of how java makes it inherently easier to mod because the bedrock edition has 5% as much modding activity.
00:01 < bridge> <Ewan> bedrock edition probably has 5% as much modding activity because they were 10 years late to the party and their addon implementation covers little of what you may actually want to do in the game
00:01 < bridge> <Ewan> not to mention it's probably a completely different playing field. the addons are distributed by MS and you can charge for them
00:02 < bridge> <Ewan> it's now about how they can con kids out of $5 of their christmas money
00:02 < bridge> <meloƞ> Also bedrock sells shaders for ,5€...
00:03 < bridge> <totar> java edition has zero first party support or distribution for modding and yet has 100x more mods. Mojang actively makes it harder by removing symbol names from their .jars and people still create modding support for every version within weeks
00:04 < bridge> <totar> bedrock is 8 years old
00:05 < bridge> <Ewan> it's sorta apples/oranges but 1.12 was released about 8 years after minecraft's inception
00:06 < bridge> <Ewan> which is the most popular version to mod
00:06 < bridge> <Ewan> maybe java decompilation is easier than native binaries but that's not really the big hangup imo
00:06 < bridge> <totar> it's basically the only hangup imo
00:07 < bridge> <Ewan> that's very little of the actual work going on in the modding scene
00:07 < bridge> <Ewan> it's about the APIs the mod loaders have built
00:07 < bridge> <totar> that's not really true at all, the mods use direct byte code editing in java via mixins and in C# IL with harmony.
00:08 < bridge> <totar> you can directly change the source code of the game in a very readable way
00:08 < bridge> <totar> all the major mods do this
00:08 < bridge> <Ewan> okay
00:09 < bridge> <Ewan> if you write any code expecting that nobody will touch it. it will inevitably be difficult for someone to manipulate it in binary form
00:10 < bridge> <Ewan> in regards to data, ownership, pipelines, etc.
00:10 < bridge> <Ewan> the language or mechanism you use to mod is something of an implementation detail
00:11 < bridge> <Ewan> the issue is re-writing or patching the existing code to safely allow the mods to work
00:12 < bridge> <Ewan> you've surely seen c/c++ decompilation projects around the internet.it's not like it's something ppl don't do cuz there's no supported language feature to do it
00:12 < bridge> <totar> I've done modding with c++ decomplication
00:12 < bridge> <totar> it is not fun
00:13 < bridge> <totar> it takes without exaggeration about 30 times longer to do the exact same thing in a C# IL game
00:13 < bridge> <Ewan> u mean than in the C# game?
00:13 < bridge> <Ewan> it really depends on your workflow
00:14 < bridge> <totar> you have a secret workflow that competes with ILSpy?
00:14 < bridge> <Ewan> it's not a secret
00:14 < bridge> <totar> IDA64 paid edition?
00:14 < bridge> <totar> what is it lol
00:14 < bridge> <Ewan> hex-rays provides amazing c and c++ decompilers
00:14 < bridge> <Ewan> yes
00:14 < bridge> <totar> have you used ILSpy?
00:15 < bridge> <Ewan> yeah
00:15 < bridge> <totar> what about DNSpy
00:15 < bridge> <Ewan> no
00:15 < bridge> <Ewan> these have gotten much better at representing the code at a high level
00:16 < bridge> <Ewan> it's not really just super simple c anymore
00:16 < bridge> <totar> DNSpy literally gives you the original code
00:16 < bridge> <Ewan> rght
00:16 < bridge> <Ewan> right
00:16 < bridge> <totar> go try it
00:16 < bridge> <totar> for real
00:16 < bridge> <totar> do you have terraria?
00:16 < bridge> <totar> open terraria in dnspy
00:16 < bridge> <totar> it's free
00:16 < bridge> <Ewan> yeah but im not touching that shit lol
00:17 < bridge> <totar> ??
00:17 < bridge> <Ewan> ive seen the decomps
00:17 < bridge> <Ewan> terraria code is mortifying
00:17 < bridge> <totar> it's not that bad except for the 1 class that people talk about
00:17 < bridge> <totar> if it was that bad it would not have like 10000 mods
00:18 < bridge> <Ewan> i mean, yea
00:18 < bridge> <Ewan> idk what we are rly talking about any more
00:18 < bridge> <totar> but really you should open it in dnspy
00:18 < bridge> <totar> takes like 2 minutes
00:18 < bridge> <totar> from the time you search in google
00:18 < bridge> <Ewan> im not on win rn
00:18 < bridge> <Ewan> i dont have dotnet sdk or anything
00:19 < bridge> <totar> alr nvm
00:19 < bridge> <Ewan> i believe you
00:19 < bridge> <Ewan> it and java are very easy
00:19 < bridge> <Ewan> to decomp
00:20 < bridge> <Ewan> but i just think that the c/c++ way isn't really any less inviable as long as you know what you are doing
00:20 < bridge> <Ewan> but i just think that the c/c++ way isn't really any less viable as long as you know what you are doing
00:21 < bridge> <Ewan> it's well documented, it's generally easy to inject your own code where required, i guess it just requires more know how in the first place
00:21 < bridge> <totar> I think it's easier to decomp a C# game than it is to edit a C++ with the source code lol
00:21 < bridge> <Ewan> interesting
00:21 < bridge> <teero777> @totar where did u go
00:22 < bridge> <totar> ok fine
00:23 < bridge> <Ewan> wzp
00:25 < bridge> <Ewan> I'm confused
00:46 < bridge> <zhn> does this pr conflict with spectator clans
00:46 < bridge> <zhn> ye seems like little changes
00:47 < bridge> <zhn> i wonder why its still not merged xd
01:20 < bridge> <heinrich5991> `char` is the pointee type of `char *` maybe
04:02 < bridge> <soulyvevo> rip ddnet.tw
04:12 < bridge> <_gwendal> @blaiszephyr :kek:
04:17 < bridge> <teero777> Is there a entity limit in demos?
04:17 < bridge> <teero777> Could I have 5000 players in a demo?
