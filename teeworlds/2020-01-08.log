01:41 < bridge> [teeworlds] <Assa> https://www.teeworlds.com/?page=docs&wiki=compiling_everything_windows
01:41 < bridge> [teeworlds] <Assa> guide says: install visual studio 2017
01:41 < bridge> [teeworlds] <Assa> bam: You need Microsoft Visual Studio 8, 9, 10, 11, 12, 13 or 15 installed
01:42 < bridge> [teeworlds] <Assa> nevermind, there is a note underneath <.<
01:50 < bridge> [teeworlds] <Assa> bam compiled
01:50 < bridge> [teeworlds] <Assa> now:
01:50 < bridge> [teeworlds] <Assa> configure.lua:367: no c/c++ compiler found
01:51 < bridge> [teeworlds] <Dune> do you have gcc or cl in path?
02:02 < bridge> [teeworlds] <Assa> yes, but how it looks only in the native command prompt, thank you for the hint
02:06 < bridge> [teeworlds] <Assa> I don't need to recompile bam, do I?
02:07 < bridge> [teeworlds] <Dune> no
02:07 < bridge> [teeworlds] <Dune> `bam config` should show you no compiler found
02:10 < bridge> [teeworlds] <Assa> instead of adding blub\bin to the path, i needed to add blub\bin\x64_86\x64 to the path ...
02:10 < bridge> [teeworlds] <Assa> windows doesn't stop to amaze me
02:19 < bridge> [teeworlds] <Assa> so i had to set my PC to developer mode, so it installs the developer package, so it can find the C++ files iam missing when compiling ...
02:50 < bridge> [teeworlds] <Assa> in which system variable does bam look for the headers?
02:50 < bridge> [teeworlds] <Dune> the headers?
03:16 < bridge> [teeworlds] <Assa> okay, how do i tell bam to use a specific compiler?
03:18 < bridge> [teeworlds] <Assa> `bam config compiler=gcc` worked
03:22 < bridge> [teeworlds] <Assa> i switched to `mingw` since it was easier
03:34 < bridge> [teeworlds] <Assa> good news: everything compiles, bad news: i reached the command limit xD
04:45 < bridge> [teeworlds] <Assa> I need some help: clang throws (only with cmake) `-Winconsistent-missing-override` and i have no idea how to disable it
04:47 < bridge> [teeworlds] <Assa> I like how bam is using gcc and cmake is using clang in the gh-actions-workflow
04:49 < bridge> [freenode] <JewZeus> hmm, what to do about dickhead server that bans me immediately /for nothing/ no warning? can I blacklist off these servers/players?
04:50 < bridge> [freenode] <JewZeus> "oh never need to bother looking for a fair game with these dickheads"
04:58 < bridge> [teeworlds] <Assa> `-Wno-inconsistent-missing-override` i learned something today ðŸ™‚
10:35 < bridge> [teeworlds] <Dune> JewZeus: I guess they want to play with their friends
11:43 < bridge> [teeworlds] <ChillerDragon> play on servers with the ip 149.202.127.134 if you want to avoid getting banned ðŸ™‚
12:08 < bridge> [teeworlds] <jxsl13> it's a problem of players thinking they own the servers, that are actually open for everyone to play on. Some servers have a contact info in their server info, where you might get help if someone abuses votes. If you are banned, you might find other servers with similar naming and read the server info there.
13:01 < bridge> [teeworlds] <Dune> I think it's fine that people want to play on a server with friends. Ideally, the server should have votes like Assa showed there: https://www.teeworlds.com/forum/viewtopic.php?pid=123908#p123908
14:56 < bridge> [teeworlds] <Assa> this post is from today 6 o'clock, Dune is always up to date ðŸ˜®
14:58 < bridge> [teeworlds] <Assa> @Dune i get "low fps" when opening the commands screen?
15:02 < bridge> [teeworlds] <Dune> no idea
15:10 < bridge> [teeworlds] <Assa> issued
15:10 < bridge> [teeworlds] <Assa> i think low tier systems my have problems there
16:35 < bridge> [teeworlds] <Assa> nice `build/x86_64/release/objs/engine/client/backend_sdl.o:backend_sdl.cpp:(.text+0xea): undefined reference to `SDL_MinimizeWindow'
16:35 < bridge> [teeworlds] <Assa> `
16:36 < bridge> [teeworlds] <Assa> I can't compile the client, because the linker doesn't find sdl and freetype
17:01 < Oy> yeah, text rendering should be improved :)
17:12 < bridge> [teeworlds] <Dune> The text is rendered several times over to estimate its width
17:34 < bridge> [teeworlds] <jxsl13> vulkan > sdl
17:34 < bridge> [teeworlds] <jxsl13> xD
17:35 < bridge> [teeworlds] <Assa> can you help me compiling the client? I have linker issues
17:35 < bridge> [teeworlds] <Assa> server works <.<
17:36 < bridge> [teeworlds] <Assa> @jxsl13 i wait for Vulcan PR
17:36 < bridge> [teeworlds] <jxsl13> well, vulkan is super much code for super nothing at the end
17:37 < bridge> [teeworlds] <Assa> does vulcan work on all machines?
17:37 < bridge> [teeworlds] <jxsl13> most, I suppose
17:38 < bridge> [teeworlds] <Assa> i checked and yes
18:39 < bridge> [teeworlds] <redix> Older gpus don't support vulkan. The Intel igpus before broadwell don't support it for example
18:41 < bridge> [teeworlds] <redix> For the text rendering vertex buffers would be good for caching. They are supported in opengl 2
18:43 < bridge> [teeworlds] <redix> Vulkan is overkill for tw. Even most opengl 3 features are not really necessary here ðŸ˜…
19:48 < bridge> [teeworlds] <fokkonaut> Hello, can anyone recommand me a max. value for `NET_CONN_BUFFERSIZE` that is still sane enough? Default is at` 1024*32`
19:48 < bridge> [teeworlds] <fokkonaut> Hello, can anyone recommand me a max. value for `NET_CONN_BUFFERSIZE` that is still sane enough? Default is at `1024*32`
20:06 < bridge> [teeworlds] <redix> Using 64K or 128K should be okay. But what are you actually doing? When you only send a rather huge amount of data it might be okay (many votes for example). When you are constantly sending lots of packets, clients with a bad connection will probably still get disconnected after some time
20:06 < bridge> [teeworlds] <jxsl13> times 2until something weird happens ðŸ˜„
20:07 < bridge> [teeworlds] <redix> When you send a rather huge amount once*
20:07 < bridge> [teeworlds] <fokkonaut> Well, I hide some other from scoreboard players based on in which minigame they are, therefore i need to loop through every tee and send some Sv_TeamChange msgs
20:07 < bridge> [teeworlds] <jxsl13> what do you send that exceeds that buffer?
20:08 < bridge> [teeworlds] <fokkonaut> and if there are 64p it will cause overloads
20:08 < bridge> [teeworlds] <fokkonaut> if everyone joins a different minigame at basically the same time
20:08 < bridge> [teeworlds] <fokkonaut> i already improved it so that it doesnt resend teamchanges if they didnt actually change
20:08 < bridge> [teeworlds] <fokkonaut> but i think that still isnt enough
20:09 < bridge> [teeworlds] <jxsl13> times 4 ._.
20:09 < bridge> [teeworlds] <redix> As long as you are not doing it each tick it's fine I think
20:09 < bridge> [teeworlds] <fokkonaut> i dont xD
20:09 < bridge> [teeworlds] <fokkonaut> its currently working without problems with the default size, but yea just wanna be sure
20:11 < bridge> [teeworlds] <fokkonaut> But also i wanna get my rainbow working without overload disconnects xd, therefore i would need it aswell. i will try sending it not each tick to every player, but do you have any ideas how i should handle it?
20:11 < bridge> [teeworlds] <fokkonaut> imagine 64players having rainbow, that would in theory mean 64*64 skin changes pertick xD
20:11 < bridge> [teeworlds] <fokkonaut> so i need to do something, for example send one half in the next tick, so that each player only gets updates every 2 ticks or something
20:11 < bridge> [teeworlds] <fokkonaut> any idea what would be a good workaround here?
20:12 < bridge> [teeworlds] <fokkonaut> Aww man i wish all that stuff would still be in the snap xd
20:15 < bridge> [teeworlds] <redix> The skin change packets are rather big (in comparison to the other packets). When you put them into the snap they would eat up quite a lot of memory ðŸ˜®
20:15 < bridge> [teeworlds] <fokkonaut> @jxsl13 you mean 1024*128?
20:15 < bridge> [teeworlds] <fokkonaut> @redix in 0.6 skins, names, clans, all that was in the snap and worked fine
20:15 < bridge> [teeworlds] <fokkonaut> in 0.5 too
20:15 < bridge> [teeworlds] <fokkonaut> in every version before 0.7 iirc
20:16 < bridge> [teeworlds] <redix> 0.7 has more skinparts and each part has a name field. The packets are way bigger than in 0.6
20:16 < bridge> [teeworlds] <fokkonaut> True
20:17 < bridge> [teeworlds] <fokkonaut> So, any ideas for rainbow here (64player at the same time?) xd with the normal buffer it already starts disconnecting players due to buffer overload when one player has rainbow and there are like 10 players only, but i did send every tick tho
20:19 < bridge> [teeworlds] <redix> Hmm... Strange that there are already problems with one player ðŸ˜•
20:19 < bridge> [teeworlds] <fokkonaut> well, it sends a skinchange to 10 people every tick
20:19 < bridge> [teeworlds] <fokkonaut> thats quite a lot
20:19 < bridge> [teeworlds] <redix> But each connection has a buffer
20:20 < bridge> [teeworlds] <redix> So it should be just one per tick
20:20 < bridge> [teeworlds] <fokkonaut> mhh
20:20 < bridge> [teeworlds] <fokkonaut> well, i dont know why that happens
20:22 < bridge> [teeworlds] <jxsl13> don't change skins on every tick
20:22 < bridge> [teeworlds] <fokkonaut> > @jxsl13 you mean 1024*128?
20:22 < bridge> [teeworlds] <redix> For the start: only send it every second tick. By default snapshots are also only sent every second tick
20:22 < bridge> [teeworlds] <jxsl13> yeah
20:22 < bridge> [teeworlds] <jxsl13> that's 25 changes per second
20:23 < bridge> [teeworlds] <fokkonaut> why 25?
20:23 < bridge> [teeworlds] <fokkonaut> ah ye
20:23 < bridge> [teeworlds] <fokkonaut> ofc xd
20:23 < bridge> [teeworlds] <fokkonaut> sorry
20:23 < bridge> [teeworlds] <fokkonaut> well, 25*64 is still a lot xd will cause overloads
20:23 < bridge> [teeworlds] <jxsl13> like every 10 ticks
20:23 < bridge> [teeworlds] <jxsl13> imo
20:24 < bridge> [teeworlds] <jxsl13> 5 changes per second
20:24 < bridge> [teeworlds] <fokkonaut> isnt that very slow then?
20:24 < bridge> [teeworlds] <jxsl13> for my eyes 10 changes per second is too fast Oo
20:24 < bridge> [teeworlds] <jxsl13> like 10's the limit
20:24 < bridge> [teeworlds] <fokkonaut> the rainbow speed even increases with increasing server runtime
20:24 < bridge> [teeworlds] <fokkonaut> idk why
20:25 < bridge> [teeworlds] <jxsl13> maybe you are blocking the main theread for too long, whick might cause your per tick time to get disturbed
20:25 < bridge> [teeworlds] <jxsl13> thread
20:25 < bridge> [teeworlds] <jxsl13> which
20:25 < bridge> [teeworlds] <jxsl13> like getting above 20ms
20:25 < bridge> [teeworlds] <fokkonaut> How can that happen?
20:25 < bridge> [teeworlds] <jxsl13> wth time intensive operations
20:26 < bridge> [teeworlds] <fokkonaut> mh
20:26 < bridge> [teeworlds] <jxsl13> walking over every tile in the map seems inefficient ðŸ˜„
20:26 < bridge> [teeworlds] <fokkonaut> i know it is
20:26 < bridge> [teeworlds] <fokkonaut> i dont do that xd
20:28 < bridge> [teeworlds] <fokkonaut> that causes the server to lag very hard
20:28 < bridge> [teeworlds] <jxsl13> did you just walk over every map tile ?
20:28 < bridge> [teeworlds] <jxsl13> :O?
20:29 < bridge> [teeworlds] <fokkonaut> no, i tried it some months ago
20:29 < bridge> [teeworlds] <jxsl13> hm k
20:29 < bridge> [teeworlds] <redix> Btw... The buffer does not only contain the raw packet data... Each packet also has additional data ðŸ˜•
20:29 < bridge> [teeworlds] <fokkonaut> so wait, maybe increasing the buffer *4 and sending rainbow every 5th tick fixes it already?
20:30 < bridge> [teeworlds] <redix> Thing is... When there are disconnects for one player already I don't think the protocol can handle 64 at all
20:31 < bridge> [teeworlds] <fokkonaut> mh
20:32 < bridge> [teeworlds] <fokkonaut> let me try something
20:32 < bridge> [teeworlds] <fokkonaut> i will tell the result soon
20:33 < bridge> [teeworlds] <fokkonaut> oh btw, it doenst disconnect for out of buffer, it disconnect for Error sending data
20:40 < bridge> [teeworlds] <fokkonaut> nah, hm test didnt work as expected nvm
20:44 < bridge> [teeworlds] <jxsl13> might make sense to cycle the rainbow updates, like sending 16 updates to the first players every 5 ticks, of the next 16 every 5 + 1 ticks, 16 every 5 +2 , 16 every 5 + 3
20:44 < bridge> [teeworlds] <jxsl13> %5 = 0, = 1, = 2, = 3
20:45 < bridge> [teeworlds] <fokkonaut> `if (tick % 5 == 1)` means every 5+1 tick?
20:45 < bridge> [teeworlds] <jxsl13> yeah
20:46 < bridge> [teeworlds] <jxsl13> 6 % 5 = 1
20:46 < bridge> [teeworlds] <fokkonaut> oh yea
20:47 < bridge> [teeworlds] <fokkonaut> but couldnt i do it every tick then?
20:47 < bridge> [teeworlds] <fokkonaut> 16 in the first, 16 in the 2nd, 16 in the 3rd, 16 in the 4th?
20:47 < bridge> [teeworlds] <jxsl13> that would be %4
20:47 < bridge> [teeworlds] <jxsl13> %4 = 0, 1, 2, 3
20:48 < bridge> [teeworlds] <fokkonaut> why
20:48 < bridge> [teeworlds] <jxsl13> 64 / 16 = 4 -> 4 ticks
20:48 < bridge> [teeworlds] <jxsl13> per tick one
20:48 < bridge> [teeworlds] <jxsl13> part
20:48 < bridge> [teeworlds] <jxsl13> or one batch of 16
20:49 < bridge> [teeworlds] <fokkonaut> should i cycle based on clientid or based on how many players are on, so if there are 16 players, i would cycle through 16 at once or 4 seperated to 4 ticks?
20:49 < bridge> [teeworlds] <jxsl13> I think based on ID
20:49 < bridge> [teeworlds] <jxsl13> or rather
20:49 < bridge> [teeworlds] <fokkonaut> ok
20:50 < bridge> [teeworlds] <jxsl13> not id % 4, but if id is < 16
20:50 < bridge> [teeworlds] <fokkonaut> yy ofc
20:50 < bridge> [teeworlds] <redix> Error sending data in the server console means out of buffer for the client. Error handling is sometimes a bit minimalistic in tw
20:51 < bridge> [teeworlds] <fokkonaut> out of buffer for the client?
20:51 < bridge> [teeworlds] <Assa> the skin change function could probably profit from sending deltas
20:51 < bridge> [teeworlds] <redix> The client sees out of buffer. Server log says error sending data
20:52 < bridge> [teeworlds] <fokkonaut> oh okay
20:52 < bridge> [teeworlds] <fokkonaut> interesting
20:52 < bridge> [teeworlds] <redix> Yeah but delta is only implemented for snapshots ðŸ˜…
20:57 < bridge> [teeworlds] <redix> Problem might also be that you keep sending more data even when a client lost a packet. The server needs to resend all packets and it's even getting more and more.
20:58 < bridge> [teeworlds] <redix> But right now you cannot check whether the client lost a packet from outside the engine ðŸ˜•
21:00 < bridge> [teeworlds] <Assa> can nobody here help me with my linker problem?
21:01 < bridge> [teeworlds] <Assa> i have no clue what's going wrong
21:05 < bridge> [teeworlds] <Assa> `bam config` says that it's using the supplied win64 libraries
21:46 < bridge> [teeworlds] <jxsl13> it says sdl not found ._.
21:47 < bridge> [teeworlds] <jxsl13> and commit diff?
21:47 < bridge> [teeworlds] <jxsl13> that might have caused it?
21:47 < bridge> [teeworlds] <jxsl13> *might look at it on the train :o*
21:53 < bridge> [teeworlds] <jxsl13> any*
22:00 < bridge> [teeworlds] <Assa> looks like a 64/32 bit issue to me
22:13 < bridge> [teeworlds] <Dune> yeah could be
22:14 < bridge> [teeworlds] <Assa> I am using mingw32, is this the issue?
22:20 < bridge> [teeworlds] <Assa> it was the issue ðŸ˜®
22:20 < bridge> [teeworlds] <Assa> and i needed to clean bam before switching the compiler, what the heck
22:23 < bridge> [teeworlds] <Assa> nice my client crashs instantly without any error message or something
22:24 < bridge> [teeworlds] <Dune> don't use mingw32 yeah
22:29 < bridge> [teeworlds] <fokkonaut> dont use bam hehe
22:36 < bridge> [teeworlds] <jxsl13> dont use
22:36 < bridge> [teeworlds] <jxsl13> hehe
22:49 < bridge> [teeworlds] <Assa> mingw32 worked better
22:49 < bridge> [teeworlds] <Assa> at least the server was working, now everything compiles and nothing works
