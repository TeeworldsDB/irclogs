13:46 < Learath2> is there a tokenizer somewhere in the tw source?
13:47 < bridge> [teeworlds] <jxsl13> there are tokens being generated.
13:48 < bridge> [teeworlds] <jxsl13> oh. now I see what a tokenizer is ._. I'm dumb
13:52 < bridge> [teeworlds] <Dune> I don't recall seeing one
13:52 < bridge> [teeworlds] <jxsl13> system.c needs one :'(
22:39 < bridge> [teeworlds] <Assa> theoretically the splitting of strings by whitespaces is a form of tokenization
22:39 < bridge> [teeworlds] <Assa> so in python `"I am assa".split(" ")` -> the split funktion is a tokenizer, but a bad one
23:28 < bridge> [teeworlds] <jxsl13> does the c++ standard library provide such simple functionality?
23:28 < bridge> [teeworlds] <jxsl13> ðŸ˜®
23:29 < bridge> [teeworlds] <jxsl13> ina simple way
23:33 < bridge> [teeworlds] <Dune> boost does
23:45 < bridge> [teeworlds] <jxsl13> oof, external dependencies
23:45 < bridge> [teeworlds] <jxsl13> basically defining 20 template parameters to split a string ðŸ˜„
23:45 < bridge> [teeworlds] <jxsl13> boost classic
23:46 < bridge> [teeworlds] <Dune> just use streams I guess
23:46 < bridge> [teeworlds] <jxsl13> hm hm
23:46 < bridge> [teeworlds] <jxsl13> ss std::stringstream classic ðŸ˜®
23:55 < rand> it's time for strtok
