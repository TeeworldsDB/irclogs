01:19 <@heinrich5991> dunno if you're still here
01:20 <@heinrich5991> BotoX: the extra roundtrip can tell the server that it's about to receive a UDP message, but I guess I can work around that
01:20 < BotoX> once the server does /register
01:20 < BotoX> the response will tell the server that it will get something
01:21 < BotoX> or not
01:21 <@heinrich5991> BotoX: but the UDP message might be faster than the HTTP answer
01:22 < BotoX> that could be possible
01:22 <@heinrich5991> but we can just tell the server it's about to receive something once it does the POST /register
01:22 <@heinrich5991> I guess
01:22 < BotoX> ye
12:11 <@heinrich5991> minus: client/server implementation: https://github.com/teeworlds/teeworlds/compare/master...heinrich5991:http_master7
12:13 <@heinrich5991> (still a TODO left, generating the security token for the server when requesting a fwcheck
12:13 <@heinrich5991> )
12:46 <@heinrich5991> probably too much to quickly scan through though
22:13 < rand> hi, i got some issu building teeworlds
22:13 < rand> seems to be bam's fault
22:13 <@minus> sure, just blame it on bam
22:13 < rand> i have a cl binary from some package that is not a compiler
22:14 < rand> and bam tries to use it
22:15 < rand> except i set compiler.driver to gcc (or clang)
22:15 < rand> i did it on a fresh git cloneâ€¦
22:19 <@minus> master?
22:19 <@minus> `bam compiler=gcc`?
22:19 < rand> compiler=gcc solves it
22:19 < rand> master
22:29 < rand> the new value of `compiler = config.compiler.driver` is local
22:30 < rand> bam.lua:380
22:31 < rand> and GenerateMacOSXSettings/GenerateSolarisSettings/GenerateLinuxSettings don't use the new value
22:32 < rand> dunno why cl is used afterwards
