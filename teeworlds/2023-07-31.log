13:55 < Metal_> hi , not sure im right place.i have problem with compile vanilla source 0.6.x.i used search on teeworlds forum and i got same issue in here
13:55 < Metal_> https://www.teeworlds.com/forum/viewtopic.php?pid=111840#p111840
13:57 < Metal_> tested with visual studio 2010 express edition and vs 2013 i got same error, i dont know how to fix this.also i think its windows sdk problem but not sure.
13:58 < Metal_> I used bam 0.4 and 0.5 for vanilla 0.6.5.
13:59 < bridge_> <d_une> are you working on/have you tried working on unmodified teeworlds sources? (https://teeworlds.com/?page=downloads&id=12543)
13:59 < Metal_> Yes
14:00 < bridge_> <d_une> do you use mingw?
14:01 < Metal_> I tried with teeworlds source uploaded on teeworlds.com
14:01 < bridge_> <d_une> nvm you said vs
14:01 < Metal_> No i used bam , vs2010 and vs2013 , windows 7 64bit
14:02 < bridge_> <d_une> I've seen this quite a bit, I forgot what causes it, trying to thinking
14:02 < bridge_> <d_une> think*
14:02 < bridge_> <d_une> `bam -c` to clear files and `bam -v` to see what it does?
14:03 < Metal_> Actually i tried on other pc that had windows 7 too with vs2010 and windows sdk 7.0a and everything was ok , but after i installed windows sdk7.1with .net 4 i got same error like my pc
14:04 < bridge_> <d_une> if I remember correctly `CNetObj_Projectile` is in a python-generated C file
14:05 < bridge_> <d_une> so perhaps python generation went wrong
14:05 < bridge_> <d_une> what is the first error you get with `bam -c` and `bam` again to recompile?
14:05 < Metal_> i tried to remove .bam folder and objs folder and conigure.lua manually but i got same error
14:05 < bridge_> <d_une> removing these folders/files won't reset the C generated files
14:05 < bridge_> <d_une> hence the `bam -c` request
14:06 < Metal_> another thing that while compiling server on 30/73 file compiler try to open compile.py and md5.py open with notepad automatically
14:07 < Metal_> What python version i needed ? I tried with 3.2.1
14:07 < bridge_> <d_une> any pthon3 should do
14:07 < bridge_> <d_une> can you follow up on my request?
14:08 < Metal_> Yes i can but im not at the desk right now , i will try it tomarrow and tell you what happen
14:10 < Metal_> Thanks dune.
14:13 < bridge_> <d_une> okay, sorry I couldn't be of more help
18:08 < bridge_> <reitw> this can be caused if python is not in the PATH
18:08 < bridge_> <d_une> not sure why building doesnt fail after not finding python then
18:08 < bridge_> <reitw> which isn't by default if u don't select it
18:09 < bridge_> <reitw> it won't, but normally in the compile log he can see smth similar to "command not found"
18:09 < bridge_> <d_une> that should be a critical error though
18:09 < bridge_> <reitw> no clue when I was compiling with bam long time ago It wasn't exiting after getting that error
23:05 < bridge_> <chillerdragon> wot?
23:06 < bridge_> <chillerdragon> A golang
23:07 < bridge_> <chillerdragon> Yea Iâ€™m going to build a go terminal front end if you build me the networking backend library or at least Huffman \:p
