11:56 < matricks> minus: do you even?
11:58 <@minus> fuck, forgot printing shit again
11:58 <@minus> matricks: with above statement: no
12:00 < matricks> :D
12:08 < matricks> minus: I'm getting more and more horny for rust
13:15 < matricks> oy: o/
13:37 < oy> hi :)
13:37 < oy> how's it goin?
13:41 < matricks> forward, slowly :)
13:48 < oy> :)
14:36 <@minus> hey oy, long time no see
14:39 <@minus> matricks: did they make that one thing that was so hard easier?
14:39 <@minus> lifetimes
14:40 < matricks> dunno, I think they are infered a bit more now adays
14:40 < matricks> but you need to learn it
14:40 < matricks> they exist in c++ as well.. kinda.. but not enforced :)
14:40 <@minus> what specifically makes you gay for it?
14:41 < matricks> they high amount of static checking
14:41 <@minus> yeah, C++ lifetimes are stack and delete, but noone checks them
14:41 <@minus> compile time static checks are 10/10
14:42 <@minus> i miss those so bad when dealing with C++ or Python often
14:43 < matricks> I've grown to hate dynamic typing as well so
14:43 < matricks> f u python
14:43 <@minus> python is nice for little thingies
14:43 < matricks> yes, but for larger things.. hirr
14:43 <@minus> but if you have larger stuff that you'd like to have safe
14:43 < matricks> and working with other people.. hirr
14:43 <@minus> haven't done that on python yet
14:44 <@minus> Java, yes
14:44 <@minus> most of the time i'm just like "wtf u doin m8"
14:44 < matricks> I'm not your mate, buddy!
14:44 <@minus> (it's highly asynchronous code, not the easiest thing)
14:45 <@minus> that's one more thing i've come to hate
14:45 <@minus> async stuff with callbacks
14:45 < matricks> hirr
14:45 <@minus> coroutines rock though
14:45 < matricks> thats another reason why I'm intressted in rust.. the threading
14:45 <@minus> does it do user mode threading?
14:45 < matricks> no
14:46 <@minus> what then
14:46 < matricks> it had that before, but they removed it
14:46 < matricks> normal 1:1 threading
14:46 < matricks> just that all the static checking helps with threading
14:46 <@minus> true
14:46 < matricks> because two threads can't access the same data etc
14:47 <@minus> heinrich59…| BotoX: __ is truly private :) ← "truly"
17:55 <@minus> matricks: have you contrived anything in rust?
18:04 < matricks> minus: nope
18:04 < matricks> really really low on time
18:04 < matricks> too bad
18:06 <@minus> aww, you suck
18:06 <@minus> same here though
19:29 < heinrich5991> minus: I did my network course's home work in Rust :)
19:30 <@minus> what did you do?
19:30 < heinrich5991> implement a network stack
19:31 < heinrich5991> the software side of ethernet, IP, TCP and HTTP
19:34 < matricks> coo'l
19:35 < heinrich5991> (and it actually works! you can connect to google.com)
19:35 < heinrich5991> (if it still compiled, which it totally won't)
19:36 <@minus> is it on <publicly accessible source code platform>?
19:39 < heinrich5991> no, it's a private repo on bitbucket
19:39 < heinrich5991> if you wanna see it, I can give you access, but I won't make it public because it contains real names
19:40 <@minus> why'd you put names in it?
19:40 <@minus> we already know your name anyway!
19:40 < heinrich5991> but maybe not the others I'm working with
22:45  * tob is now away: off
