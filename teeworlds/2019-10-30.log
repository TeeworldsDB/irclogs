12:20 < bridge> [teeworlds] <jxsl13> Is anyone knowledgeable about custom c++ allocators?
12:48 < bridge> [teeworlds] <LordSk> @jxsl13 https://www.youtube.com/watch?v=LIb3L4vKZ7U
12:59 < bridge> [teeworlds] <jxsl13> I think you found the best speaker there is. Thank, gotta watch
13:05 < bridge> [teeworlds] <jxsl13> While watching, just stating my problem: The vector table may be located anywhere within the bottom 1 GB of Cortex-M3 address space. The vector table should be located on a 256 word (1024 byte) boundary to insure alignment on LPC176x/5x family devices.
13:06 < bridge> [teeworlds] <jxsl13> gotta reallocate the vector table into aligned ram
13:07 < bridge> [teeworlds] <jxsl13> might be easier ways there, but I'd like to wrap the vector table into a std::array or some other stl container.
14:12 < bridge> [teeworlds] <jxsl13> hm I got seemingly a solution, ain't gotta fiddle around with any allocators, just adding alignas in front of the instantiation of the std::array.
14:12 < bridge> [teeworlds] <jxsl13> alignas(ALIGNMENT) static std::array<uint32_t, VECTORTABLE_SIZE> g_VectorTable;
14:28 < bridge> [teeworlds] <jxsl13> even better: alignas(VECTORTABLE_SIZE * sizeof(uint32_t)) static std::array<uint32_t, VECTORTABLE_SIZE> g_VectorTable;
16:38 < minus> wtf is with these aggressive sendgrid phishing emails to teeworlds addresses
17:46 < Dune> ikr minus
17:48 < Dune> they're forged well enough that it takes me more than 5 seconds to figure it's spam and I don't like that
17:48 < minus> aye
