00:29 < needs> Hi, I was wondering why client only do 10 simultaneous requests at any time when probing servers state?
00:30 < needs> When you refresh servers list, you have to do ~1000 request, why not just send 1000 UDP packets in one shot ?
00:31 < needs> Maybe because too much answer will come in a short period of time and some packets will be droped
00:33 < heinrich5991> needs: br_max_requests can tune that
00:33 < needs> Okay
00:34 < heinrich5991> it defaults to 25
00:34 < needs> But whats the reason to have a limit ?
00:34 < heinrich5991> because the requests will be dropped if you exceed your bandwidth
00:34 < needs> Okay I see
00:35 < heinrich5991> (and teeworlds doesn't try to refetch the server info if it fails for the first time, currently)
00:36 < needs> And, the Token sended by the client to the server, is it for identify who send an answer?
00:37 < needs> I've ead the source code but I'm not sure if there is any other purpose for the tken
00:37 < needs> *read, *token
00:38 < needs> Because, If it is only to identify the server who send an answer, comparing IP aresse should be fine?
00:45 < heinrich5991> needs: the token is currently used to determine whether the incoming server info belongs to the current refresh
00:45 < needs> I see
01:16 < needs> Okay, thank you :)
01:16 < needs> good night
01:17 < heinrich5991> good night
13:30 < heinrich5991> two  sequence bits seem to be unused
13:30 < heinrich5991> probably an oversight. you have 12 bits for ack in the packet header
13:31 < heinrich5991> but NET_MASK_SEQUENCE is defined as 1<<10
13:32 < heinrich5991> the relevant commit is "major update with stuff" which seemed to introduce the whole sequence stuff. that all hasn't been changed since then
13:32 < heinrich5991> (878ede30)
13:45 < EastByte> heinrich5991: in the chunk header the 10bit sequence number also is stored in 12 bits
13:46 < EastByte> bit 6 and 7 are stored twice
13:46 < heinrich5991> interesting
13:47 < WolfAlex_> minus: that password stealing proxy is up again: 109.195.93.25:8301
13:47 < EastByte> but I think that's only because 2 bit would be left free otherwise and packing/unpacking like that requires less cpu instructions
13:48 < heinrich5991> this is network. no need to save 5 cpu instructions :)
13:53 <@minus> he's got a point
13:53 < Henningstone> rather an new ip :/
16:00 < heinrich5991> http://higherorderfun.com/blog/2012/05/20/the-guide-to-implementing-2d-platformers/
16:02 < heinrich5991> fstd: does your tar support unpacking of .tar.gz .tar.bz2 or similar without extra flags?
16:03 < fstd> no (but GNU tar is in pkgsrc, for people that need this behavior for whatever reason)
