07:52 <@minus> https://www.teeworlds.com/forum/viewtopic.php?id=11111 nice topic id, i shall delete it
07:53 < PsychoGod_> lol, it's so n1ce :D
09:52 <@minus> EastBite: you there?
09:53 <@minus> nvm
15:33 <@matricks> minus: dude.. :D
15:33 <@matricks> minus: unlimited detail guys are back!
15:34 <@minus> help me refresh my memory
15:34 <@matricks> http://www.youtube.com/watch?v=5AvCxa9Y9NU
15:34 < Nimda3> [YouTube] Title: Euclideon Makes World’s Most Realistic Graphics | Rating: 4.29/5.00 | Views: 1,085
15:34 <@matricks> their new video
15:42 <@minus> looks good, but not realistic
15:42 <@matricks> they still claim that they will bring that to games
15:43 <@matricks> and they are over selling it like hell
15:43 <@minus> probably
15:43 <@matricks> minus: I mean, wolfenstein has unlimited detail as well, the problem is that we can't ship more data on a blu-ray
15:43 <@minus> ^^
15:43 <@minus> everything is generated?
15:44 <@matricks> well, the megatextures are baked, and we could bake em on a higher resolusion
15:44 <@minus> generated textures + geometry interpolation?
15:44 <@minus> hm
15:44 <@matricks> we could only fit like.. 35gb of highly compressed textures
15:46 <@matricks> rest is for sound, movies etc etc
15:47 <@minus> do you have to install the whole game to disk?
15:47 < Learath2> generate textures on the fly
15:47 <@minus> or can you, like, stream textures from disc
15:47 <@matricks> minus: they can be streamed and have to on consoles like 360 and ps3
15:48 <@minus> ah, true
15:48 <@matricks> Learath2: well, you can, but that's not "real" detail
15:49 <@matricks> there are methods for taking textures and doing weird stuff to them to compress em
15:49 <@matricks> 64k demos does loads of this stuff
15:49 <@matricks> and there is.. I can't remember the name of it.. a third party library that does some weird real-time generation of textures
15:51 <@minus> trading disk space for cpu time
15:51 <@matricks> yeah
15:51 <@minus> if you know how long those demos precalc you can figure how long it'd take a game
15:51 <@minus> and if you want "unlimited detail" you'd have to re-generate them on the fly when zooming in
15:52 <@matricks> not the complete texture but yeah, you need to add 3/4 of it
15:55 < Learath2> matricks: as you are a bit more in the industry do you have any idea why noone bothers with liquid physics
15:55 < Learath2> the last couple of games i played featured cylinders of liquid flowing out of the whiskey bottle
16:25 <@matricks> Learath2: hard problem :)
16:25 <@matricks> Learath2: hard problem for little gain more or less
16:25 <@matricks> Learath2: checkout portal 2 or something
16:30 < heinrich5991> TIL you can update CPUs
16:31 < heinrich5991> apparantly some CPUs accept update to their microcode
18:12 < ***> Buffer Playback...
18:12 < BotoX> [16:40:24] you have to write the microcode on every boot
18:12 < BotoX> [16:40:34] the cpu loads it from the bios
18:12 < heinrich5991> [16:41:23] ah
18:12 <@minus> [16:45:09] twisted, gevent and eventlet are not available on python 3, and asyncio is too hard to use for me :(
18:12 < heinrich5991> [16:45:47] twisted :(
18:12 <@minus> [16:46:31] gevent looked awesome
18:12 <@minus> [16:46:50] but apparently greenlet (which it uses) does some nasty ASM stuff
18:12 <@minus> [16:47:42] tornado does py3
18:12 <@minus> [16:47:55] but what must i see: Copyright 2009 Facebook
18:12 < heinrich5991> [16:48:22] so what? :)
18:12 <@minus> [16:52:15] nothing
18:12 < koomi> [16:55:49] heinrich5991: malware in microcode is very very unprobable
18:12 < koomi> [16:56:04] there is not much you can hide in an implementation of a single machine instruction
18:12 <@minus> [17:11:27] hint when installing shit from pypi today: add --index-url https://pypi.gocept.com/simple to your install command
18:12 <@minus> [17:11:36] pypi giving me ~30KB/s today
18:12 < heinrich5991> [17:22:44] koomi: people do very clever hacks all the time :)
18:12 <@minus> [17:33:10] i want to create a new mastersrv in python (again) and also run a web server in the same process (flask, to make an api)
18:12 < heinrich5991> [17:33:33] aha
18:12 < EastBite> [17:34:00] add a nice webinterface for banning servers
18:12 <@minus> [17:34:03] but it's not that simple because you normally start web stuff with gunicorn or uwsgi
18:12 <@minus> [17:34:12] EastBite: part of the plan
18:12 <@minus> [17:34:44] tried to find something to integrate everything into one main loop, but it's difficult
18:12 < EastBite> [17:34:56] ^ I hate this problem
18:12 <@minus> [17:35:12] a possibility would be to just run the actual mastersrv stuff in a new thread
18:12 <@minus> [17:35:29] not sure if i can just fire up a thread from uwsgi though
18:12 < EastBite> [17:36:36] minus: btw, my twstat is doing strange things aftere a long runtime and I can't trace them back and everything sucks
18:12 <@minus> [17:36:41] i guess i'll start trying to build the mastersrv part, basing upon asyncio (py3.4 or gtfo)
18:12 <@minus> [17:37:03] EastBite: mine was too, /should/ be fixed now
18:12 < EastBite> [17:37:29] it's hard to handle events which are fired abuot 10 seconds too late
18:12 <@minus> [17:41:57] hm?
18:12 < EastBite> [17:44:21] I mean if the refreshing of the serverlist finishes their might still callbacks be called later
18:12 < EastBite> [17:44:27] for the reverse dns lookup for example
18:12 <@minus> [17:44:46] hm
18:12 <@minus> [17:44:54] why do you do rdns?
18:12 < EastBite> [17:45:05] just an additional feature
18:12 < EastBite> [17:45:48] but if a server load fails I somehow need to tell those callbacks that they shouldn't progress anymore
18:12 < EastBite> [17:45:53] and it gets pretty unstructured there
18:12 < EastBite> [17:45:56] nvm
18:12 < ***> Playback Complete.
18:13 <@minus> i just realized asyncio is unsuitable for mastersrv
18:14 < EastBite> why?
18:14 <@minus> hold on, need to rerealize
18:17 <@minus> because it does not offer microthreads/parallelization
18:18 < EastBite> I don't realize o0
18:18 < EastBite> what are microthreads?
18:19 <@minus> lightweight threads, not real threads
18:21 <@minus> well, the main problem is that using a non-callback based concept is close to impossible with using just one socket
18:21 <@minus> i'll have to build something myself
19:03 < BotoX> or just make it in C ( ͡° ͜ʖ ͡°)
19:24 <@minus> BotoX: having nice coroutines in C is even harder than in python
19:25 <@minus> i've it largely sorted
20:39 < laxa> Does anyone knows where the sprite for the double jump is rendered ?
23:07 < BotoX> search for it, I guess?
23:07 < BotoX> kinda late, eh
