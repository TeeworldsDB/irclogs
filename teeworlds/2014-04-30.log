10:08 < ghost91> oioioi
10:08 <@matricks> OI!
10:13 < JulianAssange> aussie aussie aussie
10:13 < JulianAssange> oi oi oi m8
10:24 < yemDX`> oi oi oi ! oi oi oi !
10:24 <@minus> aloha
10:27 <@minus> http://en.cppreference.com/w/cpp/regex why
10:29 <@matricks> meh, why not
10:29 <@matricks> rusts regex library is much cooler however :)
10:29 <@minus> stdlib bloat
10:30 <@matricks> minus: http://blog.burntsushi.net/rust-regex-syntax-extensions
10:31 <@minus> do you like rust?
10:31 <@matricks> I'm following with intresst
10:31 <@matricks> and I'm an author on it :)
10:31 <@minus> a rather quick look at it just made me "meh"
10:32 <@minus> i don't see any killer features over C++
10:32 <@matricks> one killer feature is that it isn't c++ :D
10:33 <@minus> less complex?
10:33 <@matricks> ya
10:33 <@matricks> it has better "pointer-implementation"
10:33 <@minus> that does soundi nterseting
10:33 <@minus> interesting even
10:33 <@matricks> better module system
10:33 <@minus> well C++ doesn't have that
10:33 <@minus> good point
10:33 <@minus> #include must die
10:34 <@matricks> # must die
10:34 <@minus> right
10:34 <@matricks> c++ is 2 languages on top of each other
10:34 <@minus> 3 even
10:34 <@minus> if you count templates
10:35 <@matricks> naa, they are a part of the second part
10:35 <@minus> god template metaprogramming is horrible
10:35 <@matricks> the code is compiled in 2 separate compielrs
10:35 <@minus> k
10:35 <@matricks> the preprocessor and then the actual compiler
10:35 <@matricks> http://www.rust-lang.org/
10:35 <@matricks> lol.. check the meaning of *
10:35 <@minus> isn't rust's syntax a but weird?
10:35 <@matricks> minus: well, isn't c++ syntax a bit weird?
10:36 <@matricks> minus: also, bug plus for rust.. mutability is the exception, not the default
10:37 <@minus> i like the way python assigns objects to names, not variables
10:37 <@minus> and most stuff is immutable too
10:37 <@minus> most native stuff at least
10:37 <@minus> like ints and strings
10:37 <@minus> ok, that's about it. so not "most"
10:38 < koomi> tuples
10:38 <@minus> how well does rust interact with C(++)?
10:38 <@minus> right, tuples too
10:38 <@matricks> nothing interacts well with c+
10:38 <@matricks> c++
10:38 <@minus> :D
10:38 <@matricks> they have a way to bind to C however
10:38 <@minus> does it support coroutines?
10:38 <@minus> easy way to bind C? or shitty
10:39 <@minus> if rust has coroutines then C++ can suck it
10:40 <@minus> also, what do you do on rust?
10:40 <@matricks> I did some optimizations :)
10:40 <@minus> does it (or its reference implementation) use llvm?
10:40 <@matricks> it's written in rust :)
10:41 <@matricks> and use llvm
10:41 <@minus> rust is written in rust?
10:41 <@matricks> minus: ya
10:41 <@minus> that's pretty sweet
10:41 <@minus> but core parts implemented in C?
10:41 < koomi> even the RTS is written in rust
10:41 <@matricks> minus: no, it's rust
10:42 <@minus> matricks: right, i was thinking of python. rust does not need to be interpreted
10:42 <@matricks> I don't think you have coroutines actually, but you have lambdas etc
10:43 <@minus> :(
10:46 <@minus> needs just a simple yield keyword
10:46 < koomi> it might be possible to implement them in a library
10:46 <@matricks> minus: think I can cause a bit of problems to implement with object lifetimes etc
10:48 < koomi> also they have those lightweight green threads which can sometimes be used like coroutines
10:48 <@matricks> ya
10:50 <@matricks> you have 3 different pointers in rust as well
10:51 <@matricks> owning, references, and raw
10:52 <@minus> uinique, shared, and normal?
10:52 <@matricks> unique, reference and normal :)
10:53 <@minus> so no ref counting on second?
10:53 <@matricks> no
10:53 <@minus> k
10:54 <@minus> is there a point in having pointers AND references?
10:54 <@matricks> that pointer is garanteed to die before the object it's pointing to dies
10:54 <@minus> mh
10:54 <@matricks> a reference is always valid.. a pointer isn't
10:54 <@minus> that's nice
10:54 <@minus> that is a very sane definition
10:54 <@matricks> if you wanna use a unique pointer, you have to take the refences of it
10:55 <@matricks> you have to check the pointer before you can use it
10:55 <@minus> implicit?
10:55 <@matricks> explicit
10:55 <@minus> right, implicit makes no sense
10:56 <@matricks> or have they removed that O.o
10:58 < koomi> a reference is also always valid, but does not take ownership of the pointer
10:59  * minus np: Darkest Hour - Deliver Us
11:04 < heinrich5991> matricks: I'm also following rust development! you wrote a part of the regex library? :)
11:11 < BotoX> watch out!
11:11 < BotoX> firefox australis is now in stable!
11:11 < BotoX> don't update or it'll kill you :v
11:12 <@minus> BotoX: i tried to kill myself yesterday
11:12 <@minus> i got lucky
11:12 < BotoX> did you died
11:12 <@minus> it wasn't in arch's repo yet
11:12 < BotoX> hehe
11:13 <@minus> still 28
11:13 < BotoX> I have to flag it in my pacman conf
11:13 < BotoX> to not update it
11:13 <@minus> anyway, i doubt it'd affect my firefox
11:13 < BotoX> australis will affect everyone
11:13 <@minus> i'll go update now
11:13 < BotoX> noone is safe
11:13 < BotoX> pls no
11:13 < BotoX> don't do it 
11:13 <@minus> Repository     : extra
11:13 <@minus> Name           : firefox
11:13 <@minus> Version        : 28.0-1
11:13 <@minus> pff
11:14 < BotoX> arch confirmed master race
11:14 <@minus> :D
11:17 <@matricks> heinrich5991: nope
12:06 < Learath2> BotoX: what is the problem with firefox 29
12:44 <@minus> Learath2: apparently it's been chrominized
12:59 < Learath2> meh stealing the interface doesnt sound mozilla like
13:48 < BotoX> it's worse than chrome
13:48 < BotoX> it's literally hitler
13:50 < BotoX> ／人◕ ‿‿ ◕人＼ Do you want to make a contract with me?! It's Walpurgisnacht 2014!
14:40 < heinrich5991> BotoX: https://xkcd.com/725/
14:41 < BotoX> I'm telling you man
14:41 < BotoX> it is literally hitler
14:41 < BotoX> I'm austrian, trust me, I know :lenny:
14:42 < heinrich5991> $ pacman -Syu
14:43 < heinrich5991> ... firefox-29.0-1 ...
14:43 < heinrich5991> ... [Y/n] y
14:43 < BotoX>  nnnnnnn
14:43 < BotoX> nnn
14:43 < BotoX> n
14:43 < BotoX> n
14:43 < BotoX> n
14:43 < BotoX> also, do: dig +short TXT google-public-dns-a.google.com
14:45 < heinrich5991> haha
14:48 <@minus> old :D
14:49 <@minus> BotoX: you are too slow for the internet!
14:49 < BotoX> :(
