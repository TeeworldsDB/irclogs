01:41 < bridge> [teeworlds] <Assa> usually i go with `sv_register 0` in debugging
01:49 < bridge> [teeworlds] <ChillerDragon> i usually go with ``debug 1`` in debugging :troll:
01:53 < bridge> [teeworlds] <Assa> if you go debug in compilation you go dbg_dummies
01:53 < bridge> [teeworlds] <Assa> dbg_dummies are the most usefull shit i have ever seen
01:55 < bridge> [teeworlds] <ChillerDragon> +1
02:10 < bridge> [teeworlds] <jxsl13> I'm writing golang stuff
02:10 < bridge> [teeworlds] <jxsl13> that gets master server data
14:19 < bridge> [teeworlds] <jxsl13> debugging is kinda hard
15:21 < bridge> [teeworlds] <jxsl13> does anyone know how to build the masterserver with debug flags properly, as it doesn't seem to be printing any debugging at all
15:21 < bridge> [teeworlds] <jxsl13> ...
15:22 < bridge> [teeworlds] <jxsl13> `cmake -DCMAKE_BUILD_TYPE=Debug -DDEV=On ..` doesn't seem to work?
15:25 < bridge> [teeworlds] <jxsl13> ._. I might be dumb üòÆ
16:08 < bridge> [teeworlds] <heinrich5991> what do you mean, printing debugging?
16:56 < bridge> [teeworlds] <jxsl13> I'd like to retrieve the server list from the master server utilizing go, but it fails or seemingly nothing happens and I'd like to debug that
16:59 < bridge> [teeworlds] <heinrich5991> the master server doesn't output anything, neither in debug nor in release mode
16:59 < bridge> [teeworlds] <heinrich5991> your best bet is probably using wireshark to monitor the port you're communicating on
16:59 < bridge> [teeworlds] <jxsl13> well, it seems to output stuff when servers register to it
16:59 < bridge> [teeworlds] <jxsl13> but nothing when a client requests the list, seemingly
17:00 < bridge> [teeworlds] <jxsl13> is the client part also handled in masterserver.cpp?
17:00 < bridge> [teeworlds] <heinrich5991> yes
17:00 < bridge> [teeworlds] <heinrich5991> https://github.com/teeworlds/teeworlds/blob/44a0260372d170cdd51b78418708e506567f5513/src/mastersrv/mastersrv.cpp#L390-L407
17:00 < bridge> [teeworlds] <heinrich5991> this is the part where the masterserver sends the list
17:01 < bridge> [teeworlds] <heinrich5991> wait
17:01 < bridge> [teeworlds] <heinrich5991> it does have a debug output there (even in release mode)
17:01 < bridge> [teeworlds] <heinrich5991> sorry, I misremembered
17:01 < bridge> [teeworlds] <jxsl13> dbg_msg, shouldn't it usually just print when built with debug flags?
17:02 < bridge> [teeworlds] <heinrich5991> n
17:02 < bridge> [teeworlds] <heinrich5991> o
17:02 < bridge> [teeworlds] <jxsl13> oh
17:02 < bridge> [teeworlds] <heinrich5991> they always print
17:03 < bridge> [teeworlds] <ChillerDragon> is it possible to work with multiple layers at once in map editor?
17:03 < bridge> [teeworlds] <ChillerDragon> https://cdn.discordapp.com/attachments/490150878934990850/668485745115267134/unknown.png
17:03 < bridge> [teeworlds] <ChillerDragon> looks like
17:03 < bridge> [teeworlds] <ChillerDragon> but how
17:04 < bridge> [teeworlds] <heinrich5991> check where `pEditLayers` is set
17:04 < bridge> [teeworlds] <ChillerDragon> https://cdn.discordapp.com/attachments/490150878934990850/668485945661718549/unknown.png
17:04 < bridge> [teeworlds] <ChillerDragon> i guess shift it is
17:05 < bridge> [teeworlds] <ChillerDragon> but idk how to do it exactly
17:05 < bridge> [teeworlds] <ChillerDragon> in ddnet you can press shift and them click the layers you want to edit and select multiple ones
17:05 < bridge> [teeworlds] <ChillerDragon> in vanilla i dont get anything happening while pressing shift
17:16 < bridge> [teeworlds] <ChillerDragon> hm seems like its this area shift draggy thing and vanilla does not support multi layer editing but i have no clue what it is looping over then
18:29 < bridge> [teeworlds] <redix> i have put some work into the textrenderer. i basically added a caching mechanism and made a few general optimizations
18:29 < bridge> [teeworlds] <redix> i could use some testers with different hardware üòÑ for me it gives + 5-40% fps increase on an nvidia gpu and + 5-20 % on an intel igpu. in extreme cases (serverbrowser + console) it can even go up to +80%
18:29 < bridge> [teeworlds] <redix> just to mention: when you are already close to the gpu limit there won't be major improvements (e.g. 4K on an igpu)
18:29 < bridge> [teeworlds] <redix> for anyone who is interested... code and artifacts are here:
18:29 < bridge> [teeworlds] <redix> https://github.com/axblk/teeworlds/tree/vbo
18:44 < bridge> [teeworlds] <ChillerDragon> nice thanks @redix
18:44 < bridge> [teeworlds] <ChillerDragon> github artifacts are bae
18:44 < bridge> [teeworlds] <heinrich5991> @redix can you explain how this differs from the similar-sounding (to me, I don't know much about graphics) https://github.com/ddnet/ddnet/pull/861 ?
18:45 < bridge> [teeworlds] <heinrich5991> @ChillerDragon add them for ddnet0.6? üôÇ
18:45 < bridge> [teeworlds] <ChillerDragon> 0.6 in 2020 xd
18:45 < bridge> [teeworlds] <ChillerDragon> yea but was thinking about it @heinrich5991
18:46 < bridge> [teeworlds] <redix> @heinrich5991 it only requires opengl 2.1 and you can easily enable the caching+batching for all texts in tw
18:46 < bridge> [teeworlds] <redix> i think in ddnet the textcontainer is only used for the chat
18:46 < bridge> [teeworlds] <redix> and the opengl 3.3 implementation switches shaders too often =\
18:48 < bridge> [teeworlds] <heinrich5991> what does that mean? "switching shaders too often"
18:48 < bridge> [teeworlds] <heinrich5991> aren't shaders usually static for the runtime?
18:49 < bridge> [teeworlds] <redix> it basically uses different shaders for everything, so you have a lot pretty expensive state changes
18:50 < bridge> [teeworlds] <heinrich5991> forgive me my curiosity: what is everything, what does it e.g. have different shaders for?
18:50 < bridge> [teeworlds] <heinrich5991> I could imagine: tilemaps
18:50 < bridge> [teeworlds] <heinrich5991> end of enumeration üòõ
18:51 < bridge> [teeworlds] <redix> https://github.com/ddnet/ddnet/tree/master/data/shader
18:51 < bridge> [teeworlds] <redix> no clue why so many are used üòÑ
18:52 < bridge> [teeworlds] <redix> usually that's just fine since you batch all draw calls per shader together... the tw rendering system does not üòÑ
18:55 < bridge> [teeworlds] <redix> in general: it's no crucial since tw basically runs on a toaster... but it neither helps performance =\
18:56 < bridge> [teeworlds] <redix> but the performance is better for maprendering since it uses buffering on the gpu
18:56 < Oy> opengl 2.1 should be alright hardware wise
18:58 < bridge> [teeworlds] <redix> comparison with ddnet: 750 fps vs 1300 fps in the serverbrowser on my nvidia card üòÑ
19:00 < bridge> [teeworlds] <heinrich5991> which is which?
19:01 < bridge> [teeworlds] <redix> ddnet 750
19:05 < bridge> [teeworlds] <redix> seems like ddnet only uses the text container for a few ingame elements but not for the menus
19:06 < bridge> [teeworlds] <heinrich5991> hm ok
19:07 < Oy> performance increases a lot in the editor when tile information is shown
19:09 < bridge> [teeworlds] <redix> i didn't read all the code but it seems like you have to use the textcontainer explicitly in ddnet... so you have to add single elements
19:09 < bridge> [teeworlds] <redix> my approach just records text draw calls, batches them together and just updates the gpu buffer when something changed
19:11 < bridge> [teeworlds] <redix> btw: you can disable the buffer with gfx_text_cache 0
19:12 < bridge> [teeworlds] <redix> should still be faster than 0.7.4 since it has lower overhead
19:16 < bridge> [teeworlds] <Sonix> humm is it me or i notice no changes
19:18 < bridge> [teeworlds] <Sonix> uh well i have better fps on srv browser
19:18 < bridge> [teeworlds] <Sonix> compared to gamer client
19:18 < bridge> [teeworlds] <redix> well it depends on your hardware... and how much text it shown on screen
19:18 < bridge> [teeworlds] <redix> with an intel hd 620 on wqhd i only get +5 %
19:18 < bridge> [teeworlds] <redix> in 1080 it's way more
19:19 < bridge> [teeworlds] <Sonix> 0.7.4 and gamer i get 400-500fps servers page
19:19 < bridge> [teeworlds] <Sonix> with ur client 1k
19:19 < bridge> [teeworlds] <redix> üëç
19:20 < bridge> [teeworlds] <Sonix> ati radeon gpu
19:20 < bridge> [teeworlds] <Sonix> rx580
19:22 < bridge> [teeworlds] <Sonix> and around +100-200 fps ingame
20:40 < bridge> [teeworlds] <redix> with gfx_finish 0 i get 1900 fps in the server browser :O
20:40 < bridge> [teeworlds] <redix> i thought this was 0 by default...
20:41 < bridge> [teeworlds] <heinrich5991> `gfx_finish`?
20:42 < bridge> [teeworlds] <redix> it waits until opengl finished the current frame
20:42 < bridge> [teeworlds] <redix> ddnet has 0 by default
20:52 < bridge> [teeworlds] <Sonix> üòÆ
20:54 < bridge> [teeworlds] <Sonix> didn't know about that lol
21:20 < bridge> [teeworlds] <heinrich5991> I don't understand what that means
21:35 < bridge> [teeworlds] <redix> it blocks the thread until all opengl operations you submitted are completely executed... the cpu waits for the gpu to finish all work. it's for example useful to determine how much time certain operations on the gpu took
