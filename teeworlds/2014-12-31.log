01:12 < Rajh> Hey !
06:19 < JulianAssange> quick C question: difference between i++ and ++i?
10:46 < EastByte> JulianAssange: quick answer: i++ gives i back and increments afterwards, ++i increments first gives new i back
12:26 <@minus> just out of curiosity, what would be the long answer, EastByte
12:27 <@minus> that i++ is an lvalue while ++i is an rvalue,something else?
12:33 < EastByte> minus: by "quick answer" I meant that I'm responding shortly after the question (ironically)
12:33 < EastByte> in fact I don't know anything else detailed about it
12:34 <@minus> :3
12:38 < EastByte> minus: are you sure that i++ is a lvalue and not vice versa?
12:39 < EastByte> hmm I' confused right now
12:39 <@minus> i'm not quite sure that it is
12:39 < EastByte> I'm*
12:39 <@minus> i'm sure that ++i is an rvalue though
12:42 < EastByte> http://stackoverflow.com/questions/371503/why-is-i-considered-an-l-value-but-i-is-not#371553
12:42 < EastByte> quite interesting
12:44 < EastByte> there are differences in c and cpp
12:44 < EastByte> ++i = 2; works in cpp but not in c
12:51 <@minus> aye
13:33 < Learath2> Does the client have some sort of tick time of its own independant of server ?
13:44 < EastByte> Learath2: the client locally just uses a microsecond timestamp afaik
13:48 < Learath2> EastByte what kind of time does Client()->LocalTime return ?
13:51 < EastByte> m_LocalTime = (time_get()-m_LocalStartTime)/(float)time_freq();
13:51 < EastByte> looks like number of seconds since client start
13:53 < EastByte> okay more like number of seconds since client connect
21:50 < tomew> hi, quick banrequest for 176.31.83.114 - fake modification of mine
22:07 < eeeee> that's not how it works
22:07 < eeeee> only mods that claim to be vanilla are banned
22:08 < eeeee> mods that claim to be other mods are not policed
22:08 < eeeee> tomew: ^
22:18 < tomew> oh an servers who are made for stealing my accounts will be banned?
22:18 < tomew> isnt that the same?
22:19 < eeeee> it's not the same
22:21 < eeeee> account stealing using fake servers is a problem common for all modifications that make use of account system
22:21 < eeeee> however vanilla does not have any concept of an account and therefore would not be concerned about any of those issues
22:23 < eeeee> tomew: the only way to resolve your problem is to implement a more secure account system in an alternative client. if you have the coding skills, i'd suggest DDNet client as that's like the second popular one after vanilla
22:24 < tomew> my account system is secure enough
22:24 < tomew> but the problem is that the owner of the fake servers is going to destroy mine's
22:26 < eeeee> if it's so easy to destroy how can you call that secure?
22:34 < BotoX> ayy lmao
23:05 < JulianAssange> ayy lmao
