08:23 < bridge> [teeworlds] <n000b> Nah it is an external tool
08:23 < bridge> [teeworlds] <n000b> As far as i knoe
08:23 < bridge> [teeworlds] <n000b> As far as i know
08:24 < bridge> [teeworlds] <n000b> I used it and works perfectly. Idk where i downloaded it from tho.
08:32 < bridge> [teeworlds] <ChillerDragon> It’s part of the tool kit and is shipped with every client
09:07 < bridge> [teeworlds] <ChillerDragon> Ikr report and all but the support channel has like 30 ads in it :/
12:11 < bridge> [teeworlds] <Dune> All in one hour, yeah
12:43 < Dune> rand, there's some "pure luck" tee online
12:43 < Dune> I see your influence is strong 
12:44 < rand> :D
15:11 < Learath2> Eh, I’ll have to code a ddnet friendly version of the demo extensions anyway, I’ll pull req both, you can take whichever you prefer
15:34 < Dune> Learath2, to make them more flexible/extensible?
15:50 < Learath2> Yeah, in particular extensible without breaking compatibility in either direction
15:52 < Dune> sounds cool
16:37 < rand> jxsl13: I reworked the tw_api.py to add some class similar to of CNetBase (here https://github.com/nheir/teeworlds/blob/refactor/tw_api/scripts/tw_api.py )
16:38 < Learath2> Is gamecontroller.cpp:L929 even reachable? I don't see how gamestate can become anything other then IGS_END_MATCH
16:42 < Learath2> I see, it's an ugly fix to allow map changes during states that aren't warmup or running
17:51 < bridge> [teeworlds] <jxsl13> looks way cleaner now, rand (Y)
17:52 < bridge> [teeworlds] <jxsl13> for _ in (0,): -> while True
18:06 < rand> well, yes and no
18:06 < rand> yes because of the break, and no because of the infinite loop
18:07 < bridge> [teeworlds] <jxsl13> this is seemingly an infinite loop ? for _ in (0,)
18:17 < rand> no, it iterates on the value of the tuple (0), so only once
18:35 < bridge> [teeworlds] <jxsl13> ah, ok
