14:31 < ChillerDragon> Is this map_resave tool still working and how? I assumed it takes 2 args first being input and second output. But if I execute it it does not throw and error or create a new map
14:38 <@heinrich5991> map_resave was broken for a long time (maybe since its inception), I'm not sure it got fixed
14:38 <@heinrich5991> what's the use case?
14:42 < ChillerDragon> i want to build a map tool and thought basing it on mapresave makes sense
14:42 < ChillerDragon> it claims to be writing but i see nothing happening
14:43 < ChillerDragon> https://zillyhuhn.com/cs/.1595335406.png
14:43 < bridge_> [teeworlds] <heinrich5991> I know that it at some point produced subtly wrong maps that still load in teeworlds but contain random data at the end of data/item data
14:43 < ChillerDragon> ah no i do not see any file generated
14:45 < ChillerDragon> or do you have something nifty in libtw2 that u can recommend?
14:45 < ChillerDragon> oof reading rust so hard
14:46 < bridge_> [teeworlds] <heinrich5991> reading unfamiliar languages is hard
14:46 < bridge_> [teeworlds] <heinrich5991> no, I can't write datafiles IIRC
14:46 < bridge_> [teeworlds] <heinrich5991> only read them
14:46 < ChillerDragon> hm
14:48 < bridge_> [teeworlds] <heinrich5991> try `strace ./map_resave
14:48 < bridge_> [teeworlds] <heinrich5991> try `strace ./map_resave`
14:52 < bridge_> [teeworlds] <heinrich5991> and check what files it tries to access
15:41 < ChillerDragon> https://paste.zillyhuhn.com/c1
15:41 < ChillerDragon> lgtm
15:41 < ChillerDragon> oh wait
15:41 < ChillerDragon> xd
15:42 < ChillerDragon> im so blind
15:42 < ChillerDragon> ok it seems to prioritize ~/.teeworlds and i exepected the map to be in local dir
17:05 < ChillerDragon> can one please link a good ressource that explains tw setup code? :) like kernel and interfaces etc
17:06 < bridge_> [teeworlds] <Dune> that exists?
17:06 < ChillerDragon> doubt
17:06 < ChillerDragon> create one then pls :)
17:06 < ChillerDragon> i feel like we need it
17:06 < bridge_> [teeworlds] <Dune> go ahead
17:06 < ChillerDragon> i dont get it tho :/
17:06 < ChillerDragon> i hate using my brain
17:18 < bridge_> [teeworlds] <Learath2> there is a kernel, the client/server registers classes in it, you can get a pointer to any class registered in the kernel from the kernel, done
17:40 < ChillerDragon> hm sounds so easy when u say it but can i get a kernel in tools? because as far as i see it IKernel::RequestInterfaces() requires a CClient?
17:41 < ChillerDragon> or does one even need a kernel for a tool?
17:42 < bridge_> [teeworlds] <Learath2> Well you probably do need one because most parts of the tw code rely on it being there
17:43 < ChillerDragon> im seems to glue all the parts together 
17:45 < bridge_> [teeworlds] <heinrich5991> kernel is a global variable that isn't a global variable ðŸ˜›
17:45 < bridge_> [teeworlds] <heinrich5991> everyone uses it to find the other modules
17:45 < ChillerDragon> yea but i fail to create a kernel
17:46 < ChillerDragon> https://github.com/teeworlds/teeworlds/blob/a5afae5e38a84c6287eb3813eeb525e71dce58c9/src/engine/client/client.cpp#L2610
17:46 < ChillerDragon> do i need that?
17:46 < bridge_> [teeworlds] <heinrich5991> no. the server also manages to create a kernel
17:46 < bridge_> [teeworlds] <heinrich5991> `IKernel *pKernel = IKernel::Create();` is what you need to create a kernel
17:47 < ChillerDragon> oh yea ok that makes sense
20:10 < ChillerDragon> https://zillyhuhn.com/cs/.1595362211.png
20:10 < ChillerDragon> is this a warning in stdlib or in tw? :D
20:15 < bridge_> [teeworlds] <!gerdoe> i think stdlib
20:48 < bridge_> [teeworlds] <heinrich5991> tw
21:20 < bridge_> [teeworlds] <!gerdoe> sure?
22:47 < bridge_> [teeworlds] <heinrich5991> yes: inlined from `fs_makedir_recursive`
