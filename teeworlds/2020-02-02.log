04:23 < bridge> [teeworlds] <jxsl13> forum spam escalation.
11:05 < bridge> [teeworlds] <Sonix> That idea from JewZeus could work on casual servers other than that i'd prefer a matchmaking system
14:45 < bridge> [teeworlds] <fokkonaut> @heinrich5991 why did you remove g_Config?!...
14:49 < bridge> [teeworlds] <fokkonaut> this is so shitty... especially for mods where the global config vars are used everywhere ._:
14:50 < bridge> [teeworlds] <ChillerDragon> seems like we have to adapt all mods to make it less annoying
14:52 < bridge> [teeworlds] <fokkonaut> @heinrich5991 your protocol
14:52 < bridge> [teeworlds] <fokkonaut> @heinrich5991 your protocol_ex thing uses g_Config in protocol_ex.cpp, how would i access it now?
14:53 < bridge> [teeworlds] <fokkonaut> I just put `class CConfig *m_pConfig;` in the header now, lets see
15:00 < bridge> [teeworlds] <fokkonaut> sorry, @oy...
15:00 < bridge> [teeworlds] <fokkonaut> not heinrich
15:05 < bridge> [teeworlds] <fokkonaut> btw, in character.cpp you dont need to go over the gameserver to access m_pconfig, CEntity has it already
15:06 < bridge> [teeworlds] <ChillerDragon> Oy: maybe next time before doing such a big change do a pr and wait for some comments or even a issue
15:06 < Oy> huh?
15:06 < bridge> [teeworlds] <ChillerDragon> the g_Config thingy
15:07 < bridge> [teeworlds] <ChillerDragon> does bring some inconviences for developing imo and for sure for maintaining modifications
15:07 < bridge> [teeworlds] <ChillerDragon> would be nice if others could veto such changes to the code base
15:07 < Oy> don't care, has to be done for https://github.com/teeworlds/teeworlds/issues/528
15:08 < bridge> [teeworlds] <ChillerDragon> it does not make it easier to update to 0.7
15:09 < bridge> [teeworlds] <fokkonaut> > btw, in character.cpp you dont need to go over the gameserver to access m_pconfig, CEntity has it already
15:09 < bridge> [teeworlds] <fokkonaut> CEntity has Config(), which returns m_pGameworld->Config()
15:09 < bridge> [teeworlds] <fokkonaut> so, from all entities you can just use Config() instead of GameServer()->Config
15:29 < bridge> [teeworlds] <redix> Best way to update things to 0.7: rewrite them :)
15:50 < bridge> [teeworlds] <fokkonaut> @heinrich5991 how would i access the config variables now from protocol_ex.cpp? cant find a way
15:51 < bridge> [teeworlds] <fokkonaut> well, I think i could add CConfig to CUnpacker and access it through that
15:58 < bridge> [teeworlds] <fokkonaut> not the nicest solution but i think i have to go with it
15:58 < bridge> [teeworlds] <fokkonaut> https://github.com/fokkonaut/F-DDrace/commit/2cbddde762f277abcc911f41e634d17df4ddb1ee#diff-0fd2e34ad171594ac165f2e40efbd533
16:18 < bridge> [teeworlds] <heinrich5991> Oy: I don't think this is true
16:19 < bridge> [teeworlds] <heinrich5991> (that it needs to be done for running a server from within a client)
16:19 < bridge> [teeworlds] <fokkonaut> @heinrich5991 https://github.com/fokkonaut/F-DDrace/commit/c51132ea63f2be199ac6c21ba5e5fc2d2cf64954
16:19 < bridge> [teeworlds] <fokkonaut> could you come up with a way to get those debug values?
16:20 < bridge> [teeworlds] <heinrich5991> pass it or the config as a parameter
16:20 < bridge> [teeworlds] <heinrich5991> (pass the `bool Debug` parameter or `CConfig *pConfig`)
16:20 < bridge> [teeworlds] <fokkonaut> i tried, but in test/ex.cpp you'd need to pass it aswell
16:21 < bridge> [teeworlds] <heinrich5991> then pass it there as well, I guess
16:21 < bridge> [teeworlds] <fokkonaut> you cant access the config from there
16:21 < bridge> [teeworlds] <heinrich5991> that can't be true. if the client can create a config, then so can a test
16:22 < bridge> [teeworlds] <fokkonaut> Well, then its just not added to test I guess?
16:22 < bridge> [teeworlds] <fokkonaut> https://github.com/fokkonaut/F-DDrace/runs/421833713
16:22 < bridge> [teeworlds] <fokkonaut> can you help me? :/
16:23 < bridge> [teeworlds] <fokkonaut> I just have windows, and there its building and running fine
16:23 < bridge> [teeworlds] <fokkonaut> test debug fails
16:32 < bridge> [teeworlds] <jxsl13> gonfig not global -> meh
16:32 < bridge> [teeworlds] <jxsl13> config
16:32 < bridge> [teeworlds] <jxsl13> still forum spam.
16:33 < bridge> [teeworlds] <heinrich5991> dealt with
16:39 < Oy> the server has to run in a thread
16:49 < bridge> [teeworlds] <heinrich5991> ah okay, synchronization problems, fine
17:18 < bridge> [teeworlds] <Dune> makes sense
18:07 < bridge> [teeworlds] <fokkonaut> Hey, after I updated my mod to vanilla master, inclduing oy's global config removal, the GitHub test fails, because it crashes when you open the server with an argument. Can someone take a look?
18:07 < bridge> [teeworlds] <fokkonaut> https://github.com/fokkonaut/F-DDrace/tree/F-DDrace
18:10 < bridge> [teeworlds] <fokkonaut> because i use custom configs at more places tha vanilla does I needed some workarounds, e.g. pass config to some other functions etc.
18:10 < bridge> [teeworlds] <fokkonaut> but i dont understand why there is this error
18:14 < Oy> check where it crashes, probably an initialisation issue
18:23 < bridge> [teeworlds] <fokkonaut> I cannot check it, have no setup for it. I use visual studio and I dont know how or if its possible to start the program through VS with a command line argument
18:28 < bridge> [teeworlds] <heinrich5991> yes, it's possible to start a program in visual studio with a command line argument
18:28 < bridge> [teeworlds] <heinrich5991> it'd be stupid if it weren't possible
18:28 < bridge> [teeworlds] <heinrich5991> have you tried googling it?
18:28 < Oy> solution explorer
18:28 < Oy> properties on ur application
18:28 < bridge> [teeworlds] <Assa> use the visual studio shell for it
18:28 < Oy> paramters
18:29 < bridge> [teeworlds] <heinrich5991> @Assa can you debug from that shell?
18:29 < bridge> [teeworlds] <Assa> no
18:29 < bridge> [teeworlds] <Assa> btw, i don't know
18:29 < bridge> [teeworlds] <heinrich5991> yea, but fokkonaut wanted to debug
18:35 < Oy> @fokkonaut do u get it, or shall i upload a pic?
18:35 < bridge> [teeworlds] <fokkonaut> I got a bt from heinrich, but I cant figure out the problem
18:48 < bridge> [teeworlds] <jxsl13> windows sucks.
18:50 < bridge> [teeworlds] <Assa> tru
18:51 < bridge> [teeworlds] <jxsl13> visual studio also kinda sucks if one tries to use it after having never used it before.
18:52 < bridge> [teeworlds] <heinrich5991> it has a quite nice debugger built in though
18:52 < bridge> [teeworlds] <heinrich5991> I was able to use it without a manual back then
18:53 < bridge> [teeworlds] <Assa> windows keeps doing custom solutions for every shit so vs is very very overloaded
18:53 < bridge> [teeworlds] <Assa> that's my main reason i don't use it
20:04 < bridge> [teeworlds] <fokkonaut> I cant find a way to use command line arguments in visual studio
20:04 < bridge> [teeworlds] <fokkonaut> google entries didnt work
20:08 < Learath2> Didn't you hear? Overbloated software is all the hype nowadays
20:12 < bridge> [teeworlds] <heinrich5991> 2020-02-02 20:20:02.02 incoming in middle european time (UTC+1)
20:35 < bridge> [teeworlds] <Ryozuki> :o
22:36 < bridge> [teeworlds] <fokkonaut> https://pastebin.com/raw/b8bfCTxc
22:36 < bridge> [teeworlds] <fokkonaut> is this cast `((CConsole*)pInfo->m_pUserData)` ok?
22:36 < bridge> [teeworlds] <fokkonaut> i noticed no problem with this, pInfo is a `CConsole::CCommand`
22:37 < bridge> [teeworlds] <fokkonaut> and `m_pConfig`, which i want to access, is member of CConsole
22:46 < bridge> [teeworlds] <Assa> it looks wrong
22:46 < bridge> [teeworlds] <heinrich5991> is the pointer stored in `pInfo->m_pUserData` of type `CConsole *`?
22:47 < bridge> [teeworlds] <Assa> you dont
22:47 < bridge> [teeworlds] <Assa> you don't access m_pConfig, you access m_pUserData
22:47 < bridge> [teeworlds] <fokkonaut> `if(pCommand->m_pfnCallback == Con_Chain)
22:47 < bridge> [teeworlds] <fokkonaut>         {
22:47 < bridge> [teeworlds] <fokkonaut>             CChain *pChainInfo = static_cast<CChain *>(pCommand->m_pUserData);`
22:47 < bridge> [teeworlds] <fokkonaut> whats that? xd
22:48 < bridge> [teeworlds] <heinrich5991> that check assumes that the data associated with the callback of `Con_Chain` is of type `CChain *`
22:49 < bridge> [teeworlds] <fokkonaut> well, my console cast doesnt really work
22:49 < bridge> [teeworlds] <fokkonaut> does anyone have an idea how i could nicely access the config from `CConsole::NextCommandInfo()`?
22:49 < bridge> [teeworlds] <Assa> https://en.cppreference.com/w/cpp/language/explicit_cast
22:59 < bridge> [teeworlds] <fokkonaut> nvm
