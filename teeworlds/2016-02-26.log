20:31 < Teectac> yo
20:32 < Teectac> somebody knows if CSnapState m_Snap; holds game state permanently ? or is it only temporary storage for network data ?
21:26 <@matricks> Teectac: the snap is the gamestate for one game tick
21:27 < Teectac> should it be filled during OnGameOver ?
21:27 <@matricks> as long as you are connected yes
21:27 <@matricks> it's the central part of how the server and client communicates
21:27 < Teectac> m_Score seems to be 0 for all players
21:28 <@matricks> which branch?
21:28 < Teectac> 0.6.3
21:29 <@matricks> just look how the scoreboard does it :)
21:30 <@matricks> const CNetObj_PlayerInfo *pInfo = m_pClient->m_Snap.m_paInfoByScore[i];
21:30 <@matricks> pInfo->m_Score has the score for the player
21:31 < Teectac> m_pClient->m_Snap.m_paInfoByScore[i] is null at OnGameEnd()
21:31 <@matricks> OnGameOver you mean?
21:31 < Teectac> yes
21:32 <@matricks> shouldn't be
21:32 <@matricks> oh
21:32 <@matricks> those are called before the locals pointers have been setup
21:32 <@matricks> those are called while the new snapshot is being setup
21:33 <@matricks> the pointers to everything havn't been done yet
21:34 < Teectac> i found the info on some unsorted data, it had player info and and all, but no score
21:35 < Teectac> like name, clan, country, colors...
21:38 <@matricks> Teectac: you can't trust the data in the m_Snap during OnGameOver/OnStartGAme
21:39 < Teectac_> so i found :/
21:39 <@matricks> as I said, those are being called while the setup of the snap is being done
21:40 <@matricks> that feel weird and should probably be latched and called later when everything is setup correctly
21:40 <@matricks> you can fix it by fixing the function CGameClient::OnNewSnapshot
21:41 < Teectac_> ty matricks, i'm gonna try to do that
22:10 < Teectac_> now it works :)
22:19 <@matricks> :)
