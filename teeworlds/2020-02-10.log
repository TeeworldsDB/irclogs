06:17 < bridge> [freenode] <JewZeus> ok, I posted that fucking fairness post in the forum, in general discussions.
06:17 < bridge> [freenode] <JewZeus> sorry if that's the wrong place for it. :P
12:22 < bridge> [teeworlds] <Dune> that's the right place :)
15:17 < day> jewZeus: not bad, but your chiller server review forgot to mention the most vital site seeing attraction, the ultimate noob slayer -HS- Machine! 
16:26 < day> jewzeus: your proposal violates the unwriten rule of teeworlds game design: as little rng as possible.
16:27 < day> players spawning with unknown/ for the player untrackable amounts of hp would imho fall into that category. Then again you don't know how much hp a player at any given time has anyways so maybe not :?
17:06 < bridge> [freenode] <JewZeus> well, this is just a proposal of an idea of something that might be a useful step to try in terms of balancing, it's not intended to be 'the ultimate perfect solution', just the justification for a first step towards a solution, and a direction to step in
17:07 < bridge> [freenode] <JewZeus> the "hide how much your hp has changed" thing, that was a last minute idea and one that I haven't thought through as much as the rest of it
17:07 < bridge> [teeworlds] <ChillerDragon> i do not think that fairness is the issue of people not playing vanilla
17:08 < bridge> [freenode] <JewZeus> when I've been thinking about this, I've been thinking back to playing "thief: The dark project", because when you changed the game's difficulty it would have your health icons in the same place but more or fewer of them depending on the difficulty, sort of stuff
17:08 < bridge> [freenode] <JewZeus> I think it was actually 10 shield/heart things for the basic difficulty there too, almost like everybody finds that an intuitive number
17:09 < bridge> [freenode] <JewZeus> ChillerDragon, yes exactly? this whole thing is about fairness in vanilla, not mods
17:09 < bridge> [teeworlds] <jxsl13> vanilla is rather easy compared to gametypes
17:10 < bridge> [teeworlds] <jxsl13> playing vanilla, not winning at vanilla
17:13 < bridge> [teeworlds] <ChillerDragon> i can not think of any mod that helps noobs to fight pros
17:13 < bridge> [teeworlds] <ChillerDragon> > "My ideal use-case of this, even trying to break it, would be to be able to set up a lan party with my kids and some adult friends all playing"
17:13 < bridge> [teeworlds] <ChillerDragon> 
17:13 < bridge> [teeworlds] <ChillerDragon> this is possible in vailla
17:14 < bridge> [teeworlds] <ChillerDragon> just spin up a lan party and play with a bunch of noobs no need to change the mechanics
17:14 < bridge> [teeworlds] <ChillerDragon> skilled players should get more kills. And not tactically suicide to then collect hp and rush the flag with a op amount of hp and armor.
17:15 < bridge> [teeworlds] <ChillerDragon> noobs should die fast and not struggle a long slow death while their 20/20 protection slowly shrinks
17:26 < bridge> [teeworlds] <Sonix> To me its just a Matter of active people
17:28 < bridge> [teeworlds] <Sonix> The less the players the less its fair, as more people play at the same time the more they will gather in ‚Äúcategorized‚Äù groups
17:29 < bridge> [freenode] <JewZeus> ChillerDragon the point is to give both the kids and the adults a serious fighting chance, because I'm sure you've observed and probably nerfed yourself down too
17:29 < bridge> [freenode] <JewZeus> the point is, the game has to be *fun for everybody*
17:29 < bridge> [teeworlds] <Sonix> Now with just one full server per day its obvious that both noobs and pros will want to play cause its the only one active.. and the crying  starts
17:30 < bridge> [freenode] <JewZeus> eh, if it were a balanced game, there would be more vanilla servers
17:31 < bridge> [freenode] <JewZeus> *populated vanilla servers
17:32 < bridge> [freenode] <JewZeus> please don't try to tell me that in a 1v1 where one player is getting 10 kills at a streak and the other flat out isn't, that there can't be some kind of balancing put in so that both people actually want to keep playing for a bit because it's challenging but also actually fun for both
17:32 < bridge> [freenode] <JewZeus> the point is to do this kind of balancing intervention as little as possible
17:32 < bridge> [freenode] <JewZeus> leave it as vanilla as possible
17:33 < bridge> [freenode] <JewZeus> but actually balance it so that it stops this ragequit/borequit stuff for noobs or pros
17:37 < bridge> [freenode] <JewZeus> I understand that the intent is to leave this as a side scrolling FPS as much as possible, and FPS's don't classically do this, but the speed at which some players because of their skill with the rocket jumps and the grappling shit, is faster than the weapons can actually shoot at them, other than the laser, which has a limited range and can't actually hit them by the time they are aimed at with human reaction speeds
17:38 < bridge> [freenode] <JewZeus> as a result, much of the more intense fighting in the game at higher levels seem to consist of high velocity speculative grenade launchings, which new players are simply unequipped to participate in and need a way to weather while they learn to navigate
17:39 < bridge> [freenode] <JewZeus> if they catch on fast? the mechanic stops helping them fast
17:40 < bridge> [freenode] <JewZeus> even if people try to abuse this system, eg, advanced player kills an oponent and then commits suicide, that still robs their inventory and their time to get it and gives the noob a chance against them next time
17:41 < bridge> [freenode] <JewZeus> I don't think the way to do this is 'every kill adjust every players hp in rank', but rather, only for advanced players on streaks of kills, or noobs on streaks of deaths
17:42 < bridge> [freenode] <JewZeus> so yeah a pro could theoretically kill themselves 20 times and miss the first 1/2-2/3 of the game, to get a full 15/15 and do some special rocket jump, type thing
19:26 < bridge> [teeworlds] <ChillerDragon> i dont think teeworlds vanilla should be the type of game that allows for a equal fight between adults and children
19:27 < bridge> [teeworlds] <ChillerDragon> if you don't want your kids to cry then just play worse thats how to do it and how it has always been done on board games
19:30 < bridge> [teeworlds] <ChillerDragon> you are new right JewZeus? I do not want to keep talking against you :/
19:30 < bridge> [teeworlds] <ChillerDragon> 
19:30 < bridge> [teeworlds] <ChillerDragon> Nice that you joined us and care about the game. I consider my self a conservative person and I would strongly fight against any change in teeworlds hehe.
19:35 < bridge> [teeworlds] <ChillerDragon> Omg can we please get the old chat system :/
19:36 < bridge> [teeworlds] <ChillerDragon> Back in the days grepping logs for errors that show up in the chat was easy nowerdays they are clientside only
19:36 < bridge> [teeworlds] <ChillerDragon> https://cdn.discordapp.com/attachments/490150878934990850/676496717977223172/unknown.png
19:37 < bridge> [teeworlds] <ChillerDragon> Half server leaves the game because (Error sending data) and the looks is like https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fstatic01.nyt.com%2Fimages%2F2016%2F08%2F05%2Fus%2F05onfire1_xp%2F05onfire1_xp-articleLarge-v2.jpg%3Fquality%3D75%26auto%3Dwebp%26disable%3Dupscale&f=1&nofb=1
19:37 < bridge> [teeworlds] <ChillerDragon> logs not looks üòÑ
20:29 < rand> child/adult is an example to illustrate newbie/pro
21:03 < bridge> [teeworlds] <ChillerDragon> ye ikr
22:16 < bridge> [freenode] <JewZeus> ChillerDragon, the point is to do this as minimally as possible, but some kind of measure like this clearly needs to exist, that whole ragequit/borequit thing isn't just kids vs adults or noobs vs pro, I don't think it's rocket science to say 'some matchups are just uneven and need some kind of intervention, ideally as small as possible, to make the game even enough for both to play"
22:18 < bridge> [freenode] <JewZeus> the more I think about this, the more I think there should be a 'balancing threshold' ie 'you have to do a kill streak of x many kills' (or maybe even 'x many y times' type thing) as a minimum threshold to turn anything on, and then it should increment with the smallest steps possible that it can be effective with
22:19 < bridge> [freenode] <JewZeus> like the server specifies 5 as the minimum threshold, that means the player has to get 5 kills in a streak without getting killed to have one increment of this, ie, lose 1 heart of total hp
22:19 < bridge> [teeworlds] <ChillerDragon> Ye I get the idea
22:20 < bridge> [freenode] <JewZeus> this doesn't seem unreasonable, I have certainly been killed 5 times in a row in a 1 on 1, and quit in frustration, because what the fuck is there for me to do in the game besides die at that point?
22:20 < bridge> [freenode] <JewZeus> and I've also done that to other players and watched them quit too
22:20 < bridge> [teeworlds] <ChillerDragon> But I agree with @Sonix balance should come with bigger amount of players and skill groups
22:20 < bridge> [freenode] <JewZeus> that's the anthropic form of balancing
22:20 < Dune> when there were more servers it was still newcomers getting rekt until they quit the game (or switch to more casual game modes)
22:20 < bridge> [freenode] <JewZeus> that already exists but is insufficient especially since so many matches are so small and so skill-disparate
22:21 < bridge> [teeworlds] <ChillerDragon> I would say we currently have 2 skill groups and it works okayish
22:21 < bridge> [freenode] <JewZeus> eh which part works?
22:21 < Dune> I agree with JewZeus sentiment but I don't find the proposed changes pretty / simple
22:21 < bridge> [freenode] <JewZeus> what is being done that I'm not aware of
22:21 < bridge> [freenode] <JewZeus> petty? lol this is going to bite my ass as much as anybody's
22:21 < bridge> [teeworlds] <ChillerDragon> Most pros play on their servers and public servers are noobs
22:21 < bridge> [freenode] <JewZeus> this isn't a "beef me up", I'd predict to be playing at 8 hearts most of the time on it
22:22 < bridge> [teeworlds] <ChillerDragon> But pros also occasionally rip noobs that‚Äôs true
22:22 < Dune> unfortunately this is an issue that plagues old games with no matchmaking, and is not specific to teeworlds :/
22:22 < bridge> [teeworlds] <ChillerDragon> Ye but the playerbase is too small for matchmaking :/
22:22 < bridge> [freenode] <JewZeus> yeah this is an attempt at matchmaking in terms of skill to difficulty of opponent
22:22 < bridge> [freenode] <JewZeus> based on score
22:22 < bridge> [freenode] <JewZeus> in-game data shit
22:22 < bridge> [freenode] <JewZeus> no accounts, none of that
22:23 < Dune> not enough vanilla players for matchmaking unfortunately
22:23 < bridge> [freenode] <JewZeus> that's why this is my proposal rather than matchmaking :P
22:23 < bridge> [freenode] <JewZeus> "oh I can maybe get 5 people on a good day to play when I want them to"
22:24 < bridge> [freenode] <JewZeus> accounting for the fact, 2 of my own kids "you can play THIS game if you like" sort of "lets take a break from other games today" arm twisting, + their friends if I'm lucky
22:24 < bridge> [freenode] <JewZeus> fortunately my kids like and are pretty competent at this, my daughter especially likes ddrace :P
22:24 < bridge> [freenode] <JewZeus> this is a GOOD game
22:25 < bridge> [teeworlds] <ChillerDragon> Wait you have kids? And you play tw with them?
22:25 < bridge> [freenode] <JewZeus> I don't want to change that
22:25 < bridge> [freenode] <JewZeus> yep
22:25 < bridge> [teeworlds] <ChillerDragon> That‚Äôs nice o.0
22:25 < bridge> [freenode] <JewZeus> it's a good game, I'll say it as many times as I need to
22:25 < bridge> [freenode] <JewZeus> change as little as possible
22:25 < bridge> [freenode] <JewZeus> but I'm serious about that 'adults vs kids' lan party as a literal case
22:25 < bridge> [freenode] <JewZeus> "make this rock for birthday parties"
22:26 < bridge> [freenode] <JewZeus> ideally even "make a version that runs on pis
22:26 < bridge> [teeworlds] <ChillerDragon> Pls invite me thanks üòÑ
22:26 < bridge> [teeworlds] <ChillerDragon> Tw runs fine on pi
22:26 < bridge> [freenode] <JewZeus> you've played against them, they've been on your server :D
22:26 < bridge> [freenode] <JewZeus> eh tw SERVER runs fine on a pi
22:26 < bridge> [freenode] <JewZeus> but not a playable client
22:26 < bridge> [teeworlds] <ChillerDragon> Oh
22:26 < bridge> [freenode] <JewZeus> not that I've gotten running
22:26 < bridge> [teeworlds] <ChillerDragon> Isn‚Äôt pi 4 dual 4K 4core nasa rig?
22:27 < bridge> [freenode] <JewZeus> yeah, I have pi 3's, lol
22:27 < bridge> [freenode] <JewZeus> it can technically start the client, and get like 1 frame per second
22:27 < bridge> [teeworlds] <ChillerDragon> Idk I need hilarious strong hardware to have acceptable teeworlds feeling
22:27 < bridge> [freenode] <JewZeus> it seems simple enough that a 1.4 ghz quad core should be fine
22:28 < bridge> [teeworlds] <ChillerDragon> What is your ingame name btw?
22:28 < bridge> [freenode] <JewZeus> eh most recently "god of butts" :D
22:28 < bridge> [teeworlds] <ChillerDragon> Oh your still in the Name searching Phase?
22:28 < bridge> [teeworlds] <ChillerDragon> It took me almost a year I think üòÑ
22:28 < bridge> [freenode] <JewZeus> eh I have a rotation of trolly names (like this one too)
22:28  * bridge [freenode] <JewZeus> nails y'all with HIS hands like lightning
22:29 < bridge> [teeworlds] <ChillerDragon> I recommend sticking with one so people won‚Äôt forget who you are
22:29 < bridge> [teeworlds] <ChillerDragon> It improves social interaction
22:29 < bridge> [freenode] <JewZeus> I don't change often, but "god of butts" was a more kid-friendly name than 'painus', so I'm sticking with that change
22:30 < bridge> [teeworlds] <ChillerDragon> Can I ask how old you are? üôÇ
22:33 < bridge> [teeworlds] <jxsl13> I am Painis!
22:34 < bridge> [freenode] <ChillerDragon> can someone pls plot a graph of irc actvity since the bridge was activated :D
22:34 < bridge> [teeworlds] <jxsl13> Teeworlds is in my opinion not multithreaded enough to make use of multiple cores. At least the serversode code is completely single threaded, the main stuff I have seen so far.
22:35 < bridge> [freenode] <ChillerDragon> yea the good old multithread topic
22:35 < bridge> [freenode] <ChillerDragon> every tw source i touch gets unstable and crashes weirdley
22:36 < bridge> [freenode] <ChillerDragon> i do not want to think about how it would be when there were more threads
22:36 < bridge> [freenode] <ChillerDragon> but for sure it is a good future proof idea since the hardware seems to go the more cores way rather than more single core power
22:37 < bridge> [freenode] <ChillerDragon> but maybe rather rewrite tw in rust then so its less likley we break everything :D
22:37 < bridge> [freenode] <ChillerDragon> im sure @heinrich5991 would love to rewrite tw in rust hehe
22:38 < bridge> [teeworlds] <jxsl13> that would be interesting.
22:38 < bridge> [freenode] <ChillerDragon> i saw a basic functional 0.6 tw server by heinrich once
22:38 < bridge> [freenode] <ChillerDragon> written in rust but it had not all features yet
22:38 < bridge> [teeworlds] <jxsl13> Yeah, be basic concept of multithreading serverside is: "don't fucking block the main thread, never period."
22:39 < bridge> [freenode] <ChillerDragon> could help against dos
22:39 < bridge> [freenode] <ChillerDragon> iirc there were some multithreading patches in the block ddos war that seemed to be effective
22:40 < bridge> [teeworlds] <jxsl13> I think teeworlds might need to use "unsafe rust". I'd really love to learn rust soon :D
22:40 < bridge> [freenode] <ChillerDragon> it probably never will happen
22:41 < bridge> [freenode] <ChillerDragon> i mean replacing decades of C/C++ code is crazy
22:41 < bridge> [teeworlds] <heinrich5991> https://github.com/heinrich5991/libtw2
22:41 < bridge> [teeworlds] <jxsl13> I guess compared to other languages go and rust are the emerging languages to have great tooling.
22:41 < bridge> [freenode] <ChillerDragon> ye we all know famous libtw2
22:41 < bridge> [teeworlds] <heinrich5991> poc 0.6 server in there
22:41 < bridge> [freenode] <ChillerDragon> oh there it is
22:42 < bridge> [teeworlds] <jxsl13> syntax looks as cryptic as c++
22:42 < bridge> [freenode] <ChillerDragon> i hardly see any projects written in rust
22:42 < bridge> [freenode] <ChillerDragon> sometimes go
22:42 < bridge> [teeworlds] <jxsl13> at least it has generics
22:42 < bridge> [freenode] <ChillerDragon> i have the feeling heinrich is the only person on planet who uses rust
22:42 < bridge> [teeworlds] <jxsl13> x)
22:42 < bridge> [teeworlds] <jxsl13> I know one highly capabke person that also loves rust.
22:43 < bridge> [teeworlds] <heinrich5991> ripgrep is also written in rust
22:43 < bridge> [teeworlds] <heinrich5991> firefox has important rust components
22:43 < bridge> [teeworlds] <jxsl13> the security aspect is great
22:43 < bridge> [freenode] <ChillerDragon> ye
22:43 < bridge> [freenode] <ChillerDragon> i guess idk baut rust but i thought its stable af
22:43 < bridge> [freenode] <ChillerDragon> like c without segfaults
22:43 < bridge> [freenode] <ChillerDragon> or c++
22:43 < bridge> [teeworlds] <jxsl13> perfect language for os development and microcontroller development
22:44 < bridge> [freenode] <ChillerDragon> i used all kinds of grep but never ripgrep
22:45 < bridge> [teeworlds] <jxsl13> there is ssl stuff rewritten in rust that has seemingly better performance than c/c++ implementation.
22:45 < bridge> [teeworlds] <heinrich5991> the ripgrep is also a much faster grep üòâ
22:46 < bridge> [teeworlds] <heinrich5991> https://blog.burntsushi.net/ripgrep/
22:46 < bridge> [teeworlds] <heinrich5991> cool blog post about performance
22:46 < bridge> [teeworlds] <jxsl13> kinda sad that one does not see many job opportunities for rust or go.
22:46 < bridge> [freenode] <ChillerDragon> is that the only reason to go through the struggle of changing the tool?
22:46 < bridge> [freenode] <ChillerDragon> i used egrep and pcreegeprep for better regex
22:47 < bridge> [teeworlds] <jxsl13> performance is a good reason
22:47 < bridge> [freenode] <ChillerDragon> but speed never seemed to be a bottleneck for me
22:47 < bridge> [teeworlds] <jxsl13> if it is a bottleneck :D
22:47 < bridge> [teeworlds] <jxsl13> like parsing terrabytes of log files?
22:47 < bridge> [teeworlds] <heinrich5991> rg also respects .gitignore etc.
22:48 < bridge> [freenode] <ChillerDragon> i was about to write that
22:48 < bridge> [freenode] <ChillerDragon> could be seen as feature
22:48 < bridge> [teeworlds] <jxsl13> do you know any great beginner books in rust? or is the "necronomicon" good enough?
22:48 < bridge> [teeworlds] <jxsl13> for rust
22:48 < bridge> [freenode] <ChillerDragon> but if you dont know or forget about that it can be very annoying when you cant find stuff listed in the gitignore
22:49 < bridge> [teeworlds] <heinrich5991> `alias rg=rg -u`
22:49 < bridge> [teeworlds] <heinrich5991> now it only disregards binaries
22:49 < bridge> [freenode] <ChillerDragon> imagine grepping for the definition of some tw network code which is generated and ignored
22:50 < bridge> [teeworlds] <jxsl13> imagine using vs code search instead of grep x)
22:50 < bridge> [freenode] <ChillerDragon> ok i would switch if it supports multiline search
22:50 < bridge> [freenode] <ChillerDragon> does rg 'foo.*\n.*bar' work?
22:51 < bridge> [teeworlds] <heinrich5991> rg -U for multiline search IIRC
22:51 < bridge> [teeworlds] <heinrich5991> but why multiline? üòõ
22:51 < bridge> [freenode] <ChillerDragon> twlogs
22:51 < bridge> [freenode] <ChillerDragon> all the time i search something in tw i need multiline search
22:51 < bridge> [freenode] <ChillerDragon> for example earlier today i had a username and a disconnect error message
22:52 < bridge> [freenode] <ChillerDragon> thats split up in two lines
22:52 < bridge> [freenode] <ChillerDragon> all the stuff is always split
22:53 < bridge> [freenode] <ChillerDragon> r u telling me that im the only person who always searches strings split over multiple lines?
22:53 < bridge> [teeworlds] <heinrich5991> I've never done it before, I think
22:54 < bridge> [freenode] <ChillerDragon> lol
22:54 < bridge> [freenode] <ChillerDragon> i have to do it once a month min
22:55 < bridge> [freenode] <ChillerDragon> either i go with some -C context heads and tails and double grepping crap or i use pcregrep
22:59 < bridge> [freenode] <ChillerDragon> how differenct are the arguments?
22:59 < bridge> [freenode] <ChillerDragon> re learning stuff is annoying
23:00 < bridge> [teeworlds] <heinrich5991> rg -C also for context
23:01 < bridge> [freenode] <ChillerDragon> ye just realized it seems to be kinda similar
23:01 < bridge> [freenode] <ChillerDragon> doesnt look to bad i might switch
23:01 < bridge> [freenode] <ChillerDragon> but grep is pre installed everywhere huh?
23:01 < bridge> [teeworlds] <heinrich5991> yes
23:01 < bridge> [freenode] <ChillerDragon> thats a big pro
23:02 < minus> is grep even coreutils?
23:02 < minus> bridges were a mistake, everyone should just connect to quakenet like a proper gamer
23:02 < bridge> [freenode] <ChillerDragon> i can not remember installing grep anywhere
23:02 < bridge> [teeworlds] <heinrich5991> it's not like you'll unlearn grep
23:02 < bridge> [freenode] <ChillerDragon> quakenet doesnt work for me
23:02 < bridge> [freenode] <ChillerDragon> but when i pick rg as preference i will end up using it in my scripts and then my scripts will break on other systems
23:03 < bridge> [teeworlds] <heinrich5991> I'd use grep for scripts
23:03 < bridge> [freenode] <ChillerDragon> yes
23:03 < bridge> [freenode] <ChillerDragon> thats what i mean
23:03 < bridge> [teeworlds] <heinrich5991> rg is for interactive  use
23:03 < bridge> [freenode] <ChillerDragon> i do not want to distinguish interactive and script
23:03 < bridge> [freenode] <ChillerDragon> because my scripts start interactive
23:03 < bridge> [teeworlds] <heinrich5991> then don't use rg I guess
23:04 < bridge> [freenode] <ChillerDragon> idk
23:04 < bridge> [freenode] <ChillerDragon> i will keep it in mind it will probably replace my pcregrep
23:05 < bridge> [freenode] <ChillerDragon> so minus you would say quakenet irc is more gamer than discord? xd
23:05 < minus> retro gamer lol
23:06 <@heinrich5991> hi from qnet :)
23:06 < bridge> [freenode] <ChillerDragon> i wish i could join you
23:06 < minus> it's actually better because it needs less ram :^)
23:06 < bridge> [freenode] <ChillerDragon> the place where the cool kids hang :D
23:07 < bridge> [freenode] <ChillerDragon> well im sure there are more bloated irc clients than cordless discord client
23:07 < bridge> [freenode] <ChillerDragon> for example irc over browser is a bloat
23:08 < minus> certainly
23:08 < minus> mine's just a terminal tho
23:09 < bridge> [freenode] <ChillerDragon> cordless is also just terminal
23:09 < minus> "nice"
23:09 < bridge> [freenode] <ChillerDragon> ikr
23:09 < bridge> [freenode] <ChillerDragon> or are u being sarcastic? :D
23:09 < bridge> [freenode] <ChillerDragon> idk what those quotes mean
23:09 < minus> inofficially using some internal api?
23:09 < minus> yes
23:09 < bridge> [freenode] <ChillerDragon> ye
23:09 < bridge> [freenode] <ChillerDragon> probably borderline legal
23:10 < minus> so it's only a question of time until it gets fucked over
23:10 < bridge> [freenode] <ChillerDragon> wait internal?
23:10 < bridge> [freenode] <ChillerDragon> nah public api
23:10 < Dune> IRC lacks some modern features unfortunately. would gladly go js-free otherwise :p
23:10 < minus> oh?
23:10 < minus> didn't know discord had public apis
23:10 < bridge> [freenode] <ChillerDragon> its opensource project that wraps around the public discord api
23:10 < minus> Dune: like what?
23:10 < bridge> [freenode] <ChillerDragon> https://github.com/Bios-Marcel/cordless
23:11 < Dune> minus, formatting standards
23:11 < bridge> [freenode] <ChillerDragon> one of the few go projects i know
23:11 < bridge> [freenode] <ChillerDragon> no rust :p
23:11 < bridge> [teeworlds] <heinrich5991> WARNING: Third party clients are discouraged and against the Discord TOS.
23:11 < bridge> [teeworlds] <heinrich5991> from that repo
23:11 < bridge> [freenode] <ChillerDragon> ye borderline legal
23:11 < bridge> [freenode] <ChillerDragon> :D
23:11 < bridge> [teeworlds] <heinrich5991> not borderline legal
23:11 < Dune> well it's disallowed
23:11 < bridge> [teeworlds] <heinrich5991> but bannable by discord
23:12 < bridge> [teeworlds] <heinrich5991> legal is about being put into prison
23:12 < bridge> [freenode] <ChillerDragon> hm
23:12 < bridge> [teeworlds] <jxsl13> lol, codecoverage 13%
23:12 < bridge> [teeworlds] <heinrich5991> better than teeworlds
23:12 < minus> Dune: interesting; i haven't heard that complaint about irc before. fwiw it does have colors, italic, bold, underline
23:12 < bridge> [teeworlds] <jxsl13> true xD
23:12 < bridge> [teeworlds] <heinrich5991> nobody but me writes tests :>
23:12 < bridge> [teeworlds] <heinrich5991> :< *
23:12 < bridge> [freenode] <ChillerDragon> so cordless is even more gangster than irc cuz its agianst TOS
23:12 < Dune> minus, is that in the standard? TIL
23:12 < minus> i was more expecting things like image upload, etc
23:12 < bridge> [teeworlds] <jxsl13> go test are ultra easy to write
23:13 < Dune> it lacks code formatting though
23:13 < minus> nah i don't think that's standardized, Dune
23:13 < bridge> [teeworlds] <jxsl13> I dunno abouz C++ ._.
23:13 < Dune> out of convenience, the need for a bouncer and uploads yeah
23:13 < minus> ah yeah code snippets is something else
23:13 < bridge> [teeworlds] <heinrich5991> @jxsl13 look into the tests, not hard to write IMO
23:13 < bridge> [freenode] <ChillerDragon> how would you code format in a terminal based program @Dune ?
23:13 < Dune> theoretically it also lacks UTF8 lol
23:13 < Dune> @ChillerDragon syntax coloring
23:14 < bridge> [freenode] <ChillerDragon> ah
23:14 < minus> idk if the encoding for irc is standardized, i don't think so
23:14 < bridge> [teeworlds] <jxsl13> In regard to testing tw feels like trying noot to shoot into your foot every time you change something.
23:14 < bridge> [teeworlds] <jxsl13> -o
23:14 < Dune> yeah
23:14 < Dune> it'd be nice if the IRC standards evolved
23:14 < bridge> [teeworlds] <heinrich5991> that's why you try to add tests
23:15 < bridge> [teeworlds] <jxsl13> modern software development needs modern tooling :D for test.
23:15 < bridge> [freenode] <ChillerDragon> for me its hard to unit test chunks of tw becuase i usually include literally every file to get all my global vars interacting with each other :D
23:15 < bridge> [teeworlds] <heinrich5991> wdym @jxsl13
23:16 < bridge> [teeworlds] <heinrich5991> I think LLVM uses gtest
23:16 < bridge> [freenode] <ChillerDragon> oh btw any suggestions how i get the new Config() stuff in IClient?
23:16 < Dune> heinrich5991, i think so yeah
23:16 < bridge> [teeworlds] <jxsl13> I think around 2002 there was no such test driven development mwntality
23:16 < bridge> [teeworlds] <jxsl13> mentality
23:16 < Dune> I still don't like it :p
23:16 < Dune> tests tend to lack flexibility
23:16 < Dune> you change your code, you break the tests
23:16 < Dune> meh
23:17 < bridge> [teeworlds] <heinrich5991> `Kernel()->RequestInterface<IConfigManager>()->Values()`
23:17 < bridge> [teeworlds] <heinrich5991> the same way you get it from anywhere, @ChillerDragon
23:17 < bridge> [freenode] <ChillerDragon> in engine/client.h ?
23:17 < Dune> @heinrich5991 isn't that expensive btw
23:17 < bridge> [teeworlds] <heinrich5991> you do that once, on initialization
23:17 < bridge> [freenode] <ChillerDragon> is it even initialized anywhere?
23:18 < bridge> [teeworlds] <jxsl13> well, I think a proper testing of individual component should be done. Integration test might be hard if not impossible to realize properly.
23:18 < bridge> [teeworlds] <heinrich5991> ChillerDragon: src/engine/client.h is not a code file
23:18 < Dune> test-driven development is more than a few tests, jxsjsl13
23:18 < bridge> [teeworlds] <heinrich5991> it's an interface file
23:18 < bridge> [freenode] <ChillerDragon> yes
23:18 < bridge> [teeworlds] <heinrich5991> you shouldn't put complex code there
23:18 < bridge> [freenode] <ChillerDragon> and i need configs there
23:18 < bridge> [freenode] <ChillerDragon> ddnet did
23:18 < bridge> [teeworlds] <heinrich5991> no, do it in src/engine/client/client.cpp
23:19 < bridge> [teeworlds] <heinrich5991> this is the wrong place
23:19 < bridge> [freenode] <ChillerDragon> https://github.com/ddnet/ddnet/blob/master/src/engine/client.h#L81
23:19 < bridge> [teeworlds] <jxsl13> I think rust also provides proper tooling for testing :0?
23:19 < bridge> [teeworlds] <heinrich5991> yes, it does
23:19 < bridge> [teeworlds] <heinrich5991> but you don't need it
23:19 < bridge> [teeworlds] <heinrich5991> gtest works. otherwise use some other testing framework
23:19 < bridge> [freenode] <ChillerDragon> so you say that should be refactored?
23:19 < bridge> [freenode] <ChillerDragon> the code looks good to me
23:19 < bridge> [teeworlds] <jxsl13> infinite compile times already tell you your bugs :D?
23:20 < bridge> [teeworlds] <heinrich5991> you don't need a built-in testing framework in your language to do testing
23:20 < bridge> [teeworlds] <heinrich5991> is what I meant
23:20 < bridge> [teeworlds] <heinrich5991> ChillerDragon: that code looks *horrible* to me
23:20 < bridge> [teeworlds] <jxsl13> yeah, I guss, but using external tools sucks imo.
23:20 < bridge> [teeworlds] <heinrich5991> why does that static accessor function return something different depending on some *global config variable*
23:21 < bridge> [teeworlds] <heinrich5991> @jxsl13 why?
23:21 < bridge> [teeworlds] <jxsl13> external dependencies.
23:21 < bridge> [teeworlds] <heinrich5991> yes. gtest is stable
23:21 < bridge> [teeworlds] <heinrich5991> it doesn't have most of the downsides of external dependencies
23:21 < bridge> [freenode] <ChillerDragon> could you please refactor that for me heinrich? <3
23:21 < bridge> [teeworlds] <heinrich5991> no
23:21 < bridge> [freenode] <ChillerDragon> meh
23:22 < Dune> @heinrich5991 I saw you wrote parts of the backends, rhetorically, is a complete rust rewrite a good idea or are some parts shitty?
23:22 < bridge> [teeworlds] <jxsl13> try using the double <3<3, Chiller
23:22 < bridge> [freenode] <ChillerDragon> any hint on how i could refactor it?
23:22 <@heinrich5991> I would go for a gradual rewrite if I were trying to do it
23:22 < Dune> ofc, but is that a good idea even
23:22 < Dune> or does rust suck for some parts
23:22 <@heinrich5991> e.g. first rewrite some low-level horrendously unsafe parts in rust
23:23 < bridge> [teeworlds] <jxsl13> rewriting the masterserver would make sense
23:23 <@heinrich5991> nah, http master server incoming‚Ñ¢
23:23 <@heinrich5991> some people would probably say that rust limits them too much
23:23 < bridge> [teeworlds] <jxsl13> ha
23:23 <@heinrich5991> Dune: ^
23:23 < bridge> [freenode] <ChillerDragon> gradual adjective: moving, changing, or developing by fine or often imperceptible degrees
23:23 < bridge> [teeworlds] <jxsl13> I think the browser protocol should be rewritten to tcp
23:23 < Dune> the http master server looks like a lot more work than I thought it'd be
23:23 < Dune> I'm surprised
23:23 < bridge> [freenode] <ChillerDragon> monthly word teached by heinrich :D
23:23 < Dune> @jxsl13 that's garbage for latency
23:24 < Dune> that's what stops teeworlds from being properly implemented in a browser iirc?
23:24 <@heinrich5991> not really
23:24 < bridge> [freenode] <ChillerDragon> is it stopped?
23:24 < Dune> @redix
23:24 <@heinrich5991> there's a websocket port of teeworlds by eeeee
23:24 < bridge> [freenode] <ChillerDragon> werent there multiple fully functional browser clients already?
23:24 <@heinrich5991> you oculd also do teeworlds via webrtc
23:24 < Dune> I thought they had lag?
23:24 <@heinrich5991> not due to network
23:24 <@heinrich5991> it's udp (webrtc)
23:25 < Dune> oh ok
23:25 < bridge> [freenode] <ChillerDragon> shouldnt webassembly be near native?
23:25 <@heinrich5991> I think within 2x of native, for most parts
23:25 < Dune> I think it's ~2 
23:25 < Dune> yeah
23:25 < Dune> pretty good compared to anything else tho
23:26 < bridge> [teeworlds] <jxsl13> Maybe gRPC
23:26 < Dune> what's that?
23:26 < bridge> [teeworlds] <jxsl13> I'm not into that topic tho
23:26 < bridge> [freenode] <ChillerDragon> and in which direction would your gradual rewrite go? @heinrich5991
23:26 < bridge> [teeworlds] <jxsl13> stackoverflow suggested it being reasonably better than udp
23:26 <@heinrich5991> ChillerDragon: first some low-level stuff
23:27 <@heinrich5991> maybe network, maybe file parsing, etc.
23:27 < bridge> [freenode] <ChillerDragon> what?
23:27 < bridge> [freenode] <ChillerDragon> what are you talking about?
23:27 < bridge> [teeworlds] <jxsl13> rust rewrite
23:27 < bridge> [freenode] <ChillerDragon> ah
23:27 < bridge> [freenode] <ChillerDragon> oh i mean moving the config out of IClient
23:28 < bridge> [teeworlds] <jxsl13> please redesign VarInt x)
23:28 < bridge> [freenode] <ChillerDragon> its a somewhat accute problem for me
23:28 < bridge> [freenode] <ChillerDragon> is accute even a word?
23:28 < bridge> [freenode] <ChillerDragon> xd
23:28 < Dune> acute is
23:28 < bridge> [teeworlds] <jxsl13> *calls the doctor*
23:28 < bridge> [freenode] <ChillerDragon> ah ye to many c
23:28 < bridge> [freenode] <ChillerDragon> too
23:29 < bridge> [teeworlds] <jxsl13> ._. I don't like the VarInt design! please discuss
23:29 <@heinrich5991> wdym?
23:29 < bridge> [teeworlds] <jxsl13> it's a class without an internal state, basically functions
23:30 <@heinrich5991> oh that one, yea
23:30 < bridge> [teeworlds] <jxsl13> basically forcing oop where no oop is needed
23:30 <@heinrich5991> probably left-over from the oop rewrite
23:30 < Dune> sounds like a large part of oop code
23:30 <@heinrich5991> also, it has buffer overflow problems
23:31 < bridge> [teeworlds] <jxsl13> varint or do you mean Packer?
23:31 <@heinrich5991> varint, not packer
23:31 < bridge> [teeworlds] <jxsl13> why that Oo?
23:31 < rand> Pack(0,1)
23:32 < rand> hello there
23:32 < bridge> [teeworlds] <jxsl13> hey rand
23:33 < rand> I guess heinrich5991 would like some size parameter or end pointer to Pack/Unpack
23:33 <@heinrich5991> ah no, it seems it has been fixed
23:34 < bridge> [teeworlds] <jxsl13> redix did that?
23:34 < bridge> [teeworlds] <jxsl13> I guess
23:34 <@heinrich5991> gradual rewrite
23:34 <@heinrich5991> *ea6d380f7f1a7333db4470c60562b49827cfd13a
23:34 <@heinrich5991> wrong clipboard
23:34 < bridge> [teeworlds] <jxsl13> ye, redix
23:37 < rand> oh, Pack calls look safe
23:38 < rand> wait, is UnPack safely used ?
23:38 < bridge> [teeworlds] <redix> +1 for rewriting in rust ^^
23:40 < bridge> [teeworlds] <jxsl13> ye, it assumes a max length of 5 bytes
23:40 < bridge> [teeworlds] <jxsl13> and aborts
23:40 < bridge> [teeworlds] <jxsl13> cannot soeak for every us case, tho.
23:40 < bridge> [freenode] <ChillerDragon> redix but like client and server and stop maintaining the C++ version?
23:40 < bridge> [teeworlds] <jxsl13> speak
23:41 < bridge> [teeworlds] <jxsl13> some security critical stuff, leider ke masterserver, I'd goess
23:41 < bridge> [teeworlds] <jxsl13> like
23:41 < bridge> [teeworlds] <jxsl13> rip my fingers
23:41 < bridge> [freenode] <ChillerDragon> are u on phone?
23:41 < bridge> [freenode] <ChillerDragon> xd
23:41 < bridge> [teeworlds] <jxsl13> si
23:41 < bridge> [freenode] <ChillerDragon> beerlang autocomplete detected
23:41 < rand> this is confusing
23:42 < rand> because we don't know if you type 'si' or mistype 'no'
23:42 < bridge> [teeworlds] <jxsl13> xD
23:42 < bridge> [teeworlds] <redix> a rust rewrite would be cool but a lot of work, so i doubt it will happen at all üòÑ
23:42 < bridge> [freenode] <ChillerDragon> lol
23:42 < bridge> [teeworlds] <jxsl13> I'd love to learn some rust :o
23:42 <@heinrich5991> rand: I'm willing to do partial rewrites in rust; but I think Oy spoke negatively about that, so I'm not really hyped
23:43 < bridge> [freenode] <ChillerDragon> do you remember reasons?
23:43 < bridge> [teeworlds] <redix> only gradually as heinrich said
23:43 < bridge> [teeworlds] <jxsl13> go rewrite.
23:43 < bridge> [freenode] <ChillerDragon> like actually against rust or agianst the amount of work and duplicated source bases?
23:43 <@heinrich5991> probably boils down to 'it's not c++'
23:43 < bridge> [freenode] <ChillerDragon> oh
23:43 <@heinrich5991> with partial rewrites you don't have duplicate sorces
23:43 < Learath2> A rust rewrite would also alienate the 5 or 6 developers left here, might need to consider that
23:43 < bridge> [teeworlds] <jxsl13> base.c -> not c++
23:43 < bridge> [freenode] <ChillerDragon> hi Learath :)
23:44 <@heinrich5991> Learath2: maybe also get new ones ;)
23:44 < Dune> Yeah I don't think most codebase changes are worth it at this point
23:44 < rand> tw uses python, C, C++, lua
23:44 < bridge> [teeworlds] <redix> and a complete rewrite might be a hurdle for mod developers
23:44 < Dune> I'd say the energy is better spent writing features
23:45 <@heinrich5991> rust would probably make it easier to spend time writing features
23:45 < bridge> [teeworlds] <jxsl13> game's feature comolete with mostly minor tweaks and bot stuff left?
23:45 <@heinrich5991> you have a built-in usable data structures, for example
23:45 < bridge> [teeworlds] <jxsl13> pls be slices
23:46 < Learath2> wym built-in data structures? We aren't even allowed to use the C++ ones :P
23:46 < bridge> [teeworlds] <redix> and you have a usable package manager üòÆ
23:46 <@heinrich5991> slices exist in rust, but they're slightly different from go
23:46 < Dune> heinrich5991, surely that would be outweighted by the time spent learning a new language / how to debug pitfalls of said new language
23:46 < Dune> though I don't have anything against rust ;)
23:46 <@heinrich5991> rust is basically the language designed against pitfalls
23:46 <@heinrich5991> that is, if it compiles
23:46 < bridge> [teeworlds] <jxsl13> slices != std::vector?
23:46 < bridge> [freenode] <ChillerDragon> no need to debug or pitfall
23:46 < bridge> [freenode] <ChillerDragon> ye
23:46 < bridge> [freenode] <ChillerDragon> isnt that the reasom to switch to rust to avoid pitfalls and debugging
23:47 < bridge> [freenode] <ChillerDragon> that could be seen as a pro for mod developers
23:47 < Dune> there are still plenty of reasons to fail
23:47 < bridge> [freenode] <ChillerDragon> less instable mods
23:47 < bridge> [teeworlds] <jxsl13> well, it does not stop the need to debug
23:47 <@heinrich5991> you also get easier multi-threading
23:47 < Dune> and you have to set up new dev environment etc.
23:47 < Dune> there's always a cost
23:47 <@heinrich5991> yes, there's a cost
23:47 < bridge> [freenode] <ChillerDragon> a lot
23:47 < bridge> [freenode] <ChillerDragon> especially in the beginning
23:47 <@heinrich5991> there's also the cost that new developers trying to get into teeworlds have right now
23:47 < bridge> [teeworlds] <jxsl13> the build process is most likely less of a oain in the ass comoared to c++ :D?
23:48 < bridge> [freenode] <ChillerDragon> switching to rust could be seen as a expensive investment in the future
23:48 <@heinrich5991> yes. 'cargo build'
23:48 <@heinrich5991> yes
23:48 < bridge> [teeworlds] <jxsl13> no header files
23:49 < bridge> [teeworlds] <jxsl13> infinite compile times.
23:49 <@heinrich5991> in the order of c++, I think
23:49 <@heinrich5991> a lot slower than go
23:49 < bridge> [teeworlds] <jxsl13> Go is basically python in better, my current opinion
23:50 < bridge> [teeworlds] <redix> faster. better depends on the use case üòÑ
23:50 < bridge> [freenode] <ChillerDragon> i hardly know anything about go but i would never compare it with python lol
23:50 < bridge> [teeworlds] <heinrich5991> sidetrack detected
23:50 < bridge> [teeworlds] <jxsl13> Go has a scriotin language like workflow
23:50 < bridge> [teeworlds] <jxsl13> scripting
23:50 < bridge> [teeworlds] <jxsl13> as it compiles so fast
23:51 < bridge> [teeworlds] <jxsl13> also go run
23:51 < bridge> [teeworlds] <jxsl13> like interpreter
23:51 < bridge> [teeworlds] <heinrich5991> that is obviously one aspect of a scripting language. you see that there are others, I guess? ^^
23:51 < bridge> [freenode] <ChillerDragon> https://www.youtube.com/watch?v=k7oosn5HrKk
23:51 < Learath2> well, atleast I wouldn't be coding much if we do make a move to rust, I just never got used to coding in rust
23:51 < bridge> [freenode] <ChillerDragon> 15 mins talk for hello world in go
23:51 < bridge> [freenode] <ChillerDragon> best scripting language :D
23:52 < rand> jsxl13: don't you know about ‚Äútcc -run main.c‚Äù ?
23:52 < bridge> [teeworlds] <jxsl13> no :(
23:53 < bridge> [freenode] <ChillerDragon> oh tcc is nice
23:53 < bridge> [freenode] <ChillerDragon> i used that back when i was in school on usb drive :D
23:53 < bridge> [teeworlds] <jxsl13> chiller, well that talk makes go literally a scrioting language
23:53 < bridge> [freenode] <ChillerDragon> no that talk shows how useless go is :D
23:53 < bridge> [teeworlds] <jxsl13> is not :(
23:53 < bridge> [freenode] <ChillerDragon> useless as scripting language
23:54 < bridge> [teeworlds] <jxsl13> well, yeah in that regard maybe.
23:54 < bridge> [teeworlds] <heinrich5991> https://www.youtube.com/watch?v=bD5k0V08wRY
23:54 < bridge> [teeworlds] <jxsl13> go run main.go
23:54 < bridge> [teeworlds] <jxsl13> is what I meant
23:54 < bridge> [freenode] <ChillerDragon> xxxxxxxxxxD
23:54 < bridge> [freenode] <ChillerDragon> dont hate on bash heinrich
23:54 < bridge> [freenode] <ChillerDragon> oh cmn u fucked me
23:55 < bridge> [teeworlds] <jxsl13> also the deployment of gobis better than pythin :D
23:55 < bridge> [freenode] <ChillerDragon> where did u get that hahaha
23:55 < bridge> [teeworlds] <jxsl13> fat fingers
23:55 < bridge> [teeworlds] <heinrich5991> "hello world bash !youtube"
23:55 < bridge> [freenode] <ChillerDragon> searched bash beginner ordered by length and views?
23:55 < bridge> [teeworlds] <heinrich5991> although I admit I didn't pick the first one
23:55 < bridge> [freenode] <ChillerDragon> 55 clicks xd
23:55 < bridge> [teeworlds] <heinrich5991> https://www.youtube.com/watch?v=xv5_-rEmJ-E
23:55 < bridge> [teeworlds] <heinrich5991> that was the first one
23:55 < bridge> [teeworlds] <heinrich5991> 2nd tutorial, already got to hello world üòõ
23:56 < bridge> [freenode] <ChillerDragon> ur a big :troll:
23:56 < bridge> [freenode] <ChillerDragon> no language can compete with bash
23:56 < bridge> [teeworlds] <jxsl13> in regard to ripgrep the syntax is literally python regex
23:56 < bridge> [freenode] <ChillerDragon> and in helloworld its beast
23:56 < bridge> [teeworlds] <heinrich5991> @jxsl13 you can have monolithic binaries for python, too
23:56 < bridge> [teeworlds] <heinrich5991> they're more annoying to do thought
23:56 < bridge> [teeworlds] <heinrich5991> cx_freeze
23:57 < bridge> [teeworlds] <jxsl13> yeah, I already did use pyinstaller
23:57 < bridge> [teeworlds] <heinrich5991> eh, that's what I meant, maybe
23:57 < bridge> [freenode] <ChillerDragon> why do ppl even use nano?
23:57 < bridge> [teeworlds] <jxsl13> on windows
23:57 < bridge> [teeworlds] <heinrich5991> I used something like that to packa pyqt app
23:57 < bridge> [teeworlds] <jxsl13> nit fun, but works
23:57 < bridge> [teeworlds] <jxsl13> same also did pyqt
23:57 < bridge> [teeworlds] <jxsl13> for some workflow automation
23:58 < bridge> [teeworlds] <jxsl13> nano > vim
23:58 < bridge> [teeworlds] <jxsl13> I'd love to have a parallel official rust project with hopefully lots of code comments.
23:59 < bridge> [teeworlds] <jxsl13> that might slowly port some critical stuff, maybe
23:59 < bridge> [teeworlds] <jxsl13> might get some rust devs interested in teeworlds
23:59 < bridge> [freenode] <ChillerDragon> lol i tried '$ nano > vim' and it didnt end well :D
