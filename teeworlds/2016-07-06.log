12:31 < magneticduck> meanwhile, reading through some of the teeworlds codebase -- "#ifndef GAME_TUNING_H \n #define GAME_TUNING_H \n #undef GAME_TUNING_H \n ... \n #endif"
12:33 < magneticduck> I *guess* it would make sense if it were just a normal header file, that for some absurd reason you want to include several times -- in that case, you might format it canonically and then add the #undef hack
12:34 < magneticduck> aanyway
12:35 < magneticduck> it's notable how magnus wrote his own template library just for teeworlds
12:36 < needs1> magneticduck: Have you a link to the file, or the path of the file?
12:36 < magneticduck> yeah, the first case is src/game/tuning.h
12:37 < Obani> Are there still people working on the map editor ?
12:37 < magneticduck> it's just an inline inclusion to call a local macro with the tuning parameters, I understand what it does -- it's just funny how he wrote a redundant #ifndef pragma ^^ 
12:37 < needs1> magneticduck: It's indeed useless here
12:38 < magneticduck> needs1: the template library is src/base/tl
12:38 < magneticduck> he even implemented some concepts!
12:38 < Henningstone> magneticduck: there is a reason for doing a header protector and afterwards invalidating it
12:38 < Henningstone> magneticduck: there are scripts in teeworlds which make sure that every header has a proper header protector in it
12:38 < magneticduck> ah that's nice
12:39 < magneticduck> so the canonical structure is enforced, gotcha
12:39 < magneticduck> it does seem like a neat codebase
12:39 < magneticduck> with a little sprinkle of NIH ;) and too little documentation
12:43 < needs1> Henningstone: It seems there is already an exception for "keynames.h" in the script, maybe it is better to add tuning.h too?
12:43 < needs1> https://github.com/teeworlds/teeworlds/blob/master/scripts/check_header_guards.py#L32
12:43 < magneticduck> Henningstone: .. now that we're talking about it, it would probably make much more sense to have these inline macro inclusions somewhere else, treated in a different way -- the script you mention is treating them like a normal header, but they're simply not a normal header
12:44 < magneticduck> but this is gamedev, not classical sculpture
12:45 < magneticduck> needs1: weird, but keynames.h is formatted correctly
12:46 < Obani> Seeing to the PR section on Github, it seems like there's many abandonned things
12:46 < Obani> Or just not accepted
12:46 < magneticduck> It Works (tm)
12:47 < Obani> https://github.com/teeworlds/teeworlds/pull/1219 for example
12:48 < magneticduck> I'd be interested in finding where teeworlds has serious issues though -- I'm still only 15 kLOC into my game (instead of 32 kLOC), so pervasive refactors are still just barely manageable ^^ 
12:53 < magneticduck> how many people actively participated in the development of the current codebase, roughly?
12:54 < magneticduck> was it just magnus writing all the framework alone?
12:56 < magneticduck> https://github.com/matricks/teeworlds/graphs/contributors seems to suggest something like that
12:57 < magneticduck> and in the new repository under the teeworlds org, it seems to still be basically oy and mat with the majority of the content 
12:58 < magneticduck> the opaqueness of some of the code didn't really scream "massively collaborative project since it began"
13:43 < magneticduck> huh, so before teewars and teeworlds, there was 'teepop'
13:47 <@heinrich5991> I didn't know that
13:49 < magneticduck> can't find anything online, just a forum post and a broken link
13:49 < magneticduck> https://www.teeworlds.com/forum/viewtopic.php?pid=94279#p94279
13:50 < magneticduck> well, that post and the threat it points to
13:50 < magneticduck> thread*
20:33 < Dunedune> hey guys
20:33 < Dunedune> anyone know what happened to the autobuild page for teeworlds binaries?
20:34 < Dunedune> do we have any page with recently compiled trunk teewords?
20:41 <@minus> no
20:43 < Dunedune> kk ty
20:44 <@minus> not like anything happens anyway
