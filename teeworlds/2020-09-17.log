11:30 < bridge> [teeworlds] <TsFreddie> why hasn't this been merged https://github.com/teeworlds/teeworlds/pull/2613
14:18 < bridge> [teeworlds] <Dune> Reviewing takes time and is ungrateful work
14:19 < bridge> [teeworlds] <Dune> Contributors come and go as their motivation spikes, maintainers are supposed to always be there on the span of a decade :)
14:19 < bridge> [teeworlds] <TsFreddie> i see
14:21 < bridge> [teeworlds] <TsFreddie> if the contributor is not active anymore can i PR the same thing?
16:22 < bridge> [teeworlds] <fokkonaut> Who made the grenade fix?
16:22 < bridge> [teeworlds] <fokkonaut> with direction being rounded?
16:22 < bridge> [teeworlds] <fokkonaut> my mod has server-side dummies which follow a specific path, always the same, and with the rounded m_Direction of the grenade projectiles he can not do the path with grenade jump as before
16:22 < bridge> [teeworlds] <fokkonaut> he fails
16:23 < bridge> [teeworlds] <fokkonaut> i think this needs a clientside fix because this is a physics change, not a visual glitch fix
16:23 < bridge> [teeworlds] <fokkonaut> so we need to revert the rounding and we need to fix it clientside
16:24 < bridge> [teeworlds] <fokkonaut> i mean, its not really noticeable for normal players, but my dummy shows that it has impact...
16:25 < bridge> [teeworlds] <fokkonaut> @Dune ?
16:51 < bridge> [teeworlds] <Dune> @TsFreddie imo that's a good thing yeah. Sometimes issues stall because the PR is deadlocked by the contributor
16:51 < bridge> [teeworlds] <Dune> @fokkonaut maybe redix? Look in the recently closed PRs
16:53 < bridge> [teeworlds] <fokkonaut> but is such a physics change okay?
16:53 < bridge> [teeworlds] <fokkonaut> because i think this is a client visual issue, not a server issue
16:53 < bridge> [teeworlds] <fokkonaut> the server should not round the position
16:53 < bridge> [teeworlds] <fokkonaut> lol
16:53 < bridge> [teeworlds] <fokkonaut> ah no wait
16:53 < bridge> [teeworlds] <fokkonaut> its the rounded Direction
16:54 < bridge> [teeworlds] <fokkonaut> that shouldnt happen imo
17:27 < bridge> [teeworlds] <redix> You cannot fix it client side without changing the protocol. For the normal game the precision in the snapshot is enough. Showing another path on client side is just wrong and prevents any sort of rocket jump prediction. The characters use quantization and so should all other physics elements.
17:27 < bridge> [teeworlds] <redix> The server should only use the values that it sends to the clients.
17:31 < bridge> [teeworlds] <redix> If it breaks your code just revert it ðŸ™‚
17:32 < bridge> [teeworlds] <redix> But you should at least keep the changes in the snap method
17:32 < bridge> [teeworlds] <redix> That at least reduces the client side error
