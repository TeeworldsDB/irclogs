10:00 < wavi> Is the client id and player id two different things?
10:12 < Learath2> wavi: nope
10:12 < Learath2> client id is the only id given to a client
10:12 < Learath2> I'm not aware of a player id being used anywhere
10:15 < bridge> [freenode] <richrd> ok, if I connect as a player I see this "[server]: player has entered the game. ClientID=0" and "[game]: team_join player='0:wavi' team=0"
10:15 < bridge> [freenode] <richrd> is the id 0 in 0:wavi the same id as clientid?
10:19 < bridge> [teeworlds] <ChillerDragon> yes
10:26 < bridge> [freenode] <richrd> Thanks!
10:26 < bridge> [freenode] <richrd> so if player id isn't used for anything, what is it for?
12:54 < rand> what is player id ?
13:08 < bridge> [freenode] <richrd> i dont know, does it even exist? :D
13:09 < bridge> [teeworlds] <Learath2> There is no player id, that second message you sent prints the clientid
13:10 < bridge> [freenode] <richrd> cheers üëç this will make my code easier to follow..
13:10 < bridge> [freenode] <richrd> I
13:11 < bridge> [freenode] <richrd> *I've been using "cid" and "player_id" but I guess i'll just call it "client_id" everywhere for clarity
13:12 < bridge> [teeworlds] <jxsl13> cid and ClientID and id:nickname are the same.
13:12 < bridge> [freenode] <richrd> great üëç
13:13 < bridge> [freenode] <richrd> I'm working on a super simple nodejs econ lib that just parses and emits events. I'll then build a game state manager on top of that (keeping track of deaths, killstreaks, etc).
13:22 < bridge> [teeworlds] <Learath2> Sounds fun üôÇ
13:25 < bridge> [freenode] <richrd> yeah, so far I already have it parsing (almost) all the events and emitting them so it should be trivial to listen to those events and maintain state
13:33 < wavi> named groups is really helpful to have with regex. I can do stuff like this and get the matched groups directly as an object with named properties /pickup player='(?<client_id>\d{1,2}):(?<player_name>.*)' item=(?<item_id>\d+)/
14:14 < bridge> [freenode] <richrd> hmm, maybe I shouldn't chill here via two different networks ü§î
14:20 < bridge> [teeworlds] <Dune> Especially not with different nicknames :)
17:27 < Dune> Learath2: anything left in https://github.com/teeworlds/teeworlds/issues/1120 ?
17:30 < bridge> [teeworlds] <Learath2> Yeah, NETCTRL_MSG_ACCEPT, I couldn't figure out what that one meant, couldn't figure out the extra projectile thing either. m_Hooktick neets a NETVERSION bump, OnDirectInput I think is fine as is, CDataFile I couldn't understand, also didn't know how to fix the code not sending all non-acked
17:30 < bridge> [teeworlds] <Learath2> the rest are fixed
17:37 < bridge> [teeworlds] <jxsl13> In regard to the whisper messages. If someone has turned off receiving those on the client side and someone else tries to send that person a message, is there some response from the server that that person turned off their whispering?
17:38 < bridge> [teeworlds] <jxsl13> like: Could not deliver message, player has turned off whispering.
17:43 < Oy> no
17:43 < Oy> same when u mute someone
17:44 < bridge> [teeworlds] <redix> https://github.com/teeworlds/teeworlds/commit/06db9bf53fd2df9ae3c251e9435cc7e9a8bc7df5
17:44 < bridge> [teeworlds] <redix> i think default tuning was correct here. it's basically the counterpart for 
17:45 < bridge> [teeworlds] <redix> https://github.com/teeworlds/teeworlds/blob/5e995d23a2be251498380282c13f982acf2f43d0/src/game/server/entities/character.cpp#L553
17:45 < bridge> [teeworlds] <redix> which uses default tuning aswell
17:50 < Oy> maybe that should use the correct tuning too?
17:51 < bridge> [teeworlds] <redix> that might break dead reackoning for old clients =\
18:00 < Oy> does it work correct right now when the tuning isn't the default one?
18:03 < bridge> [teeworlds] <redix> when tuning is not default, the reckoning core differs from the real core, so the server does not use dead reckoning at all -> the client does not use evolve
18:05 < bridge> [teeworlds] <redix> if you use the real tunings for the reckoning world, the clients will call the evolve code, but old clients will still use default tunings and get a wrong result
18:09 < Oy> yeah, then we should do it when doing a major release
18:12 < bridge> [teeworlds] <Learath2> Ah, I missed that
18:12 < bridge> [teeworlds] <Learath2> sorry üò¶
18:18 < bridge> [teeworlds] <Learath2> Oy: maybe create an issue for it so we don't forget with the next major release
18:18 < Oy> update the issues about the code issue
18:19 < Oy> +d
20:49 < bridge> [teeworlds] <jxsl13> the intention of turning off whispers seems to clearly differ from muting someone. mute: I don't want to read your messages, turn off whispering: I don't want to read anyone's messages via whisper, cuz of privacy.
20:50 < bridge> [teeworlds] <jxsl13> the other party does not know about the whispering being turned off and still tries to send messages instead of trying it via global chat. and try to negotiate a different way of communication
22:00 < Learath2> I'll leave this question here, if any of you have a decent answer for this pls lmk
22:01 < Learath2> I need to know if there are any text inputs on the screen before we render them, which seems paradoxical as there is no way to know there is anything on the screen before we render things
