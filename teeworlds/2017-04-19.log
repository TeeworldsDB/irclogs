20:32 < Peasant65> hey! Pleas ehelp me out, I´m trying to setup a teeworkds server on a vps i´m running, but I´m gettiing the error WARNING: no master servers
20:32 < Peasant65> I´m thinking it´s because I don´t have a master.cfg anywhere, but i don´t know where to put it 
20:32 < Peasant65> It´s a precompiled openfng tar archive btw 
20:33 < Peasant65> My ports are working great, I can connect to the server via IP or domain name just fine, but It won´t register to the master server(s) 
20:33 < Peasant65> can someone help me out >
20:33 < Peasant65> *?
20:33 <@heinrich5991> master.cfg is not needed, it'll be generated automatically
20:34 <@heinrich5991> have you tried directly connecting to your teeworlds server, via IP address?
20:34 <@heinrich5991> oh wait
20:34 <@heinrich5991> you said that
20:34 <@heinrich5991> mh
20:34 < Peasant65> yea, I just said, connecting to the I{ or domain works like a charm 
20:35 < EastByte> can you dns lookup any tw master?
20:35 <@heinrich5991> good question
20:35 < EastByte> host master1.teeworlds.com
20:35 < Peasant65> It´s  a NAT vps. Do i need to port forward the master servers port (8300)? I think it would be unlikely but just checking 
20:35 < Peasant65> dig master1.teeworkds.com gives me an ip 
20:35 < EastByte> only port forward for 8303 is necessary
20:35 < Peasant65> so does host btw 
20:36 < Peasant65> yea, 1301 in my case 
20:36 <@heinrich5991> does someone know where the master ban list is located?
20:36 <@heinrich5991> minus: ^
20:36 < Peasant65> I just ran acros it, lemme check 
20:36 < Peasant65> https://stats.teespace.de/?p=bans
20:36 < Peasant65> here you go 
20:36 < EastByte> google says https://www.teeworlds.com/master-bans.cfg
20:37 < EastByte> looks like teespace made a mirror of that
20:38 < Peasant65> probably
20:38 <@heinrich5991> is your IP listed there?
20:38 < Peasant65> but can you help me with my master server problem here? :) 
20:38 < Peasant65> nope it isn´t, allready checked 
20:38 < EastByte> have you tried it with a vanilla tw server?
20:38 < Peasant65> not yet, i gotta admit 
20:39 < Peasant65> let me try that 
20:43 < Peasant65> EastByte, heinrich5991 vanilla works fine 
20:43 < Peasant65> good suggestion :) 
20:43 <@heinrich5991> mh. try again with openfng
20:43 <@heinrich5991> I'm not aware of any changes of openfng in that area
20:43 <@heinrich5991> fstd_ is the author of openfng, maybe he knows more?
20:44 < Peasant65> nope, maybe it´s the fact that vanilla is x86 and openfng is x64 
20:44 < Peasant65> i´ll give it a spin with x86
20:45 < Peasant65> well yea, there´s my problem 
20:45 < Peasant65> x86 works good 
20:45 <@heinrich5991> that's really weird
20:47 < Peasant65> https://github.com/fstd/teeworlds/tree/openfng-bin 
20:47 < Peasant65> the linux x64 binary tgz gives me this error, the x86 doesn´t 
20:48 < Peasant65> I´ll check some more on other systems and file a report on github tomorrow :) 
20:48 < Peasant65> thx for your help heinrich5991 EastByte 
21:28 < fstd_> Peasant65: do not use the precompiled binaries
21:28 < fstd_> i should have dropped that branch years ago
21:29 < Peasant65> fstd_, why not ?
21:29 < fstd_> because they're a) old and b) broken (as you noticed yourself)
21:30 < fstd_> the correct and supported way is to clone the master branch, and then run the 'openfng.sh' script
21:30 < fstd_> Peasant65: sorry, the openfng branch
21:31 < Peasant65> why dont you precompile anymore fstd_ ?
21:34 < fstd_> Peasant65: because it either means that the user has to take care of having the right dependencies in the right versions around, which can get arbitrarily difficult because it usually means fighting the package manager
21:34 < fstd_> or it means static linking, but that's not really possible anymore in glibc using programs
21:34 < fstd_> it may or may not work, and generally is asking for trouble
21:34 < Peasant65> fstd_, what edependencies? It ran on a stock ubuuntu server install 
21:35 < fstd_> but because it's so difficult (cough) to build and run tw, i wrote that openfng.sh script that takes care of all the details
21:36 < fstd_> Peasant65: idk.  glibc, zlib, maybe something else
21:37 < Peasant65> glibc is quite commong, as is zlib i think 
21:38 < fstd_> the problem is that not every distro has the same glibc version, and it's a moving target because occasionally things get updated
21:38 < fstd_> and i really don't feel like providing a binary for every version of every distro
21:39 < fstd_> and besides all that, precompiled binaries are a windows thing.  the unix way is building stuff from source
21:39 < Peasant65> fstd_, I don´t fully agree, the gentoo way is to compile everything from source 
21:40 < fstd_> well gentoo isn't unix
21:40 < fstd_> but this discussion is pointless, just run the script.  it will compile bam, compile openfng and run the server for you
21:41 < fstd_> if you don't know how to run the script:  sh openfng.sh
21:52 < Peasant65> fstd_, calm down, i will. 
21:56 <@heinrich5991> precompiled binaries are also a thing in linux package managers :)
21:58 < Learath2> which are much better then windows but still much worse then compiling from source :)
21:58 < fstd_> only because distro maintainers go out of their way to make and support distro-specific packages, and keep the whole dependency tree sound
21:59 <@heinrich5991> in terms of energy usage, it's probably better to use pre-compiled packages
21:59 < Learath2> + the added work means you get packages that are so old your grandpa used them
21:59 <@heinrich5991> Learath2: depends on the distro, obviously
22:00 < fstd_> heinrich5991: that would depend on the number of users, and don't forget the energy i would have to spend to make a dozen or two packages for all the popular distros and their respective releases
22:00 <@heinrich5991> I mean distro maintainers
22:00 < Learath2> fstd_: well in this case a build on an old debian would work for most if not all
22:01 < fstd_> i somewhat doubt that but can't be bothered to prove you wrong
22:02 < fstd_> s/to/to try and/
22:02 <@heinrich5991> I haven't calculated it either, it's just a estimation
22:30 < fstd_> Peasant65: did it work?
22:32 <@matricks> building packages from source... well.. sucks
22:33 < fstd_> of course it does
22:33  * fstd_ pats head
22:33 <@matricks> ran gentoo once, never again
22:33 <@matricks> I kinda wanna use my computer, not wait on it
22:35 < fstd_> things were easier if people had, like, recurring scheduled downtime every night or so
22:35 < fstd_> also multitasking OS might help still using the computer while something's building, but that's yet to be invented
22:35 <@matricks> you mean days?
22:36 <@matricks> the problem is that if I needs something, I might have to wait a couple of hours instead of getting it now
22:36 <@matricks> which, well, kinda sucks
22:37 < fstd_> you have to wait a couple of hours if you need something really big, like KDE or libreoffice or firefox
22:39 <@matricks> yes
22:39 <@matricks> or you know, instal my computer
22:39 < fstd_> adding 'My computer' to your desktop to feel more at home should be a matter of seconds and not require any compiling
22:40 < fstd_> :)
22:40 < fstd_> that said, how often do you 'install your computer'?
22:40 < eeeee> "My computer" icon totally came preinstalled for me! why would anyone need to install that?
22:42 <@matricks> fstd_: not that often, but last time I had to do it 1 day before leaving on a trip
22:42 <@matricks> ssd failed so I had to exchange it and reinstall everything
22:43 < fstd_> okay, i'll give you that gentoo isn't the right choice in the situation that you quickly need to recover from a failed hard disk without having a decent backup
22:43 < fstd_> not sure if i would generalize from that
22:44 <@matricks> in general, iteration/down time sucks
22:44 < fstd_> eeeee: cost saving, i guess?  those foss cheapskates..
22:44 < fstd_> matricks: with a solid backup, the downtime is distro-independent
22:46 <@matricks> fstd_: I have backups, but never on a complete system
22:46 <@matricks> fstd_: another scenario, I needed todo some quick video editing, I don't have any software installed, I tried 5 of them quickly before settling on one todo it with
22:49 <@matricks> or, I need to check a docx someone sent me over email
22:50 <@matricks> these kinda things forces down time and interation breaks and that kills productivity
22:50 <@matricks> turn the table, what benefit do I get from running a source distribution?
22:52 < fstd_> mainly, having all the source right there, avoiding some classes of dependency assrape, controlling compile-time settings
22:52 < fstd_> not to forget ease of debugging
22:52 < fstd_> and ease of local patching
22:52 < koomi> apt-get source ;-)
22:53 < fstd_> nobody is saying it's not possible in debian to get the source
22:53 < koomi> it's practically just as "right there" as on gentoo
22:53 < fstd_> (and in debian you get /a/ source, not necessarily whatever your actual binaries came from)
22:53 < fstd_> yes, on gentoo it's not really 'right there'
22:54 < fstd_> but then again, i wasn't really arguing for gentoo, i'm arguing for source based stuff
22:54 < koomi> whatever
22:54 < koomi> for me those advantages are laughable compared to the amount of pain and inconvience they bring
22:54 < fstd_> feel free to go laughing
22:55 <@matricks> fstd_: 0.0001% of users have the need for the source, or the compile-time settings, or the ease of local patching, or debugging.. I'm a coders and I don't even wanna touch those things
22:55 < fstd_> matricks: what does it matter that 0.0001% of users have the need for the source?
22:55 < fstd_> do you think i'm trying to make anyone use a source-based distro here?
22:56 <@matricks> no, just think that people who use source based distros spend more time using the source based distro then actually doing anything :)
22:59 < fstd_> that's probably true for some users
23:00 < Learath2> been using gentoo for quite some time
23:00 < Learath2> unless you are running it on a toaster the compile times aren't that bad
23:02 < Learath2> you can use your computer while its compiling, you get to choose your init system instead of getting systemd shoved down your throat
23:02 <@matricks> Learath2: whats a init system?
23:02 <@matricks> ;P
23:03 <@matricks> Learath2: I can't not use the computer while it's compiling if I need the thing it's compiling
23:03 < Learath2> the first process ran by the kernel, it's supposed to get your computer to a usable state (run services, etc..)
23:04 <@matricks> Learath2: WOOOOSH!
23:04 < Learath2> matricks: well thats only the first time
23:05 < fstd_> matricks: your argument is essentially that if you have no use for the control/convenience offered by a source-based OS, then a source-based OS isn't for you
23:06 <@matricks> and I think you sacrifies way more then needed to achive those goals
23:06 < koomi> the argument is that those advantages are practically useless, especially compared to the downsides
23:07 < fstd_> so far you've only come with edge-cases like "i need to do $thing_ive_never_done_before real quick now, and it requries huge software to compile"
23:07 < Learath2> oh and i love not pulling in a billion dependencies that come with some packages with specific compile time flags
23:07 < fstd_> koomi: they are useless for you, okay
23:07 < fstd_> they are very useful for me, so please don't state your uneducated opinion as fact
23:09 <@matricks> fstd_: how often do you patch the sources of your apps etc?
23:09 < Learath2> fstd_: gentoo does have the ability to put it 'right there'
23:09 < koomi> fstd_: sure it might actually come down to a net positive for you, but then *you're* the edge case
23:09 < Learath2> i patched i3lock a week or so ago
23:09 < fstd_> $ find /usr/pkgsrc/localpatches -type f | wc -l
23:09 < fstd_>       25
23:09 < fstd_> matricks: every now and then
23:10 < koomi> you can easily build patched versions of debian packages aswell
23:10 < fstd_> also there are a few dozen local commits against kernel and userspace
23:10 < fstd_> building debian packages can be quite a pain
23:10 < Learath2> koomi: how? get the source, patch it, create your own package? thats still 2 steps more then put patch in /etc/portage/patch
23:10 < fstd_> i happen to have done that for a few years
23:11 < fstd_> Learath2: you forgot the step where you sort through a million different debian commands, some of which do the same as others, are subsets of others, etc
23:11 < koomi> Learath2: neglible compared to the pain of building staff all the time
23:11 < koomi> s/staff/stuff/
23:11 < Learath2> you all keep talking about this pain but i've never felt it except for the first time installing firefox and libreoffice
23:12 < fstd_> i think he believes building stuff requires sitting in front of the computer for hours, typing like a movie hacker
23:12 < koomi> I do agree the dpkg/apt environment is arcane and confusing, you have to spend quite some time learning it
