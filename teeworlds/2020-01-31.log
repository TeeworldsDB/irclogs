00:05 < Learath2> A github check for format could be implemented through actions so no PR with bad format would be merged. Anyone commiting directly could use a precommit hook to make sure format is fine. Heinrich and my scripts together could be used to verify variable naming conventions in both cases
00:21 < rand> fair enough
10:58 < rand> for later use: https://xkcd.com/1172/
11:12 < bridge> [teeworlds] <Dune> pretty relevant to teeworlds isn't it
11:14 < rand> I will use it in a weak hook PR :3
11:53 < bridge> [teeworlds] <Dune> Hahaha
11:53 < bridge> [teeworlds] <Dune> Though weak hook could be a tuneable physics
12:57 < rand> I think that solving the issue need a TickPreDefered :x
12:58 < rand> there are some edge cases, like hooking with Ninja
13:03 < rand> about tuenable physics, it looks possible, fair hook will use an additional velocity to compute thing while weak hook will use directly the old velocity
13:03 < rand> we add the additional velocity afterwards
13:04 < rand> easier said than done though
13:10 < bridge> [teeworlds] <Dune> Makes sense
17:35 < bridge> [teeworlds] <Dune> wait, you can write `sizeof aBuf`
17:35 < bridge> [teeworlds] <Dune> wow
17:40 < bridge> [teeworlds] <fokkonaut> yes
17:54 < Learath2> Well sizeof is an operator not a function :P
19:03 < bridge> [teeworlds] <Assa> more relevant:
19:03 < bridge> [teeworlds] <Assa> https://xkcd.com/2030/
19:18 < bridge> [teeworlds] <jxsl13> > adapt to the codebase, don't wait for the other way around
19:18 < bridge> [teeworlds] <jxsl13> @[quakenet] Dune#0000
19:20 < bridge> [teeworlds] <jxsl13> oh,wrong channel, seems to have been in here then. Might have been incorrectly interpreter by me.
19:22 < bridge> [teeworlds] <jxsl13> question was: can we put tw into a proper unique namespace(, as IStorage conflicts with windows crap)
19:49 < bridge> [teeworlds] <Assa> `using namespace teeworlds;`
21:15 < bridge> [teeworlds] <ChillerDragon> oh namespace would be nice for the annoying min() confilicts on windows
21:26 < bridge> [teeworlds] <redix> `#define NOMINMAX` ðŸ™‚
21:40 < bridge> [teeworlds] <heinrich5991> @ChillerDragon or we could use the standard `min` function: https://en.cppreference.com/w/cpp/algorithm/min
22:49 < bridge> [teeworlds] <heinrich5991> Oy: why put it behind `Values()`? this makes accessing config values a lot longer
22:53 < Oy> no possible conflict with real member variables
22:54 < bridge> [teeworlds] <heinrich5991> an actual conflict?
22:54 < bridge> [teeworlds] <heinrich5991> or a possible one?
22:54 < bridge> [teeworlds] <heinrich5991> if you're worried about a possible one, we could also rename its member variables or put them behind a struct
22:55 < bridge> [teeworlds] <heinrich5991> because we're accessing the config variables a lot more often than its own members
23:01 < Oy> a possible one
23:04 < Oy> dunno if that longer path is a problem
