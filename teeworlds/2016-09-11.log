00:24 <@minus> why in the world did we use a C JSON library in teeworlds when there's this: https://github.com/nlohmann/json
00:24 <@minus> (fuckings to rapidjson on that note)
00:29 <@minus> kinda seems weird to put "copyright matricks" at the top of new files that clearly weren't written by him
00:36 <@minus> that sv_external_port stuff is weird, i'd just get rid of it; i doubt anyone uses that
00:45 <@minus> heinrich5991: would it make sense to have servers register to all master servers? cause redundancy and so
00:54 <@minus> except then you'd have no clear registered/failed status easily
01:01 <@heinrich5991> minus: I have no idea, I just used what was there :)
01:01 <@minus> time to replace it? :D
01:01 <@heinrich5991> minus: that's a problem with the new system, you might need to use sv_external_port
01:01 <@minus> why?
01:02 <@heinrich5991> because the master server can no longer discover which outside port the teeworlds server listens on
01:02 <@minus> you need to send the port all the time anyway
01:02 <@heinrich5991> because the teeworlds server no longer sends a UDP message to the masters
01:02 <@minus> yeah
01:03 <@heinrich5991> so say that I host a server on my local machine and port forward it on my router with 8404 -> 8303
01:03 <@heinrich5991> then I need to set sv_external_port 8404 now
01:03 <@minus> doing that is silly
01:03 <@minus> just run locally on 8404 too
01:03 <@minus> that's /way/ less confusing
01:04 <@heinrich5991> but you get the idea
01:04 <@minus> i got the idea all along
01:04 <@minus> i was just suggesting removing the extra option to define another port
01:05 <@heinrich5991> it slightly complicates the function, and I see a use for it. I don't think we should remove it for programmer convenience
01:06 <@minus> agreed, disagreed, agreed
01:08 <@minus> realisticly, do you see anyone using that feature?
01:08 <@minus> i don't, hence i'd remove it
01:11 <@heinrich5991> mh
01:12 <@heinrich5991> I used the fact that you could previously host it ona another port locally than on the internet
01:12 <@heinrich5991> but probably only because it was automatic
01:12 <@heinrich5991> (without using sv_external_port)
01:13 <@heinrich5991> I guess we could remove it
01:15 <@minus> if something on your network changes the port sv_external_port wouldn't help unless you know the new port
01:18 <@heinrich5991> nah, was statically port-forwarded
01:19 <@heinrich5991> btw, that json library looks c++11, which we don't consciously use yet
01:20 <@minus> it is C++11
01:20 <@minus> we already do use C++11 (unconsciously probably)
01:20 <@heinrich5991> where?
01:20 <@minus> comma at the end of enums
01:21 <@heinrich5991> that's also supported in gnu++98 or whatever it is called :)
01:22 <@minus> that's not a standard though
01:22 <@minus> i don't think there'd be a problem upgrading to C++14
01:22 <@heinrich5991> msvc maybe
01:23 <@minus> valid concern
01:29 <@minus> KEY_SERVER="server/{}".format ‚Üê interesting
01:30 <@heinrich5991> master server is far from done, more like a proof-of-concept
01:31 <@minus> of course
01:31 <@minus> but if it works we can put it up for testing
01:38 <@heinrich5991> should work
01:40 <@minus> nn
12:12 <@minus> heinrich5991: once upon a time i wrote this: https://git.mnus.de/minus/teeworlds-masterserver-python/tree/master
12:16 < EastByte> heinrich5991: when the tw network engine is resending lost chunks, it will flush on each single chunk resend instead of grouping them, right?
12:16 <@heinrich5991> not afaik
12:16 <@heinrich5991> it will group them with the next flush
12:16 < EastByte> hm
12:17 < EastByte> so if a firewall blocks largely sized packets, the tw connection could be stuck in an endless resend loop until 'weak buffer'
12:18 <@heinrich5991> yes
12:19 <@heinrich5991> that is, no
12:19 <@heinrich5991> not a lot of large vital packets
12:20 <@heinrich5991> (I mean with the VITAL flag set)
12:20 < EastByte> please rephrase :)
12:20 <@heinrich5991> the packets that tw wants to resend are infrequent and small in size
12:21 <@heinrich5991> except maybe map download
12:21 < EastByte> well let's say someone is flooding the chat with a bind, sending ~100 messages at the same time
12:22 <@heinrich5991> that could work
12:22 <@heinrich5991> but how do you send 100 messages without triggering the sapm protection? ^^
12:22 < EastByte> doesn't matter, the chunks will be resend if lost :p
12:23 <@heinrich5991> but the server just receives the 100 chat messages and drops them
12:24 < EastByte> the messages will be packed in one packet will be dropped by the firewall (current situation)
12:24 < EastByte> the question would whether the client tries to resend all in one packet or distributes them over packets
12:28 < EastByte> *would be
12:36 <@minus> heinrich5991: is map download also something you'd like to be possible over http? 
12:38 <@heinrich5991> dunno, it complicates the protocol
12:45 <@minus> What do you mean 
12:45 <@minus> Http client is there 
13:10 <@minus> to be clear how i mean it: either the teeworlds server provides a base url where to download files or there is a public download server configured in the client
13:10 <@minus> as an option to speed up map transfers
13:22 <@matricks> ressys ;)
13:23 <@heinrich5991> minus: ah, the global approach is already implemented in some clients
13:32 < koomi> .oO( steam workshop integration )
13:32 < BotoX> that is rather awful
13:33 <@heinrich5991> don't bind the game to steam
13:34 < koomi> :>
