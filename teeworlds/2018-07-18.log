17:38 < nameless_tee17> hi, can someone spare 5 minutes to help me with a small programming problem related to teeworlds? I dont think that is much of a big deal but Im not that familiar with c++ after all
17:40 <@heinrich5991> post the problem
17:43 < nameless_tee17> I subclassed the "player" class. Now I do want to add an instance of this subclass to the m_apPlayers array in the gamecontext.cpp as follows m_apPlayers[ClientID] = new(ClientID) CBotPlayer(this, ClientID, StartTeam); Now since I didnt do anything with the MACRO_ALLOC_POOL_ID() macros in the subclass, everytime this line is called I raise the "size assertion error" from the entity.h. I dont know how to deal with the pools in o
17:44 < nameless_tee17> in the players array
17:45 <@heinrich5991> unfortunately, subclassing that way is incompatible with the storage pools
17:45 <@heinrich5991> as they assume a fixed size for every element
17:45 <@heinrich5991> oh wait, you also did this in the subclass. mh...
17:46 < nameless_tee17> first I tried to add the same macros in the subclass as well, ye, but it didnt work because dbg_assert(ms_PoolUsed##POOLTYPE[id], "not used"); was raised then
17:47 <@heinrich5991> ah. well
17:47 <@heinrich5991> the easiest way out would probably be to resort to dynamic allocation
17:49 <@heinrich5991> (I actually don't know how defining operator new() interacts with subclassing)
17:50 < nameless_tee17> mh... 
17:53 < nameless_tee17> I added you as a skype friend just now, maybe we can talk in german to resolve this super quick. if you dont have time, its fine as well
