08:35 < Safa_[A_boy]> Hello there!
08:36 < Safa_[A_boy]> I've noticed that changing the order of the placeholders is important!
08:36  * Safa_[A_boy] will make a picture
08:55 < Safa_[A_boy]> http://oi57.tinypic.com/qwzghs.jpg
08:55 < Safa_[A_boy]> Sorry for the complex disign :p
09:27 < Safa_[A_boy]> Hello, What is netvesion?
09:30 < DAFT> http://www.netvision.co.za/
09:39 < Safa_[A_boy]> version* :\
09:40 <@matricks> Safa_[A_boy]: version of the network protocol
09:40 < Safa_[A_boy]> mm
09:40 < Safa_[A_boy]> Ok. Where is the list for filters in 0.7?
09:40 <@matricks> dunno
09:41 < Safa_[A_boy]> Also, the only server there is working with old version...
09:41 <@matricks> 0.7 is not final, there might not be any filters in it
09:42 < Safa_[A_boy]> I know, but the filters are in the code...
09:42 <@matricks> yeah, but is there any ui for them?
09:42 < Safa_[A_boy]> I don't know :p
09:53 < ghost91> no, there is not
09:54 < ghost91> the menu has been reworked and the filters have not been (re)added yet
09:58 < Safa_[A_boy]> Ok then :)
16:36 < BotoX> https://stackoverflow.com/questions/12676088/client-server-encryption-over-multiple-programming-languages
16:37 <@minus> where'd you find that?
16:38 < BotoX> IRC
16:38 <@minus> me too, hours ago
16:38 <@minus> time to get out my math skills
16:38 <@minus> and do some rasterizing
16:39 <@minus> https://mnus.de/tmp/funvas.html ← rasterizing stuff myself instead of using lineTo
16:48 < BotoX> oh man https://i.imgur.com/lYDjcWM.jpg
16:58 <@minus> SecurityError: The operation is insecure.
16:58 <@minus> oh god, i hate the web
17:02 <@minus> lol, can't load the image data of an image that comes from a different domain
17:03 < BotoX> yap
17:03 < BotoX> security feature
17:03 < BotoX> JS can't load crap from third party domains or IPs
17:03 < BotoX> or one could login to your router through JS
17:04 < BotoX> in case you are using the default password, or scan your home network
17:07 <@minus> k, now i can at least draw on the canvas
17:08 <@minus> just took… half an hour
17:36 < BeaR_> finally got that bezier curves working \o/ http://i.imgur.com/KOXFA8V.png
17:37 < Siile> what are these used for?
17:38 < Siile> *those
17:38 < BeaR_> new envelopes curvetype, allows more control than the current ones (like moving quads on curved paths not only linear)
17:39 < BeaR_> still have to fiddle a bit with the editor
17:39 < Siile> can I check the collision of moving quads somehow?
17:39 < Siile> or just position goes
17:39 < Siile> server side
17:39 < Siile> those are not syncronized right?
17:40 < BeaR_> huh?
17:40 <@matricks> client side only
17:40 < BeaR_> that's just animation stuff
17:40 < Siile> I was thinking of adding spinning blades :D
17:40 < Siile> but I would have to alter client too :/
17:42 <@matricks> minus: btw, seen nikos talk about safty in rust?
17:44 <@minus> matricks: i haven't seen anything about rust
17:44 <@matricks> https://air.mozilla.org/guaranteeing-memory-safety-in-rust/
17:44 <@minus> BeaR_: fancy!
18:24 < heinrich5991> BeaR_: sounds nice!
18:32 < heinrich5991> ok, I give up
18:32 < heinrich5991> how do I use the envelope editor?
18:32 < heinrich5991> to be more precise, how can I set the positions of the quad at time 0, and at time 1?
18:33 < Siile> there isn't an animation tutorial for mapeditor?
18:33 < Siile> I'd like to see one too :P
18:33 < heinrich5991> there isn't one AFAIK
18:40 < BeaR_> heinrich5991: if you activate 'Info' you can see a preview of the animation and edit the positions there (:
18:45 < Siile> can I animate the rotation of the quad?
18:45 < BeaR_> y
18:45 < Siile> nice!
18:45 < Siile> why ppl dont use it more at their maps?
18:46 < Siile> too lazy or too hard to do?
18:46 < BeaR_> Because it's not very intuitive I guess and a bit hard
18:46 < BeaR_> (depends if you are used to animation programs)
18:46 < Siile> this engine has huge untouched potential
18:46 < heinrich5991> I used blender once, so I at least knew what it should do :)
18:47 < heinrich5991> still couldn't figure it out on my own though :(
18:47 < heinrich5991> but thanks for the help, BeaR_!
18:47 < BeaR_> dont like blender at all /:
18:47 < Siile> let us scratch the surface :P
18:48 < Siile> *let's
18:48 < Siile> btw, I totally recommend trying teeworlds with a gamepad
18:48 < Siile> it's awesome
18:48 < heinrich5991> Siile: have a working version?
18:48 < Siile> y
18:48 < heinrich5991> Siile: pushed to github (or somewhere else?)
18:48 < Siile> no
18:49 < Siile> wrote directly to input.cpp
18:49 < Siile> http://assets.razerzone.com/eeimages/products/6000/razer-sabertooth-gallery-3.png
18:49 < BeaR_> Siile: well you could add support for costum sound assets in the map, rigging quads, add complex text layout, ... :p
18:50 < Siile> nah, I'm more interested to improve the actual gaming experience using the given tools
18:50 < Siile> tools are made to be used :P
18:50 < Siile> I'm not that into building them :D
18:51 < Siile> I learned  coding 'coz the game I want to play doesn't exist :D
18:51 < Siile> when I was a kid
18:51 < Siile> and it's still the driving force :D
18:51 < Siile> wanna see my input.cpp?
18:52 < heinrich5991> I'd like to see the git diff
18:52 < Siile> I coded the gamepad controls directly to my input.cpp
18:53 < Siile> so u'd have to change it 
18:53 < Siile> there no UI for configuring the controls
18:53 < heinrich5991> you use git, don't you?
18:53 < heinrich5991> (could i have your git diff?)
18:53 < Siile> nope
18:53 < Siile> just ugly code this far :P
18:53 < heinrich5991> you don't use git?
18:54 < heinrich5991> or you won't give me the git diff?
18:54 < Siile> I'll update my feet mounciness algorithms and maybe upload it
18:54 < Siile> I dont use it
18:55 < heinrich5991> ok
18:55 < heinrich5991> (btw, git is a really awesome tool)
18:55 < Siile> I know
18:57 < Siile> added working shader support too
18:57 < Siile> and 1 shader to flash tee red when hit
18:58 < Siile> I'll upload that too after I fix the bounciness algoriths
18:59 < Siile> summer holiday starting in 1 week, during I'm planning to just smoke and develop teeworlds :P
19:00 < Safa_[A_boy]> heinrich5991: How to download a folder from git if it is really awesome tool?
19:01 < heinrich5991> you want to download a single subdirectory of a single version?
19:01 < heinrich5991> Safa_[A_boy]: ^
19:02 < Safa_[A_boy]> Yes, I want to download 'data' from the teeworlds git (for example)
19:03 < heinrich5991> I have no idea whether that's possible
19:03 < heinrich5991> (and the standard answer applies here too: I have no idea why you would want to do this)
19:03 < Siile> there's this 'download reposity' -button at root level or smth
19:03 < Siile> use it
19:04 < Siile> *that
19:04 < Safa_[A_boy]> becouse I don't want to download the whole repository for Qt, but a the examples folder
19:04 < Safa_[A_boy]> Siile: I think that it downloads the whold repository
19:05 < Safa_[A_boy]> whole*
19:05 < Siile> then I have no solution for u :P
19:05 < Siile> I'd like to know how too :P
19:15 < Safa_[A_boy]> Siile: No way, git don't support that
19:15 < Safa_[A_boy]> heinrich5991: Did you see this: http://oi57.tinypic.com/qwzghs.jpg ??
19:16 < heinrich5991> https://stackoverflow.com/a/4909267/870079 < you could try this
19:16 < heinrich5991> Safa_[A_boy]: yea, it motivated me again to implement it properly
19:17 < Safa_[A_boy]> Ok then :)
19:19 < BeaR_> heinrich5991: you're going to implement bidirectional text support with shaping?
19:20 < heinrich5991> BeaR_: shaping?
19:21 < BeaR_> shaping glyphs depending on the context
19:22 < Safa_[A_boy]> Mirroing the UI
19:22 < Safa_[A_boy]> BeaR_: Even if we want to support RTL as you said, A string containing 'LTR' for translating
19:23 < Safa_[A_boy]> if it was RTL then do bla, else do bla
19:23 < heinrich5991> BeaR_: if you talk about this: https://en.wikipedia.org/wiki/Arabic_script_in_Unicode#Arabic_Presentation_Forms_A then no
19:24 < BeaR_> k (:
19:34 < Safa_[A_boy]> It would be a nightmare to understand those letters :P
19:38 < heinrich5991> I thought you were able to speak some RTL language?
19:38 <@matricks> I want a RTL programming language
19:39 < Safa_[A_boy]> heinrich5991: I am able, I'm talking about you and others :)
19:40 < Safa_[A_boy]> matricks: There is, but don't expect too much from it
19:40 <@minus> matricks: you can have an RTL TV station
19:42 <@minus> matricks: should there be a video on that rust site?
19:42 <@matricks> minus: yes...
19:42  * matricks is checking the conditions for tomorrow
19:43 <@minus> well, vid.ly gives me a 500
19:44 <@minus> works in ET
19:44 <@minus> i.e. the browser that likes to phone home, chromium
19:46 <@matricks> minus: you know what... I'm not an atomic playboy
19:47 <@minus> yeah, i know that
20:10 <@minus> matricks: pointers and references :/
20:10 <@matricks> ?
20:11 <@minus> couldn't they have left out pointers in rust?
20:11 <@matricks> they don't have pointers in the same way as c++
20:11 <@matricks> they are checked in rust
20:11 <@matricks> they can't be null more or less
20:21 < heinrich5991> and more importantly
20:21 < heinrich5991> they're guaranteed to point to valid memory :)
20:24 <@matricks> unlike your mom
20:25 <@matricks> btw I saw the godzilla movie today
20:26 <@matricks> damn that sucked
20:26 <@minus> hurr
20:26 <@matricks> :P
20:26 <@matricks> but I've grown allergic to FX movies as well so
20:28 <@minus> type inference makes code harder to understand
20:28 <@matricks> makes it more flexible however
20:28 <@matricks> but yeah
20:28 <@minus> how does that make it more flexiblE?
20:29 <@matricks> chaning the type of a variable only needs to be done on one place instead of going through and changing it everywhere
20:29 <@minus> sure, it's more convenient to write
20:29 <@minus> yeah
20:30 <@matricks> I use the c++11 auto
20:30 <@minus> me too
20:30 <@minus> qtcreator does not like it
20:31 <@matricks> minus: buy tandem gear for me
20:32 <@matricks> that shit ain't cheap
20:32 <@minus> buy a car for me
20:32 <@minus> that shit ain't cheaper
20:32 <@matricks> no :)
20:32 <@matricks> roughly 6000 euro for a tandem set for me :/
20:33 <@minus> ok, depends on the car
20:33 <@minus> so yeah, rust seems nice
20:34 <@matricks> ya, they are aiming for 1.0 this year
20:34 <@minus> does it have introspection?
20:34 <@matricks> que?
20:34 <@minus> RTTI
20:34 <@matricks> oh...
20:35 <@matricks> dunno
20:35 <@matricks> check it's compile time macros
20:35 <@minus> templates?
20:35 <@matricks> those are pretty sick (and exprimental)
20:35 <@matricks> minus: even better
20:35 <@matricks> minus: they implemented compile time regex with em :D
20:35 <@minus> sweet
20:36 <@minus> expression evaluation during compile time?
20:36 <@minus> like C++'s constexpr
20:36 <@matricks> limited at the moment I think
20:36 <@matricks> but do you know what I'm not?
20:37 <@minus> mad?
20:38 <@matricks> and atomic playboy
20:38 <@matricks> and yes, I have that tune on repeat
20:38 <@minus> :D
20:38 <@minus> you should just loop the demo in dosbox
20:40 <@minus> they should make static typing optional in rust
20:40 <@minus> like in dart
20:40 <@matricks> NO!
20:40 <@matricks> it's a system language
20:40 <@minus> :D
20:40 <@minus> j/k
20:41 <@minus> it's not possible the way rust is
20:42 < koomi> I don't think local type inference makes code harder to understand in practice
20:43 <@minus> it does a tiny bit, i actually meant in tutorialish stuff
20:43 <@matricks> it's worth the readability cost
20:44 < koomi> you can always add explicit signatures
20:44 < koomi> but you almost always know immediately of what type a local variable is
20:47 < heinrich5991> it gets ugly with iterators
20:47 < heinrich5991> this is where type inference shines
20:47 < heinrich5991> it gets more readable with less annotations :)
21:04 <@minus> std::map<int, VeryLongType<WithTemplateStuff> >::const_iterator it = thing.cbegin(); is indeed very ugly
21:04 <@minus> wasn't even a long type
21:13 < heinrich5991> core::iter::FilterMap<,&str,(char,Vec<char>),core::str::CharSplits<,char>>
21:32 <@minus> dafuq
21:33 <@minus> explain yourself, heinrich5991
21:34 < heinrich5991> that's the type of my iterator
21:34 < heinrich5991> before I collect() it
21:35 <@minus> wtf is that and wtf are you mapreducing?
21:40 <@minus> no seriously, what are you making?
21:59 < heinrich5991> minus: I just parsed a file :)
21:59 <@minus> /o\
21:59 <@minus> what framework is that
21:59 <@minus> and what's with those weird template arguments
22:00 < heinrich5991> that's in the standard lib
22:00 < heinrich5991> (oh wait, I forgot to mention it's rust :) )
22:01 <@minus> /o\
22:01 <@minus> looks seriously bad
22:01 <@minus> is there an IDE with Rust support?
22:02 < heinrich5991> what's the problem?
22:02 < heinrich5991> I don't need to type that type
22:02 < heinrich5991> it's just the result of what I was doing
22:03 <@minus> still
22:03 <@minus> what's with the empty parts? what's &str?
22:03 <@minus> is str core::str?
22:04 < heinrich5991> &str is a string slice
22:05 < heinrich5991> core::str is a module
22:05 <@matricks> minus: what do you mean with IDE? :)
22:05 < heinrich5991> the empty parts might have been caused by me introducing a syntax error in order to get the type
22:07 <@minus> is the &str a type?
22:09 < koomi> yes
22:11  * matricks is in the 300 ways to render black land
22:12 <@minus> oO
22:19 < heinrich5991> minus: well. 'in a post-DST world, &str will no longer be special'
22:19 < heinrich5991> where DST=dynamically sized types
22:19 < heinrich5991> that's what they keep saying
22:20 <@matricks> minus: me = not https://upload.wikimedia.org/wikipedia/commons/c/cd/William_H_P_Blandy.jpg
22:21 <@minus> lol matricks, still onto that?
22:21 <@matricks> :D
22:21 <@matricks> just got back home
22:24  * matricks graons
22:24 <@matricks> groans
22:40  * matricks still renders black
22:41 <@minus> playing with GL?
22:41 <@matricks> yeah
22:41 <@minus> web or open?
22:41 <@matricks> moar like OpenBlack
22:42 <@minus> hurr
22:42 <@minus> Rust?
22:42 <@matricks> yeah
22:42 <@minus> rust opengl bork?
22:42 <@matricks> probably not
22:42 <@minus> or you doing fancy things
22:42 <@matricks> just that my routines are probably borken
22:42 <@minus> usually i'd trust you to know your way around that stuff
22:42 <@matricks> writing matrices etc etc
22:42 <@minus> mh
22:43 <@matricks> really error prone, and one error and you get nothin'
22:47 <@matricks> yay, a couple of lines
22:48 <@minus> post code pls
22:48 <@matricks> not yet, it's full of.. of... dragons...
